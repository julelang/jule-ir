// Auto generated by JuleC.
// JuleC version: jule0.0.10 @master
// Date: 29/3/2024 12.43 (DD/MM/YYYY) (HH.MM) UTC
//
// Recommended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <time.h>
#include "std/jule/integrated/integrated.hpp"                                   

struct _1ad4acc28_Reader {};
struct _1ad4ad234_Writer {};
struct _1ad4ad94e_WriterCloser {};
struct _1ad4ae323_Stream {};
struct _1ad370aca_Importer {};
struct _1ad4293e2_Kind {};
struct _1ad447256_Lookup {};
struct _1adb3d8d6_CommonFlag {};

struct _1a9003ce5_FoldPair;


struct _1a9004389_CaseRange;


struct _1a90048d9_Range16;


struct _1a9004e7d_Range32;


struct _1a90054cd_RangeTable;


struct _1a90b812e_accept_range;


struct _1a90c439e_LazyBuff;


struct _1e7acc7c5_DirEntry;


struct _1e7acca6c_Directory;


struct _1e7ace882_File;


struct _1e7ad1b09_Status;


struct _1a92dee05_Cmd;


struct _1a92a31c6_Log;


struct _1ab005531_Token;


struct _1ab00b67a_File;


struct _1ab00dda8_KindPair;


struct _1ab0156d9_Lex;


struct _1aae013a5_Ast;


struct _1aaea458a_NamespaceTypeDecl;


struct _1aada98ad_SptrTypeDecl;


struct _1aae7e367_SlcTypeDecl;


struct _1aade33db_TupleTypeDecl;


struct _1aae087db_PtrTypeDecl;


struct _1b4ae977b_ArrTypeDecl;


struct _1aadb4d4c_MapTypeDecl;


struct _1aadb506c_RetTypeDecl;


struct _1aadb56cc_TupleExpr;


struct _1ab01aa52_CastExpr;


struct _1ab022031_Conditional;


struct _1ab5554ba_FileInfo;


struct _1ab5556da_PackageInfo;


struct _1ab557c92_Stmt;


struct _1ab558743_ScopeParser;


struct _1ab56c4c1_CallData;


struct _1ab56dc20_ExprBuilder;


struct _1ab5804c3_Parser;


struct _1ab594a8c_TypeBuilder;


struct _1acee76b9_FloatInfo;


struct _1aca822a9_DecimalSlice;


struct _1ad256780_LeftCheat;


struct _1ad2569a0_Decimal;


struct _1ad2c1d8e_Const;


struct _1ad4ab7a4_FileStream;


struct _1ad4ae6db_ByteStream;


struct _1ad4b229e_Scanner;


struct _1ac65ee31_Operators;


struct _1ac663a06_FieldIns;


struct _1ac666663_OperandExprModel;


struct _1ac6675ed_StructArgExprModel;


struct _1ac667a4e_StructLitExprModel;


struct _1ac667e39_AllocStructLitExprModel;


struct _1ac66949b_SliceExprModel;


struct _1ac669e4c_AnonFnExprModel;


struct _1ac66a39d_KeyValPairExprModel;


struct _1ac66a8ed_MapExprModel;


struct _1ac66c669_StructStaticIdentExprModel;


struct _1ac66ca98_ArrayExprModel;


struct _1ac66cdea_CommonIdentExprModel;


struct _1ac66d912_TupleExprModel;


struct _1ac66ddeb_BuiltinOutCallExprModel;


struct _1ac66e3b3_BuiltinOutlnCallExprModel;


struct _1ac66e77b_BuiltinCloneCallExprModel;


struct _1ac66ec43_BuiltinNewCallExprModel;


struct _1ac670d87_BuiltinMakeCallExprModel;


struct _1ac67134e_BuiltinAppendCallExprModel;


struct _1ac671816_BuiltinErrorCallExprModel;


struct _1ac671b46_SizeofExprModel;


struct _1ac6722ea_AlignofExprModel;


struct _1ac6725b4_RuneExprModel;


struct _1ac672927_IntegratedToStrExprModel;


struct _1ac672d56_BackendEmitExprModel;


struct _1ac6731a8_FreeExprModel;


struct _1ac674385_RetType;


struct _1ac67939b_ParamIns;


struct _1ac67a501_FnIns;


struct _1ac67de2d_ReferenceStack;


struct _1ac684a05_SymbolBuilder;


struct _1ac76d3b3_Impl;


struct _1ad33ce0a_Scope;


struct _1ad35596c_If;


struct _1ad355b8c_Else;


struct _1ad355dac_Conditional;


struct _1ad3560cc_InfIter;


struct _1ad3562ec_WhileIter;


struct _1ad35651c_RangeIter;


struct _1ad35673c_ContSt;


struct _1ad35695c_BreakSt;


struct _1ad356b7c_Label;


struct _1ad356d9c_GotoSt;


struct _1ad3570bc_Postfix;


struct _1ad35750c_MultiAssign;


struct _1ad35772c_Match;


struct _1ad357b7d_Case;


struct _1ad357d9d_FallSt;


struct _1ad3580bd_RetSt;


struct _1ad35850d_ScopeGoto;


struct _1ad35872d_ScopeChecker;


struct _1ad36b9b6_DirectiveChecker;


struct _1ad376b8b_Package;


struct _1ad37cd5c_Sema;


struct _1ad39a9d4_MissingRetChecker;


struct _1ad39cc28_IterRelation;


struct _1ad39eb4d_FuncPattern;


struct _1ad3daa57_RangeChecker;


struct _1ad3e062d_SymbolTable;


struct _1ad3e6975_Data;


struct _1ad3e7c84_Value;


struct _1ad3e89cc_Eval;


struct _1ad4192d3_UnaryEval;


struct _1ad429931_TypeKind;


struct _1ad42e293_TypeSymbol;


struct _1ad42ec99_Prim;


struct _1ad433b05_Sptr;


struct _1ad4346d8_Slc;


struct _1ad435354_Tuple;


struct _1ad4360be_Map;


struct _1ad436da0_Arr;


struct _1ad437983_Ptr;


struct _1ad43a6de_Referencer;


struct _1b4ae5da4_CompileInfo;


struct _1aad97e40_DirectiveEval;


struct _1e6bde1ac_JuleImporter;


struct _1e6c44d4a_OrderedDefines;


struct _1e6c2a704_DefineOrderer;


struct _1abb20799_ScopeDeadCode;


struct _1abb38c02_AnsiEscape;


struct _1abb47b78_Logger;


struct _1ada69a65_UnsafeBinopExprModel;


struct _1ada69d2e_UnsafeIndexingExprModel;


struct _1ada6a192_PushToSliceExprModel;


struct _1ada6ab65_StrInsertBeginExprModel;


struct _1ada6c1b6_ScopeOptimizer;


struct _1ada73794_ExprOptimizer;


struct _1ada7bb65_Optimizer;


struct _1adadede8_AbsTime;


struct _1adae069b_Time;


struct _1adae2add_Duration;


struct _1ad921b81_TestCoder;


struct _1ad978c1b_ScopeCoder;


struct _1ada27627_ExprCoder;


struct _1ada8a833_DeriveCoder;


struct _1ada8c6e2_IdentCoder;


struct _1adac2abd_SerializationInfo;


struct _1adaa29c1_TraitHash;


struct _1adb00821_CustomType;


struct _1adb0138d_TypeCoder;


struct _1adb3dcd2_Flag_0;

struct _1adb3dcd2_Flag_1;

struct _1adb3dcd2_Flag_2;

struct _1adb3dcd2_Flag_3;

struct _1adb3dcd2_Flag_4;


struct _1adb40256_FlagSet;


struct _1ac724545_Enum;


struct _1ab02561c_StructDecl;


struct _1ab025b6c_TraitDecl;


struct _1ab0261bc_Impl;


struct _1aaec9b87_IdentTypeDecl;


struct _1aadb528c_Expr;


struct _1aadb54ac_UseExpr;


struct _1aae02ad2_Node;


struct _1aadb5b2d_LitExpr;


struct _1aadb5d4d_UnsafeExpr;


struct _1ab57b38c_AssignInfo;


struct _1aadb606d_CoExpr;


struct _1aadb628d_IdentExpr;


struct _1aadb64ad_UnaryExpr;


struct _1ad3572dc_Assign;


struct _1aadb66cd_VariadicExpr;


struct _1aaeaeb7d_Directive;


struct _1ab01ac72_NsSelectionExpr;


struct _1ab01ae92_SubIdentExpr;


struct _1ab01b1b2_BinopExpr;


struct _1ad3582dd_ScopeLabel;


struct _1ab01b3d2_FnCallExpr;


struct _1ab01b602_FieldExprPair;


struct _1ac65ca77_Field;


struct _1ad3736b0_ImportInfo;


struct _1ab01b822_StructLit;


struct _1ac661075_Struct;


struct _1ab01ba42_BraceLit;


struct _1ac664551_StructIns;


struct _1ad39e037_Var;


struct _1ab01bc62_KeyValPair;


struct _1ad3cd84c_TypeCompatibilityChecker;


struct _1ad3d019a_AssignTypeChecker;


struct _1ad3d1e6b_DynamicTypeAnnotation;


struct _1ad3d55e0_FnCallArgChecker;


struct _1ad3d8846_StructLitChecker;


struct _1ac666c07_BinopExprModel;


struct _1ad3dd3b7_RetTypeChecker;


struct _1ac667158_UnaryExprModel;


struct _1ab01be82_SliceExpr;


struct _1aadb58ec_IndexingExpr;


struct _1ab01c625_SlicingExpr;


struct _1ac668566_CastingExprModel;


struct _1ad41b604_BinaryEval;


struct _1ad428996_TypeAlias;


struct _1ac66904a_FnCallExprModel;


struct _1ab01c845_GenericDecl;


struct _1ac6699eb_IndexingExprModel;


struct _1ab01ca65_LabelSt;


struct _1ab01cc85_GotoSt;


struct _1ab01cea5_FallSt;


struct _1ac66b04c_SlicingExprModel;


struct _1ac66b69b_TraitSubIdentExprModel;


struct _1ac66c0a3_StructSubIdentExprModel;


struct _1ab01d1c5_AssignLeft;


struct _1ad43b635_TypeChecker;


struct _1ab01d3e5_AssignSt;


struct _1ab01d615_ScopeTree;


struct _1ac66d5d2_CommonSubIdentExprModel;


struct _1e6be526d_IR;


struct _1ab01d835_ParamDecl;


struct _1ab01da55_FnDecl;


struct _1ab01e6d2_VarDecl;


struct _1ab01ea45_RetSt;


struct _1ab020040_Iter;


struct _1ac67020a_BuiltinPanicCallExprModel;


struct _1ac6707c1_BuiltinAssertCallExprModel;


struct _1ab0205b2_WhileKind;


struct _1ada6a67b_MutSlicingExprModel;


struct _1ab020bcd_RangeKind;


struct _1ab021041_BreakSt;


struct _1ab0213a4_ContSt;


struct _1ab0217b1_If;


struct _1ab021b24_Else;


struct _1aae075dc_TypeDecl;


struct _1ab02262a_TypeAliasDecl;


struct _1ab022a37_Case;


struct _1ab023131_MatchCase;


struct _1ac674bd2_Param;


struct _1ac676a08_Fn;


struct _1ab0237c4_UseDecl;


struct _1ab023bd1_EnumItemDecl;


struct _1ab0245c7_EnumDecl;


struct _1adaa65b8_ObjectCoder;


struct _1ac68055b_Pass;


struct _1ab024d36_FieldDecl;


struct _1ac85d096_Trait;


struct _1ac692a57_EnumItem;


struct _1adb43215_ArgParser;

struct _1a9003ce5_FoldPair {
	jule::U16 _field_from = jule::U16();
	jule::U16 _field_to = jule::U16();


	_1a9003ce5_FoldPair(jule::U16 __param_from, jule::U16 __param_to): _field_from(__param_from), _field_to(__param_to) {}

	

	_1a9003ce5_FoldPair(void) = default;

	inline bool operator==(_1a9003ce5_FoldPair _other) {
		return 
			this->_field_from == _other._field_from &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1a9003ce5_FoldPair _other) { return !this->operator==(_other); }


};
struct _1a9004389_CaseRange {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::Array<jule::I32,3> _field_delta = jule::Array<jule::I32,3>();


	_1a9004389_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta): _field_lo(__param_lo), _field_hi(__param_hi), _field_delta(__param_delta) {}

	

	_1a9004389_CaseRange(void) = default;

	inline bool operator==(_1a9004389_CaseRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_delta == _other._field_delta;
	}

	inline bool operator!=(_1a9004389_CaseRange _other) { return !this->operator==(_other); }


};
struct _1a90048d9_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();


	_1a90048d9_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1a90048d9_Range16(void) = default;

	inline bool operator==(_1a90048d9_Range16 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_1a90048d9_Range16 _other) { return !this->operator==(_other); }


};
struct _1a9004e7d_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();


	_1a9004e7d_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1a9004e7d_Range32(void) = default;

	inline bool operator==(_1a9004e7d_Range32 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_1a9004e7d_Range32 _other) { return !this->operator==(_other); }


};
struct _1a90054cd_RangeTable {
	jule::Slice<_1a90048d9_Range16> _field_r16 = jule::Slice<_1a90048d9_Range16>();
	jule::Slice<_1a9004e7d_Range32> _field_r32 = jule::Slice<_1a9004e7d_Range32>();
	jule::I64 _field_latin_offset = jule::I64();


	_1a90054cd_RangeTable(jule::Slice<_1a90048d9_Range16> __param_r16, jule::Slice<_1a9004e7d_Range32> __param_r32, jule::I64 __param_latin_offset): _field_r16(__param_r16), _field_r32(__param_r32), _field_latin_offset(__param_latin_offset) {}

	

	_1a90054cd_RangeTable(void) = default;

	inline bool operator==(_1a90054cd_RangeTable _other) {
		return 
			this->_field_r16 == _other._field_r16 &&
			this->_field_r32 == _other._field_r32 &&
			this->_field_latin_offset == _other._field_latin_offset;
	}

	inline bool operator!=(_1a90054cd_RangeTable _other) { return !this->operator==(_other); }


};
struct _1a90b812e_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();


	_1a90b812e_accept_range(jule::U8 __param_lo, jule::U8 __param_hi): _field_lo(__param_lo), _field_hi(__param_hi) {}

	

	_1a90b812e_accept_range(void) = default;

	inline bool operator==(_1a90b812e_accept_range _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1a90b812e_accept_range _other) { return !this->operator==(_other); }


};
inline jule::U8 _1a90c48bb_index(_1a90c439e_LazyBuff*,jule::I64);
inline void _1a90c4bda_append(_1a90c439e_LazyBuff*,jule::U8);
inline jule::Str _1a90c4eb5_string(_1a90c439e_LazyBuff*);
struct _1a90c439e_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_vol_and_path = jule::Str();
	jule::I64 _field_vol_len = jule::I64();


	_1a90c439e_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::I64 __param_w, jule::Str __param_vol_and_path, jule::I64 __param_vol_len): _field_path(__param_path), _field_buff(__param_buff), _field_w(__param_w), _field_vol_and_path(__param_vol_and_path), _field_vol_len(__param_vol_len) {}

	

	_1a90c439e_LazyBuff(void) = default;

	inline bool operator==(_1a90c439e_LazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_vol_and_path == _other._field_vol_and_path &&
			this->_field_vol_len == _other._field_vol_len;
	}

	inline bool operator!=(_1a90c439e_LazyBuff _other) { return !this->operator==(_other); }


};
struct _1e7acc7c5_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_1e7ad1b09_Status> _field_stat = jule::Ptr<_1e7ad1b09_Status>();


	_1e7acc7c5_DirEntry(jule::Str __param_name, jule::Ptr<_1e7ad1b09_Status> __param_stat): _field_name(__param_name), _field_stat(__param_stat) {}

	

	_1e7acc7c5_DirEntry(void) = default;

	inline bool operator==(_1e7acc7c5_DirEntry _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_stat == _other._field_stat;
	}

	inline bool operator!=(_1e7acc7c5_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_1e7acc7c5_DirEntry>>> static__1a90c955d_read(jule::Str);
inline jule::VoidExceptional static__1a90c97d3_create(jule::Str);
inline jule::VoidExceptional static__1a90c9a58_remove(jule::Str);
struct _1e7acca6c_Directory {
	

	_1e7acca6c_Directory(void) = default;

	inline bool operator==(_1e7acca6c_Directory _other) { return true; }

	inline bool operator!=(_1e7acca6c_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_1e7ace882_File>> static__1e7acb5c6_open(jule::Str,jule::I64,jule::I64);
inline jule::VoidExceptional static__1e7acb84b_remove(jule::Str);
inline jule::Exceptional<jule::I64> _1e7acbd02_write(_1e7ace882_File*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1e7acc1a9_read(_1e7ace882_File*,jule::Slice<jule::U8>);
inline jule::Ptr<_1e7ace882_File> static__1e7aced49_new(jule::U64);
inline jule::Exceptional<jule::Ptr<_1e7ace882_File>> static__1e7ad0157_create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1e7ad0465_read(jule::Str);
inline jule::VoidExceptional static__1e7ad0894_write(jule::Str,jule::Slice<jule::U8>,jule::I64);
inline jule::Exceptional<jule::I64> _1e7ad0e27_seek(_1e7ace882_File*,jule::I64,jule::I64);
inline jule::VoidExceptional _1e7ad1169_close(_1e7ace882_File*);
struct _1e7ace882_File {
	jule::U64 _field_handle = jule::U64();


	_1e7ace882_File(jule::U64 __param_handle): _field_handle(__param_handle) {}

	

	_1e7ace882_File(void) = default;

	inline bool operator==(_1e7ace882_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1e7ace882_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_1e7ad1b09_Status>> static__1e7acd364_of(jule::Str);
inline jule::Bool _1e7ad206b_is_dir(_1e7ad1b09_Status*);
inline jule::Bool _1e7ad2346_is_reg(_1e7ad1b09_Status*);
struct _1e7ad1b09_Status {
	jule::U64 _field_mode = jule::U64();
	jule::U64 _field_size = jule::U64();


	_1e7ad1b09_Status(jule::U64 __param_mode, jule::U64 __param_size): _field_mode(__param_mode), _field_size(__param_size) {}

	

	_1e7ad1b09_Status(void) = default;

	inline bool operator==(_1e7ad1b09_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1e7ad1b09_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a92dee05_Cmd> static__1a92e039a_new(jule::Str);
inline jule::Exceptional<jule::I64> _1a92e0675_spawn(_1a92dee05_Cmd*);
inline jule::Exceptional<jule::I64> _1a92e38a9___spawn(_1a92dee05_Cmd*);
struct _1a92dee05_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();


	_1a92dee05_Cmd(jule::Str __param_path, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_env): _field_path(__param_path), _field_args(__param_args), _field_env(__param_env) {}

	

	_1a92dee05_Cmd(void) = default;

	inline bool operator==(_1a92dee05_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_args == _other._field_args &&
			this->_field_env == _other._field_env;
	}

	inline bool operator!=(_1a92dee05_Cmd _other) { return !this->operator==(_other); }


};
struct _1a92a31c6_Log {
	jule::I64 _field_kind = 0LL;
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();


	_1a92a31c6_Log(jule::I64 __param_kind, jule::I64 __param_row, jule::I64 __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion): _field_kind(__param_kind), _field_row(__param_row), _field_column(__param_column), _field_path(__param_path), _field_text(__param_text), _field_line(__param_line), _field_suggestion(__param_suggestion) {}

	

	_1a92a31c6_Log(void) = default;

	inline bool operator==(_1a92a31c6_Log _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_path == _other._field_path &&
			this->_field_text == _other._field_text &&
			this->_field_line == _other._field_line &&
			this->_field_suggestion == _other._field_suggestion;
	}

	inline bool operator!=(_1a92a31c6_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1ab005982_prec(_1ab005531_Token*);
struct _1ab005531_Token {
	jule::Ptr<_1ab00b67a_File> _field_file = jule::Ptr<_1ab00b67a_File>();
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_kind = jule::Str();
	jule::U64 _field_id = 0LLU;


	_1ab005531_Token(jule::Ptr<_1ab00b67a_File> __param_file, jule::I64 __param_row, jule::I64 __param_column, jule::Str __param_kind, jule::U64 __param_id): _field_file(__param_file), _field_row(__param_row), _field_column(__param_column), _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1ab005531_Token(void) = default;

	inline bool operator==(_1ab005531_Token _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1ab005531_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab00baed_is_ok(_1ab00b67a_File*);
inline void _1ab00be1c_fill(_1ab00b67a_File*,jule::Slice<jule::U8>);
inline jule::Str _1ab00c1e7_dir(_1ab00b67a_File*);
inline jule::Str _1ab00c4c2_name(_1ab00b67a_File*);
inline jule::U64 _1ab00c79c_addr(_1ab00b67a_File*);
inline jule::Str _1ab00cb54_get_row(_1ab00b67a_File*,jule::I64);
struct _1ab00b67a_File {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Slice<_1ab005531_Token> _field_tokens = jule::Slice<_1ab005531_Token>();


	_1ab00b67a_File(jule::Str __param_path, jule::Slice<jule::U8> __param_data, jule::Slice<_1ab005531_Token> __param_tokens): _field_path(__param_path), _field_data(__param_data), _field_tokens(__param_tokens) {}

	

	_1ab00b67a_File(void) = default;

	inline bool operator==(_1ab00b67a_File _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_data == _other._field_data &&
			this->_field_tokens == _other._field_tokens;
	}

	inline bool operator!=(_1ab00b67a_File _other) { return !this->operator==(_other); }


};
struct _1ab00dda8_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;


	_1ab00dda8_KindPair(jule::Str __param_kind, jule::U64 __param_id): _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1ab00dda8_KindPair(void) = default;

	inline bool operator==(_1ab00dda8_KindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1ab00dda8_KindPair _other) { return !this->operator==(_other); }


};
inline void _1ab015d5a_push_err(_1ab0156d9_Lex*,jule::Str,jule::Slice<jule::Any>);
inline void _1ab016256_push_err_tok(_1ab0156d9_Lex*,_1ab005531_Token&,jule::Str);
inline void _1ab016498_lex(_1ab0156d9_Lex*);
inline jule::Str _1ab016850_id(_1ab0156d9_Lex*,jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1ab016b2a_resume(_1ab0156d9_Lex*);
inline void _1ab016e49_lex_line_comment(_1ab0156d9_Lex*,_1ab005531_Token&);
inline void _1ab017268_lex_range_comment(_1ab0156d9_Lex*,_1ab005531_Token&);
inline jule::Str _1ab017620_num(_1ab0156d9_Lex*,jule::Slice<jule::U8>&);
inline jule::Str _1ab0179c7_escape_seq(_1ab0156d9_Lex*,jule::Slice<jule::U8>&);
inline jule::Str _1ab017e5b_get_rune(_1ab0156d9_Lex*,jule::Slice<jule::U8>&,jule::Bool);
inline jule::Str _1ab018313_lex_rune(_1ab0156d9_Lex*,jule::Slice<jule::U8>&);
inline jule::Str _1ab0185dd_lex_str(_1ab0156d9_Lex*);
inline jule::Bool _1ab0188b8_is_first_token_of_line(_1ab0156d9_Lex*);
inline void _1ab018b0a_new_line(_1ab0156d9_Lex*);
inline jule::Bool _1ab019248_is_op(_1ab0156d9_Lex*,jule::Slice<jule::U8>&,jule::Str,jule::U64,_1ab005531_Token&);
inline jule::Bool _1ab0196cc_lex_basic_ops(_1ab0156d9_Lex*,jule::Slice<jule::U8>,_1ab005531_Token&);
inline jule::Bool _1ab019b61_lex_id(_1ab0156d9_Lex*,jule::Slice<jule::U8>&,_1ab005531_Token&);
inline jule::Bool _1ab01a0e5_lex_num(_1ab0156d9_Lex*,jule::Slice<jule::U8>&,_1ab005531_Token&);
inline _1ab005531_Token _1ab01a3c0_token(_1ab0156d9_Lex*);
struct _1ab0156d9_Lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<_1ab005531_Token> _field_tokens = jule::Slice<_1ab005531_Token>();
	jule::Ptr<_1ab00b67a_File> _field_file = jule::Ptr<_1ab00b67a_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_1a92a31c6_Log> _field_errors = jule::Slice<_1a92a31c6_Log>();


	_1ab0156d9_Lex(jule::I64 __param_mode, jule::Slice<_1ab005531_Token> __param_tokens, jule::Ptr<_1ab00b67a_File> __param_file, jule::I64 __param_pos, jule::I64 __param_column, jule::I64 __param_row, jule::Slice<_1a92a31c6_Log> __param_errors): _field_mode(__param_mode), _field_tokens(__param_tokens), _field_file(__param_file), _field_pos(__param_pos), _field_column(__param_column), _field_row(__param_row), _field_errors(__param_errors) {}

	

	_1ab0156d9_Lex(void) = default;

	inline bool operator==(_1ab0156d9_Lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1ab0156d9_Lex _other) { return !this->operator==(_other); }


};
struct _1aae013a5_Ast {
	jule::Ptr<_1ab00b67a_File> _field_file = jule::Ptr<_1ab00b67a_File>();
	jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>();
	jule::Slice<jule::Ptr<_1ab0237c4_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_1ab0237c4_UseDecl>>();
	jule::Slice<_1aae02ad2_Node> _field_nodes = jule::Slice<_1aae02ad2_Node>();


	_1aae013a5_Ast(jule::Ptr<_1ab00b67a_File> __param_file, jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>> __param_top_directives, jule::Slice<jule::Ptr<_1ab0237c4_UseDecl>> __param_use_decls, jule::Slice<_1aae02ad2_Node> __param_nodes): _field_file(__param_file), _field_top_directives(__param_top_directives), _field_use_decls(__param_use_decls), _field_nodes(__param_nodes) {}

	

	_1aae013a5_Ast(void) = default;

	inline bool operator==(_1aae013a5_Ast _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_top_directives == _other._field_top_directives &&
			this->_field_use_decls == _other._field_use_decls &&
			this->_field_nodes == _other._field_nodes;
	}

	inline bool operator!=(_1aae013a5_Ast _other) { return !this->operator==(_other); }


};
struct _1aaea458a_NamespaceTypeDecl {
	jule::Slice<_1ab005531_Token> _field_idents = jule::Slice<_1ab005531_Token>();
	jule::Ptr<_1aaec9b87_IdentTypeDecl> _field_kind = jule::Ptr<_1aaec9b87_IdentTypeDecl>();


	_1aaea458a_NamespaceTypeDecl(jule::Slice<_1ab005531_Token> __param_idents, jule::Ptr<_1aaec9b87_IdentTypeDecl> __param_kind): _field_idents(__param_idents), _field_kind(__param_kind) {}

	

	_1aaea458a_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1aaea458a_NamespaceTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1aaea458a_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aada98ad_SptrTypeDecl {
	jule::Ptr<_1aae075dc_TypeDecl> _field_elem = jule::Ptr<_1aae075dc_TypeDecl>();


	_1aada98ad_SptrTypeDecl(jule::Ptr<_1aae075dc_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1aada98ad_SptrTypeDecl(void) = default;

	inline bool operator==(_1aada98ad_SptrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1aada98ad_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aae7e367_SlcTypeDecl {
	jule::Ptr<_1aae075dc_TypeDecl> _field_elem = jule::Ptr<_1aae075dc_TypeDecl>();


	_1aae7e367_SlcTypeDecl(jule::Ptr<_1aae075dc_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1aae7e367_SlcTypeDecl(void) = default;

	inline bool operator==(_1aae7e367_SlcTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1aae7e367_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aade33db_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>>();


	_1aade33db_TupleTypeDecl(jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>> __param_types): _field_types(__param_types) {}

	

	_1aade33db_TupleTypeDecl(void) = default;

	inline bool operator==(_1aade33db_TupleTypeDecl _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1aade33db_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aaecbc55_is_unsafe(_1aae087db_PtrTypeDecl*);
struct _1aae087db_PtrTypeDecl {
	jule::Ptr<_1aae075dc_TypeDecl> _field_elem = jule::Ptr<_1aae075dc_TypeDecl>();


	_1aae087db_PtrTypeDecl(jule::Ptr<_1aae075dc_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1aae087db_PtrTypeDecl(void) = default;

	inline bool operator==(_1aae087db_PtrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1aae087db_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aaece3ea_auto_sized(_1b4ae977b_ArrTypeDecl*);
struct _1b4ae977b_ArrTypeDecl {
	jule::Ptr<_1aae075dc_TypeDecl> _field_elem = jule::Ptr<_1aae075dc_TypeDecl>();
	jule::Ptr<_1aadb528c_Expr> _field_size = jule::Ptr<_1aadb528c_Expr>();


	_1b4ae977b_ArrTypeDecl(jule::Ptr<_1aae075dc_TypeDecl> __param_elem, jule::Ptr<_1aadb528c_Expr> __param_size): _field_elem(__param_elem), _field_size(__param_size) {}

	

	_1b4ae977b_ArrTypeDecl(void) = default;

	inline bool operator==(_1b4ae977b_ArrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1b4ae977b_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aadb4d4c_MapTypeDecl {
	jule::Ptr<_1aae075dc_TypeDecl> _field_key = jule::Ptr<_1aae075dc_TypeDecl>();
	jule::Ptr<_1aae075dc_TypeDecl> _field_val = jule::Ptr<_1aae075dc_TypeDecl>();


	_1aadb4d4c_MapTypeDecl(jule::Ptr<_1aae075dc_TypeDecl> __param_key, jule::Ptr<_1aae075dc_TypeDecl> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1aadb4d4c_MapTypeDecl(void) = default;

	inline bool operator==(_1aadb4d4c_MapTypeDecl _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1aadb4d4c_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aadb506c_RetTypeDecl {
	jule::Ptr<_1aae075dc_TypeDecl> _field_kind = jule::Ptr<_1aae075dc_TypeDecl>();
	jule::Slice<_1ab005531_Token> _field_idents = jule::Slice<_1ab005531_Token>();


	_1aadb506c_RetTypeDecl(jule::Ptr<_1aae075dc_TypeDecl> __param_kind, jule::Slice<_1ab005531_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1aadb506c_RetTypeDecl(void) = default;

	inline bool operator==(_1aadb506c_RetTypeDecl _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1aadb506c_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aadb56cc_TupleExpr {
	jule::Slice<jule::Ptr<_1aadb528c_Expr>> _field_expr = jule::Slice<jule::Ptr<_1aadb528c_Expr>>();


	_1aadb56cc_TupleExpr(jule::Slice<jule::Ptr<_1aadb528c_Expr>> __param_expr): _field_expr(__param_expr) {}

	

	_1aadb56cc_TupleExpr(void) = default;

	inline bool operator==(_1aadb56cc_TupleExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aadb56cc_TupleExpr _other) { return !this->operator==(_other); }


};
struct _1ab01aa52_CastExpr {
	jule::Ptr<_1aae075dc_TypeDecl> _field_kind = jule::Ptr<_1aae075dc_TypeDecl>();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();


	_1ab01aa52_CastExpr(jule::Ptr<_1aae075dc_TypeDecl> __param_kind, jule::Ptr<_1aadb528c_Expr> __param_expr): _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1ab01aa52_CastExpr(void) = default;

	inline bool operator==(_1ab01aa52_CastExpr _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ab01aa52_CastExpr _other) { return !this->operator==(_other); }


};
struct _1ab022031_Conditional {
	jule::Ptr<_1ab0217b1_If> _field_head = jule::Ptr<_1ab0217b1_If>();
	jule::Slice<jule::Ptr<_1ab0217b1_If>> _field_tail = jule::Slice<jule::Ptr<_1ab0217b1_If>>();
	jule::Ptr<_1ab021b24_Else> _field_default = jule::Ptr<_1ab021b24_Else>();


	_1ab022031_Conditional(jule::Ptr<_1ab0217b1_If> __param_head, jule::Slice<jule::Ptr<_1ab0217b1_If>> __param_tail, jule::Ptr<_1ab021b24_Else> __param_default): _field_head(__param_head), _field_tail(__param_tail), _field_default(__param_default) {}

	

	_1ab022031_Conditional(void) = default;

	inline bool operator==(_1ab022031_Conditional _other) {
		return 
			this->_field_head == _other._field_head &&
			this->_field_tail == _other._field_tail &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1ab022031_Conditional _other) { return !this->operator==(_other); }


};
struct _1ab5554ba_FileInfo {
	jule::Ptr<_1aae013a5_Ast> _field_ast = jule::Ptr<_1aae013a5_Ast>();
	jule::Slice<_1a92a31c6_Log> _field_errors = jule::Slice<_1a92a31c6_Log>();


	_1ab5554ba_FileInfo(jule::Ptr<_1aae013a5_Ast> __param_ast, jule::Slice<_1a92a31c6_Log> __param_errors): _field_ast(__param_ast), _field_errors(__param_errors) {}

	

	_1ab5554ba_FileInfo(void) = default;

	inline bool operator==(_1ab5554ba_FileInfo _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1ab5554ba_FileInfo _other) { return !this->operator==(_other); }


};
struct _1ab5556da_PackageInfo {
	jule::Slice<jule::Ptr<_1ab5554ba_FileInfo>> _field_files = jule::Slice<jule::Ptr<_1ab5554ba_FileInfo>>();


	_1ab5556da_PackageInfo(jule::Slice<jule::Ptr<_1ab5554ba_FileInfo>> __param_files): _field_files(__param_files) {}

	

	_1ab5556da_PackageInfo(void) = default;

	inline bool operator==(_1ab5556da_PackageInfo _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1ab5556da_PackageInfo _other) { return !this->operator==(_other); }


};
struct _1ab557c92_Stmt {
	jule::Slice<_1ab005531_Token> _field_tokens = jule::Slice<_1ab005531_Token>();
	jule::Bool _field_terminated = jule::Bool();


	_1ab557c92_Stmt(jule::Slice<_1ab005531_Token> __param_tokens, jule::Bool __param_terminated): _field_tokens(__param_tokens), _field_terminated(__param_terminated) {}

	

	_1ab557c92_Stmt(void) = default;

	inline bool operator==(_1ab557c92_Stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1ab557c92_Stmt _other) { return !this->operator==(_other); }


};
inline void _1ab558e3b_stop(_1ab558743_ScopeParser*);
inline jule::Bool _1ab559216_stopped(_1ab558743_ScopeParser*);
inline jule::Bool _1ab5594e1_finished(_1ab558743_ScopeParser*);
inline jule::Bool _1ab5597bb_is_last_st(_1ab558743_ScopeParser*);
inline void _1ab559bb7_push_err(_1ab558743_ScopeParser*,_1ab005531_Token,jule::Str);
inline void _1ab55a0b3_push_suggestion(_1ab558743_ScopeParser*,jule::Str,jule::Slice<jule::Any>);
inline void _1ab55a3d2_insert_as_next(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab557c92_Stmt> _1ab55a6ac_next(_1ab558743_ScopeParser*);
inline jule::Ptr<_1ab01d615_ScopeTree> _1ab55ab41_build_scope(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&,_1ab005531_Token);
inline jule::Any _1ab55aee8_build_var_st(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline jule::Any _1ab55b3a0_build_ret_st(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>);
inline jule::Any _1ab55b757_build_while_next_iter(_1ab558743_ScopeParser*,jule::Ptr<_1ab557c92_Stmt>&);
inline jule::Ptr<_1ab0205b2_WhileKind> _1ab55bb0e_build_while_iter_kind(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline jule::Slice<jule::Slice<_1ab005531_Token>> _1ab55c00a_get_range_kind_keys_tokens(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab01e6d2_VarDecl> _1ab55c3a1_build_range_kind_key(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline jule::Slice<jule::Ptr<_1ab01e6d2_VarDecl>> _1ab562609_build_range_kind_keys(_1ab558743_ScopeParser*,jule::Slice<jule::Slice<_1ab005531_Token>>&);
inline void _1ab562a05_setup_range_kind_keys_plain(_1ab558743_ScopeParser*,jule::Ptr<_1ab020bcd_RangeKind>&,jule::Slice<_1ab005531_Token>&);
inline void _1ab562e34_setup_range_kind_keys_explicit(_1ab558743_ScopeParser*,jule::Ptr<_1ab020bcd_RangeKind>&,jule::Slice<_1ab005531_Token>&);
inline void _1ab56331e_setup_range_kind_keys(_1ab558743_ScopeParser*,jule::Ptr<_1ab020bcd_RangeKind>&,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab020bcd_RangeKind> _1ab563880_build_range_iter_kind(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&,jule::Slice<_1ab005531_Token>&,_1ab005531_Token&);
inline jule::Any _1ab563d14_build_common_iter_kind(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&,_1ab005531_Token&);
inline jule::Any _1ab5641bb_build_common_iter(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>);
inline jule::Any _1ab564573_buid_iter_st(_1ab558743_ScopeParser*,jule::Ptr<_1ab557c92_Stmt>&);
inline jule::Any _1ab56492a_build_break_st(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline jule::Any _1ab564cd2_build_cont_st(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab0217b1_If> _1ab565189_build_if(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab021b24_Else> _1ab565541_build_else(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline jule::Any _1ab5658e8_build_if_else_chain(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>);
inline jule::Any _1ab565ca0_build_co_call_st(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>);
inline jule::Any _1ab566157_build_goto_st(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline jule::Any _1ab56650e_build_fall_st(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline jule::Any _1ab5668b6_build_type_alias_st(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline void _1ab566e6b_push_case_expr(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>,_1ab005531_Token,jule::Bool,jule::Slice<jule::Ptr<_1aadb528c_Expr>>&);
inline jule::Slice<jule::Ptr<_1aadb528c_Expr>> _1ab567400_build_case_exprs(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&,jule::Bool);
inline jule::Ptr<_1ab01d615_ScopeTree> _1ab5677a7_build_case_scope(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline std::tuple<jule::Ptr<_1ab022a37_Case>,jule::Bool> _1ab567c3b_build_case(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&,jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1ab022a37_Case>>,jule::Ptr<_1ab021b24_Else>> _1ab5681c0_build_cases(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>,jule::Bool);
inline jule::Ptr<_1ab023131_MatchCase> _1ab568577_build_match_case(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab01d615_ScopeTree> _1ab56892e_build_scope_st(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab01ca65_LabelSt> _1ab568cd6_build_label_st(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline std::tuple<jule::Any,jule::Bool> _1ab56918d_build_id_st(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab57b38c_AssignInfo> _1ab569545_build_assign_info(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab01d1c5_AssignLeft> _1ab5698ec_build_assign_l(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline jule::Slice<jule::Ptr<_1ab01d1c5_AssignLeft>> _1ab569ca4_build_assign_ls(_1ab558743_ScopeParser*,jule::Slice<jule::Slice<_1ab005531_Token>>&);
inline std::tuple<jule::Ptr<_1ab01d3e5_AssignSt>,jule::Bool> _1ab56a15b_build_plain_assign(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline std::tuple<jule::Ptr<_1ab01d3e5_AssignSt>,jule::Bool> _1ab56a513_build_decl_assign(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>);
inline std::tuple<jule::Ptr<_1ab01d3e5_AssignSt>,jule::Bool> _1ab56a8ba_build_assign_st(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline jule::Any _1ab56ac72_build_use_expr(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&);
inline jule::Any _1ab56b129_build_st(_1ab558743_ScopeParser*,jule::Ptr<_1ab557c92_Stmt>&);
inline void _1ab56b525_build(_1ab558743_ScopeParser*,jule::Slice<_1ab005531_Token>&,jule::Ptr<_1ab01d615_ScopeTree>&);
struct _1ab558743_ScopeParser {
	jule::Ptr<_1ab5804c3_Parser> _field_p = jule::Ptr<_1ab5804c3_Parser>();
	jule::Ptr<_1ab01d615_ScopeTree> _field_s = jule::Ptr<_1ab01d615_ScopeTree>();
	jule::Slice<jule::Ptr<_1ab557c92_Stmt>> _field_stmts = jule::Slice<jule::Ptr<_1ab557c92_Stmt>>();
	jule::I64 _field_pos = jule::I64();


	_1ab558743_ScopeParser(jule::Ptr<_1ab5804c3_Parser> __param_p, jule::Ptr<_1ab01d615_ScopeTree> __param_s, jule::Slice<jule::Ptr<_1ab557c92_Stmt>> __param_stmts, jule::I64 __param_pos): _field_p(__param_p), _field_s(__param_s), _field_stmts(__param_stmts), _field_pos(__param_pos) {}

	

	_1ab558743_ScopeParser(void) = default;

	inline bool operator==(_1ab558743_ScopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1ab558743_ScopeParser _other) { return !this->operator==(_other); }


};
struct _1ab56c4c1_CallData {
	jule::Slice<_1ab005531_Token> _field_expr_tokens = jule::Slice<_1ab005531_Token>();
	jule::Slice<_1ab005531_Token> _field_args_tokens = jule::Slice<_1ab005531_Token>();
	jule::Slice<_1ab005531_Token> _field_generics_tokens = jule::Slice<_1ab005531_Token>();


	_1ab56c4c1_CallData(jule::Slice<_1ab005531_Token> __param_expr_tokens, jule::Slice<_1ab005531_Token> __param_args_tokens, jule::Slice<_1ab005531_Token> __param_generics_tokens): _field_expr_tokens(__param_expr_tokens), _field_args_tokens(__param_args_tokens), _field_generics_tokens(__param_generics_tokens) {}

	

	_1ab56c4c1_CallData(void) = default;

	inline bool operator==(_1ab56c4c1_CallData _other) {
		return 
			this->_field_expr_tokens == _other._field_expr_tokens &&
			this->_field_args_tokens == _other._field_args_tokens &&
			this->_field_generics_tokens == _other._field_generics_tokens;
	}

	inline bool operator!=(_1ab56c4c1_CallData _other) { return !this->operator==(_other); }


};
inline void _1ab56e627_push_err(_1ab56dc20_ExprBuilder*,_1ab005531_Token,jule::Str,jule::Slice<jule::Any>);
inline void _1ab56ea23_push_suggestion(_1ab56dc20_ExprBuilder*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_1aadb56cc_TupleExpr> _1ab56edca_build_tuple(_1ab56dc20_ExprBuilder*,jule::Slice<jule::Slice<_1ab005531_Token>>&);
inline jule::Ptr<_1aadb5b2d_LitExpr> _1ab570282_build_lit(_1ab56dc20_ExprBuilder*,_1ab005531_Token);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab570639_build_primitive_type(_1ab56dc20_ExprBuilder*,_1ab005531_Token&);
inline jule::Any _1ab5709e1_build_single(_1ab56dc20_ExprBuilder*,_1ab005531_Token);
inline jule::Ptr<_1aadb628d_IdentExpr> _1ab570d98_build_cpp_linked_ident(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1aadb64ad_UnaryExpr> _1ab571250_build_unary(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab01ae92_SubIdentExpr> _1ab571607_build_obj_sub_ident(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab01ac72_NsSelectionExpr> _1ab5719ae_build_ns_sub_ident(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab571d66_build_type(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline jule::Any _1ab57221d_build_sub_ident(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1aadb66cd_VariadicExpr> _1ab5725c5_build_variadic(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>);
inline jule::Any _1ab57297c_build_op_right(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1aadb528c_Expr> _1ab572d78_build_between_parentheses(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab01aa52_CastExpr> _1ab57321e_try_build_cast(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline void _1ab5736e7_push_arg(_1ab56dc20_ExprBuilder*,jule::Slice<jule::Ptr<_1aadb528c_Expr>>&,jule::Slice<_1ab005531_Token>,_1ab005531_Token);
inline jule::Slice<jule::Ptr<_1aadb528c_Expr>> _1ab573a9e_build_args(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>);
inline jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>> _1ab573e56_build_call_generics(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab01b3d2_FnCallExpr> _1ab5743da_build_fn_call(_1ab56dc20_ExprBuilder*,_1ab005531_Token&,jule::Ptr<_1ab56c4c1_CallData>&);
inline jule::Any _1ab5747d6_build_parentheses_range(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1aadb5d4d_UnsafeExpr> _1ab574b7c_build_unsafe_expr(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab01da55_FnDecl> _1ab575034_build_anon_fn(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline jule::Any _1ab5753db_build_unsafe(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline void _1ab5758b4_push_range_lit_part(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>,_1ab005531_Token,jule::Slice<jule::Slice<_1ab005531_Token>>&);
inline jule::Slice<jule::Slice<_1ab005531_Token>> _1ab575cb0_get_brace_range_lit_expr_parts(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab01b602_FieldExprPair> _1ab576156_build_field_expr_pair(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1aadb528c_Expr> _1ab57650d_build_struct_lit_expr(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline jule::Slice<jule::Ptr<_1aadb528c_Expr>> _1ab5768b5_build_struct_lit_exprs(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab01b822_StructLit> _1ab576cb1_build_typed_struct_literal(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1aadb528c_Expr> _1ab577157_build_brace_lit_part(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab01ba42_BraceLit> _1ab57750e_build_brace_lit(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline jule::Any _1ab5778b6_build_brace_range(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline jule::Slice<jule::Slice<_1ab005531_Token>> _1ab577c6d_get_enumerable_parts(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab01be82_SliceExpr> _1ab578125_build_slice(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1aadb58ec_IndexingExpr> _1ab578686_build_indexing(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>,jule::Slice<_1ab005531_Token>,_1ab005531_Token);
inline jule::Ptr<_1ab01c625_SlicingExpr> _1ab578da1_build_slicing(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&,jule::Slice<_1ab005531_Token>&,jule::I64&,_1ab005531_Token&,_1ab005531_Token);
inline jule::Any _1ab579258_build_bracket_range(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>);
inline jule::Any _1ab579610_build_data(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab01b1b2_BinopExpr> _1ab579a94_build_binop(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&,jule::I64);
inline jule::Any _1ab579e4b_build(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline jule::Any _1ab57a303_build_kind(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1aadb528c_Expr> _1ab57a6aa_build_from_tokens(_1ab56dc20_ExprBuilder*,jule::Slice<_1ab005531_Token>);
struct _1ab56dc20_ExprBuilder {
	jule::Ptr<_1ab5804c3_Parser> _field_p = jule::Ptr<_1ab5804c3_Parser>();


	_1ab56dc20_ExprBuilder(jule::Ptr<_1ab5804c3_Parser> __param_p): _field_p(__param_p) {}

	

	_1ab56dc20_ExprBuilder(void) = default;

	inline bool operator==(_1ab56dc20_ExprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1ab56dc20_ExprBuilder _other) { return !this->operator==(_other); }


};
inline void _1ab580869_stop(_1ab5804c3_Parser*);
inline jule::Bool _1ab580b44_stopped(_1ab5804c3_Parser*);
inline void _1ab58111c_push_err(_1ab5804c3_Parser*,_1ab005531_Token,jule::Str,jule::Slice<jule::Any>);
inline void _1ab581518_push_suggestion(_1ab5804c3_Parser*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_1aadb528c_Expr> _1ab5818c0_build_expr(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1aaeaeb7d_Directive> _1ab581c77_build_directive(_1ab5804c3_Parser*,jule::Slice<_1ab005531_Token>);
inline void _1ab582096_push_directive(_1ab5804c3_Parser*,jule::Ptr<_1aaeaeb7d_Directive>);
inline jule::Ptr<_1ab01d615_ScopeTree> _1ab58252a_build_scope(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&,_1ab005531_Token);
inline std::tuple<jule::Ptr<_1aae075dc_TypeDecl>,jule::Bool> _1ab582a8b___build_type(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&,jule::I64*,jule::Bool);
inline std::tuple<jule::Ptr<_1aae075dc_TypeDecl>,jule::Bool> _1ab5830ec_build_type(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&,jule::I64*,jule::Bool);
inline jule::Ptr<_1ab02262a_TypeAliasDecl> _1ab5834a4_build_type_alias_decl(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&);
inline void _1ab5838e4_build_var_type_and_expr(jule::Ptr<_1ab5804c3_Parser>,jule::Ptr<_1ab01e6d2_VarDecl>&,jule::Slice<_1ab005531_Token>&);
inline void _1ab583cce_build_var_common(jule::Ptr<_1ab5804c3_Parser>,jule::Ptr<_1ab01e6d2_VarDecl>&,jule::Slice<_1ab005531_Token>);
inline void _1ab5842a7_build_var_begin(_1ab5804c3_Parser*,jule::Ptr<_1ab01e6d2_VarDecl>&,jule::Ptr<jule::I64>,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab01e6d2_VarDecl> _1ab58465e_build_var(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab01c845_GenericDecl> _1ab584a16_build_generic(_1ab5804c3_Parser*,jule::Slice<_1ab005531_Token>&);
inline jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>> _1ab584e9a_build_generics(_1ab5804c3_Parser*,jule::Slice<_1ab005531_Token>&,_1ab005531_Token&);
inline jule::Ptr<_1ab01d835_ParamDecl> _1ab585352_build_self_param(_1ab5804c3_Parser*,jule::Slice<_1ab005531_Token>);
inline void _1ab58582a_param_type_begin(_1ab5804c3_Parser*,jule::Ptr<_1ab01d835_ParamDecl>&,jule::I64&,jule::Slice<_1ab005531_Token>&);
inline void _1ab585c26_build_param_type(jule::Ptr<_1ab5804c3_Parser>,jule::Ptr<_1ab01d835_ParamDecl>&,jule::Slice<_1ab005531_Token>&);
inline void _1ab5861ee_build_param_body(jule::Ptr<_1ab5804c3_Parser>,jule::Ptr<_1ab01d835_ParamDecl>&,jule::Ptr<jule::I64>,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab01d835_ParamDecl> _1ab5865a6_build_param(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>);
inline void _1ab5868c5_check_params(_1ab5804c3_Parser*,jule::Slice<jule::Ptr<_1ab01d835_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1ab01d835_ParamDecl>> _1ab586d59_build_params(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&,jule::Bool);
inline std::tuple<jule::Ptr<_1aadb506c_RetTypeDecl>,jule::Bool> _1ab5872dd_build_multi_ret_type(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&,jule::I64&);
inline std::tuple<jule::Ptr<_1aadb506c_RetTypeDecl>,jule::Bool> _1ab587772_build_ret_type(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&,jule::I64&);
inline jule::Ptr<_1ab01da55_FnDecl> _1ab587cd3_build_fn_prototype(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&,jule::I64&,jule::Bool);
inline jule::Ptr<_1ab01da55_FnDecl> _1ab588344_build_fn(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&,jule::Bool,jule::Bool);
inline jule::Slice<_1ab005531_Token> _1ab5886eb_get_use_decl_selectors(_1ab5804c3_Parser*,jule::Slice<_1ab005531_Token>);
inline void _1ab588ae7_build_cpp_use_decl(_1ab5804c3_Parser*,jule::Ptr<_1ab0237c4_UseDecl>&,jule::Slice<_1ab005531_Token>&);
inline void _1ab588ee3_build_std_use_decl(_1ab5804c3_Parser*,jule::Ptr<_1ab0237c4_UseDecl>&,jule::Slice<_1ab005531_Token>);
inline void _1ab5893de_build_ident_use_decl(_1ab5804c3_Parser*,jule::Ptr<_1ab0237c4_UseDecl>&,jule::Slice<_1ab005531_Token>);
inline void _1ab5897da_parse_use_decl(_1ab5804c3_Parser*,jule::Ptr<_1ab0237c4_UseDecl>&,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab0237c4_UseDecl> _1ab589c6e_build_use_decl(_1ab5804c3_Parser*,jule::Slice<_1ab005531_Token>,jule::Bool);
inline jule::Ptr<_1aadb528c_Expr> _1ab58a203_build_enum_item_expr(jule::Ptr<_1ab5804c3_Parser>,jule::Ptr<jule::I64>,jule::Slice<_1ab005531_Token>&);
inline jule::Slice<jule::Ptr<_1ab023bd1_EnumItemDecl>> _1ab58a5aa_build_enum_items(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab0245c7_EnumDecl> _1ab58a962_build_enum_decl(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab024d36_FieldDecl> _1ab58ad19_build_field(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>);
inline jule::Slice<jule::Ptr<_1ab024d36_FieldDecl>> _1ab58b215_build_struct_decl_fields(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab02561c_StructDecl> _1ab58b5ab_build_struct_decl(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&);
inline void _1ab58b8ca_check_method_receiver(_1ab5804c3_Parser*,jule::Ptr<_1ab01da55_FnDecl>&);
inline jule::Slice<jule::Ptr<_1ab01da55_FnDecl>> _1ab58bc82_build_trait_methods(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab025b6c_TraitDecl> _1ab58c139_build_trait_decl(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab01da55_FnDecl> _1ab58c4e1_build_cpp_link_fn(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab01e6d2_VarDecl> _1ab58c898_build_cpp_link_var(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab02561c_StructDecl> _1ab58cc50_build_cpp_link_struct(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab02262a_TypeAliasDecl> _1ab58d14b_build_cpp_link_type_alias(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>);
inline jule::Ptr<_1ab0237c4_UseDecl> _1ab58d4e2_build_cpp_link_use(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>);
inline jule::Any _1ab58d899_build_cpp_link(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab01da55_FnDecl> _1ab58dc51_get_method(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&);
inline void _1ab58e14c_parse_impl_body(jule::Ptr<_1ab5804c3_Parser>,jule::Ptr<_1ab0261bc_Impl>&,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab0261bc_Impl> _1ab58e504_build_impl(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>);
inline jule::Any _1ab58e8ab_build_node_data(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&);
inline void _1ab58ebca_check_directive(_1ab5804c3_Parser*,_1aae02ad2_Node&);
inline void _1ab5900c6_apply_fn_meta(_1ab5804c3_Parser*,jule::Ptr<_1ab01da55_FnDecl>&,jule::Bool);
inline void _1ab5904c2_apply_meta(_1ab5804c3_Parser*,_1aae02ad2_Node&,jule::Bool);
inline void _1ab5907e1_check_use_decl(_1ab5804c3_Parser*,_1aae02ad2_Node&);
inline std::tuple<jule::Bool,jule::Any> _1ab590bdc_build_general_scope_node_data(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>);
inline _1aae02ad2_Node _1ab591083_parse_node(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&);
inline void _1ab5913a2_append_node(jule::Ptr<_1ab5804c3_Parser>,jule::Slice<_1ab005531_Token>&);
inline void _1ab591957_remove_range(_1ab5804c3_Parser*,jule::I64,jule::Str,jule::Slice<_1ab005531_Token>&,jule::Slice<jule::I64>&);
inline void _1ab591e74_push_wrong_order_close_err(_1ab5804c3_Parser*,_1ab005531_Token&,jule::Slice<_1ab005531_Token>&,jule::Slice<jule::I64>&);
inline void _1ab592518_push_range_close(_1ab5804c3_Parser*,_1ab005531_Token,jule::Str,jule::Slice<_1ab005531_Token>&,jule::Slice<jule::I64>&);
inline void _1ab592837_check_ranges(_1ab5804c3_Parser*,jule::Slice<_1ab005531_Token>&);
inline void _1ab592b56_parse(jule::Ptr<_1ab5804c3_Parser>,jule::Ptr<_1ab00b67a_File>&);
struct _1ab5804c3_Parser {
	jule::Ptr<_1aae013a5_Ast> _field_ast = jule::Ptr<_1aae013a5_Ast>();
	jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>();
	jule::Slice<_1a92a31c6_Log> _field_errors = jule::Slice<_1a92a31c6_Log>();


	_1ab5804c3_Parser(jule::Ptr<_1aae013a5_Ast> __param_ast, jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>> __param_directives, jule::Slice<_1a92a31c6_Log> __param_errors): _field_ast(__param_ast), _field_directives(__param_directives), _field_errors(__param_errors) {}

	

	_1ab5804c3_Parser(void) = default;

	inline bool operator==(_1ab5804c3_Parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1ab5804c3_Parser _other) { return !this->operator==(_other); }


};
inline void _1ab595241_push_err(_1ab594a8c_TypeBuilder*,_1ab005531_Token,jule::Str);
inline void _1ab59563c_push_suggestion(_1ab594a8c_TypeBuilder*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab595917_build_prim(_1ab594a8c_TypeBuilder*);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab595be2_build_namespace(_1ab594a8c_TypeBuilder*);
inline jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>> _1ab595ebc_build_generics(_1ab594a8c_TypeBuilder*);
inline jule::Slice<jule::Slice<_1ab005531_Token>> _1ab596297_ident_generics(_1ab594a8c_TypeBuilder*);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab596572_build_ident(_1ab594a8c_TypeBuilder*);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab59684c_build_cpp_link(_1ab594a8c_TypeBuilder*);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab596b27_build_fn(_1ab594a8c_TypeBuilder*);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab596e02_build_ptr(_1ab594a8c_TypeBuilder*);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab5971cc_build_sptr(_1ab594a8c_TypeBuilder*);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab5974a7_build_op(_1ab594a8c_TypeBuilder*);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab597782_build_slc(_1ab594a8c_TypeBuilder*);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab597a5c_build_arr(_1ab594a8c_TypeBuilder*);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab597ee1_build_map(_1ab594a8c_TypeBuilder*,jule::I64,jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab5982bb_build_enumerable(_1ab594a8c_TypeBuilder*);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab598596_step(_1ab594a8c_TypeBuilder*);
inline std::tuple<jule::Ptr<_1aae075dc_TypeDecl>,jule::Bool> _1ab598871_build(_1ab594a8c_TypeBuilder*);
struct _1ab594a8c_TypeBuilder {
	jule::Ptr<_1ab5804c3_Parser> _field_p = jule::Ptr<_1ab5804c3_Parser>();
	jule::Slice<_1ab005531_Token> _field_tokens = jule::Slice<_1ab005531_Token>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();


	_1ab594a8c_TypeBuilder(jule::Ptr<_1ab5804c3_Parser> __param_p, jule::Slice<_1ab005531_Token> __param_tokens, jule::I64* __param_i, jule::Bool __param_err): _field_p(__param_p), _field_tokens(__param_tokens), _field_i(__param_i), _field_err(__param_err) {}

	

	_1ab594a8c_TypeBuilder(void) = default;

	inline bool operator==(_1ab594a8c_TypeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1ab594a8c_TypeBuilder _other) { return !this->operator==(_other); }


};
struct _1acee76b9_FloatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();


	_1acee76b9_FloatInfo(jule::U64 __param_mantbits, jule::U64 __param_expbits, jule::I64 __param_bias): _field_mantbits(__param_mantbits), _field_expbits(__param_expbits), _field_bias(__param_bias) {}

	

	_1acee76b9_FloatInfo(void) = default;

	inline bool operator==(_1acee76b9_FloatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1acee76b9_FloatInfo _other) { return !this->operator==(_other); }


};
struct _1aca822a9_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();


	_1aca822a9_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::I64 __param_nd, jule::I64 __param_dp, jule::Bool __param_neg): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg) {}

	

	_1aca822a9_DecimalSlice(void) = default;

	inline bool operator==(_1aca822a9_DecimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1aca822a9_DecimalSlice _other) { return !this->operator==(_other); }


};
struct _1ad256780_LeftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();


	_1ad256780_LeftCheat(jule::I64 __param_delta, jule::Str __param_cutoff): _field_delta(__param_delta), _field_cutoff(__param_cutoff) {}

	

	_1ad256780_LeftCheat(void) = default;

	inline bool operator==(_1ad256780_LeftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1ad256780_LeftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1acc8a13d_set(_1ad2569a0_Decimal*,jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1aca81e8a_float_bits(_1ad2569a0_Decimal*,_1acee76b9_FloatInfo&);
inline void _1ad256bc0_assign(_1ad2569a0_Decimal*,jule::U64);
inline void _1ad256d35_shift(_1ad2569a0_Decimal*,jule::I64);
inline void _1ad256e9a_round_down(_1ad2569a0_Decimal*,jule::I64);
inline void _1ad257110_round_up(_1ad2569a0_Decimal*,jule::I64);
inline void _1ad257275_round(_1ad2569a0_Decimal*,jule::I64);
inline jule::U64 _1ad2573da_rounded_integer(_1ad2569a0_Decimal*);
struct _1ad2569a0_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();


	_1ad2569a0_Decimal(jule::Array<jule::U8,800> __param_d, jule::I64 __param_nd, jule::I64 __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg), _field_trunc(__param_trunc) {}

	

	_1ad2569a0_Decimal(void) = default;

	inline bool operator==(_1ad2569a0_Decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1ad2569a0_Decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad2c1d8e_Const> static__1ad2c20ae_new_i64(jule::I64);
inline jule::Ptr<_1ad2c1d8e_Const> static__1ad2c2224_new_u64(jule::U64);
inline jule::Ptr<_1ad2c1d8e_Const> static__1ad2c2411_new_bool(jule::Bool);
inline jule::Ptr<_1ad2c1d8e_Const> static__1ad2c25ed_new_str(jule::Str);
inline jule::Ptr<_1ad2c1d8e_Const> static__1ad2c27da_new_f64(jule::F64);
inline jule::Ptr<_1ad2c1d8e_Const> static__1ad2c29d8_new_nil(void);
inline jule::I64 _1ad2c3148_read_i64(_1ad2c1d8e_Const*);
inline jule::U64 _1ad2c3423_read_u64(_1ad2c1d8e_Const*);
inline jule::Bool _1ad2c36ed_read_bool(_1ad2c1d8e_Const*);
inline jule::Str _1ad2c39c8_read_str(_1ad2c1d8e_Const*);
inline jule::F64 _1ad2c3ca3_read_f64(_1ad2c1d8e_Const*);
inline jule::I64 _1ad2c407d_as_i64(_1ad2c1d8e_Const*);
inline jule::U64 _1ad2c4358_as_u64(_1ad2c1d8e_Const*);
inline jule::F64 _1ad2c4633_as_f64(_1ad2c1d8e_Const*);
inline void _1ad2c4952_set_i64(_1ad2c1d8e_Const*,jule::I64);
inline void _1ad2c4c71_set_u64(_1ad2c1d8e_Const*,jule::U64);
inline void _1ad2c5090_set_bool(_1ad2c1d8e_Const*,jule::Bool);
inline void _1ad2c53ae_set_str(_1ad2c1d8e_Const*,jule::Str);
inline void _1ad2c56cd_set_f64(_1ad2c1d8e_Const*,jule::F64);
inline void _1ad2c5920_set_nil(_1ad2c1d8e_Const*);
inline jule::Bool _1ad2c5bea_is_i64(_1ad2c1d8e_Const*);
inline jule::Bool _1ad2c5ec5_is_u64(_1ad2c1d8e_Const*);
inline jule::Bool _1ad2c62a0_is_bool(_1ad2c1d8e_Const*);
inline jule::Bool _1ad2c657a_is_str(_1ad2c1d8e_Const*);
inline jule::Bool _1ad2c6855_is_f64(_1ad2c1d8e_Const*);
inline jule::Bool _1ad2c6b30_is_nil(_1ad2c1d8e_Const*);
inline jule::Bool _1ad2c6ed7_are_same_types(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2c738e_and(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2c7746_or(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2c7aed_eq(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2c7ea5_lt(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2c835c_lt_eq(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2c8714_gt(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2c8abb_gt_eq(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2c8e73_add(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2c932a_sub(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2c96d2_mul(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2c9a89_div(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2c9e41_mod(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2ca2e8_bitwise_and(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2ca6a0_bitwise_or(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2caa57_xor(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2cae0e_lshift(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
inline jule::Bool _1ad2cb2b6_rshift(_1ad2c1d8e_Const*,_1ad2c1d8e_Const);
struct _1ad2c1d8e_Const {
	jule::Any _field_data = jule::Any();


	_1ad2c1d8e_Const(jule::Any __param_data): _field_data(__param_data) {}

	

	_1ad2c1d8e_Const(void) = default;

	inline jule::Bool operator==(_1ad2c1d8e_Const _other) { return _1ad2c7aed_eq(this, _other); }

	inline bool operator!=(_1ad2c1d8e_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1ad2c1d8e_Const _other) { return _1ad2c8714_gt(this, _other); }

	inline jule::Bool operator>=(_1ad2c1d8e_Const _other) { return _1ad2c8abb_gt_eq(this, _other); }

	inline jule::Bool operator<(_1ad2c1d8e_Const _other) { return _1ad2c7ea5_lt(this, _other); }

	inline jule::Bool operator<=(_1ad2c1d8e_Const _other) { return _1ad2c835c_lt_eq(this, _other); }


};
inline jule::Ptr<_1ad4ab7a4_FileStream> static__1ad4ab9c4_new(jule::Ptr<_1e7ace882_File>);
inline jule::Exceptional<jule::I64> _1ad4abc38_read(_1ad4ab7a4_FileStream*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1ad4ac035_write(_1ad4ab7a4_FileStream*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::Slice<jule::U8>> _1ad4ac3ed_read_line(_1ad4ab7a4_FileStream*);
struct _1ad4ab7a4_FileStream {
	jule::Ptr<_1e7ace882_File> _field_buff = jule::Ptr<_1e7ace882_File>();


	_1ad4ab7a4_FileStream(jule::Ptr<_1e7ace882_File> __param_buff): _field_buff(__param_buff) {}

	

	_1ad4ab7a4_FileStream(void) = default;

	inline bool operator==(_1ad4ab7a4_FileStream _other) {
		return 
			this->_field_buff == _other._field_buff;
	}

	inline bool operator!=(_1ad4ab7a4_FileStream _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::I64> _1ad4aee28_read(_1ad4ae6db_ByteStream*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1ad4b02d0_write(_1ad4ae6db_ByteStream*,jule::Slice<jule::U8>);
inline jule::Ptr<_1ad4ae6db_ByteStream> static__1ad4b0621_new(void);
inline jule::Bool _1ad4b08eb_data(_1ad4ae6db_ByteStream*);
inline void _1ad4b0b3d_fit(_1ad4ae6db_ByteStream*);
struct _1ad4ae6db_ByteStream {
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();


	_1ad4ae6db_ByteStream(jule::Slice<jule::U8> __param_buff): _field_buff(__param_buff) {}

	

	_1ad4ae6db_ByteStream(void) = default;

	inline bool operator==(_1ad4ae6db_ByteStream _other) {
		return 
			this->_field_buff == _other._field_buff;
	}

	inline bool operator!=(_1ad4ae6db_ByteStream _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad4b229e_Scanner> static__1ad4b2744_new(jule::Trait<_1ad4acc28_Reader>);
inline jule::Ptr<_1ad4b229e_Scanner> static__1ad4b2a52_newf(jule::Ptr<_1e7ace882_File>);
inline void _1ad4b2db5_reset(_1ad4b229e_Scanner*);
inline jule::Slice<jule::U8> _1ad4b3190_bytes(_1ad4b229e_Scanner*);
inline jule::Str _1ad4b346a_text(_1ad4b229e_Scanner*);
inline jule::Exceptional<jule::Bool> _1ad4b3745_scan(_1ad4b229e_Scanner*);
struct _1ad4b229e_Scanner {
	jule::Trait<_1ad4acc28_Reader> _field_r = jule::Trait<_1ad4acc28_Reader>();
	jule::Slice<jule::U8> _field_b = jule::Slice<jule::U8>();


	_1ad4b229e_Scanner(jule::Trait<_1ad4acc28_Reader> __param_r, jule::Slice<jule::U8> __param_b): _field_r(__param_r), _field_b(__param_b) {}

	

	_1ad4b229e_Scanner(void) = default;

	inline bool operator==(_1ad4b229e_Scanner _other) {
		return 
			this->_field_r == _other._field_r &&
			this->_field_b == _other._field_b;
	}

	inline bool operator!=(_1ad4b229e_Scanner _other) { return !this->operator==(_other); }


};
struct _1ac65ee31_Operators {
	jule::Ptr<_1ac67a501_FnIns> _field_eq = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_gt = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_gt_eq = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_lt = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_lt_eq = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_shl = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_shr = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_add = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_sub = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_div = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_mul = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_mod = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_bit_and = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_bit_or = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_bit_xor = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_neg = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_pos = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_bit_not = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_add_assign = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_sub_assign = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_div_assign = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_mul_assign = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_mod_assign = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_shl_assign = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_shr_assign = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_bit_or_assign = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_bit_and_assign = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67a501_FnIns> _field_bit_xor_assign = jule::Ptr<_1ac67a501_FnIns>();


	_1ac65ee31_Operators(jule::Ptr<_1ac67a501_FnIns> __param_eq, jule::Ptr<_1ac67a501_FnIns> __param_gt, jule::Ptr<_1ac67a501_FnIns> __param_gt_eq, jule::Ptr<_1ac67a501_FnIns> __param_lt, jule::Ptr<_1ac67a501_FnIns> __param_lt_eq, jule::Ptr<_1ac67a501_FnIns> __param_shl, jule::Ptr<_1ac67a501_FnIns> __param_shr, jule::Ptr<_1ac67a501_FnIns> __param_add, jule::Ptr<_1ac67a501_FnIns> __param_sub, jule::Ptr<_1ac67a501_FnIns> __param_div, jule::Ptr<_1ac67a501_FnIns> __param_mul, jule::Ptr<_1ac67a501_FnIns> __param_mod, jule::Ptr<_1ac67a501_FnIns> __param_bit_and, jule::Ptr<_1ac67a501_FnIns> __param_bit_or, jule::Ptr<_1ac67a501_FnIns> __param_bit_xor, jule::Ptr<_1ac67a501_FnIns> __param_neg, jule::Ptr<_1ac67a501_FnIns> __param_pos, jule::Ptr<_1ac67a501_FnIns> __param_bit_not, jule::Ptr<_1ac67a501_FnIns> __param_add_assign, jule::Ptr<_1ac67a501_FnIns> __param_sub_assign, jule::Ptr<_1ac67a501_FnIns> __param_div_assign, jule::Ptr<_1ac67a501_FnIns> __param_mul_assign, jule::Ptr<_1ac67a501_FnIns> __param_mod_assign, jule::Ptr<_1ac67a501_FnIns> __param_shl_assign, jule::Ptr<_1ac67a501_FnIns> __param_shr_assign, jule::Ptr<_1ac67a501_FnIns> __param_bit_or_assign, jule::Ptr<_1ac67a501_FnIns> __param_bit_and_assign, jule::Ptr<_1ac67a501_FnIns> __param_bit_xor_assign): _field_eq(__param_eq), _field_gt(__param_gt), _field_gt_eq(__param_gt_eq), _field_lt(__param_lt), _field_lt_eq(__param_lt_eq), _field_shl(__param_shl), _field_shr(__param_shr), _field_add(__param_add), _field_sub(__param_sub), _field_div(__param_div), _field_mul(__param_mul), _field_mod(__param_mod), _field_bit_and(__param_bit_and), _field_bit_or(__param_bit_or), _field_bit_xor(__param_bit_xor), _field_neg(__param_neg), _field_pos(__param_pos), _field_bit_not(__param_bit_not), _field_add_assign(__param_add_assign), _field_sub_assign(__param_sub_assign), _field_div_assign(__param_div_assign), _field_mul_assign(__param_mul_assign), _field_mod_assign(__param_mod_assign), _field_shl_assign(__param_shl_assign), _field_shr_assign(__param_shr_assign), _field_bit_or_assign(__param_bit_or_assign), _field_bit_and_assign(__param_bit_and_assign), _field_bit_xor_assign(__param_bit_xor_assign) {}

	

	_1ac65ee31_Operators(void) = default;

	inline bool operator==(_1ac65ee31_Operators _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_1ac65ee31_Operators _other) { return !this->operator==(_other); }


};
struct _1ac663a06_FieldIns {
	jule::Ptr<_1ac65ca77_Field> _field_decl = jule::Ptr<_1ac65ca77_Field>();
	jule::Ptr<_1ad429931_TypeKind> _field_kind = jule::Ptr<_1ad429931_TypeKind>();
	jule::Ptr<_1ad3e6975_Data> _field_default = jule::Ptr<_1ad3e6975_Data>();


	_1ac663a06_FieldIns(jule::Ptr<_1ac65ca77_Field> __param_decl, jule::Ptr<_1ad429931_TypeKind> __param_kind, jule::Ptr<_1ad3e6975_Data> __param_default): _field_decl(__param_decl), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_1ac663a06_FieldIns(void) = default;

	inline bool operator==(_1ac663a06_FieldIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1ac663a06_FieldIns _other) { return !this->operator==(_other); }


};
struct _1ac666663_OperandExprModel {
	jule::Ptr<_1ad429931_TypeKind> _field_kind = jule::Ptr<_1ad429931_TypeKind>();
	jule::Any _field_model = jule::Any();


	_1ac666663_OperandExprModel(jule::Ptr<_1ad429931_TypeKind> __param_kind, jule::Any __param_model): _field_kind(__param_kind), _field_model(__param_model) {}

	

	_1ac666663_OperandExprModel(void) = default;

	inline bool operator==(_1ac666663_OperandExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1ac666663_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1ac6675ed_StructArgExprModel {
	jule::Ptr<_1ac663a06_FieldIns> _field_field = jule::Ptr<_1ac663a06_FieldIns>();
	jule::Any _field_expr = jule::Any();


	_1ac6675ed_StructArgExprModel(jule::Ptr<_1ac663a06_FieldIns> __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1ac6675ed_StructArgExprModel(void) = default;

	inline bool operator==(_1ac6675ed_StructArgExprModel _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ac6675ed_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1ac667a4e_StructLitExprModel {
	jule::Ptr<_1ac664551_StructIns> _field_strct = jule::Ptr<_1ac664551_StructIns>();
	jule::Slice<jule::Ptr<_1ac6675ed_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1ac6675ed_StructArgExprModel>>();


	_1ac667a4e_StructLitExprModel(jule::Ptr<_1ac664551_StructIns> __param_strct, jule::Slice<jule::Ptr<_1ac6675ed_StructArgExprModel>> __param_args): _field_strct(__param_strct), _field_args(__param_args) {}

	

	_1ac667a4e_StructLitExprModel(void) = default;

	inline bool operator==(_1ac667a4e_StructLitExprModel _other) {
		return 
			this->_field_strct == _other._field_strct &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1ac667a4e_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1ac667e39_AllocStructLitExprModel {
	jule::Ptr<_1ac667a4e_StructLitExprModel> _field_lit = jule::Ptr<_1ac667a4e_StructLitExprModel>();


	_1ac667e39_AllocStructLitExprModel(jule::Ptr<_1ac667a4e_StructLitExprModel> __param_lit): _field_lit(__param_lit) {}

	

	_1ac667e39_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1ac667e39_AllocStructLitExprModel _other) {
		return 
			this->_field_lit == _other._field_lit;
	}

	inline bool operator!=(_1ac667e39_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1ac66949b_SliceExprModel {
	jule::Ptr<_1ad429931_TypeKind> _field_elem_kind = jule::Ptr<_1ad429931_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1ac66949b_SliceExprModel(jule::Ptr<_1ad429931_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems): _field_elem_kind(__param_elem_kind), _field_elems(__param_elems) {}

	

	_1ac66949b_SliceExprModel(void) = default;

	inline bool operator==(_1ac66949b_SliceExprModel _other) {
		return 
			this->_field_elem_kind == _other._field_elem_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1ac66949b_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ac669e4c_AnonFnExprModel {
	jule::Ptr<_1ac67a501_FnIns> _field_func = jule::Ptr<_1ac67a501_FnIns>();
	jule::Bool _field_global = jule::Bool();


	_1ac669e4c_AnonFnExprModel(jule::Ptr<_1ac67a501_FnIns> __param_func, jule::Bool __param_global): _field_func(__param_func), _field_global(__param_global) {}

	

	_1ac669e4c_AnonFnExprModel(void) = default;

	inline bool operator==(_1ac669e4c_AnonFnExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_global == _other._field_global;
	}

	inline bool operator!=(_1ac669e4c_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1ac66a39d_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();


	_1ac66a39d_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1ac66a39d_KeyValPairExprModel(void) = default;

	inline bool operator==(_1ac66a39d_KeyValPairExprModel _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1ac66a39d_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1ac66a8ed_MapExprModel {
	jule::Ptr<_1ad429931_TypeKind> _field_key_kind = jule::Ptr<_1ad429931_TypeKind>();
	jule::Ptr<_1ad429931_TypeKind> _field_val_kind = jule::Ptr<_1ad429931_TypeKind>();
	jule::Slice<jule::Ptr<_1ac66a39d_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_1ac66a39d_KeyValPairExprModel>>();


	_1ac66a8ed_MapExprModel(jule::Ptr<_1ad429931_TypeKind> __param_key_kind, jule::Ptr<_1ad429931_TypeKind> __param_val_kind, jule::Slice<jule::Ptr<_1ac66a39d_KeyValPairExprModel>> __param_entries): _field_key_kind(__param_key_kind), _field_val_kind(__param_val_kind), _field_entries(__param_entries) {}

	

	_1ac66a8ed_MapExprModel(void) = default;

	inline bool operator==(_1ac66a8ed_MapExprModel _other) {
		return 
			this->_field_key_kind == _other._field_key_kind &&
			this->_field_val_kind == _other._field_val_kind &&
			this->_field_entries == _other._field_entries;
	}

	inline bool operator!=(_1ac66a8ed_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1ac66c669_StructStaticIdentExprModel {
	jule::Ptr<_1ac664551_StructIns> _field_structure = jule::Ptr<_1ac664551_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1ac67a501_FnIns> _field_method = jule::Ptr<_1ac67a501_FnIns>();


	_1ac66c669_StructStaticIdentExprModel(jule::Ptr<_1ac664551_StructIns> __param_structure, jule::Any __param_expr, jule::Ptr<_1ac67a501_FnIns> __param_method): _field_structure(__param_structure), _field_expr(__param_expr), _field_method(__param_method) {}

	

	_1ac66c669_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1ac66c669_StructStaticIdentExprModel _other) {
		return 
			this->_field_structure == _other._field_structure &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method;
	}

	inline bool operator!=(_1ac66c669_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ac66ca98_ArrayExprModel {
	jule::Ptr<_1ad436da0_Arr> _field_kind = jule::Ptr<_1ad436da0_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1ac66ca98_ArrayExprModel(jule::Ptr<_1ad436da0_Arr> __param_kind, jule::Slice<jule::Any> __param_elems): _field_kind(__param_kind), _field_elems(__param_elems) {}

	

	_1ac66ca98_ArrayExprModel(void) = default;

	inline bool operator==(_1ac66ca98_ArrayExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1ac66ca98_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1ac66cdea_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();


	_1ac66cdea_CommonIdentExprModel(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1ac66cdea_CommonIdentExprModel(void) = default;

	inline bool operator==(_1ac66cdea_CommonIdentExprModel _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ac66cdea_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ac66d912_TupleExprModel {
	jule::Slice<jule::Ptr<_1ad3e6975_Data>> _field_datas = jule::Slice<jule::Ptr<_1ad3e6975_Data>>();


	_1ac66d912_TupleExprModel(jule::Slice<jule::Ptr<_1ad3e6975_Data>> __param_datas): _field_datas(__param_datas) {}

	

	_1ac66d912_TupleExprModel(void) = default;

	inline bool operator==(_1ac66d912_TupleExprModel _other) {
		return 
			this->_field_datas == _other._field_datas;
	}

	inline bool operator!=(_1ac66d912_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1ac66ddeb_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();


	_1ac66ddeb_BuiltinOutCallExprModel(jule::Any __param_expr, jule::Bool __param_debug): _field_expr(__param_expr), _field_debug(__param_debug) {}

	

	_1ac66ddeb_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1ac66ddeb_BuiltinOutCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1ac66ddeb_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac66e3b3_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();


	_1ac66e3b3_BuiltinOutlnCallExprModel(jule::Any __param_expr, jule::Bool __param_debug): _field_expr(__param_expr), _field_debug(__param_debug) {}

	

	_1ac66e3b3_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1ac66e3b3_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1ac66e3b3_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac66e77b_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();


	_1ac66e77b_BuiltinCloneCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1ac66e77b_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1ac66e77b_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ac66e77b_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac66ec43_BuiltinNewCallExprModel {
	jule::Ptr<_1ad429931_TypeKind> _field_kind = jule::Ptr<_1ad429931_TypeKind>();
	jule::Any _field_init = jule::Any();


	_1ac66ec43_BuiltinNewCallExprModel(jule::Ptr<_1ad429931_TypeKind> __param_kind, jule::Any __param_init): _field_kind(__param_kind), _field_init(__param_init) {}

	

	_1ac66ec43_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1ac66ec43_BuiltinNewCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_init == _other._field_init;
	}

	inline bool operator!=(_1ac66ec43_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac670d87_BuiltinMakeCallExprModel {
	jule::Ptr<_1ad429931_TypeKind> _field_kind = jule::Ptr<_1ad429931_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();


	_1ac670d87_BuiltinMakeCallExprModel(jule::Ptr<_1ad429931_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap): _field_kind(__param_kind), _field_len(__param_len), _field_cap(__param_cap) {}

	

	_1ac670d87_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1ac670d87_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_len == _other._field_len &&
			this->_field_cap == _other._field_cap;
	}

	inline bool operator!=(_1ac670d87_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac67134e_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();


	_1ac67134e_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements): _field_dest(__param_dest), _field_elements(__param_elements) {}

	

	_1ac67134e_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1ac67134e_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elements == _other._field_elements;
	}

	inline bool operator!=(_1ac67134e_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac671816_BuiltinErrorCallExprModel {
	jule::Ptr<_1ac67a501_FnIns> _field_func = jule::Ptr<_1ac67a501_FnIns>();
	jule::Any _field_err = jule::Any();


	_1ac671816_BuiltinErrorCallExprModel(jule::Ptr<_1ac67a501_FnIns> __param_func, jule::Any __param_err): _field_func(__param_func), _field_err(__param_err) {}

	

	_1ac671816_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1ac671816_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1ac671816_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac671b46_SizeofExprModel {
	jule::Any _field_expr = jule::Any();


	_1ac671b46_SizeofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1ac671b46_SizeofExprModel(void) = default;

	inline bool operator==(_1ac671b46_SizeofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ac671b46_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1ac6722ea_AlignofExprModel {
	jule::Any _field_expr = jule::Any();


	_1ac6722ea_AlignofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1ac6722ea_AlignofExprModel(void) = default;

	inline bool operator==(_1ac6722ea_AlignofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ac6722ea_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1ac6725b4_RuneExprModel {
	jule::I32 _field_code = jule::I32();


	_1ac6725b4_RuneExprModel(jule::I32 __param_code): _field_code(__param_code) {}

	

	_1ac6725b4_RuneExprModel(void) = default;

	inline bool operator==(_1ac6725b4_RuneExprModel _other) {
		return 
			this->_field_code == _other._field_code;
	}

	inline bool operator!=(_1ac6725b4_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1ac672927_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();


	_1ac672927_IntegratedToStrExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1ac672927_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1ac672927_IntegratedToStrExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ac672927_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1ac672d56_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_1ac672d56_BackendEmitExprModel(jule::Str __param_code, jule::Slice<jule::Any> __param_exprs): _field_code(__param_code), _field_exprs(__param_exprs) {}

	

	_1ac672d56_BackendEmitExprModel(void) = default;

	inline bool operator==(_1ac672d56_BackendEmitExprModel _other) {
		return 
			this->_field_code == _other._field_code &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1ac672d56_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1ac6731a8_FreeExprModel {
	jule::Any _field_expr = jule::Any();


	_1ac6731a8_FreeExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1ac6731a8_FreeExprModel(void) = default;

	inline bool operator==(_1ac6731a8_FreeExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ac6731a8_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1ac674385_RetType {
	jule::Ptr<_1ad42e293_TypeSymbol> _field_kind = jule::Ptr<_1ad42e293_TypeSymbol>();
	jule::Slice<_1ab005531_Token> _field_idents = jule::Slice<_1ab005531_Token>();


	_1ac674385_RetType(jule::Ptr<_1ad42e293_TypeSymbol> __param_kind, jule::Slice<_1ab005531_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1ac674385_RetType(void) = default;

	inline bool operator==(_1ac674385_RetType _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1ac674385_RetType _other) { return !this->operator==(_other); }


};
inline jule::Str _1ac6797db_to_str(_1ac67939b_ParamIns*);
struct _1ac67939b_ParamIns {
	jule::Ptr<_1ac674bd2_Param> _field_decl = jule::Ptr<_1ac674bd2_Param>();
	jule::Ptr<_1ad429931_TypeKind> _field_kind = jule::Ptr<_1ad429931_TypeKind>();


	_1ac67939b_ParamIns(jule::Ptr<_1ac674bd2_Param> __param_decl, jule::Ptr<_1ad429931_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1ac67939b_ParamIns(void) = default;

	inline bool operator==(_1ac67939b_ParamIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ac67939b_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1ac67a8ca_to_str(_1ac67a501_FnIns*);
inline jule::Bool _1ac67ac82_equals(jule::Ptr<_1ac67a501_FnIns>,jule::Ptr<_1ad429931_TypeKind>);
inline jule::Bool _1ac67b17d_is_builtin(_1ac67a501_FnIns*);
inline jule::Bool _1ac67b458_is_anon(_1ac67a501_FnIns*);
inline jule::Bool _1ac67b810_same(_1ac67a501_FnIns*,jule::Ptr<_1ac67a501_FnIns>);
inline jule::Str _1ac67bbb7_get_kind_str(_1ac67a501_FnIns*,jule::Bool);
struct _1ac67a501_FnIns {
	jule::Ptr<_1ac664551_StructIns> _field_owner = jule::Ptr<_1ac664551_StructIns>();
	jule::Ptr<_1ac676a08_Fn> _field_decl = jule::Ptr<_1ac676a08_Fn>();
	jule::Slice<jule::Ptr<_1ad429931_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1ad429931_TypeKind>>();
	jule::Slice<jule::Ptr<_1ac67939b_ParamIns>> _field_params = jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>();
	jule::Ptr<_1ad429931_TypeKind> _field_result = jule::Ptr<_1ad429931_TypeKind>();
	jule::Ptr<_1ad33ce0a_Scope> _field_scope = jule::Ptr<_1ad33ce0a_Scope>();
	jule::Ptr<_1ac67de2d_ReferenceStack> _field_references = jule::Ptr<_1ac67de2d_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();


	_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns> __param_owner, jule::Ptr<_1ac676a08_Fn> __param_decl, jule::Slice<jule::Ptr<_1ad429931_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_1ac67939b_ParamIns>> __param_params, jule::Ptr<_1ad429931_TypeKind> __param_result, jule::Ptr<_1ad33ce0a_Scope> __param_scope, jule::Ptr<_1ac67de2d_ReferenceStack> __param_references, jule::Bool __param_anon, jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)> __param_caller, jule::Bool __param_reloaded): _field_owner(__param_owner), _field_decl(__param_decl), _field_generics(__param_generics), _field_params(__param_params), _field_result(__param_result), _field_scope(__param_scope), _field_references(__param_references), _field_anon(__param_anon), _field_caller(__param_caller), _field_reloaded(__param_reloaded) {}

	

	_1ac67a501_FnIns(void) = default;

	inline bool operator==(_1ac67a501_FnIns _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_params == _other._field_params &&
			this->_field_result == _other._field_result &&
			this->_field_scope == _other._field_scope &&
			this->_field_references == _other._field_references &&
			this->_field_anon == _other._field_anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1ac67a501_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac67de2d_ReferenceStack> static__1ac67e181_new(void);
inline jule::I64 _1ac67e57c_len(_1ac67de2d_ReferenceStack*);
inline jule::Any _1ac67e934_at(_1ac67de2d_ReferenceStack*,jule::I64);
inline void _1ac67ec53_push(_1ac67de2d_ReferenceStack*,jule::Any);
inline jule::Bool _1ac68010a_exist_0(_1ac67de2d_ReferenceStack*,jule::Ptr<_1ad39e037_Var>);
inline jule::Bool _1ac68010a_exist_1(_1ac67de2d_ReferenceStack*,jule::Ptr<_1ac67a501_FnIns>);
struct _1ac67de2d_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();


	_1ac67de2d_ReferenceStack(jule::Slice<jule::Any> __param_buffer): _field_buffer(__param_buffer) {}

	

	_1ac67de2d_ReferenceStack(void) = default;

	inline bool operator==(_1ac67de2d_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1ac67de2d_ReferenceStack _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac684a05_SymbolBuilder> _1ac685132_get_root(jule::Ptr<_1ac684a05_SymbolBuilder>);
inline void _1ac68560a_push_err(_1ac684a05_SymbolBuilder*,_1ab005531_Token&,jule::Str,jule::Slice<jule::Any>);
inline void _1ac685ad3_push_err_text(_1ac684a05_SymbolBuilder*,_1ab005531_Token&,jule::Str,jule::Slice<jule::Any>);
inline void _1ac685ece_push_suggestion(_1ac684a05_SymbolBuilder*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1ac686397_check_cpp_use_decl_path(_1ac684a05_SymbolBuilder*,jule::Ptr<_1ab0237c4_UseDecl>&);
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ac686782_build_cpp_header_import(_1ac684a05_SymbolBuilder*,jule::Ptr<_1ab0237c4_UseDecl>&);
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ac686b28_build_std_import(_1ac684a05_SymbolBuilder*,jule::Ptr<_1ab0237c4_UseDecl>&);
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ac686ed0_build_ident_import(jule::Ptr<_1ac684a05_SymbolBuilder>,jule::Ptr<_1ab0237c4_UseDecl>&);
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ac687387_build_import(jule::Ptr<_1ac684a05_SymbolBuilder>,jule::Ptr<_1ab0237c4_UseDecl>&);
inline jule::Bool _1ac687783_check_duplicate_use_decl(_1ac684a05_SymbolBuilder*,jule::Ptr<_1ad3736b0_ImportInfo>&);
inline void _1ac687b6d_impl_import_selections(_1ac684a05_SymbolBuilder*,jule::Ptr<_1ad3736b0_ImportInfo>&,jule::Ptr<_1ab0237c4_UseDecl>&);
inline jule::Str _1ac688025_get_as_link_path(jule::Ptr<_1ac684a05_SymbolBuilder>,jule::Str);
inline void _1ac6884ed_push_cycle_error(jule::Ptr<_1ac684a05_SymbolBuilder>,jule::Ptr<_1ac684a05_SymbolBuilder>&,jule::Str,jule::Str&);
inline void _1ac6889c6_push_cross_cycle_error(jule::Ptr<_1ac684a05_SymbolBuilder>,jule::Ptr<_1ac684a05_SymbolBuilder>&,jule::Ptr<_1ad3736b0_ImportInfo>&,_1ab005531_Token&);
inline jule::Bool _1ac688e5a_check_import_cycles(jule::Ptr<_1ac684a05_SymbolBuilder>,jule::Ptr<_1ad3736b0_ImportInfo>,jule::Ptr<_1ab0237c4_UseDecl>&);
inline void _1ac689477_check_package_accessibility(_1ac684a05_SymbolBuilder*,jule::Ptr<_1ab0237c4_UseDecl>&,jule::Str&,jule::Str&);
inline jule::Bool _1ac6898ea_import_package(jule::Ptr<_1ac684a05_SymbolBuilder>,jule::Ptr<_1ad3736b0_ImportInfo>&,jule::Ptr<_1ab0237c4_UseDecl>&);
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ac689ca2_import_use_decl(jule::Ptr<_1ac684a05_SymbolBuilder>,jule::Ptr<_1ab0237c4_UseDecl>&);
inline void _1ac689ee4_import_use_decls(jule::Ptr<_1ac684a05_SymbolBuilder>);
inline void _1ac68a313_append_node(_1ac684a05_SymbolBuilder*,_1aae02ad2_Node&);
inline void _1ac68a555_append_nodes(_1ac684a05_SymbolBuilder*);
inline void _1ac68a874_push_directive_pass(_1ac684a05_SymbolBuilder*,jule::Ptr<_1aaeaeb7d_Directive>&);
inline void _1ac68aab6_append_top_directives(_1ac684a05_SymbolBuilder*);
inline void _1ac68ad08_build(jule::Ptr<_1ac684a05_SymbolBuilder>);
struct _1ac684a05_SymbolBuilder {
	jule::Ptr<_1ac684a05_SymbolBuilder> _field_owner = jule::Ptr<_1ac684a05_SymbolBuilder>();
	jule::Trait<_1ad370aca_Importer> _field_importer = jule::Trait<_1ad370aca_Importer>();
	jule::Slice<_1a92a31c6_Log> _field_errors = jule::Slice<_1a92a31c6_Log>();
	jule::Ptr<_1aae013a5_Ast> _field_ast = jule::Ptr<_1aae013a5_Ast>();
	jule::Ptr<_1ad3e062d_SymbolTable> _field_table = jule::Ptr<_1ad3e062d_SymbolTable>();


	_1ac684a05_SymbolBuilder(jule::Ptr<_1ac684a05_SymbolBuilder> __param_owner, jule::Trait<_1ad370aca_Importer> __param_importer, jule::Slice<_1a92a31c6_Log> __param_errors, jule::Ptr<_1aae013a5_Ast> __param_ast, jule::Ptr<_1ad3e062d_SymbolTable> __param_table): _field_owner(__param_owner), _field_importer(__param_importer), _field_errors(__param_errors), _field_ast(__param_ast), _field_table(__param_table) {}

	

	_1ac684a05_SymbolBuilder(void) = default;

	inline bool operator==(_1ac684a05_SymbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1ac684a05_SymbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac950276_is_trait_impl(_1ac76d3b3_Impl*);
inline jule::Bool _1ac98d55b_is_struct_impl(_1ac76d3b3_Impl*);
struct _1ac76d3b3_Impl {
	jule::Ptr<_1aae075dc_TypeDecl> _field_base = jule::Ptr<_1aae075dc_TypeDecl>();
	jule::Ptr<_1aae075dc_TypeDecl> _field_dest = jule::Ptr<_1aae075dc_TypeDecl>();
	jule::Slice<jule::Ptr<_1ac676a08_Fn>> _field_methods = jule::Slice<jule::Ptr<_1ac676a08_Fn>>();
	jule::Slice<jule::Ptr<_1ad39e037_Var>> _field_statics = jule::Slice<jule::Ptr<_1ad39e037_Var>>();


	_1ac76d3b3_Impl(jule::Ptr<_1aae075dc_TypeDecl> __param_base, jule::Ptr<_1aae075dc_TypeDecl> __param_dest, jule::Slice<jule::Ptr<_1ac676a08_Fn>> __param_methods, jule::Slice<jule::Ptr<_1ad39e037_Var>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1ac76d3b3_Impl(void) = default;

	inline bool operator==(_1ac76d3b3_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1ac76d3b3_Impl _other) { return !this->operator==(_other); }


};
struct _1ad33ce0a_Scope {
	jule::Ptr<_1ad33ce0a_Scope> _field_parent = jule::Ptr<_1ad33ce0a_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();


	_1ad33ce0a_Scope(jule::Ptr<_1ad33ce0a_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_1ad33ce0a_Scope(void) = default;

	inline bool operator==(_1ad33ce0a_Scope _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_1ad33ce0a_Scope _other) { return !this->operator==(_other); }


};
struct _1ad35596c_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1ad33ce0a_Scope> _field_scope = jule::Ptr<_1ad33ce0a_Scope>();


	_1ad35596c_If(jule::Any __param_expr, jule::Ptr<_1ad33ce0a_Scope> __param_scope): _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1ad35596c_If(void) = default;

	inline bool operator==(_1ad35596c_If _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ad35596c_If _other) { return !this->operator==(_other); }


};
struct _1ad355b8c_Else {
	jule::Ptr<_1ad33ce0a_Scope> _field_scope = jule::Ptr<_1ad33ce0a_Scope>();


	_1ad355b8c_Else(jule::Ptr<_1ad33ce0a_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1ad355b8c_Else(void) = default;

	inline bool operator==(_1ad355b8c_Else _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ad355b8c_Else _other) { return !this->operator==(_other); }


};
struct _1ad355dac_Conditional {
	jule::Slice<jule::Ptr<_1ad35596c_If>> _field_elifs = jule::Slice<jule::Ptr<_1ad35596c_If>>();
	jule::Ptr<_1ad355b8c_Else> _field_default = jule::Ptr<_1ad355b8c_Else>();


	_1ad355dac_Conditional(jule::Slice<jule::Ptr<_1ad35596c_If>> __param_elifs, jule::Ptr<_1ad355b8c_Else> __param_default): _field_elifs(__param_elifs), _field_default(__param_default) {}

	

	_1ad355dac_Conditional(void) = default;

	inline bool operator==(_1ad355dac_Conditional _other) {
		return 
			this->_field_elifs == _other._field_elifs &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1ad355dac_Conditional _other) { return !this->operator==(_other); }


};
struct _1ad3560cc_InfIter {
	jule::Ptr<_1ad33ce0a_Scope> _field_scope = jule::Ptr<_1ad33ce0a_Scope>();


	_1ad3560cc_InfIter(jule::Ptr<_1ad33ce0a_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1ad3560cc_InfIter(void) = default;

	inline bool operator==(_1ad3560cc_InfIter _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ad3560cc_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ad32c1d5_is_while_next(_1ad3562ec_WhileIter*);
struct _1ad3562ec_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1ad33ce0a_Scope> _field_scope = jule::Ptr<_1ad33ce0a_Scope>();


	_1ad3562ec_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ptr<_1ad33ce0a_Scope> __param_scope): _field_expr(__param_expr), _field_next(__param_next), _field_scope(__param_scope) {}

	

	_1ad3562ec_WhileIter(void) = default;

	inline bool operator==(_1ad3562ec_WhileIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ad3562ec_WhileIter _other) { return !this->operator==(_other); }


};
struct _1ad35651c_RangeIter {
	jule::Ptr<_1ad3e6975_Data> _field_expr = jule::Ptr<_1ad3e6975_Data>();
	jule::Ptr<_1ad33ce0a_Scope> _field_scope = jule::Ptr<_1ad33ce0a_Scope>();
	jule::Ptr<_1ad39e037_Var> _field_key_a = jule::Ptr<_1ad39e037_Var>();
	jule::Ptr<_1ad39e037_Var> _field_key_b = jule::Ptr<_1ad39e037_Var>();


	_1ad35651c_RangeIter(jule::Ptr<_1ad3e6975_Data> __param_expr, jule::Ptr<_1ad33ce0a_Scope> __param_scope, jule::Ptr<_1ad39e037_Var> __param_key_a, jule::Ptr<_1ad39e037_Var> __param_key_b): _field_expr(__param_expr), _field_scope(__param_scope), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1ad35651c_RangeIter(void) = default;

	inline bool operator==(_1ad35651c_RangeIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1ad35651c_RangeIter _other) { return !this->operator==(_other); }


};
struct _1ad35673c_ContSt {
	jule::U64 _field_it = jule::U64();


	_1ad35673c_ContSt(jule::U64 __param_it): _field_it(__param_it) {}

	

	_1ad35673c_ContSt(void) = default;

	inline bool operator==(_1ad35673c_ContSt _other) {
		return 
			this->_field_it == _other._field_it;
	}

	inline bool operator!=(_1ad35673c_ContSt _other) { return !this->operator==(_other); }


};
struct _1ad35695c_BreakSt {
	jule::U64 _field_it = jule::U64();
	jule::U64 _field_mtch = jule::U64();


	_1ad35695c_BreakSt(jule::U64 __param_it, jule::U64 __param_mtch): _field_it(__param_it), _field_mtch(__param_mtch) {}

	

	_1ad35695c_BreakSt(void) = default;

	inline bool operator==(_1ad35695c_BreakSt _other) {
		return 
			this->_field_it == _other._field_it &&
			this->_field_mtch == _other._field_mtch;
	}

	inline bool operator!=(_1ad35695c_BreakSt _other) { return !this->operator==(_other); }


};
struct _1ad356b7c_Label {
	jule::Str _field_ident = jule::Str();


	_1ad356b7c_Label(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1ad356b7c_Label(void) = default;

	inline bool operator==(_1ad356b7c_Label _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ad356b7c_Label _other) { return !this->operator==(_other); }


};
struct _1ad356d9c_GotoSt {
	jule::Str _field_ident = jule::Str();


	_1ad356d9c_GotoSt(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1ad356d9c_GotoSt(void) = default;

	inline bool operator==(_1ad356d9c_GotoSt _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ad356d9c_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ad3570bc_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();


	_1ad3570bc_Postfix(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1ad3570bc_Postfix(void) = default;

	inline bool operator==(_1ad3570bc_Postfix _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ad3570bc_Postfix _other) { return !this->operator==(_other); }


};
struct _1ad35750c_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();


	_1ad35750c_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r): _field_l(__param_l), _field_r(__param_r) {}

	

	_1ad35750c_MultiAssign(void) = default;

	inline bool operator==(_1ad35750c_MultiAssign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r;
	}

	inline bool operator!=(_1ad35750c_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ad32d318_is_generic_type_match(_1ad35772c_Match*);
struct _1ad35772c_Match {
	jule::Ptr<_1ad3e6975_Data> _field_expr = jule::Ptr<_1ad3e6975_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_1ad357b7d_Case>> _field_cases = jule::Slice<jule::Ptr<_1ad357b7d_Case>>();
	jule::Ptr<_1ad357b7d_Case> _field_default = jule::Ptr<_1ad357b7d_Case>();


	_1ad35772c_Match(jule::Ptr<_1ad3e6975_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ptr<_1ad357b7d_Case>> __param_cases, jule::Ptr<_1ad357b7d_Case> __param_default): _field_expr(__param_expr), _field_type_match(__param_type_match), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1ad35772c_Match(void) = default;

	inline bool operator==(_1ad35772c_Match _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1ad35772c_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ad32e99b_is_default(_1ad357b7d_Case*);
struct _1ad357b7d_Case {
	jule::Ptr<_1ad35772c_Match> _field_owner = jule::Ptr<_1ad35772c_Match>();
	jule::Ptr<_1ad33ce0a_Scope> _field_scope = jule::Ptr<_1ad33ce0a_Scope>();
	jule::Slice<jule::Ptr<_1ad3e6975_Data>> _field_exprs = jule::Slice<jule::Ptr<_1ad3e6975_Data>>();
	jule::Ptr<_1ad357b7d_Case> _field_next = jule::Ptr<_1ad357b7d_Case>();


	_1ad357b7d_Case(jule::Ptr<_1ad35772c_Match> __param_owner, jule::Ptr<_1ad33ce0a_Scope> __param_scope, jule::Slice<jule::Ptr<_1ad3e6975_Data>> __param_exprs, jule::Ptr<_1ad357b7d_Case> __param_next): _field_owner(__param_owner), _field_scope(__param_scope), _field_exprs(__param_exprs), _field_next(__param_next) {}

	

	_1ad357b7d_Case(void) = default;

	inline bool operator==(_1ad357b7d_Case _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_next == _other._field_next;
	}

	inline bool operator!=(_1ad357b7d_Case _other) { return !this->operator==(_other); }


};
struct _1ad357d9d_FallSt {
	jule::U64 _field_dest_case = jule::U64();


	_1ad357d9d_FallSt(jule::U64 __param_dest_case): _field_dest_case(__param_dest_case) {}

	

	_1ad357d9d_FallSt(void) = default;

	inline bool operator==(_1ad357d9d_FallSt _other) {
		return 
			this->_field_dest_case == _other._field_dest_case;
	}

	inline bool operator!=(_1ad357d9d_FallSt _other) { return !this->operator==(_other); }


};
struct _1ad3580bd_RetSt {
	jule::Ptr<_1ac67a501_FnIns> _field_func = jule::Ptr<_1ac67a501_FnIns>();
	jule::Slice<jule::Ptr<_1ad39e037_Var>> _field_vars = jule::Slice<jule::Ptr<_1ad39e037_Var>>();
	jule::Any _field_expr = jule::Any();


	_1ad3580bd_RetSt(jule::Ptr<_1ac67a501_FnIns> __param_func, jule::Slice<jule::Ptr<_1ad39e037_Var>> __param_vars, jule::Any __param_expr): _field_func(__param_func), _field_vars(__param_vars), _field_expr(__param_expr) {}

	

	_1ad3580bd_RetSt(void) = default;

	inline bool operator==(_1ad3580bd_RetSt _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_vars == _other._field_vars &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ad3580bd_RetSt _other) { return !this->operator==(_other); }


};
struct _1ad35850d_ScopeGoto {
	jule::Ptr<_1ab01cc85_GotoSt> _field_gt = jule::Ptr<_1ab01cc85_GotoSt>();
	jule::Ptr<_1ad35872d_ScopeChecker> _field_scope = jule::Ptr<_1ad35872d_ScopeChecker>();
	jule::I64 _field_pos = jule::I64();


	_1ad35850d_ScopeGoto(jule::Ptr<_1ab01cc85_GotoSt> __param_gt, jule::Ptr<_1ad35872d_ScopeChecker> __param_scope, jule::I64 __param_pos): _field_gt(__param_gt), _field_scope(__param_scope), _field_pos(__param_pos) {}

	

	_1ad35850d_ScopeGoto(void) = default;

	inline bool operator==(_1ad35850d_ScopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1ad35850d_ScopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad2e1d04_find_package(_1ad35872d_ScopeChecker*,jule::Str);
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad35894d_select_package(_1ad35872d_ScopeChecker*,jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)>);
inline jule::Ptr<_1ad39e037_Var> _1ad358ab3_find_var(_1ad35872d_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_1ad428996_TypeAlias> _1ad358c28_find_type_alias(_1ad35872d_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac661075_Struct> _1ad358d8d_find_struct(_1ad35872d_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac676a08_Fn> _1ad3591ce_find_fn(_1ad35872d_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac85d096_Trait> _1ad359586_find_trait(_1ad35872d_ScopeChecker*,jule::Str);
inline jule::Ptr<_1ac724545_Enum> _1ad35993d_find_enum(_1ad35872d_ScopeChecker*,jule::Str);
inline jule::Bool _1ad359cd4_is_unsafe(jule::Ptr<_1ad35872d_ScopeChecker>);
inline jule::Bool _1ad35a0ae_is_root(_1ad35872d_ScopeChecker*);
inline void _1ad35a301_stop(_1ad35872d_ScopeChecker*);
inline jule::Bool _1ad35a5cb_stopped(_1ad35872d_ScopeChecker*);
inline jule::Bool _1ad35a8a6_is_deferred(jule::Ptr<_1ad35872d_ScopeChecker>);
inline jule::Ptr<_1ad35872d_ScopeChecker> _1ad35ab81_get_root(jule::Ptr<_1ad35872d_ScopeChecker>);
inline jule::Ptr<_1ad35872d_ScopeChecker> _1ad35ae5b_get_hard_root(jule::Ptr<_1ad35872d_ScopeChecker>);
inline jule::Ptr<_1ad356b7c_Label> _1ad35b313_find_label(_1ad35872d_ScopeChecker*,jule::Str);
inline jule::Ptr<_1ad3582dd_ScopeLabel> _1ad35b6ba_find_label_scope(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Str);
inline jule::Ptr<_1ad3582dd_ScopeLabel> _1ad35ba72_find_label_all(_1ad35872d_ScopeChecker*,jule::Str);
inline jule::Bool _1ad35c006_is_duplicated_ident(_1ad35872d_ScopeChecker*,jule::U64,jule::Str);
inline void _1ad35c325_check_var_decl(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab01e6d2_VarDecl>);
inline void _1ad35c644_check_type_alias_decl(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab02262a_TypeAliasDecl>);
inline jule::Ptr<_1ad33ce0a_Scope> _1ad35c91e_get_child(_1ad35872d_ScopeChecker*);
inline void _1ad35cde7_check_child_ssc(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab01d615_ScopeTree>&,jule::Ptr<_1ad33ce0a_Scope>&,jule::Ptr<_1ad35872d_ScopeChecker>&);
inline jule::Ptr<_1ad33ce0a_Scope> _1ad35d37b_check_child_sc(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab01d615_ScopeTree>&,jule::Ptr<_1ad35872d_ScopeChecker>&);
inline jule::Ptr<_1ad33ce0a_Scope> _1ad35d733_check_child(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab01d615_ScopeTree>&);
inline void _1ad35da52_check_anon_scope(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab01d615_ScopeTree>);
inline void _1ad35de4d_process_error_call(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ac671816_BuiltinErrorCallExprModel>&,_1ab005531_Token);
inline void _1ad35e26c_check_expr(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1aadb528c_Expr>);
inline void _1ad35e58b_check_co_expr(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1aadb606d_CoExpr>);
inline jule::Ptr<_1ad35596c_If> _1ad35e943_check_if(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab0217b1_If>);
inline jule::Ptr<_1ad355b8c_Else> _1ad35ecea_check_else(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab021b24_Else>);
inline void _1ad360119_check_conditional(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab022031_Conditional>);
inline jule::Ptr<_1ad33ce0a_Scope> _1ad36067a_check_iter_scope_sc(jule::Ptr<_1ad35872d_ScopeChecker>,jule::U64,jule::Ptr<_1ab01d615_ScopeTree>,jule::Ptr<_1ad35872d_ScopeChecker>);
inline jule::Ptr<_1ad33ce0a_Scope> _1ad360b0e_check_iter_scope(jule::Ptr<_1ad35872d_ScopeChecker>,jule::U64,jule::Ptr<_1ab01d615_ScopeTree>&);
inline void _1ad360e2d_check_inf_iter(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab020040_Iter>&);
inline void _1ad36124c_check_while_iter(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab020040_Iter>&);
inline void _1ad36156b_check_range_iter(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab020040_Iter>&);
inline void _1ad36188a_check_iter(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab020040_Iter>);
inline jule::Bool _1ad361c42_check_valid_cont_label(jule::Ptr<_1ad35872d_ScopeChecker>,jule::U64);
inline jule::Bool _1ad36213d_check_valid_break_label(jule::Ptr<_1ad35872d_ScopeChecker>,jule::U64);
inline jule::Ptr<_1ad35673c_ContSt> _1ad3624d4_check_cont_valid_scope(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab0213a4_ContSt>);
inline void _1ad362803_check_cont(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab0213a4_ContSt>);
inline void _1ad362b22_check_label(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab01ca65_LabelSt>);
inline void _1ad362e41_push_goto(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab01cc85_GotoSt>);
inline void _1ad363260_check_postfix(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab01d3e5_AssignSt>);
inline jule::Bool _1ad363617_is_new_assign_ident(_1ad35872d_ScopeChecker*,jule::Str);
inline jule::Bool _1ad363bbc_check_structure_assign_op(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ac664551_StructIns>&,jule::Ptr<_1ab01d3e5_AssignSt>&,jule::Ptr<_1ad3e6975_Data>&);
inline void _1ad363eca_check_single_assign(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab01d3e5_AssignSt>&);
inline void _1ad3646c3___process_end_part_of_multi_assign(_1ad35872d_ScopeChecker*,jule::Ptr<_1ad35750c_MultiAssign>,jule::Ptr<_1ab01d3e5_AssignSt>,jule::Ptr<_1ab01d1c5_AssignLeft>,jule::Ptr<_1ad3e6975_Data>,jule::Ptr<_1ad3e6975_Data>);
inline void _1ad3649ae_check_ret_multi_assign(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab01d3e5_AssignSt>&);
inline void _1ad364ccd_check_multi_assign(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab01d3e5_AssignSt>&);
inline void _1ad3650ec_check_assign_st(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab01d3e5_AssignSt>);
inline jule::Ptr<_1ad33ce0a_Scope> _1ad365581_check_case_scope(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ad357b7d_Case>&,jule::Ptr<_1ab01d615_ScopeTree>&);
inline jule::Ptr<_1ad357b7d_Case> _1ad365bbe_check_case(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ad35772c_Match>,jule::I64,jule::Ptr<_1ab022a37_Case>,jule::Ptr<_1ad3e6975_Data>);
inline void _1ad366197_check_cases(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab023131_MatchCase>&,jule::Ptr<_1ad35772c_Match>,jule::Ptr<_1ad3e6975_Data>);
inline jule::Ptr<_1ad357b7d_Case> _1ad36662b_check_default(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ad35772c_Match>,jule::Ptr<_1ab021b24_Else>);
inline void _1ad36694a_check_comptime_panic(_1ad35872d_ScopeChecker*,jule::Ptr<_1ad33ce0a_Scope>&);
inline void _1ad366d46_push_type_match(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ad35772c_Match>,jule::Ptr<_1ab023131_MatchCase>&);
inline void _1ad367165_check_type_match(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab023131_MatchCase>&);
inline void _1ad367484_check_common_match(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab023131_MatchCase>&);
inline void _1ad3677a3_check_match(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab023131_MatchCase>);
inline void _1ad367ac2_check_fall(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab01cea5_FallSt>);
inline jule::Ptr<_1ad35695c_BreakSt> _1ad367e79_check_break_with_label(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab021041_BreakSt>);
inline jule::Ptr<_1ad35695c_BreakSt> _1ad368331_check_plain_break(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab021041_BreakSt>);
inline void _1ad368650_check_break(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab021041_BreakSt>);
inline void _1ad36896e_check_ret(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab01ea45_RetSt>);
inline void _1ad368c8d_check_use_expr(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1aadb54ac_UseExpr>);
inline void _1ad3690ac_check_node(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Any&);
inline void _1ad3692ee_check_result(jule::Ptr<_1ad35872d_ScopeChecker>);
inline void _1ad369541_check_tree(jule::Ptr<_1ad35872d_ScopeChecker>);
inline void _1ad36993c_check_goto(_1ad35872d_ScopeChecker*,jule::Ptr<_1ad35850d_ScopeGoto>&,jule::Ptr<_1ad3582dd_ScopeLabel>&);
inline void _1ad369b7e_check_gotos(_1ad35872d_ScopeChecker*);
inline void _1ad369dc1_check_labels(_1ad35872d_ScopeChecker*);
inline void _1ad36a113_check_vars(_1ad35872d_ScopeChecker*);
inline void _1ad36a355_check_aliases(_1ad35872d_ScopeChecker*);
inline void _1ad36a751_check(jule::Ptr<_1ad35872d_ScopeChecker>,jule::Ptr<_1ab01d615_ScopeTree>&,jule::Ptr<_1ad33ce0a_Scope>&);
inline jule::Ptr<_1ad35872d_ScopeChecker> _1ad36aa2b_new_child_checker(jule::Ptr<_1ad35872d_ScopeChecker>);
struct _1ad35872d_ScopeChecker {
	jule::Ptr<_1ab005531_Token> _field_called_from = jule::Ptr<_1ab005531_Token>();
	jule::Ptr<_1ad37cd5c_Sema> _field_s = jule::Ptr<_1ad37cd5c_Sema>();
	jule::Ptr<_1ac67a501_FnIns> _field_owner = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ad35872d_ScopeChecker> _field_parent = jule::Ptr<_1ad35872d_ScopeChecker>();
	jule::I64 _field_child_index = jule::I64();
	jule::Ptr<_1ad3e062d_SymbolTable> _field_table = jule::Ptr<_1ad3e062d_SymbolTable>();
	jule::Ptr<_1ad33ce0a_Scope> _field_scope = jule::Ptr<_1ad33ce0a_Scope>();
	jule::Ptr<_1ab01d615_ScopeTree> _field_tree = jule::Ptr<_1ab01d615_ScopeTree>();
	jule::Ptr<_1ad429931_TypeKind> _field_result = jule::Ptr<_1ad429931_TypeKind>();
	jule::U64 _field_it = jule::U64();
	jule::U64 _field_cse = jule::U64();
	jule::Ptr<jule::Slice<jule::Ptr<_1ad3582dd_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1ad3582dd_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1ad35850d_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1ad35850d_ScopeGoto>>>();
	jule::I64 _field_i = jule::I64();


	_1ad35872d_ScopeChecker(jule::Ptr<_1ab005531_Token> __param_called_from, jule::Ptr<_1ad37cd5c_Sema> __param_s, jule::Ptr<_1ac67a501_FnIns> __param_owner, jule::Ptr<_1ad35872d_ScopeChecker> __param_parent, jule::I64 __param_child_index, jule::Ptr<_1ad3e062d_SymbolTable> __param_table, jule::Ptr<_1ad33ce0a_Scope> __param_scope, jule::Ptr<_1ab01d615_ScopeTree> __param_tree, jule::Ptr<_1ad429931_TypeKind> __param_result, jule::U64 __param_it, jule::U64 __param_cse, jule::Ptr<jule::Slice<jule::Ptr<_1ad3582dd_ScopeLabel>>> __param_labels, jule::Ptr<jule::Slice<jule::Ptr<_1ad35850d_ScopeGoto>>> __param_gotos, jule::I64 __param_i): _field_called_from(__param_called_from), _field_s(__param_s), _field_owner(__param_owner), _field_parent(__param_parent), _field_child_index(__param_child_index), _field_table(__param_table), _field_scope(__param_scope), _field_tree(__param_tree), _field_result(__param_result), _field_it(__param_it), _field_cse(__param_cse), _field_labels(__param_labels), _field_gotos(__param_gotos), _field_i(__param_i) {}

	

	_1ad35872d_ScopeChecker(void) = default;

	inline bool operator==(_1ad35872d_ScopeChecker _other) {
		return 
			this->_field_called_from == _other._field_called_from &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_child_index == _other._field_child_index &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ad35872d_ScopeChecker _other) { return !this->operator==(_other); }


};
inline void _1ad36bea0_check_cdef(_1ad36b9b6_DirectiveChecker*,jule::Ptr<_1aaeaeb7d_Directive>&);
inline void _1ad36c2be_check_typedef(_1ad36b9b6_DirectiveChecker*,jule::Ptr<_1aaeaeb7d_Directive>&);
inline void _1ad36c5dd_check_derive(_1ad36b9b6_DirectiveChecker*,jule::Ptr<_1aaeaeb7d_Directive>&);
inline void _1ad36c90c_check_namespace(_1ad36b9b6_DirectiveChecker*,jule::Ptr<_1aaeaeb7d_Directive>&);
inline void _1ad36cc2b_check_deprecated(_1ad36b9b6_DirectiveChecker*,jule::Ptr<_1aaeaeb7d_Directive>&);
inline void _1ad36d04a_check_test(_1ad36b9b6_DirectiveChecker*,jule::Ptr<_1aaeaeb7d_Directive>&);
inline void _1ad36d369_check_directive(_1ad36b9b6_DirectiveChecker*,jule::Ptr<_1aaeaeb7d_Directive>&);
inline void _1ad36d5ab_check(_1ad36b9b6_DirectiveChecker*);
struct _1ad36b9b6_DirectiveChecker {
	jule::Ptr<_1ad37cd5c_Sema> _field_s = jule::Ptr<_1ad37cd5c_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>>();
	jule::Any _field_o = jule::Any();


	_1ad36b9b6_DirectiveChecker(jule::Ptr<_1ad37cd5c_Sema> __param_s, jule::Ptr<jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>> __param_d, jule::Any __param_o): _field_s(__param_s), _field_d(__param_d), _field_o(__param_o) {}

	

	_1ad36b9b6_DirectiveChecker(void) = default;

	inline bool operator==(_1ad36b9b6_DirectiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1ad36b9b6_DirectiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad3771ec_find_package(_1ad376b8b_Package*,jule::Str);
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad3775a4_select_package(_1ad376b8b_Package*,jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)>);
inline jule::Ptr<_1ad39e037_Var> _1ad377a38_find_var(_1ad376b8b_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_1ad428996_TypeAlias> _1ad377ebc_find_type_alias(_1ad376b8b_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac661075_Struct> _1ad378451_find_struct(_1ad376b8b_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac676a08_Fn> _1ad3788d5_find_fn(_1ad376b8b_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac85d096_Trait> _1ad378c8c_find_trait(_1ad376b8b_Package*,jule::Str);
inline jule::Ptr<_1ac724545_Enum> _1ad379144_find_enum(_1ad376b8b_Package*,jule::Str);
struct _1ad376b8b_Package {
	jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>();


	_1ad376b8b_Package(jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>> __param_files): _field_files(__param_files) {}

	

	_1ad376b8b_Package(void) = default;

	inline bool operator==(_1ad376b8b_Package _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1ad376b8b_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad37d412_find_package(_1ad37cd5c_Sema*,jule::Str);
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad37d7b9_select_package(_1ad37cd5c_Sema*,jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)>);
inline jule::Ptr<_1ad39e037_Var> _1ad37dc4d_find_var(_1ad37cd5c_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_1ad428996_TypeAlias> _1ad37e1d2_find_type_alias(_1ad37cd5c_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac661075_Struct> _1ad37e666_find_struct(_1ad37cd5c_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac676a08_Fn> _1ad37eaea_find_fn(_1ad37cd5c_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac85d096_Trait> _1ad37eea2_find_trait(_1ad37cd5c_Sema*,jule::Str);
inline jule::Ptr<_1ac724545_Enum> _1ad380359_find_enum(_1ad37cd5c_Sema*,jule::Str);
inline jule::Bool _1ad3807cc_is_flag(_1ad37cd5c_Sema*,jule::I64);
inline void _1ad380aeb_set_current_file(_1ad37cd5c_Sema*,jule::Ptr<_1ad3e062d_SymbolTable>);
inline void _1ad3810c4_push_err(_1ad37cd5c_Sema*,_1ab005531_Token,jule::Str,jule::Slice<jule::Any>);
inline void _1ad3814c0_push_suggestion(_1ad37cd5c_Sema*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1ad381954_is_accessible_define(_1ad37cd5c_Sema*,jule::Bool,_1ab005531_Token);
inline jule::Bool _1ad381eb5_is_duplicated_ident(_1ad37cd5c_Sema*,jule::U64,jule::Str,jule::Bool);
inline void _1ad3823b1_check_directives(jule::Ptr<_1ad37cd5c_Sema>,jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>&,jule::Any);
inline jule::Bool _1ad382922_check_generic_quantity(_1ad37cd5c_Sema*,jule::I64,jule::I64,_1ab005531_Token);
inline jule::Bool _1ad382dea_is_duplicated_import_selection(_1ad37cd5c_Sema*,jule::U64,jule::Str);
inline jule::Any _1ad38336d_get_import_def(_1ad37cd5c_Sema*,jule::Str,jule::Ptr<_1ad3736b0_ImportInfo>&);
inline jule::Bool _1ad383769_check_import_selections(_1ad37cd5c_Sema*,jule::Ptr<_1ad3736b0_ImportInfo>&);
inline jule::Bool _1ad383b54_is_use_alias_duplication(_1ad37cd5c_Sema*,jule::Ptr<_1ad3736b0_ImportInfo>&);
inline jule::Bool _1ad383eea_check_import(_1ad37cd5c_Sema*,jule::Ptr<_1ad3736b0_ImportInfo>&);
inline void _1ad38423c_check_imports(_1ad37cd5c_Sema*);
inline void _1ad38447e_impl_file_impls(jule::Ptr<_1ad37cd5c_Sema>);
inline void _1ad3846c1_impl_impls(jule::Ptr<_1ad37cd5c_Sema>);
inline void _1ad384913_check_enums(jule::Ptr<_1ad37cd5c_Sema>);
inline jule::Bool _1ad384e74_check_type_with_refers(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ad42e293_TypeSymbol>&,jule::Trait<_1ad447256_Lookup>,jule::Ptr<_1ad43a6de_Referencer>);
inline jule::Bool _1ad385408_check_type(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ad42e293_TypeSymbol>&,jule::Trait<_1ad447256_Lookup>);
inline jule::Ptr<_1ad429931_TypeKind> _1ad3858d1_build_type_with_generics(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1aae075dc_TypeDecl>&,jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>);
inline jule::Ptr<_1ad429931_TypeKind> _1ad385c77_build_type(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1aae075dc_TypeDecl>&);
inline jule::Ptr<_1ad429931_TypeKind> _1ad38612e_select_type(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1aae075dc_TypeDecl>&);
inline jule::Ptr<_1ad3e89cc_Eval> _1ad386690_evalpd(jule::Ptr<_1ad37cd5c_Sema>,jule::Trait<_1ad447256_Lookup>,jule::Ptr<_1ad429931_TypeKind>,jule::Ptr<_1ad39e037_Var>);
inline jule::Ptr<_1ad3e89cc_Eval> _1ad386b24_evalp(jule::Ptr<_1ad37cd5c_Sema>,jule::Trait<_1ad447256_Lookup>,jule::Ptr<_1ad429931_TypeKind>);
inline jule::Ptr<_1ad3e89cc_Eval> _1ad386ecb_eval(jule::Ptr<_1ad37cd5c_Sema>,jule::Trait<_1ad447256_Lookup>);
inline jule::Bool _1ad387619_check_assign_type(jule::Ptr<_1ad37cd5c_Sema>,jule::Bool,jule::Ptr<_1ad429931_TypeKind>&,jule::Ptr<_1ad3e6975_Data>&,_1ab005531_Token);
inline jule::Bool _1ad387bbe_check_type_compatibility(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ad429931_TypeKind>&,jule::Ptr<_1ad429931_TypeKind>&,_1ab005531_Token&);
inline jule::Ptr<_1ad429931_TypeKind> _1ad388186_build_non_generic_type_kind(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1aae075dc_TypeDecl>&,jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>&);
inline void _1ad3884d8_build_fn_non_generic_type_kinds(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac67a501_FnIns>&);
inline jule::Ptr<_1ac67a501_FnIns> _1ad3888c3_get_trait_check_fn_kind(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac676a08_Fn>&);
inline jule::Bool _1ad388c69_reload_fn_ins_types(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac67a501_FnIns>&);
inline jule::Bool _1ad389341_check_ref_validity_for_init_expr(jule::Ptr<_1ad37cd5c_Sema>,jule::Bool,jule::Ptr<_1ad3e6975_Data>&,_1ab005531_Token&);
inline jule::Bool _1ad389aa0_check_validity_for_init_expr(jule::Ptr<_1ad37cd5c_Sema>,jule::Bool,jule::Bool,jule::Ptr<_1ad429931_TypeKind>&,jule::Ptr<_1ad3e6975_Data>&,_1ab005531_Token&);
inline jule::Bool _1ad38a034_check_type_alias_decl_kind(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ad428996_TypeAlias>&,jule::Trait<_1ad447256_Lookup>);
inline void _1ad38a41e_check_type_alias_decl(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ad428996_TypeAlias>&,jule::Trait<_1ad447256_Lookup>);
inline void _1ad38a782_check_type_alias_decl_dup(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ad428996_TypeAlias>&);
inline jule::Bool _1ad38aa4b_check_type_alias_decls(jule::Ptr<_1ad37cd5c_Sema>);
inline void _1ad38ad6a_check_enum_items_dup(_1ad37cd5c_Sema*,jule::Ptr<_1ac724545_Enum>);
inline void _1ad38b189_check_enum_items_str(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac724545_Enum>&);
inline void _1ad38b4a8_check_enum_items_int(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac724545_Enum>&);
inline void _1ad38b7c7_check_enum_decl(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac724545_Enum>&);
inline jule::Bool _1ad38baa2_check_enum_decls(jule::Ptr<_1ad37cd5c_Sema>);
inline jule::Bool _1ad38be59_check_decl_generics(_1ad37cd5c_Sema*,jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>&);
inline jule::Bool _1ad38c355_check_fn_decl_params_dup(_1ad37cd5c_Sema*,jule::Ptr<_1ac676a08_Fn>&);
inline jule::Bool _1ad38c740_check_fn_decl_result_dup(_1ad37cd5c_Sema*,jule::Ptr<_1ac676a08_Fn>&);
inline void _1ad38ca4d_check_fn_decl_types(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac676a08_Fn>&);
inline void _1ad38cdb1_check_fn_decl_prototype(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac676a08_Fn>&);
inline void _1ad38d213_check_trait_decl_method(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac676a08_Fn>&);
inline void _1ad38d565_check_trait_decl_methods(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac85d096_Trait>&);
inline void _1ad38d873_check_trait_decl(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac85d096_Trait>&);
inline jule::Bool _1ad38db4d_check_trait_decls(jule::Ptr<_1ad37cd5c_Sema>);
inline jule::Bool _1ad38e126_check_trait_impl_methods(_1ad37cd5c_Sema*,jule::Ptr<_1ac85d096_Trait>&,jule::Ptr<_1ac76d3b3_Impl>&);
inline jule::Bool _1ad38e599_impl_to_struct(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac661075_Struct>&,jule::Ptr<_1ac76d3b3_Impl>&);
inline void _1ad38e8b8_impl_trait(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac76d3b3_Impl>&);
inline void _1ad38ebd7_impl_struct(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac76d3b3_Impl>&);
inline void _1ad390006_impl_impl(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac76d3b3_Impl>&);
inline void _1ad390402_check_var_decl(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ad39e037_Var>&,jule::Trait<_1ad447256_Lookup>);
inline void _1ad390721_check_global_var_decl(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ad39e037_Var>&);
inline jule::Bool _1ad3909eb_check_global_decls(jule::Ptr<_1ad37cd5c_Sema>);
inline jule::Bool _1ad390ec4_check_struct_trait_impl(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac661075_Struct>&,jule::Ptr<_1ac85d096_Trait>&);
inline jule::Bool _1ad39136a_check_struct_impls(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac661075_Struct>&);
inline jule::Bool _1ad391722_check_struct_fields(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac661075_Struct>&);
inline jule::Bool _1ad391b1d_check_struct_decl_methods(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac661075_Struct>&);
inline void _1ad391e2b_check_struct_decl(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac661075_Struct>&);
inline jule::Bool _1ad392206_check_struct_decls(jule::Ptr<_1ad37cd5c_Sema>);
inline void _1ad392525_check_fn_decl(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac676a08_Fn>&);
inline jule::Bool _1ad392800_check_fn_decls(jule::Ptr<_1ad37cd5c_Sema>);
inline void _1ad392cc8_push_cycle_error(_1ad37cd5c_Sema*,jule::Ptr<_1ac661075_Struct>&,jule::Ptr<_1ac661075_Struct>&,jule::Str&);
inline jule::Bool _1ad393339_check_cross_cycle(_1ad37cd5c_Sema*,jule::Ptr<_1ac661075_Struct>&,jule::Ptr<_1ac661075_Struct>&,jule::Str&);
inline jule::Bool _1ad393911_check_struct_derive_illegal_cycles(_1ad37cd5c_Sema*,jule::Str,jule::Ptr<_1ac661075_Struct>&,jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Bool _1ad393cc9_check_struct_ins_derive_clone(_1ad37cd5c_Sema*,jule::Ptr<_1ac664551_StructIns>);
inline jule::Bool _1ad3941b4_check_struct_derive_clone(_1ad37cd5c_Sema*,jule::Ptr<_1ac661075_Struct>&);
inline jule::Bool _1ad39447d_check_file_derives(_1ad37cd5c_Sema*);
inline void _1ad3946c0_check_package_derives(_1ad37cd5c_Sema*);
inline void _1ad394912_check_package_decls(jule::Ptr<_1ad37cd5c_Sema>);
inline void _1ad394d52_check_data_for_type_inference(_1ad37cd5c_Sema*,jule::Ptr<_1ad3e6975_Data>&,_1ab005531_Token&);
inline void _1ad395160_check_var(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ad39e037_Var>&);
inline void _1ad39555b_check_type_var(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ad39e037_Var>&,jule::Trait<_1ad447256_Lookup>);
inline void _1ad39579d_check_global_types(jule::Ptr<_1ad37cd5c_Sema>);
inline jule::Ptr<_1ac67a501_FnIns> _1ad395c32_ready_to_check_fn(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac664551_StructIns>&,jule::Ptr<_1ac676a08_Fn>&);
inline void _1ad39612d_check_type_method(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac664551_StructIns>&,jule::Ptr<_1ac676a08_Fn>&);
inline void _1ad39644c_check_field_defaults(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac664551_StructIns>&);
inline jule::Ptr<_1ac67a501_FnIns> _1ad3969ad_check_struct_ins_op(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac664551_StructIns>&,jule::Ptr<_1ac676a08_Fn>&,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>);
inline void _1ad396ccc_check_struct_ins(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac664551_StructIns>&);
inline void _1ad3970eb_check_type_struct(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac661075_Struct>&);
inline void _1ad39733d_check_struct_types(jule::Ptr<_1ad37cd5c_Sema>);
inline void _1ad3976a1_check_struct_ins_operators(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac664551_StructIns>);
inline void _1ad397a03_check_type_struct_operators(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac661075_Struct>&);
inline void _1ad397c78_check_struct_types_operators(jule::Ptr<_1ad37cd5c_Sema>);
inline void _1ad398086_check_rets(_1ad37cd5c_Sema*,jule::Ptr<_1ac67a501_FnIns>&);
inline void _1ad398482_check_fn_ins_sc(_1ad37cd5c_Sema*,jule::Ptr<_1ac67a501_FnIns>&,jule::Ptr<_1ad35872d_ScopeChecker>&);
inline void _1ad39887d_check_fn_ins_caller(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac67a501_FnIns>&,jule::Ptr<_1ab005531_Token>);
inline void _1ad398b9c_check_fn_ins(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac67a501_FnIns>&);
inline void _1ad398ebb_check_type_fn(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac676a08_Fn>&);
inline void _1ad3992da_check_test_fn(_1ad37cd5c_Sema*,jule::Ptr<_1ac67a501_FnIns>&);
inline void _1ad399609_precheck_type_fn(jule::Ptr<_1ad37cd5c_Sema>,jule::Ptr<_1ac676a08_Fn>&);
inline void _1ad39984b_precheck_fn_types(jule::Ptr<_1ad37cd5c_Sema>);
inline void _1ad399a8d_check_fn_types(jule::Ptr<_1ad37cd5c_Sema>);
inline void _1ad399cd0_check_package_types(jule::Ptr<_1ad37cd5c_Sema>);
inline void _1ad39a022_set_file_sema_fields(jule::Ptr<_1ad37cd5c_Sema>);
inline void _1ad39a264_set_sema_fields(jule::Ptr<_1ad37cd5c_Sema>);
inline void _1ad39a583_check(jule::Ptr<_1ad37cd5c_Sema>,jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>&);
struct _1ad37cd5c_Sema {
	jule::Slice<_1a92a31c6_Log> _field_errors = jule::Slice<_1a92a31c6_Log>();
	jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>();
	jule::Ptr<_1ad3e062d_SymbolTable> _field_file = jule::Ptr<_1ad3e062d_SymbolTable>();
	jule::I64 _field_flags = 0LL;


	_1ad37cd5c_Sema(jule::Slice<_1a92a31c6_Log> __param_errors, jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>> __param_files, jule::Ptr<_1ad3e062d_SymbolTable> __param_file, jule::I64 __param_flags): _field_errors(__param_errors), _field_files(__param_files), _field_file(__param_file), _field_flags(__param_flags) {}

	

	_1ad37cd5c_Sema(void) = default;

	inline bool operator==(_1ad37cd5c_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1ad37cd5c_Sema _other) { return !this->operator==(_other); }


};
inline _1ad39a9d4_MissingRetChecker static__1ad39add0_new(void);
inline jule::Bool _1ad39b254_check_conditional(_1ad39a9d4_MissingRetChecker*,jule::Ptr<_1ad355dac_Conditional>);
inline jule::Bool _1ad39b60b_check_match(_1ad39a9d4_MissingRetChecker*,jule::Ptr<_1ad35772c_Match>);
inline jule::Bool _1ad39b9b3_check_inf_iter(_1ad39a9d4_MissingRetChecker*,jule::Ptr<_1ad3560cc_InfIter>);
inline jule::Bool _1ad39bd6a_check_scope(_1ad39a9d4_MissingRetChecker*,jule::Ptr<_1ad33ce0a_Scope>);
inline jule::Bool _1ad39c222_check(_1ad39a9d4_MissingRetChecker*,jule::Ptr<_1ad33ce0a_Scope>);
struct _1ad39a9d4_MissingRetChecker {
	jule::Slice<jule::U64> _field_breaked = jule::Slice<jule::U64>();
	jule::Bool _field_falled = jule::Bool();


	_1ad39a9d4_MissingRetChecker(jule::Slice<jule::U64> __param_breaked, jule::Bool __param_falled): _field_breaked(__param_breaked), _field_falled(__param_falled) {}

	

	_1ad39a9d4_MissingRetChecker(void) = default;

	inline bool operator==(_1ad39a9d4_MissingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1ad39a9d4_MissingRetChecker _other) { return !this->operator==(_other); }


};
struct _1ad39cc28_IterRelation {
	jule::Ptr<_1ad39e037_Var> _field_range = jule::Ptr<_1ad39e037_Var>();


	_1ad39cc28_IterRelation(jule::Ptr<_1ad39e037_Var> __param_range): _field_range(__param_range) {}

	

	_1ad39cc28_IterRelation(void) = default;

	inline bool operator==(_1ad39cc28_IterRelation _other) {
		return 
			this->_field_range == _other._field_range;
	}

	inline bool operator!=(_1ad39cc28_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1ad3a0335_dispose(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a0643_to_str(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a0a2d_logical(jule::Ptr<_1ac676a08_Fn>&,jule::Str);
inline jule::Bool static__1ad3a0d3b_eq(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a1149_gt(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a1457_gt_eq(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a1765_lt(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a1a73_lt_eq(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a1e5d_result(jule::Ptr<_1ac676a08_Fn>&,jule::Str);
inline jule::Bool static__1ad3a226b_shl(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a2579_shr(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a2887_add(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a2b95_sub(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a2ea3_div(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a32b1_mul(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a35be_mod(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a38cc_bit_and(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a3bda_bit_or(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a3ee8_bit_xor(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a43d3_unary(jule::Ptr<_1ac676a08_Fn>&,jule::Str);
inline jule::Bool static__1ad3a46e1_neg(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a49ee_pos(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a4d0c_bit_not(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a51e7_assign(jule::Ptr<_1ac676a08_Fn>&,jule::Str);
inline jule::Bool static__1ad3a5505_add_assign(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a5813_sub_assign(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a5b21_div_assign(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a5e2e_mul_assign(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a623c_mod_assign(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a654a_shl_assign(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a6858_shr_assign(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a6b66_bit_or_assign(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a6e74_bit_and_assign(jule::Ptr<_1ac676a08_Fn>);
inline jule::Bool static__1ad3a7282_bit_xor_assign(jule::Ptr<_1ac676a08_Fn>);
struct _1ad39eb4d_FuncPattern {
	

	_1ad39eb4d_FuncPattern(void) = default;

	inline bool operator==(_1ad39eb4d_FuncPattern _other) { return true; }

	inline bool operator!=(_1ad39eb4d_FuncPattern _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad39e037_Var> _1ad3db096_build_var(_1ad3daa57_RangeChecker*,jule::Ptr<_1ab01e6d2_VarDecl>&);
inline void _1ad3db2d8_set_size_key(_1ad3daa57_RangeChecker*);
inline void _1ad3db805_check_range_expr_validity(_1ad3daa57_RangeChecker*,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ad39e037_Var>&,jule::Ptr<_1ad429931_TypeKind>&);
inline void _1ad3dba36_check_slice(_1ad3daa57_RangeChecker*);
inline void _1ad3dbc78_check_array(_1ad3daa57_RangeChecker*);
inline void _1ad3dbeba_check_map_key_a(_1ad3daa57_RangeChecker*);
inline void _1ad3dc20c_check_map_key_b(_1ad3daa57_RangeChecker*);
inline void _1ad3dc44e_check_map(_1ad3daa57_RangeChecker*);
inline void _1ad3dc691_check_str(_1ad3daa57_RangeChecker*);
inline jule::Bool _1ad3dc96b_check(_1ad3daa57_RangeChecker*);
struct _1ad3daa57_RangeChecker {
	jule::Ptr<_1ad35872d_ScopeChecker> _field_sc = jule::Ptr<_1ad35872d_ScopeChecker>();
	jule::Ptr<_1ab020bcd_RangeKind> _field_rang = jule::Ptr<_1ab020bcd_RangeKind>();
	jule::Ptr<_1ad35651c_RangeIter> _field_kind = jule::Ptr<_1ad35651c_RangeIter>();
	jule::Ptr<_1ad3e6975_Data> _field_d = jule::Ptr<_1ad3e6975_Data>();


	_1ad3daa57_RangeChecker(jule::Ptr<_1ad35872d_ScopeChecker> __param_sc, jule::Ptr<_1ab020bcd_RangeKind> __param_rang, jule::Ptr<_1ad35651c_RangeIter> __param_kind, jule::Ptr<_1ad3e6975_Data> __param_d): _field_sc(__param_sc), _field_rang(__param_rang), _field_kind(__param_kind), _field_d(__param_d) {}

	

	_1ad3daa57_RangeChecker(void) = default;

	inline bool operator==(_1ad3daa57_RangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_kind == _other._field_kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1ad3daa57_RangeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad3e0bd3_find_package(_1ad3e062d_SymbolTable*,jule::Str);
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad3e108a_select_package(_1ad3e062d_SymbolTable*,jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)>);
inline jule::Ptr<_1ad39e037_Var> _1ad3e151e_find_var(_1ad3e062d_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_1ad428996_TypeAlias> _1ad3e19a3_find_type_alias(_1ad3e062d_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac661075_Struct> _1ad3e1e37_find_struct(_1ad3e062d_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac676a08_Fn> _1ad3e23bb_find_fn(_1ad3e062d_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac85d096_Trait> _1ad3e2773_find_trait(_1ad3e062d_SymbolTable*,jule::Str);
inline jule::Ptr<_1ac724545_Enum> _1ad3e2b2a_find_enum(_1ad3e062d_SymbolTable*,jule::Str);
inline jule::Ptr<_1ad39e037_Var> _1ad3e32ac___find_var(_1ad3e062d_SymbolTable*,jule::Str,jule::Bool,jule::Bool);
inline jule::Ptr<_1ad428996_TypeAlias> _1ad3e381d___find_type_alias(_1ad3e062d_SymbolTable*,jule::Str,jule::Bool,jule::Bool);
inline jule::Any _1ad3e3ca2_def_by_ident(_1ad3e062d_SymbolTable*,jule::Str,jule::Bool);
inline jule::Bool _1ad3e4313_is_duplicated_ident(_1ad3e062d_SymbolTable*,jule::U64,jule::Str,jule::Bool);
struct _1ad3e062d_SymbolTable {
	jule::Ptr<_1ab00b67a_File> _field_file = jule::Ptr<_1ab00b67a_File>();
	jule::Slice<_1ac68055b_Pass> _field_passes = jule::Slice<_1ac68055b_Pass>();
	jule::Slice<jule::Ptr<_1ad3736b0_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_1ad3736b0_ImportInfo>>();
	jule::Slice<jule::Ptr<_1ad39e037_Var>> _field_vars = jule::Slice<jule::Ptr<_1ad39e037_Var>>();
	jule::Slice<jule::Ptr<_1ad428996_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>();
	jule::Slice<jule::Ptr<_1ac661075_Struct>> _field_structs = jule::Slice<jule::Ptr<_1ac661075_Struct>>();
	jule::Slice<jule::Ptr<_1ac676a08_Fn>> _field_funcs = jule::Slice<jule::Ptr<_1ac676a08_Fn>>();
	jule::Slice<jule::Ptr<_1ac85d096_Trait>> _field_traits = jule::Slice<jule::Ptr<_1ac85d096_Trait>>();
	jule::Slice<jule::Ptr<_1ac724545_Enum>> _field_enums = jule::Slice<jule::Ptr<_1ac724545_Enum>>();
	jule::Slice<jule::Ptr<_1ac76d3b3_Impl>> _field_impls = jule::Slice<jule::Ptr<_1ac76d3b3_Impl>>();


	_1ad3e062d_SymbolTable(jule::Ptr<_1ab00b67a_File> __param_file, jule::Slice<_1ac68055b_Pass> __param_passes, jule::Slice<jule::Ptr<_1ad3736b0_ImportInfo>> __param_imports, jule::Slice<jule::Ptr<_1ad39e037_Var>> __param_vars, jule::Slice<jule::Ptr<_1ad428996_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ptr<_1ac661075_Struct>> __param_structs, jule::Slice<jule::Ptr<_1ac676a08_Fn>> __param_funcs, jule::Slice<jule::Ptr<_1ac85d096_Trait>> __param_traits, jule::Slice<jule::Ptr<_1ac724545_Enum>> __param_enums, jule::Slice<jule::Ptr<_1ac76d3b3_Impl>> __param_impls): _field_file(__param_file), _field_passes(__param_passes), _field_imports(__param_imports), _field_vars(__param_vars), _field_type_aliases(__param_type_aliases), _field_structs(__param_structs), _field_funcs(__param_funcs), _field_traits(__param_traits), _field_enums(__param_enums), _field_impls(__param_impls) {}

	

	_1ad3e062d_SymbolTable(void) = default;

	inline bool operator==(_1ad3e062d_SymbolTable _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_passes == _other._field_passes &&
			this->_field_imports == _other._field_imports &&
			this->_field_vars == _other._field_vars &&
			this->_field_type_aliases == _other._field_type_aliases &&
			this->_field_structs == _other._field_structs &&
			this->_field_funcs == _other._field_funcs &&
			this->_field_traits == _other._field_traits &&
			this->_field_enums == _other._field_enums &&
			this->_field_impls == _other._field_impls;
	}

	inline bool operator!=(_1ad3e062d_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ad3e6dc6_is_nil(_1ad3e6975_Data*);
inline jule::Bool _1ad3e71a1_is_void(_1ad3e6975_Data*);
inline jule::Bool _1ad3e747b_is_const(_1ad3e6975_Data*);
inline jule::Bool _1ad3e7833_good_operand(_1ad3e6975_Data*,jule::Ptr<_1ad3e6975_Data>&);
struct _1ad3e6975_Data {
	jule::Ptr<_1ad429931_TypeKind> _field_kind = jule::Ptr<_1ad429931_TypeKind>();
	jule::Ptr<_1ad429931_TypeKind> _field_cast_kind = jule::Ptr<_1ad429931_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_1ad2c1d8e_Const> _field_constant = jule::Ptr<_1ad2c1d8e_Const>();


	_1ad3e6975_Data(jule::Ptr<_1ad429931_TypeKind> __param_kind, jule::Ptr<_1ad429931_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ptr<_1ad2c1d8e_Const> __param_constant): _field_kind(__param_kind), _field_cast_kind(__param_cast_kind), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_lvalue(__param_lvalue), _field_is_rune(__param_is_rune), _field_model(__param_model), _field_decl(__param_decl), _field_constant(__param_constant) {}

	

	_1ad3e6975_Data(void) = default;

	inline bool operator==(_1ad3e6975_Data _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_cast_kind == _other._field_cast_kind &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_lvalue == _other._field_lvalue &&
			this->_field_is_rune == _other._field_is_rune &&
			this->_field_model == _other._field_model &&
			this->_field_decl == _other._field_decl &&
			this->_field_constant == _other._field_constant;
	}

	inline bool operator!=(_1ad3e6975_Data _other) { return !this->operator==(_other); }


};
struct _1ad3e7c84_Value {
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();
	jule::Ptr<_1ad3e6975_Data> _field_data = jule::Ptr<_1ad3e6975_Data>();


	_1ad3e7c84_Value(jule::Ptr<_1aadb528c_Expr> __param_expr, jule::Ptr<_1ad3e6975_Data> __param_data): _field_expr(__param_expr), _field_data(__param_data) {}

	

	_1ad3e7c84_Value(void) = default;

	inline bool operator==(_1ad3e7c84_Value _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ad3e7c84_Value _other) { return !this->operator==(_other); }


};
inline void _1ad3e90b5_push_err(_1ad3e89cc_Eval*,_1ab005531_Token,jule::Str,jule::Slice<jule::Any>);
inline void _1ad3e94b1_push_suggestion(_1ad3e89cc_Eval*,jule::Str,jule::Slice<jule::Any>);
inline void _1ad3e9703_allow_builtin(_1ad3e89cc_Eval*);
inline void _1ad3e9945_disallow_builtin(_1ad3e89cc_Eval*);
inline jule::Bool _1ad3e9c20_is_unsafe(_1ad3e89cc_Eval*);
inline jule::Bool _1ad3e9eea_is_global(_1ad3e89cc_Eval*);
inline jule::Bool _1ad3ea3a2_apply_numeric_prefix(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad3ea67c_lit_nil(_1ad3e89cc_Eval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad3eaa34_lit_str(_1ad3e89cc_Eval*,jule::Ptr<_1aadb5b2d_LitExpr>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad3eaddb_lit_bool(_1ad3e89cc_Eval*,jule::Ptr<_1aadb5b2d_LitExpr>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad3eb293_lit_rune(_1ad3e89cc_Eval*,jule::Ptr<_1aadb5b2d_LitExpr>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad3eb64a_lit_float(_1ad3e89cc_Eval*,jule::Ptr<_1aadb5b2d_LitExpr>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad3eba02_lit_int(_1ad3e89cc_Eval*,jule::Ptr<_1aadb5b2d_LitExpr>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad3ebda9_lit_num(_1ad3e89cc_Eval*,jule::Ptr<_1aadb5b2d_LitExpr>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad3ec261_eval_lit(_1ad3e89cc_Eval*,jule::Ptr<_1aadb5b2d_LitExpr>);
inline jule::Any _1ad3ec618_find_builtins(_1ad3e89cc_Eval*,jule::Str);
inline jule::Any _1ad3eca9c_get_def(_1ad3e89cc_Eval*,jule::Str,jule::Bool);
inline void _1ad3ecdbb_push_reference(_1ad3e89cc_Eval*,jule::Ptr<_1ac67de2d_ReferenceStack>&);
inline void _1ad3ed1da_push_reference_to_fn(_1ad3e89cc_Eval*,jule::Ptr<_1ac67a501_FnIns>&);
inline void _1ad3ed509_push_reference_to_var(_1ad3e89cc_Eval*,jule::Ptr<_1ad39e037_Var>&);
inline void _1ad3ed86c_push_reference_to_struct(_1ad3e89cc_Eval*,jule::Ptr<_1ac664551_StructIns>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad3edc13___eval_enum(_1ad3e89cc_Eval*,jule::Ptr<_1ac724545_Enum>);
inline jule::Ptr<_1ad3e6975_Data> _1ad3ee197_eval_enum(_1ad3e89cc_Eval*,jule::Ptr<_1ac724545_Enum>,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad3ee54e___eval_struct(_1ad3e89cc_Eval*,jule::Ptr<_1ac664551_StructIns>);
inline jule::Ptr<_1ad3e6975_Data> _1ad3ee9d3_eval_struct(_1ad3e89cc_Eval*,jule::Ptr<_1ac664551_StructIns>,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad3eed8a_eval_fn_ins(_1ad3e89cc_Eval*,jule::Ptr<_1ac67a501_FnIns>);
inline void _1ad400286_check_deprecated(_1ad3e89cc_Eval*,jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>&,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad40071a_eval_fn(_1ad3e89cc_Eval*,jule::Ptr<_1ac676a08_Fn>,_1ab005531_Token);
inline void _1ad400c37_push_illegal_cycle_error(_1ad3e89cc_Eval*,jule::Ptr<_1ad39e037_Var>&,jule::Ptr<_1ad39e037_Var>&,jule::Str&);
inline jule::Bool _1ad4011aa_check_cross_cycle(_1ad3e89cc_Eval*,jule::Ptr<_1ad39e037_Var>&,jule::Str&);
inline jule::Bool _1ad40163e_check_illegal_cycles(_1ad3e89cc_Eval*,jule::Ptr<_1ad39e037_Var>&,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad401ac3_eval_var(_1ad3e89cc_Eval*,jule::Ptr<_1ad39e037_Var>,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad402057_eval_type_alias(_1ad3e89cc_Eval*,jule::Ptr<_1ad428996_TypeAlias>,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad4024db_eval_def(_1ad3e89cc_Eval*,jule::Any,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad402893_eval_ident(_1ad3e89cc_Eval*,jule::Ptr<_1aadb628d_IdentExpr>);
inline jule::Ptr<_1ad3e6975_Data> _1ad402c4a_eval_unary(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1aadb64ad_UnaryExpr>);
inline jule::Ptr<_1ad3e6975_Data> _1ad403102_eval_variadic(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1aadb66cd_VariadicExpr>);
inline jule::Ptr<_1ad3e6975_Data> _1ad4034a9_eval_unsafe(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1aadb5d4d_UnsafeExpr>);
inline jule::Ptr<_1ad3e6975_Data> _1ad403861_eval_arr(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ab01be82_SliceExpr>);
inline jule::Ptr<_1ad3e6975_Data> _1ad403ce5_eval_exp_slc(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ab01be82_SliceExpr>,jule::Ptr<_1ad429931_TypeKind>);
inline jule::Ptr<_1ad3e6975_Data> _1ad40419c_eval_slice_expr(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ab01be82_SliceExpr>);
inline void _1ad4045dc_check_integer_indexing_by_data(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>&,_1ab005531_Token);
inline void _1ad404aa4_indexing_ptr(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1aadb58ec_IndexingExpr>&);
inline void _1ad40507c_indexing_arr(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1aadb58ec_IndexingExpr>&);
inline void _1ad405555_indexing_slc(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1aadb58ec_IndexingExpr>&);
inline void _1ad405a2d_indexing_map(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1aadb58ec_IndexingExpr>&);
inline void _1ad406006_indexing_str(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1aadb58ec_IndexingExpr>&);
inline void _1ad4064ce_to_indexing(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1aadb58ec_IndexingExpr>&);
inline jule::Bool _1ad4069a7_push_generics_from_index_data(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1aaec9b87_IdentTypeDecl>&,jule::Ptr<_1aadb58ec_IndexingExpr>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad406e6e_eval_ident_decl_from_indexing(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1aadb58ec_IndexingExpr>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad407315_eval_indexing(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1aadb58ec_IndexingExpr>);
inline std::tuple<jule::Ptr<_1ad3e6975_Data>,jule::Ptr<_1ad3e6975_Data>> _1ad4076bc_eval_slicing_exprs(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ab01c625_SlicingExpr>&);
inline void _1ad4079db_slicing_arr(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>&);
inline void _1ad407eb4_slicing_str(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ad3e6975_Data>&);
inline void _1ad408569_check_slicing(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ab01c625_SlicingExpr>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad408921_eval_slicing(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ab01c625_SlicingExpr>);
inline void _1ad408de9_cast_ptr(_1ad3e89cc_Eval*,jule::Ptr<_1ad429931_TypeKind>,jule::Ptr<_1ad3e6975_Data>,_1ab005531_Token);
inline void _1ad4093c2_cast_struct(_1ad3e89cc_Eval*,jule::Ptr<_1ad429931_TypeKind>,jule::Ptr<_1ad3e6975_Data>,_1ab005531_Token);
inline void _1ad40989a_cast_ref(_1ad3e89cc_Eval*,jule::Ptr<_1ad429931_TypeKind>,jule::Ptr<_1ad3e6975_Data>,_1ab005531_Token);
inline void _1ad409d73_cast_slc(_1ad3e89cc_Eval*,jule::Ptr<_1ad429931_TypeKind>,jule::Ptr<_1ad3e6975_Data>,_1ab005531_Token);
inline void _1ad40a26e_cast_str(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>,_1ab005531_Token);
inline void _1ad40a747_cast_int(_1ad3e89cc_Eval*,jule::Ptr<_1ad429931_TypeKind>,jule::Ptr<_1ad3e6975_Data>,_1ab005531_Token);
inline void _1ad40ac20_cast_num(_1ad3e89cc_Eval*,jule::Ptr<_1ad429931_TypeKind>,jule::Ptr<_1ad3e6975_Data>,_1ab005531_Token);
inline void _1ad40b1e8_cast_prim(_1ad3e89cc_Eval*,jule::Ptr<_1ad429931_TypeKind>,jule::Ptr<_1ad3e6975_Data>,_1ab005531_Token);
inline void _1ad40b5e4_cast_constant(_1ad3e89cc_Eval*,jule::Ptr<_1ad429931_TypeKind>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad40bb99_eval_cast_by_type_n_data(_1ad3e89cc_Eval*,jule::Ptr<_1ad429931_TypeKind>,jule::Ptr<_1ad3e6975_Data>,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad40c040_eval_cast(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ab01aa52_CastExpr>);
inline jule::Ptr<_1ad3e6975_Data> _1ad40c3e7_eval_ns_selection(_1ad3e89cc_Eval*,jule::Ptr<_1ab01ac72_NsSelectionExpr>);
inline jule::Ptr<_1ad3e6975_Data> _1ad40c99c_eval_struct_lit_explicit(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ac664551_StructIns>,jule::Slice<jule::Ptr<_1aadb528c_Expr>>,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad40cd43_eval_struct_lit(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ab01b822_StructLit>);
inline jule::Ptr<_1ad3e6975_Data> _1ad40d1ea_eval_type(_1ad3e89cc_Eval*,jule::Ptr<_1aae075dc_TypeDecl>);
inline void _1ad40d5e6_call_type_fn(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1ad40da7a_check_fn_call_generics(_1ad3e89cc_Eval*,jule::Ptr<_1ac67a501_FnIns>,jule::Ptr<_1ab01b3d2_FnCallExpr>);
inline void _1ad40de76_call_builtin_fn(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline void _1ad40e3b6_check_fn_of_concurrent_call(_1ad3e89cc_Eval*,jule::Ptr<_1ac67a501_FnIns>&,_1ab005531_Token);
inline void _1ad40e8c2_process_exceptional_handler(_1ad3e89cc_Eval*,jule::Ptr<_1ac67a501_FnIns>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline void _1ad40ecac_call_fn(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad410164_eval_fn_call(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ab01b3d2_FnCallExpr>);
inline jule::Ptr<_1ad3e6975_Data> _1ad4105e8_eval_enum_static(_1ad3e89cc_Eval*,jule::Ptr<_1ac724545_Enum>,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad410a7c_eval_struct_static(_1ad3e89cc_Eval*,jule::Ptr<_1ac664551_StructIns>,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad4110dd_eval_trait_sub_ident(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>,jule::Ptr<_1ac85d096_Trait>,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad41172b_eval_struct_sub_ident(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>,jule::Ptr<_1ac664551_StructIns>,jule::Ptr<_1ab01ae92_SubIdentExpr>,jule::Bool);
inline jule::Ptr<_1ad3e6975_Data> _1ad411bb0_eval_slice_sub_ident(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad412144_eval_array_sub_ident(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad4125c8_eval_map_sub_ident(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad412a5c_eval_str_sub_ident(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad412e14_eval_int_type_static(_1ad3e89cc_Eval*,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad4132bb_eval_uint_type_static(_1ad3e89cc_Eval*,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad413673_eval_i8_type_static(_1ad3e89cc_Eval*,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad413a2a_eval_i16_type_static(_1ad3e89cc_Eval*,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad413dd2_eval_i32_type_static(_1ad3e89cc_Eval*,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad414289_eval_i64_type_static(_1ad3e89cc_Eval*,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad414641_eval_u8_type_static(_1ad3e89cc_Eval*,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad4149e8_eval_u16_type_static(_1ad3e89cc_Eval*,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad414da0_eval_u32_type_static(_1ad3e89cc_Eval*,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad415257_eval_u64_type_static(_1ad3e89cc_Eval*,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad41560e_eval_f32_type_tatic(_1ad3e89cc_Eval*,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad4159b6_eval_f64_type_static(_1ad3e89cc_Eval*,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad415e4a_eval_prim_static(_1ad3e89cc_Eval*,jule::Str,_1ab005531_Token);
inline jule::Ptr<_1ad3e6975_Data> _1ad4163ce_eval_type_static(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>,jule::Ptr<_1ab01ae92_SubIdentExpr>);
inline jule::Ptr<_1ad3e6975_Data> _1ad416863_eval_obj_sub_ident(_1ad3e89cc_Eval*,jule::Ptr<_1ad3e6975_Data>,jule::Ptr<_1ab01ae92_SubIdentExpr>);
inline jule::Ptr<_1ad3e6975_Data> _1ad416c1a_eval_sub_ident(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ab01ae92_SubIdentExpr>);
inline jule::Ptr<_1ad3e6975_Data> _1ad4170c2_eval_tuple(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1aadb56cc_TupleExpr>);
inline jule::Ptr<_1ad3e6975_Data> _1ad417556_eval_map(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ad4360be_Map>,jule::Ptr<_1ab01ba42_BraceLit>);
inline jule::Ptr<_1ad3e6975_Data> _1ad41790d_eval_brace_lit(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ab01ba42_BraceLit>);
inline jule::Ptr<_1ad3e6975_Data> _1ad417cb5_eval_anon_fn(_1ad3e89cc_Eval*,jule::Ptr<_1ab01da55_FnDecl>);
inline jule::Ptr<_1ad3e6975_Data> _1ad41816c_eval_binop(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1ab01b1b2_BinopExpr>);
inline jule::Ptr<_1ad3e6975_Data> _1ad418524_eval_expr_kind(jule::Ptr<_1ad3e89cc_Eval>,jule::Any);
inline jule::Ptr<_1ad3e6975_Data> _1ad4188cb_eval(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1aadb528c_Expr>);
inline jule::Ptr<_1ad3e6975_Data> _1ad418c83_eval_expr(jule::Ptr<_1ad3e89cc_Eval>,jule::Ptr<_1aadb528c_Expr>);
struct _1ad3e89cc_Eval {
	jule::Ptr<_1ad37cd5c_Sema> _field_s = jule::Ptr<_1ad37cd5c_Sema>();
	jule::Trait<_1ad447256_Lookup> _field_lookup = jule::Trait<_1ad447256_Lookup>();
	jule::Ptr<_1ad429931_TypeKind> _field_prefix = jule::Ptr<_1ad429931_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_1ad39e037_Var> _field_owner = jule::Ptr<_1ad39e037_Var>();
	jule::Ptr<_1ac663a06_FieldIns> _field_field = jule::Ptr<_1ac663a06_FieldIns>();
	jule::Bool _field_arg = jule::Bool();


	_1ad3e89cc_Eval(jule::Ptr<_1ad37cd5c_Sema> __param_s, jule::Trait<_1ad447256_Lookup> __param_lookup, jule::Ptr<_1ad429931_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Bool __param_immutable, jule::Bool __param_ignored, jule::Bool __param_dis_builtin, jule::Ptr<_1ad39e037_Var> __param_owner, jule::Ptr<_1ac663a06_FieldIns> __param_field, jule::Bool __param_arg): _field_s(__param_s), _field_lookup(__param_lookup), _field_prefix(__param_prefix), _field_unsafety(__param_unsafety), _field_immutable(__param_immutable), _field_ignored(__param_ignored), _field_dis_builtin(__param_dis_builtin), _field_owner(__param_owner), _field_field(__param_field), _field_arg(__param_arg) {}

	

	_1ad3e89cc_Eval(void) = default;

	inline bool operator==(_1ad3e89cc_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1ad3e89cc_Eval _other) { return !this->operator==(_other); }


};
inline _1ad4192d3_UnaryEval static__1ad419800_new(jule::Ptr<_1ad3e89cc_Eval>);
inline void _1ad419a42_minus(_1ad4192d3_UnaryEval*);
inline void _1ad419c84_plus(_1ad4192d3_UnaryEval*);
inline void _1ad419ec6_caret(_1ad4192d3_UnaryEval*);
inline void _1ad41a218_excl(_1ad4192d3_UnaryEval*);
inline void _1ad41a45a_star(_1ad4192d3_UnaryEval*);
inline void _1ad41a69c_amper(_1ad4192d3_UnaryEval*);
inline void _1ad41a8de_type_decl(_1ad4192d3_UnaryEval*);
inline void _1ad41ab31_eval_data(_1ad4192d3_UnaryEval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad41aea5_eval(_1ad4192d3_UnaryEval*,jule::Ptr<_1aadb64ad_UnaryExpr>);
struct _1ad4192d3_UnaryEval {
	jule::Ptr<_1ad3e89cc_Eval> _field_e = jule::Ptr<_1ad3e89cc_Eval>();
	jule::Ptr<_1ad3e6975_Data> _field_d = jule::Ptr<_1ad3e6975_Data>();
	jule::Ptr<_1aadb64ad_UnaryExpr> _field_u = jule::Ptr<_1aadb64ad_UnaryExpr>();


	_1ad4192d3_UnaryEval(jule::Ptr<_1ad3e89cc_Eval> __param_e, jule::Ptr<_1ad3e6975_Data> __param_d, jule::Ptr<_1aadb64ad_UnaryExpr> __param_u): _field_e(__param_e), _field_d(__param_d), _field_u(__param_u) {}

	

	_1ad4192d3_UnaryEval(void) = default;

	inline bool operator==(_1ad4192d3_UnaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1ad4192d3_UnaryEval _other) { return !this->operator==(_other); }


};
inline jule::Str _1ad429d4e_to_str(_1ad429931_TypeKind*);
inline jule::Bool _1ad42a206_equals(jule::Ptr<_1ad429931_TypeKind>,jule::Ptr<_1ad429931_TypeKind>);
inline jule::Bool _1ad42a712_cpp_linked(_1ad429931_TypeKind*);
inline jule::Bool _1ad42a9dc_is_nil(_1ad429931_TypeKind*);
inline jule::Bool _1ad42acb7_void(_1ad429931_TypeKind*);
inline jule::Bool _1ad42b092_mutable(_1ad429931_TypeKind*);
inline jule::Bool _1ad42b36c_nil_compatible(_1ad429931_TypeKind*);
inline jule::Bool _1ad42b647_performs_rc(_1ad429931_TypeKind*);
inline jule::Bool _1ad42b922_supports_cloning(_1ad429931_TypeKind*);
inline jule::Bool _1ad42bbec_variadicable(_1ad429931_TypeKind*);
inline jule::Ptr<_1ad42ec99_Prim> _1ad42bec7_prim(_1ad429931_TypeKind*);
inline jule::Ptr<_1ad433b05_Sptr> _1ad42c2a2_sptr(_1ad429931_TypeKind*);
inline jule::Ptr<_1ad437983_Ptr> _1ad42c57c_ptr(_1ad429931_TypeKind*);
inline jule::Ptr<_1ac724545_Enum> _1ad42c857_enm(_1ad429931_TypeKind*);
inline jule::Ptr<_1ad436da0_Arr> _1ad42cb32_arr(_1ad429931_TypeKind*);
inline jule::Ptr<_1ad4346d8_Slc> _1ad42ce0c_slc(_1ad429931_TypeKind*);
inline jule::Ptr<_1ac67a501_FnIns> _1ad42d1d7_fnc(_1ad429931_TypeKind*);
inline jule::Ptr<_1ac664551_StructIns> _1ad42d4b2_strct(_1ad429931_TypeKind*);
inline jule::Ptr<_1ac85d096_Trait> _1ad42d78c_trt(_1ad429931_TypeKind*);
inline jule::Ptr<_1ad4360be_Map> _1ad42da67_map(_1ad429931_TypeKind*);
inline jule::Ptr<_1ad435354_Tuple> _1ad42dd42_tup(_1ad429931_TypeKind*);
struct _1ad429931_TypeKind {
	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_1ad4293e2_Kind> _field_kind = jule::Trait<_1ad4293e2_Kind>();


	_1ad429931_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_generic, jule::Bool __param_variadic, jule::Trait<_1ad4293e2_Kind> __param_kind): _field_cpp_ident(__param_cpp_ident), _field_generic(__param_generic), _field_variadic(__param_variadic), _field_kind(__param_kind) {}

	

	_1ad429931_TypeKind(void) = default;

	inline bool operator==(_1ad429931_TypeKind _other) {
		return 
			this->_field_cpp_ident == _other._field_cpp_ident &&
			this->_field_generic == _other._field_generic &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ad429931_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ad42e705_checked(_1ad42e293_TypeSymbol*);
inline void _1ad42e947_remove_kind(_1ad42e293_TypeSymbol*);
struct _1ad42e293_TypeSymbol {
	jule::Ptr<_1aae075dc_TypeDecl> _field_decl = jule::Ptr<_1aae075dc_TypeDecl>();
	jule::Ptr<_1ad429931_TypeKind> _field_kind = jule::Ptr<_1ad429931_TypeKind>();


	_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl> __param_decl, jule::Ptr<_1ad429931_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1ad42e293_TypeSymbol(void) = default;

	inline bool operator==(_1ad42e293_TypeSymbol _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ad42e293_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1ad430173_to_str(_1ad42ec99_Prim*);
inline jule::Bool _1ad43052a_equals(jule::Ptr<_1ad42ec99_Prim>,jule::Ptr<_1ad429931_TypeKind>);
inline jule::Bool _1ad430a03_is_i8(_1ad42ec99_Prim*);
inline jule::Bool _1ad430ccd_is_i16(_1ad42ec99_Prim*);
inline jule::Bool _1ad4310a8_is_i32(_1ad42ec99_Prim*);
inline jule::Bool _1ad431383_is_i64(_1ad42ec99_Prim*);
inline jule::Bool _1ad43165d_is_u8(_1ad42ec99_Prim*);
inline jule::Bool _1ad431938_is_u16(_1ad42ec99_Prim*);
inline jule::Bool _1ad431c13_is_u32(_1ad42ec99_Prim*);
inline jule::Bool _1ad431edd_is_u64(_1ad42ec99_Prim*);
inline jule::Bool _1ad4322b8_is_f32(_1ad42ec99_Prim*);
inline jule::Bool _1ad432593_is_f64(_1ad42ec99_Prim*);
inline jule::Bool _1ad43286d_is_int(_1ad42ec99_Prim*);
inline jule::Bool _1ad432b48_is_uint(_1ad42ec99_Prim*);
inline jule::Bool _1ad432e23_is_uintptr(_1ad42ec99_Prim*);
inline jule::Bool _1ad4331ed_is_bool(_1ad42ec99_Prim*);
inline jule::Bool _1ad4334c8_is_str(_1ad42ec99_Prim*);
inline jule::Bool _1ad4337a3_is_any(_1ad42ec99_Prim*);
struct _1ad42ec99_Prim {
	jule::Str _field_kind = jule::Str();


	_1ad42ec99_Prim(jule::Str __param_kind): _field_kind(__param_kind) {}

	

	_1ad42ec99_Prim(void) = default;

	inline bool operator==(_1ad42ec99_Prim _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ad42ec99_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1ad433ece_to_str(_1ad433b05_Sptr*);
inline jule::Bool _1ad434386_equals(jule::Ptr<_1ad433b05_Sptr>,jule::Ptr<_1ad429931_TypeKind>);
struct _1ad433b05_Sptr {
	jule::Ptr<_1ad429931_TypeKind> _field_elem = jule::Ptr<_1ad429931_TypeKind>();


	_1ad433b05_Sptr(jule::Ptr<_1ad429931_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1ad433b05_Sptr(void) = default;

	inline bool operator==(_1ad433b05_Sptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1ad433b05_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1ad434b4a_to_str(_1ad4346d8_Slc*);
inline jule::Bool _1ad435002_equals(jule::Ptr<_1ad4346d8_Slc>,jule::Ptr<_1ad429931_TypeKind>);
struct _1ad4346d8_Slc {
	jule::Ptr<_1ad429931_TypeKind> _field_elem = jule::Ptr<_1ad429931_TypeKind>();


	_1ad4346d8_Slc(jule::Ptr<_1ad429931_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1ad4346d8_Slc(void) = default;

	inline bool operator==(_1ad4346d8_Slc _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1ad4346d8_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1ad4357b6_to_str(_1ad435354_Tuple*);
inline jule::Bool _1ad435b6d_equals(jule::Ptr<_1ad435354_Tuple>,jule::Ptr<_1ad429931_TypeKind>);
struct _1ad435354_Tuple {
	jule::Slice<jule::Ptr<_1ad429931_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1ad429931_TypeKind>>();


	_1ad435354_Tuple(jule::Slice<jule::Ptr<_1ad429931_TypeKind>> __param_types): _field_types(__param_types) {}

	

	_1ad435354_Tuple(void) = default;

	inline bool operator==(_1ad435354_Tuple _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1ad435354_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1ad436498_to_str(_1ad4360be_Map*);
inline jule::Bool _1ad436850_equals(jule::Ptr<_1ad4360be_Map>,jule::Ptr<_1ad429931_TypeKind>);
struct _1ad4360be_Map {
	jule::Ptr<_1ad429931_TypeKind> _field_key = jule::Ptr<_1ad429931_TypeKind>();
	jule::Ptr<_1ad429931_TypeKind> _field_val = jule::Ptr<_1ad429931_TypeKind>();


	_1ad4360be_Map(jule::Ptr<_1ad429931_TypeKind> __param_key, jule::Ptr<_1ad429931_TypeKind> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1ad4360be_Map(void) = default;

	inline bool operator==(_1ad4360be_Map _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1ad4360be_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1ad437279_to_str(_1ad436da0_Arr*);
inline jule::Bool _1ad437631_equals(jule::Ptr<_1ad436da0_Arr>,jule::Ptr<_1ad429931_TypeKind>);
struct _1ad436da0_Arr {
	jule::Bool _field_auto = jule::Bool();
	jule::I64 _field_n = jule::I64();
	jule::Ptr<_1ad429931_TypeKind> _field_elem = jule::Ptr<_1ad429931_TypeKind>();


	_1ad436da0_Arr(jule::Bool __param_auto, jule::I64 __param_n, jule::Ptr<_1ad429931_TypeKind> __param_elem): _field_auto(__param_auto), _field_n(__param_n), _field_elem(__param_elem) {}

	

	_1ad436da0_Arr(void) = default;

	inline bool operator==(_1ad436da0_Arr _other) {
		return 
			this->_field_auto == _other._field_auto &&
			this->_field_n == _other._field_n &&
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1ad436da0_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1ad437d5c_to_str(_1ad437983_Ptr*);
inline jule::Bool _1ad438214_equals(jule::Ptr<_1ad437983_Ptr>,jule::Ptr<_1ad429931_TypeKind>);
inline jule::Bool _1ad4385cc_is_unsafe(_1ad437983_Ptr*);
struct _1ad437983_Ptr {
	jule::Ptr<_1ad429931_TypeKind> _field_elem = jule::Ptr<_1ad429931_TypeKind>();


	_1ad437983_Ptr(jule::Ptr<_1ad429931_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1ad437983_Ptr(void) = default;

	inline bool operator==(_1ad437983_Ptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1ad437983_Ptr _other) { return !this->operator==(_other); }


};
struct _1ad43a6de_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;


	_1ad43a6de_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs): _field_ident(__param_ident), _field_owner(__param_owner), _field_refs(__param_refs) {}

	

	_1ad43a6de_Referencer(void) = default;

	inline bool operator==(_1ad43a6de_Referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1ad43a6de_Referencer _other) { return !this->operator==(_other); }


};
struct _1b4ae5da4_CompileInfo {
	jule::Bool _field_prod = jule::Bool();
	jule::Bool _field_test = jule::Bool();
	jule::Str _field_compiler = jule::Str("clang", 5);
	jule::Str _field_cpp_std = jule::Str("cpp14", 5);


	_1b4ae5da4_CompileInfo(jule::Bool __param_prod, jule::Bool __param_test, jule::Str __param_compiler, jule::Str __param_cpp_std): _field_prod(__param_prod), _field_test(__param_test), _field_compiler(__param_compiler), _field_cpp_std(__param_cpp_std) {}

	

	_1b4ae5da4_CompileInfo(void) = default;

	inline bool operator==(_1b4ae5da4_CompileInfo _other) {
		return 
			this->_field_prod == _other._field_prod &&
			this->_field_test == _other._field_test &&
			this->_field_compiler == _other._field_compiler &&
			this->_field_cpp_std == _other._field_cpp_std;
	}

	inline bool operator!=(_1b4ae5da4_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1b4aeddce_push_err(_1aad97e40_DirectiveEval*,_1ab005531_Token,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<_1ab005531_Token>> _1b4b00166_split_operans(_1aad97e40_DirectiveEval*,jule::Str,jule::Slice<_1ab005531_Token>&);
inline jule::Bool _1b4aeb272_eval_directive_ident(_1aad97e40_DirectiveEval*,jule::Str);
inline jule::Bool _1aad80257_eval_directive_part(_1aad97e40_DirectiveEval*,jule::Slice<_1ab005531_Token>);
inline jule::Bool _1b4b049d9_eval(_1aad97e40_DirectiveEval*);
struct _1aad97e40_DirectiveEval {
	jule::Slice<_1a92a31c6_Log> _field_logs = jule::Slice<_1a92a31c6_Log>();
	jule::Ptr<_1aaeaeb7d_Directive> _field_d = jule::Ptr<_1aaeaeb7d_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();


	_1aad97e40_DirectiveEval(jule::Slice<_1a92a31c6_Log> __param_logs, jule::Ptr<_1aaeaeb7d_Directive> __param_d, jule::Slice<jule::Str> __param_vars): _field_logs(__param_logs), _field_d(__param_d), _field_vars(__param_vars) {}

	

	_1aad97e40_DirectiveEval(void) = default;

	inline bool operator==(_1aad97e40_DirectiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1aad97e40_DirectiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e6bde1ac_JuleImporter> static__1e6be0c19_new(_1b4ae5da4_CompileInfo);
inline jule::Slice<jule::Ptr<_1ad3736b0_ImportInfo>> _1e6be40c4_all_packages(_1e6bde1ac_JuleImporter*);
inline void _1e6be611a_set_mod_path(_1e6bde1ac_JuleImporter*,jule::Str);
inline jule::Str _1e6c01961_get_mod_path(_1e6bde1ac_JuleImporter*);
inline jule::Str _1e6c07d74_mod_by_id(_1e6bde1ac_JuleImporter*,jule::I64);
inline jule::Ptr<_1ad3736b0_ImportInfo> _1e6c36a40_get_import(_1e6bde1ac_JuleImporter*,jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1aae013a5_Ast>>,jule::Slice<_1a92a31c6_Log>> _1e6c3b935_import_package(_1e6bde1ac_JuleImporter*,jule::Str,jule::Bool);
inline void _1e6c9772c_imported(_1e6bde1ac_JuleImporter*,jule::Ptr<_1ad3736b0_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_1a92a31c6_Log>> _1e6cc996d_is_pass_build_directives(_1e6bde1ac_JuleImporter*,jule::Ptr<_1aae013a5_Ast>&);
struct _1e6bde1ac_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1ad3736b0_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1ad3736b0_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();


	_1e6bde1ac_JuleImporter(jule::Slice<jule::Str> __param_mods, jule::Str __param_mod, jule::Slice<jule::Ptr<_1ad3736b0_ImportInfo>> __param_pkgs, jule::Slice<jule::Str> __param_vars): _field_mods(__param_mods), _field_mod(__param_mod), _field_pkgs(__param_pkgs), _field_vars(__param_vars) {}

	

	_1e6bde1ac_JuleImporter(void) = default;

	inline bool operator==(_1e6bde1ac_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1e6bde1ac_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1e6c44d4a_OrderedDefines {
	jule::Slice<jule::Ptr<_1ac661075_Struct>> _field_structs = jule::Slice<jule::Ptr<_1ac661075_Struct>>();


	_1e6c44d4a_OrderedDefines(jule::Slice<jule::Ptr<_1ac661075_Struct>> __param_structs): _field_structs(__param_structs) {}

	

	_1e6c44d4a_OrderedDefines(void) = default;

	inline bool operator==(_1e6c44d4a_OrderedDefines _other) {
		return 
			this->_field_structs == _other._field_structs;
	}

	inline bool operator!=(_1e6c44d4a_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1abcbc02d_is_common_ordered_0(jule::Slice<jule::Ptr<_1ac661075_Struct>>&,jule::Ptr<_1ac661075_Struct>);
inline void static__1abc641a1_order_common_0(jule::Slice<jule::Ptr<_1ac661075_Struct>>&);
inline void static__1abc6c2ec_order_structures(jule::Slice<jule::Ptr<_1ac661075_Struct>>&);
struct _1e6c2a704_DefineOrderer {
	

	_1e6c2a704_DefineOrderer(void) = default;

	inline bool operator==(_1e6c2a704_DefineOrderer _other) { return true; }

	inline bool operator!=(_1e6c2a704_DefineOrderer _other) { return !this->operator==(_other); }


};
inline void _1abec5005_optimize_child(jule::Ptr<_1abb20799_ScopeDeadCode>,jule::Ptr<_1ad33ce0a_Scope>&);
inline void _1abed34ec_eliminate_followed(_1abb20799_ScopeDeadCode*);
inline void _1ac0015e7_optimize_stmt(jule::Ptr<_1abb20799_ScopeDeadCode>,jule::Any);
inline void _1ac0099da_optimize_stmts(jule::Ptr<_1abb20799_ScopeDeadCode>);
struct _1abb20799_ScopeDeadCode {
	jule::Ptr<_1abb20799_ScopeDeadCode> _field_parent = jule::Ptr<_1abb20799_ScopeDeadCode>();
	jule::Ptr<_1ad33ce0a_Scope> _field_s = jule::Ptr<_1ad33ce0a_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();


	_1abb20799_ScopeDeadCode(jule::Ptr<_1abb20799_ScopeDeadCode> __param_parent, jule::Ptr<_1ad33ce0a_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::I64 __param_i): _field_parent(__param_parent), _field_s(__param_s), _field_stmts(__param_stmts), _field_i(__param_i) {}

	

	_1abb20799_ScopeDeadCode(void) = default;

	inline bool operator==(_1abb20799_ScopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1abb20799_ScopeDeadCode _other) { return !this->operator==(_other); }


};
inline void static__1ac02a2be_reset(void);
inline void static__1ac030ba9_print(jule::Str,jule::Str);
struct _1abb38c02_AnsiEscape {
	

	_1abb38c02_AnsiEscape(void) = default;

	inline bool operator==(_1abb38c02_AnsiEscape _other) { return true; }

	inline bool operator!=(_1abb38c02_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1ac03a4ee_log_flat(_1a92a31c6_Log&);
inline void static__1ac045949_log_error(_1a92a31c6_Log&);
inline void static__1ac065507_log(_1a92a31c6_Log&);
inline void static__1ac067d67_print_logs(jule::Slice<_1a92a31c6_Log>&);
struct _1abb47b78_Logger {
	

	_1abb47b78_Logger(void) = default;

	inline bool operator==(_1abb47b78_Logger _other) { return true; }

	inline bool operator!=(_1abb47b78_Logger _other) { return !this->operator==(_other); }


};
struct _1ada69a65_UnsafeBinopExprModel {
	jule::Ptr<_1ac666c07_BinopExprModel> _field_node = jule::Ptr<_1ac666c07_BinopExprModel>();


	_1ada69a65_UnsafeBinopExprModel(jule::Ptr<_1ac666c07_BinopExprModel> __param_node): _field_node(__param_node) {}

	

	_1ada69a65_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1ada69a65_UnsafeBinopExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1ada69a65_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1ada69d2e_UnsafeIndexingExprModel {
	jule::Ptr<_1ac6699eb_IndexingExprModel> _field_node = jule::Ptr<_1ac6699eb_IndexingExprModel>();


	_1ada69d2e_UnsafeIndexingExprModel(jule::Ptr<_1ac6699eb_IndexingExprModel> __param_node): _field_node(__param_node) {}

	

	_1ada69d2e_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1ada69d2e_UnsafeIndexingExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1ada69d2e_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1ada6a192_PushToSliceExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Ptr<_1ac66949b_SliceExprModel> _field_elems = jule::Ptr<_1ac66949b_SliceExprModel>();


	_1ada6a192_PushToSliceExprModel(jule::Any __param_dest, jule::Ptr<_1ac66949b_SliceExprModel> __param_elems): _field_dest(__param_dest), _field_elems(__param_elems) {}

	

	_1ada6a192_PushToSliceExprModel(void) = default;

	inline bool operator==(_1ada6a192_PushToSliceExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1ada6a192_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ada6ab65_StrInsertBeginExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_expr = jule::Any();


	_1ada6ab65_StrInsertBeginExprModel(jule::Any __param_dest, jule::Any __param_expr): _field_dest(__param_dest), _field_expr(__param_expr) {}

	

	_1ada6ab65_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1ada6ab65_StrInsertBeginExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ada6ab65_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ada6c1b6_ScopeOptimizer> static__1ada6c6d3_new(jule::Ptr<_1ad33ce0a_Scope>);
inline void _1ada6ca02_set_current_stmt(_1ada6c1b6_ScopeOptimizer*,jule::Any);
inline void _1ada6cd21_optimize_data(_1ada6c1b6_ScopeOptimizer*,jule::Ptr<_1ad3e6975_Data>);
inline void _1ada6d140_optimize_var(_1ada6c1b6_ScopeOptimizer*,jule::Ptr<_1ad39e037_Var>);
inline void _1ada6d45e_optimize_conditional(_1ada6c1b6_ScopeOptimizer*,jule::Ptr<_1ad355dac_Conditional>);
inline void _1ada6d77d_optimize_match(_1ada6c1b6_ScopeOptimizer*,jule::Ptr<_1ad35772c_Match>);
inline void _1ada6da9c_optimize_range_iter(_1ada6c1b6_ScopeOptimizer*,jule::Ptr<_1ad35651c_RangeIter>);
inline void _1ada6ddbb_optimize_while_iter(_1ada6c1b6_ScopeOptimizer*,jule::Ptr<_1ad3562ec_WhileIter>);
inline jule::Bool _1ada6e273_substr(_1ada6c1b6_ScopeOptimizer*,jule::Ptr<_1ad3572dc_Assign>);
inline jule::Bool _1ada6e62a_str_insert(_1ada6c1b6_ScopeOptimizer*,jule::Ptr<_1ad3572dc_Assign>);
inline jule::Bool _1ada6e9d2_str_assign(_1ada6c1b6_ScopeOptimizer*,jule::Ptr<_1ad3572dc_Assign>);
inline void _1ada6ed01_optimize_assign(_1ada6c1b6_ScopeOptimizer*,jule::Ptr<_1ad3572dc_Assign>);
inline void _1ada70120_optimize_multi_assign(_1ada6c1b6_ScopeOptimizer*,jule::Ptr<_1ad35750c_MultiAssign>);
inline void _1ada7043e_optimize_ret(_1ada6c1b6_ScopeOptimizer*,jule::Ptr<_1ad3580bd_RetSt>);
inline void _1ada7075d_optimize_stmt(_1ada6c1b6_ScopeOptimizer*,jule::Any);
inline void _1ada70a7c_optimize_child(_1ada6c1b6_ScopeOptimizer*,jule::Ptr<_1ad33ce0a_Scope>);
inline void _1ada70cbe_optimize(_1ada6c1b6_ScopeOptimizer*);
struct _1ada6c1b6_ScopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1ad33ce0a_Scope> _field_scope = jule::Ptr<_1ad33ce0a_Scope>();


	_1ada6c1b6_ScopeOptimizer(jule::I64 __param_i, jule::Ptr<_1ad33ce0a_Scope> __param_scope): _field_i(__param_i), _field_scope(__param_scope) {}

	

	_1ada6c1b6_ScopeOptimizer(void) = default;

	inline bool operator==(_1ada6c1b6_ScopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ada6c1b6_ScopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1ada73d05_optimize(jule::Any&);
inline jule::Bool _1ada741ac_str_cond(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac666c07_BinopExprModel>);
inline void _1ada744cb_binary(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac666c07_BinopExprModel>);
inline void _1ada747ea_unary(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac667158_UnaryExprModel>);
inline void _1ada74b19_structure_lit(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac667a4e_StructLitExprModel>);
inline void _1ada74e38_alloc_structure(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac667e39_AllocStructLitExprModel>);
inline void _1ada75257_casting(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac668566_CastingExprModel>);
inline void _1ada75576_args(_1ada73794_ExprOptimizer*,jule::Slice<jule::Any>);
inline void _1ada75895_scope(_1ada73794_ExprOptimizer*,jule::Ptr<_1ad33ce0a_Scope>&);
inline void _1ada75bb4_func_call(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac66904a_FnCallExprModel>);
inline void _1ada75ed3_slice(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac66949b_SliceExprModel>);
inline void _1ada76302_array(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac66ca98_ArrayExprModel>);
inline void _1ada76621_indexing(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac6699eb_IndexingExprModel>);
inline void _1ada76940_anon_func(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac669e4c_AnonFnExprModel>);
inline void _1ada76c5e_map(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac66a8ed_MapExprModel>);
inline void _1ada7707d_slicing(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac66b04c_SlicingExprModel>);
inline void _1ada7739c_trait_sub(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac66b69b_TraitSubIdentExprModel>);
inline void _1ada776bb_structure_sub(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>);
inline void _1ada779da_common_sub(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac66d5d2_CommonSubIdentExprModel>);
inline void _1ada77d09_tuple(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac66d912_TupleExprModel>);
inline void _1ada78128_new_call(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac66ec43_BuiltinNewCallExprModel>);
inline void _1ada78447_out_call(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac66ddeb_BuiltinOutCallExprModel>);
inline void _1ada78766_outln_call(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac66e3b3_BuiltinOutlnCallExprModel>);
inline void _1ada78a85_panic_call(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac67020a_BuiltinPanicCallExprModel>);
inline void _1ada78da4_assert_call(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac6707c1_BuiltinAssertCallExprModel>);
inline void _1ada791c3_error_call(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac671816_BuiltinErrorCallExprModel>);
inline void _1ada794e2_make_call(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac670d87_BuiltinMakeCallExprModel>);
inline void _1ada79811_append_call(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac67134e_BuiltinAppendCallExprModel>);
inline void _1ada79b30_clone_call(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac66e77b_BuiltinCloneCallExprModel>);
inline void _1ada79e4e_sizeof(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac671b46_SizeofExprModel>);
inline void _1ada7a26d_alignof(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac6722ea_AlignofExprModel>);
inline void _1ada7a58c_integrated_to_str(_1ada73794_ExprOptimizer*,jule::Ptr<_1ac672927_IntegratedToStrExprModel>);
inline void _1ada7a7ce_do(_1ada73794_ExprOptimizer*);
struct _1ada73794_ExprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();


	_1ada73794_ExprOptimizer(jule::Ptr<jule::Any> __param_model): _field_model(__param_model) {}

	

	_1ada73794_ExprOptimizer(void) = default;

	inline bool operator==(_1ada73794_ExprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1ada73794_ExprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ada7bb65_Optimizer> static__1ada7c02d_new(jule::Ptr<_1e6be526d_IR>&);
inline void _1ada7c34c_optimize_global(_1ada7bb65_Optimizer*,jule::Ptr<_1ad39e037_Var>&);
inline void _1ada7c66b_optimize_function(_1ada7bb65_Optimizer*,jule::Ptr<_1ac676a08_Fn>&);
inline void _1ada7c98a_optimize_struct(_1ada7bb65_Optimizer*,jule::Ptr<_1ac661075_Struct>&);
inline void _1ada7cca9_optimize_globals(_1ada7bb65_Optimizer*,jule::Ptr<_1ad376b8b_Package>&);
inline void _1ada7d0c8_optimize_functions(_1ada7bb65_Optimizer*,jule::Ptr<_1ad376b8b_Package>&);
inline void _1ada7d3e7_optimize_structs(_1ada7bb65_Optimizer*,jule::Ptr<_1ad376b8b_Package>&);
inline void _1ada7d716_optimize_package(_1ada7bb65_Optimizer*,jule::Ptr<_1ad376b8b_Package>&);
inline void _1ada7d958_optimize(_1ada7bb65_Optimizer*);
struct _1ada7bb65_Optimizer {
	jule::Ptr<_1e6be526d_IR> _field_ir = jule::Ptr<_1e6be526d_IR>();


	_1ada7bb65_Optimizer(jule::Ptr<_1e6be526d_IR> __param_ir): _field_ir(__param_ir) {}

	

	_1ada7bb65_Optimizer(void) = default;

	inline bool operator==(_1ada7bb65_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1ada7bb65_Optimizer _other) { return !this->operator==(_other); }


};
inline jule::U64 _1adae0349_unix(_1adadede8_AbsTime*);
struct _1adadede8_AbsTime {
	jule::U64 _field_day = jule::U64();
	jule::U64 _field_week_day = jule::U64();
	jule::U64 _field_year_day = jule::U64();
	jule::U64 _field_month = jule::U64();
	jule::U64 _field_year = jule::U64();
	jule::U64 _field_second = jule::U64();
	jule::U64 _field_minute = jule::U64();
	jule::U64 _field_hour = jule::U64();


	_1adadede8_AbsTime(jule::U64 __param_day, jule::U64 __param_week_day, jule::U64 __param_year_day, jule::U64 __param_month, jule::U64 __param_year, jule::U64 __param_second, jule::U64 __param_minute, jule::U64 __param_hour): _field_day(__param_day), _field_week_day(__param_week_day), _field_year_day(__param_year_day), _field_month(__param_month), _field_year(__param_year), _field_second(__param_second), _field_minute(__param_minute), _field_hour(__param_hour) {}

	

	_1adadede8_AbsTime(void) = default;

	inline bool operator==(_1adadede8_AbsTime _other) {
		return 
			this->_field_day == _other._field_day &&
			this->_field_week_day == _other._field_week_day &&
			this->_field_year_day == _other._field_year_day &&
			this->_field_month == _other._field_month &&
			this->_field_year == _other._field_year &&
			this->_field_second == _other._field_second &&
			this->_field_minute == _other._field_minute &&
			this->_field_hour == _other._field_hour;
	}

	inline bool operator!=(_1adadede8_AbsTime _other) { return !this->operator==(_other); }


};
inline _1adae069b_Time static__1adae0aa8_unix(jule::U64);
inline _1adae069b_Time static__1adae0cd9_now(void);
inline jule::U64 _1adae12a1_unix(_1adae069b_Time*);
inline jule::U64 _1adae157b_day(_1adae069b_Time*);
inline jule::U64 _1adae1856_month(_1adae069b_Time*);
inline jule::U64 _1adae1b31_year(_1adae069b_Time*);
inline jule::U64 _1adae1e0b_second(_1adae069b_Time*);
inline jule::U64 _1adae21d6_minute(_1adae069b_Time*);
inline jule::U64 _1adae24b1_hour(_1adae069b_Time*);
inline _1adadede8_AbsTime _1adae278b_abs(_1adae069b_Time*);
struct _1adae069b_Time {
	jule::U64 _field_sec = jule::U64();


	_1adae069b_Time(jule::U64 __param_sec): _field_sec(__param_sec) {}

	

	_1adae069b_Time(void) = default;

	inline bool operator==(_1adae069b_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1adae069b_Time _other) { return !this->operator==(_other); }


};
inline jule::I64 static__1adae3083_nanoseconds(jule::I64);
inline jule::I64 static__1adae3391_microseconds(jule::I64);
inline jule::I64 static__1adae369e_milliseconds(jule::I64);
inline jule::I64 static__1adae39ac_seconds(jule::I64);
inline jule::I64 static__1adae3cba_minutes(jule::I64);
inline jule::I64 static__1adae40c8_hours(jule::I64);
struct _1adae2add_Duration {
	

	_1adae2add_Duration(void) = default;

	inline bool operator==(_1adae2add_Duration _other) { return true; }

	inline bool operator!=(_1adae2add_Duration _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad921b81_TestCoder> static__1ad96a7ce_new(jule::Ptr<_1adaa65b8_ObjectCoder>&);
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad96aa65_find_testing_package(_1ad921b81_TestCoder*);
inline void _1ad96ae61_append_test(_1ad921b81_TestCoder*,jule::Str&,jule::Ptr<_1ac67a501_FnIns>);
inline void _1ad96b35c_append_package_tests(_1ad921b81_TestCoder*,jule::Str&,jule::Ptr<_1ad376b8b_Package>&);
inline jule::Bool _1ad96b637_ready_testing_package(_1ad921b81_TestCoder*);
inline jule::Str _1ad96b912_call_tm_reset(_1ad921b81_TestCoder*);
inline jule::Str _1ad96bbdc_call_tm_failed(_1ad921b81_TestCoder*);
inline jule::Str _1ad96beb7_call_tm_skipped(_1ad921b81_TestCoder*);
inline void _1ad96c2d6_serialize(_1ad921b81_TestCoder*,jule::Str&);
struct _1ad921b81_TestCoder {
	jule::Ptr<_1ac664551_StructIns> _field_t = jule::Ptr<_1ac664551_StructIns>();
	jule::Ptr<_1ac676a08_Fn> _field_tm_reset = jule::Ptr<_1ac676a08_Fn>();
	jule::Ptr<_1ac676a08_Fn> _field_tm_failed = jule::Ptr<_1ac676a08_Fn>();
	jule::Ptr<_1ac676a08_Fn> _field_tm_skipped = jule::Ptr<_1ac676a08_Fn>();
	jule::Ptr<_1adaa65b8_ObjectCoder> _field_oc = jule::Ptr<_1adaa65b8_ObjectCoder>();


	_1ad921b81_TestCoder(jule::Ptr<_1ac664551_StructIns> __param_t, jule::Ptr<_1ac676a08_Fn> __param_tm_reset, jule::Ptr<_1ac676a08_Fn> __param_tm_failed, jule::Ptr<_1ac676a08_Fn> __param_tm_skipped, jule::Ptr<_1adaa65b8_ObjectCoder> __param_oc): _field_t(__param_t), _field_tm_reset(__param_tm_reset), _field_tm_failed(__param_tm_failed), _field_tm_skipped(__param_tm_skipped), _field_oc(__param_oc) {}

	

	_1ad921b81_TestCoder(void) = default;

	inline bool operator==(_1ad921b81_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tm_reset == _other._field_tm_reset &&
			this->_field_tm_failed == _other._field_tm_failed &&
			this->_field_tm_skipped == _other._field_tm_skipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ad921b81_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad978c1b_ScopeCoder> static__1ad9c0207_new(jule::Ptr<_1adaa65b8_ObjectCoder>&);
inline jule::Str _1ad970bad_range_index_iter(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad35651c_RangeIter>&);
inline jule::Str _1ad9ce744_range_hashmap_iter(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad35651c_RangeIter>&);
inline jule::Str _1ad972a6c_if_case(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad35596c_If>);
inline jule::Str _1ad9752bc_conditional(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad355dac_Conditional>);
inline jule::Str _1ad9c4690_inf_iter(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad3560cc_InfIter>);
inline jule::Str _1ad9c87a4_while_iter(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad3562ec_WhileIter>);
inline jule::Str _1ad9cabb3_range_iter(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad35651c_RangeIter>);
inline jule::Str _1ad9e4759_cont(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad35673c_ContSt>);
inline jule::Str _1ada04d63_label(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad356b7c_Label>);
inline jule::Str _1ada0a484_goto_st(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad356d9c_GotoSt>);
inline jule::Str _1ada11457_postfix(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad3570bc_Postfix>);
inline jule::Str _1ada5c3b5_assign(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad3572dc_Assign>);
inline jule::Str _1ada60819_multi_assign(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad35750c_MultiAssign>);
inline jule::Str _1ad9d2deb_match_expr(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad35772c_Match>&);
inline jule::Str _1ada07bce_case(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad35772c_Match>,jule::Ptr<_1ad357b7d_Case>);
inline jule::Str _1ada2b9b1_match_st(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad35772c_Match>);
inline jule::Str _1ad97ac84_fall_st(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad357d9d_FallSt>);
inline jule::Str _1ad99ee1d_break_st(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad35695c_BreakSt>);
inline jule::Str _1ad9b3481_ret_with_vars(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad3580bd_RetSt>);
inline jule::Str _1ad9b4141_ret_tuple(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad3580bd_RetSt>);
inline jule::Str _1ada06172_ret_with_exprs(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad3580bd_RetSt>);
inline jule::Str _1ada06dba_ret_st(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad3580bd_RetSt>);
inline jule::Str _1ada0d355_ret_with_defaults(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad429931_TypeKind>);
inline jule::Str _1ada1a131_var(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad39e037_Var>);
inline jule::Str _1ada1eb08_st(_1ad978c1b_ScopeCoder*,jule::Any);
inline jule::Str _1ada209c7_scope(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ad33ce0a_Scope>);
inline jule::Str _1ada21786_func_scope(_1ad978c1b_ScopeCoder*,jule::Ptr<_1ac67a501_FnIns>);
struct _1ad978c1b_ScopeCoder {
	jule::Ptr<_1adaa65b8_ObjectCoder> _field_oc = jule::Ptr<_1adaa65b8_ObjectCoder>();


	_1ad978c1b_ScopeCoder(jule::Ptr<_1adaa65b8_ObjectCoder> __param_oc): _field_oc(__param_oc) {}

	

	_1ad978c1b_ScopeCoder(void) = default;

	inline bool operator==(_1ad978c1b_ScopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ad978c1b_ScopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ada27627_ExprCoder> static__1ad96e00d_new(jule::Ptr<_1adaa65b8_ObjectCoder>&);
inline jule::Str _1ada283d6_string(_1ada27627_ExprCoder*,jule::Ptr<_1ad2c1d8e_Const>&);
inline jule::Str _1ada2c71a_boolean(_1ada27627_ExprCoder*,jule::Ptr<_1ad2c1d8e_Const>&);
inline jule::Str _1ada2d430_nil_lit(_1ada27627_ExprCoder*);
inline jule::Str _1ada62134_ftoa_special_cases(_1ada27627_ExprCoder*,jule::F64&);
inline jule::Str _1ada63a09_float32(_1ada27627_ExprCoder*,jule::Ptr<_1ad2c1d8e_Const>&);
inline jule::Str _1ad9d00a2_float64(_1ada27627_ExprCoder*,jule::Ptr<_1ad2c1d8e_Const>&);
inline jule::Str _1ada30146_constant(_1ada27627_ExprCoder*,jule::Ptr<_1ad2c1d8e_Const>,jule::Bool);
inline jule::Str _1ada575e1_div_by_zero_binary(_1ada27627_ExprCoder*,_1ab005531_Token&,jule::Ptr<_1ac666663_OperandExprModel>&,jule::Ptr<_1ac666663_OperandExprModel>&);
inline jule::Str _1ad9719c2_unsafe_binary(_1ada27627_ExprCoder*,jule::Ptr<_1ac666c07_BinopExprModel>);
inline jule::Str _1ada653ce_binary(_1ada27627_ExprCoder*,jule::Ptr<_1ac666c07_BinopExprModel>);
inline jule::Str _1ada1bb7c_var(_1ada27627_ExprCoder*,jule::Ptr<_1ad39e037_Var>);
inline jule::Str _1ada1bce2_structure(_1ada27627_ExprCoder*,jule::Ptr<_1ac661075_Struct>);
inline jule::Str _1ada5726c_structure_ins(_1ada27627_ExprCoder*,jule::Ptr<_1ac664551_StructIns>);
inline jule::Str _1ada573d2_unary(_1ada27627_ExprCoder*,jule::Ptr<_1ac667158_UnaryExprModel>);
inline jule::Str _1ad9be0d5_cpp_structure_lit(_1ada27627_ExprCoder*,jule::Ptr<_1ac667a4e_StructLitExprModel>);
inline jule::Str _1ad9be24a_structure_lit(_1ada27627_ExprCoder*,jule::Ptr<_1ac667a4e_StructLitExprModel>);
inline jule::Str _1ad970020_alloc_structure(_1ada27627_ExprCoder*,jule::Ptr<_1ac667e39_AllocStructLitExprModel>);
inline jule::Str _1ad970185_casting(_1ada27627_ExprCoder*,jule::Ptr<_1ac668566_CastingExprModel>);
inline jule::Str _1ad971c9c_args(_1ada27627_ExprCoder*,jule::Slice<jule::Any>);
inline jule::Str _1ad972099_model_for_call(_1ada27627_ExprCoder*,jule::Any);
inline void _1ad9cdd81_push_call_inf(_1ada27627_ExprCoder*,jule::Str&,jule::Ptr<_1ac66904a_FnCallExprModel>&);
inline jule::Str _1ad9ce238_pure_func_call(_1ada27627_ExprCoder*,jule::Ptr<_1ac66904a_FnCallExprModel>&);
inline jule::Str _1ada7db78_func_call(_1ada27627_ExprCoder*,jule::Ptr<_1ac66904a_FnCallExprModel>);
inline jule::Str _1ada7de75_slice(_1ada27627_ExprCoder*,jule::Ptr<_1ac66949b_SliceExprModel>);
inline jule::Str _1ada7e32c_indexing(_1ada27627_ExprCoder*,jule::Ptr<_1ac6699eb_IndexingExprModel>);
inline jule::Str _1ada7e6d4_unsafe_indexing(_1ada27627_ExprCoder*,jule::Ptr<_1ada69d2e_UnsafeIndexingExprModel>);
inline jule::Str _1ada7ea8b_anon_func(_1ada27627_ExprCoder*,jule::Ptr<_1ac669e4c_AnonFnExprModel>);
inline jule::Str _1ada7ee43_map(_1ada27627_ExprCoder*,jule::Ptr<_1ac66a8ed_MapExprModel>);
inline jule::Str _1ada802ea_slicing(_1ada27627_ExprCoder*,jule::Ptr<_1ac66b04c_SlicingExprModel>);
inline jule::Str _1ada806a2_trait_sub(_1ada27627_ExprCoder*,jule::Ptr<_1ac66b69b_TraitSubIdentExprModel>);
inline jule::Str _1ada80a59_structure_sub(_1ada27627_ExprCoder*,jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>);
inline jule::Str _1ada80e11_common_ident(_1ada27627_ExprCoder*,jule::Ptr<_1ac66cdea_CommonIdentExprModel>);
inline jule::Str _1ada812b8_common_sub(_1ada27627_ExprCoder*,jule::Ptr<_1ac66d5d2_CommonSubIdentExprModel>);
inline jule::Str _1ada81670_array(_1ada27627_ExprCoder*,jule::Ptr<_1ac66ca98_ArrayExprModel>);
inline jule::Str _1ada81a27_func_ins_common(_1ada27627_ExprCoder*,jule::Ptr<_1ac67a501_FnIns>);
inline jule::Str _1ada81dce_func_ins(_1ada27627_ExprCoder*,jule::Ptr<_1ac67a501_FnIns>);
inline jule::Str _1ada82286_tuple(_1ada27627_ExprCoder*,jule::Ptr<_1ac66d912_TupleExprModel>);
inline jule::Str _1ada8263d_new_call(_1ada27627_ExprCoder*,jule::Ptr<_1ac66ec43_BuiltinNewCallExprModel>);
inline jule::Str _1ada829e5_out_call(_1ada27627_ExprCoder*,jule::Ptr<_1ac66ddeb_BuiltinOutCallExprModel>);
inline jule::Str _1ada82d9c_outln_call(_1ada27627_ExprCoder*,jule::Ptr<_1ac66e3b3_BuiltinOutlnCallExprModel>);
inline jule::Str _1ada83254_panic_call(_1ada27627_ExprCoder*,jule::Ptr<_1ac67020a_BuiltinPanicCallExprModel>);
inline jule::Str _1ada8360b_assert_call(_1ada27627_ExprCoder*,jule::Ptr<_1ac6707c1_BuiltinAssertCallExprModel>);
inline jule::Str _1ada839b3_error_call(_1ada27627_ExprCoder*,jule::Ptr<_1ac671816_BuiltinErrorCallExprModel>);
inline jule::Str _1ada83d6a_make_call(_1ada27627_ExprCoder*,jule::Ptr<_1ac670d87_BuiltinMakeCallExprModel>);
inline jule::Str _1ada84222_push_to_slice(_1ada27627_ExprCoder*,jule::Ptr<_1ada6a192_PushToSliceExprModel>);
inline jule::Str _1ada845c9_append_call(_1ada27627_ExprCoder*,jule::Ptr<_1ac67134e_BuiltinAppendCallExprModel>);
inline jule::Str _1ada84981_clone_call(_1ada27627_ExprCoder*,jule::Ptr<_1ac66e77b_BuiltinCloneCallExprModel>);
inline jule::Str _1ada84d38_sizeof(_1ada27627_ExprCoder*,jule::Ptr<_1ac671b46_SizeofExprModel>);
inline jule::Str _1ada851e0_alignof(_1ada27627_ExprCoder*,jule::Ptr<_1ac6722ea_AlignofExprModel>);
inline jule::Str _1ada85597_rune_lit(_1ada27627_ExprCoder*,jule::Ptr<_1ac6725b4_RuneExprModel>);
inline jule::Str _1ada8594e_structure_static(_1ada27627_ExprCoder*,jule::Ptr<_1ac66c669_StructStaticIdentExprModel>);
inline jule::Str _1ada85d06_integrated_to_str(_1ada27627_ExprCoder*,jule::Ptr<_1ac672927_IntegratedToStrExprModel>);
inline jule::Str _1ada861ad_backend_emit(_1ada27627_ExprCoder*,jule::Ptr<_1ac672d56_BackendEmitExprModel>);
inline jule::Str _1ada86565_free(_1ada27627_ExprCoder*,jule::Ptr<_1ac6731a8_FreeExprModel>);
inline jule::Str _1ada8691c_mut_slicing(_1ada27627_ExprCoder*,jule::Ptr<_1ada6a67b_MutSlicingExprModel>);
inline jule::Str _1ada86cc4_str_insert_begin(_1ada27627_ExprCoder*,jule::Ptr<_1ada6ab65_StrInsertBeginExprModel>);
inline jule::Str _1ada8717b_model(_1ada27627_ExprCoder*,jule::Any);
inline jule::Str _1ada87533_expr(_1ada27627_ExprCoder*,jule::Any);
inline jule::Str _1ada878da_val(_1ada27627_ExprCoder*,jule::Ptr<_1ad3e7c84_Value>);
inline jule::Str _1ada87c92_init_expr(_1ada27627_ExprCoder*,jule::Ptr<_1ad429931_TypeKind>);
struct _1ada27627_ExprCoder {
	jule::Ptr<_1adaa65b8_ObjectCoder> _field_oc = jule::Ptr<_1adaa65b8_ObjectCoder>();


	_1ada27627_ExprCoder(jule::Ptr<_1adaa65b8_ObjectCoder> __param_oc): _field_oc(__param_oc) {}

	

	_1ada27627_ExprCoder(void) = default;

	inline bool operator==(_1ada27627_ExprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ada27627_ExprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1ada8abc9_clone_func_decl(jule::Ptr<_1ac661075_Struct>&);
inline jule::Str static__1ada8aed7_clone_func_def(jule::Ptr<_1ac661075_Struct>&);
struct _1ada8a833_DeriveCoder {
	

	_1ada8a833_DeriveCoder(void) = default;

	inline bool operator==(_1ada8a833_DeriveCoder _other) { return true; }

	inline bool operator!=(_1ada8a833_DeriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1ada8caee_to_ident(jule::Str);
inline jule::Str static__1ada8ce0c_addr(jule::U64);
inline jule::Str static__1ada8d2e7_to_out(jule::Str,jule::U64);
inline jule::Str static__1ada8d7ae_to_local(jule::I64,jule::I64,jule::Str);
inline jule::Str static__1ada8dabc_func(jule::Ptr<_1ac676a08_Fn>&);
inline jule::Str static__1ada8ddca_func_ins(jule::Ptr<_1ac67a501_FnIns>&);
inline jule::Str static__1ada8e1d8_trait_decl(jule::Ptr<_1ac85d096_Trait>);
inline jule::Str static__1ada8e4e6_param(jule::Ptr<_1ac674bd2_Param>&);
inline jule::Str static__1ada8e804_structure(jule::Ptr<_1ac661075_Struct>&);
inline jule::Str static__1ada8eb12_structure_ins(jule::Ptr<_1ac664551_StructIns>&);
inline jule::Str static__1ada8ee20_field(jule::Ptr<_1ac65ca77_Field>&);
inline jule::Str static__1ada9022d_var(jule::Ptr<_1ad39e037_Var>);
inline jule::Str static__1ada9053b_iter_begin(jule::U64);
inline jule::Str static__1ada90849_iter_end(jule::U64);
inline jule::Str static__1ada90b57_iter_next(jule::U64);
inline jule::Str static__1ada90e65_label(jule::Str);
inline jule::Str static__1ada91273_match_end(jule::U64);
inline jule::Str static__1ada91581_case_begin(jule::U64);
struct _1ada8c6e2_IdentCoder {
	

	_1ada8c6e2_IdentCoder(void) = default;

	inline bool operator==(_1ada8c6e2_IdentCoder _other) { return true; }

	inline bool operator!=(_1ada8c6e2_IdentCoder _other) { return !this->operator==(_other); }


};
struct _1adac2abd_SerializationInfo {
	jule::Str _field_compiler = jule::Str();
	jule::Str _field_compiler_command = jule::Str();


	_1adac2abd_SerializationInfo(jule::Str __param_compiler, jule::Str __param_compiler_command): _field_compiler(__param_compiler), _field_compiler_command(__param_compiler_command) {}

	

	_1adac2abd_SerializationInfo(void) = default;

	inline bool operator==(_1adac2abd_SerializationInfo _other) {
		return 
			this->_field_compiler == _other._field_compiler &&
			this->_field_compiler_command == _other._field_compiler_command;
	}

	inline bool operator!=(_1adac2abd_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1adaa29c1_TraitHash {
	jule::Ptr<_1ac85d096_Trait> _field_t = jule::Ptr<_1ac85d096_Trait>();
	jule::Ptr<_1ac664551_StructIns> _field_s = jule::Ptr<_1ac664551_StructIns>();
	jule::I64 _field_i = jule::I64();


	_1adaa29c1_TraitHash(jule::Ptr<_1ac85d096_Trait> __param_t, jule::Ptr<_1ac664551_StructIns> __param_s, jule::I64 __param_i): _field_t(__param_t), _field_s(__param_s), _field_i(__param_i) {}

	

	_1adaa29c1_TraitHash(void) = default;

	inline bool operator==(_1adaa29c1_TraitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1adaa29c1_TraitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1adb00c83_to_str(_1adb00821_CustomType*);
inline jule::Bool _1adb0113a_equals(jule::Ptr<_1adb00821_CustomType>,jule::Ptr<_1ad429931_TypeKind>);
struct _1adb00821_CustomType {
	jule::Str _field_kind = jule::Str();


	_1adb00821_CustomType(jule::Str __param_kind): _field_kind(__param_kind) {}

	

	_1adb00821_CustomType(void) = default;

	inline bool operator==(_1adb00821_CustomType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1adb00821_CustomType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1adb01921_to_type(jule::Str);
inline jule::Str static__1adb01c2e_prim(jule::Ptr<_1ad42ec99_Prim>);
inline jule::Str static__1adb0203c_tuple(jule::Ptr<_1ad435354_Tuple>);
inline jule::Str static__1adb0234a_as_sptr(jule::Str);
inline jule::Str static__1adb02658_as_ptr(jule::Str);
inline jule::Str static__1adb02966_sptr(jule::Ptr<_1ad433b05_Sptr>);
inline jule::Str static__1adb02c74_ptr(jule::Ptr<_1ad437983_Ptr>);
inline jule::Str static__1adb03082_enum_decl(jule::Ptr<_1ac724545_Enum>);
inline jule::Str static__1adb03390_as_slice(jule::Ptr<_1ad429931_TypeKind>);
inline jule::Str static__1adb0369d_slice(jule::Ptr<_1ad4346d8_Slc>);
inline jule::Str static__1adb039ab_map(jule::Ptr<_1ad4360be_Map>);
inline jule::Str static__1adb03cb9_trait_ident(jule::Str);
inline jule::Str static__1adb040c7_trait_decl(jule::Ptr<_1ac85d096_Trait>);
inline jule::Str static__1adb043d5_structure(jule::Ptr<_1ac661075_Struct>);
inline jule::Str static__1adb046e3_structure_ins(jule::Ptr<_1ac664551_StructIns>);
inline jule::Str static__1adb04a01_array(jule::Ptr<_1ad436da0_Arr>);
inline jule::Str static__1adb04d0e_param(jule::Ptr<_1ac674bd2_Param>&);
inline jule::Str static__1adb0511c_param_ins(jule::Ptr<_1ac67939b_ParamIns>&);
inline jule::Str static__1adb0542a_func_result(jule::Ptr<_1ac676a08_Fn>&);
inline jule::Str static__1adb05738_func_ins_result(jule::Ptr<_1ac67a501_FnIns>&);
inline jule::Str static__1adb05a46_anon_func(jule::Ptr<_1ac67a501_FnIns>);
inline jule::Str static__1adb05d54_func(jule::Ptr<_1ac67a501_FnIns>);
inline jule::Str static__1adb06162_kind(jule::Ptr<_1ad429931_TypeKind>);
struct _1adb0138d_TypeCoder {
	

	_1adb0138d_TypeCoder(void) = default;

	inline bool operator==(_1adb0138d_TypeCoder _other) { return true; }

	inline bool operator!=(_1adb0138d_TypeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1b14b2862_name(_1adb3dcd2_Flag_0*);
inline jule::Str _1b14b29c7_what(_1adb3dcd2_Flag_0*);
inline void _1b14b2b3c_reset(_1adb3dcd2_Flag_0*);
inline jule::I32 _1b14b2ca2_short(_1adb3dcd2_Flag_0*);
struct _1adb3dcd2_Flag_0 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();


	_1adb3dcd2_Flag_0(jule::Str __param__name, jule::I32 __param__short, jule::I64 __param__default, jule::Str __param__what, jule::Ptr<jule::I64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1adb3dcd2_Flag_0(void) = default;

	inline bool operator==(_1adb3dcd2_Flag_0 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1adb3dcd2_Flag_0 _other) { return !this->operator==(_other); }


};inline jule::Str _1b14b5b95_name(_1adb3dcd2_Flag_1*);
inline jule::Str _1b14b2e28_what(_1adb3dcd2_Flag_1*);
inline void _1b14b45ab_reset(_1adb3dcd2_Flag_1*);
inline jule::I32 _1b14b58ed_short(_1adb3dcd2_Flag_1*);
struct _1adb3dcd2_Flag_1 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();


	_1adb3dcd2_Flag_1(jule::Str __param__name, jule::I32 __param__short, jule::U64 __param__default, jule::Str __param__what, jule::Ptr<jule::U64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1adb3dcd2_Flag_1(void) = default;

	inline bool operator==(_1adb3dcd2_Flag_1 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1adb3dcd2_Flag_1 _other) { return !this->operator==(_other); }


};inline jule::Str _1b14b91a4_name(_1adb3dcd2_Flag_2*);
inline jule::Str _1b14b6437_what(_1adb3dcd2_Flag_2*);
inline void _1b14b7aba_reset(_1adb3dcd2_Flag_2*);
inline jule::I32 _1b14b8e0c_short(_1adb3dcd2_Flag_2*);
struct _1adb3dcd2_Flag_2 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();


	_1adb3dcd2_Flag_2(jule::Str __param__name, jule::I32 __param__short, jule::F64 __param__default, jule::Str __param__what, jule::Ptr<jule::F64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1adb3dcd2_Flag_2(void) = default;

	inline bool operator==(_1adb3dcd2_Flag_2 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1adb3dcd2_Flag_2 _other) { return !this->operator==(_other); }


};inline jule::Str _1b14b99ac_name(_1adb3dcd2_Flag_3*);
inline jule::Str _1b14bc707_what(_1adb3dcd2_Flag_3*);
inline void _1b14bb11d_reset(_1adb3dcd2_Flag_3*);
inline jule::I32 _1b14bc460_short(_1adb3dcd2_Flag_3*);
struct _1adb3dcd2_Flag_3 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();


	_1adb3dcd2_Flag_3(jule::Str __param__name, jule::I32 __param__short, jule::Bool __param__default, jule::Str __param__what, jule::Ptr<jule::Bool> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1adb3dcd2_Flag_3(void) = default;

	inline bool operator==(_1adb3dcd2_Flag_3 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1adb3dcd2_Flag_3 _other) { return !this->operator==(_other); }


};inline jule::Str _1b14c0c16_name(_1adb3dcd2_Flag_4*);
inline jule::Str _1b14bce99_what(_1adb3dcd2_Flag_4*);
inline void _1b14be62c_reset(_1adb3dcd2_Flag_4*);
inline jule::I32 _1b14c096e_short(_1adb3dcd2_Flag_4*);
struct _1adb3dcd2_Flag_4 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();


	_1adb3dcd2_Flag_4(jule::Str __param__name, jule::I32 __param__short, jule::Str __param__default, jule::Str __param__what, jule::Ptr<jule::Str> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1adb3dcd2_Flag_4(void) = default;

	inline bool operator==(_1adb3dcd2_Flag_4 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1adb3dcd2_Flag_4 _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1adb40256_FlagSet> static__1adb40575_new(void);
inline jule::Trait<_1adb3d8d6_CommonFlag> _1adb40ad6_find_flag(_1adb40256_FlagSet*,jule::Str);
inline jule::Trait<_1adb3d8d6_CommonFlag> _1adb40e8d_find_flag_short(_1adb40256_FlagSet*,jule::I32);
inline jule::Slice<jule::Trait<_1adb3d8d6_CommonFlag>> _1adb41268_flags(_1adb40256_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1adb41620_parse(_1adb40256_FlagSet*,jule::Slice<jule::Str>);
inline void _1adb41862_reset(_1adb40256_FlagSet*);
inline jule::Ptr<_1adb3dcd2_Flag_4> _1adb41dc3_add_flag_common_0(_1adb40256_FlagSet*,jule::Str,jule::I32,jule::Str);
inline jule::Ptr<_1adb3dcd2_Flag_3> _1adb41dc3_add_flag_common_1(_1adb40256_FlagSet*,jule::Str,jule::I32,jule::Str);
inline void _1adb42ab6_add_var_0(_1adb40256_FlagSet*,jule::Ptr<jule::Str>,jule::Str,jule::I32,jule::Str);
inline void _1adb42ab6_add_var_1(_1adb40256_FlagSet*,jule::Ptr<jule::Bool>,jule::Str,jule::I32,jule::Str);
struct _1adb40256_FlagSet {
	jule::Slice<jule::Trait<_1adb3d8d6_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1adb3d8d6_CommonFlag>>();


	_1adb40256_FlagSet(jule::Slice<jule::Trait<_1adb3d8d6_CommonFlag>> __param__flags): _field__flags(__param__flags) {}

	

	_1adb40256_FlagSet(void) = default;

	inline bool operator==(_1adb40256_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_1adb40256_FlagSet _other) { return !this->operator==(_other); }


};
inline jule::Str _1ac920961_to_str(_1ac724545_Enum*);
inline jule::Bool _1ac928958_equals(jule::Ptr<_1ac724545_Enum>,jule::Ptr<_1ad429931_TypeKind>);
inline jule::Ptr<_1ac692a57_EnumItem> _1ac94e5b6_find_item(_1ac724545_Enum*,jule::Str);
struct _1ac724545_Enum {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1ad42e293_TypeSymbol> _field_kind = jule::Ptr<_1ad42e293_TypeSymbol>();
	jule::Slice<jule::Ptr<_1ac692a57_EnumItem>> _field_items = jule::Slice<jule::Ptr<_1ac692a57_EnumItem>>();


	_1ac724545_Enum(_1ab005531_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_1ad42e293_TypeSymbol> __param_kind, jule::Slice<jule::Ptr<_1ac692a57_EnumItem>> __param_items): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items) {}

	

	_1ac724545_Enum(void) = default;

	inline bool operator==(_1ac724545_Enum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1ac724545_Enum _other) { return !this->operator==(_other); }


};
struct _1ab02561c_StructDecl {
	_1ab005531_Token _field_token = _1ab005531_Token();
	_1ab005531_Token _field_end = _1ab005531_Token();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1ab024d36_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_1ab024d36_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>();
	jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>();


	_1ab02561c_StructDecl(_1ab005531_Token __param_token, _1ab005531_Token __param_end, jule::Str __param_ident, jule::Slice<jule::Ptr<_1ab024d36_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>> __param_directives, jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>> __param_generics): _field_token(__param_token), _field_end(__param_end), _field_ident(__param_ident), _field_fields(__param_fields), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_generics(__param_generics) {}

	

	_1ab02561c_StructDecl(void) = default;

	inline bool operator==(_1ab02561c_StructDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1ab02561c_StructDecl _other) { return !this->operator==(_other); }


};
struct _1ab025b6c_TraitDecl {
	_1ab005531_Token _field_token = _1ab005531_Token();
	_1ab005531_Token _field_end = _1ab005531_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Slice<jule::Ptr<_1ab01da55_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1ab01da55_FnDecl>>();


	_1ab025b6c_TraitDecl(_1ab005531_Token __param_token, _1ab005531_Token __param_end, jule::Str __param_ident, jule::Bool __param_public, jule::Slice<jule::Ptr<_1ab01da55_FnDecl>> __param_methods): _field_token(__param_token), _field_end(__param_end), _field_ident(__param_ident), _field_public(__param_public), _field_methods(__param_methods) {}

	

	_1ab025b6c_TraitDecl(void) = default;

	inline bool operator==(_1ab025b6c_TraitDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_methods == _other._field_methods;
	}

	inline bool operator!=(_1ab025b6c_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab0263dc_is_trait_impl(_1ab0261bc_Impl*);
inline jule::Bool _1ab026552_is_struct_impl(_1ab0261bc_Impl*);
struct _1ab0261bc_Impl {
	_1ab005531_Token _field_end = _1ab005531_Token();
	jule::Ptr<_1aae075dc_TypeDecl> _field_base = jule::Ptr<_1aae075dc_TypeDecl>();
	jule::Ptr<_1aae075dc_TypeDecl> _field_dest = jule::Ptr<_1aae075dc_TypeDecl>();
	jule::Slice<jule::Ptr<_1ab01da55_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1ab01da55_FnDecl>>();
	jule::Slice<jule::Ptr<_1ab01e6d2_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_1ab01e6d2_VarDecl>>();


	_1ab0261bc_Impl(_1ab005531_Token __param_end, jule::Ptr<_1aae075dc_TypeDecl> __param_base, jule::Ptr<_1aae075dc_TypeDecl> __param_dest, jule::Slice<jule::Ptr<_1ab01da55_FnDecl>> __param_methods, jule::Slice<jule::Ptr<_1ab01e6d2_VarDecl>> __param_statics): _field_end(__param_end), _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1ab0261bc_Impl(void) = default;

	inline bool operator==(_1ab0261bc_Impl _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1ab0261bc_Impl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aaeb5579_is_prim(_1aaec9b87_IdentTypeDecl*);
struct _1aaec9b87_IdentTypeDecl {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>>();


	_1aaec9b87_IdentTypeDecl(_1ab005531_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_generics(__param_generics) {}

	

	_1aaec9b87_IdentTypeDecl(void) = default;

	inline bool operator==(_1aaec9b87_IdentTypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1aaec9b87_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aadb528c_Expr {
	_1ab005531_Token _field_token = _1ab005531_Token();
	_1ab005531_Token _field_end = _1ab005531_Token();
	jule::Bool _field_range = jule::Bool();
	jule::Any _field_kind = jule::Any();


	_1aadb528c_Expr(_1ab005531_Token __param_token, _1ab005531_Token __param_end, jule::Bool __param_range, jule::Any __param_kind): _field_token(__param_token), _field_end(__param_end), _field_range(__param_range), _field_kind(__param_kind) {}

	

	_1aadb528c_Expr(void) = default;

	inline bool operator==(_1aadb528c_Expr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_range == _other._field_range &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1aadb528c_Expr _other) { return !this->operator==(_other); }


};
struct _1aadb54ac_UseExpr {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();


	_1aadb54ac_UseExpr(_1ab005531_Token __param_token, jule::Ptr<_1aadb528c_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1aadb54ac_UseExpr(void) = default;

	inline bool operator==(_1aadb54ac_UseExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aadb54ac_UseExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aae2d4c0_is_decl(_1aae02ad2_Node*);
inline jule::Bool _1aae81bd8_is_directive(_1aae02ad2_Node*);
inline jule::Bool _1aae98d32_is_impl(_1aae02ad2_Node*);
inline jule::Bool _1aaea4d1b_is_use_decl(_1aae02ad2_Node*);
struct _1aae02ad2_Node {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Any _field_data = jule::Any();


	_1aae02ad2_Node(_1ab005531_Token __param_token, jule::Any __param_data): _field_token(__param_token), _field_data(__param_data) {}

	

	_1aae02ad2_Node(void) = default;

	inline bool operator==(_1aae02ad2_Node _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1aae02ad2_Node _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aadc3102_is_nil(_1aadb5b2d_LitExpr*);
struct _1aadb5b2d_LitExpr {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_value = jule::Str();


	_1aadb5b2d_LitExpr(_1ab005531_Token __param_token, jule::Str __param_value): _field_token(__param_token), _field_value(__param_value) {}

	

	_1aadb5b2d_LitExpr(void) = default;

	inline bool operator==(_1aadb5b2d_LitExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1aadb5b2d_LitExpr _other) { return !this->operator==(_other); }


};
struct _1aadb5d4d_UnsafeExpr {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();


	_1aadb5d4d_UnsafeExpr(_1ab005531_Token __param_token, jule::Ptr<_1aadb528c_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1aadb5d4d_UnsafeExpr(void) = default;

	inline bool operator==(_1aadb5d4d_UnsafeExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aadb5d4d_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1ab57b38c_AssignInfo {
	jule::Slice<_1ab005531_Token> _field_l = jule::Slice<_1ab005531_Token>();
	jule::Slice<_1ab005531_Token> _field_r = jule::Slice<_1ab005531_Token>();
	_1ab005531_Token _field_setter = _1ab005531_Token();
	jule::Bool _field_ok = jule::Bool();


	_1ab57b38c_AssignInfo(jule::Slice<_1ab005531_Token> __param_l, jule::Slice<_1ab005531_Token> __param_r, _1ab005531_Token __param_setter, jule::Bool __param_ok): _field_l(__param_l), _field_r(__param_r), _field_setter(__param_setter), _field_ok(__param_ok) {}

	

	_1ab57b38c_AssignInfo(void) = default;

	inline bool operator==(_1ab57b38c_AssignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1ab57b38c_AssignInfo _other) { return !this->operator==(_other); }


};
struct _1aadb606d_CoExpr {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();


	_1aadb606d_CoExpr(_1ab005531_Token __param_token, jule::Ptr<_1aadb528c_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1aadb606d_CoExpr(void) = default;

	inline bool operator==(_1aadb606d_CoExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aadb606d_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aae548c0_is_self(_1aadb628d_IdentExpr*);
struct _1aadb628d_IdentExpr {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();


	_1aadb628d_IdentExpr(_1ab005531_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked) {}

	

	_1aadb628d_IdentExpr(void) = default;

	inline bool operator==(_1aadb628d_IdentExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked;
	}

	inline bool operator!=(_1aadb628d_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1aadb64ad_UnaryExpr {
	_1ab005531_Token _field_op = _1ab005531_Token();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();


	_1aadb64ad_UnaryExpr(_1ab005531_Token __param_op, jule::Ptr<_1aadb528c_Expr> __param_expr): _field_op(__param_op), _field_expr(__param_expr) {}

	

	_1aadb64ad_UnaryExpr(void) = default;

	inline bool operator==(_1aadb64ad_UnaryExpr _other) {
		return 
			this->_field_op == _other._field_op &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aadb64ad_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1ad3572dc_Assign {
	jule::Ptr<_1ac666663_OperandExprModel> _field_l = jule::Ptr<_1ac666663_OperandExprModel>();
	jule::Ptr<_1ac666663_OperandExprModel> _field_r = jule::Ptr<_1ac666663_OperandExprModel>();
	_1ab005531_Token _field_op = _1ab005531_Token();


	_1ad3572dc_Assign(jule::Ptr<_1ac666663_OperandExprModel> __param_l, jule::Ptr<_1ac666663_OperandExprModel> __param_r, _1ab005531_Token __param_op): _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1ad3572dc_Assign(void) = default;

	inline bool operator==(_1ad3572dc_Assign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ad3572dc_Assign _other) { return !this->operator==(_other); }


};
struct _1aadb66cd_VariadicExpr {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();


	_1aadb66cd_VariadicExpr(_1ab005531_Token __param_token, jule::Ptr<_1aadb528c_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1aadb66cd_VariadicExpr(void) = default;

	inline bool operator==(_1aadb66cd_VariadicExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aadb66cd_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1aaeaeb7d_Directive {
	_1ab005531_Token _field_tag = _1ab005531_Token();
	jule::Slice<_1ab005531_Token> _field_args = jule::Slice<_1ab005531_Token>();


	_1aaeaeb7d_Directive(_1ab005531_Token __param_tag, jule::Slice<_1ab005531_Token> __param_args): _field_tag(__param_tag), _field_args(__param_args) {}

	

	_1aaeaeb7d_Directive(void) = default;

	inline bool operator==(_1aaeaeb7d_Directive _other) {
		return 
			this->_field_tag == _other._field_tag &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1aaeaeb7d_Directive _other) { return !this->operator==(_other); }


};
struct _1ab01ac72_NsSelectionExpr {
	jule::Slice<_1ab005531_Token> _field_ns = jule::Slice<_1ab005531_Token>();
	_1ab005531_Token _field_ident = _1ab005531_Token();


	_1ab01ac72_NsSelectionExpr(jule::Slice<_1ab005531_Token> __param_ns, _1ab005531_Token __param_ident): _field_ns(__param_ns), _field_ident(__param_ident) {}

	

	_1ab01ac72_NsSelectionExpr(void) = default;

	inline bool operator==(_1ab01ac72_NsSelectionExpr _other) {
		return 
			this->_field_ns == _other._field_ns &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ab01ac72_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1ab01ae92_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();
	_1ab005531_Token _field_ident = _1ab005531_Token();


	_1ab01ae92_SubIdentExpr(jule::Bool __param_is_self, jule::Ptr<_1aadb528c_Expr> __param_expr, _1ab005531_Token __param_ident): _field_is_self(__param_is_self), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1ab01ae92_SubIdentExpr(void) = default;

	inline bool operator==(_1ab01ae92_SubIdentExpr _other) {
		return 
			this->_field_is_self == _other._field_is_self &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ab01ae92_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1ab01b1b2_BinopExpr {
	jule::Ptr<_1aadb528c_Expr> _field_left = jule::Ptr<_1aadb528c_Expr>();
	jule::Ptr<_1aadb528c_Expr> _field_right = jule::Ptr<_1aadb528c_Expr>();
	_1ab005531_Token _field_op = _1ab005531_Token();


	_1ab01b1b2_BinopExpr(jule::Ptr<_1aadb528c_Expr> __param_left, jule::Ptr<_1aadb528c_Expr> __param_right, _1ab005531_Token __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1ab01b1b2_BinopExpr(void) = default;

	inline bool operator==(_1ab01b1b2_BinopExpr _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ab01b1b2_BinopExpr _other) { return !this->operator==(_other); }


};
struct _1ad3582dd_ScopeLabel {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Ptr<_1ad356b7c_Label> _field_label = jule::Ptr<_1ad356b7c_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1ad35872d_ScopeChecker> _field_scope = jule::Ptr<_1ad35872d_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();


	_1ad3582dd_ScopeLabel(_1ab005531_Token __param_token, jule::Ptr<_1ad356b7c_Label> __param_label, jule::I64 __param_pos, jule::Ptr<_1ad35872d_ScopeChecker> __param_scope, jule::Bool __param_used): _field_token(__param_token), _field_label(__param_label), _field_pos(__param_pos), _field_scope(__param_scope), _field_used(__param_used) {}

	

	_1ad3582dd_ScopeLabel(void) = default;

	inline bool operator==(_1ad3582dd_ScopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1ad3582dd_ScopeLabel _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aae07ec2_unhandled(_1ab01b3d2_FnCallExpr*);
inline jule::Bool _1aadb68ed_ignored(_1ab01b3d2_FnCallExpr*);
struct _1ab01b3d2_FnCallExpr {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();
	jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>>();
	jule::Slice<jule::Ptr<_1aadb528c_Expr>> _field_args = jule::Slice<jule::Ptr<_1aadb528c_Expr>>();
	jule::Ptr<_1ab01d615_ScopeTree> _field_exception = jule::Ptr<_1ab01d615_ScopeTree>();


	_1ab01b3d2_FnCallExpr(_1ab005531_Token __param_token, jule::Ptr<_1aadb528c_Expr> __param_expr, jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>> __param_generics, jule::Slice<jule::Ptr<_1aadb528c_Expr>> __param_args, jule::Ptr<_1ab01d615_ScopeTree> __param_exception): _field_token(__param_token), _field_expr(__param_expr), _field_generics(__param_generics), _field_args(__param_args), _field_exception(__param_exception) {}

	

	_1ab01b3d2_FnCallExpr(void) = default;

	inline bool operator==(_1ab01b3d2_FnCallExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_generics == _other._field_generics &&
			this->_field_args == _other._field_args &&
			this->_field_exception == _other._field_exception;
	}

	inline bool operator!=(_1ab01b3d2_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aadc9d40_is_targeted(_1ab01b602_FieldExprPair*);
struct _1ab01b602_FieldExprPair {
	_1ab005531_Token _field_field = _1ab005531_Token();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();


	_1ab01b602_FieldExprPair(_1ab005531_Token __param_field, jule::Ptr<_1aadb528c_Expr> __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1ab01b602_FieldExprPair(void) = default;

	inline bool operator==(_1ab01b602_FieldExprPair _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ab01b602_FieldExprPair _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac663a06_FieldIns> _1ac65cdeb_instance(jule::Ptr<_1ac65ca77_Field>);
struct _1ac65ca77_Field {
	jule::Ptr<_1ac661075_Struct> _field_owner = jule::Ptr<_1ac661075_Struct>();
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1ad42e293_TypeSymbol> _field_kind = jule::Ptr<_1ad42e293_TypeSymbol>();
	jule::Ptr<_1aadb528c_Expr> _field_default = jule::Ptr<_1aadb528c_Expr>();


	_1ac65ca77_Field(jule::Ptr<_1ac661075_Struct> __param_owner, _1ab005531_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_1ad42e293_TypeSymbol> __param_kind, jule::Ptr<_1aadb528c_Expr> __param_default): _field_owner(__param_owner), _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_1ac65ca77_Field(void) = default;

	inline bool operator==(_1ac65ca77_Field _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1ac65ca77_Field _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad373c65_find_package(_1ad3736b0_ImportInfo*,jule::Str);
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad37411c_select_package(_1ad3736b0_ImportInfo*,jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)>);
inline jule::Ptr<_1ad39e037_Var> _1ad3745a1_find_var(_1ad3736b0_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_1ad428996_TypeAlias> _1ad374a35_find_type_alias(_1ad3736b0_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac661075_Struct> _1ad374eb9_find_struct(_1ad3736b0_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac676a08_Fn> _1ad37544d_find_fn(_1ad3736b0_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac85d096_Trait> _1ad375805_find_trait(_1ad3736b0_ImportInfo*,jule::Str);
inline jule::Ptr<_1ac724545_Enum> _1ad375bac_find_enum(_1ad3736b0_ImportInfo*,jule::Str);
inline jule::Bool _1ad376174_is_lookupable(_1ad3736b0_ImportInfo*,jule::Str);
inline jule::Bool _1ad37652b_exist_ident(_1ad3736b0_ImportInfo*,jule::Str);
inline jule::Bool _1ad37684a_is_accessible_via_selection(_1ad3736b0_ImportInfo*);
struct _1ad3736b0_ImportInfo {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<_1ab005531_Token> _field_selected = jule::Slice<_1ab005531_Token>();
	jule::Ptr<_1ad376b8b_Package> _field_package = jule::Ptr<_1ad376b8b_Package>();
	jule::I64 _field_mod_id = jule::I64();


	_1ad3736b0_ImportInfo(_1ab005531_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_1ab005531_Token> __param_selected, jule::Ptr<_1ad376b8b_Package> __param_package, jule::I64 __param_mod_id): _field_token(__param_token), _field_path(__param_path), _field_link_path(__param_link_path), _field_ident(__param_ident), _field_alias(__param_alias), _field_duplicate(__param_duplicate), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std), _field_import_all(__param_import_all), _field_selected(__param_selected), _field_package(__param_package), _field_mod_id(__param_mod_id) {}

	

	_1ad3736b0_ImportInfo(void) = default;

	inline bool operator==(_1ad3736b0_ImportInfo _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_path == _other._field_path &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_ident == _other._field_ident &&
			this->_field_alias == _other._field_alias &&
			this->_field_duplicate == _other._field_duplicate &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std &&
			this->_field_import_all == _other._field_import_all &&
			this->_field_selected == _other._field_selected &&
			this->_field_package == _other._field_package &&
			this->_field_mod_id == _other._field_mod_id;
	}

	inline bool operator!=(_1ad3736b0_ImportInfo _other) { return !this->operator==(_other); }


};
struct _1ab01b822_StructLit {
	_1ab005531_Token _field_end = _1ab005531_Token();
	jule::Ptr<_1aae075dc_TypeDecl> _field_kind = jule::Ptr<_1aae075dc_TypeDecl>();
	jule::Slice<jule::Ptr<_1aadb528c_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1aadb528c_Expr>>();


	_1ab01b822_StructLit(_1ab005531_Token __param_end, jule::Ptr<_1aae075dc_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_1aadb528c_Expr>> __param_exprs): _field_end(__param_end), _field_kind(__param_kind), _field_exprs(__param_exprs) {}

	

	_1ab01b822_StructLit(void) = default;

	inline bool operator==(_1ab01b822_StructLit _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1ab01b822_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac664551_StructIns> _1ac66151a_instance(jule::Ptr<_1ac661075_Struct>);
inline jule::Ptr<_1ac664551_StructIns> _1ac6618c2_append_instance(_1ac661075_Struct*,jule::Ptr<_1ac664551_StructIns>&);
inline jule::Ptr<_1ac676a08_Fn> _1ac661d56_find_method(_1ac661075_Struct*,jule::Str,jule::Bool);
inline jule::Ptr<_1ad39e037_Var> _1ac66220d_find_static(_1ac661075_Struct*,jule::Str);
inline jule::Ptr<_1ac65ca77_Field> _1ac6625b5_find_field(_1ac661075_Struct*,jule::Str);
inline jule::Bool _1ac66296c_is_implements(_1ac661075_Struct*,jule::Ptr<_1ac85d096_Trait>);
inline jule::Bool _1ac662d24_is_derives(_1ac661075_Struct*,jule::Str);
inline jule::Bool _1ac6631cb_is_uses(_1ac661075_Struct*,jule::Ptr<_1ac661075_Struct>);
inline jule::Bool _1ac6634a6_has_ref_accessible(_1ac661075_Struct*);
struct _1ac661075_Struct {
	jule::Ptr<_1ad37cd5c_Sema> _field_sema = jule::Ptr<_1ad37cd5c_Sema>();
	jule::Slice<jule::Ptr<_1ac661075_Struct>> _field_depends = jule::Slice<jule::Ptr<_1ac661075_Struct>>();
	jule::Slice<jule::Ptr<_1ac661075_Struct>> _field_uses = jule::Slice<jule::Ptr<_1ac661075_Struct>>();
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1ac65ca77_Field>> _field_fields = jule::Slice<jule::Ptr<_1ac65ca77_Field>>();
	jule::Slice<jule::Ptr<_1ac676a08_Fn>> _field_methods = jule::Slice<jule::Ptr<_1ac676a08_Fn>>();
	jule::Slice<jule::Ptr<_1ad39e037_Var>> _field_statics = jule::Slice<jule::Ptr<_1ad39e037_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>();
	jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>();
	jule::Slice<jule::Ptr<_1ac85d096_Trait>> _field_implements = jule::Slice<jule::Ptr<_1ac85d096_Trait>>();
	jule::Slice<jule::Ptr<_1ac664551_StructIns>> _field_instances = jule::Slice<jule::Ptr<_1ac664551_StructIns>>();


	_1ac661075_Struct(jule::Ptr<_1ad37cd5c_Sema> __param_sema, jule::Slice<jule::Ptr<_1ac661075_Struct>> __param_depends, jule::Slice<jule::Ptr<_1ac661075_Struct>> __param_uses, _1ab005531_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_1ac65ca77_Field>> __param_fields, jule::Slice<jule::Ptr<_1ac676a08_Fn>> __param_methods, jule::Slice<jule::Ptr<_1ad39e037_Var>> __param_statics, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>> __param_directives, jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>> __param_generics, jule::Slice<jule::Ptr<_1ac85d096_Trait>> __param_implements, jule::Slice<jule::Ptr<_1ac664551_StructIns>> __param_instances): _field_sema(__param_sema), _field_depends(__param_depends), _field_uses(__param_uses), _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_methods(__param_methods), _field_statics(__param_statics), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_generics(__param_generics), _field_implements(__param_implements), _field_instances(__param_instances) {}

	

	_1ac661075_Struct(void) = default;

	inline bool operator==(_1ac661075_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_depends == _other._field_depends &&
			this->_field_uses == _other._field_uses &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics &&
			this->_field_implements == _other._field_implements &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1ac661075_Struct _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aadcb33b_is_empty(_1ab01ba42_BraceLit*);
struct _1ab01ba42_BraceLit {
	_1ab005531_Token _field_token = _1ab005531_Token();
	_1ab005531_Token _field_end = _1ab005531_Token();
	jule::Slice<jule::Ptr<_1aadb528c_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1aadb528c_Expr>>();


	_1ab01ba42_BraceLit(_1ab005531_Token __param_token, _1ab005531_Token __param_end, jule::Slice<jule::Ptr<_1aadb528c_Expr>> __param_exprs): _field_token(__param_token), _field_end(__param_end), _field_exprs(__param_exprs) {}

	

	_1ab01ba42_BraceLit(void) = default;

	inline bool operator==(_1ab01ba42_BraceLit _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1ab01ba42_BraceLit _other) { return !this->operator==(_other); }


};
inline jule::Str _1ac66496e_to_str(_1ac664551_StructIns*);
inline jule::Bool _1ac664d26_equals(jule::Ptr<_1ac664551_StructIns>,jule::Ptr<_1ad429931_TypeKind>);
inline jule::Bool _1ac6652dd_same(_1ac664551_StructIns*,jule::Ptr<_1ac664551_StructIns>);
inline jule::Ptr<_1ac676a08_Fn> _1ac665772_find_method(_1ac664551_StructIns*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac663a06_FieldIns> _1ac665b29_find_field(_1ac664551_StructIns*,jule::Str);
struct _1ac664551_StructIns {
	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_1ac661075_Struct> _field_decl = jule::Ptr<_1ac661075_Struct>();
	jule::Slice<jule::Ptr<_1ad429931_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1ad429931_TypeKind>>();
	jule::Slice<jule::Ptr<_1ac663a06_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_1ac663a06_FieldIns>>();
	jule::Slice<jule::Ptr<_1ac676a08_Fn>> _field_methods = jule::Slice<jule::Ptr<_1ac676a08_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_1ac67de2d_ReferenceStack> _field_references = jule::Ptr<_1ac67de2d_ReferenceStack>();
	_1ac65ee31_Operators _field_operators = _1ac65ee31_Operators();


	_1ac664551_StructIns(jule::Bool __param_checked, jule::Ptr<_1ac661075_Struct> __param_decl, jule::Slice<jule::Ptr<_1ad429931_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_1ac663a06_FieldIns>> __param_fields, jule::Slice<jule::Ptr<_1ac676a08_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ptr<_1ac67de2d_ReferenceStack> __param_references, _1ac65ee31_Operators __param_operators): _field_checked(__param_checked), _field_decl(__param_decl), _field_generics(__param_generics), _field_fields(__param_fields), _field_methods(__param_methods), _field_mutable(__param_mutable), _field_references(__param_references), _field_operators(__param_operators) {}

	

	_1ac664551_StructIns(void) = default;

	inline bool operator==(_1ac664551_StructIns _other) {
		return 
			this->_field_checked == _other._field_checked &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_references == _other._field_references &&
			this->_field_operators == _other._field_operators;
	}

	inline bool operator!=(_1ac664551_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ad39e455_is_initialized(_1ad39e037_Var*);
inline jule::Bool _1ad39e730_is_type_inferred(_1ad39e037_Var*);
struct _1ad39e037_Var {
	jule::Ptr<_1ad33ce0a_Scope> _field_scope = jule::Ptr<_1ad33ce0a_Scope>();
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1ad42e293_TypeSymbol> _field_kind = jule::Ptr<_1ad42e293_TypeSymbol>();
	jule::Ptr<_1ad3e7c84_Value> _field_value = jule::Ptr<_1ad3e7c84_Value>();
	jule::Ptr<_1ac67de2d_ReferenceStack> _field_references = jule::Ptr<_1ac67de2d_ReferenceStack>();
	jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>();
	jule::Ptr<_1ad39cc28_IterRelation> _field_iter_relation = jule::Ptr<_1ad39cc28_IterRelation>();
	jule::Slice<jule::Ptr<_1ad39e037_Var>> _field_depends = jule::Slice<jule::Ptr<_1ad39e037_Var>>();


	_1ad39e037_Var(jule::Ptr<_1ad33ce0a_Scope> __param_scope, _1ab005531_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Ptr<_1ad42e293_TypeSymbol> __param_kind, jule::Ptr<_1ad3e7c84_Value> __param_value, jule::Ptr<_1ac67de2d_ReferenceStack> __param_references, jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>> __param_directives, jule::Ptr<_1ad39cc28_IterRelation> __param_iter_relation, jule::Slice<jule::Ptr<_1ad39e037_Var>> __param_depends): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_constant(__param_constant), _field_mutable(__param_mutable), _field_public(__param_public), _field_used(__param_used), _field_statically(__param_statically), _field_reference(__param_reference), _field_kind(__param_kind), _field_value(__param_value), _field_references(__param_references), _field_directives(__param_directives), _field_iter_relation(__param_iter_relation), _field_depends(__param_depends) {}

	

	_1ad39e037_Var(void) = default;

	inline bool operator==(_1ad39e037_Var _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_constant == _other._field_constant &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_public == _other._field_public &&
			this->_field_used == _other._field_used &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_value == _other._field_value &&
			this->_field_references == _other._field_references &&
			this->_field_directives == _other._field_directives &&
			this->_field_iter_relation == _other._field_iter_relation &&
			this->_field_depends == _other._field_depends;
	}

	inline bool operator!=(_1ad39e037_Var _other) { return !this->operator==(_other); }


};
struct _1ab01bc62_KeyValPair {
	jule::Ptr<_1aadb528c_Expr> _field_key = jule::Ptr<_1aadb528c_Expr>();
	jule::Ptr<_1aadb528c_Expr> _field_val = jule::Ptr<_1aadb528c_Expr>();
	_1ab005531_Token _field_colon = _1ab005531_Token();


	_1ab01bc62_KeyValPair(jule::Ptr<_1aadb528c_Expr> __param_key, jule::Ptr<_1aadb528c_Expr> __param_val, _1ab005531_Token __param_colon): _field_key(__param_key), _field_val(__param_val), _field_colon(__param_colon) {}

	

	_1ab01bc62_KeyValPair(void) = default;

	inline bool operator==(_1ab01bc62_KeyValPair _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val &&
			this->_field_colon == _other._field_colon;
	}

	inline bool operator!=(_1ab01bc62_KeyValPair _other) { return !this->operator==(_other); }


};
inline void _1ad3cdde1_push_err(_1ad3cd84c_TypeCompatibilityChecker*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1ad3ce1bb_check_trait(_1ad3cd84c_TypeCompatibilityChecker*);
inline jule::Bool _1ad3ce496_check_ptr(_1ad3cd84c_TypeCompatibilityChecker*);
inline jule::Bool _1ad3ce771_check_prim(_1ad3cd84c_TypeCompatibilityChecker*);
inline jule::Bool _1ad3cea4b_check(_1ad3cd84c_TypeCompatibilityChecker*);
struct _1ad3cd84c_TypeCompatibilityChecker {
	jule::Ptr<_1ad37cd5c_Sema> _field_s = jule::Ptr<_1ad37cd5c_Sema>();
	jule::Ptr<_1ad429931_TypeKind> _field_dest = jule::Ptr<_1ad429931_TypeKind>();
	jule::Ptr<_1ad429931_TypeKind> _field_src = jule::Ptr<_1ad429931_TypeKind>();
	_1ab005531_Token _field_error_token = _1ab005531_Token();


	_1ad3cd84c_TypeCompatibilityChecker(jule::Ptr<_1ad37cd5c_Sema> __param_s, jule::Ptr<_1ad429931_TypeKind> __param_dest, jule::Ptr<_1ad429931_TypeKind> __param_src, _1ab005531_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_src(__param_src), _field_error_token(__param_error_token) {}

	

	_1ad3cd84c_TypeCompatibilityChecker(void) = default;

	inline bool operator==(_1ad3cd84c_TypeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1ad3cd84c_TypeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1ad3d06d9_push_err(_1ad3d019a_AssignTypeChecker*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1ad3d09b4_check_validity(_1ad3d019a_AssignTypeChecker*);
inline jule::Bool _1ad3d0c8e_check_const(_1ad3d019a_AssignTypeChecker*);
inline jule::Bool _1ad3d1069_is_prim(_1ad3d019a_AssignTypeChecker*);
inline jule::Bool _1ad3d1344_check_compatibility(_1ad3d019a_AssignTypeChecker*);
inline jule::Bool _1ad3d161e_check(_1ad3d019a_AssignTypeChecker*);
struct _1ad3d019a_AssignTypeChecker {
	jule::Ptr<_1ad37cd5c_Sema> _field_s = jule::Ptr<_1ad37cd5c_Sema>();
	jule::Ptr<_1ad429931_TypeKind> _field_dest = jule::Ptr<_1ad429931_TypeKind>();
	jule::Ptr<_1ad3e6975_Data> _field_d = jule::Ptr<_1ad3e6975_Data>();
	_1ab005531_Token _field_error_token = _1ab005531_Token();


	_1ad3d019a_AssignTypeChecker(jule::Ptr<_1ad37cd5c_Sema> __param_s, jule::Ptr<_1ad429931_TypeKind> __param_dest, jule::Ptr<_1ad3e6975_Data> __param_d, _1ab005531_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_d(__param_d), _field_error_token(__param_error_token) {}

	

	_1ad3d019a_AssignTypeChecker(void) = default;

	inline bool operator==(_1ad3d019a_AssignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1ad3d019a_AssignTypeChecker _other) { return !this->operator==(_other); }


};
inline void _1ad3d25cb_push_generic(_1ad3d1e6b_DynamicTypeAnnotation*,jule::Ptr<_1ad429931_TypeKind>&,jule::I64);
inline jule::Bool _1ad3d2950_annotate_prim(_1ad3d1e6b_DynamicTypeAnnotation*,jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Bool _1ad3d2d07_annotate_slc(_1ad3d1e6b_DynamicTypeAnnotation*,jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Bool _1ad3d328b_check_map_key(_1ad3d1e6b_DynamicTypeAnnotation*,jule::Ptr<_1ad429931_TypeKind>*,jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Bool _1ad3d3643_annotate_map(_1ad3d1e6b_DynamicTypeAnnotation*,jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Bool _1ad3d39ea_annotate_fn(_1ad3d1e6b_DynamicTypeAnnotation*,jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Bool _1ad3d3da2_annotate_ptr(_1ad3d1e6b_DynamicTypeAnnotation*,jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Bool _1ad3d4259_annotate_sptr(_1ad3d1e6b_DynamicTypeAnnotation*,jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Bool _1ad3d4611_annotate_any(_1ad3d1e6b_DynamicTypeAnnotation*,jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Bool _1ad3d49b8_annotate_kind(_1ad3d1e6b_DynamicTypeAnnotation*,jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Bool _1ad3d4c93_annotate(_1ad3d1e6b_DynamicTypeAnnotation*);
struct _1ad3d1e6b_DynamicTypeAnnotation {
	jule::Ptr<_1ad3e89cc_Eval> _field_e = jule::Ptr<_1ad3e89cc_Eval>();
	jule::Ptr<_1ac67a501_FnIns> _field_f = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac67939b_ParamIns> _field_p = jule::Ptr<_1ac67939b_ParamIns>();
	jule::Ptr<_1ad3e6975_Data> _field_a = jule::Ptr<_1ad3e6975_Data>();
	_1ab005531_Token _field_error_token = _1ab005531_Token();
	jule::Ptr<_1ad429931_TypeKind>* _field_k = nullptr;


	_1ad3d1e6b_DynamicTypeAnnotation(jule::Ptr<_1ad3e89cc_Eval> __param_e, jule::Ptr<_1ac67a501_FnIns> __param_f, jule::Ptr<_1ac67939b_ParamIns> __param_p, jule::Ptr<_1ad3e6975_Data> __param_a, _1ab005531_Token __param_error_token, jule::Ptr<_1ad429931_TypeKind>* __param_k): _field_e(__param_e), _field_f(__param_f), _field_p(__param_p), _field_a(__param_a), _field_error_token(__param_error_token), _field_k(__param_k) {}

	

	_1ad3d1e6b_DynamicTypeAnnotation(void) = default;

	inline bool operator==(_1ad3d1e6b_DynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_k == _other._field_k;
	}

	inline bool operator!=(_1ad3d1e6b_DynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1ad3d5c50_push_err_token(_1ad3d55e0_FnCallArgChecker*,_1ab005531_Token,jule::Str,jule::Slice<jule::Any>);
inline void _1ad3d614b_push_err(_1ad3d55e0_FnCallArgChecker*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1ac67939b_ParamIns>> _1ad3d6426_get_params(_1ad3d55e0_FnCallArgChecker*);
inline jule::Bool _1ad3d67cd_check_counts(_1ad3d55e0_FnCallArgChecker*,jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>&);
inline jule::Bool _1ad3d6d3e_check_arg(_1ad3d55e0_FnCallArgChecker*,jule::Ptr<_1ac67939b_ParamIns>&,jule::Ptr<_1ad3e6975_Data>&,_1ab005531_Token&);
inline jule::Bool _1ad3d72c3_push(_1ad3d55e0_FnCallArgChecker*,jule::Ptr<_1ac67939b_ParamIns>&,jule::Ptr<_1aadb528c_Expr>);
inline jule::Bool _1ad3d7757_push_variadic(_1ad3d55e0_FnCallArgChecker*,jule::Ptr<_1ac67939b_ParamIns>&,jule::I64);
inline jule::Bool _1ad3d7b0e_check_args(_1ad3d55e0_FnCallArgChecker*,jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>&);
inline jule::Bool _1ad3d7e2d_check_dynamic_type_annotation(_1ad3d55e0_FnCallArgChecker*);
inline jule::Bool _1ad3d81e7_check(_1ad3d55e0_FnCallArgChecker*);
struct _1ad3d55e0_FnCallArgChecker {
	jule::Ptr<_1ad3e89cc_Eval> _field_e = jule::Ptr<_1ad3e89cc_Eval>();
	jule::Slice<jule::Ptr<_1aadb528c_Expr>> _field_args = jule::Slice<jule::Ptr<_1aadb528c_Expr>>();
	_1ab005531_Token _field_error_token = _1ab005531_Token();
	jule::Ptr<_1ac67a501_FnIns> _field_f = jule::Ptr<_1ac67a501_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();


	_1ad3d55e0_FnCallArgChecker(jule::Ptr<_1ad3e89cc_Eval> __param_e, jule::Slice<jule::Ptr<_1aadb528c_Expr>> __param_args, _1ab005531_Token __param_error_token, jule::Ptr<_1ac67a501_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models): _field_e(__param_e), _field_args(__param_args), _field_error_token(__param_error_token), _field_f(__param_f), _field_dynamic_annotation(__param_dynamic_annotation), _field_arg_models(__param_arg_models) {}

	

	_1ad3d55e0_FnCallArgChecker(void) = default;

	inline bool operator==(_1ad3d55e0_FnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_f == _other._field_f &&
			this->_field_dynamic_annotation == _other._field_dynamic_annotation &&
			this->_field_arg_models == _other._field_arg_models;
	}

	inline bool operator!=(_1ad3d55e0_FnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1ad3d8e62_push_err(_1ad3d8846_StructLitChecker*,_1ab005531_Token,jule::Str,jule::Slice<jule::Any>);
inline void _1ad3d935d_push_suggestion(_1ad3d8846_StructLitChecker*,jule::Str,jule::Slice<jule::Any>);
inline void _1ad3d9836_push_match(_1ad3d8846_StructLitChecker*,jule::Ptr<_1ac663a06_FieldIns>&,jule::Ptr<_1ad3e6975_Data>&,_1ab005531_Token&);
inline void _1ad3d9c32_check_pair(_1ad3d8846_StructLitChecker*,jule::Ptr<_1ab01b602_FieldExprPair>&,jule::Slice<jule::Ptr<_1aadb528c_Expr>>&);
inline jule::Bool _1ad3da0d9_ready_exprs(_1ad3d8846_StructLitChecker*,jule::Slice<jule::Ptr<_1aadb528c_Expr>>&);
inline void _1ad3da408_check(_1ad3d8846_StructLitChecker*,jule::Slice<jule::Ptr<_1aadb528c_Expr>>&);
struct _1ad3d8846_StructLitChecker {
	jule::Ptr<_1ad3e89cc_Eval> _field_e = jule::Ptr<_1ad3e89cc_Eval>();
	_1ab005531_Token _field_error_token = _1ab005531_Token();
	jule::Ptr<_1ac664551_StructIns> _field_s = jule::Ptr<_1ac664551_StructIns>();
	jule::Slice<jule::Ptr<_1ac6675ed_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1ac6675ed_StructArgExprModel>>();


	_1ad3d8846_StructLitChecker(jule::Ptr<_1ad3e89cc_Eval> __param_e, _1ab005531_Token __param_error_token, jule::Ptr<_1ac664551_StructIns> __param_s, jule::Slice<jule::Ptr<_1ac6675ed_StructArgExprModel>> __param_args): _field_e(__param_e), _field_error_token(__param_error_token), _field_s(__param_s), _field_args(__param_args) {}

	

	_1ad3d8846_StructLitChecker(void) = default;

	inline bool operator==(_1ad3d8846_StructLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1ad3d8846_StructLitChecker _other) { return !this->operator==(_other); }


};
struct _1ac666c07_BinopExprModel {
	jule::Ptr<_1ac666663_OperandExprModel> _field_left = jule::Ptr<_1ac666663_OperandExprModel>();
	jule::Ptr<_1ac666663_OperandExprModel> _field_right = jule::Ptr<_1ac666663_OperandExprModel>();
	_1ab005531_Token _field_op = _1ab005531_Token();


	_1ac666c07_BinopExprModel(jule::Ptr<_1ac666663_OperandExprModel> __param_left, jule::Ptr<_1ac666663_OperandExprModel> __param_right, _1ab005531_Token __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1ac666c07_BinopExprModel(void) = default;

	inline bool operator==(_1ac666c07_BinopExprModel _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ac666c07_BinopExprModel _other) { return !this->operator==(_other); }


};
inline void _1ad3dd85c_prepare_types(_1ad3dd3b7_RetTypeChecker*);
inline void _1ad3ddb7b_prepare_exprs(_1ad3dd3b7_RetTypeChecker*,jule::Ptr<_1aadb528c_Expr>&);
inline void _1ad3dddbd_ret_vars(_1ad3dd3b7_RetTypeChecker*);
inline void _1ad3de110_check_exprs(_1ad3dd3b7_RetTypeChecker*);
inline jule::Bool _1ad3de4b7_check(_1ad3dd3b7_RetTypeChecker*,jule::Ptr<_1aadb528c_Expr>&);
struct _1ad3dd3b7_RetTypeChecker {
	jule::Ptr<_1ad35872d_ScopeChecker> _field_sc = jule::Ptr<_1ad35872d_ScopeChecker>();
	jule::Ptr<_1ac67a501_FnIns> _field_f = jule::Ptr<_1ac67a501_FnIns>();
	jule::Slice<jule::Ptr<_1ad429931_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1ad429931_TypeKind>>();
	jule::Slice<jule::Ptr<_1aadb528c_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1aadb528c_Expr>>();
	jule::Slice<jule::Ptr<_1ad39e037_Var>> _field_vars = jule::Slice<jule::Ptr<_1ad39e037_Var>>();
	_1ab005531_Token _field_error_token = _1ab005531_Token();
	jule::Any _field_model = jule::Any();


	_1ad3dd3b7_RetTypeChecker(jule::Ptr<_1ad35872d_ScopeChecker> __param_sc, jule::Ptr<_1ac67a501_FnIns> __param_f, jule::Slice<jule::Ptr<_1ad429931_TypeKind>> __param_types, jule::Slice<jule::Ptr<_1aadb528c_Expr>> __param_exprs, jule::Slice<jule::Ptr<_1ad39e037_Var>> __param_vars, _1ab005531_Token __param_error_token, jule::Any __param_model): _field_sc(__param_sc), _field_f(__param_f), _field_types(__param_types), _field_exprs(__param_exprs), _field_vars(__param_vars), _field_error_token(__param_error_token), _field_model(__param_model) {}

	

	_1ad3dd3b7_RetTypeChecker(void) = default;

	inline bool operator==(_1ad3dd3b7_RetTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1ad3dd3b7_RetTypeChecker _other) { return !this->operator==(_other); }


};
struct _1ac667158_UnaryExprModel {
	jule::Ptr<_1ad3e6975_Data> _field_expr = jule::Ptr<_1ad3e6975_Data>();
	_1ab005531_Token _field_op = _1ab005531_Token();


	_1ac667158_UnaryExprModel(jule::Ptr<_1ad3e6975_Data> __param_expr, _1ab005531_Token __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1ac667158_UnaryExprModel(void) = default;

	inline bool operator==(_1ac667158_UnaryExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ac667158_UnaryExprModel _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aaddb923_is_empty(_1ab01be82_SliceExpr*);
struct _1ab01be82_SliceExpr {
	_1ab005531_Token _field_token = _1ab005531_Token();
	_1ab005531_Token _field_end = _1ab005531_Token();
	jule::Slice<jule::Ptr<_1aadb528c_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1aadb528c_Expr>>();


	_1ab01be82_SliceExpr(_1ab005531_Token __param_token, _1ab005531_Token __param_end, jule::Slice<jule::Ptr<_1aadb528c_Expr>> __param_exprs): _field_token(__param_token), _field_end(__param_end), _field_exprs(__param_exprs) {}

	

	_1ab01be82_SliceExpr(void) = default;

	inline bool operator==(_1ab01be82_SliceExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1ab01be82_SliceExpr _other) { return !this->operator==(_other); }


};
struct _1aadb58ec_IndexingExpr {
	_1ab005531_Token _field_token = _1ab005531_Token();
	_1ab005531_Token _field_end = _1ab005531_Token();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();
	jule::Ptr<_1aadb528c_Expr> _field_index = jule::Ptr<_1aadb528c_Expr>();


	_1aadb58ec_IndexingExpr(_1ab005531_Token __param_token, _1ab005531_Token __param_end, jule::Ptr<_1aadb528c_Expr> __param_expr, jule::Ptr<_1aadb528c_Expr> __param_index): _field_token(__param_token), _field_end(__param_end), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1aadb58ec_IndexingExpr(void) = default;

	inline bool operator==(_1aadb58ec_IndexingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1aadb58ec_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1ab01c625_SlicingExpr {
	_1ab005531_Token _field_token = _1ab005531_Token();
	_1ab005531_Token _field_end = _1ab005531_Token();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();
	jule::Ptr<_1aadb528c_Expr> _field_start = jule::Ptr<_1aadb528c_Expr>();
	jule::Ptr<_1aadb528c_Expr> _field_to = jule::Ptr<_1aadb528c_Expr>();


	_1ab01c625_SlicingExpr(_1ab005531_Token __param_token, _1ab005531_Token __param_end, jule::Ptr<_1aadb528c_Expr> __param_expr, jule::Ptr<_1aadb528c_Expr> __param_start, jule::Ptr<_1aadb528c_Expr> __param_to): _field_token(__param_token), _field_end(__param_end), _field_expr(__param_expr), _field_start(__param_start), _field_to(__param_to) {}

	

	_1ab01c625_SlicingExpr(void) = default;

	inline bool operator==(_1ab01c625_SlicingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_start == _other._field_start &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1ab01c625_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1ac668566_CastingExprModel {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1ad429931_TypeKind> _field_kind = jule::Ptr<_1ad429931_TypeKind>();
	jule::Ptr<_1ad429931_TypeKind> _field_expr_kind = jule::Ptr<_1ad429931_TypeKind>();


	_1ac668566_CastingExprModel(_1ab005531_Token __param_token, jule::Any __param_expr, jule::Ptr<_1ad429931_TypeKind> __param_kind, jule::Ptr<_1ad429931_TypeKind> __param_expr_kind): _field_token(__param_token), _field_expr(__param_expr), _field_kind(__param_kind), _field_expr_kind(__param_expr_kind) {}

	

	_1ac668566_CastingExprModel(void) = default;

	inline bool operator==(_1ac668566_CastingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr_kind == _other._field_expr_kind;
	}

	inline bool operator!=(_1ac668566_CastingExprModel _other) { return !this->operator==(_other); }


};
inline _1ad41b604_BinaryEval static__1ad41bc20_new_plain(jule::Ptr<_1ad3e89cc_Eval>);
inline _1ad41b604_BinaryEval static__1ad41c10a_new(jule::Ptr<_1ad3e89cc_Eval>,_1ab005531_Token);
inline jule::Bool _1ad41c429_check_type_compatibility(_1ad41b604_BinaryEval*);
inline jule::Bool _1ad41c759_check_struct_common_operator_compatibility(_1ad41b604_BinaryEval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad41ca34_eval_nil(_1ad41b604_BinaryEval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad41cd0e_eval_enum(_1ad41b604_BinaryEval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad41d0d9_eval_sptr(_1ad41b604_BinaryEval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad41d3b4_eval_ptr(_1ad41b604_BinaryEval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad41d68e_eval_arr(_1ad41b604_BinaryEval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad41d969_eval_slc(_1ad41b604_BinaryEval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad41dc44_eval_fn(_1ad41b604_BinaryEval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad41e01e_eval_struct(_1ad41b604_BinaryEval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad41e2e9_eval_trait(_1ad41b604_BinaryEval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad41e5c4_eval_any(_1ad41b604_BinaryEval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad41e89e_eval_bool(_1ad41b604_BinaryEval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad41eb79_eval_str(_1ad41b604_BinaryEval*);
inline void _1ad41edbb_set_type_to_greater(_1ad41b604_BinaryEval*);
inline void _1ad4201a7_check_mod_data(_1ad41b604_BinaryEval*,jule::Ptr<_1ad3e6975_Data>&);
inline void _1ad4203e9_mod(_1ad41b604_BinaryEval*);
inline jule::Bool _1ad4208c2_numbers_are_compatibile(_1ad41b604_BinaryEval*,jule::Str&,jule::Str&);
inline jule::Ptr<_1ad3e6975_Data> _1ad420b8b_eval_float(_1ad41b604_BinaryEval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad420e66_eval_int(_1ad41b604_BinaryEval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad421241_eval_prim(_1ad41b604_BinaryEval*);
inline jule::Ptr<_1ad3e6975_Data> _1ad42151b_eval_op(_1ad41b604_BinaryEval*);
inline void _1ad42183a_eval_const(_1ad41b604_BinaryEval*,jule::Ptr<_1ad3e6975_Data>&);
inline void _1ad421b59_check_data(_1ad41b604_BinaryEval*,jule::Ptr<_1ad3e6975_Data>&);
inline void _1ad421d9b_check_datas(_1ad41b604_BinaryEval*);
inline void _1ad4221ba_set_model(_1ad41b604_BinaryEval*,jule::Ptr<_1ad3e6975_Data>&);
inline void _1ad4224d9_post_eval(_1ad41b604_BinaryEval*,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad42296d_solve_explicit(_1ad41b604_BinaryEval*,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad422d25_eval(_1ad41b604_BinaryEval*,jule::Ptr<_1ab01b1b2_BinopExpr>&);
struct _1ad41b604_BinaryEval {
	jule::Ptr<_1ad3e89cc_Eval> _field_e = jule::Ptr<_1ad3e89cc_Eval>();
	jule::Ptr<_1ad3e6975_Data> _field_l = jule::Ptr<_1ad3e6975_Data>();
	jule::Ptr<_1ad3e6975_Data> _field_r = jule::Ptr<_1ad3e6975_Data>();
	_1ab005531_Token _field_op = _1ab005531_Token();


	_1ad41b604_BinaryEval(jule::Ptr<_1ad3e89cc_Eval> __param_e, jule::Ptr<_1ad3e6975_Data> __param_l, jule::Ptr<_1ad3e6975_Data> __param_r, _1ab005531_Token __param_op): _field_e(__param_e), _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1ad41b604_BinaryEval(void) = default;

	inline bool operator==(_1ad41b604_BinaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ad41b604_BinaryEval _other) { return !this->operator==(_other); }


};
struct _1ad428996_TypeAlias {
	jule::Ptr<_1ab01d615_ScopeTree> _field_scope = jule::Ptr<_1ab01d615_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1ad42e293_TypeSymbol> _field_kind = jule::Ptr<_1ad42e293_TypeSymbol>();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1ad428996_TypeAlias>> _field_generics = jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>();


	_1ad428996_TypeAlias(jule::Ptr<_1ab01d615_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, jule::Bool __param_generic, _1ab005531_Token __param_token, jule::Str __param_ident, jule::Ptr<_1ad42e293_TypeSymbol> __param_kind, jule::Slice<jule::Any> __param_refers, jule::Slice<jule::Ptr<_1ad428996_TypeAlias>> __param_generics): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_used(__param_used), _field_generic(__param_generic), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_refers(__param_refers), _field_generics(__param_generics) {}

	

	_1ad428996_TypeAlias(void) = default;

	inline bool operator==(_1ad428996_TypeAlias _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_used == _other._field_used &&
			this->_field_generic == _other._field_generic &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_refers == _other._field_refers &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1ad428996_TypeAlias _other) { return !this->operator==(_other); }


};
struct _1ac66904a_FnCallExprModel {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Ptr<_1ac67a501_FnIns> _field_func = jule::Ptr<_1ac67a501_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_1ad33ce0a_Scope> _field_except = jule::Ptr<_1ad33ce0a_Scope>();
	jule::Bool _field_assigned = jule::Bool();


	_1ac66904a_FnCallExprModel(_1ab005531_Token __param_token, jule::Ptr<_1ac67a501_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args, jule::Ptr<_1ad33ce0a_Scope> __param_except, jule::Bool __param_assigned): _field_token(__param_token), _field_func(__param_func), _field_is_co(__param_is_co), _field_expr(__param_expr), _field_args(__param_args), _field_except(__param_except), _field_assigned(__param_assigned) {}

	

	_1ac66904a_FnCallExprModel(void) = default;

	inline bool operator==(_1ac66904a_FnCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_func == _other._field_func &&
			this->_field_is_co == _other._field_is_co &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_except == _other._field_except &&
			this->_field_assigned == _other._field_assigned;
	}

	inline bool operator!=(_1ac66904a_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab01c845_GenericDecl {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_ident = jule::Str();


	_1ab01c845_GenericDecl(_1ab005531_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1ab01c845_GenericDecl(void) = default;

	inline bool operator==(_1ab01c845_GenericDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ab01c845_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1ac6699eb_IndexingExprModel {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Ptr<_1ad3e6975_Data> _field_expr = jule::Ptr<_1ad3e6975_Data>();
	jule::Ptr<_1ad3e6975_Data> _field_index = jule::Ptr<_1ad3e6975_Data>();


	_1ac6699eb_IndexingExprModel(_1ab005531_Token __param_token, jule::Ptr<_1ad3e6975_Data> __param_expr, jule::Ptr<_1ad3e6975_Data> __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1ac6699eb_IndexingExprModel(void) = default;

	inline bool operator==(_1ac6699eb_IndexingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1ac6699eb_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1ab01ca65_LabelSt {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_ident = jule::Str();


	_1ab01ca65_LabelSt(_1ab005531_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1ab01ca65_LabelSt(void) = default;

	inline bool operator==(_1ab01ca65_LabelSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ab01ca65_LabelSt _other) { return !this->operator==(_other); }


};
struct _1ab01cc85_GotoSt {
	_1ab005531_Token _field_token = _1ab005531_Token();
	_1ab005531_Token _field_label = _1ab005531_Token();


	_1ab01cc85_GotoSt(_1ab005531_Token __param_token, _1ab005531_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1ab01cc85_GotoSt(void) = default;

	inline bool operator==(_1ab01cc85_GotoSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1ab01cc85_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ab01cea5_FallSt {
	_1ab005531_Token _field_token = _1ab005531_Token();


	_1ab01cea5_FallSt(_1ab005531_Token __param_token): _field_token(__param_token) {}

	

	_1ab01cea5_FallSt(void) = default;

	inline bool operator==(_1ab01cea5_FallSt _other) {
		return 
			this->_field_token == _other._field_token;
	}

	inline bool operator!=(_1ab01cea5_FallSt _other) { return !this->operator==(_other); }


};
struct _1ac66b04c_SlicingExprModel {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_1ac66b04c_SlicingExprModel(_1ab005531_Token __param_token, jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_token(__param_token), _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_1ac66b04c_SlicingExprModel(void) = default;

	inline bool operator==(_1ac66b04c_SlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1ac66b04c_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1ac66b69b_TraitSubIdentExprModel {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1ac676a08_Fn> _field_method = jule::Ptr<_1ac676a08_Fn>();
	jule::Ptr<_1ac85d096_Trait> _field_trt = jule::Ptr<_1ac85d096_Trait>();


	_1ac66b69b_TraitSubIdentExprModel(_1ab005531_Token __param_token, jule::Any __param_expr, jule::Ptr<_1ac676a08_Fn> __param_method, jule::Ptr<_1ac85d096_Trait> __param_trt): _field_token(__param_token), _field_expr(__param_expr), _field_method(__param_method), _field_trt(__param_trt) {}

	

	_1ac66b69b_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1ac66b69b_TraitSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method &&
			this->_field_trt == _other._field_trt;
	}

	inline bool operator!=(_1ac66b69b_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ac66c0a3_StructSubIdentExprModel {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Ptr<_1ad3e6975_Data> _field_expr = jule::Ptr<_1ad3e6975_Data>();
	jule::Ptr<_1ad429931_TypeKind> _field_expr_kind = jule::Ptr<_1ad429931_TypeKind>();
	jule::Ptr<_1ac67a501_FnIns> _field_method = jule::Ptr<_1ac67a501_FnIns>();
	jule::Ptr<_1ac663a06_FieldIns> _field_field = jule::Ptr<_1ac663a06_FieldIns>();


	_1ac66c0a3_StructSubIdentExprModel(_1ab005531_Token __param_token, jule::Ptr<_1ad3e6975_Data> __param_expr, jule::Ptr<_1ad429931_TypeKind> __param_expr_kind, jule::Ptr<_1ac67a501_FnIns> __param_method, jule::Ptr<_1ac663a06_FieldIns> __param_field): _field_token(__param_token), _field_expr(__param_expr), _field_expr_kind(__param_expr_kind), _field_method(__param_method), _field_field(__param_field) {}

	

	_1ac66c0a3_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1ac66c0a3_StructSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_method == _other._field_method &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1ac66c0a3_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ab01d1c5_AssignLeft {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();


	_1ab01d1c5_AssignLeft(_1ab005531_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ptr<_1aadb528c_Expr> __param_expr): _field_token(__param_token), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1ab01d1c5_AssignLeft(void) = default;

	inline bool operator==(_1ab01d1c5_AssignLeft _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ab01d1c5_AssignLeft _other) { return !this->operator==(_other); }


};
inline void _1ad43be0a_push_err(_1ad43b635_TypeChecker*,_1ab005531_Token,jule::Str,jule::Slice<jule::Any>);
inline void _1ad43c14c_allow_builtin(_1ad43b635_TypeChecker*);
inline void _1ad43c38e_disallow_builtin(_1ad43b635_TypeChecker*);
inline jule::Ptr<_1ad42ec99_Prim> _1ad43c746_build_prim(_1ad43b635_TypeChecker*,jule::Ptr<_1aaec9b87_IdentTypeDecl>&);
inline void _1ad43cc1e_push_cycle_error(_1ad43b635_TypeChecker*,jule::Any,jule::Any,jule::Str&);
inline jule::Bool _1ad43d1a3_check_cross_cycle(_1ad43b635_TypeChecker*,jule::Any,jule::Str&);
inline jule::Bool _1ad43d637_check_illegal_cycles(_1ad43b635_TypeChecker*,jule::Ptr<_1aaec9b87_IdentTypeDecl>&,jule::Any);
inline jule::Trait<_1ad4293e2_Kind> _1ad43dabb_from_type_alias(_1ad43b635_TypeChecker*,jule::Ptr<_1aaec9b87_IdentTypeDecl>&,jule::Ptr<_1ad428996_TypeAlias>&);
inline jule::Ptr<_1ac724545_Enum> _1ad43e050_from_enum(_1ad43b635_TypeChecker*,jule::Ptr<_1aaec9b87_IdentTypeDecl>&,jule::Ptr<_1ac724545_Enum>&);
inline jule::Ptr<_1ac85d096_Trait> _1ad43e4d4_from_trait(_1ad43b635_TypeChecker*,jule::Ptr<_1aaec9b87_IdentTypeDecl>&,jule::Ptr<_1ac85d096_Trait>&);
inline jule::Bool _1ad43e968_check_struct_ins(_1ad43b635_TypeChecker*,jule::Ptr<_1ac664551_StructIns>&,_1ab005531_Token&);
inline void _1ad43eccb_append_used_struct_reference(_1ad43b635_TypeChecker*,jule::Ptr<_1ac661075_Struct>&);
inline jule::Ptr<_1ac664551_StructIns> _1ad44024e_build_struct_instance(_1ad43b635_TypeChecker*,jule::Ptr<_1aaec9b87_IdentTypeDecl>&,jule::Ptr<_1ac661075_Struct>&);
inline jule::Ptr<_1ac664551_StructIns> _1ad4406d3_from_struct(_1ad43b635_TypeChecker*,jule::Ptr<_1aaec9b87_IdentTypeDecl>&,jule::Ptr<_1ac661075_Struct>&);
inline jule::Trait<_1ad4293e2_Kind> _1ad440b67_get_def(_1ad43b635_TypeChecker*,jule::Trait<_1ad447256_Lookup>,jule::Ptr<_1aaec9b87_IdentTypeDecl>&);
inline jule::Trait<_1ad4293e2_Kind> _1ad44101e_build_ident(_1ad43b635_TypeChecker*,jule::Ptr<_1aaec9b87_IdentTypeDecl>);
inline jule::Ptr<_1ad433b05_Sptr> _1ad4413c6_build_sptr_from_type(_1ad43b635_TypeChecker*,jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Ptr<_1ad433b05_Sptr> _1ad44177d_build_sptr(_1ad43b635_TypeChecker*,jule::Ptr<_1aada98ad_SptrTypeDecl>);
inline jule::Ptr<_1ad437983_Ptr> _1ad441b35_build_ptr_from_type(_1ad43b635_TypeChecker*,jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Ptr<_1ad437983_Ptr> _1ad441edc_build_ptr(_1ad43b635_TypeChecker*,jule::Ptr<_1aae087db_PtrTypeDecl>);
inline jule::Ptr<_1ad4346d8_Slc> _1ad442394_build_slc(_1ad43b635_TypeChecker*,jule::Ptr<_1aae7e367_SlcTypeDecl>);
inline jule::Ptr<_1ad436da0_Arr> _1ad44274b_build_arr(_1ad43b635_TypeChecker*,jule::Ptr<_1b4ae977b_ArrTypeDecl>);
inline jule::Ptr<_1ad4360be_Map> _1ad442b03_build_map(_1ad43b635_TypeChecker*,jule::Ptr<_1aadb4d4c_MapTypeDecl>);
inline jule::Ptr<_1ad435354_Tuple> _1ad442eaa_build_tuple(_1ad43b635_TypeChecker*,jule::Ptr<_1aade33db_TupleTypeDecl>);
inline jule::Bool _1ad443362_check_fn_types(_1ad43b635_TypeChecker*,jule::Ptr<_1ac67a501_FnIns>&);
inline jule::Ptr<_1ac67a501_FnIns> _1ad443719_build_fn(_1ad43b635_TypeChecker*,jule::Ptr<_1ab01da55_FnDecl>);
inline jule::Trait<_1ad4293e2_Kind> _1ad443ac1_build_by_namespace(_1ad43b635_TypeChecker*,jule::Ptr<_1aaea458a_NamespaceTypeDecl>);
inline jule::Ptr<_1ad429931_TypeKind> _1ad443e78_build(_1ad43b635_TypeChecker*,jule::Any&);
inline jule::Ptr<_1ad429931_TypeKind> _1ad444330_check_decl(_1ad43b635_TypeChecker*,jule::Ptr<_1aae075dc_TypeDecl>&);
inline void _1ad44464e_check(_1ad43b635_TypeChecker*,jule::Ptr<_1ad42e293_TypeSymbol>&);
struct _1ad43b635_TypeChecker {
	jule::Ptr<_1ad37cd5c_Sema> _field_s = jule::Ptr<_1ad37cd5c_Sema>();
	jule::Trait<_1ad447256_Lookup> _field_lookup = jule::Trait<_1ad447256_Lookup>();
	jule::Ptr<_1ad43a6de_Referencer> _field_referencer = jule::Ptr<_1ad43a6de_Referencer>();
	_1ab005531_Token _field_error_token = _1ab005531_Token();
	jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>();
	jule::Slice<jule::Ptr<_1ad428996_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1ad428996_TypeAlias> _field_owner_alias = jule::Ptr<_1ad428996_TypeAlias>();
	jule::Slice<jule::Ptr<_1ad428996_TypeAlias>> _field_banned_generics = jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();


	_1ad43b635_TypeChecker(jule::Ptr<_1ad37cd5c_Sema> __param_s, jule::Trait<_1ad447256_Lookup> __param_lookup, jule::Ptr<_1ad43a6de_Referencer> __param_referencer, _1ab005531_Token __param_error_token, jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ptr<_1ad428996_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain, jule::Bool __param_dis_builtin, jule::Bool __param_selection, jule::Ptr<_1ad428996_TypeAlias> __param_owner_alias, jule::Slice<jule::Ptr<_1ad428996_TypeAlias>> __param_banned_generics, jule::Bool __param_inscatch): _field_s(__param_s), _field_lookup(__param_lookup), _field_referencer(__param_referencer), _field_error_token(__param_error_token), _field_ignore_generics(__param_ignore_generics), _field_use_generics(__param_use_generics), _field_not_plain(__param_not_plain), _field_dis_builtin(__param_dis_builtin), _field_selection(__param_selection), _field_owner_alias(__param_owner_alias), _field_banned_generics(__param_banned_generics), _field_inscatch(__param_inscatch) {}

	

	_1ad43b635_TypeChecker(void) = default;

	inline bool operator==(_1ad43b635_TypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_ignore_generics == _other._field_ignore_generics &&
			this->_field_use_generics == _other._field_use_generics &&
			this->_field_not_plain == _other._field_not_plain &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_selection == _other._field_selection &&
			this->_field_owner_alias == _other._field_owner_alias &&
			this->_field_banned_generics == _other._field_banned_generics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1ad43b635_TypeChecker _other) { return !this->operator==(_other); }


};
struct _1ab01d3e5_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	_1ab005531_Token _field_setter = _1ab005531_Token();
	jule::Slice<jule::Ptr<_1ab01d1c5_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_1ab01d1c5_AssignLeft>>();
	jule::Ptr<_1aadb528c_Expr> _field_right = jule::Ptr<_1aadb528c_Expr>();


	_1ab01d3e5_AssignSt(jule::Bool __param_declarative, _1ab005531_Token __param_setter, jule::Slice<jule::Ptr<_1ab01d1c5_AssignLeft>> __param_left, jule::Ptr<_1aadb528c_Expr> __param_right): _field_declarative(__param_declarative), _field_setter(__param_setter), _field_left(__param_left), _field_right(__param_right) {}

	

	_1ab01d3e5_AssignSt(void) = default;

	inline bool operator==(_1ab01d3e5_AssignSt _other) {
		return 
			this->_field_declarative == _other._field_declarative &&
			this->_field_setter == _other._field_setter &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1ab01d3e5_AssignSt _other) { return !this->operator==(_other); }


};
struct _1ab01d615_ScopeTree {
	jule::Ptr<_1ab01d615_ScopeTree> _field_parent = jule::Ptr<_1ab01d615_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<_1aae02ad2_Node> _field_stmts = jule::Slice<_1aae02ad2_Node>();
	_1ab005531_Token _field_end = _1ab005531_Token();


	_1ab01d615_ScopeTree(jule::Ptr<_1ab01d615_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<_1aae02ad2_Node> __param_stmts, _1ab005531_Token __param_end): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts), _field_end(__param_end) {}

	

	_1ab01d615_ScopeTree(void) = default;

	inline bool operator==(_1ab01d615_ScopeTree _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1ab01d615_ScopeTree _other) { return !this->operator==(_other); }


};
struct _1ac66d5d2_CommonSubIdentExprModel {
	jule::Ptr<_1ad429931_TypeKind> _field_expr_kind = jule::Ptr<_1ad429931_TypeKind>();
	jule::Any _field_expr = jule::Any();
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_ident = jule::Str();


	_1ac66d5d2_CommonSubIdentExprModel(jule::Ptr<_1ad429931_TypeKind> __param_expr_kind, jule::Any __param_expr, _1ab005531_Token __param_token, jule::Str __param_ident): _field_expr_kind(__param_expr_kind), _field_expr(__param_expr), _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1ac66d5d2_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1ac66d5d2_CommonSubIdentExprModel _other) {
		return 
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_expr == _other._field_expr &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ac66d5d2_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1e6be526d_IR>,jule::Slice<_1a92a31c6_Log>> static__1abaed5bd_build(jule::Str,jule::I64);
inline void _1abb01291_append_structs(_1e6be526d_IR*,jule::Ptr<_1ad376b8b_Package>&,jule::Slice<jule::Ptr<_1ac661075_Struct>>&);
inline jule::Slice<jule::Ptr<_1ac661075_Struct>> _1abb1c60e_get_all_structures(_1e6be526d_IR*);
inline void _1abb322c2_order(_1e6be526d_IR*);
struct _1e6be526d_IR {
	jule::Str _field_root = jule::Str();
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_1ad376b8b_Package> _field_main = jule::Ptr<_1ad376b8b_Package>();
	jule::Slice<jule::Ptr<_1ad3736b0_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_1ad3736b0_ImportInfo>>();
	_1e6c44d4a_OrderedDefines _field_ordered = _1e6c44d4a_OrderedDefines();


	_1e6be526d_IR(jule::Str __param_root, jule::Slice<jule::Str> __param_passes, jule::Ptr<_1ad376b8b_Package> __param_main, jule::Slice<jule::Ptr<_1ad3736b0_ImportInfo>> __param_used, _1e6c44d4a_OrderedDefines __param_ordered): _field_root(__param_root), _field_passes(__param_passes), _field_main(__param_main), _field_used(__param_used), _field_ordered(__param_ordered) {}

	

	_1e6be526d_IR(void) = default;

	inline bool operator==(_1e6be526d_IR _other) {
		return 
			this->_field_root == _other._field_root &&
			this->_field_passes == _other._field_passes &&
			this->_field_main == _other._field_main &&
			this->_field_used == _other._field_used &&
			this->_field_ordered == _other._field_ordered;
	}

	inline bool operator!=(_1e6be526d_IR _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aadda36c_is_self(_1ab01d835_ParamDecl*);
inline jule::Bool _1aade42ee_is_ref(_1ab01d835_ParamDecl*);
struct _1ab01d835_ParamDecl {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1aae075dc_TypeDecl> _field_kind = jule::Ptr<_1aae075dc_TypeDecl>();
	jule::Str _field_ident = jule::Str();


	_1ab01d835_ParamDecl(_1ab005531_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_1aae075dc_TypeDecl> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_1ab01d835_ParamDecl(void) = default;

	inline bool operator==(_1ab01d835_ParamDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ab01d835_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab01dc75_is_anon(_1ab01da55_FnDecl*);
struct _1ab01da55_FnDecl {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>();
	jule::Ptr<_1ab01d615_ScopeTree> _field_scope = jule::Ptr<_1ab01d615_ScopeTree>();
	jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>();
	jule::Ptr<_1aadb506c_RetTypeDecl> _field_result = jule::Ptr<_1aadb506c_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1ab01d835_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_1ab01d835_ParamDecl>>();


	_1ab01da55_FnDecl(_1ab005531_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>> __param_directives, jule::Ptr<_1ab01d615_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>> __param_generics, jule::Ptr<_1aadb506c_RetTypeDecl> __param_result, jule::Slice<jule::Ptr<_1ab01d835_ParamDecl>> __param_params): _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params) {}

	

	_1ab01da55_FnDecl(void) = default;

	inline bool operator==(_1ab01da55_FnDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params;
	}

	inline bool operator!=(_1ab01da55_FnDecl _other) { return !this->operator==(_other); }


};
struct _1ab01e6d2_VarDecl {
	jule::Ptr<_1ab01d615_ScopeTree> _field_scope = jule::Ptr<_1ab01d615_ScopeTree>();
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>();
	jule::Ptr<_1aae075dc_TypeDecl> _field_kind = jule::Ptr<_1aae075dc_TypeDecl>();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();


	_1ab01e6d2_VarDecl(jule::Ptr<_1ab01d615_ScopeTree> __param_scope, _1ab005531_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>> __param_directives, jule::Ptr<_1aae075dc_TypeDecl> __param_kind, jule::Ptr<_1aadb528c_Expr> __param_expr): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_public(__param_public), _field_mutable(__param_mutable), _field_constant(__param_constant), _field_statically(__param_statically), _field_reference(__param_reference), _field_directives(__param_directives), _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1ab01e6d2_VarDecl(void) = default;

	inline bool operator==(_1ab01e6d2_VarDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_constant == _other._field_constant &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_directives == _other._field_directives &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ab01e6d2_VarDecl _other) { return !this->operator==(_other); }


};
struct _1ab01ea45_RetSt {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();


	_1ab01ea45_RetSt(_1ab005531_Token __param_token, jule::Ptr<_1aadb528c_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1ab01ea45_RetSt(void) = default;

	inline bool operator==(_1ab01ea45_RetSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ab01ea45_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab020260_is_inf(_1ab020040_Iter*);
struct _1ab020040_Iter {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_1ab01d615_ScopeTree> _field_scope = jule::Ptr<_1ab01d615_ScopeTree>();


	_1ab020040_Iter(_1ab005531_Token __param_token, jule::Any __param_kind, jule::Ptr<_1ab01d615_ScopeTree> __param_scope): _field_token(__param_token), _field_kind(__param_kind), _field_scope(__param_scope) {}

	

	_1ab020040_Iter(void) = default;

	inline bool operator==(_1ab020040_Iter _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ab020040_Iter _other) { return !this->operator==(_other); }


};
struct _1ac67020a_BuiltinPanicCallExprModel {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Any _field_expr = jule::Any();


	_1ac67020a_BuiltinPanicCallExprModel(_1ab005531_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1ac67020a_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1ac67020a_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ac67020a_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ac6707c1_BuiltinAssertCallExprModel {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_log = jule::Str();


	_1ac6707c1_BuiltinAssertCallExprModel(_1ab005531_Token __param_token, jule::Any __param_expr, jule::Str __param_log): _field_token(__param_token), _field_expr(__param_expr), _field_log(__param_log) {}

	

	_1ac6707c1_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1ac6707c1_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_log == _other._field_log;
	}

	inline bool operator!=(_1ac6707c1_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab0207d2_is_while_next(_1ab0205b2_WhileKind*);
struct _1ab0205b2_WhileKind {
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();
	jule::Any _field_next = jule::Any();
	_1ab005531_Token _field_next_token = _1ab005531_Token();


	_1ab0205b2_WhileKind(jule::Ptr<_1aadb528c_Expr> __param_expr, jule::Any __param_next, _1ab005531_Token __param_next_token): _field_expr(__param_expr), _field_next(__param_next), _field_next_token(__param_next_token) {}

	

	_1ab0205b2_WhileKind(void) = default;

	inline bool operator==(_1ab0205b2_WhileKind _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_next_token == _other._field_next_token;
	}

	inline bool operator!=(_1ab0205b2_WhileKind _other) { return !this->operator==(_other); }


};
struct _1ada6a67b_MutSlicingExprModel {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_1ada6a67b_MutSlicingExprModel(_1ab005531_Token __param_token, jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_token(__param_token), _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_1ada6a67b_MutSlicingExprModel(void) = default;

	inline bool operator==(_1ada6a67b_MutSlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1ada6a67b_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1ab020bcd_RangeKind {
	_1ab005531_Token _field_in_token = _1ab005531_Token();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();
	jule::Ptr<_1ab01e6d2_VarDecl> _field_key_a = jule::Ptr<_1ab01e6d2_VarDecl>();
	jule::Ptr<_1ab01e6d2_VarDecl> _field_key_b = jule::Ptr<_1ab01e6d2_VarDecl>();


	_1ab020bcd_RangeKind(_1ab005531_Token __param_in_token, jule::Ptr<_1aadb528c_Expr> __param_expr, jule::Ptr<_1ab01e6d2_VarDecl> __param_key_a, jule::Ptr<_1ab01e6d2_VarDecl> __param_key_b): _field_in_token(__param_in_token), _field_expr(__param_expr), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1ab020bcd_RangeKind(void) = default;

	inline bool operator==(_1ab020bcd_RangeKind _other) {
		return 
			this->_field_in_token == _other._field_in_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1ab020bcd_RangeKind _other) { return !this->operator==(_other); }


};
struct _1ab021041_BreakSt {
	_1ab005531_Token _field_token = _1ab005531_Token();
	_1ab005531_Token _field_label = _1ab005531_Token();


	_1ab021041_BreakSt(_1ab005531_Token __param_token, _1ab005531_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1ab021041_BreakSt(void) = default;

	inline bool operator==(_1ab021041_BreakSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1ab021041_BreakSt _other) { return !this->operator==(_other); }


};
struct _1ab0213a4_ContSt {
	_1ab005531_Token _field_token = _1ab005531_Token();
	_1ab005531_Token _field_label = _1ab005531_Token();


	_1ab0213a4_ContSt(_1ab005531_Token __param_token, _1ab005531_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1ab0213a4_ContSt(void) = default;

	inline bool operator==(_1ab0213a4_ContSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1ab0213a4_ContSt _other) { return !this->operator==(_other); }


};
struct _1ab0217b1_If {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();
	jule::Ptr<_1ab01d615_ScopeTree> _field_scope = jule::Ptr<_1ab01d615_ScopeTree>();


	_1ab0217b1_If(_1ab005531_Token __param_token, jule::Ptr<_1aadb528c_Expr> __param_expr, jule::Ptr<_1ab01d615_ScopeTree> __param_scope): _field_token(__param_token), _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1ab0217b1_If(void) = default;

	inline bool operator==(_1ab0217b1_If _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ab0217b1_If _other) { return !this->operator==(_other); }


};
struct _1ab021b24_Else {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Ptr<_1ab01d615_ScopeTree> _field_scope = jule::Ptr<_1ab01d615_ScopeTree>();


	_1ab021b24_Else(_1ab005531_Token __param_token, jule::Ptr<_1ab01d615_ScopeTree> __param_scope): _field_token(__param_token), _field_scope(__param_scope) {}

	

	_1ab021b24_Else(void) = default;

	inline bool operator==(_1ab021b24_Else _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ab021b24_Else _other) { return !this->operator==(_other); }


};
struct _1aae075dc_TypeDecl {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Any _field_kind = jule::Any();


	_1aae075dc_TypeDecl(_1ab005531_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_1aae075dc_TypeDecl(void) = default;

	inline bool operator==(_1aae075dc_TypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1aae075dc_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1ab02262a_TypeAliasDecl {
	jule::Ptr<_1ab01d615_ScopeTree> _field_scope = jule::Ptr<_1ab01d615_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1aae075dc_TypeDecl> _field_kind = jule::Ptr<_1aae075dc_TypeDecl>();


	_1ab02262a_TypeAliasDecl(jule::Ptr<_1ab01d615_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _1ab005531_Token __param_token, jule::Str __param_ident, jule::Ptr<_1aae075dc_TypeDecl> __param_kind): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind) {}

	

	_1ab02262a_TypeAliasDecl(void) = default;

	inline bool operator==(_1ab02262a_TypeAliasDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ab02262a_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1ab022a37_Case {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Ptr<_1ab01d615_ScopeTree> _field_scope = jule::Ptr<_1ab01d615_ScopeTree>();
	jule::Slice<jule::Ptr<_1aadb528c_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1aadb528c_Expr>>();


	_1ab022a37_Case(_1ab005531_Token __param_token, jule::Ptr<_1ab01d615_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1aadb528c_Expr>> __param_exprs): _field_token(__param_token), _field_scope(__param_scope), _field_exprs(__param_exprs) {}

	

	_1ab022a37_Case(void) = default;

	inline bool operator==(_1ab022a37_Case _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1ab022a37_Case _other) { return !this->operator==(_other); }


};
struct _1ab023131_MatchCase {
	_1ab005531_Token _field_token = _1ab005531_Token();
	_1ab005531_Token _field_end = _1ab005531_Token();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();
	jule::Slice<jule::Ptr<_1ab022a37_Case>> _field_cases = jule::Slice<jule::Ptr<_1ab022a37_Case>>();
	jule::Ptr<_1ab021b24_Else> _field_default = jule::Ptr<_1ab021b24_Else>();


	_1ab023131_MatchCase(_1ab005531_Token __param_token, _1ab005531_Token __param_end, jule::Bool __param_type_match, jule::Ptr<_1aadb528c_Expr> __param_expr, jule::Slice<jule::Ptr<_1ab022a37_Case>> __param_cases, jule::Ptr<_1ab021b24_Else> __param_default): _field_token(__param_token), _field_end(__param_end), _field_type_match(__param_type_match), _field_expr(__param_expr), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1ab023131_MatchCase(void) = default;

	inline bool operator==(_1ab023131_MatchCase _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_expr == _other._field_expr &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1ab023131_MatchCase _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac67939b_ParamIns> _1ac675111_instance(jule::Ptr<_1ac674bd2_Param>);
inline jule::Bool _1ac6753db_is_self(_1ac674bd2_Param*);
inline jule::Bool _1ac6756b6_is_ref(_1ac674bd2_Param*);
struct _1ac674bd2_Param {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1ad42e293_TypeSymbol> _field_kind = jule::Ptr<_1ad42e293_TypeSymbol>();
	jule::Str _field_ident = jule::Str();


	_1ac674bd2_Param(_1ab005531_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_1ad42e293_TypeSymbol> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_1ac674bd2_Param(void) = default;

	inline bool operator==(_1ac674bd2_Param _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ac674bd2_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac676ec0_is_void(_1ac676a08_Fn*);
inline jule::Bool _1ac67729a_is_method(_1ac676a08_Fn*);
inline jule::Bool _1ac677575_is_entry_point(_1ac676a08_Fn*);
inline jule::Bool _1ac677850_is_init(_1ac676a08_Fn*);
inline jule::Bool _1ac677b2a_is_anon(_1ac676a08_Fn*);
inline jule::Bool _1ac677e05_any_var(_1ac676a08_Fn*);
inline jule::Bool _1ac678224_parameters_uses_generics(_1ac676a08_Fn*);
inline jule::Bool _1ac6784dd_result_uses_generics(_1ac676a08_Fn*);
inline jule::Ptr<_1ac67a501_FnIns> _1ac6787b8_instance_force(jule::Ptr<_1ac676a08_Fn>);
inline jule::Ptr<_1ac67a501_FnIns> _1ac678a93_instance(jule::Ptr<_1ac676a08_Fn>);
inline std::tuple<jule::Bool,jule::I64> _1ac678e4a_append_instance(_1ac676a08_Fn*,jule::Ptr<_1ac67a501_FnIns>&);
struct _1ac676a08_Fn {
	jule::Ptr<_1ad37cd5c_Sema> _field_sema = jule::Ptr<_1ad37cd5c_Sema>();
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>> _field_directives = jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>();
	jule::Ptr<_1ab01d615_ScopeTree> _field_scope = jule::Ptr<_1ab01d615_ScopeTree>();
	jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>();
	jule::Ptr<_1ac674385_RetType> _field_result = jule::Ptr<_1ac674385_RetType>();
	jule::Slice<jule::Ptr<_1ac674bd2_Param>> _field_params = jule::Slice<jule::Ptr<_1ac674bd2_Param>>();
	jule::Ptr<_1ac661075_Struct> _field_owner = jule::Ptr<_1ac661075_Struct>();
	jule::Slice<jule::Ptr<_1ac67a501_FnIns>> _field_instances = jule::Slice<jule::Ptr<_1ac67a501_FnIns>>();


	_1ac676a08_Fn(jule::Ptr<_1ad37cd5c_Sema> __param_sema, _1ab005531_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>> __param_directives, jule::Ptr<_1ab01d615_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>> __param_generics, jule::Ptr<_1ac674385_RetType> __param_result, jule::Slice<jule::Ptr<_1ac674bd2_Param>> __param_params, jule::Ptr<_1ac661075_Struct> __param_owner, jule::Slice<jule::Ptr<_1ac67a501_FnIns>> __param_instances): _field_sema(__param_sema), _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params), _field_owner(__param_owner), _field_instances(__param_instances) {}

	

	_1ac676a08_Fn(void) = default;

	inline bool operator==(_1ac676a08_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params &&
			this->_field_owner == _other._field_owner &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1ac676a08_Fn _other) { return !this->operator==(_other); }


};
struct _1ab0237c4_UseDecl {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<_1ab005531_Token> _field_selected = jule::Slice<_1ab005531_Token>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();


	_1ab0237c4_UseDecl(_1ab005531_Token __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<_1ab005531_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std): _field_token(__param_token), _field_link_path(__param_link_path), _field_alias(__param_alias), _field_full(__param_full), _field_selected(__param_selected), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std) {}

	

	_1ab0237c4_UseDecl(void) = default;

	inline bool operator==(_1ab0237c4_UseDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_alias == _other._field_alias &&
			this->_field_full == _other._field_full &&
			this->_field_selected == _other._field_selected &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std;
	}

	inline bool operator!=(_1ab0237c4_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab024132_auto_expr(_1ab023bd1_EnumItemDecl*);
struct _1ab023bd1_EnumItemDecl {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1aadb528c_Expr> _field_expr = jule::Ptr<_1aadb528c_Expr>();


	_1ab023bd1_EnumItemDecl(_1ab005531_Token __param_token, jule::Str __param_ident, jule::Ptr<_1aadb528c_Expr> __param_expr): _field_token(__param_token), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1ab023bd1_EnumItemDecl(void) = default;

	inline bool operator==(_1ab023bd1_EnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ab023bd1_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab0247e7_default_typed(_1ab0245c7_EnumDecl*);
struct _1ab0245c7_EnumDecl {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1aae075dc_TypeDecl> _field_kind = jule::Ptr<_1aae075dc_TypeDecl>();
	jule::Slice<jule::Ptr<_1ab023bd1_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1ab023bd1_EnumItemDecl>>();
	_1ab005531_Token _field_end = _1ab005531_Token();


	_1ab0245c7_EnumDecl(_1ab005531_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_1aae075dc_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_1ab023bd1_EnumItemDecl>> __param_items, _1ab005531_Token __param_end): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_end(__param_end) {}

	

	_1ab0245c7_EnumDecl(void) = default;

	inline bool operator==(_1ab0245c7_EnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1ab0245c7_EnumDecl _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1adaa65b8_ObjectCoder> static__1adaa4781_new(jule::Ptr<_1e6be526d_IR>&,_1adac2abd_SerializationInfo);
inline void _1ada98533_add_indent(_1adaa65b8_ObjectCoder*);
inline void _1ada9b646_done_indent(_1adaa65b8_ObjectCoder*);
inline jule::Str _1ada9aea3_indent(_1adaa65b8_ObjectCoder*);
inline jule::I64 _1adac5681_find_type_offset(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac85d096_Trait>,jule::Ptr<_1ad429931_TypeKind>);
inline jule::Str _1adac5dac_loc_info(_1adaa65b8_ObjectCoder*,_1ab005531_Token&);
inline jule::Str _1adaa90d2_links(_1adaa65b8_ObjectCoder*);
inline jule::Str _1adae5e43_param_ins(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac67939b_ParamIns>&);
inline jule::Str _1adae60a8_param(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac674bd2_Param>&);
inline jule::Str _1adae621d_params(_1adaa65b8_ObjectCoder*,jule::Slice<jule::Ptr<_1ac674bd2_Param>>&);
inline jule::Str _1adae6383_params_ins(_1adaa65b8_ObjectCoder*,jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>&);
inline jule::Str _1adae64e8_params_decls(_1adaa65b8_ObjectCoder*,jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>&);
inline void _1adae665d_prepare_structure(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac661075_Struct>&);
inline void _1adae67c3_prepare_structures(_1adaa65b8_ObjectCoder*);
inline void _1adae6938_build_trait_wrapper(_1adaa65b8_ObjectCoder*,jule::Ptr<_1adaa29c1_TraitHash>&);
inline void _1adae6a9d_trait_decl(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac85d096_Trait>&);
inline void _1adae6c13_trait_decls(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ad376b8b_Package>&);
inline jule::Str _1adae6d78_structure_plain_decl(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac661075_Struct>&);
inline jule::Str _1adae6edd_structure_plain_decls(_1adaa65b8_ObjectCoder*);
inline jule::Str _1adae7153_var_init_expr(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ad39e037_Var>&,jule::Str);
inline jule::Str _1adae72b8_var(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ad39e037_Var>);
inline jule::Str _1adae742d_field_decl(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac663a06_FieldIns>&);
inline jule::Str _1adae7593_structure_constructor(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac664551_StructIns>&);
inline jule::Str _1adae7708_structure_destructor(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac664551_StructIns>&);
inline void _1adae786d_structure_operator_eq(_1adaa65b8_ObjectCoder*,jule::Str&,jule::Str&,jule::Ptr<_1ac664551_StructIns>&);
inline void _1adae79d3_structure_operator_not_eq(_1adaa65b8_ObjectCoder*,jule::Str&,jule::Str&,jule::Ptr<_1ac664551_StructIns>&);
inline void _1adae7bc0_structure_operator(_1adaa65b8_ObjectCoder*,jule::Str&,jule::Str&,jule::Ptr<_1ac67a501_FnIns>&,jule::Str);
inline jule::Str _1adae8066_structure_operators(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac664551_StructIns>&);
inline jule::Str _1adae8462_structure_derive_defs_decls(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac664551_StructIns>&);
inline jule::Str _1adae8808_structure_ins_decl(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac664551_StructIns>&);
inline jule::Str _1adae8bb0_structure_decl(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac661075_Struct>&);
inline jule::Str _1adae8e8a_structure_decls(_1adaa65b8_ObjectCoder*);
inline jule::Str _1adae941e_func_head(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac67a501_FnIns>&,jule::Bool);
inline jule::Str _1adae98a3_func_decl(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac676a08_Fn>&,jule::Bool);
inline jule::Str _1adae9c5a_func_decls(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ad376b8b_Package>&);
inline void _1adae9e9c_build_trait_map(_1adaa65b8_ObjectCoder*);
inline void _1adaea1de_process_traits(_1adaa65b8_ObjectCoder*);
inline jule::Str _1adaea4b9_decls(_1adaa65b8_ObjectCoder*);
inline jule::Str _1adaea94d_pkg_globals(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ad376b8b_Package>&,jule::Str&);
inline jule::Str _1adaead05_globals(_1adaa65b8_ObjectCoder*,jule::Str&);
inline jule::Str _1adaeb1ac_func(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac676a08_Fn>&);
inline jule::Str _1adaeb564_pkg_funcs(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ad376b8b_Package>&);
inline jule::Str _1adaeb91b_structure_methods(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac664551_StructIns>&);
inline jule::Str _1adaebcc3_structure_ostream(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac664551_StructIns>&);
inline jule::Str _1adaec17a_structure_derive_defs(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac664551_StructIns>&);
inline jule::Str _1adaec532_structure_ins(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac664551_StructIns>&);
inline jule::Str _1adaec8d9_structure(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ac661075_Struct>&);
inline jule::Str _1adaecbb4_structures(_1adaa65b8_ObjectCoder*);
inline jule::Str _1adaece8e_funcs(_1adaa65b8_ObjectCoder*);
inline void _1adaed38a_push_init(_1adaa65b8_ObjectCoder*,jule::Ptr<_1ad376b8b_Package>&,jule::Str&);
inline jule::Str _1adaed742_init_caller(_1adaa65b8_ObjectCoder*,jule::Str&);
inline void _1adaeda61_append_standard(_1adaa65b8_ObjectCoder*,jule::Str&);
inline jule::Str _1adaedd3b_serialize(_1adaa65b8_ObjectCoder*);
struct _1adaa65b8_ObjectCoder {
	jule::Ptr<_1e6be526d_IR> _field_ir = jule::Ptr<_1e6be526d_IR>();
	_1adac2abd_SerializationInfo _field_info = _1adac2abd_SerializationInfo();
	jule::Str _field_indent_buffer = jule::Str();
	jule::Str _field_trait_declarations = jule::Str();
	jule::Str _field_trait_wrappers = jule::Str();
	jule::Str _field_trait_data = jule::Str();
	jule::Str _field_trait_data_t = jule::Str();
	jule::Slice<jule::Ptr<_1adaa29c1_TraitHash>> _field_trait_map = jule::Slice<jule::Ptr<_1adaa29c1_TraitHash>>();
	jule::Ptr<_1ada27627_ExprCoder> _field_ec = jule::Ptr<_1ada27627_ExprCoder>();
	jule::Ptr<_1ad978c1b_ScopeCoder> _field_sc = jule::Ptr<_1ad978c1b_ScopeCoder>();


	_1adaa65b8_ObjectCoder(jule::Ptr<_1e6be526d_IR> __param_ir, _1adac2abd_SerializationInfo __param_info, jule::Str __param_indent_buffer, jule::Str __param_trait_declarations, jule::Str __param_trait_wrappers, jule::Str __param_trait_data, jule::Str __param_trait_data_t, jule::Slice<jule::Ptr<_1adaa29c1_TraitHash>> __param_trait_map, jule::Ptr<_1ada27627_ExprCoder> __param_ec, jule::Ptr<_1ad978c1b_ScopeCoder> __param_sc): _field_ir(__param_ir), _field_info(__param_info), _field_indent_buffer(__param_indent_buffer), _field_trait_declarations(__param_trait_declarations), _field_trait_wrappers(__param_trait_wrappers), _field_trait_data(__param_trait_data), _field_trait_data_t(__param_trait_data_t), _field_trait_map(__param_trait_map), _field_ec(__param_ec), _field_sc(__param_sc) {}

	

	_1adaa65b8_ObjectCoder(void) = default;

	inline bool operator==(_1adaa65b8_ObjectCoder _other) {
		return 
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_indent_buffer == _other._field_indent_buffer &&
			this->_field_trait_declarations == _other._field_trait_declarations &&
			this->_field_trait_wrappers == _other._field_trait_wrappers &&
			this->_field_trait_data == _other._field_trait_data &&
			this->_field_trait_data_t == _other._field_trait_data_t &&
			this->_field_trait_map == _other._field_trait_map &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1adaa65b8_ObjectCoder _other) { return !this->operator==(_other); }


};
struct _1ac68055b_Pass {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_text = jule::Str();


	_1ac68055b_Pass(_1ab005531_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_1ac68055b_Pass(void) = default;

	inline bool operator==(_1ac68055b_Pass _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_1ac68055b_Pass _other) { return !this->operator==(_other); }


};
struct _1ab024d36_FieldDecl {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1aae075dc_TypeDecl> _field_kind = jule::Ptr<_1aae075dc_TypeDecl>();
	jule::Ptr<_1aadb528c_Expr> _field_default = jule::Ptr<_1aadb528c_Expr>();


	_1ab024d36_FieldDecl(_1ab005531_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_1aae075dc_TypeDecl> __param_kind, jule::Ptr<_1aadb528c_Expr> __param_default): _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_1ab024d36_FieldDecl(void) = default;

	inline bool operator==(_1ab024d36_FieldDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1ab024d36_FieldDecl _other) { return !this->operator==(_other); }


};
inline jule::Str _1ac696187_to_str(_1ac85d096_Trait*);
inline jule::Bool _1ac6987c7_equals(jule::Ptr<_1ac85d096_Trait>,jule::Ptr<_1ad429931_TypeKind>);
inline jule::Bool _1ac6d2866_is_builtin(_1ac85d096_Trait*);
inline jule::Ptr<_1ac676a08_Fn> _1ac702842_find_method(_1ac85d096_Trait*,jule::Str);
struct _1ac85d096_Trait {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1ac676a08_Fn>> _field_methods = jule::Slice<jule::Ptr<_1ac676a08_Fn>>();
	jule::Slice<jule::Ptr<_1ac661075_Struct>> _field_implemented = jule::Slice<jule::Ptr<_1ac661075_Struct>>();


	_1ac85d096_Trait(_1ab005531_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Slice<jule::Ptr<_1ac676a08_Fn>> __param_methods, jule::Slice<jule::Ptr<_1ac661075_Struct>> __param_implemented): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_mutable(__param_mutable), _field_methods(__param_methods), _field_implemented(__param_implemented) {}

	

	_1ac85d096_Trait(void) = default;

	inline bool operator==(_1ac85d096_Trait _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_methods == _other._field_methods &&
			this->_field_implemented == _other._field_implemented;
	}

	inline bool operator!=(_1ac85d096_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac746985_auto_expr(_1ac692a57_EnumItem*);
struct _1ac692a57_EnumItem {
	_1ab005531_Token _field_token = _1ab005531_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1ad3e7c84_Value> _field_value = jule::Ptr<_1ad3e7c84_Value>();


	_1ac692a57_EnumItem(_1ab005531_Token __param_token, jule::Str __param_ident, jule::Ptr<_1ad3e7c84_Value> __param_value): _field_token(__param_token), _field_ident(__param_ident), _field_value(__param_value) {}

	

	_1ac692a57_EnumItem(void) = default;

	inline bool operator==(_1ac692a57_EnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1ac692a57_EnumItem _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1adb43842_parse_integer_0(_1adb43215_ArgParser*,jule::Str&,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1adb43842_parse_integer_1(_1adb43215_ArgParser*,jule::Str&,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1adb43b1c_get_data(_1adb43215_ArgParser*);
inline jule::VoidExceptional _1adb43e3b_process_flag(_1adb43215_ArgParser*,jule::Trait<_1adb3d8d6_CommonFlag>&);
inline jule::VoidExceptional _1adb4425a_single_dash(_1adb43215_ArgParser*,jule::Str&);
inline jule::VoidExceptional _1adb44579_double_dash(_1adb43215_ArgParser*,jule::Str&);
inline jule::VoidExceptional _1adb447bb_try_arg(_1adb43215_ArgParser*);
inline jule::VoidExceptional _1adb44a0d_parse(_1adb43215_ArgParser*);
struct _1adb43215_ArgParser {
	_1adb40256_FlagSet _field_set = _1adb40256_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();


	_1adb43215_ArgParser(_1adb40256_FlagSet __param_set, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_content, jule::I64 __param_i): _field_set(__param_set), _field_args(__param_args), _field_content(__param_content), _field_i(__param_i) {}

	

	_1adb43215_ArgParser(void) = default;

	inline bool operator==(_1adb43215_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1adb43215_ArgParser _other) { return !this->operator==(_other); }


};
inline void _1e6ae4b2e_push_opt_level(jule::I64);
inline void _1e7a824e4_free(void*);
inline jule::Str _1e7aa97b3_byte_ptr_to_str(jule::U8*);
inline jule::I64 _1e6bb3e0c_get_last_errno(void);
inline jule::I64 _1e7aabe03_stat(jule::U8*,struct stat*);
inline jule::I64 _1e7aac3ba_open(jule::U8*,jule::I64,jule::I64);
inline jule::U8* _1e7aac7a5_getcwd(jule::U8*,jule::U64);
inline DIR* _1e7aacab3_opendir(jule::U8*);
inline struct dirent* _1e7aacdc1_readdir(DIR*);
inline jule::I64 _1e7aad300_closedir(DIR*);
inline jule::I64 _1e7aadd06_mkdir(jule::U8*,jule::I64);
inline jule::I64 _1e7aae114_rmdir(jule::U8*);
inline jule::I64 _1e7aae422_unlink(jule::U8*);
inline jule::I64 _1e7ac842a_seek(jule::I64,jule::I64,jule::I64);
inline jule::I64 _1e7ac88e2_read(jule::I64,void*,jule::U64);
inline jule::I64 _1e7ac8c88_close(jule::I64);
inline jule::I64 _1e7ac9250_write(jule::I64,void*,jule::U64);
inline void _1e7ac94c5_exit(jule::I64);
inline jule::I64 _1e7b649a0_get_last_os_error(void);
inline jule::Slice<jule::Str> _1e7b65484_args(void);
inline jule::Exceptional<jule::Str> _1e7b657d6_working_dir(void);
inline jule::Exceptional<jule::Str> _1e7b6660b___getwd(void);
inline jule::Slice<jule::U8> _1cd1c7c75_stobs(jule::Str&);
inline jule::Bool _1a8eb4327_is_letter(jule::I32);
inline jule::Bool _1a90069c9_is16(jule::Slice<_1a90048d9_Range16>,jule::U16);
inline jule::Bool _1a9006db4_is32(jule::Slice<_1a9004e7d_Range32>,jule::U32);
inline jule::Bool _1a9007722_is_excluding_latin(jule::Ptr<_1a90054cd_RangeTable>,jule::I32);
inline std::tuple<jule::I32,jule::I64> _1a90ba61a_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _1a90bac7a_decode_last_rune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _1a90bbc04_append_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1a90bc0de_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
inline jule::I64 _1a90bc70a_rune_count_str(jule::Str);
inline jule::Bool _1a90bca18_rune_start(jule::U8);
inline jule::Str _1a902da23_repeat(jule::Str,jule::I64);
inline jule::Bool _1a903dc42__has_prefix(jule::Str&,jule::Str&,jule::I64);
inline jule::Bool _1a904e0b5_has_prefix(jule::Str,jule::Str);
inline jule::Bool _1a90567e8__has_suffix(jule::Str&,jule::Str&,jule::I64);
inline jule::Bool _1a9092823_has_suffix(jule::Str,jule::Str);
inline jule::I64 _1a901e580_find_at(jule::Str,jule::Str,jule::I64);
inline jule::I64 _1a90bd70b_find_last_at(jule::Str,jule::Str,jule::I64);
inline jule::I64 _1a90bd871_find_last(jule::Str,jule::Str);
inline jule::I64 _1a90be08b__find_rune(jule::Slice<jule::U8>&,jule::I32);
inline jule::I64 _1a90be597_find_last_byte(jule::Str,jule::U8);
inline jule::I64 _1a90beb4c_find_any(jule::Str,jule::Str);
inline jule::Slice<jule::Str> _1a90bee27_split(jule::Str,jule::Str,jule::I64);
inline jule::Bool _1a90c008c_contains(jule::Str,jule::Str);
inline jule::Bool _1a90c0a1b_contains_any(jule::Str,jule::Str);
inline jule::Str _1a90c149a_replace(jule::Str,jule::Str,jule::Str,jule::I64);
inline void _1a90c259a__trim_left(jule::Slice<jule::U8>&,jule::Slice<jule::U8>&);
inline jule::Str _1a90c2930_trim_left(jule::Str,jule::Str);
inline void _1a90c2c82__trim_right(jule::Slice<jule::U8>&,jule::Slice<jule::U8>&);
inline jule::Str _1a90c3557_trim(jule::Str,jule::Str);
inline jule::Str _1a90c537d_clean(jule::Str);
inline jule::Str _1a90c59dd_from_slash(jule::Str);
inline jule::Str _1a90c5d40_join(jule::Slice<jule::Str>);
inline jule::Str _1a90c614d_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1a90c645b_abs(jule::Str);
inline jule::Str _1a90c6769_base(jule::Str);
inline jule::Str _1a90c6b10_dir(jule::Str);
inline jule::Str _1a90c6e1d_volume_name(jule::Str);
inline jule::Bool _1a90c7c43_is_path_sep(jule::U8);
inline jule::Bool _1a90c8095_is_abs(jule::Str);
inline jule::I64 _1a90c83a3_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1a90c8705___abs(jule::Str);
inline jule::Str _1a90c8ae0_str_join(jule::Slice<jule::Str>,jule::Str);
inline jule::Str _1a90c8ded___join(jule::Slice<jule::Str>);
inline jule::I64 _1e7acaad1_get_last_fs_error(void);
inline jule::I64 _1a92de7a6_get_last_process_error(void);
inline jule::Slice<char*> _1a92e2b2d_str_slice_to_cstr_slice(jule::Slice<jule::Str>);
inline jule::I64 _1a92e3090_execvp(jule::Str,jule::Slice<jule::Str>);
inline jule::I64 _1a92e3557_execve(jule::Str,jule::Slice<jule::Str>,jule::Slice<jule::Str>);
inline void _1a92e4316_exit(jule::I64);
inline jule::Str _1a92e4547_executable(void);
inline jule::Bool _1a92922d6_is_std_header_path(jule::Str);
inline jule::Bool _1a92925c2_is_valid_header_ext(jule::Str);
inline jule::Bool _1a92928d0_is_valid_cpp_ext(jule::Str);
inline jule::Str _1a92a36b0_logf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1a92a3a12_arg_to_str(jule::Any);
inline jule::I64 _1a92a3d20_find_next_fmt(jule::Str);
inline jule::Str _1a92a424e_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a92a545e_is_top_directive(jule::Str);
inline jule::Bool _1a92a71ca_is_windows(jule::Str);
inline jule::Bool _1a92a752c_is_darwin(jule::Str);
inline jule::Bool _1a92a783a_is_linux(jule::Str);
inline jule::Bool _1a92a7b8c_is_i386(jule::Str);
inline jule::Bool _1a92a7e9a_is_amd64(jule::Str);
inline jule::Bool _1a92a82a8_is_arm64(jule::Str);
inline jule::Bool _1a92a85b6_is_unix(jule::Str);
inline jule::Bool _1a92a895c_is_32bit(jule::Str);
inline jule::Bool _1a92a8c6a_is_64bit(jule::Str);
inline void _1a92d0731_init(void);
inline jule::Bool _1ab005d4a_is_unary_op(jule::Str);
inline jule::Bool _1ab00619c_is_bin_op(jule::Str);
inline jule::Bool _1ab00680c_is_str(jule::Str);
inline jule::Bool _1ab006b1a_is_raw_str(jule::Str);
inline jule::Bool _1ab006e28_is_rune(jule::Str);
inline jule::Bool _1ab0075cc_is_bool(jule::Str);
inline jule::Bool _1ab0078da_is_float(jule::Str);
inline jule::Bool _1ab007be8_is_num(jule::Str);
inline jule::Bool _1ab008314_is_ignore_ident(jule::Str);
inline jule::Bool _1ab008622_is_anon_ident(jule::Str);
inline jule::Bool _1ab008c3d_is_space(jule::I32);
inline jule::Bool _1ab00916c_is_letter(jule::I32);
inline jule::Bool _1ab009788_is_decimal(jule::U8);
inline jule::Bool _1ab009a96_is_binary(jule::U8);
inline jule::Bool _1ab009da4_is_octal(jule::U8);
inline jule::Bool _1ab00a1b2_is_hex(jule::U8);
inline jule::Bool _1ab00a4c0_is_assign(jule::U64);
inline jule::Bool _1ab00a7cd_is_postfix_op(jule::Str);
inline jule::Bool _1ab00aadb_is_assign_op(jule::Str);
inline jule::Ptr<_1ab00b67a_File> _1ab00d01c_new_file_set(jule::Str);
inline _1a92a31c6_Log _1ab00ea46_make_err(jule::I64,jule::I64,jule::Ptr<_1ab00b67a_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1ab00ee75_bytes_has_prefix(jule::Slice<jule::U8>&,jule::Str);
inline jule::Str _1ab010360_float_fmt_e(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1ab01078e_float_fmt_p(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1ab010b79_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1ab011064_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1ab01144e_float_fmt_dotp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1ab0118c2_float_num(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1ab011bd0_common_num(jule::Slice<jule::U8>&);
inline jule::Str _1ab011edd_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _1ab0123c8_is_float_fmt_e(jule::U8,jule::I64);
inline jule::Bool _1ab0127b3_is_float_fmt_p(jule::U8,jule::I64);
inline jule::Bool _1ab012b9d_is_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Bool _1ab013088_is_float_fmt_dotp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Bool _1ab013473_is_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1ab0138a2_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _1ab013bb0_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _1ab01409a_hex_escape(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1ab0143ec_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1ab01473d_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1ab014a3a_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _1ab014d48_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_1a92a31c6_Log> _1ab01a865_lex(jule::Ptr<_1ab00b67a_File>,jule::I64);
inline jule::Bool _1b4b05138_find_module_file(jule::Slice<jule::Ptr<_1e7acc7c5_DirEntry>>&);
inline jule::Str _1b4b06e4d_find_module_file_deep(jule::Str);
inline jule::Slice<_1a92a31c6_Log> _1b4b0826d_check_module_file(jule::Str);
inline jule::Ptr<_1ab5554ba_FileInfo> _1ab55590a_parse_file(jule::Ptr<_1ab00b67a_File>);
inline std::tuple<jule::Ptr<_1aae013a5_Ast>,jule::Slice<_1a92a31c6_Log>> _1ab555cd4_parse_fileset(jule::Ptr<_1ab00b67a_File>);
inline jule::Ptr<_1ab01d615_ScopeTree> _1ab556972_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1ab556bd6_is_st(_1ab005531_Token,_1ab005531_Token);
inline jule::Bool _1ab5570e3_prev_is_incomplete_expr(jule::Slice<_1ab005531_Token>&,jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _1ab557511_next_st_pos(jule::Slice<_1ab005531_Token>&,jule::I64);
inline std::tuple<jule::Slice<_1ab005531_Token>,jule::Bool> _1ab5578eb_skip_st(jule::I64&,jule::Slice<_1ab005531_Token>);
inline jule::Slice<jule::Ptr<_1ab557c92_Stmt>> _1ab55819e_split_stmts(jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ab56c4c1_CallData> _1ab56c89a_get_call_data(jule::Slice<_1ab005531_Token>&);
inline jule::Slice<_1ab005531_Token> _1ab56cbec_get_block_expr(jule::Slice<_1ab005531_Token>&);
inline std::tuple<jule::Slice<_1ab005531_Token>,jule::Slice<_1ab005531_Token>> _1ab56d00a_split_colon(jule::Slice<_1ab005531_Token>&);
inline jule::I64 _1ab56d35c_find_lowest_prec_op(jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1aadb628d_IdentExpr> _1ab56d66a_build_ident_expr(_1ab005531_Token&);
inline std::tuple<jule::Slice<_1ab005531_Token>,jule::I64> _1ab56d978_get_range_expr_tokens(jule::Slice<_1ab005531_Token>&);
inline jule::Bool _1ab57b799_check_assign_tokens(jule::Slice<_1ab005531_Token>&);
inline _1a92a31c6_Log _1ab57d081_make_err(jule::I64,jule::I64,jule::Ptr<_1ab00b67a_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_1ab005531_Token> _1ab57d636_range(jule::I64&,jule::Str,jule::Str,jule::Slice<_1ab005531_Token>&);
inline std::tuple<jule::Slice<_1ab005531_Token>,jule::Slice<_1ab005531_Token>> _1ab57d944_range_last(jule::Slice<_1ab005531_Token>&);
inline std::tuple<jule::Slice<jule::Slice<_1ab005531_Token>>,jule::Slice<_1a92a31c6_Log>> _1ab57de50_parts(jule::Slice<_1ab005531_Token>&,jule::U64,jule::Bool);
inline jule::Str _1ab57e2a2_get_close_kind_of_brace(jule::Str);
inline _1a92a31c6_Log _1ab57e758_compiler_err(_1ab005531_Token&,jule::Str&,jule::Slice<jule::Any>);
inline void _1ab57eb87_push_suggestion(_1a92a31c6_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1ab58002d_tokstoa(jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab593d66_build_void_type(void);
inline jule::Ptr<_1aae075dc_TypeDecl> _1ab5940b9_build_prim_type(_1ab005531_Token);
inline std::tuple<jule::Slice<_1ab005531_Token>,jule::I64> _1ab5944a4_split_map_range(jule::Slice<_1ab005531_Token>&,jule::I64&);
inline jule::I64 _1ad2272ab_leading_zeros64(jule::U64);
inline jule::I64 _1ad227d4a_trailing_zeros(jule::U64);
inline jule::I64 _1ad22880c_trailing_zeros32(jule::U32);
inline jule::I64 _1ad228b1a_trailing_zeros64(jule::U64);
inline jule::I64 _1ad22e835_len32(jule::U32);
inline jule::I64 _1ad22eb43_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1ad230a89_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::U64,jule::U64> _1ad232690_mul64(jule::U64,jule::U64);
inline jule::U32 _1ad159056_f32_bits(jule::F32);
inline jule::F32 _1ad159298_f32_from_bits(jule::U32);
inline jule::U64 _1ad1595a6_f64_bits(jule::F64);
inline jule::F64 _1ad159908_f64_from_bits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1ad15bba2_frexp(jule::F64);
inline jule::F64 _1ad170de7_nan(void);
inline jule::Bool _1ad175418_is_nan(jule::F64);
inline jule::F64 _1ad17aa6c_inf(jule::I64);
inline jule::Bool _1ad17c244_is_inf(jule::F64,jule::I64);
inline std::tuple<jule::F64,jule::I64> _1ad17eb2b_normalize(jule::F64);
inline jule::F64 _1ad1a97c1_log(jule::F64);
inline jule::F64 _1ad235a28_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1ad2375eb_modf(jule::F64);
inline jule::F64 _1ad237a80_log2(jule::F64);
inline jule::Str _1acac8a5e_fmt_float(jule::F64,jule::U8,jule::I64,jule::I64);
inline jule::Slice<jule::U8> _1acaecd2a_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::I64,jule::I64);
inline jule::Slice<jule::U8> _1acb4bc9c_big_ftoa(jule::Slice<jule::U8>,jule::I64,jule::U8,jule::Bool,jule::U64,jule::I64,_1acee76b9_FloatInfo&);
inline jule::Slice<jule::U8> _1acc84ab6_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_1aca822a9_DecimalSlice,jule::I64,jule::U8);
inline void _1accc650e_round_shortest(_1ad2569a0_Decimal&,jule::U64,jule::I64,_1acee76b9_FloatInfo&);
inline jule::Slice<jule::U8> _1ace60346_fmt_e(jule::Slice<jule::U8>,jule::Bool,_1aca822a9_DecimalSlice,jule::I64,jule::U8);
inline jule::Slice<jule::U8> _1acaed138_fmt_f(jule::Slice<jule::U8>,jule::Bool,_1aca822a9_DecimalSlice,jule::I64);
inline jule::Slice<jule::U8> _1ad04b7a6_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::I64,_1acee76b9_FloatInfo&);
inline jule::Slice<jule::U8> _1acb3988e_fmt_x(jule::Slice<jule::U8>,jule::I64,jule::U8,jule::Bool,jule::U64,jule::I64,_1acee76b9_FloatInfo&);
inline jule::I64 _1acc6bb14_min(jule::I64,jule::I64);
inline jule::I64 _1acc71454_max(jule::I64,jule::I64);
inline jule::U8 _1acde8433_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1ace4b695___parse_uint(jule::Str,jule::I64,jule::I64);
inline jule::Exceptional<jule::U64> _1aceeeaab_parse_uint(jule::Str,jule::I64,jule::I64);
inline jule::Exceptional<jule::I64> _1ad0739ed_parse_int(jule::Str,jule::I64,jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1acb4d133_eisel_lemire64(jule::U64,jule::I64,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1acb51554_eisel_lemire32(jule::U64,jule::I64,jule::Bool);
inline jule::I64 _1acaa7e17_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1acba5d8e_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1ad145a15_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1ace1486c_atof64exact(jule::U64,jule::I64,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1acc012b3_atof32exact(jule::U64,jule::I64,jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1acaa9ec4_atof_hex(jule::Str,_1acee76b9_FloatInfo&,jule::U64,jule::I64,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1acb3cc49_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1acb8b87a_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1acde7762_parse_float_prefix(jule::Str,jule::I64);
inline jule::Exceptional<jule::F64> _1ace68041_parse_float(jule::Str,jule::I64);
inline void _1ad0a0e9d_ryu_ftoa_fixed32(_1aca822a9_DecimalSlice&,jule::U32,jule::I64,jule::I64);
inline void _1ad138a4c_ryu_ftoa_fixed64(_1aca822a9_DecimalSlice&,jule::U64,jule::I64,jule::I64);
inline void _1ad01c9b9_format_decimal(_1aca822a9_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::I64);
inline void _1accb4e15_ryu_ftoa_shortest(_1aca822a9_DecimalSlice&,jule::U64,jule::I64,_1acee76b9_FloatInfo&);
inline jule::I64 _1accb6048_mul_by_log2_log10(jule::I64);
inline jule::I64 _1ad123927_mul_by_log10_log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1accc7686_compute_bounds(jule::U64,jule::I64,_1acee76b9_FloatInfo&);
inline void _1aceb7777_ryu_digits(_1aca822a9_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _1aca7cbde_ryu_digits32(_1aca822a9_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1aca7cd54_mult64bit_pow10(jule::U32,jule::I64,jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1aca63983_mult128bit_pow10(jule::U64,jule::I64,jule::I64);
inline jule::Bool _1aca63ae8_divisible_by_pow5(jule::U64,jule::I64);
inline std::tuple<jule::U32,jule::U32> _1acb141a4_divmod1e9(jule::U64);
inline void _1ad2576b5_trim(_1ad2569a0_Decimal&);
inline void _1ad25782a_right_shift(_1ad2569a0_Decimal&,jule::U64);
inline jule::Bool _1ad257990_prefix_is_less_than(jule::Array<jule::U8,800>,jule::I64,jule::Str);
inline void _1ad257b05_left_shift(_1ad2569a0_Decimal&,jule::U64);
inline jule::Bool _1ad257c6a_should_round_up(_1ad2569a0_Decimal&,jule::I64);
inline jule::Str _1ad258089_fmt_uint(jule::U64,jule::I64);
inline jule::Str _1ad2581ee_fmt_int(jule::I64,jule::I64);
inline jule::Str _1ad258364_itoa(jule::I64);
inline jule::Str _1ad2584c9_small(jule::I64);
inline jule::Bool _1ad25863e_is_power_of_two(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1ad2587a4_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::I64,jule::Bool,jule::Bool);
inline void _1ad2cb6c3_lshift_unsig(_1ad2c1d8e_Const&,_1ad2c1d8e_Const&);
inline void _1ad2cba69_rshift_unsig(_1ad2c1d8e_Const&,_1ad2c1d8e_Const&);
inline jule::Str _1ad348267_real_kind_of(jule::Str);
inline jule::I64 _1ad34850e_bitsize_of(jule::Str);
inline jule::Str _1ad34883e_int_from_bits(jule::I64);
inline jule::Str _1ad348b4c_uint_from_bits(jule::I64);
inline jule::Str _1ad348e5a_float_from_bits(jule::I64);
inline jule::Bool _1ad349ba3_check_bit_float(jule::Str,jule::I64);
inline jule::I64 _1ad349eb1_bitsize_of_float(jule::F64);
inline jule::I64 _1ad34a2be_bitsize_of_int(jule::I64);
inline jule::I64 _1ad34a5cc_bitsize_of_uint(jule::U64);
inline void _1ad34a775_update_target(void);
inline void _1ad34a91d_init(void);
inline jule::F64 _1ad34d239_min(jule::Str);
inline jule::F64 _1ad34d58b_max(jule::Str);
inline jule::Bool _1ad34da64_is_i8_compatible(jule::Str);
inline jule::Bool _1ad34ddb6_is_i16_compatible(jule::Str);
inline jule::Bool _1ad34e1c4_is_i32_compatible(jule::Str);
inline jule::Bool _1ad34e526_is_i64_compatible(jule::Str);
inline jule::Bool _1ad34e834_is_u8_compatible(jule::Str);
inline jule::Bool _1ad34eb42_is_u16_compatible(jule::Str);
inline jule::Bool _1ad34ee50_is_u32_compatible(jule::Str);
inline jule::Bool _1ad3502e6_is_u64_compatible(jule::Str);
inline jule::Bool _1ad350604_is_f32_compatible(jule::Str);
inline jule::Bool _1ad350912_is_f64_compatible(jule::Str);
inline jule::Bool _1ad350cec_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _1ad35110a_is_i16_greater(jule::Str);
inline jule::Bool _1ad351418_is_i32_greater(jule::Str);
inline jule::Bool _1ad351726_is_i64_greater(jule::Str);
inline jule::Bool _1ad351a34_is_u16_greater(jule::Str);
inline jule::Bool _1ad351e63_is_u32_greater(jule::Str);
inline jule::Bool _1ad352271_is_u64_greater(jule::Str);
inline jule::Bool _1ad35257e_is_f32_greater(jule::Str);
inline jule::Bool _1ad35288c_is_f64_greater(jule::Str);
inline jule::Bool _1ad352c77_is_greater(jule::Str,jule::Str);
inline jule::Bool _1ad3542a6_is_sig_int(jule::Str);
inline jule::Bool _1ad354608_is_unsig_int(jule::Str);
inline jule::Bool _1ad354916_is_int(jule::Str);
inline jule::Bool _1ad354c68_is_float(jule::Str);
inline jule::Bool _1ad355076_is_num(jule::Str);
inline jule::Bool _1ad3a887c_is_ascii(jule::I32);
inline jule::I32 _1ad3a8d66_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1ad3cbbd0_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1ad3cc032_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1ad3cc340_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1ad3cc72a_rune_from_esq_seq(jule::Slice<jule::U8>,jule::I64&);
inline jule::Slice<jule::U8> _1ad3ccb15_str_esq_seq(jule::Slice<jule::U8>,jule::I64&);
inline jule::I64 _1ad4a7be0_find_format_prefix(jule::Slice<jule::U8>&,jule::I64&);
inline jule::Slice<jule::U8> _1ad486c68_get_format_range(jule::I64&,jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1ad49344a_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _1ad4852b6_apply_fmt_by_default(jule::I64&,jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1ad49c2ab_apply_fmt(jule::Slice<jule::U8>&,jule::I64&,jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1ad4901e4_format_bytes(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1ad4a15e0_format(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1ac67c15c_kind_uses_generics(jule::Ptr<_1ad429931_TypeKind>,jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>&);
inline jule::Bool _1ac67c5d0_parameter_uses_generics(jule::Ptr<_1ac674bd2_Param>&,jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>&);
inline jule::Ptr<_1ad42e293_TypeSymbol> _1ac680924_build_type(jule::Ptr<_1aae075dc_TypeDecl>);
inline jule::Ptr<_1ad3e7c84_Value> _1ac680c76_build_expr(jule::Ptr<_1aadb528c_Expr>);
inline jule::Ptr<_1ad428996_TypeAlias> _1ac681084_build_type_alias(jule::Ptr<_1ab02262a_TypeAliasDecl>);
inline jule::Ptr<_1ac65ca77_Field> _1ac6813d6_build_field(jule::Ptr<_1ab024d36_FieldDecl>);
inline jule::Slice<jule::Ptr<_1ac65ca77_Field>> _1ac6816e4_build_fields(jule::Slice<jule::Ptr<_1ab024d36_FieldDecl>>&);
inline jule::Ptr<_1ac661075_Struct> _1ac681a02_build_struct(jule::Ptr<_1ab02561c_StructDecl>);
inline jule::Ptr<_1ac674bd2_Param> _1ac681d10_build_param(jule::Ptr<_1ab01d835_ParamDecl>);
inline jule::Slice<jule::Ptr<_1ac674bd2_Param>> _1ac6821a6_build_params(jule::Slice<jule::Ptr<_1ab01d835_ParamDecl>>&);
inline jule::Ptr<_1ac674385_RetType> _1ac6824b4_build_ret_type(jule::Ptr<_1aadb506c_RetTypeDecl>);
inline jule::Ptr<_1ac676a08_Fn> _1ac6827c2_build_fn(jule::Ptr<_1ab01da55_FnDecl>);
inline jule::Slice<jule::Ptr<_1ac676a08_Fn>> _1ac682ad0_build_methods(jule::Slice<jule::Ptr<_1ab01da55_FnDecl>>&);
inline jule::Ptr<_1ac85d096_Trait> _1ac682ddd_build_trait(jule::Ptr<_1ab025b6c_TraitDecl>);
inline jule::Ptr<_1ac692a57_EnumItem> _1ac6831eb_build_enum_item(jule::Ptr<_1ab023bd1_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1ac692a57_EnumItem>> _1ac683509_build_enum_items(jule::Slice<jule::Ptr<_1ab023bd1_EnumItemDecl>>&);
inline jule::Ptr<_1ac724545_Enum> _1ac683817_build_enum(jule::Ptr<_1ab0245c7_EnumDecl>);
inline jule::Ptr<_1ad39e037_Var> _1ac683c46_build_var(jule::Ptr<_1ab01e6d2_VarDecl>);
inline jule::Slice<jule::Ptr<_1ad39e037_Var>> _1ac684054_build_vars(jule::Slice<jule::Ptr<_1ab01e6d2_VarDecl>>);
inline jule::Ptr<_1ac76d3b3_Impl> _1ac684362_build_impl(jule::Ptr<_1ab0261bc_Impl>);
inline jule::Ptr<_1ad35872d_ScopeChecker> _1ad33057e_new_scope_checker_base(jule::Ptr<_1ad37cd5c_Sema>&,jule::Ptr<_1ac67a501_FnIns>);
inline jule::Ptr<_1ad35872d_ScopeChecker> _1ad30a449_new_scope_checker(jule::Ptr<_1ad37cd5c_Sema>&,jule::Ptr<_1ac67a501_FnIns>);
inline jule::Ptr<_1ad3582dd_ScopeLabel> _1ad2e8613_find_label_parent(jule::Str,jule::Ptr<_1ad35872d_ScopeChecker>);
inline jule::Bool _1ad315355_stmt_is_goto_scope(jule::Any&,jule::Ptr<_1ad33ce0a_Scope>&);
inline jule::I64 _1ad33d845_count_match_type(jule::Ptr<_1ad35772c_Match>&,jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Slice<jule::Ptr<_1ad3e6975_Data>> _1ad316499_get_datas_from_tuple_data(jule::Ptr<_1ad3e6975_Data>&);
inline jule::Slice<jule::Any> _1ad319ec5_get_expr_models(jule::Any&);
inline jule::Bool _1ad31aaa8_check_mut(jule::Ptr<_1ad37cd5c_Sema>&,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ad3e6975_Data>,_1ab005531_Token);
inline jule::Bool _1ad31bbdb_check_assign(jule::Ptr<_1ad37cd5c_Sema>&,jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ad3e6975_Data>,_1ab005531_Token);
inline jule::Bool _1ad31ed21_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _1ad320904_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _1ad3214d7_st_is_def(jule::Any&);
inline jule::Ptr<_1ad39e037_Var> _1ad37103c_find_var_in_package(jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1ad428996_TypeAlias> _1ad37158c_find_type_alias_in_package(jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1ac661075_Struct> _1ad371a43_find_struct_in_package(jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1ac676a08_Fn> _1ad37204e_find_fn_in_package(jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1ac85d096_Trait> _1ad372439_find_trait_in_package(jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>&,jule::Str);
inline jule::Ptr<_1ac724545_Enum> _1ad372824_find_enum_in_package(jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>&,jule::Str);
inline jule::Bool _1ad3795d9_is_std_package(jule::Str,jule::Str);
inline jule::Bool _1ad37aa2a_is_valid_model_for_ref(jule::Any&);
inline _1a92a31c6_Log _1ad37b07a_compiler_err(_1ab005531_Token&,jule::Bool,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1ad37b465_imp_is_lookupable(jule::Ptr<_1ad3736b0_ImportInfo>&,jule::Str);
inline jule::Slice<jule::Ptr<_1ad39e037_Var>> _1ad37b7b7_build_ret_vars(jule::Ptr<_1ac67a501_FnIns>&);
inline jule::Slice<jule::Ptr<_1ad39e037_Var>> _1ad37bac5_build_param_vars(jule::Ptr<_1ac67a501_FnIns>&);
inline jule::Slice<jule::Ptr<_1ad428996_TypeAlias>> _1ad37be27_build_generic_type_aliases(jule::Ptr<_1ac67a501_FnIns>&);
inline jule::Ptr<_1ad3e062d_SymbolTable> _1ad37c301_find_file(jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>&,jule::Ptr<_1ab00b67a_File>&);
inline void _1ad37c7b8_push_suggestion(_1a92a31c6_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1ad429931_TypeKind>> _1ad3a9350_get_result_types(jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Bool _1ad3aa52c_trait_has_reference_receiver(jule::Ptr<_1ac85d096_Trait>&);
inline jule::Bool _1ad3b028a_float_assignable(jule::Str,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Bool _1ad3bcbe3_sig_assignable(jule::Str,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Bool _1ad3ccd9b_unsig_assignable(jule::Str,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Bool _1ad3cd220_int_assignable(jule::Str,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1aaeaeb7d_Directive> _1ad4232ba_find_directive(jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>&,jule::Str);
inline jule::Any _1ad4236e9_find_builtins_import(jule::Str,jule::Ptr<_1ad3736b0_ImportInfo>);
inline void _1ad42396e_fit_bitsize(jule::Ptr<_1ad3e6975_Data>&);
inline void _1ad423d15_make_struct_lit_alloc(jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ac667a4e_StructLitExprModel>&);
inline jule::Ptr<_1ad39e037_Var> _1ad424200_build_error_var(jule::Ptr<_1ad33ce0a_Scope>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&);
inline jule::Any _1ad4245da_find_builtins_sema(jule::Str,jule::Ptr<_1ad37cd5c_Sema>);
inline jule::Bool _1ad4248e8_is_ok_for_shifting(jule::Ptr<_1ad3e6975_Data>&);
inline jule::Bool _1ad424c8e_is_instanced_struct(jule::Ptr<_1ac664551_StructIns>);
inline jule::Bool _1ad425113_is_ptr_arithmetic_compatible_int(jule::Ptr<_1ad3e6975_Data>&);
inline void _1ad425355_apply_cast_kind_model(jule::Ptr<_1ad3e6975_Data>&);
inline void _1ad4255ca_apply_cast_kind(jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad42580b_build_void_data(void);
inline jule::Str _1ad425b5d_check_data_for_integer_indexing(jule::Ptr<_1ad3e6975_Data>&);
inline void _1ad425ee3_apply_cast_model_by_enum(jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ac724545_Enum>);
inline void _1ad426334_cast_const_by_type(jule::Str&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Bool _1ad427cb4_has_directive(jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>&,jule::Str);
inline jule::Bool _1ad438995_can_get_ptr(jule::Ptr<_1ad3e6975_Data>&);
inline jule::Bool _1ad438ca3_is_valid_for_sptr_type(jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Bool _1ad439105_is_valid_for_ref(jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Bool _1ad439457_is_builtin_str_convertable(jule::Ptr<_1ad429931_TypeKind>&);
inline jule::Str _1ad439798_build_link_path_by_tokens(jule::Slice<_1ab005531_Token>&);
inline jule::Ptr<_1ad42ec99_Prim> _1ad439a95_build_prim_type(jule::Str);
inline jule::Ptr<_1ac661075_Struct> _1ad439e3b_get_struct_from_kind(jule::Ptr<_1ad429931_TypeKind>);
inline jule::Bool _1ad43a249_is_prim(jule::Str);
inline void _1ad444a5b_apply_implicit_cast(jule::Ptr<_1ad429931_TypeKind>&,jule::Ptr<_1ad3e6975_Data>&);
inline std::tuple<jule::Ptr<_1ad3e062d_SymbolTable>,jule::Slice<_1a92a31c6_Log>> _1ad4480e2_build_symbols(jule::Ptr<_1aae013a5_Ast>&,jule::Trait<_1ad370aca_Importer>&,jule::Ptr<_1ac684a05_SymbolBuilder>);
inline std::tuple<jule::Ptr<_1ad376b8b_Package>,jule::Slice<_1a92a31c6_Log>> _1ad4485ed___analyze_package(jule::Slice<jule::Ptr<_1aae013a5_Ast>>&,jule::Trait<_1ad370aca_Importer>&,jule::I64&);
inline std::tuple<jule::Ptr<_1ad376b8b_Package>,jule::Slice<_1a92a31c6_Log>> _1ad448ab5_analyze_package(jule::Slice<jule::Ptr<_1aae013a5_Ast>>,jule::Trait<_1ad370aca_Importer>,jule::I64);
inline jule::Ptr<_1ac67a501_FnIns> _1ad44d515_find_builtin_fn(jule::Str);
inline jule::Ptr<_1ad428996_TypeAlias> _1ad4760a9_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_1ac85d096_Trait> _1ad4a1755_find_builtin_trait(jule::Str);
inline jule::Any _1ad45124e_find_builtin_def(jule::Str);
inline jule::Any _1ad452063_find_builtin_def_std_debug(jule::Str);
inline jule::Any _1ad452d77_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1ad455352_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1ad474a58_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ptr<_1ad3e6975_Data> _1ad479871_builtin_caller_common_plain(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad44c39e_builtin_caller_common(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad44a29d_builtin_caller_common_mut(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad44a413_builtin_caller_error(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad4904be_builtin_caller_out(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad490634_builtin_caller_outln(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad449de6_builtin_caller_new(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad44a05b_builtin_caller_panic(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad491536_builtin_caller_make(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad49169b_builtin_caller_append(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad491811_builtin_caller_copy(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad491976_builtin_caller_clone(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad4b3ab9_builtin_caller_assert(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad4b40c5_builtin_caller_std_mem_size_of(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad4b45c0_builtin_caller_std_mem_align_of(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad4b4aba_builtin_caller_std_mem_free(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad4b50d7_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad4b55d2_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad4b5aaa_builtin_caller_std_debug_out(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline jule::Ptr<_1ad3e6975_Data> _1ad4b60a5_builtin_caller_std_debug_outln(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1b4ae4831_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1b4ae4a1d_check_arch(jule::Str);
inline jule::Bool _1b4ae4c3d_is_pass_file_annotation(jule::Str);
inline void _1b4ae6228_set_os_vars(jule::Slice<jule::Str>&);
inline void _1b4ae64e2_set_arch_vars(jule::Slice<jule::Str>&);
inline void _1b4ae6844_init_vars(jule::Slice<jule::Str>&,_1b4ae5da4_CompileInfo&);
inline jule::Slice<jule::U8> _1e6bda1ca_read_buff(jule::Str);
inline _1a92a31c6_Log _1e6bdb286_flat_compiler_err(jule::Str);
inline void _1abb953ce_push_passes(jule::Ptr<_1ad376b8b_Package>&,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1abba8843_get_all_unique_passes(jule::Ptr<_1ad376b8b_Package>&,jule::Slice<jule::Ptr<_1ad3736b0_ImportInfo>>);
inline _1b4ae5da4_CompileInfo _1abbaa12a_build_compile_info(void);
inline jule::Ptr<_1aaeaeb7d_Directive> _1abc7d9e5_find_directive(jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>&,jule::Str);
inline jule::Bool _1abc8ba7a_has_directive(jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>&,jule::Str);
inline jule::Bool _1abc9e4c7_is_exist(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _1abcb9987_is_dead(jule::Any);
inline void _1abd100e8_drop_ref(jule::Slice<jule::Any>&,jule::I64);
inline jule::Bool _1abd36c13_is_all_references_are_dead(jule::Ptr<_1ac67de2d_ReferenceStack>);
inline jule::Bool _1abd72db4_is_fn_dead(jule::Ptr<_1ac67a501_FnIns>);
inline jule::Bool _1abd822ad_is_var_dead(jule::Ptr<_1ad39e037_Var>);
inline jule::Bool _1abdb16a5_is_struct_dead(jule::Ptr<_1ac664551_StructIns>);
inline jule::Bool _1abdc2430_is_trait_dead(jule::Ptr<_1ac85d096_Trait>);
inline void _1abe35c9b_eliminate_dead_functions(jule::Slice<jule::Ptr<_1ac676a08_Fn>>&);
inline void _1abe3a168_eliminate_dead_globals(jule::Ptr<_1ad376b8b_Package>&);
inline void _1abe3cbc6_eliminate_dead_functions_package(jule::Ptr<_1ad376b8b_Package>&);
inline void _1abeaa01d_keep_alive_init(jule::Ptr<_1ad376b8b_Package>&);
inline void _1abeb4e07_eliminate_package(jule::Ptr<_1ad376b8b_Package>&);
inline void _1abebc195_eliminate_defines(jule::Ptr<_1e6be526d_IR>&);
inline void _1abe47890_eliminate_dead_code_of_scope(jule::Ptr<_1ad33ce0a_Scope>);
inline void _1abdbdb79_eliminate_scope_functions(jule::Slice<jule::Ptr<_1ac676a08_Fn>>&);
inline void _1abdb0e46_eliminate_functions_scope_package(jule::Ptr<_1ad376b8b_Package>&);
inline void _1abdb14eb_eliminate_scope_package(jule::Ptr<_1ad376b8b_Package>&);
inline void _1ac025462_eliminate_scopes(jule::Ptr<_1e6be526d_IR>&);
inline void _1ac0abe55_throw(jule::Str);
inline jule::Bool _1ada71264_is_std_package(jule::Str,jule::Str);
inline jule::Bool _1ada7162c_is_constant_valid_conditional_case(jule::Ptr<_1ad35596c_If>&);
inline jule::Bool _1ada71907_is_unreachable_expr(jule::Any&);
inline jule::Bool _1ada71c9d_is_constant_valid_match_case(jule::Ptr<_1ad357b7d_Case>&);
inline jule::Bool _1ada720de_is_unreachable_conditional_case(jule::Ptr<_1ad35596c_If>&);
inline jule::Bool _1ada72430_is_unreachable_match_case(jule::Ptr<_1ad357b7d_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1ada7acb8_check_for_bit_shift_opt(jule::Ptr<_1ac666663_OperandExprModel>&,jule::Ptr<_1ac666663_OperandExprModel>&);
inline jule::U64 _1adae50a7_unix(void);
inline jule::U64 _1adae5492_unix_year_to_seconds(jule::U64,jule::Bool&);
inline jule::U64 _1adae58c1_unix_month_to_seconds(jule::U64,jule::Bool);
inline jule::Bool _1ada22b72_is_copy_optimizable(jule::Ptr<_1ad3e6975_Data>&);
inline jule::Bool _1ada24cea_is_iter_copy_optimizable(jule::Ptr<_1ad3e6975_Data>&,jule::Ptr<_1ad39e037_Var>&);
inline jule::Str _1ada8815a_concat_all_parts(jule::Slice<_1ab005531_Token>);
inline jule::Str _1ada884ac_decompose_common_esq(jule::U8);
inline jule::Str _1ada887ba_sbtoa(jule::U8);
inline jule::Str _1ada88b1c_cstr_bytes(jule::Slice<jule::U8>);
inline jule::Str _1ada88e2a_cstr_lit(jule::Slice<jule::U8>);
inline jule::Str _1ada89315_ftoa(jule::F64,jule::I64);
inline jule::Str _1ada89623_itoa(jule::I64);
inline jule::Str _1ada899b9_utoa(jule::U64);
inline jule::Bool _1ada89cc7_is_forwarded(jule::Ptr<_1ad33ce0a_Scope>&);
inline jule::Bool _1ada8a129_is_builtin_call_has_debuginf(jule::Ptr<_1ac66904a_FnCallExprModel>&);
inline jule::Bool _1adaee204_is_cpp_header_file(jule::Str);
inline jule::Ptr<_1aaeaeb7d_Directive> _1adb0015b_find_directive(jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>&,jule::Str);
inline jule::Bool _1adb0059b_has_directive(jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>&,jule::Str);
inline void _1a925dc64_print_error_message(jule::Str);
inline void _1a927b006_help(jule::Slice<jule::Str>&);
inline void _1a92880ac_version(jule::Slice<jule::Str>&);
inline void _1a926e9bc_tool_distos(void);
inline void _1a9273ebb_tool_distarch(void);
inline void _1a927d558_tool(jule::Slice<jule::Str>&);
inline void _1a9285c14_julenv(jule::Slice<jule::Str>&);
inline void _1a928124d_mod(jule::Slice<jule::Str>&);
inline jule::Bool _1a9281d31_process_command(jule::Slice<jule::Str>&);
inline void _1a9282914_show_info(void);
void entry_point(void);
inline void _1adb454e2_init(void);
inline void _1abaa5762_write_output(jule::Str,jule::Str);
inline void _1adb36813_clear_objects(void);
inline void _1adb4a8d2_compile_ir(jule::Str,jule::Str);
inline void _1adb4aa47_do_spell(jule::Str,jule::Str,jule::Str);
inline jule::Bool _1adb4abac_is_cpp_source_file(jule::Str);
inline void _1adb4ad22_push_comp_cmd_clang(jule::Str&);
inline void _1adb4ae87_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1adb4b0ec_gen_compile_cmd(jule::Str,jule::Ptr<_1e6be526d_IR>&);
inline jule::Str _1adb4b262_get_compile_path(void);
inline void _1adb4b3c7_apply_target_independent_optimizations(jule::Ptr<_1e6be526d_IR>&);
inline void _1adb4b53c_check_compiler_flag(void);
inline void _1adb4b6a2_check_target_arch(jule::Str);
inline void _1adb4b817_check_target_os(jule::Str);
inline void _1adb4b97c_check_target_flag(jule::Str&);
inline void _1adb4bd23_check_opt_flag(jule::Str&);
inline void _1adb4be88_check_cpp_std_flag(void);
inline jule::Slice<jule::Str> _1adb4c0ed_check_flags(jule::Slice<jule::Str>&);
inline void _1adb4c263_setup_sema_flags(jule::I64&);
inline jule::Ptr<_1e6be526d_IR> _1adb4c3c8_build_ir(jule::Slice<jule::Str>&);
inline void _1adb4c53d_compile_command(jule::Slice<jule::Str>&);


struct _1ad4acc28_ReaderMptrData {
	jule::Exceptional<jule::I64>(*_1ad4acaa2_read)(jule::Trait<_1ad4acc28_Reader>,jule::Slice<jule::U8>);
};

struct _1ad4ad234_WriterMptrData {
	jule::Exceptional<jule::I64>(*_1ad4ad0ad_write)(jule::Trait<_1ad4ad234_Writer>,jule::Slice<jule::U8>);
};

struct _1ad4ad94e_WriterCloserMptrData {
	jule::Exceptional<jule::I64>(*_1ad4ad586_write)(jule::Trait<_1ad4ad94e_WriterCloser>,jule::Slice<jule::U8>);
	jule::VoidExceptional(*_1ad4ad7c8_close)(jule::Trait<_1ad4ad94e_WriterCloser>);
};

struct _1ad4ae323_StreamMptrData {
	jule::Exceptional<jule::I64>(*_1ad4adce5_read)(jule::Trait<_1ad4ae323_Stream>,jule::Slice<jule::U8>);
	jule::Exceptional<jule::I64>(*_1ad4ae19c_write)(jule::Trait<_1ad4ae323_Stream>,jule::Slice<jule::U8>);
};

struct _1ad370aca_ImporterMptrData {
	void(*_1ad36e6ab_set_mod_path)(jule::Trait<_1ad370aca_Importer>,jule::Str);
	jule::Str(*_1ad36e942_get_mod_path)(jule::Trait<_1ad370aca_Importer>);
	jule::Str(*_1ad36ece9_mod_by_id)(jule::Trait<_1ad370aca_Importer>,jule::I64);
	jule::Ptr<_1ad3736b0_ImportInfo>(*_1ad3701a1_get_import)(jule::Trait<_1ad370aca_Importer>,jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1aae013a5_Ast>>,jule::Slice<_1a92a31c6_Log>>(*_1ad370635_import_package)(jule::Trait<_1ad370aca_Importer>,jule::Str,jule::Bool);
	void(*_1ad370954_imported)(jule::Trait<_1ad370aca_Importer>,jule::Ptr<_1ad3736b0_ImportInfo>);
};

struct _1ad4293e2_KindMptrData {
	jule::Str(*_1ad428db4_to_str)(jule::Trait<_1ad4293e2_Kind>);
	jule::Bool(*_1ad42926b_equals)(jule::Trait<_1ad4293e2_Kind>,jule::Ptr<_1ad429931_TypeKind>);
};

struct _1ad447256_LookupMptrData {
	jule::Ptr<_1ad3736b0_ImportInfo>(*_1ad445188_find_package)(jule::Trait<_1ad447256_Lookup>,jule::Str);
	jule::Ptr<_1ad3736b0_ImportInfo>(*_1ad445540_select_package)(jule::Trait<_1ad447256_Lookup>,jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)>);
	jule::Ptr<_1ad39e037_Var>(*_1ad4459c4_find_var)(jule::Trait<_1ad447256_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_1ad428996_TypeAlias>(*_1ad445e58_find_type_alias)(jule::Trait<_1ad447256_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_1ac661075_Struct>(*_1ad4463dc_find_struct)(jule::Trait<_1ad447256_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_1ac676a08_Fn>(*_1ad446871_find_fn)(jule::Trait<_1ad447256_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_1ac85d096_Trait>(*_1ad446c28_find_trait)(jule::Trait<_1ad447256_Lookup>,jule::Str);
	jule::Ptr<_1ac724545_Enum>(*_1ad4470d0_find_enum)(jule::Trait<_1ad447256_Lookup>,jule::Str);
};

struct _1adb3d8d6_CommonFlagMptrData {
	jule::Str(*_1adb3d232_name)(jule::Trait<_1adb3d8d6_CommonFlag>);
	jule::I32(*_1adb3d397_short)(jule::Trait<_1adb3d8d6_CommonFlag>);
	jule::Str(*_1adb3d584_what)(jule::Trait<_1adb3d8d6_CommonFlag>);
	void(*_1adb3d771_reset)(jule::Trait<_1adb3d8d6_CommonFlag>);
};



inline jule::Exceptional<jule::I64> _1ad4acaa2_read_0(jule::Trait<_1ad4acc28_Reader> _self_,jule::Slice<jule::U8> _731_buff) {
	return _1ad4abc38_read(_self_.safe_ptr<_1ad4ab7a4_FileStream>(), _731_buff);
}
inline jule::Exceptional<jule::I64> _1ad4acaa2_read_1(jule::Trait<_1ad4acc28_Reader> _self_,jule::Slice<jule::U8> _731_buff) {
	return _1ad4aee28_read(_self_.safe_ptr<_1ad4ae6db_ByteStream>(), _731_buff);
}
inline jule::Exceptional<jule::I64> _1ad4ad0ad_write_0(jule::Trait<_1ad4ad234_Writer> _self_,jule::Slice<jule::U8> _1228_buff) {
	return _1ad4ac035_write(_self_.safe_ptr<_1ad4ab7a4_FileStream>(), _1228_buff);
}
inline jule::Exceptional<jule::I64> _1ad4ad0ad_write_1(jule::Trait<_1ad4ad234_Writer> _self_,jule::Slice<jule::U8> _1228_buff) {
	return _1ad4b02d0_write(_self_.safe_ptr<_1ad4ae6db_ByteStream>(), _1228_buff);
}
inline jule::Exceptional<jule::I64> _1ad4adce5_read_0(jule::Trait<_1ad4ae323_Stream> _self_,jule::Slice<jule::U8> _2331_buff) {
	return _1ad4abc38_read(_self_.safe_ptr<_1ad4ab7a4_FileStream>(), _2331_buff);
}
inline jule::Exceptional<jule::I64> _1ad4ae19c_write_0(jule::Trait<_1ad4ae323_Stream> _self_,jule::Slice<jule::U8> _2428_buff) {
	return _1ad4ac035_write(_self_.safe_ptr<_1ad4ab7a4_FileStream>(), _2428_buff);
}
inline jule::Exceptional<jule::I64> _1ad4adce5_read_1(jule::Trait<_1ad4ae323_Stream> _self_,jule::Slice<jule::U8> _2331_buff) {
	return _1ad4aee28_read(_self_.safe_ptr<_1ad4ae6db_ByteStream>(), _2331_buff);
}
inline jule::Exceptional<jule::I64> _1ad4ae19c_write_1(jule::Trait<_1ad4ae323_Stream> _self_,jule::Slice<jule::U8> _2428_buff) {
	return _1ad4b02d0_write(_self_.safe_ptr<_1ad4ae6db_ByteStream>(), _2428_buff);
}
inline void _1ad36e6ab_set_mod_path_0(jule::Trait<_1ad370aca_Importer> _self_,jule::Str _1735_path) {
	_1e6be611a_set_mod_path(_self_.safe_ptr<_1e6bde1ac_JuleImporter>(), _1735_path);
}
inline jule::Str _1ad36e942_get_mod_path_0(jule::Trait<_1ad370aca_Importer> _self_) {
	return _1e6c01961_get_mod_path(_self_.safe_ptr<_1e6bde1ac_JuleImporter>());
}
inline jule::Str _1ad36ece9_mod_by_id_0(jule::Trait<_1ad370aca_Importer> _self_,jule::I64 _2328_id) {
	return _1e6c07d74_mod_by_id(_self_.safe_ptr<_1e6bde1ac_JuleImporter>(), _2328_id);
}
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad3701a1_get_import_0(jule::Trait<_1ad370aca_Importer> _self_,jule::Str _2833_path) {
	return _1e6c36a40_get_import(_self_.safe_ptr<_1e6bde1ac_JuleImporter>(), _2833_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1aae013a5_Ast>>,jule::Slice<_1a92a31c6_Log>> _1ad370635_import_package_0(jule::Trait<_1ad370aca_Importer> _self_,jule::Str _3337_path,jule::Bool _3348_update_mod) {
	return _1e6c3b935_import_package(_self_.safe_ptr<_1e6bde1ac_JuleImporter>(), _3337_path, _3348_update_mod);
}
inline void _1ad370954_imported_0(jule::Trait<_1ad370aca_Importer> _self_,jule::Ptr<_1ad3736b0_ImportInfo> _3635__0) {
	_1e6c9772c_imported(_self_.safe_ptr<_1e6bde1ac_JuleImporter>(), _3635__0);
}
inline jule::Str _1ad428db4_to_str_0(jule::Trait<_1ad4293e2_Kind> _self_) {
	return _1ac66496e_to_str(_self_.safe_ptr<_1ac664551_StructIns>());
}
inline jule::Bool _1ad42926b_equals_0(jule::Trait<_1ad4293e2_Kind> _self_,jule::Ptr<_1ad429931_TypeKind> _5926_other) {
	return _1ac664d26_equals(_self_.data.as<_1ac664551_StructIns>(), _5926_other);
}
inline jule::Str _1ad428db4_to_str_1(jule::Trait<_1ad4293e2_Kind> _self_) {
	return _1ac67a8ca_to_str(_self_.safe_ptr<_1ac67a501_FnIns>());
}
inline jule::Bool _1ad42926b_equals_1(jule::Trait<_1ad4293e2_Kind> _self_,jule::Ptr<_1ad429931_TypeKind> _5926_other) {
	return _1ac67ac82_equals(_self_.data.as<_1ac67a501_FnIns>(), _5926_other);
}
inline jule::Str _1ad428db4_to_str_2(jule::Trait<_1ad4293e2_Kind> _self_) {
	return _1ac696187_to_str(_self_.safe_ptr<_1ac85d096_Trait>());
}
inline jule::Bool _1ad42926b_equals_2(jule::Trait<_1ad4293e2_Kind> _self_,jule::Ptr<_1ad429931_TypeKind> _5926_other) {
	return _1ac6987c7_equals(_self_.data.as<_1ac85d096_Trait>(), _5926_other);
}
inline jule::Str _1ad428db4_to_str_3(jule::Trait<_1ad4293e2_Kind> _self_) {
	return _1ac920961_to_str(_self_.safe_ptr<_1ac724545_Enum>());
}
inline jule::Bool _1ad42926b_equals_3(jule::Trait<_1ad4293e2_Kind> _self_,jule::Ptr<_1ad429931_TypeKind> _5926_other) {
	return _1ac928958_equals(_self_.data.as<_1ac724545_Enum>(), _5926_other);
}
inline jule::Str _1ad428db4_to_str_4(jule::Trait<_1ad4293e2_Kind> _self_) {
	return _1ad429d4e_to_str(_self_.safe_ptr<_1ad429931_TypeKind>());
}
inline jule::Bool _1ad42926b_equals_4(jule::Trait<_1ad4293e2_Kind> _self_,jule::Ptr<_1ad429931_TypeKind> _5926_other) {
	return _1ad42a206_equals(_self_.data.as<_1ad429931_TypeKind>(), _5926_other);
}
inline jule::Str _1ad428db4_to_str_5(jule::Trait<_1ad4293e2_Kind> _self_) {
	return _1ad430173_to_str(_self_.safe_ptr<_1ad42ec99_Prim>());
}
inline jule::Bool _1ad42926b_equals_5(jule::Trait<_1ad4293e2_Kind> _self_,jule::Ptr<_1ad429931_TypeKind> _5926_other) {
	return _1ad43052a_equals(_self_.data.as<_1ad42ec99_Prim>(), _5926_other);
}
inline jule::Str _1ad428db4_to_str_6(jule::Trait<_1ad4293e2_Kind> _self_) {
	return _1ad433ece_to_str(_self_.safe_ptr<_1ad433b05_Sptr>());
}
inline jule::Bool _1ad42926b_equals_6(jule::Trait<_1ad4293e2_Kind> _self_,jule::Ptr<_1ad429931_TypeKind> _5926_other) {
	return _1ad434386_equals(_self_.data.as<_1ad433b05_Sptr>(), _5926_other);
}
inline jule::Str _1ad428db4_to_str_7(jule::Trait<_1ad4293e2_Kind> _self_) {
	return _1ad434b4a_to_str(_self_.safe_ptr<_1ad4346d8_Slc>());
}
inline jule::Bool _1ad42926b_equals_7(jule::Trait<_1ad4293e2_Kind> _self_,jule::Ptr<_1ad429931_TypeKind> _5926_other) {
	return _1ad435002_equals(_self_.data.as<_1ad4346d8_Slc>(), _5926_other);
}
inline jule::Str _1ad428db4_to_str_8(jule::Trait<_1ad4293e2_Kind> _self_) {
	return _1ad4357b6_to_str(_self_.safe_ptr<_1ad435354_Tuple>());
}
inline jule::Bool _1ad42926b_equals_8(jule::Trait<_1ad4293e2_Kind> _self_,jule::Ptr<_1ad429931_TypeKind> _5926_other) {
	return _1ad435b6d_equals(_self_.data.as<_1ad435354_Tuple>(), _5926_other);
}
inline jule::Str _1ad428db4_to_str_9(jule::Trait<_1ad4293e2_Kind> _self_) {
	return _1ad436498_to_str(_self_.safe_ptr<_1ad4360be_Map>());
}
inline jule::Bool _1ad42926b_equals_9(jule::Trait<_1ad4293e2_Kind> _self_,jule::Ptr<_1ad429931_TypeKind> _5926_other) {
	return _1ad436850_equals(_self_.data.as<_1ad4360be_Map>(), _5926_other);
}
inline jule::Str _1ad428db4_to_str_10(jule::Trait<_1ad4293e2_Kind> _self_) {
	return _1ad437279_to_str(_self_.safe_ptr<_1ad436da0_Arr>());
}
inline jule::Bool _1ad42926b_equals_10(jule::Trait<_1ad4293e2_Kind> _self_,jule::Ptr<_1ad429931_TypeKind> _5926_other) {
	return _1ad437631_equals(_self_.data.as<_1ad436da0_Arr>(), _5926_other);
}
inline jule::Str _1ad428db4_to_str_11(jule::Trait<_1ad4293e2_Kind> _self_) {
	return _1ad437d5c_to_str(_self_.safe_ptr<_1ad437983_Ptr>());
}
inline jule::Bool _1ad42926b_equals_11(jule::Trait<_1ad4293e2_Kind> _self_,jule::Ptr<_1ad429931_TypeKind> _5926_other) {
	return _1ad438214_equals(_self_.data.as<_1ad437983_Ptr>(), _5926_other);
}
inline jule::Str _1ad428db4_to_str_12(jule::Trait<_1ad4293e2_Kind> _self_) {
	return _1adb00c83_to_str(_self_.safe_ptr<_1adb00821_CustomType>());
}
inline jule::Bool _1ad42926b_equals_12(jule::Trait<_1ad4293e2_Kind> _self_,jule::Ptr<_1ad429931_TypeKind> _5926_other) {
	return _1adb0113a_equals(_self_.data.as<_1adb00821_CustomType>(), _5926_other);
}
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad445188_find_package_0(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _935_ident) {
	return _1ad2e1d04_find_package(_self_.safe_ptr<_1ad35872d_ScopeChecker>(), _935_ident);
}
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad445540_select_package_0(jule::Trait<_1ad447256_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)> _1337_selector) {
	return _1ad35894d_select_package(_self_.safe_ptr<_1ad35872d_ScopeChecker>(), _1337_selector);
}
inline jule::Ptr<_1ad39e037_Var> _1ad4459c4_find_var_0(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1ad358ab3_find_var(_self_.safe_ptr<_1ad35872d_ScopeChecker>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1ad428996_TypeAlias> _1ad445e58_find_type_alias_0(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1ad358c28_find_type_alias(_self_.safe_ptr<_1ad35872d_ScopeChecker>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1ac661075_Struct> _1ad4463dc_find_struct_0(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1ad358d8d_find_struct(_self_.safe_ptr<_1ad35872d_ScopeChecker>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1ac676a08_Fn> _1ad446871_find_fn_0(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1ad3591ce_find_fn(_self_.safe_ptr<_1ad35872d_ScopeChecker>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1ac85d096_Trait> _1ad446c28_find_trait_0(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _3333_ident) {
	return _1ad359586_find_trait(_self_.safe_ptr<_1ad35872d_ScopeChecker>(), _3333_ident);
}
inline jule::Ptr<_1ac724545_Enum> _1ad4470d0_find_enum_0(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _3732_ident) {
	return _1ad35993d_find_enum(_self_.safe_ptr<_1ad35872d_ScopeChecker>(), _3732_ident);
}
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad445188_find_package_1(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _935_ident) {
	return _1ad373c65_find_package(_self_.safe_ptr<_1ad3736b0_ImportInfo>(), _935_ident);
}
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad445540_select_package_1(jule::Trait<_1ad447256_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)> _1337_selector) {
	return _1ad37411c_select_package(_self_.safe_ptr<_1ad3736b0_ImportInfo>(), _1337_selector);
}
inline jule::Ptr<_1ad39e037_Var> _1ad4459c4_find_var_1(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1ad3745a1_find_var(_self_.safe_ptr<_1ad3736b0_ImportInfo>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1ad428996_TypeAlias> _1ad445e58_find_type_alias_1(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1ad374a35_find_type_alias(_self_.safe_ptr<_1ad3736b0_ImportInfo>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1ac661075_Struct> _1ad4463dc_find_struct_1(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1ad374eb9_find_struct(_self_.safe_ptr<_1ad3736b0_ImportInfo>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1ac676a08_Fn> _1ad446871_find_fn_1(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1ad37544d_find_fn(_self_.safe_ptr<_1ad3736b0_ImportInfo>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1ac85d096_Trait> _1ad446c28_find_trait_1(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _3333_ident) {
	return _1ad375805_find_trait(_self_.safe_ptr<_1ad3736b0_ImportInfo>(), _3333_ident);
}
inline jule::Ptr<_1ac724545_Enum> _1ad4470d0_find_enum_1(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _3732_ident) {
	return _1ad375bac_find_enum(_self_.safe_ptr<_1ad3736b0_ImportInfo>(), _3732_ident);
}
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad445188_find_package_2(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _935_ident) {
	return _1ad3771ec_find_package(_self_.safe_ptr<_1ad376b8b_Package>(), _935_ident);
}
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad445540_select_package_2(jule::Trait<_1ad447256_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)> _1337_selector) {
	return _1ad3775a4_select_package(_self_.safe_ptr<_1ad376b8b_Package>(), _1337_selector);
}
inline jule::Ptr<_1ad39e037_Var> _1ad4459c4_find_var_2(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1ad377a38_find_var(_self_.safe_ptr<_1ad376b8b_Package>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1ad428996_TypeAlias> _1ad445e58_find_type_alias_2(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1ad377ebc_find_type_alias(_self_.safe_ptr<_1ad376b8b_Package>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1ac661075_Struct> _1ad4463dc_find_struct_2(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1ad378451_find_struct(_self_.safe_ptr<_1ad376b8b_Package>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1ac676a08_Fn> _1ad446871_find_fn_2(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1ad3788d5_find_fn(_self_.safe_ptr<_1ad376b8b_Package>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1ac85d096_Trait> _1ad446c28_find_trait_2(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _3333_ident) {
	return _1ad378c8c_find_trait(_self_.safe_ptr<_1ad376b8b_Package>(), _3333_ident);
}
inline jule::Ptr<_1ac724545_Enum> _1ad4470d0_find_enum_2(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _3732_ident) {
	return _1ad379144_find_enum(_self_.safe_ptr<_1ad376b8b_Package>(), _3732_ident);
}
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad445188_find_package_3(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _935_ident) {
	return _1ad37d412_find_package(_self_.safe_ptr<_1ad37cd5c_Sema>(), _935_ident);
}
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad445540_select_package_3(jule::Trait<_1ad447256_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)> _1337_selector) {
	return _1ad37d7b9_select_package(_self_.safe_ptr<_1ad37cd5c_Sema>(), _1337_selector);
}
inline jule::Ptr<_1ad39e037_Var> _1ad4459c4_find_var_3(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1ad37dc4d_find_var(_self_.safe_ptr<_1ad37cd5c_Sema>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1ad428996_TypeAlias> _1ad445e58_find_type_alias_3(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1ad37e1d2_find_type_alias(_self_.safe_ptr<_1ad37cd5c_Sema>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1ac661075_Struct> _1ad4463dc_find_struct_3(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1ad37e666_find_struct(_self_.safe_ptr<_1ad37cd5c_Sema>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1ac676a08_Fn> _1ad446871_find_fn_3(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1ad37eaea_find_fn(_self_.safe_ptr<_1ad37cd5c_Sema>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1ac85d096_Trait> _1ad446c28_find_trait_3(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _3333_ident) {
	return _1ad37eea2_find_trait(_self_.safe_ptr<_1ad37cd5c_Sema>(), _3333_ident);
}
inline jule::Ptr<_1ac724545_Enum> _1ad4470d0_find_enum_3(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _3732_ident) {
	return _1ad380359_find_enum(_self_.safe_ptr<_1ad37cd5c_Sema>(), _3732_ident);
}
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad445188_find_package_4(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _935_ident) {
	return _1ad3e0bd3_find_package(_self_.safe_ptr<_1ad3e062d_SymbolTable>(), _935_ident);
}
inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad445540_select_package_4(jule::Trait<_1ad447256_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)> _1337_selector) {
	return _1ad3e108a_select_package(_self_.safe_ptr<_1ad3e062d_SymbolTable>(), _1337_selector);
}
inline jule::Ptr<_1ad39e037_Var> _1ad4459c4_find_var_4(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1ad3e151e_find_var(_self_.safe_ptr<_1ad3e062d_SymbolTable>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1ad428996_TypeAlias> _1ad445e58_find_type_alias_4(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1ad3e19a3_find_type_alias(_self_.safe_ptr<_1ad3e062d_SymbolTable>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1ac661075_Struct> _1ad4463dc_find_struct_4(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1ad3e1e37_find_struct(_self_.safe_ptr<_1ad3e062d_SymbolTable>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1ac676a08_Fn> _1ad446871_find_fn_4(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1ad3e23bb_find_fn(_self_.safe_ptr<_1ad3e062d_SymbolTable>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1ac85d096_Trait> _1ad446c28_find_trait_4(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _3333_ident) {
	return _1ad3e2773_find_trait(_self_.safe_ptr<_1ad3e062d_SymbolTable>(), _3333_ident);
}
inline jule::Ptr<_1ac724545_Enum> _1ad4470d0_find_enum_4(jule::Trait<_1ad447256_Lookup> _self_,jule::Str _3732_ident) {
	return _1ad3e2b2a_find_enum(_self_.safe_ptr<_1ad3e062d_SymbolTable>(), _3732_ident);
}
inline jule::Str _1adb3d232_name_0(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	return _1b14b2862_name(_self_.safe_ptr<_1adb3dcd2_Flag_0>());
}
inline jule::I32 _1adb3d397_short_0(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	return _1b14b2ca2_short(_self_.safe_ptr<_1adb3dcd2_Flag_0>());
}
inline jule::Str _1adb3d584_what_0(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	return _1b14b29c7_what(_self_.safe_ptr<_1adb3dcd2_Flag_0>());
}
inline void _1adb3d771_reset_0(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	_1b14b2b3c_reset(_self_.safe_ptr<_1adb3dcd2_Flag_0>());
}
inline jule::Str _1adb3d232_name_1(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	return _1b14b5b95_name(_self_.safe_ptr<_1adb3dcd2_Flag_1>());
}
inline jule::I32 _1adb3d397_short_1(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	return _1b14b58ed_short(_self_.safe_ptr<_1adb3dcd2_Flag_1>());
}
inline jule::Str _1adb3d584_what_1(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	return _1b14b2e28_what(_self_.safe_ptr<_1adb3dcd2_Flag_1>());
}
inline void _1adb3d771_reset_1(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	_1b14b45ab_reset(_self_.safe_ptr<_1adb3dcd2_Flag_1>());
}
inline jule::Str _1adb3d232_name_2(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	return _1b14b91a4_name(_self_.safe_ptr<_1adb3dcd2_Flag_2>());
}
inline jule::I32 _1adb3d397_short_2(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	return _1b14b8e0c_short(_self_.safe_ptr<_1adb3dcd2_Flag_2>());
}
inline jule::Str _1adb3d584_what_2(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	return _1b14b6437_what(_self_.safe_ptr<_1adb3dcd2_Flag_2>());
}
inline void _1adb3d771_reset_2(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	_1b14b7aba_reset(_self_.safe_ptr<_1adb3dcd2_Flag_2>());
}
inline jule::Str _1adb3d232_name_3(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	return _1b14b99ac_name(_self_.safe_ptr<_1adb3dcd2_Flag_3>());
}
inline jule::I32 _1adb3d397_short_3(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	return _1b14bc460_short(_self_.safe_ptr<_1adb3dcd2_Flag_3>());
}
inline jule::Str _1adb3d584_what_3(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	return _1b14bc707_what(_self_.safe_ptr<_1adb3dcd2_Flag_3>());
}
inline void _1adb3d771_reset_3(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	_1b14bb11d_reset(_self_.safe_ptr<_1adb3dcd2_Flag_3>());
}
inline jule::Str _1adb3d232_name_4(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	return _1b14c0c16_name(_self_.safe_ptr<_1adb3dcd2_Flag_4>());
}
inline jule::I32 _1adb3d397_short_4(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	return _1b14c096e_short(_self_.safe_ptr<_1adb3dcd2_Flag_4>());
}
inline jule::Str _1adb3d584_what_4(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	return _1b14bce99_what(_self_.safe_ptr<_1adb3dcd2_Flag_4>());
}
inline void _1adb3d771_reset_4(jule::Trait<_1adb3d8d6_CommonFlag> _self_) {
	_1b14be62c_reset(_self_.safe_ptr<_1adb3dcd2_Flag_4>());
}


static _1ad4acc28_ReaderMptrData _1ad4acc28_Reader_mptr_data[] = {
	{
		._1ad4acaa2_read=_1ad4acaa2_read_0,
	},
	{
		._1ad4acaa2_read=_1ad4acaa2_read_1,
	},
};static _1ad4ad234_WriterMptrData _1ad4ad234_Writer_mptr_data[] = {
	{
		._1ad4ad0ad_write=_1ad4ad0ad_write_0,
	},
	{
		._1ad4ad0ad_write=_1ad4ad0ad_write_1,
	},
};static _1ad4ad94e_WriterCloserMptrData _1ad4ad94e_WriterCloser_mptr_data[] = {
};static _1ad4ae323_StreamMptrData _1ad4ae323_Stream_mptr_data[] = {
	{
		._1ad4adce5_read=_1ad4adce5_read_0,
		._1ad4ae19c_write=_1ad4ae19c_write_0,
	},
	{
		._1ad4adce5_read=_1ad4adce5_read_1,
		._1ad4ae19c_write=_1ad4ae19c_write_1,
	},
};static _1ad370aca_ImporterMptrData _1ad370aca_Importer_mptr_data[] = {
	{
		._1ad36e6ab_set_mod_path=_1ad36e6ab_set_mod_path_0,
		._1ad36e942_get_mod_path=_1ad36e942_get_mod_path_0,
		._1ad36ece9_mod_by_id=_1ad36ece9_mod_by_id_0,
		._1ad3701a1_get_import=_1ad3701a1_get_import_0,
		._1ad370635_import_package=_1ad370635_import_package_0,
		._1ad370954_imported=_1ad370954_imported_0,
	},
};static _1ad4293e2_KindMptrData _1ad4293e2_Kind_mptr_data[] = {
	{
		._1ad428db4_to_str=_1ad428db4_to_str_0,
		._1ad42926b_equals=_1ad42926b_equals_0,
	},
	{
		._1ad428db4_to_str=_1ad428db4_to_str_1,
		._1ad42926b_equals=_1ad42926b_equals_1,
	},
	{
		._1ad428db4_to_str=_1ad428db4_to_str_2,
		._1ad42926b_equals=_1ad42926b_equals_2,
	},
	{
		._1ad428db4_to_str=_1ad428db4_to_str_3,
		._1ad42926b_equals=_1ad42926b_equals_3,
	},
	{
		._1ad428db4_to_str=_1ad428db4_to_str_4,
		._1ad42926b_equals=_1ad42926b_equals_4,
	},
	{
		._1ad428db4_to_str=_1ad428db4_to_str_5,
		._1ad42926b_equals=_1ad42926b_equals_5,
	},
	{
		._1ad428db4_to_str=_1ad428db4_to_str_6,
		._1ad42926b_equals=_1ad42926b_equals_6,
	},
	{
		._1ad428db4_to_str=_1ad428db4_to_str_7,
		._1ad42926b_equals=_1ad42926b_equals_7,
	},
	{
		._1ad428db4_to_str=_1ad428db4_to_str_8,
		._1ad42926b_equals=_1ad42926b_equals_8,
	},
	{
		._1ad428db4_to_str=_1ad428db4_to_str_9,
		._1ad42926b_equals=_1ad42926b_equals_9,
	},
	{
		._1ad428db4_to_str=_1ad428db4_to_str_10,
		._1ad42926b_equals=_1ad42926b_equals_10,
	},
	{
		._1ad428db4_to_str=_1ad428db4_to_str_11,
		._1ad42926b_equals=_1ad42926b_equals_11,
	},
	{
		._1ad428db4_to_str=_1ad428db4_to_str_12,
		._1ad42926b_equals=_1ad42926b_equals_12,
	},
};static _1ad447256_LookupMptrData _1ad447256_Lookup_mptr_data[] = {
	{
		._1ad445188_find_package=_1ad445188_find_package_0,
		._1ad445540_select_package=_1ad445540_select_package_0,
		._1ad4459c4_find_var=_1ad4459c4_find_var_0,
		._1ad445e58_find_type_alias=_1ad445e58_find_type_alias_0,
		._1ad4463dc_find_struct=_1ad4463dc_find_struct_0,
		._1ad446871_find_fn=_1ad446871_find_fn_0,
		._1ad446c28_find_trait=_1ad446c28_find_trait_0,
		._1ad4470d0_find_enum=_1ad4470d0_find_enum_0,
	},
	{
		._1ad445188_find_package=_1ad445188_find_package_1,
		._1ad445540_select_package=_1ad445540_select_package_1,
		._1ad4459c4_find_var=_1ad4459c4_find_var_1,
		._1ad445e58_find_type_alias=_1ad445e58_find_type_alias_1,
		._1ad4463dc_find_struct=_1ad4463dc_find_struct_1,
		._1ad446871_find_fn=_1ad446871_find_fn_1,
		._1ad446c28_find_trait=_1ad446c28_find_trait_1,
		._1ad4470d0_find_enum=_1ad4470d0_find_enum_1,
	},
	{
		._1ad445188_find_package=_1ad445188_find_package_2,
		._1ad445540_select_package=_1ad445540_select_package_2,
		._1ad4459c4_find_var=_1ad4459c4_find_var_2,
		._1ad445e58_find_type_alias=_1ad445e58_find_type_alias_2,
		._1ad4463dc_find_struct=_1ad4463dc_find_struct_2,
		._1ad446871_find_fn=_1ad446871_find_fn_2,
		._1ad446c28_find_trait=_1ad446c28_find_trait_2,
		._1ad4470d0_find_enum=_1ad4470d0_find_enum_2,
	},
	{
		._1ad445188_find_package=_1ad445188_find_package_3,
		._1ad445540_select_package=_1ad445540_select_package_3,
		._1ad4459c4_find_var=_1ad4459c4_find_var_3,
		._1ad445e58_find_type_alias=_1ad445e58_find_type_alias_3,
		._1ad4463dc_find_struct=_1ad4463dc_find_struct_3,
		._1ad446871_find_fn=_1ad446871_find_fn_3,
		._1ad446c28_find_trait=_1ad446c28_find_trait_3,
		._1ad4470d0_find_enum=_1ad4470d0_find_enum_3,
	},
	{
		._1ad445188_find_package=_1ad445188_find_package_4,
		._1ad445540_select_package=_1ad445540_select_package_4,
		._1ad4459c4_find_var=_1ad4459c4_find_var_4,
		._1ad445e58_find_type_alias=_1ad445e58_find_type_alias_4,
		._1ad4463dc_find_struct=_1ad4463dc_find_struct_4,
		._1ad446871_find_fn=_1ad446871_find_fn_4,
		._1ad446c28_find_trait=_1ad446c28_find_trait_4,
		._1ad4470d0_find_enum=_1ad4470d0_find_enum_4,
	},
};static _1adb3d8d6_CommonFlagMptrData _1adb3d8d6_CommonFlag_mptr_data[] = {
	{
		._1adb3d232_name=_1adb3d232_name_0,
		._1adb3d397_short=_1adb3d397_short_0,
		._1adb3d584_what=_1adb3d584_what_0,
		._1adb3d771_reset=_1adb3d771_reset_0,
	},
	{
		._1adb3d232_name=_1adb3d232_name_1,
		._1adb3d397_short=_1adb3d397_short_1,
		._1adb3d584_what=_1adb3d584_what_1,
		._1adb3d771_reset=_1adb3d771_reset_1,
	},
	{
		._1adb3d232_name=_1adb3d232_name_2,
		._1adb3d397_short=_1adb3d397_short_2,
		._1adb3d584_what=_1adb3d584_what_2,
		._1adb3d771_reset=_1adb3d771_reset_2,
	},
	{
		._1adb3d232_name=_1adb3d232_name_3,
		._1adb3d397_short=_1adb3d397_short_3,
		._1adb3d584_what=_1adb3d584_what_3,
		._1adb3d771_reset=_1adb3d771_reset_3,
	},
	{
		._1adb3d232_name=_1adb3d232_name_4,
		._1adb3d397_short=_1adb3d397_short_4,
		._1adb3d584_what=_1adb3d584_what_4,
		._1adb3d771_reset=_1adb3d771_reset_4,
	},
};

jule::Bool _1e6ae3d5e_PRODUCTION;
jule::Bool _1e6ae3e80_OPT_COPY;
jule::Bool _1e6ae40a1_OPT_DEADCODE;
jule::Bool _1e6ae4249_OPT_APPEND;
jule::Bool _1e6ae436a_OPT_MATH;
jule::Bool _1e6ae448b_OPT_ACCESS;
jule::Bool _1e6ae45ac_OPT_INLINE;
jule::Bool _1e6ae47dd_OPT_PTR;
jule::Bool _1e6ae490e_OPT_COND;
jule::Str _1e6ae5080_COMPILER;
jule::Str _1e6ae527d_COMPILER_PATH;
jule::Str _1e6ae5437_CPP_STD;
jule::Bool _1e6ae5635_SHADOWING;
jule::Bool _1e6ae57de_TRANSPILATION;
jule::Bool _1e6ae5998_TEST;
jule::Bool _1e6ae5b52_RC;
jule::Bool _1e6ae5d94_SAFETY;
jule::Ptr<_1a90054cd_RangeTable> _1a8eb5ca7__L;
jule::Ptr<_1a90054cd_RangeTable> _1a8eba4c6_LETTER;
jule::Array<jule::U8,256> _1a90004a6__PROPERTIES;
jule::Array<jule::U8,256> _1a90b9570_FIRST;
jule::Array<_1a90b812e_accept_range,16> _1a90b9be1_ACCEPT_RANGES;
jule::Array<jule::Str,4> _1a9291e73_CPP_HEADER_EXTS;
jule::Array<jule::Str,3> _1a9292094_CPP_EXTS;
jule::Array<jule::Str,1> _1a92921b5_OBJECTIVE_CPP_EXTS;
jule::Array<jule::Str,3> _1a92a6bd0_DISTOS;
jule::Array<jule::Str,3> _1a92a6e11_DISTARCH;
jule::Str _1a92b37be_PATH_STDLIB;
jule::Str _1a92b785b_PATH_EXEC;
jule::Str _1a92bc465_PATH_WD;
jule::Str _1a92b4a9a_PATH_API;
jule::Str _1a92b60c9_OS;
jule::Str _1a92b68e3_ARCH;
jule::Array<jule::I32,5> _1aae085ee_SPACES;
jule::Array<jule::Str,6> _1aae0792d_UNARY_OPS;
jule::Array<jule::Str,12> _1aae07a4e_BIN_OPS;
jule::Array<jule::Str,2> _1aae07c91_POSTFIX_OPS;
jule::Array<jule::Str,11> _1aaeecd53_ASSING_OPS;
jule::Array<_1ab00dda8_KindPair,47> _1ab00e1d8_KEYWORDS;
jule::Array<_1ab00dda8_KindPair,39> _1ab00e419_BASIC_OPS;
jule::Array<jule::U8,32> _1ad2276da_DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _1ad227a81_DE_BRUIJN64_TAB;
_1acee76b9_FloatInfo _1aca6417b_F32_INFO;
_1acee76b9_FloatInfo _1aca6a8d0_F64_INFO;
jule::Array<jule::Array<jule::U64,2>,696> _1acae9640_DETAILED_POWS_OF_TEN;
jule::Slice<jule::I64> _1acb802db_POWTAB;
jule::Slice<jule::F64> _1acb54667_F64_POW10;
jule::Slice<jule::F32> _1acb8bc76_F32_POW10;
jule::Array<jule::U64,20> _1acc70a91_U64_POW10;
jule::Slice<_1ad256780_LeftCheat> _1acc84951_LEFTCHEATS;
jule::I64 _1ad347b18_BIT_SIZE;
jule::Str _1ad347c39_SYS_INT;
jule::Str _1ad347d5a_SYS_UINT;
jule::Slice<jule::Any> _1e6b19e73_deads;
jule::Slice<jule::Any> _1e6b1bccc_checking;
jule::Any _1e6b28976_current;
jule::Any _1e6b2ad85_main_current;
jule::Array<jule::U64,12> _1adade1e4_MDAYS;
jule::Array<jule::Array<jule::Str,2>,5> _1a9268059_HELP_MAP;
jule::Str _1aba96d6e_OUT_DIR;
jule::Str _1aba9b912_OUT_NAME;
jule::Str _1ababe78c_OUT;





std::ostream &operator<<(std::ostream &_Stream, _1a9003ce5_FoldPair _Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9004389_CaseRange _Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a90048d9_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9004e7d_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a90054cd_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a90b812e_accept_range _Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1a90c48bb_index(_1a90c439e_LazyBuff* _self_,jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	}
	return (*_self_)._field_path[_5424_i];
}



inline void _1a90c4bda_append(_1a90c439e_LazyBuff* _self_,jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if (((*_self_)._field_w < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_path.len()))) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c)) {
			((*_self_)._field_w)++;
			return;
		}
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::I64>((*_self_)._field_path.len()));
		copy((*_self_)._field_buff,static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w)));
	}
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _1a90c4eb5_string(_1a90c439e_LazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len + (*_self_)._field_w);
	}
	return (*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w));
}







std::ostream &operator<<(std::ostream &_Stream, _1a90c439e_LazyBuff _Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e7acc7c5_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1e7acc7c5_DirEntry>>> static__1a90c955d_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_1e7acc7c5_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_1e7acc7c5_DirEntry>>();
	DIR* _1617_dir = _1e7aacab3_opendir((&(_1524_path[0LL])));
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1e7acc7c5_DirEntry>>>(_1e7acaad1_get_last_fs_error());
	}
	for (;;) {
		{
			struct dirent* _2117_dirent = _1e7aacdc1_readdir(_1617_dir);
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1ae2c83c2;
			}
			jule::Str _2517_name = _1e7aa97b3_byte_ptr_to_str(((jule::U8*)(_2117_dirent->d_name)));
			jule::Ptr<_1e7ad1b09_Status> _2621_stat = ({
				auto except = static__1e7acd364_of(_1a90c5d40_join(jule::Slice<jule::Str>({_1524_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_1e7acc7c5_DirEntry>>>(except.error);
					return jule::Exceptional<jule::Slice<jule::Ptr<_1e7acc7c5_DirEntry>>>(except.error);
				} jule::Ptr<_1e7ad1b09_Status>();});
			});
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_1e7acc7c5_DirEntry>(_1e7acc7c5_DirEntry(_2517_name,_2621_stat)));
		}
	_iter_next_1ae2c83c2:;
	}
	_iter_end_1ae2c83c2:;
	_1e7aad300_closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1e7acc7c5_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__1a90c97d3_create(jule::Str _3926_path) {
	if ((_1e7aadd06_mkdir((&(_3926_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(_1e7acaad1_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional static__1a90c9a58_remove(jule::Str _5126_path) {
	if ((_1e7aae114_rmdir((&(_5126_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_1e7acaad1_get_last_fs_error());
	} return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, _1e7acca6c_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1e7ace882_File>> static__1e7acb5c6_open(jule::Str _1824_path,jule::I64 _1835_flag,jule::I64 _1848_mode) {
	jule::I64 _1913_handle = _1e7aac3ba_open((&(_1824_path[0LL])),static_cast<jule::I64>(_1835_flag),_1848_mode);
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1e7ace882_File>>(_1e7acaad1_get_last_fs_error());
	}
	return jule::Exceptional<jule::Ptr<_1e7ace882_File>>(jule::Any(),static__1e7aced49_new(static_cast<jule::U64>(static_cast<jule::U64>(_1913_handle))));
}



inline jule::VoidExceptional static__1e7acb84b_remove(jule::Str _3026_path) {
	if ((_1e7aae422_unlink((&(_3026_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_1e7acaad1_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::Exceptional<jule::I64> _1e7acbd02_write(_1e7ace882_File* _self_,jule::Slice<jule::U8> _4428_buff) {
	jule::I64 _4445_n = jule::I64();
	if ((_4428_buff.len() == 0LL)) {
		_4445_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4445_n);
	}
	_4445_n=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1e7ac9250_write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4428_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4428_buff.len()))))));
	if ((_4445_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e7acaad1_get_last_fs_error());
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_4445_n);
}



inline jule::Exceptional<jule::I64> _1e7acc1a9_read(_1e7ace882_File* _self_,jule::Slice<jule::U8> _6531_buff) {
	jule::I64 _6548_n = jule::I64();
	if ((_6531_buff.len() == 0LL)) {
		_6548_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_6548_n);
	}
	_6548_n=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1e7ac88e2_read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6531_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6531_buff.len()))))));
	if ((_6548_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e7acaad1_get_last_fs_error());
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_6548_n);
}



inline jule::Ptr<_1e7ace882_File> static__1e7aced49_new(jule::U64 _4523_handle) {
	return jule::new_ptr<_1e7ace882_File>(_1e7ace882_File(_4523_handle));
}



inline jule::Exceptional<jule::Ptr<_1e7ace882_File>> static__1e7ad0157_create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_1e7ace882_File>>(jule::Any(),({
		auto except = static__1e7acb5c6_open(_5526_path,((static_cast<jule::I64>(578LL) | 578LL) | 578LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_1e7ace882_File>>(except.error);
			return jule::Exceptional<jule::Ptr<_1e7ace882_File>>(except.error);
		} jule::Ptr<_1e7ace882_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1e7ad0465_read(jule::Str _6724_path) {
	jule::Ptr<_1e7ad1b09_Status> _6813_s = ({
		auto except = static__1e7acd364_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1e7ad1b09_Status>();});
	});
	if ((!(_1e7ad2346_is_reg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	}
	if ((_6813_s.get()._field_size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	}
	jule::Ptr<_1e7ace882_File> _7817_f = ({
		auto except = static__1e7acb5c6_open(_6724_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1e7ace882_File>();});
	});
	__JULE_DEFER({
		({
			auto except = _1e7ad1169_close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_size));
	jule::I64 _8213_n = ({
		auto except = _1e7acc1a9_read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__1e7ad0894_write(jule::Str _9125_path,jule::Slice<jule::U8> _9136_data,jule::I64 _9150_perm) {
	jule::Ptr<_1e7ace882_File> _9217_f = ({
		auto except = static__1e7acb5c6_open(_9125_path,((static_cast<jule::I64>(577LL) | 577LL) | 577LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1e7ace882_File>();});
	});
	({
		auto except = _1e7acbd02_write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _1e7ad1169_close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	}); return jule::VoidExceptional(); }



inline jule::Exceptional<jule::I64> _1e7ad0e27_seek(_1e7ace882_File* _self_,jule::I64 _10527_offset,jule::I64 _10540_origin) {
	jule::I64 _10613_pos = _1e7ac842a_seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I64>(_10540_origin));
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_1e7acaad1_get_last_fs_error());
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _1e7ad1169_close(_1e7ace882_File* _self_) {
	if ((_1e7ac8c88_close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_1e7acaad1_get_last_fs_error());
	} return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, _1e7ace882_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1e7ad1b09_Status>> static__1e7acd364_of(jule::Str _1122_path) {
	struct stat _1217_handle = (struct stat){};
	jule::I64 _1313_code = _1e7aabe03_stat((&(_1122_path[0LL])),(&(_1217_handle)));
	if ((_1313_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_1e7ad1b09_Status>>(jule::Any(),jule::new_ptr<_1e7ad1b09_Status>(_1e7ad1b09_Status(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1217_handle.st_mode))),static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1217_handle.st_size))))));
	}
	return jule::Exceptional<jule::Ptr<_1e7ad1b09_Status>>(_1e7acaad1_get_last_fs_error());
}



inline jule::Bool _1e7ad206b_is_dir(_1e7ad1b09_Status* _self_) {
	return (((*_self_)._field_mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _1e7ad2346_is_reg(_1e7ad1b09_Status* _self_) {
	return (((*_self_)._field_mode & 32768LLU) == 32768LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _1e7ad1b09_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a92dee05_Cmd> static__1a92e039a_new(jule::Str _2023_path) {
	return jule::new_ptr<_1a92dee05_Cmd>(_1a92dee05_Cmd(_2023_path,jule::Slice<jule::Str>(),jule::Slice<jule::Str>()));
}



inline jule::Exceptional<jule::I64> _1a92e0675_spawn(_1a92dee05_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _1a92e38a9___spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _1a92e38a9___spawn(_1a92dee05_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(3LL));
	}
	jule::I64 _5013_pid = fork();
	{
		auto &_match_expr{ _5013_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1ae30b944:;
			{
				return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1ae30c703:;
			{
				jule::I64 _5521_status = 0LL;
				if (((*_self_)._field_env == nullptr)) {
					_5521_status=static_cast<jule::I64>(_1a92e3090_execvp((*_self_)._field_path,(*_self_)._field_args));
				} else {
					_5521_status=static_cast<jule::I64>(_1a92e3557_execve((*_self_)._field_path,(*_self_)._field_args,(*_self_)._field_env));
				}
				if ((_5521_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				}
				_1a92e4316_exit(255LL);
			}
		}
		_match_end_1ae30c626:;
	}
	jule::I64 _6613_status = 0LL;
	if ((waitpid(_5013_pid,((signed*)((&(_6613_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(_1a92de7a6_get_last_process_error());
	}
	if (WIFSIGNALED(_6613_status)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
	}
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(WEXITSTATUS(_6613_status)));
}







std::ostream &operator<<(std::ostream &_Stream, _1a92dee05_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a92a31c6_Log _Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1ab005982_prec(_1ab005531_Token* _self_) {
	if ((*_self_)._field_id != static_cast<jule::U64>(7LLU)) {
		return 0LLU;
	}
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1ae39d9e7:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1ae39d662:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1ae39d6c8:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1ae39d73e:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1ae39d7d8:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1ae39ce03:;
			{
				return 0LLU;
			}
		}
		_match_end_1ae39d211:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1ab005531_Token _Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab00baed_is_ok(_1ab00b67a_File* _self_) {
	({
		auto except = static__1e7acd364_of((*_self_)._field_path);
		(except.ok()) ? (except.result) : ({{
			return false;
			return false;
		} jule::Ptr<_1e7ad1b09_Status>();});
	});
	return true;
}



inline void _1ab00be1c_fill(_1ab00b67a_File* _self_,jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_data=_2331_data;
}



inline jule::Str _1ab00c1e7_dir(_1ab00b67a_File* _self_) {
	return _1a90c6b10_dir((*_self_)._field_path);
}



inline jule::Str _1ab00c4c2_name(_1ab00b67a_File* _self_) {
	return _1a90c6769_base((*_self_)._field_path);
}



inline jule::U64 _1ab00c79c_addr(_1ab00b67a_File* _self_) {
	return static_cast<jule::U64>(((jule::U64)((&((*_self_))))));
}



inline jule::Str _1ab00cb54_get_row(_1ab00b67a_File* _self_,jule::I64 _4426_row) {
	jule::I64 _4517_n = 0LL;
	jule::I64 _4617_line_start = 0LL;
	jule::I64 _4717_i = 0LL;
	for (; _4717_i < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.len())); (_4717_i)++) {
		{
			if ((*_self_)._field_data[_4717_i] != '\n') {
				goto _iter_next_1ae3a51c4;
			}
			(_4517_n)++;
			if (_4517_n == _4426_row) {
				return static_cast<jule::Str>((*_self_)._field_data.slice(_4617_line_start,_4717_i));
			}
			_4617_line_start=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1ae3a51c4:;
	}
	_iter_end_1ae3a51c4:;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _1ab00b67a_File _Src) {
	_Stream << "File{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "tokens:" << _Src._field_tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab00dda8_KindPair _Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1ab015d5a_push_err(_1ab0156d9_Lex* _self_,jule::Str _46027_fmt,jule::Slice<jule::Any> _46040_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ab00ea46_make_err((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_46027_fmt,_46040_args));
}



inline void _1ab016256_push_err_tok(_1ab0156d9_Lex* _self_,_1ab005531_Token& _46532_token,jule::Str _46546_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ab00ea46_make_err(_46532_token._field_row,_46532_token._field_column,(*_self_)._field_file,_46546_fmt,jule::Slice<jule::Any>()));
}



inline void _1ab016498_lex(_1ab0156d9_Lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_1ab018b0a_new_line(&(*_self_));
	while ((*_self_)._field_pos < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len()))) {
		{
			_1ab005531_Token _47521_token = _1ab01a3c0_token(&(*_self_));
			if (_47521_token._field_id != static_cast<jule::U64>(0LLU)) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47521_token);
			}
		}
	_iter_next_1ae3ab362:;
	}
	_iter_end_1ae3ab362:;
}



inline jule::Str _1ab016850_id(_1ab0156d9_Lex* _self_,jule::Slice<jule::U8>& _48422_ln) {
	if ((_48422_ln.len() == 0LL)) {
		return jule::Str();
	}
	jule::I32 _48814_r;
	jule::I64 _48821_i;
	std::tie(_48814_r,_48821_i) = _1a90ba61a_decode_rune(_48422_ln);
	if ((_48814_r != '_') && (!(_1ab00916c_is_letter(_48814_r)))) {
		return jule::Str();
	}
	while (_48821_i < static_cast<jule::I64>(static_cast<jule::I64>(_48422_ln.len()))) {
		{
			jule::I32 _49418_pr;
			jule::I64 _49422_n;
			std::tie(_49418_pr,_49422_n) = _1a90ba61a_decode_rune(_48422_ln.slice(_48821_i));
			if (((_49418_pr != '_') && (!(_1ab009788_is_decimal(static_cast<jule::U8>(static_cast<jule::U8>(_49418_pr)))))) && (!(_1ab00916c_is_letter(_49418_pr)))) {
				(*_self_)._field_pos+=_48821_i;
				return static_cast<jule::Str>(_48422_ln.slice(0LL,_48821_i));
			}
			_48821_i+=_49422_n;
		}
	_iter_next_1ae3b03bb:;
	}
	_iter_end_1ae3b03bb:;
	(*_self_)._field_pos+=static_cast<jule::I64>(_48422_ln.len());
	return static_cast<jule::Str>(_48422_ln);
}



inline jule::Slice<jule::U8> _1ab016b2a_resume(_1ab0156d9_Lex* _self_) {
	jule::I64 _50917_i = (*_self_)._field_pos;
	for (; _50917_i < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len())); (_50917_i)++) {
		{
			jule::I32 _51117_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_data[_50917_i]);
			if (_1ab008c3d_is_space(_51117_r)) {
				
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _51117_r };
					
					if (_match_expr == '\n') {
						_case_begin_1ae3b5b52:;
						{
							_1ab018b0a_new_line(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1ae3b58aa:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1ae3b4e09:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1ae3b54e2:;
				}
				goto _iter_next_1ae3b3996;
			}
			jule::I64 _52321_j = _50917_i;
			for (; _52321_j < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len())); (_52321_j)++) {
				{
					if ((*_self_)._field_file.get()._field_data[_52321_j] == '\n') {
						goto _iter_end_1ae3b490e;
					}
				}
			_iter_next_1ae3b490e:;
			}
			_iter_end_1ae3b490e:;
			return (*_self_)._field_file.get()._field_data.slice(_50917_i,_52321_j);
		}
	_iter_next_1ae3b3996:;
	}
	_iter_end_1ae3b3996:;
	return nullptr;
}



inline void _1ab016e49_lex_line_comment(_1ab0156d9_Lex* _self_,_1ab005531_Token& _53540_token) {
	jule::I64 _53613_start = (*_self_)._field_pos;
	(*_self_)._field_pos+=2LL;
	for (; (*_self_)._field_pos < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len())); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53917_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
			if ((_53917_r == '\n') || (_53917_r == '\r')) {
				goto _iter_end_1ae3b8da8;
			}
		}
	_iter_next_1ae3b8da8:;
	}
	_iter_end_1ae3b8da8:;
	if (((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL)) {
		_53540_token._field_id=static_cast<jule::U64>(18LLU);
		_53540_token._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_53613_start,(*_self_)._field_pos));
	}
}



inline void _1ab017268_lex_range_comment(_1ab0156d9_Lex* _self_,_1ab005531_Token& _55041_token) {
	jule::I64 _55113_start = (*_self_)._field_pos;
	(*_self_)._field_pos+=2LL;
	for (; (*_self_)._field_pos < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len())); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55417_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
			if (_55417_r == '\r') {
				goto _iter_next_1ae3bcd46;
			}
			if (_55417_r == '\n') {
				_1ab018b0a_new_line(&(*_self_));
				goto _iter_next_1ae3bcd46;
			}
			(*_self_)._field_column+=1LL;
			if (((((*_self_)._field_pos + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len()))) && (_55417_r == '*')) && ((*_self_)._field_file.get()._field_data[((*_self_)._field_pos + 1LL)] == '/')) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if (((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL)) {
					_55041_token._field_id=static_cast<jule::U64>(18LLU);
					_55041_token._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_55113_start,(*_self_)._field_pos));
				}
				return;
			}
		}
	_iter_next_1ae3bcd46:;
	}
	_iter_end_1ae3bcd46:;
	_1ab015d5a_push_err(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1ab017620_num(_1ab0156d9_Lex* _self_,jule::Slice<jule::U8>& _57823_txt) {
	jule::Str _57838_lit = jule::Str();
	if (_57823_txt[0LL] == '_') {
		_57838_lit = jule::Str();
		return _57838_lit;
	}
	_57838_lit=_1ab013bb0_hex_num(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	}
	_57838_lit=_1ab0138a2_octal_num(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	}
	_57838_lit=_1ab011edd_binary_num(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	}
	_57838_lit=_1ab011bd0_common_num(_57823_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=static_cast<jule::I64>(_57838_lit.len());
	return _57838_lit;
}



inline jule::Str _1ab0179c7_escape_seq(_1ab0156d9_Lex* _self_,jule::Slice<jule::U8>& _60030_txt) {
	jule::Str _60117_seq = jule::Str();
	if ((_60030_txt.len() < 2LL)) {
		goto _julec_label_end;
	}
	{
		auto &_match_expr{ _60030_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1ae3ca1b6:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60030_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ae3ca0c8:;
			{
				_60117_seq=_1ab0143ec_big_unicode_point_escape(_60030_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1ae3c9ced:;
			{
				_60117_seq=_1ab01473d_little_unicode_point_escape(_60030_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ae3c9d64:;
			{
				_60117_seq=_1ab014a3a_hex_byte_escape(_60030_txt);
			}
		}
		else {
			_case_begin_1ae3c955b:;
			{
				_60117_seq=_1ab014d48_byte_escape(_60030_txt);
			}
		}
		_match_end_1ae3c9c21:;
	}
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*_self_)._field_pos)++;
		_1ab015d5a_push_err(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	}
	(*_self_)._field_pos+=static_cast<jule::I64>(_60117_seq.len());
	return _60117_seq;
}



inline jule::Str _1ab017e5b_get_rune(_1ab0156d9_Lex* _self_,jule::Slice<jule::U8>& _63428_txt,jule::Bool _63441_raw) {
	if ((!(_63441_raw)) && (_63428_txt[0LL] == '\\')) {
		return _1ab0179c7_escape_seq(&(*_self_), _63428_txt);
	}
	jule::I32 _63914_r;
	jule::I64 _63917_n;
	std::tie(_63914_r,_63917_n) = _1a90ba61a_decode_rune(_63428_txt);
	(*_self_)._field_pos+=_63917_n;
	return static_cast<jule::Str>(_63914_r);
}



inline jule::Str _1ab018313_lex_rune(_1ab0156d9_Lex* _self_,jule::Slice<jule::U8>& _64428_txt) {
	jule::Str _64517_run = jule::Str("'", 1);
	((*_self_)._field_column)++;
	jule::I64 _64717_n = 0LL;
	jule::I64 _64817_i = 1LL;
	for (; _64817_i < static_cast<jule::I64>(static_cast<jule::I64>(_64428_txt.len())); (_64817_i)++) {
		{
			if (_64428_txt[_64817_i] == '\r') {
				goto _iter_next_1ae3d271d;
			}
			if (_64428_txt[_64817_i] == '\n') {
				_1ab015d5a_push_err(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_1ab018b0a_new_line(&(*_self_));
				return jule::Str();
			}
			jule::Slice<jule::U8> _66017_part = _64428_txt.slice(_64817_i);
			jule::Str _66117_r = _1ab017e5b_get_rune(&(*_self_), _66017_part,false);
			_64517_run+=_66117_r;
			(*_self_)._field_column+=static_cast<jule::I64>(_1a90bc70a_rune_count_str(_66117_r));
			if ((_66117_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1ae3d271d;
			}
			if ((_66117_r.len() > 1LL)) {
				_64817_i+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_66117_r.len())) - 1LL));
			}
			(_64717_n)++;
		}
	_iter_next_1ae3d271d:;
	}
	_iter_end_1ae3d271d:;
	if ((_64717_n == 0LL)) {
		_1ab015d5a_push_err(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64717_n > 1LL)) {
		_1ab015d5a_push_err(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	}
	return _64517_run;
}



inline jule::Str _1ab0185dd_lex_str(_1ab0156d9_Lex* _self_) {
	jule::Str _68417_s = jule::Str();
	jule::U8 _68513_mark = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
	((*_self_)._field_pos)++;
	jule::Bool _68713_raw = _68513_mark == '`';
	_68417_s+=static_cast<jule::Str>(_68513_mark);
	((*_self_)._field_column)++;
	while ((*_self_)._field_pos < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len()))) {
		{
			jule::U8 _69217_ch = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
			if (_69217_ch == '\r') {
				goto _iter_next_1ae3d9d74;
			}
			if (_69217_ch == '\n') {
				_1ab018b0a_new_line(&(*_self_));
				if ((!(_68713_raw))) {
					_1ab015d5a_push_err(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				}
			}
			jule::Slice<jule::U8> _70421_part = (*_self_)._field_file.get()._field_data.slice((*_self_)._field_pos);
			jule::Str _70517_r = _1ab017e5b_get_rune(&(*_self_), _70421_part,_68713_raw);
			_68417_s+=_70517_r;
			(*_self_)._field_column+=static_cast<jule::I64>(_1a90bc70a_rune_count_str(_70517_r));
			if (_69217_ch == _68513_mark) {
				goto _iter_end_1ae3d9d74;
			}
		}
	_iter_next_1ae3d9d74:;
	}
	_iter_end_1ae3d9d74:;
	return _68417_s;
}



inline jule::Bool _1ab0188b8_is_first_token_of_line(_1ab0156d9_Lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _1ab018b0a_new_line(_1ab0156d9_Lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _1ab019248_is_op(_1ab0156d9_Lex* _self_,jule::Slice<jule::U8>& _72525_txt,jule::Str _72538_kind,jule::U64 _72549_id,_1ab005531_Token& _72567_t) {
	if ((!(_1ab00ee75_bytes_has_prefix(_72525_txt,_72538_kind)))) {
		return false;
	}
	_72567_t._field_kind=_72538_kind;
	_72567_t._field_id=_72549_id;
	(*_self_)._field_pos+=static_cast<jule::I64>(_72538_kind.len());
	return true;
}



inline jule::Bool _1ab0196cc_lex_basic_ops(_1ab0156d9_Lex* _self_,jule::Slice<jule::U8> _73632_txt,_1ab005531_Token& _73650_tok) {
	{
		auto &expr = _1ab00e419_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_1ae3e4048:;
		if (it != expr.end()) {
			_1ab00dda8_KindPair &_1ae3e419c_pair = *it;
			{
				if (_1ab019248_is_op(&(*_self_), _73632_txt,_1ae3e419c_pair._field_kind,_1ae3e419c_pair._field_id,_73650_tok)) {
					return true;
				}
			}
			_iter_next_1ae3e4048:;
			++it;
			goto _iter_begin_1ae3e4048;
		}
		_iter_end_1ae3e4048:;
	}
	return false;
}



inline jule::Bool _1ab019b61_lex_id(_1ab0156d9_Lex* _self_,jule::Slice<jule::U8>& _74626_txt,_1ab005531_Token& _74644_t) {
	jule::Str _74713_lex = _1ab016850_id(&(*_self_), _74626_txt);
	if (_74713_lex.empty()) {
		return false;
	}
	_74644_t._field_kind=_74713_lex;
	_74644_t._field_id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _1ab01a0e5_lex_num(_1ab0156d9_Lex* _self_,jule::Slice<jule::U8>& _75727_txt,_1ab005531_Token& _75745_t) {
	jule::Str _75813_lex = _1ab017620_num(&(*_self_), _75727_txt);
	if (_75813_lex.empty()) {
		return false;
	}
	_75745_t._field_kind=_75813_lex;
	_75745_t._field_id=static_cast<jule::U64>(6LLU);
	return true;
}



inline _1ab005531_Token _1ab01a3c0_token(_1ab0156d9_Lex* _self_) {
	_1ab005531_Token _77017_t = _1ab005531_Token((*_self_)._field_file,jule::I64(),jule::I64(),jule::Str(),static_cast<jule::U64>(0LLU));
	jule::Slice<jule::U8> _77213_txt = _1ab016b2a_resume(&(*_self_));
	if ((_77213_txt == nullptr)) {
		return _77017_t;
	}
	_77017_t._field_column=(*_self_)._field_column;
	_77017_t._field_row=(*_self_)._field_row;
	{
		
		if (_1ab01a0e5_lex_num(&(*_self_), _77213_txt,_77017_t)) {
			_case_begin_1ae3eb957:;
			{
				goto _match_end_1ae3ea59e;
			}
		}
		else if (_77213_txt[0LL] == '\'') {
			_case_begin_1ae3eabed:;
			{
				_77017_t._field_kind=_1ab018313_lex_rune(&(*_self_), _77213_txt);
				_77017_t._field_id=static_cast<jule::U64>(6LLU);
				return _77017_t;
			}
		}
		else if ((_77213_txt[0LL] == '\"') || (_77213_txt[0LL] == '`')) {
			_case_begin_1ae3eac64:;
			{
				_77017_t._field_kind=_1ab0185dd_lex_str(&(*_self_));
				_77017_t._field_id=static_cast<jule::U64>(6LLU);
				return _77017_t;
			}
		}
		else if (_1ab00ee75_bytes_has_prefix(_77213_txt,jule::Str("//", 2))) {
			_case_begin_1ae3eacca:;
			{
				_1ab016e49_lex_line_comment(&(*_self_), _77017_t);
				return _77017_t;
			}
		}
		else if (_1ab00ee75_bytes_has_prefix(_77213_txt,jule::Str("/*", 2))) {
			_case_begin_1ae3ead41:;
			{
				_1ab017268_lex_range_comment(&(*_self_), _77017_t);
				return _77017_t;
			}
		}
		else if (_1ab019248_is_op(&(*_self_), _77213_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_77017_t) || _1ab019248_is_op(&(*_self_), _77213_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_77017_t) || _1ab019248_is_op(&(*_self_), _77213_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_77017_t) || _1ab019248_is_op(&(*_self_), _77213_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_77017_t) || _1ab019248_is_op(&(*_self_), _77213_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_77017_t) || _1ab019248_is_op(&(*_self_), _77213_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_77017_t) || _1ab0196cc_lex_basic_ops(&(*_self_), _77213_txt,_77017_t)) {
			_case_begin_1ae3ec5d4:;
			{
				goto _match_end_1ae3ea59e;
			}
		}
		else if (_1ab019b61_lex_id(&(*_self_), _77213_txt,_77017_t)) {
			_case_begin_1ae3ec64a:;
			{
				{
					auto &expr = _1ab00e1d8_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_1ae405873:;
					if (it != expr.end()) {
						_1ab00dda8_KindPair &_1ae4059c7_pair = *it;
						{
							if (_1ae4059c7_pair._field_kind == _77017_t._field_kind) {
								_77017_t._field_id=_1ae4059c7_pair._field_id;
								goto _iter_end_1ae405873;
							}
						}
						_iter_next_1ae405873:;
						++it;
						goto _iter_begin_1ae405873;
					}
					_iter_end_1ae405873:;
				}
			}
		}
		else {
			_case_begin_1ae3eab87:;
			{
				jule::I32 _81718_r;
				jule::I64 _81721_sz;
				std::tie(_81718_r,_81721_sz) = _1a90ba61a_decode_rune(_77213_txt);
				_1ab015d5a_push_err(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>({jule::Any(_81718_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81721_sz;
				return _77017_t;
			}
		}
		_match_end_1ae3ea59e:;
	}
	(*_self_)._field_column+=static_cast<jule::I64>(_1a90bc70a_rune_count_str(_77017_t._field_kind));
	return _77017_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0156d9_Lex _Src) {
	_Stream << "Lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aae013a5_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "nodes:" << _Src._field_nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaea458a_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aada98ad_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aae7e367_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aade33db_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaecbc55_is_unsafe(_1aae087db_PtrTypeDecl* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1aae087db_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaece3ea_auto_sized(_1b4ae977b_ArrTypeDecl* _self_) {
	return ((*_self_)._field_size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1b4ae977b_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aadb4d4c_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aadb506c_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aadb56cc_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01aa52_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab022031_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab5554ba_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab5556da_PackageInfo _Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab557c92_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1ab558e3b_stop(_1ab558743_ScopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1ab559216_stopped(_1ab558743_ScopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1ab5594e1_finished(_1ab558743_ScopeParser* _self_) {
	return (*_self_)._field_pos >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_stmts.len()));
}



inline jule::Bool _1ab5597bb_is_last_st(_1ab558743_ScopeParser* _self_) {
	return ((*_self_)._field_pos + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_stmts.len()));
}



inline void _1ab559bb7_push_err(_1ab558743_ScopeParser* _self_,_1ab005531_Token _18927_token,jule::Str _18941_fmt) {
	_1ab58111c_push_err((*_self_)._field_p.ptr(), _18927_token,_18941_fmt,jule::Slice<jule::Any>());
}



inline void _1ab55a0b3_push_suggestion(_1ab558743_ScopeParser* _self_,jule::Str _19434_fmt,jule::Slice<jule::Any> _19447_args) {
	_1ab581518_push_suggestion((*_self_)._field_p.ptr(), _19434_fmt,_19447_args);
}



inline void _1ab55a3d2_insert_as_next(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _19838_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1ab557c92_Stmt>(_1ab557c92_Stmt(_19838_tokens,jule::Bool()));
}



inline jule::Ptr<_1ab557c92_Stmt> _1ab55a6ac_next(_1ab558743_ScopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1ab01d615_ScopeTree> _1ab55ab41_build_scope(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _20835_tokens,_1ab005531_Token _20856_end) {
	jule::Ptr<_1ab01d615_ScopeTree> _20917_s = _1ab556972_new_scope();
	_20917_s.get()._field_parent=(*_self_)._field_s;
	_20917_s.get()._field_end=_20856_end;
	_1ab558743_ScopeParser _21217_ssp = _1ab558743_ScopeParser((*_self_)._field_p,jule::Ptr<_1ab01d615_ScopeTree>(),jule::Slice<jule::Ptr<_1ab557c92_Stmt>>(),jule::I64());
	_1ab56b525_build(&_21217_ssp, _20835_tokens,_20917_s);
	return _20917_s;
}



inline jule::Any _1ab55aee8_build_var_st(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _21936_tokens) {
	jule::Ptr<_1ab01e6d2_VarDecl> _22017_v = _1ab58465e_build_var((*_self_)._field_p, _21936_tokens);
	_22017_v.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_22017_v);
}



inline jule::Any _1ab55b3a0_build_ret_st(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token> _22535_tokens) {
	jule::Ptr<_1ab01ea45_RetSt> _22617_st = jule::new_ptr<_1ab01ea45_RetSt>(_1ab01ea45_RetSt(_22535_tokens[0LL],jule::Ptr<_1aadb528c_Expr>()));
	if ((_22535_tokens.len() > 1LL)) {
		_22535_tokens=_22535_tokens.slice(1LL);
		_22617_st.get()._field_expr=_1ab5818c0_build_expr((*_self_)._field_p, _22535_tokens);
	}
	return jule::Any(_22617_st);
}



inline jule::Any _1ab55b757_build_while_next_iter(_1ab558743_ScopeParser* _self_,jule::Ptr<_1ab557c92_Stmt>& _23645_s) {
	jule::Ptr<_1ab020040_Iter> _23717_it = jule::new_ptr<_1ab020040_Iter>(_1ab020040_Iter(_23645_s.get()._field_tokens[0LL],jule::Any(),jule::Ptr<_1ab01d615_ScopeTree>()));
	jule::Slice<_1ab005531_Token> _24017_tokens = _23645_s.get()._field_tokens.slice(1LL);
	jule::Ptr<_1ab0205b2_WhileKind> _24117_kind = jule::new_ptr<_1ab0205b2_WhileKind>(_1ab0205b2_WhileKind());
	if ((_24017_tokens.len() > 0LL)) {
		_24117_kind.get()._field_expr=_1ab5818c0_build_expr((*_self_)._field_p, _24017_tokens);
	}
	if (_1ab5597bb_is_last_st(&(*_self_))) {
		_1ab559bb7_push_err(&(*_self_), _23717_it.get()._field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_24017_tokens=_1ab55a6ac_next(&(*_self_)).get()._field_tokens;
	jule::Slice<_1ab005531_Token> _25317_st_tokens = _1ab56cbec_get_block_expr(_24017_tokens);
	if ((_25317_st_tokens.len() > 0LL)) {
		jule::Ptr<_1ab557c92_Stmt> _25521_stmt = jule::new_ptr<_1ab557c92_Stmt>(_1ab557c92_Stmt(_25317_st_tokens,_23645_s.get()._field_terminated));
		_24117_kind.get()._field_next_token=_25317_st_tokens[0LL];
		_24117_kind.get()._field_next=_1ab56b129_build_st(&(*_self_), _25521_stmt);
	}
	jule::I64 _26317_i = _25317_st_tokens.len();
	jule::Slice<_1ab005531_Token> _26417_block_tokens = _1ab57d636_range(_26317_i,jule::Str("{", 1),jule::Str("}", 1),_24017_tokens);
	if ((_26417_block_tokens == nullptr)) {
		_1ab558e3b_stop(&(*_self_));
		_1ab559bb7_push_err(&(*_self_), _23717_it.get()._field_token,jule::Str("body is not exist", 17));
		_1ab55a0b3_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_26317_i < static_cast<jule::I64>(static_cast<jule::I64>(_24017_tokens.len()))) {
		_1ab559bb7_push_err(&(*_self_), _24017_tokens[_26317_i],jule::Str("invalid syntax", 14));
	}
	_23717_it.get()._field_scope=_1ab55ab41_build_scope(&(*_self_), _26417_block_tokens,_24017_tokens[(_26317_i - 1LL)]);
	_23717_it.get()._field_kind=jule::Any(_24117_kind);
	return jule::Any(_23717_it);
}



inline jule::Ptr<_1ab0205b2_WhileKind> _1ab55bb0e_build_while_iter_kind(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _28145_tokens) {
	return jule::new_ptr<_1ab0205b2_WhileKind>(_1ab0205b2_WhileKind(_1ab5818c0_build_expr((*_self_)._field_p, _28145_tokens),jule::Any(),_1ab005531_Token()));
}



inline jule::Slice<jule::Slice<_1ab005531_Token>> _1ab55c00a_get_range_kind_keys_tokens(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _28750_toks) {
	jule::Slice<jule::Slice<_1ab005531_Token>> _28818_vars;
	jule::Slice<_1a92a31c6_Log> _28824_errs;
	std::tie(_28818_vars,_28824_errs) = _1ab57de50_parts(_28750_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_28824_errs);
	return _28818_vars;
}



inline jule::Ptr<_1ab01e6d2_VarDecl> _1ab55c3a1_build_range_kind_key(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _29344_tokens) {
	if ((_29344_tokens.len() == 0LL)) {
		return nullptr;
	}
	jule::Ptr<_1ab01e6d2_VarDecl> _29717_key = jule::new_ptr<_1ab01e6d2_VarDecl>(_1ab01e6d2_VarDecl(jule::Ptr<_1ab01d615_ScopeTree>(),_29344_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>(),jule::Ptr<_1aae075dc_TypeDecl>(),jule::Ptr<_1aadb528c_Expr>()));
	if (_29717_key.get()._field_token._field_id == static_cast<jule::U64>(36LLU)) {
		_29717_key.get()._field_mutable=true;
		if ((_29344_tokens.len() == 1LL)) {
			_1ab559bb7_push_err(&(*_self_), _29717_key.get()._field_token,jule::Str("invalid syntax", 14));
		}
		_29717_key.get()._field_token=_29344_tokens[1LL];
	} else if ((_29344_tokens.len() > 1LL)) {
		_1ab559bb7_push_err(&(*_self_), _29344_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_29717_key.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1ab559bb7_push_err(&(*_self_), _29717_key.get()._field_token,jule::Str("invalid syntax", 14));
		_1ab55a0b3_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_29717_key.get()._field_ident=_29717_key.get()._field_token._field_kind;
	return _29717_key;
}



inline jule::Slice<jule::Ptr<_1ab01e6d2_VarDecl>> _1ab562609_build_range_kind_keys(_1ab558743_ScopeParser* _self_,jule::Slice<jule::Slice<_1ab005531_Token>>& _31845_parts) {
	jule::Slice<jule::Ptr<_1ab01e6d2_VarDecl>> _31917_keys = nullptr;
	{
		auto &expr = _31845_parts;
		auto it = expr.begin();
		_iter_begin_1ae506688:;
		if (it != expr.end()) {
			jule::Slice<_1ab005531_Token> _1ae5067ba_tokens = *it;
			{
				_31917_keys = jule::alloc_for_append(_31917_keys,1);_31917_keys.__push(_1ab55c3a1_build_range_kind_key(&(*_self_), _1ae5067ba_tokens));
			}
			_iter_next_1ae506688:;
			++it;
			goto _iter_begin_1ae506688;
		}
		_iter_end_1ae506688:;
	}
	return _31917_keys;
}



inline void _1ab562a05_setup_range_kind_keys_plain(_1ab558743_ScopeParser* _self_,jule::Ptr<_1ab020bcd_RangeKind>& _32651_rng,jule::Slice<_1ab005531_Token>& _32673_tokens) {
	jule::Slice<jule::Slice<_1ab005531_Token>> _32717_key_tokens = _1ab55c00a_get_range_kind_keys_tokens(&(*_self_), _32673_tokens);
	if ((_32717_key_tokens.len() == 0LL)) {
		return;
	}
	if ((_32717_key_tokens.len() > 2LL)) {
		_1ab559bb7_push_err(&(*_self_), _32651_rng.get()._field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ptr<_1ab01e6d2_VarDecl>> _33417_keys = _1ab562609_build_range_kind_keys(&(*_self_), _32717_key_tokens);
	_32651_rng.get()._field_key_a=_33417_keys[0LL];
	if ((_33417_keys.len() > 1LL)) {
		_32651_rng.get()._field_key_b=_33417_keys[1LL];
	}
}



inline void _1ab562e34_setup_range_kind_keys_explicit(_1ab558743_ScopeParser* _self_,jule::Ptr<_1ab020bcd_RangeKind>& _34154_rng,jule::Slice<_1ab005531_Token>& _34176_tokens) {
	jule::I64 _34217_i = 0LL;
	jule::Slice<_1ab005531_Token> _34317_rang = _1ab57d636_range(_34217_i,jule::Str("(", 1),jule::Str(")", 1),_34176_tokens);
	if (_34217_i < static_cast<jule::I64>(static_cast<jule::I64>(_34176_tokens.len()))) {
		_1ab559bb7_push_err(&(*_self_), _34154_rng.get()._field_in_token,jule::Str("invalid syntax", 14));
	}
	_1ab562a05_setup_range_kind_keys_plain(&(*_self_), _34154_rng,_34317_rang);
}



inline void _1ab56331e_setup_range_kind_keys(_1ab558743_ScopeParser* _self_,jule::Ptr<_1ab020bcd_RangeKind>& _35045_rng,jule::Slice<_1ab005531_Token>& _35067_tokens) {
	if (_35067_tokens[0LL]._field_id == static_cast<jule::U64>(3LLU)) {
		if ((_35067_tokens[0LL]._field_kind != jule::Str("(", 1))) {
			_1ab559bb7_push_err(&(*_self_), _35067_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		_1ab562e34_setup_range_kind_keys_explicit(&(*_self_), _35045_rng,_35067_tokens);
		return;
	}
	_1ab562a05_setup_range_kind_keys_plain(&(*_self_), _35045_rng,_35067_tokens);
}



inline jule::Ptr<_1ab020bcd_RangeKind> _1ab563880_build_range_iter_kind(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _36245_var_tokens,jule::Slice<_1ab005531_Token>& _36314_expr_tokens,_1ab005531_Token& _36341_in_token) {
	jule::Ptr<_1ab020bcd_RangeKind> _36417_rng = jule::new_ptr<_1ab020bcd_RangeKind>(_1ab020bcd_RangeKind(_36341_in_token,jule::Ptr<_1aadb528c_Expr>(),jule::Ptr<_1ab01e6d2_VarDecl>(),jule::Ptr<_1ab01e6d2_VarDecl>()));
	if ((_36314_expr_tokens.len() == 0LL)) {
		_1ab559bb7_push_err(&(*_self_), _36417_rng.get()._field_in_token,jule::Str("expression missing", 18));
		return _36417_rng;
	}
	_36417_rng.get()._field_expr=_1ab5818c0_build_expr((*_self_)._field_p, _36314_expr_tokens);
	if ((_36245_var_tokens.len() > 0LL)) {
		_1ab56331e_setup_range_kind_keys(&(*_self_), _36417_rng,_36245_var_tokens);
	}
	return _36417_rng;
}



inline jule::Any _1ab563d14_build_common_iter_kind(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _37846_tokens,_1ab005531_Token& _37864_err_tok) {
	jule::I64 _37917_brace_n = 0LL;
	{
		auto &expr = _37846_tokens;
		auto it = expr.begin();
		_iter_begin_1ae51627a:;
		if (it != expr.end()) {
			jule::I64 _1ae516324_i = it - expr.begin();
			_1ab005531_Token _1ae516599_tok = *it;
			{
				if (_1ae516599_tok._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1ae516599_tok._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ae517567:;
							{
								(_37917_brace_n)++;
								goto _iter_next_1ae51627a;
							}
						}
						else {
							_case_begin_1ae516e07:;
							{
								(_37917_brace_n)--;
							}
						}
						_match_end_1ae517237:;
					}
				}
				if ((_37917_brace_n != 0LL)) {
					goto _iter_next_1ae51627a;
				}
				{
					auto &_match_expr{ _1ae516599_tok._field_id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1ae516c3c:;
						{
							jule::Slice<_1ab005531_Token> _39725_decl_tokens = _37846_tokens.slice(0LL,_1ae516324_i);
							jule::Slice<_1ab005531_Token> _39825_expr_tokens = _37846_tokens.slice((_1ae516324_i + 1LL));
							return jule::Any(_1ab563880_build_range_iter_kind(&(*_self_), _39725_decl_tokens,_39825_expr_tokens,_1ae516599_tok));
						}
					}
					_match_end_1ae51805c:;
				}
			}
			_iter_next_1ae51627a:;
			++it;
			_1ae516324_i++;
			goto _iter_begin_1ae51627a;
		}
		_iter_end_1ae51627a:;
	}
	return jule::Any(_1ab55bb0e_build_while_iter_kind(&(*_self_), _37846_tokens));
}



inline jule::Any _1ab5641bb_build_common_iter(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token> _40540_tokens) {
	jule::Ptr<_1ab020040_Iter> _40617_it = jule::new_ptr<_1ab020040_Iter>(_1ab020040_Iter(_40540_tokens[0LL],jule::Any(),jule::Ptr<_1ab01d615_ScopeTree>()));
	_40540_tokens=_40540_tokens.slice(1LL);
	if ((_40540_tokens.len() == 0LL)) {
		_1ab558e3b_stop(&(*_self_));
		_1ab559bb7_push_err(&(*_self_), _40617_it.get()._field_token,jule::Str("body is not exist", 17));
		_1ab55a0b3_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	jule::Slice<_1ab005531_Token> _41617_expr_tokens = _1ab56cbec_get_block_expr(_40540_tokens);
	if ((_41617_expr_tokens.len() > 0LL)) {
		_40617_it.get()._field_kind=_1ab563d14_build_common_iter_kind(&(*_self_), _41617_expr_tokens,_40617_it.get()._field_token);
	}
	jule::I64 _42017_i = _41617_expr_tokens.len();
	jule::Slice<_1ab005531_Token> _42117_scope_tokens = _1ab57d636_range(_42017_i,jule::Str("{", 1),jule::Str("}", 1),_40540_tokens);
	if ((_42117_scope_tokens == nullptr)) {
		_1ab558e3b_stop(&(*_self_));
		_1ab559bb7_push_err(&(*_self_), _40617_it.get()._field_token,jule::Str("body is not exist", 17));
		_1ab55a0b3_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_42017_i < static_cast<jule::I64>(static_cast<jule::I64>(_40540_tokens.len()))) {
		_1ab559bb7_push_err(&(*_self_), _40540_tokens[_42017_i],jule::Str("invalid syntax", 14));
	}
	_40617_it.get()._field_scope=_1ab55ab41_build_scope(&(*_self_), _42117_scope_tokens,_40540_tokens[(_42017_i - 1LL)]);
	return jule::Any(_40617_it);
}



inline jule::Any _1ab564573_buid_iter_st(_1ab558743_ScopeParser* _self_,jule::Ptr<_1ab557c92_Stmt>& _43536_st) {
	if (_43536_st.get()._field_terminated) {
		return _1ab55b757_build_while_next_iter(&(*_self_), _43536_st);
	}
	return _1ab5641bb_build_common_iter(&(*_self_), _43536_st.get()._field_tokens);
}



inline jule::Any _1ab56492a_build_break_st(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _44238_tokens) {
	jule::Ptr<_1ab021041_BreakSt> _44317_brk = jule::new_ptr<_1ab021041_BreakSt>(_1ab021041_BreakSt(_44238_tokens[0LL],_1ab005531_Token()));
	if ((_44238_tokens.len() > 1LL)) {
		if (_44238_tokens[1LL]._field_id != static_cast<jule::U64>(2LLU)) {
			_1ab559bb7_push_err(&(*_self_), _44238_tokens[1LL],jule::Str("invalid syntax", 14));
			_1ab55a0b3_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44317_brk.get()._field_label=_44238_tokens[1LL];
			if ((_44238_tokens.len() > 2LL)) {
				_1ab559bb7_push_err(&(*_self_), _44238_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_44317_brk);
}



inline jule::Any _1ab564cd2_build_cont_st(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _46037_tokens) {
	jule::Ptr<_1ab0213a4_ContSt> _46117_cont = jule::new_ptr<_1ab0213a4_ContSt>(_1ab0213a4_ContSt(_46037_tokens[0LL],_1ab005531_Token()));
	if ((_46037_tokens.len() > 1LL)) {
		if (_46037_tokens[1LL]._field_id != static_cast<jule::U64>(2LLU)) {
			_1ab559bb7_push_err(&(*_self_), _46037_tokens[1LL],jule::Str("invalid syntax", 14));
			_1ab55a0b3_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46117_cont.get()._field_label=_46037_tokens[1LL];
			if ((_46037_tokens.len() > 2LL)) {
				_1ab559bb7_push_err(&(*_self_), _46037_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_46117_cont);
}



inline jule::Ptr<_1ab0217b1_If> _1ab565189_build_if(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _47832_tokens) {
	jule::Ptr<_1ab0217b1_If> _47917_model = jule::new_ptr<_1ab0217b1_If>(_1ab0217b1_If(_47832_tokens[0LL],jule::Ptr<_1aadb528c_Expr>(),jule::Ptr<_1ab01d615_ScopeTree>()));
	_47832_tokens=_47832_tokens.slice(1LL);
	jule::Slice<_1ab005531_Token> _48317_expr_tokens = _1ab56cbec_get_block_expr(_47832_tokens);
	jule::I64 _48417_i = 0LL;
	if ((_48317_expr_tokens.len() == 0LL)) {
		_1ab559bb7_push_err(&(*_self_), _47917_model.get()._field_token,jule::Str("expression missing", 18));
	} else {
		_48417_i=static_cast<jule::I64>(_48317_expr_tokens.len());
	}
	jule::Slice<_1ab005531_Token> _49017_scope_tokens = _1ab57d636_range(_48417_i,jule::Str("{", 1),jule::Str("}", 1),_47832_tokens);
	if ((_49017_scope_tokens == nullptr)) {
		_1ab558e3b_stop(&(*_self_));
		_1ab559bb7_push_err(&(*_self_), _47917_model.get()._field_token,jule::Str("body is not exist", 17));
		_1ab55a0b3_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1ab005531_Token _49717_end = _47832_tokens[(_48417_i - 1LL)];
	if (_48417_i < static_cast<jule::I64>(static_cast<jule::I64>(_47832_tokens.len()))) {
		if (_47832_tokens[_48417_i]._field_id == static_cast<jule::U64>(17LLU)) {
			_47832_tokens=_47832_tokens.slice(_48417_i);
		} else {
			_1ab559bb7_push_err(&(*_self_), _47832_tokens[_48417_i],jule::Str("invalid syntax", 14));
			_47832_tokens=nullptr;
		}
	}
	_47917_model.get()._field_expr=_1ab5818c0_build_expr((*_self_)._field_p, _48317_expr_tokens);
	_47917_model.get()._field_scope=_1ab55ab41_build_scope(&(*_self_), _49017_scope_tokens,_49717_end);
	return _47917_model;
}



inline jule::Ptr<_1ab021b24_Else> _1ab565541_build_else(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _51134_tokens) {
	jule::Ptr<_1ab021b24_Else> _51217_els = jule::new_ptr<_1ab021b24_Else>(_1ab021b24_Else(_51134_tokens[0LL],jule::Ptr<_1ab01d615_ScopeTree>()));
	_51134_tokens=_51134_tokens.slice(1LL);
	jule::I64 _51617_i = 0LL;
	jule::Slice<_1ab005531_Token> _51717_scope_tokens = _1ab57d636_range(_51617_i,jule::Str("{", 1),jule::Str("}", 1),_51134_tokens);
	if ((_51717_scope_tokens == nullptr)) {
		if (_51617_i < static_cast<jule::I64>(static_cast<jule::I64>(_51134_tokens.len()))) {
			_1ab559bb7_push_err(&(*_self_), _51217_els.get()._field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1ab558e3b_stop(&(*_self_));
			_1ab559bb7_push_err(&(*_self_), _51217_els.get()._field_token,jule::Str("body is not exist", 17));
			_1ab55a0b3_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	if (_51617_i < static_cast<jule::I64>(static_cast<jule::I64>(_51134_tokens.len()))) {
		_1ab559bb7_push_err(&(*_self_), _51134_tokens[_51617_i],jule::Str("invalid syntax", 14));
	}
	_51217_els.get()._field_scope=_1ab55ab41_build_scope(&(*_self_), _51717_scope_tokens,_51134_tokens[(_51617_i - 1LL)]);
	return _51217_els;
}



inline jule::Any _1ab5658e8_build_if_else_chain(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token> _53542_tokens) {
	jule::Ptr<_1ab022031_Conditional> _53617_chain = jule::new_ptr<_1ab022031_Conditional>(_1ab022031_Conditional(_1ab565189_build_if(&(*_self_), _53542_tokens),jule::Slice<jule::Ptr<_1ab0217b1_If>>(),jule::Ptr<_1ab021b24_Else>()));
	if ((_53617_chain.get()._field_head == nullptr)) {
		return jule::Any(nullptr);
	}
	while ((_53542_tokens.len() != 0LL)) {
		{
			if (_53542_tokens[0LL]._field_id != static_cast<jule::U64>(17LLU)) {
				goto _iter_end_1ae53bb74;
			}
			if ((_53542_tokens.len() > 1LL) && (_53542_tokens[1LL]._field_id == static_cast<jule::U64>(16LLU))) {
				_53542_tokens=_53542_tokens.slice(1LL);
				jule::Ptr<_1ab0217b1_If> _54825_elif = _1ab565189_build_if(&(*_self_), _53542_tokens);
				_53617_chain.get()._field_tail = jule::alloc_for_append(_53617_chain.get()._field_tail,1);_53617_chain.get()._field_tail.__push(_54825_elif);
				goto _iter_next_1ae53bb74;
			}
			_53617_chain.get()._field_default=_1ab565541_build_else(&(*_self_), _53542_tokens);
			goto _iter_end_1ae53bb74;
		}
	_iter_next_1ae53bb74:;
	}
	_iter_end_1ae53bb74:;
	return jule::Any(_53617_chain);
}



inline jule::Any _1ab565ca0_build_co_call_st(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token> _55839_tokens) {
	jule::Ptr<_1aadb606d_CoExpr> _55917_c = jule::new_ptr<_1aadb606d_CoExpr>(_1aadb606d_CoExpr(_55839_tokens[0LL],jule::Ptr<_1aadb528c_Expr>()));
	_55839_tokens=_55839_tokens.slice(1LL);
	_55917_c.get()._field_expr=_1ab5818c0_build_expr((*_self_)._field_p, _55839_tokens);
	return jule::Any(_55917_c);
}



inline jule::Any _1ab566157_build_goto_st(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _56737_tokens) {
	jule::Ptr<_1ab01cc85_GotoSt> _56817_gt = jule::new_ptr<_1ab01cc85_GotoSt>(_1ab01cc85_GotoSt(_56737_tokens[0LL],_1ab005531_Token()));
	if ((_56737_tokens.len() == 1LL)) {
		_1ab559bb7_push_err(&(*_self_), _56817_gt.get()._field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if ((_56737_tokens.len() > 2LL)) {
		_1ab559bb7_push_err(&(*_self_), _56737_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	_1ab005531_Token _57717_ident_token = _56737_tokens[1LL];
	if (_57717_ident_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1ab559bb7_push_err(&(*_self_), _57717_ident_token,jule::Str("invalid syntax", 14));
		_1ab55a0b3_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return jule::Any(_56817_gt);
	}
	_56817_gt.get()._field_label=_57717_ident_token;
	return jule::Any(_56817_gt);
}



inline jule::Any _1ab56650e_build_fall_st(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _58737_tokens) {
	jule::Ptr<_1ab01cea5_FallSt> _58817_fll = jule::new_ptr<_1ab01cea5_FallSt>(_1ab01cea5_FallSt(_58737_tokens[0LL]));
	if ((_58737_tokens.len() > 1LL)) {
		_1ab559bb7_push_err(&(*_self_), _58737_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_58817_fll);
}



inline jule::Any _1ab5668b6_build_type_alias_st(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _59743_tokens) {
	jule::Ptr<_1ab02262a_TypeAliasDecl> _59817_tad = _1ab5834a4_build_type_alias_decl((*_self_)._field_p, _59743_tokens);
	_59817_tad.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_59817_tad);
}



inline void _1ab566e6b_push_case_expr(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token> _60337_tokens,_1ab005531_Token _60358_token,jule::Bool _6049_type_match,jule::Slice<jule::Ptr<_1aadb528c_Expr>>& _60432_exprs) {
	if ((_60337_tokens.len() == 0LL)) {
		return;
	}
	if (_6049_type_match) {
		jule::I64 _61021_i = 0LL;
		jule::Ptr<_1aae075dc_TypeDecl> _61122_t;
		jule::Bool _61125_ok;
		std::tie(_61122_t,_61125_ok) = _1ab5830ec_build_type((*_self_)._field_p, _60337_tokens,(&(_61021_i)),true);
		if (_61125_ok) {
			_60432_exprs = jule::alloc_for_append(_60432_exprs,1);_60432_exprs.__push(jule::new_ptr<_1aadb528c_Expr>(_1aadb528c_Expr(_60337_tokens[0LL],_1ab005531_Token(),jule::Bool(),jule::Any(jule::Any(_61122_t)))));
			if (_61021_i < static_cast<jule::I64>(static_cast<jule::I64>(_60337_tokens.len()))) {
				_1ab559bb7_push_err(&(*_self_), _60337_tokens[_61021_i],jule::Str("invalid syntax", 14));
			}
		}
		return;
	}
	_60432_exprs = jule::alloc_for_append(_60432_exprs,1);_60432_exprs.__push(_1ab5818c0_build_expr((*_self_)._field_p, _60337_tokens));
}



inline jule::Slice<jule::Ptr<_1aadb528c_Expr>> _1ab567400_build_case_exprs(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _62640_tokens,jule::Bool _62657_type_match) {
	jule::Slice<jule::Ptr<_1aadb528c_Expr>> _62717_exprs = jule::Slice<jule::Ptr<_1aadb528c_Expr>>::alloc(0LL,1LL);
	jule::I64 _62917_brace_n = 0LL;
	jule::I64 _63017_j = 0LL;
	{
		auto &expr = _62640_tokens;
		auto it = expr.begin();
		_iter_begin_1ae551848:;
		if (it != expr.end()) {
			jule::I64 _1ae552492_i = it - expr.begin();
			_1ab005531_Token _1ae552706_tok = *it;
			{
				if (_1ae552706_tok._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1ae552706_tok._field_kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1ae5536d5:;
							{
								(_62917_brace_n)++;
							}
						}
						else {
							_case_begin_1ae553075:;
							{
								(_62917_brace_n)--;
							}
						}
						_match_end_1ae5533a5:;
					}
					goto _iter_next_1ae551848;
				} else if ((_62917_brace_n != 0LL)) {
					goto _iter_next_1ae551848;
				}
				{
					
					if ((_1ae552706_tok._field_id == static_cast<jule::U64>(7LLU)) && (_1ae552706_tok._field_kind == jule::Str("|", 1))) {
						_case_begin_1ae5541ca:;
						{
							jule::Slice<_1ab005531_Token> _64721_expr_tokens = _62640_tokens.slice(_63017_j,_1ae552492_i);
							if ((_64721_expr_tokens.len() == 0LL)) {
								_1ab559bb7_push_err(&(*_self_), _1ae552706_tok,jule::Str("expression missing", 18));
							} else {
								_1ab566e6b_push_case_expr(&(*_self_), _62640_tokens.slice(_63017_j,_1ae552492_i),_1ae552706_tok,_62657_type_match,_62717_exprs);
							}
							_63017_j=static_cast<jule::I64>((_1ae552492_i + 1LL));
						}
					}
					else if (_1ae552706_tok._field_id == static_cast<jule::U64>(11LLU)) {
						_case_begin_1ae5542c9:;
						{
							_1ab566e6b_push_case_expr(&(*_self_), _62640_tokens.slice(_63017_j,_1ae552492_i),_1ae552706_tok,_62657_type_match,_62717_exprs);
							_62640_tokens=_62640_tokens.slice((_1ae552492_i + 1LL));
							return _62717_exprs;
						}
					}
					_match_end_1ae553927:;
				}
			}
			_iter_next_1ae551848:;
			++it;
			_1ae552492_i++;
			goto _iter_begin_1ae551848;
		}
		_iter_end_1ae551848:;
	}
	_1ab559bb7_push_err(&(*_self_), _62640_tokens[0LL],jule::Str("invalid syntax", 14));
	_62640_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1ab01d615_ScopeTree> _1ab5677a7_build_case_scope(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _66540_tokens) {
	jule::I64 _66617_n = 0LL;
	for (;;) {
		{
			jule::I64 _66821_i = 0LL;
			jule::Slice<_1ab005531_Token> _66922_next;
			std::tie(_66922_next,std::ignore) = _1ab5578eb_skip_st(_66821_i,_66540_tokens.slice(_66617_n));
			if ((_66922_next.len() == 0LL)) {
				goto _iter_end_1ae559444;
			}
			_1ab005531_Token _67317_tok = _66922_next[0LL];
			if ((_67317_tok._field_id != static_cast<jule::U64>(7LLU)) || (_67317_tok._field_kind != jule::Str("|", 1))) {
				_66617_n+=_66821_i;
				goto _iter_next_1ae559444;
			}
			jule::Slice<_1ab005531_Token> _67821_scope_tokens = _66540_tokens.slice(0LL,_66617_n);
			jule::Ptr<_1ab01d615_ScopeTree> _67921_scope = _1ab55ab41_build_scope(&(*_self_), _67821_scope_tokens,_66540_tokens[_66617_n]);
			_66540_tokens=_66540_tokens.slice(_66617_n);
			return _67921_scope;
		}
	_iter_next_1ae559444:;
	}
	_iter_end_1ae559444:;
	_1ab005531_Token _68317_end = _1ab005531_Token();
	if ((_66540_tokens.len() > 0LL)) {
		_68317_end=_66540_tokens[(_66540_tokens.len() - 1LL)];
	}
	jule::Ptr<_1ab01d615_ScopeTree> _68717_scope = _1ab55ab41_build_scope(&(*_self_), _66540_tokens,_68317_end);
	_66540_tokens=nullptr;
	return _68717_scope;
}



inline std::tuple<jule::Ptr<_1ab022a37_Case>,jule::Bool> _1ab567c3b_build_case(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _69234_tokens,jule::Bool _69251_type_match) {
	jule::Ptr<_1ab022a37_Case> _69317_c = jule::new_ptr<_1ab022a37_Case>(_1ab022a37_Case(_69234_tokens[0LL],jule::Ptr<_1ab01d615_ScopeTree>(),jule::Slice<jule::Ptr<_1aadb528c_Expr>>()));
	_69234_tokens=_69234_tokens.slice(1LL);
	_69317_c.get()._field_exprs=_1ab567400_build_case_exprs(&(*_self_), _69234_tokens,_69251_type_match);
	_69317_c.get()._field_scope=_1ab5677a7_build_case_scope(&(*_self_), _69234_tokens);
	jule::Bool _69913_is_default = (_69317_c.get()._field_exprs.len() == 0LL);
	return std::make_tuple(_69317_c,_69913_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_1ab022a37_Case>>,jule::Ptr<_1ab021b24_Else>> _1ab5681c0_build_cases(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token> _70334_tokens,jule::Bool _70351_type_match) {
	jule::Slice<jule::Ptr<_1ab022a37_Case>> _70417_cases = nullptr;
	jule::Ptr<_1ab021b24_Else> _70517_def = nullptr;
	jule::Bool _70617_def_not_last = false;
	while ((_70334_tokens.len() > 0LL)) {
		{
			_1ab005531_Token _70821_tok = _70334_tokens[0LL];
			if ((_70821_tok._field_id != static_cast<jule::U64>(7LLU)) || (_70821_tok._field_kind != jule::Str("|", 1))) {
				_1ab559bb7_push_err(&(*_self_), _70821_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1ae563629;
			}
			jule::Ptr<_1ab022a37_Case> _71322_c;
			jule::Bool _71325_is_default;
			std::tie(_71322_c,_71325_is_default) = _1ab567c3b_build_case(&(*_self_), _70334_tokens,_70351_type_match);
			if (_71325_is_default) {
				_71322_c.get()._field_token=_70821_tok;
				if ((_70517_def == nullptr)) {
					_70517_def=jule::new_ptr<_1ab021b24_Else>(_1ab021b24_Else(_71322_c.get()._field_token,_71322_c.get()._field_scope));
				} else {
					_1ab559bb7_push_err(&(*_self_), _70821_tok,jule::Str("invalid syntax", 14));
				}
			} else {
				_70617_def_not_last=_70617_def_not_last || (_70517_def != nullptr);
				_70417_cases = jule::alloc_for_append(_70417_cases,1);_70417_cases.__push(_71322_c);
			}
		}
	_iter_next_1ae563629:;
	}
	_iter_end_1ae563629:;
	if (_70617_def_not_last) {
		_1ab559bb7_push_err(&(*_self_), _70517_def.get()._field_token,jule::Str("default case should be last case", 32));
	}
	return std::make_tuple(_70417_cases,_70517_def);
}



inline jule::Ptr<_1ab023131_MatchCase> _1ab568577_build_match_case(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token> _73739_tokens) {
	jule::Ptr<_1ab023131_MatchCase> _73817_m = jule::new_ptr<_1ab023131_MatchCase>(_1ab023131_MatchCase(_73739_tokens[0LL],_1ab005531_Token(),jule::Bool(),jule::Ptr<_1aadb528c_Expr>(),jule::Slice<jule::Ptr<_1ab022a37_Case>>(),jule::Ptr<_1ab021b24_Else>()));
	_73739_tokens=_73739_tokens.slice(1LL);
	if ((_73739_tokens.len() > 0LL) && (_73739_tokens[0LL]._field_id == static_cast<jule::U64>(10LLU))) {
		_73817_m.get()._field_type_match=true;
		_73739_tokens=_73739_tokens.slice(1LL);
	}
	jule::Slice<_1ab005531_Token> _74817_expr_tokens = _1ab56cbec_get_block_expr(_73739_tokens);
	if ((_74817_expr_tokens.len() > 0LL)) {
		_73817_m.get()._field_expr=_1ab5818c0_build_expr((*_self_)._field_p, _74817_expr_tokens);
	} else if (_73817_m.get()._field_type_match) {
		_1ab559bb7_push_err(&(*_self_), _73817_m.get()._field_token,jule::Str("expression missing", 18));
	}
	jule::I64 _75517_i = _74817_expr_tokens.len();
	jule::Slice<_1ab005531_Token> _75617_block_toks = _1ab57d636_range(_75517_i,jule::Str("{", 1),jule::Str("}", 1),_73739_tokens);
	if ((_75617_block_toks == nullptr)) {
		_1ab558e3b_stop(&(*_self_));
		_1ab559bb7_push_err(&(*_self_), _73817_m.get()._field_token,jule::Str("body is not exist", 17));
		_1ab55a0b3_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if (_75517_i < static_cast<jule::I64>(static_cast<jule::I64>(_73739_tokens.len()))) {
		_1ab559bb7_push_err(&(*_self_), _73739_tokens[_75517_i],jule::Str("invalid syntax", 14));
	}
	_73817_m.get()._field_end=_73739_tokens[(_75517_i - 1LL)];
	std::tie(_73817_m.get()._field_cases,_73817_m.get()._field_default) = _1ab5681c0_build_cases(&(*_self_), _75617_block_toks,_73817_m.get()._field_type_match);
	return _73817_m;
}



inline jule::Ptr<_1ab01d615_ScopeTree> _1ab56892e_build_scope_st(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token> _77037_tokens) {
	jule::Bool _77117_is_unsafe = false;
	jule::Bool _77217_is_deferred = false;
	_1ab005531_Token _77317_token = _77037_tokens[0LL];
	if (_77317_token._field_id == static_cast<jule::U64>(35LLU)) {
		_77117_is_unsafe=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if ((_77037_tokens.len() == 0LL)) {
			_1ab559bb7_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		_77317_token=_77037_tokens[0LL];
		if (_77317_token._field_id == static_cast<jule::U64>(37LLU)) {
			_77217_is_deferred=true;
			_77037_tokens=_77037_tokens.slice(1LL);
			if ((_77037_tokens.len() == 0LL)) {
				_1ab559bb7_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
	} else if (_77317_token._field_id == static_cast<jule::U64>(37LLU)) {
		_77217_is_deferred=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if ((_77037_tokens.len() == 0LL)) {
			_1ab559bb7_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
	}
	jule::I64 _79917_i = 0LL;
	jule::Slice<_1ab005531_Token> _80017_scope_tokens = _1ab57d636_range(_79917_i,jule::Str("{", 1),jule::Str("}", 1),_77037_tokens);
	if ((_80017_scope_tokens == nullptr)) {
		_1ab559bb7_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if (_79917_i < static_cast<jule::I64>(static_cast<jule::I64>(_77037_tokens.len()))) {
		_1ab559bb7_push_err(&(*_self_), _77037_tokens[_79917_i],jule::Str("invalid syntax", 14));
	}
	jule::Ptr<_1ab01d615_ScopeTree> _80717_scope = _1ab55ab41_build_scope(&(*_self_), _80017_scope_tokens,_77037_tokens[(_79917_i - 1LL)]);
	_80717_scope.get()._field_unsafety=_77117_is_unsafe;
	_80717_scope.get()._field_deferred=_77217_is_deferred;
	return _80717_scope;
}



inline jule::Ptr<_1ab01ca65_LabelSt> _1ab568cd6_build_label_st(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _81338_tokens) {
	jule::Ptr<_1ab01ca65_LabelSt> _81417_lbl = jule::new_ptr<_1ab01ca65_LabelSt>(_1ab01ca65_LabelSt(_81338_tokens[0LL],_81338_tokens[0LL]._field_kind));
	if ((_81338_tokens.len() > 2LL)) {
		_81338_tokens=_81338_tokens.slice(2LL);
		_1ab55a3d2_insert_as_next(&(*_self_), _81338_tokens);
	}
	return _81417_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1ab56918d_build_id_st(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _82835_tokens) {
	jule::Bool _82864_ok = jule::Bool();
	if ((_82835_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_82864_ok);
	}
	_1ab005531_Token _83317_token = _82835_tokens[1LL];
	{
		auto &_match_expr{ _83317_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1ae57e1c2:;
			{
				_82864_ok = true;
				return std::make_tuple(jule::Any(_1ab568cd6_build_label_st(&(*_self_), _82835_tokens)),_82864_ok);
			}
		}
		_match_end_1ae57ee4d:;
	}
	return std::make_tuple(jule::Any(),_82864_ok);
}



inline jule::Ptr<_1ab57b38c_AssignInfo> _1ab569545_build_assign_info(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _84241_tokens) {
	jule::Ptr<_1ab57b38c_AssignInfo> _84317_info = jule::new_ptr<_1ab57b38c_AssignInfo>(_1ab57b38c_AssignInfo(jule::Slice<_1ab005531_Token>(),jule::Slice<_1ab005531_Token>(),_1ab005531_Token(),true));
	jule::I64 _84617_brace_n = 0LL;
	{
		auto &expr = _84241_tokens;
		auto it = expr.begin();
		_iter_begin_1ae58223b:;
		if (it != expr.end()) {
			jule::I64 _1ae5822d5_i = it - expr.begin();
			_1ab005531_Token _1ae58255a_token = *it;
			{
				if (_1ae58255a_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1ae58255a_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ae58356c:;
							{
								(_84617_brace_n)++;
							}
						}
						else {
							_case_begin_1ae582e0c:;
							{
								(_84617_brace_n)--;
							}
						}
						_match_end_1ae58323c:;
					}
				}
				{
					
					if ((_84617_brace_n > 0LL)) {
						_case_begin_1ae5837c0:;
						{
							goto _iter_next_1ae58223b;
						}
					}
					else if (_1ae58255a_token._field_id != static_cast<jule::U64>(7LLU)) {
						_case_begin_1ae583b66:;
						{
							goto _iter_next_1ae58223b;
						}
					}
					else if ((!(_1ab00aadb_is_assign_op(_1ae58255a_token._field_kind)))) {
						_case_begin_1ae583bdd:;
						{
							goto _iter_next_1ae58223b;
						}
					}
					_match_end_1ae583e41:;
				}
				_84317_info.get()._field_l=_84241_tokens.slice(0LL,_1ae5822d5_i);
				if ((_84317_info.get()._field_l.len() == 0LL)) {
					_84317_info.get()._field_ok=false;
				}
				_84317_info.get()._field_setter=_1ae58255a_token;
				if ((_1ae5822d5_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_84241_tokens.len()))) {
					_84317_info.get()._field_r=nullptr;
					_84317_info.get()._field_ok=_1ab00a7cd_is_postfix_op(_84317_info.get()._field_setter._field_kind);
					goto _iter_end_1ae58223b;
				}
				_84317_info.get()._field_r=_84241_tokens.slice((_1ae5822d5_i + 1LL));
				if (_1ab00a7cd_is_postfix_op(_84317_info.get()._field_setter._field_kind)) {
					if ((_84317_info.get()._field_r.len() > 0LL)) {
						_1ab559bb7_push_err(&(*_self_), _84317_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84317_info.get()._field_r=nullptr;
					}
				}
				goto _iter_end_1ae58223b;
			}
			_iter_next_1ae58223b:;
			++it;
			_1ae5822d5_i++;
			goto _iter_begin_1ae58223b;
		}
		_iter_end_1ae58223b:;
	}
	return _84317_info;
}



inline jule::Ptr<_1ab01d1c5_AssignLeft> _1ab5698ec_build_assign_l(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _89038_tokens) {
	jule::Ptr<_1ab01d1c5_AssignLeft> _89117_l = jule::new_ptr<_1ab01d1c5_AssignLeft>(_1ab01d1c5_AssignLeft(_89038_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ptr<_1aadb528c_Expr>()));
	if (_89038_tokens[0LL]._field_id == static_cast<jule::U64>(2LLU)) {
		_89117_l.get()._field_ident=_89117_l.get()._field_token._field_kind;
	}
	_89117_l.get()._field_expr=_1ab5818c0_build_expr((*_self_)._field_p, _89038_tokens);
	return _89117_l;
}



inline jule::Slice<jule::Ptr<_1ab01d1c5_AssignLeft>> _1ab569ca4_build_assign_ls(_1ab558743_ScopeParser* _self_,jule::Slice<jule::Slice<_1ab005531_Token>>& _90339_parts) {
	jule::Slice<jule::Ptr<_1ab01d1c5_AssignLeft>> _90417_lefts = nullptr;
	{
		auto &expr = _90339_parts;
		auto it = expr.begin();
		_iter_begin_1ae58c620:;
		if (it != expr.end()) {
			jule::Slice<_1ab005531_Token> _1ae58c752_part = *it;
			{
				jule::Ptr<_1ab01d1c5_AssignLeft> _90621_l = _1ab5698ec_build_assign_l(&(*_self_), _1ae58c752_part);
				_90417_lefts = jule::alloc_for_append(_90417_lefts,1);_90417_lefts.__push(_90621_l);
			}
			_iter_next_1ae58c620:;
			++it;
			goto _iter_begin_1ae58c620;
		}
		_iter_end_1ae58c620:;
	}
	return _90417_lefts;
}



inline std::tuple<jule::Ptr<_1ab01d3e5_AssignSt>,jule::Bool> _1ab56a15b_build_plain_assign(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _91342_tokens) {
	jule::Ptr<_1ab57b38c_AssignInfo> _91417_info = _1ab569545_build_assign_info(&(*_self_), _91342_tokens);
	if ((!(_91417_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_1ab01d3e5_AssignSt> _91917_assign = jule::new_ptr<_1ab01d3e5_AssignSt>(_1ab01d3e5_AssignSt(jule::Bool(),_91417_info.get()._field_setter,jule::Slice<jule::Ptr<_1ab01d1c5_AssignLeft>>(),jule::Ptr<_1aadb528c_Expr>()));
	jule::Slice<jule::Slice<_1ab005531_Token>> _92318_parts;
	jule::Slice<_1a92a31c6_Log> _92325_errs;
	std::tie(_92318_parts,_92325_errs) = _1ab57de50_parts(_91417_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_92325_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92325_errs);
		return std::make_tuple(nullptr,false);
	}
	_91917_assign.get()._field_left=_1ab569ca4_build_assign_ls(&(*_self_), _92318_parts);
	if ((_91417_info.get()._field_r != nullptr)) {
		_91917_assign.get()._field_right=_1ab5818c0_build_expr((*_self_)._field_p, _91417_info.get()._field_r);
	}
	return std::make_tuple(_91917_assign,true);
}



inline std::tuple<jule::Ptr<_1ab01d3e5_AssignSt>,jule::Bool> _1ab56a513_build_decl_assign(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token> _93740_tokens) {
	if ((_93740_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	}
	_93740_tokens=_93740_tokens.slice(1LL);
	_1ab005531_Token _94317_token = _93740_tokens[0LL];
	if ((_94317_token._field_id != static_cast<jule::U64>(3LLU)) || (_94317_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_1ab01d3e5_AssignSt> _94817_assign = jule::new_ptr<_1ab01d3e5_AssignSt>(_1ab01d3e5_AssignSt(true,_1ab005531_Token(),jule::Slice<jule::Ptr<_1ab01d1c5_AssignLeft>>(),jule::Ptr<_1aadb528c_Expr>()));
	jule::I64 _95217_i = 0LL;
	jule::Slice<_1ab005531_Token> _95317_rang = _1ab57d636_range(_95217_i,jule::Str("(", 1),jule::Str(")", 1),_93740_tokens);
	if ((_95317_rang == nullptr)) {
		_1ab559bb7_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if ((_95217_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_93740_tokens.len()))) {
		_94817_assign.get()._field_setter=_93740_tokens[_95217_i];
		(_95217_i)++;
		jule::Slice<_1ab005531_Token> _96021_expr_tokens = _93740_tokens.slice(_95217_i);
		_94817_assign.get()._field_right=_1ab5818c0_build_expr((*_self_)._field_p, _96021_expr_tokens);
	}
	jule::Slice<jule::Slice<_1ab005531_Token>> _96518_parts;
	jule::Slice<_1a92a31c6_Log> _96525_errs;
	std::tie(_96518_parts,_96525_errs) = _1ab57de50_parts(_95317_rang,static_cast<jule::U64>(8LLU),true);
	if ((_96525_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96525_errs);
		return std::make_tuple(nullptr,false);
	}
	{
		auto &expr = _96518_parts;
		auto it = expr.begin();
		_iter_begin_1ae59b123:;
		if (it != expr.end()) {
			jule::Slice<_1ab005531_Token> _1ae59b475_part = *it;
			{
				jule::Bool _97221_is_mut = false;
				jule::Bool _97321_is_ref = false;
				_94317_token=_1ae59b475_part[0LL];
				if (_94317_token._field_id == static_cast<jule::U64>(36LLU)) {
					_97221_is_mut=true;
					_1ae59b475_part=_1ae59b475_part.slice(1LL);
					if ((_1ae59b475_part.len() == 0LL)) {
						_1ab559bb7_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1ae59b123;
					}
				}
				if ((_1ae59b475_part[0LL]._field_id == static_cast<jule::U64>(7LLU)) && (_1ae59b475_part[0LL]._field_kind == jule::Str("&", 1))) {
					_97321_is_ref=true;
					_1ae59b475_part=_1ae59b475_part.slice(1LL);
					if ((_1ae59b475_part.len() == 0LL)) {
						_1ab559bb7_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1ae59b123;
					}
				}
				if (((_1ae59b475_part[0LL]._field_id != static_cast<jule::U64>(2LLU)) && (_1ae59b475_part[0LL]._field_id != static_cast<jule::U64>(3LLU))) && (_1ae59b475_part[0LL]._field_kind != jule::Str("(", 1))) {
					_1ab559bb7_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1ae59b123;
				}
				jule::Ptr<_1ab01d1c5_AssignLeft> _100121_l = _1ab5698ec_build_assign_l(&(*_self_), _1ae59b475_part);
				_100121_l.get()._field_mutable=_97221_is_mut;
				_100121_l.get()._field_reference=_97321_is_ref;
				_94817_assign.get()._field_left = jule::alloc_for_append(_94817_assign.get()._field_left,1);_94817_assign.get()._field_left.__push(_100121_l);
			}
			_iter_next_1ae59b123:;
			++it;
			goto _iter_begin_1ae59b123;
		}
		_iter_end_1ae59b123:;
	}
	return std::make_tuple(_94817_assign,true);
}



inline std::tuple<jule::Ptr<_1ab01d3e5_AssignSt>,jule::Bool> _1ab56a8ba_build_assign_st(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _101039_tokens) {
	jule::Ptr<_1ab01d3e5_AssignSt> _101058_st = jule::Ptr<_1ab01d3e5_AssignSt>();
	jule::Bool _101073_ok = jule::Bool();
	if ((!(_1ab57b799_check_assign_tokens(_101039_tokens)))) {
		_101058_st = nullptr;
		_101073_ok = false;
		return std::make_tuple(_101058_st,_101073_ok);
	}
	{
		auto &_match_expr{ _101039_tokens[0LL]._field_id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ae5a66b1:;
			{
				std::tie(_101058_st,_101073_ok) = _1ab56a513_build_decl_assign(&(*_self_), _101039_tokens);
			}
		}
		else {
			_case_begin_1ae5a5627:;
			{
				std::tie(_101058_st,_101073_ok) = _1ab56a15b_build_plain_assign(&(*_self_), _101039_tokens);
			}
		}
		_match_end_1ae5a5d31:;
	}
	return std::make_tuple(_101058_st,_101073_ok);
}



inline jule::Any _1ab56ac72_build_use_expr(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _102538_tokens) {
	if ((_102538_tokens.len() == 1LL)) {
		_1ab559bb7_push_err(&(*_self_), _102538_tokens[0LL],jule::Str("expression missing", 18));
		return jule::Any(nullptr);
	}
	jule::Ptr<_1aadb54ac_UseExpr> _103117_ue = jule::new_ptr<_1aadb54ac_UseExpr>(_1aadb54ac_UseExpr(_102538_tokens[0LL],jule::Ptr<_1aadb528c_Expr>()));
	_102538_tokens=_102538_tokens.slice(1LL);
	_103117_ue.get()._field_expr=_1ab5818c0_build_expr((*_self_)._field_p, _102538_tokens);
	return jule::Any(_103117_ue);
}



inline jule::Any _1ab56b129_build_st(_1ab558743_ScopeParser* _self_,jule::Ptr<_1ab557c92_Stmt>& _104032_st) {
	_1ab005531_Token _104117_token = _104032_st.get()._field_tokens[0LL];
	if (_104117_token._field_id == static_cast<jule::U64>(2LLU)) {
		jule::Any _104322_s;
		jule::Bool _104325_ok;
		std::tie(_104322_s,_104325_ok) = _1ab56918d_build_id_st(&(*_self_), _104032_st.get()._field_tokens);
		if (_104325_ok) {
			return _104322_s;
		}
	}
	jule::Ptr<_1ab01d3e5_AssignSt> _104918_s;
	jule::Bool _104921_ok;
	std::tie(_104918_s,_104921_ok) = _1ab56a8ba_build_assign_st(&(*_self_), _104032_st.get()._field_tokens);
	if (_104921_ok) {
		return jule::Any(_104918_s);
	}
	{
		auto &_match_expr{ _104117_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ae5ac024:;
			{
				return _1ab56ac72_build_use_expr(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1ae5ac970:;
			{
				return _1ab55aee8_build_var_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1ae5ac4a8:;
			{
				return _1ab55b3a0_build_ret_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1ae5ac51e:;
			{
				return _1ab564573_buid_iter_st(&(*_self_), _104032_st);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1ae5ac585:;
			{
				return _1ab56492a_build_break_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1ae5acb90:;
			{
				return _1ab564cd2_build_cont_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1ae5acc06:;
			{
				return _1ab5658e8_build_if_else_chain(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1ae5acc6c:;
			{
				return _1ab565ca0_build_co_call_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1ae5accd3:;
			{
				return _1ab566157_build_goto_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1ae5acd49:;
			{
				return _1ab56650e_build_fall_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1ae5acdb0:;
			{
				return _1ab5668b6_build_type_alias_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ae5ace37:;
			{
				return jule::Any(_1ab568577_build_match_case(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1ae5aceae:;
			{
				return jule::Any(_1ab56892e_build_scope_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ae5ad036:;
			{
				if ((_104117_token._field_kind == jule::Str("{", 1))) {
					return jule::Any(_1ab56892e_build_scope_st(&(*_self_), _104032_st.get()._field_tokens));
				}
			}
		}
		_match_end_1ae5ac6a6:;
	}
	jule::Ptr<_1aadb528c_Expr> _109017_expr = _1ab5818c0_build_expr((*_self_)._field_p, _104032_st.get()._field_tokens);
	if ((_109017_expr != nullptr)) {
		return jule::Any(_109017_expr);
	}
	_1ab559bb7_push_err(&(*_self_), _104117_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



inline void _1ab56b525_build(_1ab558743_ScopeParser* _self_,jule::Slice<_1ab005531_Token>& _109829_tokens,jule::Ptr<_1ab01d615_ScopeTree>& _109851_s) {
	if ((_109851_s == nullptr)) {
		return;
	}
	(*_self_)._field_stmts=_1ab55819e_split_stmts(_109829_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_109851_s;
	while ((!(_1ab5597bb_is_last_st(&(*_self_)))) && (!(_1ab5594e1_finished(&(*_self_))))) {
		{
			jule::Ptr<_1ab557c92_Stmt> _110721_st = _1ab55a6ac_next(&(*_self_));
			jule::Any _110821_data = _1ab56b129_build_st(&(*_self_), _110721_st);
			if (_110821_data != jule::Any(jule::Any(nullptr))) {
				(*_self_)._field_s.get()._field_stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_stmts,1);(*_self_)._field_s.get()._field_stmts.__push(_1aae02ad2_Node(_110721_st.get()._field_tokens[0LL],_110821_data));
			}
			if (_1ab559216_stopped(&(*_self_))) {
				goto _iter_end_1ae5b87b1;
			}
		}
	_iter_next_1ae5b87b1:;
	}
	_iter_end_1ae5b87b1:;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab558743_ScopeParser _Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab56c4c1_CallData _Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1ab56e627_push_err(_1ab56dc20_ExprBuilder* _self_,_1ab005531_Token _22327_token,jule::Str _22341_fmt,jule::Slice<jule::Any> _22354_args) {
	_1ab58111c_push_err((*_self_)._field_p.ptr(), _22327_token,_22341_fmt,_22354_args);
}



inline void _1ab56ea23_push_suggestion(_1ab56dc20_ExprBuilder* _self_,jule::Str _22834_fmt,jule::Slice<jule::Any> _22847_args) {
	_1ab581518_push_suggestion((*_self_)._field_p.ptr(), _22834_fmt,_22847_args);
}



inline jule::Ptr<_1aadb56cc_TupleExpr> _1ab56edca_build_tuple(_1ab56dc20_ExprBuilder* _self_,jule::Slice<jule::Slice<_1ab005531_Token>>& _23235_parts) {
	jule::Ptr<_1aadb56cc_TupleExpr> _23317_tuple = jule::new_ptr<_1aadb56cc_TupleExpr>(_1aadb56cc_TupleExpr(jule::Slice<jule::Ptr<_1aadb528c_Expr>>::alloc(0LL,static_cast<jule::I64>(_23235_parts.len()))));
	{
		auto &expr = _23235_parts;
		auto it = expr.begin();
		_iter_begin_1ae5c0312:;
		if (it != expr.end()) {
			jule::Slice<_1ab005531_Token> _1ae5c09d8_part = *it;
			{
				_23317_tuple.get()._field_expr = jule::alloc_for_append(_23317_tuple.get()._field_expr,1);_23317_tuple.get()._field_expr.__push(_1ab57a6aa_build_from_tokens(&(*_self_), _1ae5c09d8_part));
			}
			_iter_next_1ae5c0312:;
			++it;
			goto _iter_begin_1ae5c0312;
		}
		_iter_end_1ae5c0312:;
	}
	return _23317_tuple;
}



inline jule::Ptr<_1aadb5b2d_LitExpr> _1ab570282_build_lit(_1ab56dc20_ExprBuilder* _self_,_1ab005531_Token _24228_token) {
	return jule::new_ptr<_1aadb5b2d_LitExpr>(_1aadb5b2d_LitExpr(_24228_token,_24228_token._field_kind));
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab570639_build_primitive_type(_1ab56dc20_ExprBuilder* _self_,_1ab005531_Token& _24940_token) {
	return _1ab5940b9_build_prim_type(_24940_token);
}



inline jule::Any _1ab5709e1_build_single(_1ab56dc20_ExprBuilder* _self_,_1ab005531_Token _25335_token) {
	{
		auto &_match_expr{ _25335_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1ae5c3a0d:;
			{
				return jule::Any(_1ab570282_build_lit(&(*_self_), _25335_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ae5c3d3d:;
			{
				if ((_25335_token._field_kind == jule::Str("...", 3))) {
					return jule::Any(jule::new_ptr<_1aadb66cd_VariadicExpr>(_1aadb66cd_VariadicExpr(_25335_token,jule::Ptr<_1aadb528c_Expr>())));
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(28LLU) || _match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1ae5c3da4:;
			{
				return jule::Any(_1ab56d66a_build_ident_expr(_25335_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ae5c3e2b:;
			{
				return jule::Any(_1ab570639_build_primitive_type(&(*_self_), _25335_token));
			}
		}
		_match_end_1ae5c3c72:;
	}
	_1ab56e627_push_err(&(*_self_), _25335_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1aadb628d_IdentExpr> _1ab570d98_build_cpp_linked_ident(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _27446_tokens) {
	if (_27446_tokens[0LL]._field_id != static_cast<jule::U64>(31LLU)) {
		return nullptr;
	} else if (_27446_tokens[1LL]._field_id != static_cast<jule::U64>(20LLU)) {
		_1ab56e627_push_err(&(*_self_), _27446_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ab56ea23_push_suggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1ab005531_Token _28217_token = _27446_tokens[2LL];
	if (_28217_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1ab56e627_push_err(&(*_self_), _27446_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ab56ea23_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1aadb628d_IdentExpr> _28817_expr = _1ab56d66a_build_ident_expr(_28217_token);
	_28817_expr.get()._field_cpp_linked=true;
	return _28817_expr;
}



inline jule::Ptr<_1aadb64ad_UnaryExpr> _1ab571250_build_unary(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token> _29334_tokens) {
	_1ab005531_Token _29417_op = _29334_tokens[0LL];
	if ((_29334_tokens.len() == 1LL)) {
		_1ab56e627_push_err(&(*_self_), _29417_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1ab005d4a_is_unary_op(_29417_op._field_kind)))) {
		_1ab56e627_push_err(&(*_self_), _29417_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>({jule::Any(_29417_op._field_kind)}));
		return nullptr;
	}
	_29334_tokens=_29334_tokens.slice(1LL);
	return jule::new_ptr<_1aadb64ad_UnaryExpr>(_1aadb64ad_UnaryExpr(_29417_op,_1ab57a6aa_build_from_tokens(&(*_self_), _29334_tokens)));
}



inline jule::Ptr<_1ab01ae92_SubIdentExpr> _1ab571607_build_obj_sub_ident(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token> _31442_tokens) {
	jule::I64 _31517_i = (_31442_tokens.len() - 1LL);
	_1ab005531_Token _31617_ident_token = _31442_tokens[_31517_i];
	(_31517_i)--;
	_31442_tokens=_31442_tokens.slice(0LL,_31517_i);
	if ((_31442_tokens.len() == 0LL)) {
		_1ab56e627_push_err(&(*_self_), _31617_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1ab01ae92_SubIdentExpr>(_1ab01ae92_SubIdentExpr(jule::Bool(),_1ab57a6aa_build_from_tokens(&(*_self_), _31442_tokens),_31617_ident_token));
}



inline jule::Ptr<_1ab01ac72_NsSelectionExpr> _1ab5719ae_build_ns_sub_ident(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _32942_tokens) {
	jule::Ptr<_1ab01ac72_NsSelectionExpr> _33017_ns = jule::new_ptr<_1ab01ac72_NsSelectionExpr>(_1ab01ac72_NsSelectionExpr());
	{
		auto &expr = _32942_tokens;
		auto it = expr.begin();
		_iter_begin_1ae5d3be9:;
		if (it != expr.end()) {
			jule::I64 _1ae5d3d09_i = it - expr.begin();
			_1ab005531_Token _1ae5d407e_token = *it;
			{
				if (((_1ae5d3d09_i & 1LL) == 0LL)) {
					if (_1ae5d407e_token._field_id != static_cast<jule::U64>(2LLU)) {
						_1ab56e627_push_err(&(*_self_), _1ae5d407e_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1ab56ea23_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					}
					_33017_ns.get()._field_ns = jule::alloc_for_append(_33017_ns.get()._field_ns,1);_33017_ns.get()._field_ns.__push(_1ae5d407e_token);
				} else if (_1ae5d407e_token._field_id != static_cast<jule::U64>(23LLU)) {
					_1ab56e627_push_err(&(*_self_), _1ae5d407e_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1ab56ea23_push_suggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				}
			}
			_iter_next_1ae5d3be9:;
			++it;
			_1ae5d3d09_i++;
			goto _iter_begin_1ae5d3be9;
		}
		_iter_end_1ae5d3be9:;
	}
	_33017_ns.get()._field_ident=_33017_ns.get()._field_ns[(_33017_ns.get()._field_ns.len() - 1LL)];
	_33017_ns.get()._field_ns=_33017_ns.get()._field_ns.slice(0LL,(_33017_ns.get()._field_ns.len() - 1LL));
	return _33017_ns;
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab571d66_build_type(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _34834_tokens) {
	jule::I64 _34917_i = 0LL;
	jule::Ptr<_1aae075dc_TypeDecl> _35018_t;
	jule::Bool _35021_ok;
	std::tie(_35018_t,_35021_ok) = _1ab5830ec_build_type((*_self_)._field_p, _34834_tokens,(&(_34917_i)),false);
	if ((!(_35021_ok))) {
		_1ab56e627_push_err(&(*_self_), _34834_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_34917_i < static_cast<jule::I64>(static_cast<jule::I64>(_34834_tokens.len()))) {
		_1ab56e627_push_err(&(*_self_), _34834_tokens[_34917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _35018_t;
}



inline jule::Any _1ab57221d_build_sub_ident(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _36239_tokens) {
	jule::I64 _36313_i = (_36239_tokens.len() - 2LL);
	_1ab005531_Token _36413_token = _36239_tokens[_36313_i];
	{
		auto &_match_expr{ _36413_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1ae5dcd13:;
			{
				return jule::Any(_1ab571607_build_obj_sub_ident(&(*_self_), _36239_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1ae5dd572:;
			{
				return jule::Any(_1ab5719ae_build_ns_sub_ident(&(*_self_), _36239_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ae5dd5d8:;
			{
				if ((_36413_token._field_kind == jule::Str("]", 1))) {
					return jule::Any(_1ab571d66_build_type(&(*_self_), _36239_tokens));
				}
			}
		}
		_match_end_1ae5dd473:;
	}
	_1ab56e627_push_err(&(*_self_), _36413_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1aadb66cd_VariadicExpr> _1ab5725c5_build_variadic(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token> _38037_tokens) {
	_1ab005531_Token _38117_token = _38037_tokens[(_38037_tokens.len() - 1LL)];
	_38037_tokens=_38037_tokens.slice(0LL,(_38037_tokens.len() - 1LL));
	return jule::new_ptr<_1aadb66cd_VariadicExpr>(_1aadb66cd_VariadicExpr(_38117_token,_1ab57a6aa_build_from_tokens(&(*_self_), _38037_tokens)));
}



inline jule::Any _1ab57297c_build_op_right(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _38938_tokens) {
	_1ab005531_Token _39017_token = _38938_tokens[(_38938_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _39017_token._field_kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1ae5e3489:;
			{
				_38938_tokens=_38938_tokens.slice(0LL,(_38938_tokens.len() - 1LL));
				jule::Any _39421_d = _1ab579e4b_build(&(*_self_), _38938_tokens);
				if (_39421_d == jule::Any(jule::Any(nullptr))) {
					return jule::Any(nullptr);
				}
				{
					auto &_match_expr{ _39421_d };
					
					if (_match_expr.type_is<jule::Ptr<_1ab01b3d2_FnCallExpr>>()) {
						_case_begin_1ae5ea5e5:;
						{
							_39421_d.operator jule::Ptr<_1ab01b3d2_FnCallExpr>().get()._field_exception=jule::new_ptr<_1ab01d615_ScopeTree>(_1ab01d615_ScopeTree(jule::Ptr<_1ab01d615_ScopeTree>(),jule::Bool(),true,jule::Slice<_1aae02ad2_Node>(),_1ab005531_Token()));
							return _39421_d;
						}
					}
					_match_end_1ae5ea88c:;
				}
			}
		}
		else if (_match_expr == jule::Str("...", 3)) {
			_case_begin_1ae5e3d80:;
			{
				return jule::Any(_1ab5725c5_build_variadic(&(*_self_), _38938_tokens));
			}
		}
		_match_end_1ae5e3d08:;
	}
	_1ab56e627_push_err(&(*_self_), _39017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1aadb528c_Expr> _1ab572d78_build_between_parentheses(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token> _41248_tokens) {
	_1ab005531_Token _41313_token = _41248_tokens[0LL];
	_41248_tokens=_41248_tokens.slice(1LL,(_41248_tokens.len() - 1LL));
	if ((_41248_tokens.len() == 0LL)) {
		_1ab56e627_push_err(&(*_self_), _41313_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1ab56ea23_push_suggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1aadb528c_Expr> _42017_expr = _1ab57a6aa_build_from_tokens(&(*_self_), _41248_tokens);
	_42017_expr.get()._field_range=true;
	return _42017_expr;
}



inline jule::Ptr<_1ab01aa52_CastExpr> _1ab57321e_try_build_cast(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _42538_tokens) {
	jule::I64 _42617_range_n = 0LL;
	{
		auto &expr = _42538_tokens;
		auto it = expr.begin();
		_iter_begin_1ae601552:;
		if (it != expr.end()) {
			jule::I64 _1ae6015eb_i = it - expr.begin();
			_1ab005531_Token _1ae601871_token = *it;
			{
				if (_1ae601871_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1ae601871_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ae60283e:;
							{
								(_42617_range_n)++;
								goto _iter_next_1ae601552;
							}
						}
						else {
							_case_begin_1ae6021ce:;
							{
								(_42617_range_n)--;
							}
						}
						_match_end_1ae60250e:;
					}
				}
				if ((_42617_range_n > 0LL)) {
					goto _iter_next_1ae601552;
				} else if ((_1ae6015eb_i + 1LL) == static_cast<jule::I64>(static_cast<jule::I64>(_42538_tokens.len()))) {
					return nullptr;
				}
				jule::Slice<_1ab005531_Token> _44621_type_tokens = _42538_tokens.slice(0LL,(_1ae6015eb_i + 1LL));
				jule::Slice<_1ab005531_Token> _44721_expr_tokens = _42538_tokens.slice((_1ae6015eb_i + 1LL));
				if ((_44721_expr_tokens.len() == 0LL)) {
					return nullptr;
				}
				_1ab005531_Token _45417_tok = _44721_expr_tokens[0LL];
				if ((_45417_tok._field_id != static_cast<jule::U64>(3LLU)) || (_45417_tok._field_kind != jule::Str("(", 1))) {
					return nullptr;
				}
				jule::Ptr<_1ab01aa52_CastExpr> _45921_cast = jule::new_ptr<_1ab01aa52_CastExpr>(_1ab01aa52_CastExpr());
				if ((_44721_expr_tokens.len() == 2LL)) {
					_1ab56e627_push_err(&(*_self_), _44721_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1ab56ea23_push_suggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				}
				if ((_44621_type_tokens.len() == 2LL)) {
					_1ab56e627_push_err(&(*_self_), _44621_type_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1ab56ea23_push_suggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_44621_type_tokens=_44621_type_tokens.slice(1LL,(_44621_type_tokens.len() - 1LL));
					jule::I64 _47325_type_index = 0LL;
					jule::Ptr<_1aae075dc_TypeDecl> _47426_t;
					jule::Bool _47429_ok;
					std::tie(_47426_t,_47429_ok) = _1ab5830ec_build_type((*_self_)._field_p, _44621_type_tokens,(&(_47325_type_index)),true);
					if (_47429_ok && (_47325_type_index < static_cast<jule::I64>(static_cast<jule::I64>(_44621_type_tokens.len())))) {
						_1ab56e627_push_err(&(*_self_), _44621_type_tokens[_47325_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_47429_ok))) {
						return _45921_cast;
					}
					_45921_cast.get()._field_kind=_47426_t;
					if ((_44721_expr_tokens.len() > 2LL)) {
						jule::I64 _48429_j = 0LL;
						_1ab57d636_range(_48429_j,jule::Str("(", 1),jule::Str(")", 1),_44721_expr_tokens);
						if (_48429_j < static_cast<jule::I64>(static_cast<jule::I64>(_44721_expr_tokens.len()))) {
							return nullptr;
						}
						_44721_expr_tokens=_44721_expr_tokens.slice(0LL,_48429_j);
						_45921_cast.get()._field_expr=_1ab57a6aa_build_from_tokens(&(*_self_), _44721_expr_tokens);
					}
				}
				return _45921_cast;
			}
			_iter_next_1ae601552:;
			++it;
			_1ae6015eb_i++;
			goto _iter_begin_1ae601552;
		}
		_iter_end_1ae601552:;
	}
	return nullptr;
}



inline void _1ab5736e7_push_arg(_1ab56dc20_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1aadb528c_Expr>>& _49932_args,jule::Slice<_1ab005531_Token> _49951_tokens,_1ab005531_Token _49968_err_token) {
	if ((_49951_tokens.len() == 0LL)) {
		_1ab56e627_push_err(&(*_self_), _49968_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ab56ea23_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_49932_args = jule::alloc_for_append(_49932_args,1);_49932_args.__push(_1ab57a6aa_build_from_tokens(&(*_self_), _49951_tokens));
}



inline jule::Slice<jule::Ptr<_1aadb528c_Expr>> _1ab573a9e_build_args(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token> _50833_tokens) {
	if ((_50833_tokens.len() < 2LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1aadb528c_Expr>> _51417_args = nullptr;
	jule::I64 _51517_last = 0LL;
	jule::I64 _51617_range_n = 0LL;
	_50833_tokens=_50833_tokens.slice(1LL,(_50833_tokens.len() - 1LL));
	{
		auto &expr = _50833_tokens;
		auto it = expr.begin();
		_iter_begin_1ae612b07:;
		if (it != expr.end()) {
			jule::I64 _1ae6134ba_i = it - expr.begin();
			_1ab005531_Token _1ae6135db_token = *it;
			{
				if (_1ae6135db_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1ae6135db_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ae614510:;
							{
								(_51617_range_n)++;
							}
						}
						else {
							_case_begin_1ae613da0:;
							{
								(_51617_range_n)--;
							}
						}
						_match_end_1ae6141d0:;
					}
				}
				if ((_51617_range_n > 0LL) || (_1ae6135db_token._field_id != static_cast<jule::U64>(8LLU))) {
					goto _iter_next_1ae612b07;
				}
				_1ab5736e7_push_arg(&(*_self_), _51417_args,_50833_tokens.slice(_51517_last,_1ae6134ba_i),_1ae6135db_token);
				_51517_last=static_cast<jule::I64>((_1ae6134ba_i + 1LL));
			}
			_iter_next_1ae612b07:;
			++it;
			_1ae6134ba_i++;
			goto _iter_begin_1ae612b07;
		}
		_iter_end_1ae612b07:;
	}
	if (_51517_last < static_cast<jule::I64>(static_cast<jule::I64>(_50833_tokens.len()))) {
		if ((_51517_last == 0LL)) {
			if ((_50833_tokens.len() > 0LL)) {
				_1ab5736e7_push_arg(&(*_self_), _51417_args,_50833_tokens.slice(_51517_last),_50833_tokens[_51517_last]);
			}
		} else {
			_1ab5736e7_push_arg(&(*_self_), _51417_args,_50833_tokens.slice(_51517_last),_50833_tokens[(_51517_last - 1LL)]);
		}
	}
	return _51417_args;
}



inline jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>> _1ab573e56_build_call_generics(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token> _55042_tokens) {
	if ((_55042_tokens.len() == 0LL)) {
		return nullptr;
	}
	_55042_tokens=_55042_tokens.slice(1LL,(_55042_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_1ab005531_Token>> _55618_parts;
	jule::Slice<_1a92a31c6_Log> _55625_errs;
	std::tie(_55618_parts,_55625_errs) = _1ab57de50_parts(_55042_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>> _55717_generics = jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_55618_parts.len()));
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_55625_errs);
	{
		auto &expr = _55618_parts;
		auto it = expr.begin();
		_iter_begin_1ae61a417:;
		if (it != expr.end()) {
			jule::Slice<_1ab005531_Token> _1ae61adc9_part = *it;
			{
				if ((_1ae61adc9_part.len() == 0LL)) {
					goto _iter_next_1ae61a417;
				}
				jule::I64 _56321_j = 0LL;
				jule::Ptr<_1aae075dc_TypeDecl> _56422_generic;
				std::tie(_56422_generic,std::ignore) = _1ab5830ec_build_type((*_self_)._field_p, _1ae61adc9_part,(&(_56321_j)),true);
				if (_56321_j < static_cast<jule::I64>(static_cast<jule::I64>(_1ae61adc9_part.len()))) {
					_1ab56e627_push_err(&(*_self_), _1ae61adc9_part[_56321_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_55717_generics = jule::alloc_for_append(_55717_generics,1);_55717_generics.__push(_56422_generic);
			}
			_iter_next_1ae61a417:;
			++it;
			goto _iter_begin_1ae61a417;
		}
		_iter_end_1ae61a417:;
	}
	return _55717_generics;
}



inline jule::Ptr<_1ab01b3d2_FnCallExpr> _1ab5743da_build_fn_call(_1ab56dc20_ExprBuilder* _self_,_1ab005531_Token& _57437_token,jule::Ptr<_1ab56c4c1_CallData>& _57456_data) {
	return jule::new_ptr<_1ab01b3d2_FnCallExpr>(_1ab01b3d2_FnCallExpr(_57437_token,_1ab57a6aa_build_from_tokens(&(*_self_), _57456_data.get()._field_expr_tokens),_1ab573e56_build_call_generics(&(*_self_), _57456_data.get()._field_generics_tokens),_1ab573a9e_build_args(&(*_self_), _57456_data.get()._field_args_tokens),jule::Ptr<_1ab01d615_ScopeTree>()));
}



inline jule::Any _1ab5747d6_build_parentheses_range(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _58347_tokens) {
	_1ab005531_Token _58417_token = _58347_tokens[0LL];
	{
		auto &_match_expr{ _58417_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ae62164e:;
			{
				{
					auto &_match_expr{ _58417_token._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1ae6223a8:;
						{
							jule::Ptr<_1ab01aa52_CastExpr> _58925_expr = _1ab57321e_try_build_cast(&(*_self_), _58347_tokens);
							if ((_58925_expr != nullptr)) {
								return jule::Any(_58925_expr);
							}
						}
					}
					_match_end_1ae6225ea:;
				}
			}
		}
		_match_end_1ae621ce2:;
	}
	jule::Ptr<_1ab56c4c1_CallData> _59617_data = _1ab56c89a_get_call_data(_58347_tokens);
	if ((_59617_data.get()._field_expr_tokens.len() == 0LL)) {
		return jule::Any(_1ab572d78_build_between_parentheses(&(*_self_), _59617_data.get()._field_args_tokens));
	}
	return jule::Any(_1ab5743da_build_fn_call(&(*_self_), _58417_token,_59617_data));
}



inline jule::Ptr<_1aadb5d4d_UnsafeExpr> _1ab574b7c_build_unsafe_expr(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token> _60740_tokens) {
	_1ab005531_Token _60817_token = _60740_tokens[0LL];
	_60740_tokens=_60740_tokens.slice(1LL);
	jule::I64 _61017_i = 0LL;
	jule::Slice<_1ab005531_Token> _61117_range_tokens = _1ab57d636_range(_61017_i,jule::Str("{", 1),jule::Str("}", 1),_60740_tokens);
	if ((_61117_range_tokens.len() == 0LL)) {
		_1ab56e627_push_err(&(*_self_), _60740_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1aadb5d4d_UnsafeExpr>(_1aadb5d4d_UnsafeExpr(_60817_token,_1ab57a6aa_build_from_tokens(&(*_self_), _61117_range_tokens)));
}



inline jule::Ptr<_1ab01da55_FnDecl> _1ab575034_build_anon_fn(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _62237_tokens) {
	jule::Ptr<_1ab01da55_FnDecl> _62317_f = _1ab588344_build_fn((*_self_)._field_p, _62237_tokens,false,false);
	if ((!(_1ab01dc75_is_anon(_62317_f.ptr())))) {
		_1ab56e627_push_err(&(*_self_), _62317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ab56ea23_push_suggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	}
	return _62317_f;
}



inline jule::Any _1ab5753db_build_unsafe(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _63136_tokens) {
	{
		auto &_match_expr{ _63136_tokens[1LL]._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1ae62c3a2:;
			{
				return jule::Any(_1ab575034_build_anon_fn(&(*_self_), _63136_tokens));
			}
		}
		else {
			_case_begin_1ae62b813:;
			{
				return jule::Any(_1ab574b7c_build_unsafe_expr(&(*_self_), _63136_tokens));
			}
		}
		_match_end_1ae62bcb9:;
	}
}



inline void _1ab5758b4_push_range_lit_part(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token> _64142_part,_1ab005531_Token _6429_error_token,jule::Slice<jule::Slice<_1ab005531_Token>>& _64234_parts) {
	if ((_64142_part.len() == 0LL)) {
		_1ab56e627_push_err(&(*_self_), _6429_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ab56ea23_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_64234_parts = jule::alloc_for_append(_64234_parts,1);_64234_parts.__push(_64142_part);
}



inline jule::Slice<jule::Slice<_1ab005531_Token>> _1ab575cb0_get_brace_range_lit_expr_parts(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token> _65253_tokens) {
	if ((_65253_tokens.len() < 2LL)) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1ab005531_Token>> _65817_parts = nullptr;
	jule::I64 _66017_last = 0LL;
	jule::I64 _66117_range_n = 0LL;
	_65253_tokens=_65253_tokens.slice(1LL,(_65253_tokens.len() - 1LL));
	{
		auto &expr = _65253_tokens;
		auto it = expr.begin();
		_iter_begin_1ae632154:;
		if (it != expr.end()) {
			jule::I64 _1ae632a17_i = it - expr.begin();
			_1ab005531_Token _1ae632b38_token = *it;
			{
				if (_1ae632b38_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1ae632b38_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ae633a5c:;
							{
								(_66117_range_n)++;
							}
						}
						else {
							_case_begin_1ae6333ec:;
							{
								(_66117_range_n)--;
							}
						}
						_match_end_1ae63372c:;
					}
				}
				if ((_66117_range_n > 0LL) || (_1ae632b38_token._field_id != static_cast<jule::U64>(8LLU))) {
					goto _iter_next_1ae632154;
				}
				_1ab5758b4_push_range_lit_part(&(*_self_), _65253_tokens.slice(_66017_last,_1ae632a17_i),_1ae632b38_token,_65817_parts);
				_66017_last=static_cast<jule::I64>((_1ae632a17_i + 1LL));
			}
			_iter_next_1ae632154:;
			++it;
			_1ae632a17_i++;
			goto _iter_begin_1ae632154;
		}
		_iter_end_1ae632154:;
	}
	if (_66017_last < static_cast<jule::I64>(static_cast<jule::I64>(_65253_tokens.len()))) {
		if ((_66017_last == 0LL)) {
			if ((_65253_tokens.len() > 0LL)) {
				_1ab5758b4_push_range_lit_part(&(*_self_), _65253_tokens.slice(_66017_last),_65253_tokens[_66017_last],_65817_parts);
			}
		} else {
			_1ab5758b4_push_range_lit_part(&(*_self_), _65253_tokens.slice(_66017_last),_65253_tokens[(_66017_last - 1LL)],_65817_parts);
		}
	}
	return _65817_parts;
}



inline jule::Ptr<_1ab01b602_FieldExprPair> _1ab576156_build_field_expr_pair(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token> _69444_tokens) {
	if (((_69444_tokens.len() - 2LL) == 0LL)) {
		_1ab56e627_push_err(&(*_self_), _69444_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ab01b602_FieldExprPair> _69917_pair = jule::new_ptr<_1ab01b602_FieldExprPair>(_1ab01b602_FieldExprPair(_69444_tokens[0LL],jule::Ptr<_1aadb528c_Expr>()));
	_69444_tokens=_69444_tokens.slice(2LL);
	_69917_pair.get()._field_expr=_1ab57a6aa_build_from_tokens(&(*_self_), _69444_tokens);
	return _69917_pair;
}



inline jule::Ptr<_1aadb528c_Expr> _1ab57650d_build_struct_lit_expr(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _70745_tokens) {
	_1ab005531_Token _70817_token = _70745_tokens[0LL];
	if ((_70817_token._field_id == static_cast<jule::U64>(2LLU)) && (_70745_tokens.len() > 1LL)) {
		_70817_token=_70745_tokens[1LL];
		if (_70817_token._field_id == static_cast<jule::U64>(11LLU)) {
			return jule::new_ptr<_1aadb528c_Expr>(_1aadb528c_Expr(_70817_token,_1ab005531_Token(),jule::Bool(),jule::Any(jule::Any(_1ab576156_build_field_expr_pair(&(*_self_), _70745_tokens)))));
		}
	}
	return _1ab57a6aa_build_from_tokens(&(*_self_), _70745_tokens);
}



inline jule::Slice<jule::Ptr<_1aadb528c_Expr>> _1ab5768b5_build_struct_lit_exprs(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _72146_tokens) {
	jule::Slice<jule::Slice<_1ab005531_Token>> _72217_parts = _1ab575cb0_get_brace_range_lit_expr_parts(&(*_self_), _72146_tokens);
	if ((_72217_parts.len() == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1aadb528c_Expr>> _72717_pairs = jule::Slice<jule::Ptr<_1aadb528c_Expr>>::alloc(0LL,static_cast<jule::I64>(_72217_parts.len()));
	{
		auto &expr = _72217_parts;
		auto it = expr.begin();
		_iter_begin_1ae640294:;
		if (it != expr.end()) {
			jule::Slice<_1ab005531_Token> _1ae640470_part = *it;
			{
				_72717_pairs = jule::alloc_for_append(_72717_pairs,1);_72717_pairs.__push(_1ab57650d_build_struct_lit_expr(&(*_self_), _1ae640470_part));
			}
			_iter_next_1ae640294:;
			++it;
			goto _iter_begin_1ae640294;
		}
		_iter_end_1ae640294:;
	}
	return _72717_pairs;
}



inline jule::Ptr<_1ab01b822_StructLit> _1ab576cb1_build_typed_struct_literal(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token> _73449_tokens) {
	jule::I64 _73517_i = 0LL;
	jule::Ptr<_1aae075dc_TypeDecl> _73618_t;
	jule::Bool _73621_ok;
	std::tie(_73618_t,_73621_ok) = _1ab5830ec_build_type((*_self_)._field_p, _73449_tokens,(&(_73517_i)),true);
	if ((!(_73621_ok))) {
		return nullptr;
	} else if (_73517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_73449_tokens.len()))) {
		_1ab56e627_push_err(&(*_self_), _73449_tokens[_73517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_73449_tokens=_73449_tokens.slice(_73517_i);
	_1ab005531_Token _74513_token = _73449_tokens[0LL];
	if ((_74513_token._field_id != static_cast<jule::U64>(3LLU)) || (_74513_token._field_kind != jule::Str("{", 1))) {
		_1ab56e627_push_err(&(*_self_), _74513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1ab01b822_StructLit>(_1ab01b822_StructLit(_73449_tokens[(_73449_tokens.len() - 1LL)],_73618_t,_1ab5768b5_build_struct_lit_exprs(&(*_self_), _73449_tokens)));
}



inline jule::Ptr<_1aadb528c_Expr> _1ab577157_build_brace_lit_part(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _75844_tokens) {
	jule::Slice<_1ab005531_Token> _75918_l;
	jule::Slice<_1ab005531_Token> _75925_r;
	std::tie(_75918_l,_75925_r) = _1ab56d00a_split_colon(_75844_tokens);
	if ((_75918_l != nullptr)) {
		return jule::new_ptr<_1aadb528c_Expr>(_1aadb528c_Expr(_75844_tokens[0LL],_1ab005531_Token(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ab01bc62_KeyValPair>(_1ab01bc62_KeyValPair(_1ab57a6aa_build_from_tokens(&(*_self_), _75918_l),_1ab57a6aa_build_from_tokens(&(*_self_), _75925_r),_75844_tokens[_75918_l.len()]))))));
	}
	return _1ab57a6aa_build_from_tokens(&(*_self_), _75844_tokens);
}



inline jule::Ptr<_1ab01ba42_BraceLit> _1ab57750e_build_brace_lit(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _77439_tokens) {
	jule::Ptr<_1ab01ba42_BraceLit> _77517_lit = jule::new_ptr<_1ab01ba42_BraceLit>(_1ab01ba42_BraceLit(_77439_tokens[0LL],_77439_tokens[(_77439_tokens.len() - 1LL)],jule::Slice<jule::Ptr<_1aadb528c_Expr>>()));
	jule::Slice<jule::Slice<_1ab005531_Token>> _78017_parts = _1ab575cb0_get_brace_range_lit_expr_parts(&(*_self_), _77439_tokens);
	if ((_78017_parts == nullptr)) {
		return _77517_lit;
	}
	_77517_lit.get()._field_exprs=jule::Slice<jule::Ptr<_1aadb528c_Expr>>::alloc(0LL,static_cast<jule::I64>(_78017_parts.len()));
	{
		auto &expr = _78017_parts;
		auto it = expr.begin();
		_iter_begin_1ae64b9ed:;
		if (it != expr.end()) {
			jule::Slice<_1ab005531_Token> _1ae64ba42_part = *it;
			{
				_77517_lit.get()._field_exprs = jule::alloc_for_append(_77517_lit.get()._field_exprs,1);_77517_lit.get()._field_exprs.__push(_1ab577157_build_brace_lit_part(&(*_self_), _1ae64ba42_part));
			}
			_iter_next_1ae64b9ed:;
			++it;
			goto _iter_begin_1ae64b9ed;
		}
		_iter_end_1ae64b9ed:;
	}
	return _77517_lit;
}



inline jule::Any _1ab5778b6_build_brace_range(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _79341_tokens) {
	jule::Slice<_1ab005531_Token> _79418_expr_tokens;
	jule::I64 _79431_range_n;
	std::tie(_79418_expr_tokens,_79431_range_n) = _1ab56d978_get_range_expr_tokens(_79341_tokens);
	{
		
		if ((_79418_expr_tokens.len() == 0LL)) {
			_case_begin_1ae64d846:;
			{
				return jule::Any(_1ab57750e_build_brace_lit(&(*_self_), _79341_tokens));
			}
		}
		else if ((_79431_range_n > 0LL)) {
			_case_begin_1ae64d8bd:;
			{
				_1ab56e627_push_err(&(*_self_), _79341_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1ae64d7d0:;
	}
	_1ab005531_Token _80513_else_token = _79418_expr_tokens[(_79418_expr_tokens.len() - 1LL)];
	if (_79418_expr_tokens[(_79418_expr_tokens.len() - 1LL)]._field_id == static_cast<jule::U64>(17LLU)) {
		_79418_expr_tokens=_79418_expr_tokens.slice(0LL,(_79418_expr_tokens.len() - 1LL));
		jule::Any _80821_d = _1ab579e4b_build(&(*_self_), _79418_expr_tokens);
		if (_80821_d == jule::Any(jule::Any(nullptr))) {
			return jule::Any(nullptr);
		}
		{
			auto &_match_expr{ _80821_d };
			
			if (_match_expr.type_is<jule::Ptr<_1ab01b3d2_FnCallExpr>>()) {
				_case_begin_1ae65342d:;
				{
					_79341_tokens=_79341_tokens.slice((_79418_expr_tokens.len() + 1LL));
					jule::I64 _81525_i = 0LL;
					jule::Slice<_1ab005531_Token> _81625_range_tokens = _1ab57d636_range(_81525_i,jule::Str("{", 1),jule::Str("}", 1),_79341_tokens);
					jule::Ptr<_1ab01b3d2_FnCallExpr> _81725_model = _80821_d.operator jule::Ptr<_1ab01b3d2_FnCallExpr>();
					if (_1aadb68ed_ignored(_81725_model.ptr())) {
						_1ab56e627_push_err(&(*_self_), _80513_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1ab56ea23_push_suggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					}
					_81725_model.get()._field_exception=_1ab58252a_build_scope((*_self_)._field_p, _81625_range_tokens,_79341_tokens[(_81525_i - 1LL)]);
					return _80821_d;
				}
			}
			else {
				_case_begin_1ae651cbc:;
				{
					_1ab56e627_push_err(&(*_self_), _79418_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return jule::Any(nullptr);
				}
			}
			_match_end_1ae6520ec:;
		}
	}
	{
		auto &_match_expr{ _79418_expr_tokens[0LL]._field_id };
		
		if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1ae657a5e:;
			{
				return _1ab5753db_build_unsafe(&(*_self_), _79341_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1ae657ac5:;
			{
				return jule::Any(_1ab575034_build_anon_fn(&(*_self_), _79341_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ae657b3b:;
			{
				return jule::Any(_1ab576cb1_build_typed_struct_literal(&(*_self_), _79341_tokens));
			}
		}
		else {
			_case_begin_1ae64d703:;
			{
				_1ab56e627_push_err(&(*_self_), _79418_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1ae6578b6:;
	}
}



inline jule::Slice<jule::Slice<_1ab005531_Token>> _1ab577c6d_get_enumerable_parts(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token> _84543_tokens) {
	_84543_tokens=_84543_tokens.slice(1LL,(_84543_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_1ab005531_Token>> _84718_parts;
	jule::Slice<_1a92a31c6_Log> _84725_errors;
	std::tie(_84718_parts,_84725_errors) = _1ab57de50_parts(_84543_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_84725_errors);
	return _84718_parts;
}



inline jule::Ptr<_1ab01be82_SliceExpr> _1ab578125_build_slice(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token> _85234_tokens) {
	jule::Ptr<_1ab01be82_SliceExpr> _85317_slc = jule::new_ptr<_1ab01be82_SliceExpr>(_1ab01be82_SliceExpr(_85234_tokens[0LL],_85234_tokens[(_85234_tokens.len() - 1LL)],jule::Slice<jule::Ptr<_1aadb528c_Expr>>()));
	jule::Slice<jule::Slice<_1ab005531_Token>> _85817_parts = _1ab577c6d_get_enumerable_parts(&(*_self_), _85234_tokens);
	if ((_85817_parts.len() == 0LL)) {
		return _85317_slc;
	}
	_85317_slc.get()._field_exprs=jule::Slice<jule::Ptr<_1aadb528c_Expr>>::alloc(0LL,static_cast<jule::I64>(_85817_parts.len()));
	{
		auto &expr = _85817_parts;
		auto it = expr.begin();
		_iter_begin_1ae65e6e2:;
		if (it != expr.end()) {
			jule::Slice<_1ab005531_Token> _1ae660391_p = *it;
			{
				if ((_1ae660391_p.len() == 0LL)) {
					goto _iter_next_1ae65e6e2;
				}
				_85317_slc.get()._field_exprs = jule::alloc_for_append(_85317_slc.get()._field_exprs,1);_85317_slc.get()._field_exprs.__push(_1ab57a6aa_build_from_tokens(&(*_self_), _1ae660391_p));
			}
			_iter_next_1ae65e6e2:;
			++it;
			goto _iter_begin_1ae65e6e2;
		}
		_iter_end_1ae65e6e2:;
	}
	return _85317_slc;
}



inline jule::Ptr<_1aadb58ec_IndexingExpr> _1ab578686_build_indexing(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token> _87437_expr_tokens,jule::Slice<_1ab005531_Token> _87513_tokens,_1ab005531_Token _87534_error_token) {
	_1ab005531_Token _87617_end = _87513_tokens[(_87513_tokens.len() - 1LL)];
	_87513_tokens=_87513_tokens.slice(1LL,(_87513_tokens.len() - 1LL));
	if ((_87513_tokens.len() == 0LL)) {
		_1ab56e627_push_err(&(*_self_), _87534_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1aadb528c_Expr> _88217_expr = _1ab57a6aa_build_from_tokens(&(*_self_), _87437_expr_tokens);
	if ((_88217_expr == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1aadb528c_Expr> _88617_index = _1ab57a6aa_build_from_tokens(&(*_self_), _87513_tokens);
	if ((_88617_index == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1aadb58ec_IndexingExpr>(_1aadb58ec_IndexingExpr(_87534_error_token,_87617_end,_88217_expr,_88617_index));
}



inline jule::Ptr<_1ab01c625_SlicingExpr> _1ab578da1_build_slicing(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _89837_expr_tokens,jule::Slice<_1ab005531_Token>& _89864_slicing_tokens,jule::I64& _89910_colon,_1ab005531_Token& _89927_error_token,_1ab005531_Token _89951_end) {
	jule::Ptr<_1ab01c625_SlicingExpr> _90017_slc = jule::new_ptr<_1ab01c625_SlicingExpr>(_1ab01c625_SlicingExpr(_89927_error_token,_89951_end,_1ab57a6aa_build_from_tokens(&(*_self_), _89837_expr_tokens),jule::Ptr<_1aadb528c_Expr>(),jule::Ptr<_1aadb528c_Expr>()));
	jule::Slice<_1ab005531_Token> _90617_start_expr_tokens = _89864_slicing_tokens.slice(0LL,_89910_colon);
	if ((_90617_start_expr_tokens.len() > 0LL)) {
		_90017_slc.get()._field_start=_1ab57a6aa_build_from_tokens(&(*_self_), _90617_start_expr_tokens);
	}
	jule::Slice<_1ab005531_Token> _91117_to_expr_tokens = _89864_slicing_tokens.slice((_89910_colon + 1LL));
	if ((_91117_to_expr_tokens.len() > 0LL)) {
		_90017_slc.get()._field_to=_1ab57a6aa_build_from_tokens(&(*_self_), _91117_to_expr_tokens);
	}
	return _90017_slc;
}



inline jule::Any _1ab579258_build_bracket_range(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token> _91942_tokens) {
	_1ab005531_Token _92017_error_token = _91942_tokens[0LL];
	jule::Slice<_1ab005531_Token> _92118_expr_tokens;
	jule::I64 _92131_range_n;
	std::tie(_92118_expr_tokens,_92131_range_n) = _1ab56d978_get_range_expr_tokens(_91942_tokens);
	{
		
		if ((_92118_expr_tokens.len() == 0LL)) {
			_case_begin_1ae66b116:;
			{
				return jule::Any(_1ab578125_build_slice(&(*_self_), _91942_tokens));
			}
		}
		else if ((_92118_expr_tokens.len() == 0LL) || (_92131_range_n > 0LL)) {
			_case_begin_1ae66b18d:;
			{
				_1ab56e627_push_err(&(*_self_), _92017_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1ae66b04a:;
	}
	_91942_tokens=_91942_tokens.slice(_92118_expr_tokens.len());
	jule::I64 _93917_i = 0LL;
	jule::Slice<_1ab005531_Token> _94018_slicing_tokens;
	jule::I64 _94034_colon;
	std::tie(_94018_slicing_tokens,_94034_colon) = _1ab5944a4_split_map_range(_91942_tokens,_93917_i);
	if ((_94034_colon != -1LL)) {
		return jule::Any(_1ab578da1_build_slicing(&(*_self_), _92118_expr_tokens,_94018_slicing_tokens,_94034_colon,_92017_error_token,_91942_tokens[(_91942_tokens.len() - 1LL)]));
	}
	return jule::Any(_1ab578686_build_indexing(&(*_self_), _92118_expr_tokens,_91942_tokens,_92017_error_token));
}



inline jule::Any _1ab579610_build_data(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _94734_tokens) {
	{
		auto _match_expr{ _94734_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ae6711b5:;
			{
				return jule::Any(nullptr);
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ae67122b:;
			{
				return _1ab5709e1_build_single(&(*_self_), _94734_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ae671292:;
			{
				if (_94734_tokens[0LL]._field_id == static_cast<jule::U64>(31LLU)) {
					return jule::Any(_1ab570d98_build_cpp_linked_ident(&(*_self_), _94734_tokens));
				}
			}
		}
		_match_end_1ae670ea6:;
	}
	_1ab005531_Token _95917_token = _94734_tokens[0LL];
	{
		auto &_match_expr{ _95917_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ae671308:;
			{
				if ((_94734_tokens.len() > 1LL) && (_95917_token._field_kind == jule::Str("*", 1))) {
					_95917_token=_94734_tokens[1LL];
					if ((_95917_token._field_id == static_cast<jule::U64>(1LLU)) || (_95917_token._field_id == static_cast<jule::U64>(35LLU))) {
						return jule::Any(_1ab571d66_build_type(&(*_self_), _94734_tokens));
					}
				}
				return jule::Any(_1ab571250_build_unary(&(*_self_), _94734_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ae673816:;
			{
				if ((_94734_tokens.len() < 3LL)) {
					goto _match_end_1ae673706;
				}
				if ((_94734_tokens.len() > 3LL)) {
					_1ab005531_Token _97821_t = _94734_tokens[(_94734_tokens.len() - 1LL)];
					if ((_97821_t._field_id == static_cast<jule::U64>(3LLU)) && (_97821_t._field_kind == jule::Str(")", 1))) {
						goto _match_end_1ae673706;
					}
				}
				_1ab005531_Token _98417_next = _94734_tokens[1LL];
				if ((_98417_next._field_id != static_cast<jule::U64>(3LLU)) || (_98417_next._field_kind != jule::Str("]", 1))) {
					goto _match_end_1ae673706;
				}
				return jule::Any(_1ab571d66_build_type(&(*_self_), _94734_tokens));
			}
		}
		_match_end_1ae673706:;
	}
	_95917_token=_94734_tokens[(_94734_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _95917_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1ae67387c:;
			{
				return _1ab57221d_build_sub_ident(&(*_self_), _94734_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ae679d17:;
			{
				return jule::Any(_1ab571d66_build_type(&(*_self_), _94734_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ae679d7d:;
			{
				return _1ab57297c_build_op_right(&(*_self_), _94734_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ae679de4:;
			{
				{
					auto &_match_expr{ _95917_token._field_kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1ae67bd08:;
						{
							return _1ab5747d6_build_parentheses_range(&(*_self_), _94734_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1ae67bd91:;
						{
							return _1ab5778b6_build_brace_range(&(*_self_), _94734_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1ae67be07:;
						{
							return _1ab579258_build_bracket_range(&(*_self_), _94734_tokens);
						}
					}
					_match_end_1ae67bc70:;
				}
			}
		}
		_match_end_1ae679c4b:;
	}
	_1ab56e627_push_err(&(*_self_), _95917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1ab01b1b2_BinopExpr> _1ab579a94_build_binop(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _101535_tokens,jule::I64 _101552_i) {
	jule::Slice<_1ab005531_Token> _101617_left_tokens = _101535_tokens.slice(0LL,_101552_i);
	jule::Slice<_1ab005531_Token> _101717_right_tokens = _101535_tokens.slice((_101552_i + 1LL));
	if ((_101617_left_tokens.len() == 0LL)) {
		_1ab56e627_push_err(&(*_self_), _101535_tokens[_101552_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ab56ea23_push_suggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((_101717_right_tokens.len() == 0LL)) {
		_1ab56e627_push_err(&(*_self_), _101535_tokens[_101552_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ab56ea23_push_suggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1ab01b1b2_BinopExpr>(_1ab01b1b2_BinopExpr(_1ab57a6aa_build_from_tokens(&(*_self_), _101617_left_tokens),_1ab57a6aa_build_from_tokens(&(*_self_), _101717_right_tokens),_101535_tokens[_101552_i]));
}



inline jule::Any _1ab579e4b_build(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _103529_tokens) {
	jule::I64 _103613_i = _1ab56d35c_find_lowest_prec_op(_103529_tokens);
	if ((_103613_i == -1LL)) {
		return _1ab579610_build_data(&(*_self_), _103529_tokens);
	}
	return jule::Any(_1ab579a94_build_binop(&(*_self_), _103529_tokens,_103613_i));
}



inline jule::Any _1ab57a303_build_kind(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token>& _104334_tokens) {
	jule::Slice<jule::Slice<_1ab005531_Token>> _104418_parts;
	jule::Slice<_1a92a31c6_Log> _104425_errors;
	std::tie(_104418_parts,_104425_errors) = _1ab57de50_parts(_104334_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_104425_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_104425_errors);
		return jule::Any(nullptr);
	} else if ((_104418_parts.len() > 1LL)) {
		return jule::Any(_1ab56edca_build_tuple(&(*_self_), _104418_parts));
	}
	return _1ab579e4b_build(&(*_self_), _104334_tokens);
}



inline jule::Ptr<_1aadb528c_Expr> _1ab57a6aa_build_from_tokens(_1ab56dc20_ExprBuilder* _self_,jule::Slice<_1ab005531_Token> _105440_tokens) {
	if ((_105440_tokens.len() == 0LL)) {
		return nullptr;
	}
	return jule::new_ptr<_1aadb528c_Expr>(_1aadb528c_Expr(_105440_tokens[0LL],_105440_tokens[(_105440_tokens.len() - 1LL)],jule::Bool(),_1ab57a303_build_kind(&(*_self_), _105440_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, _1ab56dc20_ExprBuilder _Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



inline void _1ab580869_stop(_1ab5804c3_Parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1ab580b44_stopped(_1ab5804c3_Parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1ab58111c_push_err(_1ab5804c3_Parser* _self_,_1ab005531_Token _22827_token,jule::Str _22841_fmt,jule::Slice<jule::Any> _22854_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ab57e758_compiler_err(_22827_token,_22841_fmt,_22854_args));
}



inline void _1ab581518_push_suggestion(_1ab5804c3_Parser* _self_,jule::Str _23334_fmt,jule::Slice<jule::Any> _23347_args) {
	{
		_1ab57eb87_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_23334_fmt,_23347_args);
	}
}



inline jule::Ptr<_1aadb528c_Expr> _1ab5818c0_build_expr(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _23735_tokens) {
	jule::Ptr<_1ab56dc20_ExprBuilder> _23817_ep = jule::new_ptr<_1ab56dc20_ExprBuilder>(_1ab56dc20_ExprBuilder(_self_));
	jule::Ptr<_1aadb528c_Expr> _23917_expr = _1ab57a6aa_build_from_tokens(_23817_ep.ptr(), _23735_tokens);
	return _23917_expr;
}



inline jule::Ptr<_1aaeaeb7d_Directive> _1ab581c77_build_directive(_1ab5804c3_Parser* _self_,jule::Slice<_1ab005531_Token> _24338_tokens) {
	if ((_24338_tokens.len() == 1LL)) {
		_1ab58111c_push_err(&(*_self_), _24338_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_24338_tokens[1LL]._field_column != static_cast<jule::I64>(static_cast<jule::I64>((_24338_tokens[0LL]._field_column + 1LL)))) {
		_1ab58111c_push_err(&(*_self_), _24338_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1aaeaeb7d_Directive>(_1aaeaeb7d_Directive(_24338_tokens[1LL],_24338_tokens.slice(2LL)));
}



inline void _1ab582096_push_directive(_1ab5804c3_Parser* _self_,jule::Ptr<_1aaeaeb7d_Directive> _26037_d) {
	if ((_26037_d == nullptr)) {
		return;
	}
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1ae69379d:;
		if (it != expr.end()) {
			jule::Ptr<_1aaeaeb7d_Directive> _1ae693e0d_pd = *it;
			{
				if (_26037_d.get()._field_tag._field_kind == _1ae693e0d_pd.get()._field_tag._field_kind) {
					return;
				}
			}
			_iter_next_1ae69379d:;
			++it;
			goto _iter_begin_1ae69379d;
		}
		_iter_end_1ae69379d:;
	}
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_26037_d);
}



inline jule::Ptr<_1ab01d615_ScopeTree> _1ab58252a_build_scope(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _27436_tokens,_1ab005531_Token _27457_end) {
	jule::Ptr<_1ab01d615_ScopeTree> _27517_s = _1ab556972_new_scope();
	_27517_s.get()._field_end=_27457_end;
	_1ab558743_ScopeParser _27717_sp = _1ab558743_ScopeParser(_self_,jule::Ptr<_1ab01d615_ScopeTree>(),jule::Slice<jule::Ptr<_1ab557c92_Stmt>>(),jule::I64());
	_1ab56b525_build(&_27717_sp, _27436_tokens,_27517_s);
	return _27517_s;
}



inline std::tuple<jule::Ptr<_1aae075dc_TypeDecl>,jule::Bool> _1ab582a8b___build_type(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _28444_tokens,jule::I64* _28513_i,jule::Bool _28522_err) {
	_1ab594a8c_TypeBuilder _28617_tb = _1ab594a8c_TypeBuilder(_self_,_28444_tokens,_28513_i,_28522_err);
	jule::Ptr<_1aae075dc_TypeDecl> _29218_decl;
	jule::Bool _29224_ok;
	std::tie(_29218_decl,_29224_ok) = _1ab598871_build(&_28617_tb);
	return std::make_tuple(_29218_decl,_29224_ok);
}



inline std::tuple<jule::Ptr<_1aae075dc_TypeDecl>,jule::Bool> _1ab5830ec_build_type(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _29742_tokens,jule::I64* _29813_i,jule::Bool _29822_err) {
	_1ab005531_Token _29913_token = _29742_tokens[(*(_29813_i))];
	jule::Ptr<_1aae075dc_TypeDecl> _30018_t;
	jule::Bool _30021_ok;
	std::tie(_30018_t,_30021_ok) = _1ab582a8b___build_type(_self_, _29742_tokens,_29813_i,_29822_err);
	if (_29822_err && (!(_30021_ok))) {
		_1ab58111c_push_err(_self_.ptr(), _29913_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	}
	return std::make_tuple(_30018_t,_30021_ok);
}



inline jule::Ptr<_1ab02262a_TypeAliasDecl> _1ab5834a4_build_type_alias_decl(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _30746_tokens) {
	jule::I64 _30817_i = 1LL;
	if (_30817_i >= static_cast<jule::I64>(static_cast<jule::I64>(_30746_tokens.len()))) {
		_1ab58111c_push_err(_self_.ptr(), _30746_tokens[(_30817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ab02262a_TypeAliasDecl> _31317_tad = jule::new_ptr<_1ab02262a_TypeAliasDecl>(_1ab02262a_TypeAliasDecl(jule::Ptr<_1ab01d615_ScopeTree>(),jule::Bool(),jule::Bool(),_30746_tokens[1LL],_30746_tokens[1LL]._field_kind,jule::Ptr<_1aae075dc_TypeDecl>()));
	_1ab005531_Token _31717_token = _30746_tokens[_30817_i];
	if (_31717_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1ab58111c_push_err(_self_.ptr(), _31717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_30817_i)++;
	if (_30817_i >= static_cast<jule::I64>(static_cast<jule::I64>(_30746_tokens.len()))) {
		_1ab58111c_push_err(_self_.ptr(), _30746_tokens[(_30817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _31317_tad;
	}
	_31717_token=_30746_tokens[_30817_i];
	if (_31717_token._field_id != static_cast<jule::U64>(11LLU)) {
		_1ab58111c_push_err(_self_.ptr(), _30746_tokens[(_30817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _31317_tad;
	}
	(_30817_i)++;
	if (_30817_i >= static_cast<jule::I64>(static_cast<jule::I64>(_30746_tokens.len()))) {
		_1ab58111c_push_err(_self_.ptr(), _30746_tokens[(_30817_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _31317_tad;
	}
	jule::Ptr<_1aae075dc_TypeDecl> _33818_t;
	jule::Bool _33821_ok;
	std::tie(_33818_t,_33821_ok) = _1ab5830ec_build_type(_self_, _30746_tokens,(&(_30817_i)),true);
	_31317_tad.get()._field_kind=_33818_t;
	if (_33821_ok && (_30817_i < static_cast<jule::I64>(static_cast<jule::I64>(_30746_tokens.len())))) {
		_1ab58111c_push_err(_self_.ptr(), _30746_tokens[_30817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _31317_tad;
}



inline void _1ab5838e4_build_var_type_and_expr(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Ptr<_1ab01e6d2_VarDecl>& _34648_v,jule::Slice<_1ab005531_Token>& _34666_tokens) {
	jule::I64 _34717_i = 0LL;
	_1ab005531_Token _34817_tok = _34666_tokens[_34717_i];
	if (_34817_tok._field_id == static_cast<jule::U64>(11LLU)) {
		(_34717_i)++;
		if ((_34717_i >= static_cast<jule::I64>(static_cast<jule::I64>(_34666_tokens.len()))) || ((_34666_tokens[_34717_i]._field_id == static_cast<jule::U64>(7LLU)) && (_34666_tokens[_34717_i]._field_kind == jule::Str("=", 1)))) {
			_1ab58111c_push_err(_self_.ptr(), _34817_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;
		}
		jule::Ptr<_1aae075dc_TypeDecl> _35622_t;
		jule::Bool _35625_ok;
		std::tie(_35622_t,_35625_ok) = _1ab5830ec_build_type(_self_, _34666_tokens,(&(_34717_i)),true);
		if (_35625_ok) {
			_34648_v.get()._field_kind=_35622_t;
			if (_34717_i >= static_cast<jule::I64>(static_cast<jule::I64>(_34666_tokens.len()))) {
				return;
			}
			_34817_tok=_34666_tokens[_34717_i];
		}
	}
	if (_34817_tok._field_id == static_cast<jule::U64>(7LLU)) {
		if ((_34817_tok._field_kind != jule::Str("=", 1))) {
			_1ab58111c_push_err(_self_.ptr(), _34817_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;
		}
		jule::Slice<_1ab005531_Token> _37121_expr_tokens = _34666_tokens.slice((_34717_i + 1LL));
		if ((_37121_expr_tokens.len() == 0LL)) {
			_1ab58111c_push_err(_self_.ptr(), _34817_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;
		}
		_34648_v.get()._field_expr=_1ab5818c0_build_expr(_self_, _37121_expr_tokens);
	} else {
		_1ab58111c_push_err(_self_.ptr(), _34817_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1ab583cce_build_var_common(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Ptr<_1ab01e6d2_VarDecl>& _38241_v,jule::Slice<_1ab005531_Token> _38258_tokens) {
	_38241_v.get()._field_token=_38258_tokens[0LL];
	if (_38241_v.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1ab58111c_push_err(_self_.ptr(), _38241_v.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	_38241_v.get()._field_ident=_38241_v.get()._field_token._field_kind;
	_38241_v.get()._field_kind=nullptr;
	if ((_38258_tokens.len() > 1LL)) {
		_38258_tokens=_38258_tokens.slice(1LL);
		_1ab5838e4_build_var_type_and_expr(_self_, _38241_v,_38258_tokens);
	}
}



inline void _1ab5842a7_build_var_begin(_1ab5804c3_Parser* _self_,jule::Ptr<_1ab01e6d2_VarDecl>& _39739_v,jule::Ptr<jule::I64> _39756_i,jule::Slice<_1ab005531_Token>& _39766_tokens) {
	_1ab005531_Token _39813_tok = _39766_tokens[(*(_39756_i))];
	{
		auto &_match_expr{ _39813_tok._field_id };
		
		if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1ae6b5803:;
			{
				_39739_v.get()._field_statically=true;
				goto _case_begin_1ae6b4c64;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ae6b4c64:;
			{
				((*(_39756_i)))++;
				if ((*(_39756_i)) >= static_cast<jule::I64>(static_cast<jule::I64>(_39766_tokens.len()))) {
					_1ab58111c_push_err(&(*_self_), _39813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				if (_39766_tokens[(*(_39756_i))]._field_id == static_cast<jule::U64>(36LLU)) {
					_39739_v.get()._field_mutable=true;
					((*(_39756_i)))++;
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1ae6b4cca:;
			{
				((*(_39756_i)))++;
				_39739_v.get()._field_constant=true;
			}
		}
		else {
			_case_begin_1ae6b45d2:;
			{
				_1ab58111c_push_err(&(*_self_), _39813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1ae6b4bdc:;
	}
	if ((*(_39756_i)) >= static_cast<jule::I64>(static_cast<jule::I64>(_39766_tokens.len()))) {
		_1ab58111c_push_err(&(*_self_), _39813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_1ab01e6d2_VarDecl> _1ab58465e_build_var(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token> _43133_tokens) {
	jule::Ptr<jule::I64> _43217_i = jule::new_ptr<jule::I64>(0LL);
	jule::Ptr<_1ab01e6d2_VarDecl> _43317_v = jule::new_ptr<_1ab01e6d2_VarDecl>(_1ab01e6d2_VarDecl(jule::Ptr<_1ab01d615_ScopeTree>(),_43133_tokens[(*(_43217_i))],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>(),jule::Ptr<_1aae075dc_TypeDecl>(),jule::Ptr<_1aadb528c_Expr>()));
	_1ab5842a7_build_var_begin(_self_.ptr(), _43317_v,_43217_i,_43133_tokens);
	if ((*(_43217_i)) >= static_cast<jule::I64>(static_cast<jule::I64>(_43133_tokens.len()))) {
		return nullptr;
	}
	_43133_tokens=_43133_tokens.slice((*(_43217_i)));
	if ((_43133_tokens[0LL]._field_id == static_cast<jule::U64>(7LLU)) && (_43133_tokens[0LL]._field_kind == jule::Str("&", 1))) {
		_43317_v.get()._field_reference=true;
		if ((_43133_tokens.len() == 1LL)) {
			return nullptr;
		}
		_43133_tokens=_43133_tokens.slice(1LL);
	}
	_1ab583cce_build_var_common(_self_, _43317_v,_43133_tokens);
	return _43317_v;
}



inline jule::Ptr<_1ab01c845_GenericDecl> _1ab584a16_build_generic(_1ab5804c3_Parser* _self_,jule::Slice<_1ab005531_Token>& _45337_tokens) {
	if ((_45337_tokens.len() > 1LL)) {
		_1ab58111c_push_err(&(*_self_), _45337_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ab01c845_GenericDecl> _45717_g = jule::new_ptr<_1ab01c845_GenericDecl>(_1ab01c845_GenericDecl(_45337_tokens[0LL],jule::Str()));
	if (_45717_g.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1ab58111c_push_err(&(*_self_), _45717_g.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_45717_g.get()._field_ident=_45717_g.get()._field_token._field_kind;
	return _45717_g;
}



inline jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>> _1ab584e9a_build_generics(_1ab5804c3_Parser* _self_,jule::Slice<_1ab005531_Token>& _46838_tokens,_1ab005531_Token& _46856_error_token) {
	if ((_46838_tokens.len() == 0LL)) {
		_1ab58111c_push_err(&(*_self_), _46856_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<jule::Slice<_1ab005531_Token>> _47418_parts;
	jule::Slice<_1a92a31c6_Log> _47425_errors;
	std::tie(_47418_parts,_47425_errors) = _1ab57de50_parts(_46838_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_47425_errors.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_47425_errors);
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>> _48017_generics = jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>::alloc(0LL,static_cast<jule::I64>(_47418_parts.len()));
	{
		auto &expr = _47418_parts;
		auto it = expr.begin();
		_iter_begin_1ae6c5e51:;
		if (it != expr.end()) {
			jule::Slice<_1ab005531_Token> _1ae6c5e95_part = *it;
			{
				_48017_generics = jule::alloc_for_append(_48017_generics,1);_48017_generics.__push(_1ab584a16_build_generic(&(*_self_), _1ae6c5e95_part));
			}
			_iter_next_1ae6c5e51:;
			++it;
			goto _iter_begin_1ae6c5e51;
		}
		_iter_end_1ae6c5e51:;
	}
	return _48017_generics;
}



inline jule::Ptr<_1ab01d835_ParamDecl> _1ab585352_build_self_param(_1ab5804c3_Parser* _self_,jule::Slice<_1ab005531_Token> _48839_tokens) {
	if ((_48839_tokens.len() == 0LL)) {
		return nullptr;
	}
	jule::Ptr<_1ab01d835_ParamDecl> _49317_param = jule::new_ptr<_1ab01d835_ParamDecl>(_1ab01d835_ParamDecl());
	jule::I64 _49617_i = 0LL;
	if (_48839_tokens[_49617_i]._field_id == static_cast<jule::U64>(36LLU)) {
		_49317_param.get()._field_mutable=true;
		(_49617_i)++;
		if (_49617_i >= static_cast<jule::I64>(static_cast<jule::I64>(_48839_tokens.len()))) {
			_1ab58111c_push_err(&(*_self_), _48839_tokens[(_49617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if ((_48839_tokens[_49617_i]._field_kind == jule::Str("&", 1))) {
		_49317_param.get()._field_ident=jule::Str("&", 1);
		(_49617_i)++;
		if (_49617_i >= static_cast<jule::I64>(static_cast<jule::I64>(_48839_tokens.len()))) {
			_1ab58111c_push_err(&(*_self_), _48839_tokens[(_49617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if (_48839_tokens[_49617_i]._field_id == static_cast<jule::U64>(28LLU)) {
		_49317_param.get()._field_ident+=jule::Str("self", 4);
		_49317_param.get()._field_token=_48839_tokens[_49617_i];
		(_49617_i)++;
		if (_49617_i < static_cast<jule::I64>(static_cast<jule::I64>(_48839_tokens.len()))) {
			_1ab58111c_push_err(&(*_self_), _48839_tokens[_49617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	}
	return _49317_param;
}



inline void _1ab58582a_param_type_begin(_1ab5804c3_Parser* _self_,jule::Ptr<_1ab01d835_ParamDecl>& _52740_param,jule::I64& _52764_i,jule::Slice<_1ab005531_Token>& _52773_tokens) {
	for (; _52764_i < static_cast<jule::I64>(static_cast<jule::I64>(_52773_tokens.len())); (_52764_i)++) {
		{
			_1ab005531_Token _52917_token = _52773_tokens[_52764_i];
			if (_52917_token._field_id != static_cast<jule::U64>(7LLU)) {
				return;
			} else if ((_52917_token._field_kind != jule::Str("...", 3))) {
				return;
			}
			if (_52740_param.get()._field_variadic) {
				_1ab58111c_push_err(&(*_self_), _52917_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1ae6ce586;
			}
			_52740_param.get()._field_variadic=true;
		}
	_iter_next_1ae6ce586:;
	}
	_iter_end_1ae6ce586:;
}



inline void _1ab585c26_build_param_type(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Ptr<_1ab01d835_ParamDecl>& _54441_param,jule::Slice<_1ab005531_Token>& _54465_tokens) {
	jule::I64 _54517_i = 0LL;
	_1ab58582a_param_type_begin(_self_.ptr(), _54441_param,_54517_i,_54465_tokens);
	if (_54517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_54465_tokens.len()))) {
		return;
	}
	std::tie(_54441_param.get()._field_kind,std::ignore) = _1ab5830ec_build_type(_self_, _54465_tokens,(&(_54517_i)),true);
	if (_54517_i < static_cast<jule::I64>(static_cast<jule::I64>(_54465_tokens.len()))) {
		_1ab58111c_push_err(_self_.ptr(), _54465_tokens[_54517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1ab5861ee_build_param_body(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Ptr<_1ab01d835_ParamDecl>& _55741_param,jule::Ptr<jule::I64> _55764_i,jule::Slice<_1ab005531_Token> _55777_tokens) {
	_1ab005531_Token _55817_tok = _55777_tokens[(*(_55764_i))];
	_55741_param.get()._field_ident=_55817_tok._field_kind;
	if (((*(_55764_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_55777_tokens.len()))) {
		return;
	} else if ((((_55777_tokens.len() - (*(_55764_i))) - 1LL) < 2LL)) {
		_1ab58111c_push_err(_self_.ptr(), _55817_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;
	}
	_55817_tok=_55777_tokens[((*(_55764_i)) + 1LL)];
	if (_55817_tok._field_id != static_cast<jule::U64>(11LLU)) {
		_1ab585c26_build_param_type(_self_, _55741_param,_55777_tokens);
		return;
	}
	_55777_tokens=_55777_tokens.slice(((*(_55764_i)) + 2LL));
	_1ab585c26_build_param_type(_self_, _55741_param,_55777_tokens);
}



inline jule::Ptr<_1ab01d835_ParamDecl> _1ab5865a6_build_param(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token> _57835_tokens) {
	jule::Ptr<_1ab01d835_ParamDecl> _57917_param = jule::new_ptr<_1ab01d835_ParamDecl>(_1ab01d835_ParamDecl(_57835_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1aae075dc_TypeDecl>(),jule::Str()));
	if (_57917_param.get()._field_token._field_id == static_cast<jule::U64>(36LLU)) {
		_57917_param.get()._field_mutable=true;
		if ((_57835_tokens.len() == 1LL)) {
			_1ab58111c_push_err(_self_.ptr(), _57835_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_57835_tokens=_57835_tokens.slice(1LL);
		_57917_param.get()._field_token=_57835_tokens[0LL];
	}
	if ((_57835_tokens.len() >= 3LL)) {
		if ((_57917_param.get()._field_token._field_id == static_cast<jule::U64>(7LLU)) && (_57917_param.get()._field_token._field_kind == jule::Str("&", 1))) {
			if ((_57835_tokens.len() == 1LL)) {
				_1ab58111c_push_err(_self_.ptr(), _57835_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
			if ((_57835_tokens[1LL]._field_id == static_cast<jule::U64>(2LLU)) && (_57835_tokens[2LL]._field_id == static_cast<jule::U64>(11LLU))) {
				_57917_param.get()._field_reference=true;
				_57835_tokens=_57835_tokens.slice(1LL);
				_57917_param.get()._field_token=_57835_tokens[0LL];
			}
		}
	}
	if (_57917_param.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_57917_param.get()._field_ident=jule::Str("<anonymous>", 11);
		_1ab585c26_build_param_type(_self_, _57917_param,_57835_tokens);
	} else {
		jule::Ptr<jule::I64> _61521_i = jule::new_ptr<jule::I64>(0LL);
		_1ab5861ee_build_param_body(_self_, _57917_param,_61521_i,_57835_tokens);
	}
	return _57917_param;
}



inline void _1ab5868c5_check_params(_1ab5804c3_Parser* _self_,jule::Slice<jule::Ptr<_1ab01d835_ParamDecl>>& _62236_params) {
	{
		auto &expr = _62236_params;
		auto it = expr.begin();
		_iter_begin_1ae6e4524:;
		if (it != expr.end()) {
			jule::Ptr<_1ab01d835_ParamDecl> _1ae6e4601_param = *it;
			{
				if (_1aadda36c_is_self(_1ae6e4601_param.ptr()) || (_1ae6e4601_param.get()._field_kind != nullptr)) {
					goto _iter_next_1ae6e4524;
				}
				if (_1ae6e4601_param.get()._field_token._field_id == static_cast<jule::U64>(0LLU)) {
					_1ab58111c_push_err(&(*_self_), _1ae6e4601_param.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_1ae6e4601_param.get()._field_kind=jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl(_1ae6e4601_param.get()._field_token,jule::Any(jule::Any(jule::new_ptr<_1aaec9b87_IdentTypeDecl>(_1aaec9b87_IdentTypeDecl(_1ae6e4601_param.get()._field_token,_1ae6e4601_param.get()._field_token._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>>()))))));
					_1ae6e4601_param.get()._field_ident=jule::Str("<anonymous>", 11);
				}
			}
			_iter_next_1ae6e4524:;
			++it;
			goto _iter_begin_1ae6e4524;
		}
		_iter_end_1ae6e4524:;
	}
}



inline jule::Slice<jule::Ptr<_1ab01d835_ParamDecl>> _1ab586d59_build_params(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _64237_tokens,jule::Bool _64254_method) {
	jule::Slice<jule::Slice<_1ab005531_Token>> _64318_parts;
	jule::Slice<_1a92a31c6_Log> _64325_errs;
	std::tie(_64318_parts,_64325_errs) = _1ab57de50_parts(_64237_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_64325_errs);
	if ((_64318_parts.len() == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1ab01d835_ParamDecl>> _64917_params = nullptr;
	if (_64254_method && (_64318_parts.len() > 0LL)) {
		jule::Ptr<_1ab01d835_ParamDecl> _65121_param = _1ab585352_build_self_param(_self_.ptr(), _64318_parts[0LL]);
		if ((_65121_param != nullptr) && _1aadda36c_is_self(_65121_param.ptr())) {
			_64917_params = jule::alloc_for_append(_64917_params,1);_64917_params.__push(_65121_param);
			_64318_parts=_64318_parts.slice(1LL);
		}
	}
	{
		auto &expr = _64318_parts;
		auto it = expr.begin();
		_iter_begin_1ae6ebcce:;
		if (it != expr.end()) {
			jule::Slice<_1ab005531_Token> _1ae6ebd23_part = *it;
			{
				jule::Ptr<_1ab01d835_ParamDecl> _65921_param = _1ab5865a6_build_param(_self_, _1ae6ebd23_part);
				if ((_65921_param != nullptr)) {
					_64917_params = jule::alloc_for_append(_64917_params,1);_64917_params.__push(_65921_param);
				}
			}
			_iter_next_1ae6ebcce:;
			++it;
			goto _iter_begin_1ae6ebcce;
		}
		_iter_end_1ae6ebcce:;
	}
	_1ab5868c5_check_params(_self_.ptr(), _64917_params);
	return _64917_params;
}



inline std::tuple<jule::Ptr<_1aadb506c_RetTypeDecl>,jule::Bool> _1ab5872dd_build_multi_ret_type(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _66945_tokens,jule::I64& _66967_i) {
	jule::Ptr<_1aadb506c_RetTypeDecl> _66977_t = jule::Ptr<_1aadb506c_RetTypeDecl>();
	jule::Bool _66994_ok = jule::Bool();
	_66977_t=jule::new_ptr<_1aadb506c_RetTypeDecl>(_1aadb506c_RetTypeDecl());
	(_66967_i)++;
	if (_66967_i >= static_cast<jule::I64>(static_cast<jule::I64>(_66945_tokens.len()))) {
		(_66967_i)--;
		std::tie(_66977_t.get()._field_kind,_66994_ok) = _1ab5830ec_build_type(_self_, _66945_tokens,(&(_66967_i)),false);
		return std::make_tuple(_66977_t,_66994_ok);
	}
	(_66967_i)--;
	jule::Slice<_1ab005531_Token> _67917_range_tokens = _1ab57d636_range(_66967_i,jule::Str("(", 1),jule::Str(")", 1),_66945_tokens);
	jule::Slice<jule::Slice<_1ab005531_Token>> _68118_parts;
	jule::Slice<_1a92a31c6_Log> _68125_errs;
	std::tie(_68118_parts,_68125_errs) = _1ab57de50_parts(_67917_range_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_68125_errs);
	if ((_68118_parts.len() == 0LL)) {
		return std::make_tuple(_66977_t,_66994_ok);
	}
	jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>> _68717_types = jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_68118_parts.len()));
	_66977_t.get()._field_idents=jule::Slice<_1ab005531_Token>::alloc(0LL,static_cast<jule::I64>(_68118_parts.len()));
	{
		auto &expr = _68118_parts;
		auto it = expr.begin();
		_iter_begin_1ae703720:;
		if (it != expr.end()) {
			jule::Slice<_1ab005531_Token> _1ae703874_part = *it;
			{
				_1ab005531_Token _69021_token = _1ae703874_part[0LL];
				jule::I64 _69121_offset = 0LL;
				if ((_1ae703874_part.len() > 1LL)) {
					_69021_token=_1ae703874_part[1LL];
					if (_69021_token._field_id == static_cast<jule::U64>(11LLU)) {
						_69121_offset=2LL;
						if ((_1ae703874_part.len() < 3LL)) {
							_1ab58111c_push_err(_self_.ptr(), _69021_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1ae703720;
						}
					}
				}
				_69021_token=_1ae703874_part[0LL];
				if ((_69121_offset == 2LL)) {
					if (_69021_token._field_id != static_cast<jule::U64>(2LLU)) {
					}
					_66977_t.get()._field_idents = jule::alloc_for_append(_66977_t.get()._field_idents,1);_66977_t.get()._field_idents.__push(_69021_token);
				} else {
					_69021_token._field_kind=jule::Str("<anonymous>", 11);
					_66977_t.get()._field_idents = jule::alloc_for_append(_66977_t.get()._field_idents,1);_66977_t.get()._field_idents.__push(_69021_token);
				}
				jule::Ptr<_1aae075dc_TypeDecl> _71622_tk;
				std::tie(_71622_tk,std::ignore) = _1ab5830ec_build_type(_self_, _1ae703874_part,(&(_69121_offset)),true);
				if (_69121_offset < static_cast<jule::I64>(static_cast<jule::I64>(_1ae703874_part.len()))) {
					_1ab58111c_push_err(_self_.ptr(), _1ae703874_part[_69121_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_68717_types = jule::alloc_for_append(_68717_types,1);_68717_types.__push(_71622_tk);
			}
			_iter_next_1ae703720:;
			++it;
			goto _iter_begin_1ae703720;
		}
		_iter_end_1ae703720:;
	}
	if ((_68717_types.len() > 1LL)) {
		_66977_t.get()._field_kind=jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl(_66945_tokens[0LL],jule::Any(jule::Any(jule::new_ptr<_1aade33db_TupleTypeDecl>(_1aade33db_TupleTypeDecl(_68717_types))))));
	} else {
		_66977_t.get()._field_kind=_68717_types[0LL];
	}
	_66994_ok=true;
	return std::make_tuple(_66977_t,_66994_ok);
}



inline std::tuple<jule::Ptr<_1aadb506c_RetTypeDecl>,jule::Bool> _1ab587772_build_ret_type(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _73939_tokens,jule::I64& _73961_i) {
	jule::Ptr<_1aadb506c_RetTypeDecl> _73971_t = jule::Ptr<_1aadb506c_RetTypeDecl>();
	jule::Bool _73988_ok = jule::Bool();
	_73971_t=jule::new_ptr<_1aadb506c_RetTypeDecl>(_1aadb506c_RetTypeDecl());
	if (_73961_i >= static_cast<jule::I64>(static_cast<jule::I64>(_73939_tokens.len()))) {
		return std::make_tuple(_73971_t,_73988_ok);
	}
	_1ab005531_Token _74517_token = _73939_tokens[_73961_i];
	{
		auto &_match_expr{ _74517_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ae70da27:;
			{
				if ((_74517_token._field_kind == jule::Str("{", 1))) {
					return std::make_tuple(_73971_t,_73988_ok);
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ae70da8d:;
			{
				if ((_74517_token._field_kind == jule::Str("=", 1))) {
					return std::make_tuple(_73971_t,_73988_ok);
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1ae70db04:;
			{
				if ((_73961_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_73939_tokens.len()))) {
					_1ab58111c_push_err(_self_.ptr(), _74517_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_73971_t,_73988_ok);
				}
				(_73961_i)++;
				_74517_token=_73939_tokens[_73961_i];
				if (_74517_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _74517_token._field_kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1ae710e47:;
							{
								std::tie(_73971_t,_73988_ok) = _1ab5872dd_build_multi_ret_type(_self_, _73939_tokens,_73961_i);
								return std::make_tuple(_73971_t,_73988_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1ae711c28:;
							{
								_1ab58111c_push_err(_self_.ptr(), _74517_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_73971_t,_73988_ok);
							}
						}
						_match_end_1ae711b3a:;
					}
				}
				std::tie(_73971_t.get()._field_kind,_73988_ok) = _1ab5830ec_build_type(_self_, _73939_tokens,(&(_73961_i)),true);
				return std::make_tuple(_73971_t,_73988_ok);
			}
		}
		_match_end_1ae70d9a0:;
	}
	(_73961_i)++;
	_1ab58111c_push_err(_self_.ptr(), _74517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_73971_t,_73988_ok);
}



inline jule::Ptr<_1ab01da55_FnDecl> _1ab587cd3_build_fn_prototype(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _78443_tokens,jule::I64& _78465_i,jule::Bool _78473_method) {
	jule::Ptr<_1ab01da55_FnDecl> _78517_f = jule::new_ptr<_1ab01da55_FnDecl>(_1ab01da55_FnDecl(_78443_tokens[_78465_i],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>(),jule::Ptr<_1ab01d615_ScopeTree>(),jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>(),jule::Ptr<_1aadb506c_RetTypeDecl>(),jule::Slice<jule::Ptr<_1ab01d835_ParamDecl>>()));
	if (_78517_f.get()._field_token._field_id == static_cast<jule::U64>(38LLU)) {
		_78517_f.get()._field_statically=true;
		(_78465_i)++;
		if (_78465_i >= static_cast<jule::I64>(static_cast<jule::I64>(_78443_tokens.len()))) {
			_1ab58111c_push_err(_self_.ptr(), _78517_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_78517_f.get()._field_token=_78443_tokens[_78465_i];
	}
	if (_78517_f.get()._field_token._field_id == static_cast<jule::U64>(35LLU)) {
		_78517_f.get()._field_unsafety=true;
		(_78465_i)++;
		if (_78465_i >= static_cast<jule::I64>(static_cast<jule::I64>(_78443_tokens.len()))) {
			_1ab58111c_push_err(_self_.ptr(), _78517_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_78517_f.get()._field_token=_78443_tokens[_78465_i];
	}
	(_78465_i)++;
	if (_78465_i >= static_cast<jule::I64>(static_cast<jule::I64>(_78443_tokens.len()))) {
		_1ab58111c_push_err(_self_.ptr(), _78517_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1ab005531_Token _81813_tok = _78443_tokens[_78465_i];
	if (_81813_tok._field_id == static_cast<jule::U64>(2LLU)) {
		(_78465_i)++;
		if (_78465_i >= static_cast<jule::I64>(static_cast<jule::I64>(_78443_tokens.len()))) {
			_1ab58111c_push_err(_self_.ptr(), _78517_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_78517_f.get()._field_ident=_81813_tok._field_kind;
	} else {
		_78517_f.get()._field_ident=jule::Str("<anonymous>", 11);
	}
	_1ab005531_Token _83013_error_token = _78443_tokens[_78465_i];
	jule::Slice<_1ab005531_Token> _83117_generics_tokens = _1ab57d636_range(_78465_i,jule::Str("[", 1),jule::Str("]", 1),_78443_tokens);
	if ((_83117_generics_tokens != nullptr)) {
		_78517_f.get()._field_generics=_1ab584e9a_build_generics(_self_.ptr(), _83117_generics_tokens,_83013_error_token);
	}
	if ((_78443_tokens[_78465_i]._field_kind != jule::Str("(", 1))) {
		_1ab58111c_push_err(_self_.ptr(), _78443_tokens[_78465_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<_1ab005531_Token> _84117_params_toks = _1ab57d636_range(_78465_i,jule::Str("(", 1),jule::Str(")", 1),_78443_tokens);
	if ((_84117_params_toks.len() > 0LL)) {
		_78517_f.get()._field_params=_1ab586d59_build_params(_self_, _84117_params_toks,_78473_method);
	}
	if (_78465_i < static_cast<jule::I64>(static_cast<jule::I64>(_78443_tokens.len()))) {
		_1ab005531_Token _84717_token = _78443_tokens[_78465_i];
		if ((_84717_token._field_id == static_cast<jule::U64>(7LLU)) && (_84717_token._field_kind == jule::Str("!", 1))) {
			_78517_f.get()._field_exceptional=true;
			(_78465_i)++;
		}
	}
	std::tie(_78517_f.get()._field_result,std::ignore) = _1ab587772_build_ret_type(_self_, _78443_tokens,_78465_i);
	return _78517_f;
}



inline jule::Ptr<_1ab01da55_FnDecl> _1ab588344_build_fn(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _86033_tokens,jule::Bool _86050_method,jule::Bool _86064_prototype) {
	jule::I64 _86117_i = 0LL;
	jule::Ptr<_1ab01da55_FnDecl> _86217_f = _1ab587cd3_build_fn_prototype(_self_, _86033_tokens,_86117_i,_86050_method);
	if (_86064_prototype) {
		if (_86117_i < static_cast<jule::I64>(static_cast<jule::I64>(_86033_tokens.len()))) {
			_1ab58111c_push_err(_self_.ptr(), _86033_tokens[(_86117_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		return _86217_f;
	} else if ((_86217_f == nullptr)) {
		return _86217_f;
	}
	if (_86117_i >= static_cast<jule::I64>(static_cast<jule::I64>(_86033_tokens.len()))) {
		_1ab580869_stop(_self_.ptr());
		_1ab58111c_push_err(_self_.ptr(), _86217_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<_1ab005531_Token> _87817_block_tokens = _1ab57d636_range(_86117_i,jule::Str("{", 1),jule::Str("}", 1),_86033_tokens);
	if ((_87817_block_tokens != nullptr)) {
		_86217_f.get()._field_scope=_1ab58252a_build_scope(_self_, _87817_block_tokens,_86033_tokens[(_86117_i - 1LL)]);
		_86217_f.get()._field_scope.get()._field_unsafety=_86217_f.get()._field_unsafety;
		if (_86117_i < static_cast<jule::I64>(static_cast<jule::I64>(_86033_tokens.len()))) {
			_1ab58111c_push_err(_self_.ptr(), _86033_tokens[_86117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	} else {
		_1ab580869_stop(_self_.ptr());
		_1ab58111c_push_err(_self_.ptr(), _86217_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _86217_f;
}



inline jule::Slice<_1ab005531_Token> _1ab5886eb_get_use_decl_selectors(_1ab5804c3_Parser* _self_,jule::Slice<_1ab005531_Token> _89445_tokens) {
	jule::I64 _89517_i = 0LL;
	_89445_tokens=_1ab57d636_range(_89517_i,jule::Str("{", 1),jule::Str("}", 1),_89445_tokens);
	jule::Slice<jule::Slice<_1ab005531_Token>> _89718_parts;
	jule::Slice<_1a92a31c6_Log> _89725_errs;
	std::tie(_89718_parts,_89725_errs) = _1ab57de50_parts(_89445_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_89725_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_89725_errs);
		return nullptr;
	}
	jule::Slice<_1ab005531_Token> _90317_selectors = jule::Slice<_1ab005531_Token>::alloc(0LL,static_cast<jule::I64>(_89718_parts.len()));
	{
		auto &expr = _89718_parts;
		auto it = expr.begin();
		_iter_begin_1ae72e372:;
		if (it != expr.end()) {
			jule::Slice<_1ab005531_Token> _1ae72e790_part = *it;
			{
				if ((_1ae72e790_part.len() > 1LL)) {
					_1ab58111c_push_err(&(*_self_), _1ae72e790_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_1ab005531_Token _90821_tok = _1ae72e790_part[0LL];
				if ((_90821_tok._field_id != static_cast<jule::U64>(2LLU)) && (_90821_tok._field_id != static_cast<jule::U64>(28LLU))) {
					_1ab58111c_push_err(&(*_self_), _90821_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1ab581518_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1ae72e372;
				}
				_90317_selectors = jule::alloc_for_append(_90317_selectors,1);_90317_selectors.__push(_90821_tok);
			}
			_iter_next_1ae72e372:;
			++it;
			goto _iter_begin_1ae72e372;
		}
		_iter_end_1ae72e372:;
	}
	return _90317_selectors;
}



inline void _1ab588ae7_build_cpp_use_decl(_1ab5804c3_Parser* _self_,jule::Ptr<_1ab0237c4_UseDecl>& _91942_decl,jule::Slice<_1ab005531_Token>& _91959_tokens) {
	if ((_91959_tokens.len() > 1LL)) {
		_1ab58111c_push_err(&(*_self_), _91959_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_1ab005531_Token _92313_token = _91959_tokens[0LL];
	if ((_92313_token._field_id != static_cast<jule::U64>(6LLU)) || ((_92313_token._field_kind[0LL] != '`') && (_92313_token._field_kind[0LL] != '\"'))) {
		_1ab58111c_push_err(&(*_self_), _92313_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;
	}
	_91942_decl.get()._field_cpp_linked=true;
	_91942_decl.get()._field_link_path=_92313_token._field_kind.slice(1LL,(_92313_token._field_kind.len() - 1LL));
	if ((!(_1a92922d6_is_std_header_path(_91942_decl.get()._field_link_path)))) {
		_91942_decl.get()._field_link_path=_1a90c5d40_join(jule::Slice<jule::Str>({_1ab00c1e7_dir(_92313_token._field_file.ptr()),_91942_decl.get()._field_link_path}));
	}
}



inline void _1ab588ee3_build_std_use_decl(_1ab5804c3_Parser* _self_,jule::Ptr<_1ab0237c4_UseDecl>& _93542_decl,jule::Slice<_1ab005531_Token> _93562_tokens) {
	_93542_decl.get()._field_std=true;
	_1ab005531_Token _93817_token = _93562_tokens[0LL];
	if ((_93562_tokens.len() < 3LL)) {
		_1ab58111c_push_err(&(*_self_), _93817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_93562_tokens=_93562_tokens.slice(2LL);
	_93817_token=_93562_tokens[(_93562_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _93817_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1ae73a614:;
			{
				_1ab58111c_push_err(&(*_self_), _93817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ae73b22a:;
			{
				if ((_93817_token._field_kind != jule::Str("}", 1))) {
					_1ab58111c_push_err(&(*_self_), _93817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				jule::Slice<_1ab005531_Token> _95621_selectors = nullptr;
				std::tie(_93562_tokens,_95621_selectors) = _1ab57d944_range_last(_93562_tokens);
				_93542_decl.get()._field_selected=_1ab5886eb_get_use_decl_selectors(&(*_self_), _95621_selectors);
				if ((_93562_tokens.len() == 0LL)) {
					_1ab58111c_push_err(&(*_self_), _93817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93817_token=_93562_tokens[(_93562_tokens.len() - 1LL)];
				if (_93817_token._field_id != static_cast<jule::U64>(23LLU)) {
					_1ab58111c_push_err(&(*_self_), _93817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93562_tokens=_93562_tokens.slice(0LL,(_93562_tokens.len() - 1LL));
				if ((_93562_tokens.len() == 0LL)) {
					_1ab58111c_push_err(&(*_self_), _93817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ae73b291:;
			{
				if ((_93817_token._field_kind != jule::Str("*", 1))) {
					_1ab58111c_push_err(&(*_self_), _93817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93562_tokens=_93562_tokens.slice(0LL,(_93562_tokens.len() - 1LL));
				if ((_93562_tokens.len() == 0LL)) {
					_1ab58111c_push_err(&(*_self_), _93817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93817_token=_93562_tokens[(_93562_tokens.len() - 1LL)];
				if (_93817_token._field_id != static_cast<jule::U64>(23LLU)) {
					_1ab58111c_push_err(&(*_self_), _93817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93562_tokens=_93562_tokens.slice(0LL,(_93562_tokens.len() - 1LL));
				if ((_93562_tokens.len() == 0LL)) {
					_1ab58111c_push_err(&(*_self_), _93817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93542_decl.get()._field_full=true;
			}
		}
		_match_end_1ae73b15e:;
	}
	_93542_decl.get()._field_link_path=jule::Str("std::", 5) + _1ab58002d_tokstoa(_93562_tokens);
}



inline void _1ab5893de_build_ident_use_decl(_1ab5804c3_Parser* _self_,jule::Ptr<_1ab0237c4_UseDecl>& _99944_decl,jule::Slice<_1ab005531_Token> _99964_tokens) {
	_99944_decl.get()._field_std=false;
	_1ab005531_Token _100217_token = _99964_tokens[(_99964_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1ae748644:;
			{
				_1ab58111c_push_err(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ae7486aa:;
			{
				if ((_100217_token._field_kind != jule::Str("}", 1))) {
					_1ab58111c_push_err(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				jule::Slice<_1ab005531_Token> _101421_selectors = nullptr;
				std::tie(_99964_tokens,_101421_selectors) = _1ab57d944_range_last(_99964_tokens);
				_99944_decl.get()._field_selected=_1ab5886eb_get_use_decl_selectors(&(*_self_), _101421_selectors);
				if ((_99964_tokens.len() == 0LL)) {
					_1ab58111c_push_err(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_100217_token=_99964_tokens[(_99964_tokens.len() - 1LL)];
				if (_100217_token._field_id != static_cast<jule::U64>(23LLU)) {
					_1ab58111c_push_err(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_99964_tokens=_99964_tokens.slice(0LL,(_99964_tokens.len() - 1LL));
				if ((_99964_tokens.len() == 0LL)) {
					_1ab58111c_push_err(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ae748721:;
			{
				if ((_100217_token._field_kind != jule::Str("*", 1))) {
					_1ab58111c_push_err(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_99964_tokens=_99964_tokens.slice(0LL,(_99964_tokens.len() - 1LL));
				if ((_99964_tokens.len() == 0LL)) {
					_1ab58111c_push_err(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_100217_token=_99964_tokens[(_99964_tokens.len() - 1LL)];
				if (_100217_token._field_id != static_cast<jule::U64>(23LLU)) {
					_1ab58111c_push_err(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_99964_tokens=_99964_tokens.slice(0LL,(_99964_tokens.len() - 1LL));
				if ((_99964_tokens.len() == 0LL)) {
					_1ab58111c_push_err(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_99944_decl.get()._field_full=true;
			}
		}
		_match_end_1ae748556:;
	}
	_99944_decl.get()._field_link_path=_1ab58002d_tokstoa(_99964_tokens);
}



inline void _1ab5897da_parse_use_decl(_1ab5804c3_Parser* _self_,jule::Ptr<_1ab0237c4_UseDecl>& _106438_decl,jule::Slice<_1ab005531_Token> _106458_tokens) {
	if (_106438_decl.get()._field_cpp_linked) {
		_1ab588ae7_build_cpp_use_decl(&(*_self_), _106438_decl,_106458_tokens);
		return;
	}
	_1ab005531_Token _107017_token = _106458_tokens[0LL];
	if (_107017_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1ab58111c_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	if ((_106458_tokens.len() > 2LL) && (_106458_tokens[1LL]._field_id == static_cast<jule::U64>(12LLU))) {
		_106438_decl.get()._field_alias=_107017_token._field_kind;
		if (_106458_tokens[2LL]._field_id != static_cast<jule::U64>(2LLU)) {
			_1ab58111c_push_err(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1ab581518_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;
		}
		_106458_tokens=_106458_tokens.slice(2LL);
		_107017_token=_106458_tokens[0LL];
	}
	
	{
		
		if ((_107017_token._field_kind == jule::Str("std", 3))) {
			_case_begin_1ae76032b:;
			{
				_1ab588ee3_build_std_use_decl(&(*_self_), _106438_decl,_106458_tokens);
			}
		}
		else {
			_case_begin_1ae75e99b:;
			{
				_1ab5893de_build_ident_use_decl(&(*_self_), _106438_decl,_106458_tokens);
			}
		}
		_match_end_1ae75e946:;
	}
}



inline jule::Ptr<_1ab0237c4_UseDecl> _1ab589c6e_build_use_decl(_1ab5804c3_Parser* _self_,jule::Slice<_1ab005531_Token> _109937_tokens,jule::Bool _109954_cpp_linked) {
	jule::Ptr<_1ab0237c4_UseDecl> _110017_decl = jule::new_ptr<_1ab0237c4_UseDecl>(_1ab0237c4_UseDecl(_109937_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<_1ab005531_Token>(),_109954_cpp_linked,jule::Bool()));
	if ((_109937_tokens.len() < 2LL)) {
		_1ab58111c_push_err(&(*_self_), _110017_decl.get()._field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	}
	_109937_tokens=_109937_tokens.slice(1LL);
	_1ab5897da_parse_use_decl(&(*_self_), _110017_decl,_109937_tokens);
	return _110017_decl;
}



inline jule::Ptr<_1aadb528c_Expr> _1ab58a203_build_enum_item_expr(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Ptr<jule::I64> _111344_i,jule::Slice<_1ab005531_Token>& _111358_tokens) {
	jule::I64 _111417_brace_n = 0LL;
	jule::I64 _111513_expr_start = (*(_111344_i));
	for (; (*(_111344_i)) < static_cast<jule::I64>(static_cast<jule::I64>(_111358_tokens.len())); ((*(_111344_i)))++) {
		{
			_1ab005531_Token _111717_t = _111358_tokens[(*(_111344_i))];
			if (_111717_t._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _111717_t._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1ae766453:;
						{
							(_111417_brace_n)++;
							goto _iter_next_1ae764e68;
						}
					}
					else {
						_case_begin_1ae765ce3:;
						{
							(_111417_brace_n)--;
						}
					}
					_match_end_1ae766123:;
				}
			}
			if ((_111417_brace_n > 0LL)) {
				goto _iter_next_1ae764e68;
			}
			if ((_111717_t._field_id == static_cast<jule::U64>(8LLU)) || (((*(_111344_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_111358_tokens.len())))) {
				jule::Slice<_1ab005531_Token> _113625_expr_tokens = nullptr;
				if (_111717_t._field_id == static_cast<jule::U64>(8LLU)) {
					_113625_expr_tokens=_111358_tokens.slice(_111513_expr_start,(*(_111344_i)));
				} else {
					_113625_expr_tokens=_111358_tokens.slice(_111513_expr_start);
				}
				return _1ab5818c0_build_expr(_self_, _113625_expr_tokens);
			}
		}
	_iter_next_1ae764e68:;
	}
	_iter_end_1ae764e68:;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1ab023bd1_EnumItemDecl>> _1ab58a5aa_build_enum_items(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _114841_tokens) {
	jule::Slice<jule::Ptr<_1ab023bd1_EnumItemDecl>> _114917_items = jule::Slice<jule::Ptr<_1ab023bd1_EnumItemDecl>>::alloc(0LL,1LL);
	jule::Ptr<jule::I64> _115017_i = jule::new_ptr<jule::I64>(0LL);
	for (; (*(_115017_i)) < static_cast<jule::I64>(static_cast<jule::I64>(_114841_tokens.len())); ((*(_115017_i)))++) {
		{
			_1ab005531_Token _115221_t = _114841_tokens[(*(_115017_i))];
			jule::Ptr<_1ab023bd1_EnumItemDecl> _115321_item = jule::new_ptr<_1ab023bd1_EnumItemDecl>(_1ab023bd1_EnumItemDecl());
			_115321_item.get()._field_token=_115221_t;
			if (_115321_item.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
				_1ab58111c_push_err(_self_.ptr(), _115321_item.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1ab581518_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			}
			_115321_item.get()._field_ident=_115321_item.get()._field_token._field_kind;
			if ((((*(_115017_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_114841_tokens.len()))) || (_114841_tokens[((*(_115017_i)) + 1LL)]._field_id == static_cast<jule::U64>(8LLU))) {
				if (((*(_115017_i)) + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_114841_tokens.len()))) {
					((*(_115017_i)))++;
				}
				_114917_items = jule::alloc_for_append(_114917_items,1);_114917_items.__push(_115321_item);
				goto _iter_next_1ae76ac1b;
			}
			((*(_115017_i)))++;
			_115221_t=_114841_tokens[(*(_115017_i))];
			((*(_115017_i)))++;
			if ((_115221_t._field_id != static_cast<jule::U64>(7LLU)) || (_115221_t._field_kind != jule::Str("=", 1))) {
				_1ab58111c_push_err(_self_.ptr(), _115221_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1ab581518_push_suggestion(_self_.ptr(), jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>());
				goto _iter_next_1ae76ac1b;
			}
			if (((*(_115017_i)) >= static_cast<jule::I64>(static_cast<jule::I64>(_114841_tokens.len()))) || (_114841_tokens[(*(_115017_i))]._field_id == static_cast<jule::U64>(8LLU))) {
				_1ab58111c_push_err(_self_.ptr(), _115221_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1ae76ac1b;
			}
			_115321_item.get()._field_expr=_1ab58a203_build_enum_item_expr(_self_, _115017_i,_114841_tokens);
			_114917_items = jule::alloc_for_append(_114917_items,1);_114917_items.__push(_115321_item);
		}
	_iter_next_1ae76ac1b:;
	}
	_iter_end_1ae76ac1b:;
	return _114917_items;
}



inline jule::Ptr<_1ab0245c7_EnumDecl> _1ab58a962_build_enum_decl(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _118540_tokens) {
	if ((_118540_tokens.len() < 2LL) || (_118540_tokens.len() < 3LL)) {
		_1ab58111c_push_err(_self_.ptr(), _118540_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ab0245c7_EnumDecl> _119017_e = jule::new_ptr<_1ab0245c7_EnumDecl>(_1ab0245c7_EnumDecl(_118540_tokens[1LL],jule::Bool(),jule::Str(),jule::Ptr<_1aae075dc_TypeDecl>(),jule::Slice<jule::Ptr<_1ab023bd1_EnumItemDecl>>(),_1ab005531_Token()));
	if (_119017_e.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1ab58111c_push_err(_self_.ptr(), _119017_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_119017_e.get()._field_ident=_119017_e.get()._field_token._field_kind;
	jule::I64 _119817_i = 2LL;
	if (_118540_tokens[_119817_i]._field_id == static_cast<jule::U64>(11LLU)) {
		(_119817_i)++;
		if (_119817_i >= static_cast<jule::I64>(static_cast<jule::I64>(_118540_tokens.len()))) {
			_1ab58111c_push_err(_self_.ptr(), _118540_tokens[(_119817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _119017_e;
		}
		std::tie(_119017_e.get()._field_kind,std::ignore) = _1ab5830ec_build_type(_self_, _118540_tokens,(&(_119817_i)),true);
		if (_119817_i >= static_cast<jule::I64>(static_cast<jule::I64>(_118540_tokens.len()))) {
			_1ab580869_stop(_self_.ptr());
			_1ab58111c_push_err(_self_.ptr(), _119017_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1ab581518_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _119017_e;
		}
	} else {
		_119017_e.get()._field_kind=nullptr;
	}
	jule::Slice<_1ab005531_Token> _121517_item_tokens = _1ab57d636_range(_119817_i,jule::Str("{", 1),jule::Str("}", 1),_118540_tokens);
	if ((_121517_item_tokens == nullptr)) {
		_1ab580869_stop(_self_.ptr());
		_1ab58111c_push_err(_self_.ptr(), _119017_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _119017_e;
	} else if (_119817_i < static_cast<jule::I64>(static_cast<jule::I64>(_118540_tokens.len()))) {
		_1ab58111c_push_err(_self_.ptr(), _118540_tokens[_119817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_119017_e.get()._field_end=_118540_tokens[(_119817_i - 1LL)];
	_119017_e.get()._field_items=_1ab58a5aa_build_enum_items(_self_, _121517_item_tokens);
	return _119017_e;
}



inline jule::Ptr<_1ab024d36_FieldDecl> _1ab58ad19_build_field(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token> _122935_tokens) {
	jule::Ptr<_1ab024d36_FieldDecl> _123017_f = jule::new_ptr<_1ab024d36_FieldDecl>(_1ab024d36_FieldDecl());
	_123017_f.get()._field_public=_122935_tokens[0LL]._field_id == static_cast<jule::U64>(21LLU);
	if (_123017_f.get()._field_public) {
		if ((_122935_tokens.len() == 1LL)) {
			_1ab58111c_push_err(_self_.ptr(), _122935_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_122935_tokens=_122935_tokens.slice(1LL);
	}
	_123017_f.get()._field_mutable=_122935_tokens[0LL]._field_id == static_cast<jule::U64>(36LLU);
	if (_123017_f.get()._field_mutable) {
		if ((_122935_tokens.len() == 1LL)) {
			_1ab58111c_push_err(_self_.ptr(), _122935_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_122935_tokens=_122935_tokens.slice(1LL);
	}
	_123017_f.get()._field_token=_122935_tokens[0LL];
	if (_123017_f.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1ab58111c_push_err(_self_.ptr(), _123017_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_123017_f.get()._field_ident=_123017_f.get()._field_token._field_kind;
	if ((_122935_tokens.len() == 1LL)) {
		_1ab58111c_push_err(_self_.ptr(), _122935_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if (_122935_tokens[1LL]._field_id != static_cast<jule::U64>(11LLU)) {
		_1ab58111c_push_err(_self_.ptr(), _122935_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	_122935_tokens=_122935_tokens.slice(2LL);
	jule::I64 _126717_i = 0LL;
	std::tie(_123017_f.get()._field_kind,std::ignore) = _1ab5830ec_build_type(_self_, _122935_tokens,(&(_126717_i)),true);
	if (_126717_i < static_cast<jule::I64>(static_cast<jule::I64>(_122935_tokens.len()))) {
		_1ab005531_Token _127017_token = _122935_tokens[_126717_i];
		if ((_127017_token._field_id != static_cast<jule::U64>(7LLU)) || (_127017_token._field_kind != jule::Str("=", 1))) {
			_1ab58111c_push_err(_self_.ptr(), _122935_tokens[_126717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_126717_i)++;
		if (_126717_i >= static_cast<jule::I64>(static_cast<jule::I64>(_122935_tokens.len()))) {
			_1ab58111c_push_err(_self_.ptr(), _127017_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		}
		_122935_tokens=_122935_tokens.slice(_126717_i);
		_123017_f.get()._field_default=_1ab5818c0_build_expr(_self_, _122935_tokens);
	}
	return _123017_f;
}



inline jule::Slice<jule::Ptr<_1ab024d36_FieldDecl>> _1ab58b215_build_struct_decl_fields(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token> _128748_tokens) {
	jule::Slice<jule::Ptr<_1ab024d36_FieldDecl>> _128817_fields = nullptr;
	jule::Slice<jule::Ptr<_1ab557c92_Stmt>> _128917_stmts = _1ab55819e_split_stmts(_128748_tokens);
	{
		auto &expr = _128917_stmts;
		auto it = expr.begin();
		_iter_begin_1ae790c63:;
		if (it != expr.end()) {
			jule::Ptr<_1ab557c92_Stmt> _1ae790da6_stmt = *it;
			{
				_128748_tokens=_1ae790da6_stmt.get()._field_tokens;
				jule::Ptr<_1ab024d36_FieldDecl> _129221_f = _1ab58ad19_build_field(_self_, _128748_tokens);
				_128817_fields = jule::alloc_for_append(_128817_fields,1);_128817_fields.__push(_129221_f);
			}
			_iter_next_1ae790c63:;
			++it;
			goto _iter_begin_1ae790c63;
		}
		_iter_end_1ae790c63:;
	}
	return _128817_fields;
}



inline jule::Ptr<_1ab02561c_StructDecl> _1ab58b5ab_build_struct_decl(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _129842_tokens) {
	if ((_129842_tokens.len() < 3LL)) {
		_1ab58111c_push_err(_self_.ptr(), _129842_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::I64 _130417_i = 1LL;
	jule::Ptr<_1ab02561c_StructDecl> _130517_s = jule::new_ptr<_1ab02561c_StructDecl>(_1ab02561c_StructDecl(_129842_tokens[_130417_i],_1ab005531_Token(),jule::Str(),jule::Slice<jule::Ptr<_1ab024d36_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>(),jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>()));
	if (_130517_s.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1ab58111c_push_err(_self_.ptr(), _130517_s.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_130417_i)++;
	if (_130417_i >= static_cast<jule::I64>(static_cast<jule::I64>(_129842_tokens.len()))) {
		_1ab58111c_push_err(_self_.ptr(), _129842_tokens[_130417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _130517_s;
	}
	_130517_s.get()._field_ident=_130517_s.get()._field_token._field_kind;
	_1ab005531_Token _131913_error_token = _129842_tokens[_130417_i];
	jule::Slice<_1ab005531_Token> _132017_generics_tokens = _1ab57d636_range(_130417_i,jule::Str("[", 1),jule::Str("]", 1),_129842_tokens);
	if ((_132017_generics_tokens != nullptr)) {
		_130517_s.get()._field_generics=_1ab584e9a_build_generics(_self_.ptr(), _132017_generics_tokens,_131913_error_token);
	}
	if (_130417_i >= static_cast<jule::I64>(static_cast<jule::I64>(_129842_tokens.len()))) {
		_1ab58111c_push_err(_self_.ptr(), _129842_tokens[(_130417_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _130517_s;
	}
	jule::Slice<_1ab005531_Token> _133017_body_tokens = _1ab57d636_range(_130417_i,jule::Str("{", 1),jule::Str("}", 1),_129842_tokens);
	if ((_133017_body_tokens == nullptr)) {
		_1ab580869_stop(_self_.ptr());
		_1ab58111c_push_err(_self_.ptr(), _130517_s.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _130517_s;
	}
	if (_130417_i < static_cast<jule::I64>(static_cast<jule::I64>(_129842_tokens.len()))) {
		_1ab58111c_push_err(_self_.ptr(), _129842_tokens[_130417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_130517_s.get()._field_fields=_1ab58b215_build_struct_decl_fields(_self_, _133017_body_tokens);
	_130517_s.get()._field_end=_129842_tokens[(_130417_i - 1LL)];
	return _130517_s;
}



inline void _1ab58b8ca_check_method_receiver(_1ab5804c3_Parser* _self_,jule::Ptr<_1ab01da55_FnDecl>& _134541_f) {
	if (_134541_f.get()._field_statically) {
		if ((_134541_f.get()._field_params.len() > 0LL) && _1aadda36c_is_self(_134541_f.get()._field_params[0LL].ptr())) {
			_1ab58111c_push_err(&(*_self_), _134541_f.get()._field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		}
		return;
	}
	if ((_134541_f.get()._field_params.len() == 0LL)) {
		_1ab58111c_push_err(&(*_self_), _134541_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1ab01d835_ParamDecl> _135813_param = _134541_f.get()._field_params[0LL];
	if ((!(_1aadda36c_is_self(_135813_param.ptr())))) {
		_1ab58111c_push_err(&(*_self_), _134541_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
}



inline jule::Slice<jule::Ptr<_1ab01da55_FnDecl>> _1ab58bc82_build_trait_methods(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token> _136543_tokens) {
	jule::Slice<jule::Ptr<_1ab01da55_FnDecl>> _136617_methods = nullptr;
	jule::Slice<jule::Ptr<_1ab557c92_Stmt>> _136717_stmts = _1ab55819e_split_stmts(_136543_tokens);
	{
		auto &expr = _136717_stmts;
		auto it = expr.begin();
		_iter_begin_1ae7a443b:;
		if (it != expr.end()) {
			jule::Ptr<_1ab557c92_Stmt> _1ae7a457e_stmt = *it;
			{
				_136543_tokens=_1ae7a457e_stmt.get()._field_tokens;
				if ((_136543_tokens.len() == 0LL)) {
					goto _iter_next_1ae7a443b;
				}
				jule::Bool _137421_is_pub = false;
				if (_136543_tokens[0LL]._field_id == static_cast<jule::U64>(21LLU)) {
					_137421_is_pub=true;
					if ((_136543_tokens.len() == 1LL)) {
						_1ab58111c_push_err(_self_.ptr(), _136543_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_1ae7a443b;
					}
					_136543_tokens=_136543_tokens.slice(1LL);
				}
				jule::Ptr<_1ab01da55_FnDecl> _138421_f = _1ab588344_build_fn(_self_, _136543_tokens,true,true);
				if ((_138421_f != nullptr)) {
					if (_1ab01dc75_is_anon(_138421_f.ptr())) {
						_1ab58111c_push_err(_self_.ptr(), _138421_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
					_1ab58b8ca_check_method_receiver(_self_.ptr(), _138421_f);
					if ((_138421_f.get()._field_generics.len() > 0LL)) {
						_1ab58111c_push_err(_self_.ptr(), _138421_f.get()._field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					}
					_138421_f.get()._field_public=_137421_is_pub;
					_136617_methods = jule::alloc_for_append(_136617_methods,1);_136617_methods.__push(_138421_f);
				}
			}
			_iter_next_1ae7a443b:;
			++it;
			goto _iter_begin_1ae7a443b;
		}
		_iter_end_1ae7a443b:;
	}
	return _136617_methods;
}



inline jule::Ptr<_1ab025b6c_TraitDecl> _1ab58c139_build_trait_decl(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _140041_tokens) {
	if ((_140041_tokens.len() < 3LL)) {
		_1ab58111c_push_err(_self_.ptr(), _140041_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ab025b6c_TraitDecl> _140517_t = jule::new_ptr<_1ab025b6c_TraitDecl>(_1ab025b6c_TraitDecl(_140041_tokens[1LL],_1ab005531_Token(),jule::Str(),jule::Bool(),jule::Slice<jule::Ptr<_1ab01da55_FnDecl>>()));
	if (_140517_t.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1ab58111c_push_err(_self_.ptr(), _140517_t.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_140517_t.get()._field_ident=_140517_t.get()._field_token._field_kind;
	jule::I64 _141317_i = 2LL;
	jule::Slice<_1ab005531_Token> _141417_body_tokens = _1ab57d636_range(_141317_i,jule::Str("{", 1),jule::Str("}", 1),_140041_tokens);
	if ((_141417_body_tokens == nullptr)) {
		_1ab580869_stop(_self_.ptr());
		_1ab58111c_push_err(_self_.ptr(), _140517_t.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_141317_i < static_cast<jule::I64>(static_cast<jule::I64>(_140041_tokens.len()))) {
		_1ab58111c_push_err(_self_.ptr(), _140041_tokens[_141317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_140517_t.get()._field_methods=_1ab58bc82_build_trait_methods(_self_, _141417_body_tokens);
	_140517_t.get()._field_end=_140041_tokens[(_141317_i - 1LL)];
	return _140517_t;
}



inline jule::Ptr<_1ab01da55_FnDecl> _1ab58c4e1_build_cpp_link_fn(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token> _142941_tokens) {
	_142941_tokens=_142941_tokens.slice(1LL);
	jule::Ptr<_1ab01da55_FnDecl> _143117_f = _1ab588344_build_fn(_self_, _142941_tokens,false,true);
	if ((_143117_f != nullptr)) {
		if (_1ab01dc75_is_anon(_143117_f.ptr())) {
			_1ab58111c_push_err(_self_.ptr(), _143117_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		_143117_f.get()._field_cpp_linked=true;
	}
	return _143117_f;
}



inline jule::Ptr<_1ab01e6d2_VarDecl> _1ab58c898_build_cpp_link_var(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token> _144142_tokens) {
	_144142_tokens=_144142_tokens.slice(1LL);
	jule::Ptr<_1ab01e6d2_VarDecl> _144317_v = _1ab58465e_build_var(_self_, _144142_tokens);
	if ((_144317_v != nullptr)) {
		_144317_v.get()._field_cpp_linked=true;
		if ((_144317_v.get()._field_expr != nullptr)) {
			_1ab58111c_push_err(_self_.ptr(), _144317_v.get()._field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		}
	}
	return _144317_v;
}



inline jule::Ptr<_1ab02561c_StructDecl> _1ab58cc50_build_cpp_link_struct(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token> _145345_tokens) {
	_145345_tokens=_145345_tokens.slice(1LL);
	jule::Ptr<_1ab02561c_StructDecl> _145517_s = _1ab58b5ab_build_struct_decl(_self_, _145345_tokens);
	if ((_145517_s != nullptr)) {
		_145517_s.get()._field_cpp_linked=true;
	}
	return _145517_s;
}



inline jule::Ptr<_1ab02262a_TypeAliasDecl> _1ab58d14b_build_cpp_link_type_alias(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token> _146249_tokens) {
	_146249_tokens=_146249_tokens.slice(1LL);
	jule::Ptr<_1ab02262a_TypeAliasDecl> _146417_t = _1ab5834a4_build_type_alias_decl(_self_, _146249_tokens);
	if ((_146417_t != nullptr)) {
		_146417_t.get()._field_cpp_linked=true;
	}
	return _146417_t;
}



inline jule::Ptr<_1ab0237c4_UseDecl> _1ab58d4e2_build_cpp_link_use(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token> _147142_tokens) {
	if ((_147142_tokens.len() == 1LL)) {
		_1ab58111c_push_err(_self_.ptr(), _147142_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_147142_tokens=_147142_tokens.slice(1LL);
	
	return _1ab589c6e_build_use_decl(_self_.ptr(), _147142_tokens,true);
}



inline jule::Any _1ab58d899_build_cpp_link(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _148239_tokens) {
	_1ab005531_Token _148317_token = _148239_tokens[0LL];
	if ((_148239_tokens.len() == 1LL)) {
		_1ab58111c_push_err(_self_.ptr(), _148317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	_148317_token=_148239_tokens[1LL];
	{
		auto &_match_expr{ _148317_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ae7c11a0:;
			{
				return jule::Any(_1ab58d4e2_build_cpp_link_use(_self_, _148239_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1ae7c1216:;
			{
				return jule::Any(_1ab58c4e1_build_cpp_link_fn(_self_, _148239_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ae7c127c:;
			{
				return jule::Any(_1ab58c898_build_cpp_link_var(_self_, _148239_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1ae7c12e3:;
			{
				return jule::Any(_1ab58cc50_build_cpp_link_struct(_self_, _148239_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1ae7c1ba6:;
			{
				return jule::Any(_1ab58d14b_build_cpp_link_type_alias(_self_, _148239_tokens));
			}
		}
		else {
			_case_begin_1ae7c1139:;
			{
				_1ab58111c_push_err(_self_.ptr(), _148317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ae7c10d4:;
	}
	return jule::Any(nullptr);
}



inline jule::Ptr<_1ab01da55_FnDecl> _1ab58dc51_get_method(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _151335_tokens) {
	jule::I64 _151417_i = 0LL;
	_1ab005531_Token _151517_token = _151335_tokens[_151417_i];
	if (_151517_token._field_id == static_cast<jule::U64>(38LLU)) {
		if ((_151417_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_151335_tokens.len()))) {
			_1ab58111c_push_err(_self_.ptr(), _151517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_151417_i)++;
		_151517_token=_151335_tokens[_151417_i];
	}
	if (_151517_token._field_id == static_cast<jule::U64>(35LLU)) {
		if ((_151417_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_151335_tokens.len()))) {
			_1ab58111c_push_err(_self_.ptr(), _151517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_151417_i)++;
		_151517_token=_151335_tokens[_151417_i];
	}
	if (_151517_token._field_id != static_cast<jule::U64>(33LLU)) {
		_1ab58111c_push_err(_self_.ptr(), _151517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ab01da55_FnDecl> _153917_f = _1ab588344_build_fn(_self_, _151335_tokens,true,false);
	if ((_153917_f != nullptr) && _1ab01dc75_is_anon(_153917_f.ptr())) {
		_1ab58111c_push_err(_self_.ptr(), _153917_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _153917_f;
}



inline void _1ab58e14c_parse_impl_body(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Ptr<_1ab0261bc_Impl>& _154640_ipl,jule::Slice<_1ab005531_Token>& _154657_tokens) {
	jule::Slice<jule::Ptr<_1ab557c92_Stmt>> _154717_stmts = _1ab55819e_split_stmts(_154657_tokens);
	{
		auto &expr = _154717_stmts;
		auto it = expr.begin();
		_iter_begin_1ae7cc7a5:;
		if (it != expr.end()) {
			jule::Ptr<_1ab557c92_Stmt> _1ae7cc8d7_stmt = *it;
			{
				_154657_tokens=_1ae7cc8d7_stmt.get()._field_tokens;
				_1ab005531_Token _155021_token = _154657_tokens[0LL];
				jule::Bool _155121_is_pub = false;
				{
					auto &_match_expr{ _155021_token._field_id };
					
					if (_match_expr == static_cast<jule::U64>(39LLU)) {
						_case_begin_1ae7cdc3a:;
						{
							_1ab582096_push_directive(_self_.ptr(), _1ab581c77_build_directive(_self_.ptr(), _154657_tokens));
							goto _iter_next_1ae7cc7a5;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(21LLU)) {
						_case_begin_1ae7cdca1:;
						{
							_155121_is_pub=true;
							if ((_154657_tokens.len() == 1LL)) {
								_1ab58111c_push_err(_self_.ptr(), _154657_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_1ae7cc7a5;
							}
							_154657_tokens=_154657_tokens.slice(1LL);
							if ((_154657_tokens.len() > 0LL)) {
								_155021_token=_154657_tokens[0LL];
							}
						}
					}
					_match_end_1ae7cdbb3:;
				}
				{
					auto &_match_expr{ _155021_token._field_id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1ae7ced4b:;
						{
							jule::Ptr<_1ab01e6d2_VarDecl> _157025_v = _1ab58465e_build_var(_self_, _154657_tokens);
							if ((_157025_v != nullptr)) {
								_157025_v.get()._field_public=_155121_is_pub;
								_154640_ipl.get()._field_statics = jule::alloc_for_append(_154640_ipl.get()._field_statics,1);_154640_ipl.get()._field_statics.__push(_157025_v);
							}
						}
					}
					else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1ae7cedb2:;
						{
							jule::Ptr<_1ab01da55_FnDecl> _157825_f = _1ab58dc51_get_method(_self_, _154657_tokens);
							if ((_157825_f != nullptr)) {
								_1ab58b8ca_check_method_receiver(_self_.ptr(), _157825_f);
								_1ab5900c6_apply_fn_meta(_self_.ptr(), _157825_f,_155121_is_pub);
								_154640_ipl.get()._field_methods = jule::alloc_for_append(_154640_ipl.get()._field_methods,1);_154640_ipl.get()._field_methods.__push(_157825_f);
							}
						}
					}
					else {
						_case_begin_1ae7ce279:;
						{
							_1ab58111c_push_err(_self_.ptr(), _155021_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1ae7cc7a5;
						}
					}
					_match_end_1ae7ce224:;
				}
			}
			_iter_next_1ae7cc7a5:;
			++it;
			goto _iter_begin_1ae7cc7a5;
		}
		_iter_end_1ae7cc7a5:;
	}
}



inline jule::Ptr<_1ab0261bc_Impl> _1ab58e504_build_impl(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token> _159134_tokens) {
	_1ab005531_Token _159217_token = _159134_tokens[0LL];
	if ((_159134_tokens.len() < 2LL)) {
		_1ab58111c_push_err(_self_.ptr(), _159217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::I64 _159817_i = 1LL;
	jule::Ptr<_1aae075dc_TypeDecl> _160018_base;
	jule::Bool _160028_ok;
	std::tie(_160018_base,_160028_ok) = _1ab5830ec_build_type(_self_, _159134_tokens,(&(_159817_i)),true);
	if ((!(_160028_ok))) {
		return nullptr;
	}
	if (_159817_i >= static_cast<jule::I64>(static_cast<jule::I64>(_159134_tokens.len()))) {
		_1ab58111c_push_err(_self_.ptr(), _159217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ab0261bc_Impl> _160917_ipl = jule::new_ptr<_1ab0261bc_Impl>(_1ab0261bc_Impl(_1ab005531_Token(),_160018_base,jule::Ptr<_1aae075dc_TypeDecl>(),jule::Slice<jule::Ptr<_1ab01da55_FnDecl>>(),jule::Slice<jule::Ptr<_1ab01e6d2_VarDecl>>()));
	_159217_token=_159134_tokens[_159817_i];
	if (_159217_token._field_id != static_cast<jule::U64>(12LLU)) {
		if ((_159217_token._field_id == static_cast<jule::U64>(3LLU)) && (_159217_token._field_kind == jule::Str("{", 1))) {
			std::tie(_160917_ipl.get()._field_base,_160917_ipl.get()._field_dest) = std::make_tuple(_160917_ipl.get()._field_dest,_160917_ipl.get()._field_base);
			goto _julec_label_body;
		}
		_1ab580869_stop(_self_.ptr());
		_1ab58111c_push_err(_self_.ptr(), _159217_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	(_159817_i)++;
	if (_159817_i >= static_cast<jule::I64>(static_cast<jule::I64>(_159134_tokens.len()))) {
		_1ab580869_stop(_self_.ptr());
		_1ab58111c_push_err(_self_.ptr(), _159217_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	std::tie(_160917_ipl.get()._field_dest,_160028_ok) = _1ab5830ec_build_type(_self_, _159134_tokens,(&(_159817_i)),true);
	if ((!(_160028_ok))) {
		return nullptr;
	}
	if (_159817_i >= static_cast<jule::I64>(static_cast<jule::I64>(_159134_tokens.len()))) {
		_1ab580869_stop(_self_.ptr());
		_1ab58111c_push_err(_self_.ptr(), _159217_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	_julec_label_body:;
	jule::Slice<_1ab005531_Token> _164917_body_tokens = _1ab57d636_range(_159817_i,jule::Str("{", 1),jule::Str("}", 1),_159134_tokens);
	if ((_164917_body_tokens == nullptr)) {
		_1ab580869_stop(_self_.ptr());
		_1ab58111c_push_err(_self_.ptr(), _159217_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_159817_i < static_cast<jule::I64>(static_cast<jule::I64>(_159134_tokens.len()))) {
		_1ab58111c_push_err(_self_.ptr(), _159134_tokens[_159817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_160917_ipl.get()._field_end=_159134_tokens[(_159817_i - 1LL)];
	_1ab58e14c_parse_impl_body(_self_, _160917_ipl,_164917_body_tokens);
	return _160917_ipl;
}



inline jule::Any _1ab58e8ab_build_node_data(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _166440_tokens) {
	_1ab005531_Token _166517_token = _166440_tokens[0LL];
	{
		auto &_match_expr{ _166517_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a9199d59:;
			{
				
				return jule::Any(_1ab589c6e_build_use_decl(_self_.ptr(), _166440_tokens,false));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1a9199188:;
			{
				jule::Ptr<_1ab01da55_FnDecl> _167221_f = _1ab588344_build_fn(_self_, _166440_tokens,false,false);
				if ((_167221_f != nullptr)) {
					_167221_f.get()._field_global=true;
					if (_1ab01dc75_is_anon(_167221_f.ptr())) {
						_1ab58111c_push_err(_self_.ptr(), _167221_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
				}
				return jule::Any(_167221_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1a91991ee:;
			{
				return jule::Any(_1ab58465e_build_var(_self_, _166440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a9199ad4:;
			{
				return jule::Any(_1ab5834a4_build_type_alias_decl(_self_, _166440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1a9199b4a:;
			{
				return jule::Any(_1ab58a962_build_enum_decl(_self_, _166440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1a9199bb1:;
			{
				return jule::Any(_1ab58b5ab_build_struct_decl(_self_, _166440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a9199c27:;
			{
				return jule::Any(_1ab58c139_build_trait_decl(_self_, _166440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a9199ead:;
			{
				return jule::Any(_1ab58e504_build_impl(_self_, _166440_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a919a024:;
			{
				return _1ab58d899_build_cpp_link(_self_, _166440_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1a919a08a:;
			{
				return jule::Any(_1ab581c77_build_directive(_self_.ptr(), _166440_tokens));
			}
		}
		else {
			_case_begin_1a91988c4:;
			{
				_1ab58111c_push_err(_self_.ptr(), _166517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1a9199067:;
	}
}



inline void _1ab58ebca_check_directive(_1ab5804c3_Parser* _self_,_1aae02ad2_Node& _170535_node) {
	if (((*_self_)._field_directives == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _170535_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1aaeaeb7d_Directive>>()) {
			_case_begin_1a91a3945:;
			{
				goto _match_end_1a91a2c74;
			}
		}
		else {
			_case_begin_1a91a3329:;
			{
				if (((*_self_)._field_directives.len() != 0LL)) {
					_1ab58111c_push_err(&(*_self_), (*_self_)._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, cant assign to any define", 57),jule::Slice<jule::Any>());
				}
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1a91a2c74:;
	}
}



inline void _1ab5900c6_apply_fn_meta(_1ab5804c3_Parser* _self_,jule::Ptr<_1ab01da55_FnDecl>& _172237_f,jule::Bool _172249_is_pub) {
	_172237_f.get()._field_public=_172249_is_pub;
	_172237_f.get()._field_directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1ab5904c2_apply_meta(_1ab5804c3_Parser* _self_,_1aae02ad2_Node& _172834_node,jule::Bool _172846_is_pub) {
	{
		auto &_match_expr{ _172834_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1ab01e6d2_VarDecl>>()) {
			_case_begin_1a91a6b02:;
			{
				jule::Ptr<_1ab01e6d2_VarDecl> _173121_v = _172834_node._field_data.operator jule::Ptr<_1ab01e6d2_VarDecl>();
				if ((_173121_v == nullptr)) {
					return;
				}
				_173121_v.get()._field_public=_172846_is_pub;
				_173121_v.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01da55_FnDecl>>()) {
			_case_begin_1a91a6b68:;
			{
				jule::Ptr<_1ab01da55_FnDecl> _173921_f = _172834_node._field_data.operator jule::Ptr<_1ab01da55_FnDecl>();
				if ((_173921_f == nullptr)) {
					return;
				}
				_1ab5900c6_apply_fn_meta(&(*_self_), _173921_f,_172846_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab02262a_TypeAliasDecl>>()) {
			_case_begin_1a91a6bce:;
			{
				jule::Ptr<_1ab02262a_TypeAliasDecl> _174521_tad = _172834_node._field_data.operator jule::Ptr<_1ab02262a_TypeAliasDecl>();
				if ((_174521_tad == nullptr)) {
					return;
				}
				_174521_tad.get()._field_public=_172846_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab0245c7_EnumDecl>>()) {
			_case_begin_1a91a6c45:;
			{
				jule::Ptr<_1ab0245c7_EnumDecl> _175121_ed = _172834_node._field_data.operator jule::Ptr<_1ab0245c7_EnumDecl>();
				if ((_175121_ed == nullptr)) {
					return;
				}
				_175121_ed.get()._field_public=_172846_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab02561c_StructDecl>>()) {
			_case_begin_1a91a6eba:;
			{
				jule::Ptr<_1ab02561c_StructDecl> _175721_sd = _172834_node._field_data.operator jule::Ptr<_1ab02561c_StructDecl>();
				if ((_175721_sd == nullptr)) {
					return;
				}
				_175721_sd.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_175721_sd.get()._field_public=_172846_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab025b6c_TraitDecl>>()) {
			_case_begin_1a91a7031:;
			{
				jule::Ptr<_1ab025b6c_TraitDecl> _176521_td = _172834_node._field_data.operator jule::Ptr<_1ab025b6c_TraitDecl>();
				if ((_176521_td == nullptr)) {
					return;
				}
				_176521_td.get()._field_public=_172846_is_pub;
			}
		}
		else {
			_case_begin_1a91a6a8b:;
			{
				if (_172846_is_pub) {
					_1ab58111c_push_err(&(*_self_), _172834_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				}
			}
		}
		_match_end_1a91a6a36:;
	}
}



inline void _1ab5907e1_check_use_decl(_1ab5804c3_Parser* _self_,_1aae02ad2_Node& _177734_node) {
	{
		auto &_match_expr{ _177734_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1ab0237c4_UseDecl>>()) {
			_case_begin_1a91aedc4:;
			{
				goto _match_end_1a91b00d3;
			}
		}
		else {
			_case_begin_1a91b0138:;
			{
				return;
			}
		}
		_match_end_1a91b00d3:;
	}
	if (((*_self_)._field_ast.get()._field_nodes.len() > 0LL)) {
		_1ab58111c_push_err(&(*_self_), _177734_node._field_token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1ab581518_push_suggestion(&(*_self_), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	}
}



inline std::tuple<jule::Bool,jule::Any> _1ab590bdc_build_general_scope_node_data(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token> _179253_st) {
	jule::Bool _179268_is_pub = jule::Bool();
	jule::Any _179282_data = jule::Any();
	if (_179253_st[0LL]._field_id == static_cast<jule::U64>(21LLU)) {
		_179268_is_pub=true;
		_179253_st=_179253_st.slice(1LL);
		if ((_179253_st.len() == 0LL)) {
			_1ab58111c_push_err(_self_.ptr(), _179253_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_179268_is_pub,_179282_data);
		}
	}
	_179282_data=_1ab58e8ab_build_node_data(_self_, _179253_st);
	return std::make_tuple(_179268_is_pub,_179282_data);
}



inline _1aae02ad2_Node _1ab591083_parse_node(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _180735_st) {
	_1aae02ad2_Node _180817_node = _1aae02ad2_Node(_180735_st[0LL],jule::Any());
	jule::Bool _181214_is_pub;
	jule::Any _181226_data;
	std::tie(_181214_is_pub,_181226_data) = _1ab590bdc_build_general_scope_node_data(_self_, _180735_st);
	if (_181226_data == jule::Any(jule::Any(nullptr))) {
		return _180817_node;
	}
	_180817_node._field_data=_181226_data;
	_1ab5904c2_apply_meta(_self_.ptr(), _180817_node,_181214_is_pub);
	_1ab58ebca_check_directive(_self_.ptr(), _180817_node);
	_1ab5907e1_check_use_decl(_self_.ptr(), _180817_node);
	return _180817_node;
}



inline void _1ab5913a2_append_node(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Slice<_1ab005531_Token>& _182536_st) {
	if ((_182536_st.len() == 0LL)) {
		return;
	}
	_1aae02ad2_Node _183017_node = _1ab591083_parse_node(_self_, _182536_st);
	if ((_183017_node._field_data == jule::Any(jule::Any(nullptr))) || _1ab580b44_stopped(_self_.ptr())) {
		return;
	}
	{
		
		if (_1aae81bd8_is_directive(&_183017_node)) {
			_case_begin_1a91baee0:;
			{
				_1ab582096_push_directive(_self_.ptr(), _183017_node._field_data.operator jule::Ptr<_1aaeaeb7d_Directive>());
			}
		}
		else if (_1aaea4d1b_is_use_decl(&_183017_node)) {
			_case_begin_1a91bab9e:;
			{
				_self_.get()._field_ast.get()._field_use_decls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_use_decls,1);_self_.get()._field_ast.get()._field_use_decls.__push(_183017_node._field_data.operator jule::Ptr<_1ab0237c4_UseDecl>());
			}
		}
		else if (_1aae2d4c0_is_decl(&_183017_node) || _1aae98d32_is_impl(&_183017_node)) {
			_case_begin_1a91bac15:;
			{
				_self_.get()._field_ast.get()._field_nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_nodes,1);_self_.get()._field_ast.get()._field_nodes.__push(_183017_node);
			}
		}
		else {
			_case_begin_1a91bab38:;
			{
				_1ab58111c_push_err(_self_.ptr(), _183017_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a91ba31e:;
	}
}



inline void _1ab591957_remove_range(_1ab5804c3_Parser* _self_,jule::I64 _184831_i,jule::Str _184839_kind,jule::Slice<_1ab005531_Token>& _184851_tokens,jule::Slice<jule::I64>& _184873_ranges) {
	jule::Str _184913_close = _1ab57e2a2_get_close_kind_of_brace(_184839_kind);
	for (; (_184831_i >= 0LL); (_184831_i)--) {
		{
			_1ab005531_Token _185117_tok = _184851_tokens[_184873_ranges[_184831_i]];
			if (_185117_tok._field_kind != _184913_close) {
				goto _iter_next_1a91c0841;
			}
			_184873_ranges=jule::append(_184873_ranges.slice(0LL,_184831_i),_184873_ranges.slice((_184831_i + 1LL)));
			goto _iter_end_1a91c0841;
		}
	_iter_next_1a91c0841:;
	}
	_iter_end_1a91c0841:;
}



inline void _1ab591e74_push_wrong_order_close_err(_1ab5804c3_Parser* _self_,_1ab005531_Token& _186046_t,jule::Slice<_1ab005531_Token>& _186057_tokens,jule::Slice<jule::I64>& _186075_ranges) {
	{
		auto &_match_expr{ _186057_tokens[_186075_ranges[_186075_ranges.len() - 1LL]]._field_kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1a91c3756:;
			{
				_1ab58111c_push_err(&(*_self_), _186046_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1a91c37bc:;
			{
				_1ab58111c_push_err(&(*_self_), _186046_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1a91c3833:;
			{
				_1ab58111c_push_err(&(*_self_), _186046_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a91c36bd:;
	}
}



inline void _1ab592518_push_range_close(_1ab5804c3_Parser* _self_,_1ab005531_Token _187135_t,jule::Str _187145_left,jule::Slice<_1ab005531_Token>& _187157_tokens,jule::Slice<jule::I64>& _187179_ranges) {
	jule::I64 _187213_n = _187179_ranges.len();
	if ((_187213_n == 0LL)) {
		{
			auto &_match_expr{ _187135_t._field_kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1a91c72d7:;
				{
					_1ab58111c_push_err(&(*_self_), _187135_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1a91c734d:;
				{
					_1ab58111c_push_err(&(*_self_), _187135_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1a91c73b4:;
				{
					_1ab58111c_push_err(&(*_self_), _187135_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1a91c721b:;
		}
		return;
	} else if (_187157_tokens[_187179_ranges[(_187213_n - 1LL)]]._field_kind != _187145_left) {
		_1ab591e74_push_wrong_order_close_err(&(*_self_), _187135_t,_187157_tokens,_187179_ranges);
	}
	_1ab591957_remove_range(&(*_self_), static_cast<jule::I64>((_187213_n - 1LL)),_187135_t._field_kind,_187157_tokens,_187179_ranges);
}



inline void _1ab592837_check_ranges(_1ab5804c3_Parser* _self_,jule::Slice<_1ab005531_Token>& _188932_tokens) {
	jule::Slice<jule::I64> _189017_ranges = nullptr;
	{
		auto &expr = _188932_tokens;
		auto it = expr.begin();
		_iter_begin_1a91cb6b5:;
		if (it != expr.end()) {
			jule::I64 _1a91cb7e7_i = it - expr.begin();
			_1ab005531_Token &_1a91cba4a_token = *it;
			{
				if (_1a91cba4a_token._field_id != static_cast<jule::U64>(3LLU)) {
					goto _iter_next_1a91cb6b5;
				}
				{
					auto &_match_expr{ _1a91cba4a_token._field_kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1a91cc892:;
						{
							_189017_ranges = jule::alloc_for_append(_189017_ranges,1);_189017_ranges.__push(_1a91cb7e7_i);
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a91cc908:;
						{
							_1ab592518_push_range_close(&(*_self_), _1a91cba4a_token,jule::Str("(", 1),_188932_tokens,_189017_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1a91cc980:;
						{
							_1ab592518_push_range_close(&(*_self_), _1a91cba4a_token,jule::Str("{", 1),_188932_tokens,_189017_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a91cc9e6:;
						{
							_1ab592518_push_range_close(&(*_self_), _1a91cba4a_token,jule::Str("[", 1),_188932_tokens,_189017_ranges);
						}
					}
					_match_end_1a91cc83c:;
				}
			}
			_iter_next_1a91cb6b5:;
			++it;
			_1a91cb7e7_i++;
			goto _iter_begin_1a91cb6b5;
		}
		_iter_end_1a91cb6b5:;
	}
	{
		auto &expr = _189017_ranges;
		auto it = expr.begin();
		_iter_begin_1a91cbb9e:;
		if (it != expr.end()) {
			jule::I64 _1a91ceb91_i = *it;
			{
				_1ab005531_Token _191117_token = _188932_tokens[_1a91ceb91_i];
				{
					auto &_match_expr{ _191117_token._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a91d0b92:;
						{
							_1ab58111c_push_err(&(*_self_), _191117_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1a91d0c08:;
						{
							_1ab58111c_push_err(&(*_self_), _191117_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1a91d0c6e:;
						{
							_1ab58111c_push_err(&(*_self_), _191117_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1a91d0b09:;
				}
			}
			_iter_next_1a91cbb9e:;
			++it;
			goto _iter_begin_1a91cbb9e;
		}
		_iter_end_1a91cbb9e:;
	}
}



inline void _1ab592b56_parse(jule::Ptr<_1ab5804c3_Parser> _self_,jule::Ptr<_1ab00b67a_File>& _192330_f) {
	_self_.get()._field_ast=jule::new_ptr<_1aae013a5_Ast>(_1aae013a5_Ast(_192330_f,jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>(),jule::Slice<jule::Ptr<_1ab0237c4_UseDecl>>(),jule::Slice<_1aae02ad2_Node>()));
	_1ab592837_check_ranges(_self_.ptr(), _192330_f.get()._field_tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;
	}
	jule::Slice<jule::Ptr<_1ab557c92_Stmt>> _193317_stmts = _1ab55819e_split_stmts(_192330_f.get()._field_tokens);
	jule::I64 _193617_i = 0LL;
	_julec_label_iter:;
	for (; _193617_i < static_cast<jule::I64>(static_cast<jule::I64>(_193317_stmts.len())); (_193617_i)++) {
		{
			jule::Ptr<_1ab557c92_Stmt> _193921_stmt = _193317_stmts[_193617_i];
			if ((_193921_stmt.get()._field_tokens.len() == 0LL)) {
				return;
			}
			jule::Any _194425_data;
			std::tie(std::ignore,_194425_data) = _1ab590bdc_build_general_scope_node_data(_self_, _193921_stmt.get()._field_tokens);
			if (_194425_data == jule::Any(jule::Any(nullptr))) {
				goto _iter_end_1a91d4c1d;
			}
			if (_1ab580b44_stopped(_self_.ptr())) {
				return;
			}
			{
				auto &_match_expr{ _194425_data };
				
				if (_match_expr.type_is<jule::Ptr<_1aaeaeb7d_Directive>>()) {
					_case_begin_1a91d72c5:;
					{
						jule::Ptr<_1aaeaeb7d_Directive> _195525_d = _194425_data.operator jule::Ptr<_1aaeaeb7d_Directive>();
						if ((_195525_d != nullptr) && _1a92a545e_is_top_directive(_195525_d.get()._field_tag._field_kind)) {
							_self_.get()._field_ast.get()._field_top_directives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_top_directives,1);_self_.get()._field_ast.get()._field_top_directives.__push(_195525_d);
						} else {
							goto _iter_end_1a91d4c1d;
						}
					}
				}
				else {
					_case_begin_1a91d714e:;
					{
						goto _iter_end_1a91d4c1d;
					}
				}
				_match_end_1a91d7072:;
			}
		}
	_iter_next_1a91d4c1d:;
	}
	_iter_end_1a91d4c1d:;
	_self_.get()._field_errors=nullptr;
	for (; _193617_i < static_cast<jule::I64>(static_cast<jule::I64>(_193317_stmts.len())); (_193617_i)++) {
		{
			jule::Ptr<_1ab557c92_Stmt> _197021_stmt = _193317_stmts[_193617_i];
			_1ab5913a2_append_node(_self_, _197021_stmt.get()._field_tokens);
			if (_1ab580b44_stopped(_self_.ptr())) {
				goto _iter_end_1a91d4db6;
			}
		}
	_iter_next_1a91d4db6:;
	}
	_iter_end_1a91d4db6:;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab5804c3_Parser _Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1ab595241_push_err(_1ab594a8c_TypeBuilder* _self_,_1ab005531_Token _7827_token,jule::Str _7841_fmt) {
	if ((*_self_)._field_err) {
		_1ab58111c_push_err((*_self_)._field_p.ptr(), _7827_token,_7841_fmt,jule::Slice<jule::Any>());
	}
}



inline void _1ab59563c_push_suggestion(_1ab594a8c_TypeBuilder* _self_,jule::Str _8534_fmt,jule::Slice<jule::Any> _8547_args) {
	if ((*_self_)._field_err) {
		_1ab581518_push_suggestion((*_self_)._field_p.ptr(), _8534_fmt,_8547_args);
	}
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab595917_build_prim(_1ab594a8c_TypeBuilder* _self_) {
	jule::Ptr<_1aae075dc_TypeDecl> _9217_t = _1ab5940b9_build_prim_type((*_self_)._field_tokens[(*((*_self_)._field_i))]);
	((*((*_self_)._field_i)))++;
	return _9217_t;
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab595be2_build_namespace(_1ab594a8c_TypeBuilder* _self_) {
	jule::Ptr<_1aae075dc_TypeDecl> _9817_t = jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl((*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Any()));
	jule::Ptr<_1aaea458a_NamespaceTypeDecl> _10217_nst = jule::new_ptr<_1aaea458a_NamespaceTypeDecl>(_1aaea458a_NamespaceTypeDecl());
	jule::I64 _10317_n = 0LL;
	for (; (*((*_self_)._field_i)) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len())); ((*((*_self_)._field_i)))++) {
		{
			_1ab005531_Token _10521_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
			if (((_10317_n & 1LL) == 0LL)) {
				if (_10521_token._field_id != static_cast<jule::U64>(2LLU)) {
					_1ab595241_push_err(&(*_self_), _10521_token,jule::Str("invalid syntax", 14));
					_1ab59563c_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				}
				_10217_nst.get()._field_idents = jule::alloc_for_append(_10217_nst.get()._field_idents,1);_10217_nst.get()._field_idents.__push(_10521_token);
			} else if (_10521_token._field_id != static_cast<jule::U64>(23LLU)) {
				goto _iter_end_1a91e0773;
			}
			(_10317_n)++;
		}
	_iter_next_1a91e0773:;
	}
	_iter_end_1a91e0773:;
	_10217_nst.get()._field_idents=_10217_nst.get()._field_idents.slice(0LL,(_10217_nst.get()._field_idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_10217_nst.get()._field_kind=_1ab596572_build_ident(&(*_self_)).get()._field_kind.operator jule::Ptr<_1aaec9b87_IdentTypeDecl>();
	_9817_t.get()._field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>> _1ab595ebc_build_generics(_1ab594a8c_TypeBuilder* _self_) {
	if ((*((*_self_)._field_i)) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) {
		return nullptr;
	}
	_1ab005531_Token _13113_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if ((_13113_token._field_id != static_cast<jule::U64>(3LLU)) || (_13113_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1ab005531_Token>> _13617_parts = _1ab596297_ident_generics(&(*_self_));
	if ((_13617_parts.len() == 0LL)) {
		_1ab595241_push_err(&(*_self_), _13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>> _14217_types = jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_13617_parts.len()));
	{
		auto &expr = _13617_parts;
		auto it = expr.begin();
		_iter_begin_1a91eab68:;
		if (it != expr.end()) {
			jule::Slice<_1ab005531_Token> _1a91eb0a8_part = *it;
			{
				jule::I64 _14421_j = 0LL;
				jule::Ptr<_1aae075dc_TypeDecl> _14522_t;
				std::tie(_14522_t,std::ignore) = _1ab5830ec_build_type((*_self_)._field_p, _1a91eb0a8_part,(&(_14421_j)),true);
				if (_14421_j < static_cast<jule::I64>(static_cast<jule::I64>(_1a91eb0a8_part.len()))) {
					_1ab595241_push_err(&(*_self_), _1a91eb0a8_part[_14421_j],jule::Str("invalid syntax", 14));
				}
				_14217_types = jule::alloc_for_append(_14217_types,1);_14217_types.__push(_14522_t);
			}
			_iter_next_1a91eab68:;
			++it;
			goto _iter_begin_1a91eab68;
		}
		_iter_end_1a91eab68:;
	}
	return _14217_types;
}



inline jule::Slice<jule::Slice<_1ab005531_Token>> _1ab596297_ident_generics(_1ab594a8c_TypeBuilder* _self_) {
	jule::I64 _15513_first = (*((*_self_)._field_i));
	jule::I64 _15617_range_n = 0LL;
	for (; (*((*_self_)._field_i)) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len())); ((*((*_self_)._field_i)))++) {
		{
			_1ab005531_Token _15817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
			if (_15817_token._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _15817_token._field_kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1a91eec8d:;
						{
							(_15617_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a9200112:;
						{
							(_15617_range_n)--;
						}
					}
					_match_end_1a92000ac:;
				}
			}
			if ((_15617_range_n == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1a91ec4a5;
			}
		}
	_iter_next_1a91ec4a5:;
	}
	_iter_end_1a91ec4a5:;
	jule::Slice<_1ab005531_Token> _17017_tokens = (*_self_)._field_tokens.slice((_15513_first + 1LL),((*((*_self_)._field_i)) - 1LL));
	jule::Slice<jule::Slice<_1ab005531_Token>> _17118_parts;
	jule::Slice<_1a92a31c6_Log> _17125_errors;
	std::tie(_17118_parts,_17125_errors) = _1ab57de50_parts(_17017_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_17125_errors);
	}
	return _17118_parts;
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab596572_build_ident(_1ab594a8c_TypeBuilder* _self_) {
	if ((((*((*_self_)._field_i)) + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)]._field_id == static_cast<jule::U64>(23LLU))) {
		return _1ab595be2_build_namespace(&(*_self_));
	}
	_1ab005531_Token _18217_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	jule::Ptr<_1aaec9b87_IdentTypeDecl> _18317_it = jule::new_ptr<_1aaec9b87_IdentTypeDecl>(_1aaec9b87_IdentTypeDecl(_18217_token,_18217_token._field_kind,false,jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>>()));
	((*((*_self_)._field_i)))++;
	_18317_it.get()._field_generics=_1ab595ebc_build_generics(&(*_self_));
	return jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl(_18217_token,jule::Any(jule::Any(_18317_it))));
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab59684c_build_cpp_link(_1ab594a8c_TypeBuilder* _self_) {
	if ((((*((*_self_)._field_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)]._field_id != static_cast<jule::U64>(20LLU))) {
		_1ab595241_push_err(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	}
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1aae075dc_TypeDecl> _20217_t = _1ab596572_build_ident(&(*_self_));
	_20217_t.get()._field_kind.operator jule::Ptr<_1aaec9b87_IdentTypeDecl>().get()._field_cpp_linked=true;
	return _20217_t;
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab596b27_build_fn(_1ab594a8c_TypeBuilder* _self_) {
	_1ab005531_Token _20817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	jule::Ptr<_1ab01da55_FnDecl> _20917_f = _1ab587cd3_build_fn_prototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);
	if ((_20917_f == nullptr)) {
		return nullptr;
	}
	if ((!(_1ab01dc75_is_anon(_20917_f.ptr())))) {
		_1ab595241_push_err(&(*_self_), _20917_f.get()._field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl(_20817_token,jule::Any(jule::Any(_20917_f))));
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab596e02_build_ptr(_1ab594a8c_TypeBuilder* _self_) {
	_1ab005531_Token _22317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((*((*_self_)._field_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) {
		_1ab595241_push_err(&(*_self_), _22317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*_self_)._field_i)))++;
	if ((*_self_)._field_tokens[(*((*_self_)._field_i))]._field_id == static_cast<jule::U64>(35LLU)) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl(_22317_token,jule::Any(jule::Any(jule::new_ptr<_1aae087db_PtrTypeDecl>(_1aae087db_PtrTypeDecl(nullptr))))));
	}
	jule::Ptr<_1aae075dc_TypeDecl> _24017_elem = _1ab598596_step(&(*_self_));
	if ((_24017_elem == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl(_22317_token,jule::Any(jule::Any(jule::new_ptr<_1aae087db_PtrTypeDecl>(_1aae087db_PtrTypeDecl(_24017_elem))))));
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab5971cc_build_sptr(_1ab594a8c_TypeBuilder* _self_) {
	_1ab005531_Token _25417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((*((*_self_)._field_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) {
		_1ab595241_push_err(&(*_self_), _25417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1aae075dc_TypeDecl> _26117_elem = _1ab598596_step(&(*_self_));
	if ((_26117_elem == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl(_25417_token,jule::Any(jule::Any(jule::new_ptr<_1aada98ad_SptrTypeDecl>(_1aada98ad_SptrTypeDecl(_26117_elem))))));
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab5974a7_build_op(_1ab594a8c_TypeBuilder* _self_) {
	_1ab005531_Token _27517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	{
		auto &_match_expr{ _27517_token._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a9218702:;
			{
				return _1ab596e02_build_ptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a9217e3d:;
			{
				return _1ab5971cc_build_sptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a9217ea4:;
			{
				return jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl(_1ab005531_Token(),jule::Any(jule::Any(jule::new_ptr<_1aada98ad_SptrTypeDecl>(_1aada98ad_SptrTypeDecl(_1ab5971cc_build_sptr(&(*_self_))))))));
			}
		}
		else {
			_case_begin_1a9217503:;
			{
				_1ab595241_push_err(&(*_self_), _27517_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1a9217db6:;
	}
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab597782_build_slc(_1ab594a8c_TypeBuilder* _self_) {
	_1ab005531_Token _29717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1aae075dc_TypeDecl> _29917_elem = _1ab598596_step(&(*_self_));
	if ((_29917_elem == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl(_29717_token,jule::Any(jule::Any(jule::new_ptr<_1aae7e367_SlcTypeDecl>(_1aae7e367_SlcTypeDecl(_29917_elem))))));
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab597a5c_build_arr(_1ab594a8c_TypeBuilder* _self_) {
	if ((*((*_self_)._field_i)) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) {
		_1ab595241_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	}
	jule::I64 _32013_expr_delta = (*((*_self_)._field_i));
	jule::Ptr<_1aae075dc_TypeDecl> _32217_elem = _1ab598596_step(&(*_self_));
	if ((_32217_elem == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1b4ae977b_ArrTypeDecl> _32717_arrt = jule::new_ptr<_1b4ae977b_ArrTypeDecl>(_1b4ae977b_ArrTypeDecl(_32217_elem,jule::Ptr<_1aadb528c_Expr>()));
	jule::Slice<_1ab005531_Token> _33117_expr_tokens = (*_self_)._field_tokens.slice(0LL,_32013_expr_delta);
	std::tie(std::ignore,_33117_expr_tokens) = _1ab57d944_range_last(_33117_expr_tokens);
	_33117_expr_tokens=_33117_expr_tokens.slice(1LL,(_33117_expr_tokens.len() - 1LL));
	_1ab005531_Token _33417_token = _33117_expr_tokens[0LL];
	if (((_33117_expr_tokens.len() == 1LL) && (_33417_token._field_id == static_cast<jule::U64>(7LLU))) && (_33417_token._field_kind == jule::Str("...", 3))) {
	} else {
		_32717_arrt.get()._field_size=_1ab5818c0_build_expr((*_self_)._field_p, _33117_expr_tokens);
	}
	return jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl(_33417_token,jule::Any(jule::Any(_32717_arrt))));
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab597ee1_build_map(_1ab594a8c_TypeBuilder* _self_,jule::I64 _34728_colon,jule::Slice<_1ab005531_Token>& _34745_tokens) {
	_1ab005531_Token _34817_colon_token = (*_self_)._field_tokens[_34728_colon];
	if ((_34728_colon == 0LL) || ((_34728_colon + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_34745_tokens.len())))) {
		_1ab595241_push_err(&(*_self_), _34817_colon_token,jule::Str("type missing", 12));
		return nullptr;
	}
	jule::Slice<_1ab005531_Token> _35317_key_tokens = _34745_tokens.slice(0LL,_34728_colon);
	jule::Slice<_1ab005531_Token> _35417_val_tokens = _34745_tokens.slice((_34728_colon + 1LL));
	jule::Ptr<_1aadb4d4c_MapTypeDecl> _35517_mapt = jule::new_ptr<_1aadb4d4c_MapTypeDecl>(_1aadb4d4c_MapTypeDecl());
	jule::I64 _35717_j = 0LL;
	jule::Ptr<_1aae075dc_TypeDecl> _35818_keyt;
	jule::Bool _35828_ok;
	std::tie(_35818_keyt,_35828_ok) = _1ab5830ec_build_type((*_self_)._field_p, _35317_key_tokens,(&(_35717_j)),(*_self_)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < static_cast<jule::I64>(static_cast<jule::I64>(_35317_key_tokens.len()))) {
		_1ab595241_push_err(&(*_self_), _35317_key_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	_35517_mapt.get()._field_key=_35818_keyt;
	_35717_j=0LL;
	jule::Ptr<_1aae075dc_TypeDecl> _36718_valt;
	std::tie(_36718_valt,_35828_ok) = _1ab5830ec_build_type((*_self_)._field_p, _35417_val_tokens,(&(_35717_j)),(*_self_)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < static_cast<jule::I64>(static_cast<jule::I64>(_35417_val_tokens.len()))) {
		_1ab595241_push_err(&(*_self_), _35417_val_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	_35517_mapt.get()._field_val=_36718_valt;
	return jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl(_34817_colon_token,jule::Any(jule::Any(_35517_mapt))));
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab5982bb_build_enumerable(_1ab594a8c_TypeBuilder* _self_) {
	_1ab005531_Token _38217_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((((*((*_self_)._field_i)) + 2LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) || (_38217_token._field_id != static_cast<jule::U64>(3LLU))) || (_38217_token._field_kind != jule::Str("[", 1))) {
		_1ab595241_push_err(&(*_self_), _38217_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*_self_)._field_i)))++;
	_38217_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if ((_38217_token._field_id == static_cast<jule::U64>(3LLU)) && (_38217_token._field_kind == jule::Str("]", 1))) {
		return _1ab597782_build_slc(&(*_self_));
	}
	((*((*_self_)._field_i)))--;
	jule::Slice<_1ab005531_Token> _39618_map_tokens;
	jule::I64 _39630_colon;
	std::tie(_39618_map_tokens,_39630_colon) = _1ab5944a4_split_map_range((*_self_)._field_tokens,(*((*_self_)._field_i)));
	((*((*_self_)._field_i)))++;
	if ((_39630_colon == -1LL)) {
		return _1ab597a5c_build_arr(&(*_self_));
	}
	return _1ab597ee1_build_map(&(*_self_), _39630_colon,_39618_map_tokens);
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab598596_step(_1ab594a8c_TypeBuilder* _self_) {
	_1ab005531_Token _40513_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	{
		auto &_match_expr{ _40513_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a9233288:;
			{
				return _1ab595917_build_prim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a92332ee:;
			{
				return _1ab596572_build_ident(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a9233365:;
			{
				return _1ab59684c_build_cpp_link(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a92333cb:;
			{
				return _1ab596b27_build_fn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a9234058:;
			{
				return _1ab5974a7_build_op(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a92340be:;
			{
				return _1ab5982bb_build_enumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1a92313da:;
			{
				((*((*_self_)._field_i)))++;
				_1ab595241_push_err(&(*_self_), _40513_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1a9233211:;
	}
}



inline std::tuple<jule::Ptr<_1aae075dc_TypeDecl>,jule::Bool> _1ab598871_build(_1ab594a8c_TypeBuilder* _self_) {
	jule::Bool _43444_ok = jule::Bool();
	jule::Ptr<_1aae075dc_TypeDecl> _43517_root = _1ab598596_step(&(*_self_));
	if ((_43517_root == nullptr)) {
		_43444_ok = false;
		return std::make_tuple(_1ab593d66_build_void_type(),_43444_ok);
	}
	_43444_ok = true;
	return std::make_tuple(_43517_root,_43444_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1ab594a8c_TypeBuilder _Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1acee76b9_FloatInfo _Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aca822a9_DecimalSlice _Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad256780_LeftCheat _Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acc8a13d_set(_1ad2569a0_Decimal* _self_,jule::Str _23422_s) {
	jule::Bool _23432_ok = jule::Bool();
	jule::I64 _23517_i = 0LL;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if (_23517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) {
		return _23432_ok;
	}
	{
		
		if (_23422_s[_23517_i] == '+') {
			_case_begin_1aedda5bb:;
			{
				(_23517_i)++;
			}
		}
		else if (_23422_s[_23517_i] == '-') {
			_case_begin_1aeddaca3:;
			{
				(*_self_)._field_neg=true;
				(_23517_i)++;
			}
		}
		_match_end_1aedda80d:;
	}
	jule::Bool _25217_sawdot = false;
	jule::Bool _25317_sawdigits = false;
	for (; _23517_i < static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len())); (_23517_i)++) {
		{
			{
				
				if (_23422_s[_23517_i] == '_') {
					_case_begin_1aeddcc1c:;
					{
						goto _iter_next_1aedda456;
					}
				}
				else if (_23422_s[_23517_i] == '.') {
					_case_begin_1aeddcc94:;
					{
						if (_25217_sawdot) {
							return _23432_ok;
						}
						_25217_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1aedda456;
					}
				}
				else if (('0' <= _23422_s[_23517_i]) && (_23422_s[_23517_i] <= '9')) {
					_case_begin_1aeddcd1b:;
					{
						_25317_sawdigits=true;
						if ((_23422_s[_23517_i] == '0') && ((*_self_)._field_nd == 0LL)) {
							((*_self_)._field_dp)--;
							goto _iter_next_1aedda456;
						}
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23422_s[_23517_i];
							((*_self_)._field_nd)++;
						} else if (_23422_s[_23517_i] != '0') {
							(*_self_)._field_trunc=true;
						}
						goto _iter_next_1aedda456;
					}
				}
				_match_end_1aeddcaeb:;
			}
			goto _iter_end_1aedda456;
		}
	_iter_next_1aedda456:;
	}
	_iter_end_1aedda456:;
	if ((!(_25317_sawdigits))) {
		return _23432_ok;
	}
	if ((!(_25217_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	}
	if ((_23517_i < static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) && (_1acde8433_lower(_23422_s[_23517_i]) == 'e')) {
		(_23517_i)++;
		if (_23517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) {
			return _23432_ok;
		}
		jule::I64 _29821_esign = 1LL;
		if (_23422_s[_23517_i] == '+') {
			(_23517_i)++;
		} else if (_23422_s[_23517_i] == '-') {
			(_23517_i)++;
			_29821_esign=-1LL;
		}
		if (((_23517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) || (_23422_s[_23517_i] < '0')) || (_23422_s[_23517_i] > '9')) {
			return _23432_ok;
		}
		jule::I64 _30821_e = 0LL;
		for (; (_23517_i < static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) && ((('0' <= _23422_s[_23517_i]) && (_23422_s[_23517_i] <= '9')) || (_23422_s[_23517_i] == '_')); (_23517_i)++) {
			{
				if (_23422_s[_23517_i] == '_') {
					goto _iter_next_1aede682a;
				}
				if ((_30821_e < 10000LL)) {
					_30821_e=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_30821_e * 10LL))) + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_23422_s[_23517_i]))))) - '0');
				}
			}
		_iter_next_1aede682a:;
		}
		_iter_end_1aede682a:;
		(*_self_)._field_dp+=static_cast<jule::I64>(_30821_e * _29821_esign);
	}
	if (_23517_i != static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) {
		return _23432_ok;
	}
	_23432_ok=true;
	return _23432_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1aca81e8a_float_bits(_1ad2569a0_Decimal* _self_,_1acee76b9_FloatInfo& _32830_flt) {
	jule::U64 _32848_b = jule::U64();
	jule::Bool _32856_overflow = jule::Bool();
	jule::I64 _32917_exp = 0LL;
	jule::U64 _33017_mant = 0LLU;
	if (((*_self_)._field_nd == 0LL)) {
		_33017_mant=0LLU;
		_32917_exp=_32830_flt._field_bias;
		goto _julec_label_out;
	}
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	}
	if (((*_self_)._field_dp < -330LL)) {
		_33017_mant=0LLU;
		_32917_exp=_32830_flt._field_bias;
		goto _julec_label_out;
	}
	_32917_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35521_n = 0LL;
			if ((*_self_)._field_dp >= static_cast<jule::I64>(static_cast<jule::I64>(_1acb802db_POWTAB.len()))) {
				_35521_n=27LL;
			} else {
				_35521_n=_1acb802db_POWTAB[(*_self_)._field_dp];
			}
			_1ad256d35_shift(&(*_self_), static_cast<jule::I64>((-(_35521_n))));
			_32917_exp+=_35521_n;
		}
	_iter_next_1aedeecc8:;
	}
	_iter_end_1aedeecc8:;
	while (((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5'))) {
		{
			jule::I64 _36521_n = 0LL;
			if ((-((*_self_)._field_dp)) >= static_cast<jule::I64>(static_cast<jule::I64>(_1acb802db_POWTAB.len()))) {
				_36521_n=27LL;
			} else {
				_36521_n=_1acb802db_POWTAB[(-((*_self_)._field_dp))];
			}
			_1ad256d35_shift(&(*_self_), _36521_n);
			_32917_exp-=_36521_n;
		}
	_iter_next_1aee0046b:;
	}
	_iter_end_1aee0046b:;
	(_32917_exp)--;
	if (_32917_exp < static_cast<jule::I64>(static_cast<jule::I64>((_32830_flt._field_bias + 1LL)))) {
		jule::I64 _38217_n = (_32830_flt._field_bias + 1LL) - _32917_exp;
		_1ad256d35_shift(&(*_self_), static_cast<jule::I64>((-(_38217_n))));
		_32917_exp+=_38217_n;
	}
	if ((_32917_exp - _32830_flt._field_bias) >= static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _32830_flt._field_expbits) - 1LL))))) {
		goto _julec_label_overflow;
	}
	_1ad256d35_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(1LL + _32830_flt._field_mantbits)));
	_33017_mant=static_cast<jule::U64>(_1ad2573da_rounded_integer(&(*_self_)));
	if (_33017_mant == static_cast<jule::U64>(static_cast<jule::U64>(2LLU << _32830_flt._field_mantbits))) {
		_33017_mant>>=1LLU;
		(_32917_exp)++;
		if ((_32917_exp - _32830_flt._field_bias) >= static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _32830_flt._field_expbits) - 1LL))))) {
			goto _julec_label_overflow;
		}
	}
	if (((_33017_mant & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32830_flt._field_mantbits)))) == 0LLU)) {
		_32917_exp=_32830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_33017_mant=0LLU;
	_32917_exp=static_cast<jule::I64>(static_cast<jule::I64>(((static_cast<jule::U64>(1LLU) << _32830_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_32830_flt._field_bias)))));
	_32856_overflow=true;
	_julec_label_out:;
	jule::U64 _41817_bits = _33017_mant & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32830_flt._field_mantbits)) - 1LLU))));
	_41817_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_32917_exp - _32830_flt._field_bias) & static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _32830_flt._field_expbits) - 1LL))))))) << _32830_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41817_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32830_flt._field_mantbits)) << _32830_flt._field_expbits);
	}
	_32848_b = _41817_bits;
	return std::make_tuple(_32848_b,_32856_overflow);
}



inline void _1ad256bc0_assign(_1ad2569a0_Decimal* _self_,jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>();
	jule::I64 _15617_n = 0LL;
	while ((_15229_v > 0LLU)) {
		{
			jule::U64 _15817_v1 = (_15229_v / 10LLU);
			_15229_v-=static_cast<jule::U64>(10LLU * _15817_v1);
			_15317_buf[_15617_n]=static_cast<jule::U8>(static_cast<jule::U8>(_15229_v + '0'));
			(_15617_n)++;
			_15229_v=_15817_v1;
		}
	_iter_next_1aee11801:;
	}
	_iter_end_1aee11801:;
	(*_self_)._field_nd=0LL;
	(_15617_n)--;
	for (; (_15617_n >= 0LL); (_15617_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_15317_buf[_15617_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1aee13094:;
	}
	_iter_end_1aee13094:;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1ad2576b5_trim((*_self_));
}



inline void _1ad256d35_shift(_1ad2569a0_Decimal* _self_,jule::I64 _17728_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1aee14ace:;
		}
		else if ((_17728_k > 0LL)) {
			_case_begin_1aee14b56:;
			{
				while ((_17728_k > 60LL)) {
					{
						_1ad257b05_left_shift((*_self_),60LLU);
						_17728_k-=60LL;
					}
				_iter_next_1aee153c6:;
				}
				_iter_end_1aee153c6:;
				_1ad257b05_left_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_17728_k)));
			}
		}
		else if ((_17728_k < 0LL)) {
			_case_begin_1aee14bcd:;
			{
				while ((_17728_k < -60LL)) {
					{
						_1ad25782a_right_shift((*_self_),60LLU);
						_17728_k+=60LL;
					}
				_iter_next_1aee15926:;
				}
				_iter_end_1aee15926:;
				_1ad25782a_right_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_17728_k)))));
			}
		}
		_match_end_1aee149d0:;
	}
}



inline void _1ad256e9a_round_down(_1ad2569a0_Decimal* _self_,jule::I64 _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*_self_)._field_nd)) {
		return;
	}
	(*_self_)._field_nd=_19729_nd;
	_1ad2576b5_trim((*_self_));
}



inline void _1ad257110_round_up(_1ad2569a0_Decimal* _self_,jule::I64 _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*_self_)._field_nd)) {
		return;
	}
	jule::I64 _21217_i = (_20627_nd - 1LL);
	for (; (_21217_i >= 0LL); (_21217_i)--) {
		{
			jule::U8 _21417_c = (*_self_)._field_d[_21217_i];
			if (_21417_c < '9') {
				((*_self_)._field_d[_21217_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_21217_i + 1LL));
				return;
			}
		}
	_iter_next_1aee1a84e:;
	}
	_iter_end_1aee1a84e:;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1ad257275_round(_1ad2569a0_Decimal* _self_,jule::I64 _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*_self_)._field_nd)) {
		return;
	}
	if (_1ad257c6a_should_round_up((*_self_),_23324_nd)) {
		_1ad257110_round_up(&(*_self_), _23324_nd);
	} else {
		_1ad256e9a_round_down(&(*_self_), _23324_nd);
	}
}



inline jule::U64 _1ad2573da_rounded_integer(_1ad2569a0_Decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	}
	jule::I64 _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	for (; (_25017_i < (*_self_)._field_dp) && (_25017_i < (*_self_)._field_nd); (_25017_i)++) {
		{
			_25117_n=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_25117_n * 10LLU))) + static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_d[_25017_i] - '0'))));
		}
	_iter_next_1aee1d7db:;
	}
	_iter_end_1aee1d7db:;
	for (; _25017_i < (*_self_)._field_dp; (_25017_i)++) {
		{
			_25117_n*=10LLU;
		}
	_iter_next_1aee2238e:;
	}
	_iter_end_1aee2238e:;
	if (_1ad257c6a_should_round_up((*_self_),(*_self_)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad2569a0_Decimal _Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad2c1d8e_Const> static__1ad2c20ae_new_i64(jule::I64 _1327_x) {
	return jule::new_ptr<_1ad2c1d8e_Const>(_1ad2c1d8e_Const(jule::Any(jule::Any(_1327_x))));
}



inline jule::Ptr<_1ad2c1d8e_Const> static__1ad2c2224_new_u64(jule::U64 _1527_x) {
	return jule::new_ptr<_1ad2c1d8e_Const>(_1ad2c1d8e_Const(jule::Any(jule::Any(_1527_x))));
}



inline jule::Ptr<_1ad2c1d8e_Const> static__1ad2c2411_new_bool(jule::Bool _1728_x) {
	return jule::new_ptr<_1ad2c1d8e_Const>(_1ad2c1d8e_Const(jule::Any(jule::Any(_1728_x))));
}



inline jule::Ptr<_1ad2c1d8e_Const> static__1ad2c25ed_new_str(jule::Str _1927_x) {
	return jule::new_ptr<_1ad2c1d8e_Const>(_1ad2c1d8e_Const(jule::Any(jule::Any(_1927_x))));
}



inline jule::Ptr<_1ad2c1d8e_Const> static__1ad2c27da_new_f64(jule::F64 _2127_x) {
	return jule::new_ptr<_1ad2c1d8e_Const>(_1ad2c1d8e_Const(jule::Any(jule::Any(_2127_x))));
}



inline jule::Ptr<_1ad2c1d8e_Const> static__1ad2c29d8_new_nil(void) {
	return jule::new_ptr<_1ad2c1d8e_Const>(_1ad2c1d8e_Const(jule::Any(jule::Any(nullptr))));
}



inline jule::I64 _1ad2c3148_read_i64(_1ad2c1d8e_Const* _self_) {
	if ((!(_1ad2c5bea_is_i64(&(*_self_))))) {
		return 0LL;
	}
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1ad2c3423_read_u64(_1ad2c1d8e_Const* _self_) {
	if ((!(_1ad2c5ec5_is_u64(&(*_self_))))) {
		return 0LLU;
	}
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1ad2c36ed_read_bool(_1ad2c1d8e_Const* _self_) {
	if ((!(_1ad2c62a0_is_bool(&(*_self_))))) {
		return false;
	}
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1ad2c39c8_read_str(_1ad2c1d8e_Const* _self_) {
	if ((!(_1ad2c657a_is_str(&(*_self_))))) {
		return jule::Str();
	}
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1ad2c3ca3_read_f64(_1ad2c1d8e_Const* _self_) {
	if ((!(_1ad2c6855_is_f64(&(*_self_))))) {
		return 0LL;
	}
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1ad2c407d_as_i64(_1ad2c1d8e_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1b0109972:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1b01099d8:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1b010939a:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1b010928a:;
			{
				return 0LL;
			}
		}
		_match_end_1b010906a:;
	}
}



inline jule::U64 _1ad2c4358_as_u64(_1ad2c1d8e_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1b010bb0b:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1b010bb72:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1b010b523:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1b010b479:;
			{
				return 0LLU;
			}
		}
		_match_end_1b010b424:;
	}
}



inline jule::F64 _1ad2c4633_as_f64(_1ad2c1d8e_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1b010dc95:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1b010dd0b:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1b010d6ac:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1b010d613:;
			{
				return 0LL;
			}
		}
		_match_end_1b010d5ad:;
	}
}



inline void _1ad2c4952_set_i64(_1ad2c1d8e_Const* _self_,jule::I64 _13030_x) {
	(*_self_)._field_data=jule::Any(_13030_x);
}



inline void _1ad2c4c71_set_u64(_1ad2c1d8e_Const* _self_,jule::U64 _13230_x) {
	(*_self_)._field_data=jule::Any(_13230_x);
}



inline void _1ad2c5090_set_bool(_1ad2c1d8e_Const* _self_,jule::Bool _13431_x) {
	(*_self_)._field_data=jule::Any(_13431_x);
}



inline void _1ad2c53ae_set_str(_1ad2c1d8e_Const* _self_,jule::Str _13630_x) {
	(*_self_)._field_data=jule::Any(_13630_x);
}



inline void _1ad2c56cd_set_f64(_1ad2c1d8e_Const* _self_,jule::F64 _13830_x) {
	(*_self_)._field_data=jule::Any(_13830_x);
}



inline void _1ad2c5920_set_nil(_1ad2c1d8e_Const* _self_) {
	(*_self_)._field_data=jule::Any(nullptr);
}



inline jule::Bool _1ad2c5bea_is_i64(_1ad2c1d8e_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1b01151ec:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b0114ad1:;
			{
				return false;
			}
		}
		_match_end_1b0114a7b:;
	}
}



inline jule::Bool _1ad2c5ec5_is_u64(_1ad2c1d8e_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1b0115c47:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b0115450:;
			{
				return false;
			}
		}
		_match_end_1b0115582:;
	}
}



inline jule::Bool _1ad2c62a0_is_bool(_1ad2c1d8e_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1b0116792:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b0115e9a:;
			{
				return false;
			}
		}
		_match_end_1b01160cc:;
	}
}



inline jule::Bool _1ad2c657a_is_str(_1ad2c1d8e_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1b01172dc:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b01169e5:;
			{
				return false;
			}
		}
		_match_end_1b0116b27:;
	}
}



inline jule::Bool _1ad2c6855_is_f64(_1ad2c1d8e_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1b0117d37:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b0117540:;
			{
				return false;
			}
		}
		_match_end_1b0117672:;
	}
}



inline jule::Bool _1ad2c6b30_is_nil(_1ad2c1d8e_Const* _self_) {
	return (*_self_)._field_data == jule::Any(jule::Any(nullptr));
}



inline jule::Bool _1ad2c6ed7_are_same_types(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _19033_x) {
	{
		
		if (_1ad2c5bea_is_i64(&(*_self_)) == _1ad2c5bea_is_i64(&_19033_x)) {
			_case_begin_1b0119a2b:;
			{
				return true;
			}
		}
		else if (_1ad2c5ec5_is_u64(&(*_self_)) == _1ad2c5ec5_is_u64(&_19033_x)) {
			_case_begin_1b0119ad6:;
			{
				return true;
			}
		}
		else if (_1ad2c6855_is_f64(&(*_self_)) == _1ad2c6855_is_f64(&_19033_x)) {
			_case_begin_1b0119b5d:;
			{
				return true;
			}
		}
		else if (_1ad2c62a0_is_bool(&(*_self_)) == _1ad2c62a0_is_bool(&_19033_x)) {
			_case_begin_1b011980b:;
			{
				return true;
			}
		}
		else if (_1ad2c657a_is_str(&(*_self_)) == _1ad2c657a_is_str(&_19033_x)) {
			_case_begin_1b0119872:;
			{
				return true;
			}
		}
		else if (_1ad2c6b30_is_nil(&(*_self_)) == _1ad2c6b30_is_nil(&_19033_x)) {
			_case_begin_1b01198d8:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b0119399:;
			{
				return false;
			}
		}
		_match_end_1b0119300:;
	}
}



inline jule::Bool _1ad2c738e_and(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _21522_x) {
	{
		
		if (_1ad2c62a0_is_bool(&(*_self_)) && _1ad2c62a0_is_bool(&_21522_x)) {
			_case_begin_1b011daeb:;
			{
				return _1ad2c36ed_read_bool(&(*_self_)) && _1ad2c36ed_read_bool(&_21522_x);
			}
		}
		else {
			_case_begin_1b011d4be:;
			{
				return false;
			}
		}
		_match_end_1b011d425:;
	}
}



inline jule::Bool _1ad2c7746_or(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _22621_x) {
	{
		
		if (_1ad2c62a0_is_bool(&(*_self_)) && _1ad2c62a0_is_bool(&_22621_x)) {
			_case_begin_1b012079b:;
			{
				return _1ad2c36ed_read_bool(&(*_self_)) || _1ad2c36ed_read_bool(&_22621_x);
			}
		}
		else {
			_case_begin_1b012016e:;
			{
				return false;
			}
		}
		_match_end_1b01200c5:;
	}
}



inline jule::Bool _1ad2c7aed_eq(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _23721_x) {
	{
		
		if (_1ad2c6b30_is_nil(&(*_self_))) {
			_case_begin_1b0121eb7:;
			{
				return _1ad2c6b30_is_nil(&_23721_x);
			}
		}
		else if (_1ad2c62a0_is_bool(&(*_self_))) {
			_case_begin_1b0122072:;
			{
				return _1ad2c62a0_is_bool(&_23721_x) && (_1ad2c36ed_read_bool(&(*_self_)) == _1ad2c36ed_read_bool(&_23721_x));
			}
		}
		else if (_1ad2c657a_is_str(&(*_self_))) {
			_case_begin_1b01220d8:;
			{
				return _1ad2c657a_is_str(&_23721_x) && (_1ad2c39c8_read_str(&(*_self_)) == _1ad2c39c8_read_str(&_23721_x));
			}
		}
		else if (_1ad2c5bea_is_i64(&(*_self_))) {
			_case_begin_1b0121c97:;
			{
				return _1ad2c3148_read_i64(&(*_self_)) == static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c407d_as_i64(&_23721_x)));
			}
		}
		else if (_1ad2c5ec5_is_u64(&(*_self_))) {
			_case_begin_1b0121d0d:;
			{
				return _1ad2c3423_read_u64(&(*_self_)) == static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c4358_as_u64(&_23721_x)));
			}
		}
		else if (_1ad2c6855_is_f64(&(*_self_))) {
			_case_begin_1b0121d74:;
			{
				return _1ad2c3ca3_read_f64(&(*_self_)) == static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c4633_as_f64(&_23721_x)));
			}
		}
		else {
			_case_begin_1b0120d73:;
			{
				return false;
			}
		}
		_match_end_1b0120ceb:;
	}
}



inline jule::Bool _1ad2c7ea5_lt(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _26421_x) {
	{
		
		if (_1ad2c657a_is_str(&(*_self_))) {
			_case_begin_1b01274c8:;
			{
				return _1ad2c657a_is_str(&_26421_x) && (_1ad2c39c8_read_str(&(*_self_)) < _1ad2c39c8_read_str(&_26421_x));
			}
		}
		else if (_1ad2c5bea_is_i64(&(*_self_))) {
			_case_begin_1b01275a5:;
			{
				return _1ad2c3148_read_i64(&(*_self_)) < static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c407d_as_i64(&_26421_x)));
			}
		}
		else if (_1ad2c5ec5_is_u64(&(*_self_))) {
			_case_begin_1b012761b:;
			{
				return _1ad2c3423_read_u64(&(*_self_)) < static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c4358_as_u64(&_26421_x)));
			}
		}
		else if (_1ad2c6855_is_f64(&(*_self_))) {
			_case_begin_1b01272ca:;
			{
				return _1ad2c3ca3_read_f64(&(*_self_)) < static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c4633_as_f64(&_26421_x)));
			}
		}
		else {
			_case_begin_1b0124a25:;
			{
				return false;
			}
		}
		_match_end_1b0126461:;
	}
}



inline jule::Bool _1ad2c835c_lt_eq(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _28724_x) {
	{
		
		if (_1ad2c657a_is_str(&(*_self_))) {
			_case_begin_1b012b0e2:;
			{
				return _1ad2c657a_is_str(&_28724_x) && (_1ad2c39c8_read_str(&(*_self_)) <= _1ad2c39c8_read_str(&_28724_x));
			}
		}
		else if (_1ad2c5bea_is_i64(&(*_self_))) {
			_case_begin_1b012b1be:;
			{
				return _1ad2c3148_read_i64(&(*_self_)) <= static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c407d_as_i64(&_28724_x)));
			}
		}
		else if (_1ad2c5ec5_is_u64(&(*_self_))) {
			_case_begin_1b012b235:;
			{
				return _1ad2c3423_read_u64(&(*_self_)) <= static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c4358_as_u64(&_28724_x)));
			}
		}
		else if (_1ad2c6855_is_f64(&(*_self_))) {
			_case_begin_1b012ade4:;
			{
				return _1ad2c3ca3_read_f64(&(*_self_)) <= static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c4633_as_f64(&_28724_x)));
			}
		}
		else {
			_case_begin_1b0127808:;
			{
				return false;
			}
		}
		_match_end_1b01184b9:;
	}
}



inline jule::Bool _1ad2c8714_gt(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _31021_x) {
	{
		
		if (_1ad2c657a_is_str(&(*_self_))) {
			_case_begin_1b012ee09:;
			{
				return _1ad2c657a_is_str(&_31021_x) && (_1ad2c39c8_read_str(&(*_self_)) > _1ad2c39c8_read_str(&_31021_x));
			}
		}
		else if (_1ad2c5bea_is_i64(&(*_self_))) {
			_case_begin_1b012eed6:;
			{
				return _1ad2c3148_read_i64(&(*_self_)) > static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c407d_as_i64(&_31021_x)));
			}
		}
		else if (_1ad2c5ec5_is_u64(&(*_self_))) {
			_case_begin_1b013004c:;
			{
				return _1ad2c3423_read_u64(&(*_self_)) > static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c4358_as_u64(&_31021_x)));
			}
		}
		else if (_1ad2c6855_is_f64(&(*_self_))) {
			_case_begin_1b012ec0b:;
			{
				return _1ad2c3ca3_read_f64(&(*_self_)) > static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c4633_as_f64(&_31021_x)));
			}
		}
		else {
			_case_begin_1b012b422:;
			{
				return false;
			}
		}
		_match_end_1b012d2e2:;
	}
}



inline jule::Bool _1ad2c8abb_gt_eq(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _33324_x) {
	{
		
		if (_1ad2c657a_is_str(&(*_self_))) {
			_case_begin_1b0133a23:;
			{
				return _1ad2c657a_is_str(&_33324_x) && (_1ad2c39c8_read_str(&(*_self_)) >= _1ad2c39c8_read_str(&_33324_x));
			}
		}
		else if (_1ad2c5bea_is_i64(&(*_self_))) {
			_case_begin_1b0133b00:;
			{
				return _1ad2c3148_read_i64(&(*_self_)) >= static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c407d_as_i64(&_33324_x)));
			}
		}
		else if (_1ad2c5ec5_is_u64(&(*_self_))) {
			_case_begin_1b0133b66:;
			{
				return _1ad2c3423_read_u64(&(*_self_)) >= static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c4358_as_u64(&_33324_x)));
			}
		}
		else if (_1ad2c6855_is_f64(&(*_self_))) {
			_case_begin_1b0133825:;
			{
				return _1ad2c3ca3_read_f64(&(*_self_)) >= static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c4633_as_f64(&_33324_x)));
			}
		}
		else {
			_case_begin_1b0130239:;
			{
				return false;
			}
		}
		_match_end_1b012a19b:;
	}
}



inline jule::Bool _1ad2c8e73_add(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _35426_x) {
	{
		
		if (_1ad2c657a_is_str(&(*_self_))) {
			_case_begin_1b013787e:;
			{
				if ((!(_1ad2c657a_is_str(&_35426_x)))) {
					return false;
				}
				_1ad2c53ae_set_str(&(*_self_), _1ad2c39c8_read_str(&(*_self_)) + _1ad2c39c8_read_str(&_35426_x));
			}
		}
		else if (_1ad2c6855_is_f64(&(*_self_))) {
			_case_begin_1b013795b:;
			{
				_1ad2c56cd_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c3ca3_read_f64(&(*_self_)))) + static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c4633_as_f64(&_35426_x)))));
			}
		}
		else if (_1ad2c5bea_is_i64(&(*_self_))) {
			_case_begin_1b01379c2:;
			{
				if (_1ad2c6855_is_f64(&_35426_x)) {
					_1ad2c56cd_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c4633_as_f64(&(*_self_)))) + static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c3ca3_read_f64(&_35426_x)))));
				} else {
					_1ad2c4952_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c3148_read_i64(&(*_self_)))) + static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c407d_as_i64(&_35426_x)))));
				}
			}
		}
		else if (_1ad2c5ec5_is_u64(&(*_self_))) {
			_case_begin_1b0137681:;
			{
				if (_1ad2c6855_is_f64(&_35426_x)) {
					_1ad2c56cd_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c4633_as_f64(&(*_self_)))) + static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c3ca3_read_f64(&_35426_x)))));
				} else {
					_1ad2c4c71_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c3423_read_u64(&(*_self_)))) + static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c4358_as_u64(&_35426_x)))));
				}
			}
		}
		else {
			_case_begin_1b01368a0:;
			{
				return false;
			}
		}
		_match_end_1b0136d45:;
	}
	return true;
}



inline jule::Bool _1ad2c932a_sub(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _38326_x) {
	{
		
		if (_1ad2c6855_is_f64(&(*_self_))) {
			_case_begin_1b01402b0:;
			{
				_1ad2c56cd_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c3ca3_read_f64(&(*_self_)))) - static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c4633_as_f64(&_38326_x)))));
			}
		}
		else if (_1ad2c5bea_is_i64(&(*_self_))) {
			_case_begin_1b014039d:;
			{
				if (_1ad2c6855_is_f64(&_38326_x)) {
					_1ad2c56cd_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c4633_as_f64(&(*_self_)))) - static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c3ca3_read_f64(&_38326_x)))));
				} else {
					_1ad2c4952_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c3148_read_i64(&(*_self_)))) - static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c407d_as_i64(&_38326_x)))));
				}
			}
		}
		else if (_1ad2c5ec5_is_u64(&(*_self_))) {
			_case_begin_1b0140414:;
			{
				if (_1ad2c6855_is_f64(&_38326_x)) {
					_1ad2c56cd_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c4633_as_f64(&(*_self_)))) - static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c3ca3_read_f64(&_38326_x)))));
				} else {
					_1ad2c4c71_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c3423_read_u64(&(*_self_)))) - static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c4358_as_u64(&_38326_x)))));
				}
			}
		}
		else {
			_case_begin_1b013eb83:;
			{
				return false;
			}
		}
		_match_end_1b013dc2b:;
	}
	return true;
}



inline jule::Bool _1ad2c96d2_mul(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _40726_x) {
	{
		
		if (_1ad2c6855_is_f64(&(*_self_))) {
			_case_begin_1b01469d1:;
			{
				_1ad2c56cd_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c3ca3_read_f64(&(*_self_)))) * static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c4633_as_f64(&_40726_x)))));
			}
		}
		else if (_1ad2c5bea_is_i64(&(*_self_))) {
			_case_begin_1b0146abe:;
			{
				if (_1ad2c6855_is_f64(&_40726_x)) {
					_1ad2c56cd_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c4633_as_f64(&(*_self_)))) * static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c3ca3_read_f64(&_40726_x)))));
				} else {
					_1ad2c4952_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c3148_read_i64(&(*_self_)))) * static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c407d_as_i64(&_40726_x)))));
				}
			}
		}
		else if (_1ad2c5ec5_is_u64(&(*_self_))) {
			_case_begin_1b0146b35:;
			{
				if (_1ad2c6855_is_f64(&_40726_x)) {
					_1ad2c56cd_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c4633_as_f64(&(*_self_)))) * static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c3ca3_read_f64(&_40726_x)))));
				} else {
					_1ad2c4c71_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c3423_read_u64(&(*_self_)))) * static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c4358_as_u64(&_40726_x)))));
				}
			}
		}
		else {
			_case_begin_1b01463a4:;
			{
				return false;
			}
		}
		_match_end_1b0145392:;
	}
	return true;
}



inline jule::Bool _1ad2c9a89_div(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _43526_x) {
	{
		
		if (_1ad2c6855_is_f64(&(*_self_))) {
			_case_begin_1b014ce6b:;
			{
				jule::F64 _43817_l = _1ad2c4633_as_f64(&_43526_x);
				if ((_43817_l == 0LL)) {
					return false;
				}
				_1ad2c56cd_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c3ca3_read_f64(&(*_self_)))),_43817_l)));
			}
		}
		else if (_1ad2c5bea_is_i64(&(*_self_))) {
			_case_begin_1b014d059:;
			{
				jule::F64 _44417_l = _1ad2c4633_as_f64(&_43526_x);
				if ((_44417_l == 0LL)) {
					return false;
				}
				_1ad2c56cd_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c4633_as_f64(&(*_self_)))),_44417_l)));
			}
		}
		else if (_1ad2c5ec5_is_u64(&(*_self_))) {
			_case_begin_1b014d0c0:;
			{
				jule::F64 _45017_l = _1ad2c4633_as_f64(&_43526_x);
				if ((_45017_l == 0LL)) {
					return false;
				}
				_1ad2c56cd_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c4633_as_f64(&(*_self_)))),_45017_l)));
			}
		}
		else {
			_case_begin_1b014c83e:;
			{
				return false;
			}
		}
		_match_end_1b014b909:;
	}
	return true;
}



inline jule::Bool _1ad2c9e41_mod(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _46426_x) {
	{
		
		if (_1ad2c5bea_is_i64(&(*_self_))) {
			_case_begin_1b0153180:;
			{
				jule::I64 _46717_l = _1ad2c407d_as_i64(&_46426_x);
				if ((_46717_l == 0LL)) {
					return false;
				}
				_1ad2c4952_set_i64(&(*_self_), static_cast<jule::I64>(jule::mod(static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c3148_read_i64(&(*_self_)))),_46717_l)));
			}
		}
		else if (_1ad2c5ec5_is_u64(&(*_self_))) {
			_case_begin_1b015327e:;
			{
				jule::U64 _47317_l = _1ad2c4358_as_u64(&_46426_x);
				if ((_47317_l == 0LLU)) {
					return false;
				}
				_1ad2c4c71_set_u64(&(*_self_), static_cast<jule::U64>(jule::mod(static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c3423_read_u64(&(*_self_)))),_47317_l)));
			}
		}
		else {
			_case_begin_1b0152a42:;
			{
				return false;
			}
		}
		_match_end_1b0152998:;
	}
	return true;
}



inline jule::Bool _1ad2ca2e8_bitwise_and(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _48634_x) {
	{
		
		if (_1ad2c5bea_is_i64(&(*_self_))) {
			_case_begin_1adeeae3b:;
			{
				_1ad2c4952_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c3148_read_i64(&(*_self_)))) & static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c407d_as_i64(&_48634_x)))));
			}
		}
		else if (_1ad2c5ec5_is_u64(&(*_self_))) {
			_case_begin_1adeeb03a:;
			{
				_1ad2c4c71_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c3423_read_u64(&(*_self_)))) & static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c4358_as_u64(&_48634_x)))));
			}
		}
		else {
			_case_begin_1adeea7ed:;
			{
				return false;
			}
		}
		_match_end_1adeea754:;
	}
	return true;
}



inline jule::Bool _1ad2ca6a0_bitwise_or(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _50033_x) {
	{
		
		if (_1ad2c5bea_is_i64(&(*_self_))) {
			_case_begin_1adeee280:;
			{
				_1ad2c4952_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c3148_read_i64(&(*_self_)))) | static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c407d_as_i64(&_50033_x)))));
			}
		}
		else if (_1ad2c5ec5_is_u64(&(*_self_))) {
			_case_begin_1adeee37e:;
			{
				_1ad2c4c71_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c3423_read_u64(&(*_self_)))) | static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c4358_as_u64(&_50033_x)))));
			}
		}
		else {
			_case_begin_1adeedb42:;
			{
				return false;
			}
		}
		_match_end_1adeeda98:;
	}
	return true;
}



inline jule::Bool _1ad2caa57_xor(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _51426_x) {
	{
		
		if (_1ad2c5bea_is_i64(&(*_self_))) {
			_case_begin_1ae0024c5:;
			{
				_1ad2c4952_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c3148_read_i64(&(*_self_)))) ^ static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c407d_as_i64(&_51426_x)))));
			}
		}
		else if (_1ad2c5ec5_is_u64(&(*_self_))) {
			_case_begin_1ae0025c4:;
			{
				_1ad2c4c71_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c3423_read_u64(&(*_self_)))) ^ static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c4358_as_u64(&_51426_x)))));
			}
		}
		else {
			_case_begin_1ae001d87:;
			{
				return false;
			}
		}
		_match_end_1ae001cdd:;
	}
	return true;
}



inline jule::Bool _1ad2cae0e_lshift(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _52829_x) {
	{
		
		if (_1ad2c5bea_is_i64(&(*_self_))) {
			_case_begin_1ae006133:;
			{
				jule::I64 _53117_l = _1ad2c407d_as_i64(&(*_self_));
				if ((_53117_l < 0LL)) {
					jule::U64 _53321_r = _1ad2c4358_as_u64(&_52829_x);
					_1ad2c4952_set_i64(&(*_self_), static_cast<jule::I64>(_53117_l << _53321_r));
				} else {
					_1ad2cb6c3_lshift_unsig((*_self_),_52829_x);
				}
			}
		}
		else if (_1ad2c5ec5_is_u64(&(*_self_))) {
			_case_begin_1ae006232:;
			{
				_1ad2cb6c3_lshift_unsig((*_self_),_52829_x);
			}
		}
		else {
			_case_begin_1ae0059e5:;
			{
				return false;
			}
		}
		_match_end_1ae00594b:;
	}
	return true;
}



inline jule::Bool _1ad2cb2b6_rshift(_1ad2c1d8e_Const* _self_,_1ad2c1d8e_Const _54829_x) {
	{
		
		if (_1ad2c5bea_is_i64(&(*_self_))) {
			_case_begin_1ae009587:;
			{
				jule::I64 _55117_l = _1ad2c407d_as_i64(&(*_self_));
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1ad2c4358_as_u64(&_54829_x);
					_1ad2c4952_set_i64(&(*_self_), static_cast<jule::I64>(_55117_l >> _55321_r));
				} else {
					_1ad2cba69_rshift_unsig((*_self_),_54829_x);
				}
			}
		}
		else if (_1ad2c5ec5_is_u64(&(*_self_))) {
			_case_begin_1ae009686:;
			{
				_1ad2cba69_rshift_unsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_1ae008e49:;
			{
				return false;
			}
		}
		_match_end_1ae008da0:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad2c1d8e_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad4ab7a4_FileStream> static__1ad4ab9c4_new(jule::Ptr<_1e7ace882_File> _1527_f) {
	return jule::new_ptr<_1ad4ab7a4_FileStream>(_1ad4ab7a4_FileStream(_1527_f));
}



inline jule::Exceptional<jule::I64> _1ad4abc38_read(_1ad4ab7a4_FileStream* _self_,jule::Slice<jule::U8> _2831_buff) {
	jule::I64 _2848_n = jule::I64();
	_2848_n = static_cast<jule::I64>(({
		auto except = _1e7acc1a9_read((*_self_)._field_buff.ptr(), _2831_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(),_2848_n);
}



inline jule::Exceptional<jule::I64> _1ad4ac035_write(_1ad4ab7a4_FileStream* _self_,jule::Slice<jule::U8> _3428_buff) {
	jule::I64 _3445_n = jule::I64();
	_3445_n = static_cast<jule::I64>(({
		auto except = _1e7acbd02_write((*_self_)._field_buff.ptr(), _3428_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(),_3445_n);
}



inline jule::Exceptional<jule::Slice<jule::U8>> _1ad4ac3ed_read_line(_1ad4ab7a4_FileStream* _self_) {
	
	jule::Slice<jule::U8> _4617_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);
	jule::Slice<jule::U8> _4717_part = jule::Slice<jule::U8>::alloc(1LL);
	for (;;) {
		{
			jule::I64 _4917_n = ({
				auto except = _1e7acc1a9_read((*_self_)._field_buff.ptr(), _4717_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
					return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
				} jule::I64();});
			});
			if ((_4917_n == 0LL)) {
				goto _iter_end_1b021ecda;
			}
			jule::U8 _5417_b = _4717_part[0LL];
			_4617_buff = jule::alloc_for_append(_4617_buff,1);_4617_buff.__push(_5417_b);
			if ((_5417_b == 10LLU)) {
				goto _iter_end_1b021ecda;
			}
		}
	_iter_next_1b021ecda:;
	}
	_iter_end_1b021ecda:;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_4617_buff);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad4ab7a4_FileStream _Src) {
	_Stream << "FileStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::I64> _1ad4aee28_read(_1ad4ae6db_ByteStream* _self_,jule::Slice<jule::U8> _2131_buff) {
	jule::I64 _2148_n = jule::I64();
	if ((!(_1ad4b08eb_data(&(*_self_))))) {
		_2148_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_2148_n);
	}
	_2148_n=static_cast<jule::I64>(copy(_2131_buff,(*_self_)._field_buff));
	(*_self_)._field_buff=(*_self_)._field_buff.slice(_2148_n);
	return jule::Exceptional<jule::I64>(jule::Any(), _2148_n);
}



inline jule::Exceptional<jule::I64> _1ad4b02d0_write(_1ad4ae6db_ByteStream* _self_,jule::Slice<jule::U8> _3228_buff) {
	jule::I64 _3245_n = jule::I64();
	_3245_n=static_cast<jule::I64>(_3228_buff.len());
	(*_self_)._field_buff=jule::append((*_self_)._field_buff,_3228_buff);
	return jule::Exceptional<jule::I64>(jule::Any(), _3245_n);
}



inline jule::Ptr<_1ad4ae6db_ByteStream> static__1ad4b0621_new(void) {
	return jule::new_ptr<_1ad4ae6db_ByteStream>();
}



inline jule::Bool _1ad4b08eb_data(_1ad4ae6db_ByteStream* _self_) {
	return ((*_self_)._field_buff.len() != 0LL);
}



inline void _1ad4b0b3d_fit(_1ad4ae6db_ByteStream* _self_) {
	if ((!(_1ad4b08eb_data(&(*_self_))))) {
		(*_self_)._field_buff=nullptr;
		return;
	}
	jule::Slice<jule::U8> _5717_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>((*_self_)._field_buff.len()));
	copy(_5717_buff,(*_self_)._field_buff);
	(*_self_)._field_buff=_5717_buff;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad4ae6db_ByteStream _Src) {
	_Stream << "ByteStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad4b229e_Scanner> static__1ad4b2744_new(jule::Trait<_1ad4acc28_Reader> _1627_r) {
	return jule::new_ptr<_1ad4b229e_Scanner>(_1ad4b229e_Scanner(_1627_r,jule::Slice<jule::U8>()));
}



inline jule::Ptr<_1ad4b229e_Scanner> static__1ad4b2a52_newf(jule::Ptr<_1e7ace882_File> _2428_f) {
	return jule::new_ptr<_1ad4b229e_Scanner>(_1ad4b229e_Scanner(jule::Trait<_1ad4acc28_Reader>(static__1ad4ab9c4_new(_2428_f), 0),jule::Slice<jule::U8>()));
}



inline void _1ad4b2db5_reset(_1ad4b229e_Scanner* _self_) {
	(*_self_)._field_b=nullptr;
}



inline jule::Slice<jule::U8> _1ad4b3190_bytes(_1ad4b229e_Scanner* _self_) {
	return (*_self_)._field_b;
}



inline jule::Str _1ad4b346a_text(_1ad4b229e_Scanner* _self_) {
	return static_cast<jule::Str>((*_self_)._field_b);
}



inline jule::Exceptional<jule::Bool> _1ad4b3745_scan(_1ad4b229e_Scanner* _self_) {
	
	_1ad4b2db5_reset(&(*_self_));
	jule::Slice<jule::U8> _5117_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);
	jule::Slice<jule::U8> _5217_part = jule::Slice<jule::U8>::alloc(1LL);
	for (;;) {
		{
			jule::I64 _5417_n = ({
				auto except = _1ad4acc28_Reader_mptr_data[((*_self_)._field_r).type_offset]._1ad4acaa2_read((*_self_)._field_r, _5217_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Bool>(jule::Any(),false);
					return jule::Exceptional<jule::Bool>(jule::Any(),false);
				} jule::I64();});
			});
			if ((_5417_n == 0LL)) {
				goto _iter_end_1b022da96;
			}
			jule::U8 _6117_b = _5217_part[0LL];
			if ((_6117_b == 10LLU)) {
				goto _iter_end_1b022da96;
			}
			_5117_buff = jule::alloc_for_append(_5117_buff,1);_5117_buff.__push(_6117_b);
		}
	_iter_next_1b022da96:;
	}
	_iter_end_1b022da96:;
	(*_self_)._field_b=_5117_buff;
	return jule::Exceptional<jule::Bool>(jule::Any(),(_5217_part[0LL] != 0LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1ad4b229e_Scanner _Src) {
	_Stream << "Scanner{";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "b:" << _Src._field_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac65ee31_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac663a06_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac666663_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac6675ed_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac667a4e_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac667e39_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac66949b_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac669e4c_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac66a39d_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac66a8ed_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac66c669_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac66ca98_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac66cdea_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac66d912_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac66ddeb_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac66e3b3_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac66e77b_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac66ec43_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac670d87_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac67134e_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac671816_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac671b46_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac6722ea_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac6725b4_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac672927_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac672d56_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac6731a8_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac674385_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac6797db_to_str(_1ac67939b_ParamIns* _self_) {
	jule::Str _19217_s = jule::Str();
	if ((*_self_)._field_decl.get()._field_mutable) {
		_19217_s+=jule::Str("mut ", 4);
	}
	if ((*_self_)._field_decl.get()._field_reference) {
		_19217_s+=jule::Str("&_:", 3);
	}
	if (_1ac6753db_is_self((*_self_)._field_decl.ptr())) {
		if (_1ac6756b6_is_ref((*_self_)._field_decl.ptr())) {
			_19217_s+=jule::Str("&", 1);
		}
		_19217_s+=jule::Str("self", 4);
		return _19217_s;
	}
	if ((*_self_)._field_decl.get()._field_variadic) {
		_19217_s+=jule::Str("...", 3);
	}
	if (((*_self_)._field_kind != nullptr)) {
		_19217_s+=_1ad429d4e_to_str((*_self_)._field_kind.ptr());
	}
	return _19217_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac67939b_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac67a8ca_to_str(_1ac67a501_FnIns* _self_) {
	
	return _1ac67bbb7_get_kind_str(&(*_self_), false);
}



inline jule::Bool _1ac67ac82_equals(jule::Ptr<_1ac67a501_FnIns> _self_,jule::Ptr<_1ad429931_TypeKind> _24326_other) {
	jule::Ptr<_1ac67a501_FnIns> _24413_f = _1ad42d1d7_fnc(_24326_other.ptr());
	if ((_24413_f == nullptr)) {
		return false;
	}
	if (_self_.get()._field_decl.get()._field_exceptional != _24413_f.get()._field_decl.get()._field_exceptional) {
		return false;
	}
	if (_self_.get()._field_decl.get()._field_unsafety != _24413_f.get()._field_decl.get()._field_unsafety) {
		return false;
	}
	if (_self_.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>(_24413_f.get()._field_generics.len()))) {
		return false;
	}
	if (_1ac676ec0_is_void(_self_.get()._field_decl.ptr()) != _1ac676ec0_is_void(_24413_f.get()._field_decl.ptr())) {
		return false;
	}
	jule::I64 _26517_i = 0LL;
	for (; _26517_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_generics.len())); (_26517_i)++) {
		{
			if ((!(_1ad42a206_equals(_self_.get()._field_generics[_26517_i], _24413_f.get()._field_generics[_26517_i])))) {
				return false;
			}
		}
	_iter_next_1adb9143e:;
	}
	_iter_end_1adb9143e:;
	jule::Fn<jule::Bool(jule::Ptr<_1ac67939b_ParamIns>,jule::Ptr<_1ac67939b_ParamIns>)> _27213_check_params = jule::Fn<jule::Bool(jule::Ptr<_1ac67939b_ParamIns>,jule::Ptr<_1ac67939b_ParamIns>)>([=](jule::Ptr<_1ac67939b_ParamIns> _27231_p1,jule::Ptr<_1ac67939b_ParamIns> _27246_p2) mutable -> jule::Bool {
		if (_27231_p1.get()._field_decl.get()._field_mutable != _27246_p2.get()._field_decl.get()._field_mutable) {
			return false;
		}
		if (_1ac6753db_is_self(_27231_p1.get()._field_decl.ptr())) {
			if ((!(_1ac6753db_is_self(_27246_p2.get()._field_decl.ptr())))) {
				return false;
			}
			if (_1ac6756b6_is_ref(_27231_p1.get()._field_decl.ptr()) != _1ac6756b6_is_ref(_27246_p2.get()._field_decl.ptr())) {
				return false;
			}
			return true;
		}
		if (_27231_p1.get()._field_decl.get()._field_reference != _27246_p2.get()._field_decl.get()._field_reference) {
			return false;
		}
		if (_27231_p1.get()._field_decl.get()._field_variadic != _27246_p2.get()._field_decl.get()._field_variadic) {
			return false;
		}
		return _1ad42a206_equals(_27231_p1.get()._field_kind, _27246_p2.get()._field_kind);
	});
	if (_24413_f.get()._field_params.len() != static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_params.len()))) {
		return false;
	}
	_26517_i=0LL;
	for (; _26517_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_params.len())); (_26517_i)++) {
		{
			if ((!(_27213_check_params(_self_.get()._field_params[_26517_i],_24413_f.get()._field_params[_26517_i])))) {
				return false;
			}
		}
	_iter_next_1adb9a46a:;
	}
	_iter_end_1adb9a46a:;
	if ((!(_1ac676ec0_is_void(_self_.get()._field_decl.ptr())))) {
		if ((!(_1ad42a206_equals(_self_.get()._field_result, _24413_f.get()._field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _1ac67b17d_is_builtin(_1ac67a501_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1ac67b458_is_anon(_1ac67a501_FnIns* _self_) {
	return (*_self_)._field_anon || (((*_self_)._field_decl != nullptr) && _1ac677b2a_is_anon((*_self_)._field_decl.ptr()));
}



inline jule::Bool _1ac67b810_same(_1ac67a501_FnIns* _self_,jule::Ptr<_1ac67a501_FnIns> _33523_f) {
	if (((*_self_)._field_decl != _33523_f.get()._field_decl) || (_33523_f.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_generics.len())))) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1adb9ec77:;
		if (it != expr.end()) {
			jule::I64 _1adba0e98_i = it - expr.begin();
			jule::Ptr<_1ad429931_TypeKind> &_1adba1130_g = *it;
			{
				if ((!(_1ad42a206_equals(_1adba1130_g, _33523_f.get()._field_generics[_1adba0e98_i])))) {
					return false;
				}
			}
			_iter_next_1adb9ec77:;
			++it;
			_1adba0e98_i++;
			goto _iter_begin_1adb9ec77;
		}
		_iter_end_1adb9ec77:;
	}
	return true;
}



inline jule::Str _1ac67bbb7_get_kind_str(_1ac67a501_FnIns* _self_,jule::Bool _35131_ident) {
	jule::Str _35217_s = jule::Str();
	if ((*_self_)._field_decl.get()._field_unsafety) {
		_35217_s+=jule::Str("unsafe ", 7);
	}
	_35217_s+=jule::Str("fn", 2);
	if (_35131_ident && ((*_self_)._field_decl != nullptr)) {
		_35217_s+=jule::Str(" ", 1) + (*_self_)._field_decl.get()._field_ident;
	}
	if (((*_self_)._field_generics.len() > 0LL)) {
		_35217_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1adba4199:;
			if (it != expr.end()) {
				jule::I64 _1adba46b6_i = it - expr.begin();
				jule::Ptr<_1ad429931_TypeKind> &_1adba481a_t = *it;
				{
					_35217_s+=_1ad429d4e_to_str(_1adba481a_t.ptr());
					if ((_1adba46b6_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_generics.len()))) {
						_35217_s+=jule::Str(",", 1);
					}
				}
				_iter_next_1adba4199:;
				++it;
				_1adba46b6_i++;
				goto _iter_begin_1adba4199;
			}
			_iter_end_1adba4199:;
		}
		_35217_s+=jule::Str("]", 1);
	} else if (((*_self_)._field_decl.get()._field_generics.len() > 0LL)) {
		_35217_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_decl.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1adba6542:;
			if (it != expr.end()) {
				jule::I64 _1adba67a6_i = it - expr.begin();
				jule::Ptr<_1ab01c845_GenericDecl> &_1adba69e8_g = *it;
				{
					_35217_s+=_1adba69e8_g.get()._field_ident;
					if ((_1adba67a6_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_decl.get()._field_generics.len()))) {
						_35217_s+=jule::Str(",", 1);
					}
				}
				_iter_next_1adba6542:;
				++it;
				_1adba67a6_i++;
				goto _iter_begin_1adba6542;
			}
			_iter_end_1adba6542:;
		}
		_35217_s+=jule::Str("]", 1);
	}
	_35217_s+=jule::Str("(", 1);
	jule::I64 _38513_n = (*_self_)._field_params.len();
	if ((_38513_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_params;
			auto it = expr.begin();
			_iter_begin_1adba8ed4:;
			if (it != expr.end()) {
				jule::Ptr<_1ac67939b_ParamIns> &_1adba90a0_p = *it;
				{
					_35217_s+=_1ac6797db_to_str(_1adba90a0_p.ptr());
					_35217_s+=jule::Str(",", 1);
				}
				_iter_next_1adba8ed4:;
				++it;
				goto _iter_begin_1adba8ed4;
			}
			_iter_end_1adba8ed4:;
		}
		(_35217_s).mut_slice(0LL,_35217_s.len() - 1LL);
	}
	_35217_s+=jule::Str(")", 1);
	if ((*_self_)._field_decl.get()._field_exceptional) {
		_35217_s+=jule::Str("!", 1);
	}
	if ((!(_1ac676ec0_is_void((*_self_)._field_decl.ptr())))) {
		_35217_s+=jule::Str(":", 1);
		_35217_s+=_1ad429d4e_to_str((*_self_)._field_result.ptr());
	}
	return _35217_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac67a501_FnIns _Src) {
	_Stream << _1ac67a8ca_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1ac67de2d_ReferenceStack> static__1ac67e181_new(void) {
	return jule::new_ptr<_1ac67de2d_ReferenceStack>();
}



inline jule::I64 _1ac67e57c_len(_1ac67de2d_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1ac67e934_at(_1ac67de2d_ReferenceStack* _self_,jule::I64 _5825_i) {
	return (*_self_)._field_buffer[_5825_i];
}



inline void _1ac67ec53_push(_1ac67de2d_ReferenceStack* _self_,jule::Any _6331_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(_6331_ref);
}



inline jule::Bool _1ac68010a_exist_0(_1ac67de2d_ReferenceStack* _self_,jule::Ptr<_1ad39e037_Var> _6827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1ad82c0db:;
		if (it != expr.end()) {
			jule::Any &_1ad82c2c8_ref = *it;
			{
				if (_1ad82c2c8_ref == jule::Any(jule::Any(_6827_t))) {
					return true;
				}
			}
			_iter_next_1ad82c0db:;
			++it;
			goto _iter_begin_1ad82c0db;
		}
		_iter_end_1ad82c0db:;
	}
	return false;
}

inline jule::Bool _1ac68010a_exist_1(_1ac67de2d_ReferenceStack* _self_,jule::Ptr<_1ac67a501_FnIns> _6827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1ad8301dd:;
		if (it != expr.end()) {
			jule::Any &_1ad8303ca_ref = *it;
			{
				if (_1ad8303ca_ref == jule::Any(jule::Any(_6827_t))) {
					return true;
				}
			}
			_iter_next_1ad8301dd:;
			++it;
			goto _iter_begin_1ad8301dd;
		}
		_iter_end_1ad8301dd:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac67de2d_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac684a05_SymbolBuilder> _1ac685132_get_root(jule::Ptr<_1ac684a05_SymbolBuilder> _self_) {
	jule::Ptr<_1ac684a05_SymbolBuilder> _28117_root = _self_;
	while ((_28117_root.get()._field_owner != nullptr)) {
		{
			_28117_root=_28117_root.get()._field_owner;
		}
	_iter_next_1adbae57d:;
	}
	_iter_end_1adbae57d:;
	return _28117_root;
}



inline void _1ac68560a_push_err(_1ac684a05_SymbolBuilder* _self_,_1ab005531_Token& _28828_token,jule::Str _28842_fmt,jule::Slice<jule::Any> _28855_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ad37b07a_compiler_err(_28828_token,true,_28842_fmt,_28855_args));
}



inline void _1ac685ad3_push_err_text(_1ac684a05_SymbolBuilder* _self_,_1ab005531_Token& _29233_token,jule::Str _29247_fmt,jule::Slice<jule::Any> _29260_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ad37b07a_compiler_err(_29233_token,false,_29247_fmt,_29260_args));
}



inline void _1ac685ece_push_suggestion(_1ac684a05_SymbolBuilder* _self_,jule::Str _29734_fmt,jule::Slice<jule::Any> _29747_args) {
	{
		_1ad37c7b8_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29734_fmt,_29747_args);
	}
}



inline jule::Bool _1ac686397_check_cpp_use_decl_path(_1ac684a05_SymbolBuilder* _self_,jule::Ptr<_1ab0237c4_UseDecl>& _30143_decl) {
	jule::Bool _30161_ok = jule::Bool();
	if (_1a92922d6_is_std_header_path(_30143_decl.get()._field_link_path)) {
		_30161_ok = true;
		return _30161_ok;
	}
	jule::Str _30613_ext = _1a90c614d_ext(_30143_decl.get()._field_link_path);
	if ((!(_1a92925c2_is_valid_header_ext(_30613_ext))) && (!(_1a92928d0_is_valid_cpp_ext(_30613_ext)))) {
		_1ac68560a_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_30613_ext)}));
		_30161_ok = false;
		return _30161_ok;
	}
	jule::Ptr<_1e7ad1b09_Status> _31313_info = ({
		auto except = static__1e7acd364_of(_30143_decl.get()._field_link_path);
		(except.ok()) ? (except.result) : ({{
			_1ac68560a_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_30143_decl.get()._field_link_path)}));
			_30161_ok = false;
			return _30161_ok;
			_30161_ok = false;
			return _30161_ok;
		} jule::Ptr<_1e7ad1b09_Status>();});
	});
	if (_1e7ad206b_is_dir(_31313_info.ptr())) {
		_1ac68560a_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_30143_decl.get()._field_link_path)}));
		_30161_ok = false;
		return _30161_ok;
	}
	_30161_ok = true;
	return _30161_ok;
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1ac686782_build_cpp_header_import(_1ac684a05_SymbolBuilder* _self_,jule::Ptr<_1ab0237c4_UseDecl>& _32547_decl) {
	jule::Str _32617_path = _32547_decl.get()._field_link_path;
	if ((!(_1a92922d6_is_std_header_path(_32547_decl.get()._field_link_path)))) {
		jule::Bool _32921_ok = _1ac686397_check_cpp_use_decl_path(&(*_self_), _32547_decl);
		if ((!(_32921_ok))) {
			return nullptr;
		}
		std::tie(_32617_path,_32921_ok) = _1a90c645b_abs(_32547_decl.get()._field_link_path);
		if ((!(_32921_ok))) {
			_1ac68560a_push_err(&(*_self_), _32547_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_32547_decl.get()._field_link_path)}));
		}
	}
	return jule::new_ptr<_1ad3736b0_ImportInfo>(_1ad3736b0_ImportInfo(_32547_decl.get()._field_token,_32617_path,_32547_decl.get()._field_link_path,jule::Str(),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<_1ab005531_Token>(),nullptr,jule::I64()));
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1ac686b28_build_std_import(_1ac684a05_SymbolBuilder* _self_,jule::Ptr<_1ab0237c4_UseDecl>& _35240_decl) {
	jule::Str _35317_path = _35240_decl.get()._field_link_path.slice(5LL);
	_35317_path=_1a90c149a_replace(_35317_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_35317_path=_1a90c5d40_join(jule::Slice<jule::Str>({_1a92b37be_PATH_STDLIB,_35317_path}));
	jule::Bool _35620_ok;
	std::tie(_35317_path,_35620_ok) = _1a90c645b_abs(_35317_path);
	if ((!(_35620_ok))) {
		_1ac68560a_push_err(&(*_self_), _35240_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35240_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_1e7ad1b09_Status> _36313_info = ({
		auto except = static__1e7acd364_of(_35317_path);
		(except.ok()) ? (except.result) : ({{
			_1ac68560a_push_err(&(*_self_), _35240_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35240_decl.get()._field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1e7ad1b09_Status>();});
	});
	if ((!(_1e7ad206b_is_dir(_36313_info.ptr())))) {
		_1ac68560a_push_err(&(*_self_), _35240_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35240_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::I64 _37313_i = (_1a90bd871_find_last(_35240_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);
	jule::Str _37413_ident = _35240_decl.get()._field_link_path.slice(_37313_i);
	return jule::new_ptr<_1ad3736b0_ImportInfo>(_1ad3736b0_ImportInfo(_35240_decl.get()._field_token,_35317_path,_35240_decl.get()._field_link_path,_37413_ident,_35240_decl.get()._field_alias,jule::Bool(),false,true,_35240_decl.get()._field_full,jule::Slice<_1ab005531_Token>(),jule::new_ptr<_1ad376b8b_Package>(_1ad376b8b_Package(nullptr)),jule::I64()));
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1ac686ed0_build_ident_import(jule::Ptr<_1ac684a05_SymbolBuilder> _self_,jule::Ptr<_1ab0237c4_UseDecl>& _39143_decl) {
	jule::Str _39213_mod_path = _1ad370aca_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad36e942_get_mod_path(_self_.get()._field_importer);
	if ((_39213_mod_path.len() == 0LL)) {
		_1ac68560a_push_err(_self_.ptr(), _39143_decl.get()._field_token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1ac685ece_push_suggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Str _39917_path = _39143_decl.get()._field_link_path;
	_39917_path=_1a90c149a_replace(_39917_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_39917_path=_1a90c5d40_join(jule::Slice<jule::Str>({_39213_mod_path,_39917_path}));
	jule::Bool _40320_ok;
	std::tie(_39917_path,_40320_ok) = _1a90c645b_abs(_39917_path);
	if ((!(_40320_ok))) {
		_1ac68560a_push_err(_self_.ptr(), _39143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_39143_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_1e7ad1b09_Status> _41013_info = ({
		auto except = static__1e7acd364_of(_39917_path);
		(except.ok()) ? (except.result) : ({{
			_1ac68560a_push_err(_self_.ptr(), _39143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_39143_decl.get()._field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1e7ad1b09_Status>();});
	});
	if ((!(_1e7ad206b_is_dir(_41013_info.ptr())))) {
		_1ac68560a_push_err(_self_.ptr(), _39143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_39143_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::I64 _42013_i = (_1a90bd871_find_last(_39143_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);
	jule::Str _42113_ident = _39143_decl.get()._field_link_path.slice(_42013_i);
	return jule::new_ptr<_1ad3736b0_ImportInfo>(_1ad3736b0_ImportInfo(_39143_decl.get()._field_token,_39917_path,_39143_decl.get()._field_link_path,_42113_ident,_39143_decl.get()._field_alias,jule::Bool(),false,false,_39143_decl.get()._field_full,jule::Slice<_1ab005531_Token>(),jule::new_ptr<_1ad376b8b_Package>(_1ad376b8b_Package(nullptr)),jule::I64()));
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1ac687387_build_import(jule::Ptr<_1ac684a05_SymbolBuilder> _self_,jule::Ptr<_1ab0237c4_UseDecl>& _43837_decl) {
	{
		
		if (_43837_decl.get()._field_cpp_linked) {
			_case_begin_1adbd1050:;
			{
				return _1ac686782_build_cpp_header_import(_self_.ptr(), _43837_decl);
			}
		}
		else if (_43837_decl.get()._field_std) {
			_case_begin_1adbd0a00:;
			{
				return _1ac686b28_build_std_import(_self_.ptr(), _43837_decl);
			}
		}
		else {
			_case_begin_1adbd03e5:;
			{
				return _1ac686ed0_build_ident_import(_self_, _43837_decl);
			}
		}
		_match_end_1adbd034b:;
	}
}



inline jule::Bool _1ac687783_check_duplicate_use_decl(_1ac684a05_SymbolBuilder* _self_,jule::Ptr<_1ad3736b0_ImportInfo>& _44644_pkg) {
	jule::Bool _44664_ok = jule::Bool();
	jule::Ptr<_1ad3736b0_ImportInfo> _44813_lpkg = _1ad3e108a_select_package((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)>([=](jule::Ptr<_1ad3736b0_ImportInfo> _44849_spkg) mutable -> jule::Bool {
		return _44644_pkg.get()._field_path == _44849_spkg.get()._field_path;
	}));
	if ((_44813_lpkg == nullptr)) {
		_44664_ok = true;
		return _44664_ok;
	}
	_1ac68560a_push_err(&(*_self_), _44644_pkg.get()._field_token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>({jule::Any(_44644_pkg.get()._field_link_path)}));
	_1ac685ece_push_suggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_44664_ok = false;
	return _44664_ok;
}



inline void _1ac687b6d_impl_import_selections(_1ac684a05_SymbolBuilder* _self_,jule::Ptr<_1ad3736b0_ImportInfo>& _46046_imp,jule::Ptr<_1ab0237c4_UseDecl>& _46069_decl) {
	{
		auto &expr = _46069_decl.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1adbd6d25:;
		if (it != expr.end()) {
			_1ab005531_Token _1adbd6de1_ident = *it;
			{
				if (_1ad37652b_exist_ident(_46046_imp.ptr(), _1adbd6de1_ident._field_kind)) {
					_1ac68560a_push_err(&(*_self_), _1adbd6de1_ident,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>({jule::Any(_1adbd6de1_ident._field_kind)}));
					_1ac685ece_push_suggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
					goto _iter_next_1adbd6d25;
				}
				_46046_imp.get()._field_selected = jule::alloc_for_append(_46046_imp.get()._field_selected,1);_46046_imp.get()._field_selected.__push(_1adbd6de1_ident);
			}
			_iter_next_1adbd6d25:;
			++it;
			goto _iter_begin_1adbd6d25;
		}
		_iter_end_1adbd6d25:;
	}
}



inline jule::Str _1ac688025_get_as_link_path(jule::Ptr<_1ac684a05_SymbolBuilder> _self_,jule::Str _47240_path) {
	if (_1a904e0b5_has_prefix(_47240_path,_1a92b37be_PATH_STDLIB)) {
		(_47240_path).mut_slice(_1a92b37be_PATH_STDLIB.len());
		return jule::Str("std", 3) + _1a90c149a_replace(_47240_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _47814_root;
	std::tie(_47814_root,std::ignore) = _1a90c645b_abs(_1ad370aca_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad36e942_get_mod_path(_self_.get()._field_importer));
	(_47240_path).mut_slice(_47814_root.len());
	if ((_47240_path[0LL] == 47LLU)) {
		(_47240_path).mut_slice(1LL);
	}
	return _1a90c149a_replace(_47240_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _1ac6884ed_push_cycle_error(jule::Ptr<_1ac684a05_SymbolBuilder> _self_,jule::Ptr<_1ac684a05_SymbolBuilder>& _48637_sb,jule::Str _48657_path,jule::Str& _48673_message) {
	
	jule::Str _48913_refers_to = _1a92a36b0_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_1ac688025_get_as_link_path(_self_, _1ab00c1e7_dir(_48637_sb.get()._field_table.get()._field_file.ptr()))),jule::Any(_1ac688025_get_as_link_path(_self_, _48657_path))}));
	(_48673_message).buffer.insert(0, (((_1a902da23_repeat(jule::Str(" ", 1),4LL) + _48913_refers_to) + jule::Str("\n", 1))));
}



inline void _1ac6889c6_push_cross_cycle_error(jule::Ptr<_1ac684a05_SymbolBuilder> _self_,jule::Ptr<_1ac684a05_SymbolBuilder>& _49643_target,jule::Ptr<_1ad3736b0_ImportInfo>& _49668_imp,_1ab005531_Token& _49687_error_token) {
	jule::Str _49717_message = jule::Str();
	_1ac6884ed_push_cycle_error(_self_, _self_,_49668_imp.get()._field_path,_49717_message);
	jule::Ptr<_1ac684a05_SymbolBuilder> _50117_owner = _self_.get()._field_owner;
	jule::Ptr<_1ac684a05_SymbolBuilder> _50217_old = _self_;
	while ((_50117_owner.get()._field_owner != nullptr)) {
		{
			_1ac6884ed_push_cycle_error(_self_, _50217_old.get()._field_owner,_1ab00c1e7_dir(_50217_old.get()._field_table.get()._field_file.ptr()),_49717_message);
			if (_50117_owner.get()._field_owner == _49643_target) {
				_1ac6884ed_push_cycle_error(_self_, _49643_target,_1ab00c1e7_dir(_50117_owner.get()._field_table.get()._field_file.ptr()),_49717_message);
				goto _iter_end_1adbe3040;
			}
			_50217_old=_50117_owner;
			_50117_owner=_50117_owner.get()._field_owner;
		}
	_iter_next_1adbe3040:;
	}
	_iter_end_1adbe3040:;
	_1ac68560a_push_err(_self_.ptr(), _49687_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_49717_message)}));
}



inline jule::Bool _1ac688e5a_check_import_cycles(jule::Ptr<_1ac684a05_SymbolBuilder> _self_,jule::Ptr<_1ad3736b0_ImportInfo> _51939_imp,jule::Ptr<_1ab0237c4_UseDecl>& _51958_decl) {
	if (_51939_imp.get()._field_path == _1ab00c1e7_dir(_self_.get()._field_table.get()._field_file.ptr())) {
		_1ac68560a_push_err(_self_.ptr(), _51958_decl.get()._field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(_1ac688025_get_as_link_path(_self_, _51939_imp.get()._field_path))}));
		return false;
	}
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	}
	if (_1ab00c1e7_dir(_self_.get()._field_owner.get()._field_table.get()._field_file.ptr()) == _51939_imp.get()._field_path) {
		_1ac6889c6_push_cross_cycle_error(_self_, _self_.get()._field_owner,_51939_imp,_51958_decl.get()._field_token);
		return false;
	}
	jule::Ptr<_1ac684a05_SymbolBuilder> _53417_owner = _self_.get()._field_owner;
	_julec_label_iter:;
	if (_1ab00c1e7_dir(_53417_owner.get()._field_table.get()._field_file.ptr()) == _51939_imp.get()._field_path) {
		_1ac6889c6_push_cross_cycle_error(_self_, _53417_owner,_51939_imp,_51958_decl.get()._field_token);
		return false;
	}
	if ((_53417_owner.get()._field_owner != nullptr)) {
		_53417_owner=_53417_owner.get()._field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline void _1ac689477_check_package_accessibility(_1ac684a05_SymbolBuilder* _self_,jule::Ptr<_1ab0237c4_UseDecl>& _55547_decl,jule::Str& _55564_mod,jule::Str& _55575_path) {
	if ((_1ad370aca_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1ad36e942_get_mod_path((*_self_)._field_importer) != _55564_mod) && _1a90c008c_contains(_55575_path,jule::Str("internal", 8))) {
		_1ac68560a_push_err(&(*_self_), _55547_decl.get()._field_token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	}
}



inline jule::Bool _1ac6898ea_import_package(jule::Ptr<_1ac684a05_SymbolBuilder> _self_,jule::Ptr<_1ad3736b0_ImportInfo>& _56139_imp,jule::Ptr<_1ab0237c4_UseDecl>& _56162_decl) {
	jule::Bool _56180_ok = jule::Bool();
	if (_56139_imp.get()._field_cpp_linked) {
		_56180_ok = true;
		return _56180_ok;
	}
	jule::Ptr<_1ad3736b0_ImportInfo> _56617_port = _1ad370aca_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad3701a1_get_import(_self_.get()._field_importer, _56139_imp.get()._field_path);
	if ((_56617_port != nullptr)) {
		_56139_imp.get()._field_package=_56617_port.get()._field_package;
		_56139_imp.get()._field_duplicate=true;
		jule::Str _57117_old_mod = _1ad370aca_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad36e942_get_mod_path(_self_.get()._field_importer);
		_1ad370aca_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad36e6ab_set_mod_path(_self_.get()._field_importer, _1ad370aca_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad36ece9_mod_by_id(_self_.get()._field_importer, _56139_imp.get()._field_mod_id));
		_1ac689477_check_package_accessibility(_self_.ptr(), _56162_decl,_57117_old_mod,_56617_port.get()._field_path);
		_1ad370aca_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad36e6ab_set_mod_path(_self_.get()._field_importer, _57117_old_mod);
	} else {
		if ((!(_1ac688e5a_check_import_cycles(_self_, _56139_imp,_56162_decl)))) {
			_56180_ok = false;
			return _56180_ok;
		}
		jule::Str _58017_old_mod = _1ad370aca_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad36e942_get_mod_path(_self_.get()._field_importer);
		__JULE_DEFER({
			_1ad370aca_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad36e6ab_set_mod_path(_self_.get()._field_importer, _58017_old_mod);
		});
		if (_56139_imp.get()._field_std) {
			_1ad370aca_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad36e6ab_set_mod_path(_self_.get()._field_importer, _1a92b37be_PATH_STDLIB);
		}
		jule::Slice<jule::Ptr<_1aae013a5_Ast>> _58522_asts;
		jule::Slice<_1a92a31c6_Log> _58532_errors;
		std::tie(_58522_asts,_58532_errors) = _1ad370aca_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad370635_import_package(_self_.get()._field_importer, _56139_imp.get()._field_path,(!(_56139_imp.get()._field_std)));
		if ((_58532_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58532_errors);
			_56180_ok = false;
			return _56180_ok;
		}
		_1ac689477_check_package_accessibility(_self_.ptr(), _56162_decl,_58017_old_mod,_56139_imp.get()._field_path);
		{
			auto &expr = _58522_asts;
			auto it = expr.begin();
			_iter_begin_1adc07780:;
			if (it != expr.end()) {
				jule::Ptr<_1aae013a5_Ast> _1adc080aa_ast = *it;
				{
					jule::Ptr<_1ad3e062d_SymbolTable> _59425_table = nullptr;
					std::tie(_59425_table,_58532_errors) = _1ad4480e2_build_symbols(_1adc080aa_ast,_self_.get()._field_importer,_self_);
					if ((_58532_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58532_errors);
						_1ac685ad3_push_err_text(_self_.ptr(), _56139_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_56139_imp.get()._field_link_path)}));
						_56180_ok = false;
						return _56180_ok;
					}
					_56139_imp.get()._field_package.get()._field_files = jule::alloc_for_append(_56139_imp.get()._field_package.get()._field_files,1);_56139_imp.get()._field_package.get()._field_files.__push(_59425_table);
				}
				_iter_next_1adc07780:;
				++it;
				goto _iter_begin_1adc07780;
			}
			_iter_end_1adc07780:;
		}
	}
	_1ac687b6d_impl_import_selections(_self_.ptr(), _56139_imp,_56162_decl);
	_56180_ok = true;
	return _56180_ok;
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1ac689ca2_import_use_decl(jule::Ptr<_1ac684a05_SymbolBuilder> _self_,jule::Ptr<_1ab0237c4_UseDecl>& _61340_decl) {
	jule::Ptr<_1ad3736b0_ImportInfo> _61417_imp = _1ac687387_build_import(_self_, _61340_decl);
	if ((_61417_imp == nullptr)) {
		return nullptr;
	}
	jule::Bool _62017_ok = _1ac687783_check_duplicate_use_decl(_self_.ptr(), _61417_imp);
	if ((!(_62017_ok))) {
		return nullptr;
	}
	_62017_ok=_1ac6898ea_import_package(_self_, _61417_imp,_61340_decl);
	_self_.get()._field_table.get()._field_imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_imports,1);_self_.get()._field_table.get()._field_imports.__push(_61417_imp);
	if (_62017_ok) {
		_1ad370aca_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ad370954_imported(_self_.get()._field_importer, _61417_imp);
		return _61417_imp;
	}
	return nullptr;
}



inline void _1ac689ee4_import_use_decls(jule::Ptr<_1ac684a05_SymbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_use_decls;
		auto it = expr.begin();
		_iter_begin_1adc10090:;
		if (it != expr.end()) {
			jule::Ptr<_1ab0237c4_UseDecl> _1adc10117_decl = *it;
			{
				_1ac689ca2_import_use_decl(_self_, _1adc10117_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1adc10090;
				}
			}
			_iter_next_1adc10090:;
			++it;
			goto _iter_begin_1adc10090;
		}
		_iter_end_1adc10090:;
	}
}



inline void _1ac68a313_append_node(_1ac684a05_SymbolBuilder* _self_,_1aae02ad2_Node& _64535_node) {
	{
		auto &_match_expr{ _64535_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1ab0261bc_Impl>>()) {
			_case_begin_1adc119ed:;
			{
				(*_self_)._field_table.get()._field_impls = jule::alloc_for_append((*_self_)._field_table.get()._field_impls,1);(*_self_)._field_table.get()._field_impls.__push(_1ac684362_build_impl(_64535_node._field_data.operator jule::Ptr<_1ab0261bc_Impl>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab02262a_TypeAliasDecl>>()) {
			_case_begin_1adc11a64:;
			{
				jule::Ptr<_1ad428996_TypeAlias> _65021_ta = _1ac681084_build_type_alias(_64535_node._field_data.operator jule::Ptr<_1ab02262a_TypeAliasDecl>());
				(*_self_)._field_table.get()._field_type_aliases = jule::alloc_for_append((*_self_)._field_table.get()._field_type_aliases,1);(*_self_)._field_table.get()._field_type_aliases.__push(_65021_ta);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab02561c_StructDecl>>()) {
			_case_begin_1adc11aca:;
			{
				jule::Ptr<_1ac661075_Struct> _65321_srct = _1ac681a02_build_struct(_64535_node._field_data.operator jule::Ptr<_1ab02561c_StructDecl>());
				(*_self_)._field_table.get()._field_structs = jule::alloc_for_append((*_self_)._field_table.get()._field_structs,1);(*_self_)._field_table.get()._field_structs.__push(_65321_srct);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01da55_FnDecl>>()) {
			_case_begin_1adc11b41:;
			{
				jule::Ptr<_1ac676a08_Fn> _65621_f = _1ac6827c2_build_fn(_64535_node._field_data.operator jule::Ptr<_1ab01da55_FnDecl>());
				(*_self_)._field_table.get()._field_funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_funcs,1);(*_self_)._field_table.get()._field_funcs.__push(_65621_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab025b6c_TraitDecl>>()) {
			_case_begin_1adc125e2:;
			{
				jule::Ptr<_1ac85d096_Trait> _65921_t = _1ac682ddd_build_trait(_64535_node._field_data.operator jule::Ptr<_1ab025b6c_TraitDecl>());
				(*_self_)._field_table.get()._field_traits = jule::alloc_for_append((*_self_)._field_table.get()._field_traits,1);(*_self_)._field_table.get()._field_traits.__push(_65921_t);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01e6d2_VarDecl>>()) {
			_case_begin_1adc12658:;
			{
				jule::Ptr<_1ad39e037_Var> _66221_v = _1ac683c46_build_var(_64535_node._field_data.operator jule::Ptr<_1ab01e6d2_VarDecl>());
				(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_66221_v);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab0245c7_EnumDecl>>()) {
			_case_begin_1adc126be:;
			{
				jule::Ptr<_1ac724545_Enum> _66521_e = _1ac683817_build_enum(_64535_node._field_data.operator jule::Ptr<_1ab0245c7_EnumDecl>());
				(*_self_)._field_table.get()._field_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_enums,1);(*_self_)._field_table.get()._field_enums.__push(_66521_e);
			}
		}
		else {
			_case_begin_1adc11987:;
			{
				_1ac68560a_push_err(&(*_self_), _64535_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1adc11932:;
	}
}



inline void _1ac68a555_append_nodes(_1ac684a05_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_nodes;
		auto it = expr.begin();
		_iter_begin_1adc1a881:;
		if (it != expr.end()) {
			_1aae02ad2_Node _1adc1aa5c_node = *it;
			{
				_1ac68a313_append_node(&(*_self_), _1adc1aa5c_node);
			}
			_iter_next_1adc1a881:;
			++it;
			goto _iter_begin_1adc1a881;
		}
		_iter_end_1adc1a881:;
	}
}



inline void _1ac68a874_push_directive_pass(_1ac684a05_SymbolBuilder* _self_,jule::Ptr<_1aaeaeb7d_Directive>& _67843_d) {
	if ((_67843_d.get()._field_args.len() == 0LL)) {
		_1ac68560a_push_err(&(*_self_), _67843_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if ((_67843_d.get()._field_args.len() > 1LL)) {
		_1ab005531_Token _68317_arg = _67843_d.get()._field_args[1LL];
		_1ac68560a_push_err(&(*_self_), _68317_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	_1ab005531_Token _68713_arg = _67843_d.get()._field_args[0LL];
	if (_68713_arg._field_id != static_cast<jule::U64>(6LLU)) {
		_1ac68560a_push_err(&(*_self_), _68713_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_68713_arg._field_kind[0LL] != '\"') {
		_1ac68560a_push_err(&(*_self_), _68713_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	(*_self_)._field_table.get()._field_passes = jule::alloc_for_append((*_self_)._field_table.get()._field_passes,1);(*_self_)._field_table.get()._field_passes.__push(_1ac68055b_Pass(_67843_d.get()._field_tag,_68713_arg._field_kind.slice(1LL,(_68713_arg._field_kind.len() - 1LL))));
}



inline void _1ac68aab6_append_top_directives(_1ac684a05_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1adc220a2:;
		if (it != expr.end()) {
			jule::Ptr<_1aaeaeb7d_Directive> _1adc23317_d = *it;
			{
				{
					auto &_match_expr{ _1adc23317_d.get()._field_tag._field_kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1adc236d0:;
						{
							_1ac68a874_push_directive_pass(&(*_self_), _1adc23317_d);
						}
					}
					_match_end_1adc23acb:;
				}
			}
			_iter_next_1adc220a2:;
			++it;
			goto _iter_begin_1adc220a2;
		}
		_iter_end_1adc220a2:;
	}
}



inline void _1ac68ad08_build(jule::Ptr<_1ac684a05_SymbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1ad3e062d_SymbolTable>(_1ad3e062d_SymbolTable(_self_.get()._field_ast.get()._field_file,jule::Slice<_1ac68055b_Pass>(),jule::Slice<jule::Ptr<_1ad3736b0_ImportInfo>>(),jule::Slice<jule::Ptr<_1ad39e037_Var>>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>(),jule::Slice<jule::Ptr<_1ac661075_Struct>>(),jule::Slice<jule::Ptr<_1ac676a08_Fn>>(),jule::Slice<jule::Ptr<_1ac85d096_Trait>>(),jule::Slice<jule::Ptr<_1ac724545_Enum>>(),jule::Slice<jule::Ptr<_1ac76d3b3_Impl>>()));
	_1ac68aab6_append_top_directives(_self_.ptr());
	_1ac689ee4_import_use_decls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;
	}
	_1ac68a555_append_nodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1ac684a05_SymbolBuilder _Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac950276_is_trait_impl(_1ac76d3b3_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1ac98d55b_is_struct_impl(_1ac76d3b3_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac76d3b3_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad33ce0a_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad35596c_If _Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad355b8c_Else _Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad355dac_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3560cc_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ad32c1d5_is_while_next(_1ad3562ec_WhileIter* _self_) {
	return (*_self_)._field_next != jule::Any(jule::Any(nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3562ec_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad35651c_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad35673c_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad35695c_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad356b7c_Label _Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad356d9c_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3570bc_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad35750c_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ad32d318_is_generic_type_match(_1ad35772c_Match* _self_) {
	return ((*_self_)._field_type_match && ((*_self_)._field_expr != nullptr)) && (*_self_)._field_expr.get()._field_kind.get()._field_generic;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad35772c_Match _Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ad32e99b_is_default(_1ad357b7d_Case* _self_) {
	return ((*_self_)._field_exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad357b7d_Case _Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad357d9d_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3580bd_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad35850d_ScopeGoto _Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad2e1d04_find_package(_1ad35872d_ScopeChecker* _self_,jule::Str _41735_ident) {
	return _1ad37d412_find_package((*_self_)._field_s.ptr(), _41735_ident);
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad35894d_select_package(_1ad35872d_ScopeChecker* _self_,jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)> _42737_selector) {
	return _1ad37d7b9_select_package((*_self_)._field_s.ptr(), _42737_selector);
}



inline jule::Ptr<_1ad39e037_Var> _1ad358ab3_find_var(_1ad35872d_ScopeChecker* _self_,jule::Str _43831_ident,jule::Bool _43843_cpp_linked) {
	
	jule::Ptr<_1ad39e037_Var> _44117_v = _1ad3e32ac___find_var((*_self_)._field_table.ptr(), _43831_ident,_43843_cpp_linked,true);
	if ((_44117_v != nullptr)) {
		return _44117_v;
	}
	jule::Ptr<_1ad35872d_ScopeChecker> _44617_parent = (*_self_)._field_parent;
	while ((_44617_parent != nullptr)) {
		{
			_44117_v=_1ad3e32ac___find_var(_44617_parent.get()._field_table.ptr(), _43831_ident,_43843_cpp_linked,true);
			if ((_44117_v != nullptr)) {
				return _44117_v;
			}
			_44617_parent=_44617_parent.get()._field_parent;
		}
	_iter_next_1adc39938:;
	}
	_iter_end_1adc39938:;
	return _1ad37dc4d_find_var((*_self_)._field_s.ptr(), _43831_ident,_43843_cpp_linked);
}



inline jule::Ptr<_1ad428996_TypeAlias> _1ad358c28_find_type_alias(_1ad35872d_ScopeChecker* _self_,jule::Str _46538_ident,jule::Bool _46550_cpp_linked) {
	
	jule::Ptr<_1ad428996_TypeAlias> _46817_ta = _1ad3e381d___find_type_alias((*_self_)._field_table.ptr(), _46538_ident,_46550_cpp_linked,true);
	if ((_46817_ta != nullptr)) {
		return _46817_ta;
	}
	jule::Ptr<_1ad35872d_ScopeChecker> _47317_parent = (*_self_)._field_parent;
	while ((_47317_parent != nullptr)) {
		{
			_46817_ta=_1ad3e381d___find_type_alias(_47317_parent.get()._field_table.ptr(), _46538_ident,_46550_cpp_linked,true);
			if ((_46817_ta != nullptr)) {
				return _46817_ta;
			}
			_47317_parent=_47317_parent.get()._field_parent;
		}
	_iter_next_1adc3e18a:;
	}
	_iter_end_1adc3e18a:;
	return _1ad37e1d2_find_type_alias((*_self_)._field_s.ptr(), _46538_ident,_46550_cpp_linked);
}



inline jule::Ptr<_1ac661075_Struct> _1ad358d8d_find_struct(_1ad35872d_ScopeChecker* _self_,jule::Str _49034_ident,jule::Bool _49046_cpp_linked) {
	return _1ad37e666_find_struct((*_self_)._field_s.ptr(), _49034_ident,_49046_cpp_linked);
}



inline jule::Ptr<_1ac676a08_Fn> _1ad3591ce_find_fn(_1ad35872d_ScopeChecker* _self_,jule::Str _49930_ident,jule::Bool _49942_cpp_linked) {
	return _1ad37eaea_find_fn((*_self_)._field_s.ptr(), _49930_ident,_49942_cpp_linked);
}



inline jule::Ptr<_1ac85d096_Trait> _1ad359586_find_trait(_1ad35872d_ScopeChecker* _self_,jule::Str _50833_ident) {
	return _1ad37eea2_find_trait((*_self_)._field_s.ptr(), _50833_ident);
}



inline jule::Ptr<_1ac724545_Enum> _1ad35993d_find_enum(_1ad35872d_ScopeChecker* _self_,jule::Str _51732_ident) {
	return _1ad380359_find_enum((*_self_)._field_s.ptr(), _51732_ident);
}



inline jule::Bool _1ad359cd4_is_unsafe(jule::Ptr<_1ad35872d_ScopeChecker> _self_) {
	jule::Ptr<_1ad35872d_ScopeChecker> _52517_scope = _self_;
	_julec_label_iter:;
	if (_52517_scope.get()._field_scope.get()._field_unsafety) {
		return true;
	}
	if ((_52517_scope.get()._field_parent != nullptr)) {
		_52517_scope=_52517_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1ad35a0ae_is_root(_1ad35872d_ScopeChecker* _self_) {
	return ((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr);
}



inline void _1ad35a301_stop(_1ad35872d_ScopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1ad35a5cb_stopped(_1ad35872d_ScopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1ad35a8a6_is_deferred(jule::Ptr<_1ad35872d_ScopeChecker> _self_) {
	jule::Ptr<_1ad35872d_ScopeChecker> _55817_scope = _self_;
	_julec_label_iter:;
	if (_55817_scope.get()._field_scope.get()._field_deferred) {
		return true;
	}
	if ((_55817_scope.get()._field_parent != nullptr)) {
		_55817_scope=_55817_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_1ad35872d_ScopeChecker> _1ad35ab81_get_root(jule::Ptr<_1ad35872d_ScopeChecker> _self_) {
	jule::Ptr<_1ad35872d_ScopeChecker> _57617_root = _self_;
	while ((_57617_root.get()._field_parent != nullptr) && (_57617_root.get()._field_owner == nullptr)) {
		{
			_57617_root=_57617_root.get()._field_parent;
		}
	_iter_next_1adc4db17:;
	}
	_iter_end_1adc4db17:;
	return _57617_root;
}



inline jule::Ptr<_1ad35872d_ScopeChecker> _1ad35ae5b_get_hard_root(jule::Ptr<_1ad35872d_ScopeChecker> _self_) {
	jule::Ptr<_1ad35872d_ScopeChecker> _58617_root = _self_;
	while ((_58617_root.get()._field_parent != nullptr)) {
		{
			_58617_root=_58617_root.get()._field_parent;
		}
	_iter_next_1adc503bb:;
	}
	_iter_end_1adc503bb:;
	return _58617_root;
}



inline jule::Ptr<_1ad356b7c_Label> _1ad35b313_find_label(_1ad35872d_ScopeChecker* _self_,jule::Str _59629_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1adc51a71:;
		if (it != expr.end()) {
			jule::Any _1adc51ae8_st = *it;
			{
				{
					auto &_match_expr{ _1adc51ae8_st };
					
					if (_match_expr.type_is<jule::Ptr<_1ad356b7c_Label>>()) {
						_case_begin_1adc5229c:;
						{
							jule::Ptr<_1ad356b7c_Label> _60025_label = _1adc51ae8_st.operator jule::Ptr<_1ad356b7c_Label>();
							if (_60025_label.get()._field_ident == _59629_ident) {
								return _60025_label;
							}
						}
					}
					_match_end_1adc52247:;
				}
			}
			_iter_next_1adc51a71:;
			++it;
			goto _iter_begin_1adc51a71;
		}
		_iter_end_1adc51a71:;
	}
	return nullptr;
}



inline jule::Ptr<_1ad3582dd_ScopeLabel> _1ad35b6ba_find_label_scope(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Str _61236_ident) {
	jule::Ptr<_1ad3582dd_ScopeLabel> _61317_label = _1ad35ba72_find_label_all(_self_.ptr(), _61236_ident);
	if ((_61317_label != nullptr) && (_61317_label.get()._field_scope == _self_)) {
		return _61317_label;
	}
	return nullptr;
}



inline jule::Ptr<_1ad3582dd_ScopeLabel> _1ad35ba72_find_label_all(_1ad35872d_ScopeChecker* _self_,jule::Str _62433_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1adc55107:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3582dd_ScopeLabel> _1adc556bd_lbl = *it;
			{
				if (_1adc556bd_lbl.get()._field_label.get()._field_ident == _62433_ident) {
					return _1adc556bd_lbl;
				}
			}
			_iter_next_1adc55107:;
			++it;
			goto _iter_begin_1adc55107;
		}
		_iter_end_1adc55107:;
	}
	return nullptr;
}



inline jule::Bool _1ad35c006_is_duplicated_ident(_1ad35872d_ScopeChecker* _self_,jule::U64 _63638_itself,jule::Str _63655_ident) {
	jule::Ptr<_1ad39e037_Var> _63713_v = _1ad358ab3_find_var(&(*_self_), _63655_ident,false);
	if ((_63713_v != nullptr) && (static_cast<jule::U64>(_63713_v) != _63638_itself)) {
		if ((_63713_v.get()._field_scope == nullptr)) {
			return false;
		}
		return (_63713_v.get()._field_scope == (*_self_)._field_scope) || (!(_1ad3807cc_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL))));
	}
	jule::Ptr<_1ad428996_TypeAlias> _64513_ta = _1ad358c28_find_type_alias(&(*_self_), _63655_ident,false);
	if ((_64513_ta != nullptr) && (static_cast<jule::U64>(_64513_ta) != _63638_itself)) {
		if ((_64513_ta.get()._field_scope == nullptr)) {
			return false;
		}
		return (_64513_ta.get()._field_scope == (*_self_)._field_tree) || (!(_1ad3807cc_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL))));
	}
	return false;
}



inline void _1ad35c325_check_var_decl(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab01e6d2_VarDecl> _65638_decl) {
	jule::Ptr<_1ad39e037_Var> _65717_v = _1ac683c46_build_var(_65638_decl);
	_65717_v.get()._field_scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_vars,1);_self_.get()._field_table.get()._field_vars.__push(_65717_v);
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_65717_v));
	});
	if (_1ad35c006_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_65717_v)),_65717_v.get()._field_ident)) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _65717_v.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_65717_v.get()._field_ident)}));
		_1ad3814c0_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1ad35a301_stop(_self_.ptr());
		return;
	}
	_1ad390402_check_var_decl(_self_.get()._field_s, _65717_v,jule::Trait<_1ad447256_Lookup>(_self_, 0));
	if ((!(_1ad39e730_is_type_inferred(_65717_v.ptr()))) && ((_65717_v.get()._field_kind == nullptr) || (_65717_v.get()._field_kind.get()._field_kind == nullptr))) {
		return;
	}
	_1ad39555b_check_type_var(_self_.get()._field_s, _65717_v,jule::Trait<_1ad447256_Lookup>(_self_, 0));
}



inline void _1ad35c644_check_type_alias_decl(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab02262a_TypeAliasDecl> _68045_decl) {
	jule::Ptr<_1ad428996_TypeAlias> _68117_ta = _1ac681084_build_type_alias(_68045_decl);
	if (_1ad35c006_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_68117_ta)),_68117_ta.get()._field_ident)) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _68117_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_68117_ta.get()._field_ident)}));
		_1ad3814c0_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1ad35a301_stop(_self_.ptr());
		return;
	}
	_1ad38a41e_check_type_alias_decl(_self_.get()._field_s, _68117_ta,jule::Trait<_1ad447256_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_type_aliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_type_aliases,1);_self_.get()._field_table.get()._field_type_aliases.__push(_68117_ta);
	if ((_68117_ta.get()._field_kind.get()._field_kind == nullptr)) {
		_1ad35a301_stop(_self_.ptr());
	}
}



inline jule::Ptr<_1ad33ce0a_Scope> _1ad35c91e_get_child(_1ad35872d_ScopeChecker* _self_) {
	return jule::new_ptr<_1ad33ce0a_Scope>(_1ad33ce0a_Scope((*_self_)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



inline void _1ad35cde7_check_child_ssc(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab01d615_ScopeTree>& _70440_tree,jule::Ptr<_1ad33ce0a_Scope>& _70463_s,jule::Ptr<_1ad35872d_ScopeChecker>& _70479_ssc) {
	_70479_ssc.get()._field_parent=_self_;
	_1ad36a751_check(_70479_ssc, _70440_tree,_70463_s);
}



inline jule::Ptr<_1ad33ce0a_Scope> _1ad35d37b_check_child_sc(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab01d615_ScopeTree>& _70939_tree,jule::Ptr<_1ad35872d_ScopeChecker>& _70962_ssc) {
	jule::Ptr<_1ad33ce0a_Scope> _71017_s = _1ad35c91e_get_child(_self_.ptr());
	_1ad35cde7_check_child_ssc(_self_, _70939_tree,_71017_s,_70962_ssc);
	return _71017_s;
}



inline jule::Ptr<_1ad33ce0a_Scope> _1ad35d733_check_child(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab01d615_ScopeTree>& _71536_tree) {
	jule::Ptr<_1ad35872d_ScopeChecker> _71617_ssc = _1ad36aa2b_new_child_checker(_self_);
	return _1ad35d37b_check_child_sc(_self_, _71536_tree,_71617_ssc);
}



inline void _1ad35da52_check_anon_scope(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab01d615_ScopeTree> _72040_tree) {
	jule::Ptr<_1ad33ce0a_Scope> _72117_s = _1ad35d733_check_child(_self_, _72040_tree);
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_72117_s));
}



inline void _1ad35de4d_process_error_call(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ac671816_BuiltinErrorCallExprModel>& _72543_m,_1ab005531_Token _72574_err) {
	if (_1ad35a8a6_is_deferred(_self_)) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _72574_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad35872d_ScopeChecker> _73017_root = _1ad35ab81_get_root(_self_);
	if ((!(_73017_root.get()._field_owner.get()._field_decl.get()._field_exceptional))) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _72574_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1ad3814c0_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	}
	_72543_m.get()._field_func=_73017_root.get()._field_owner;
}



inline void _1ad35e26c_check_expr(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1aadb528c_Expr> _73834_expr) {
	jule::Ptr<_1ad3e89cc_Eval> _73917_eval = _1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0));
	_73917_eval.get()._field_ignored=true;
	jule::Ptr<_1ad3e6975_Data> _74117_d = _1ad418c83_eval_expr(_73917_eval, _73834_expr);
	if ((_74117_d == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _74117_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac671816_BuiltinErrorCallExprModel>>()) {
			_case_begin_1adc78d62:;
			{
				jule::Ptr<_1ac671816_BuiltinErrorCallExprModel> _74821_m = _74117_d.get()._field_model.operator jule::Ptr<_1ac671816_BuiltinErrorCallExprModel>();
				_1ad35de4d_process_error_call(_self_, _74821_m,_73834_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_74117_d));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac672d56_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac67134e_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac66e77b_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac66ddeb_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac66e3b3_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac67020a_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac6707c1_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac6731a8_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac66904a_FnCallExprModel>>()) {
			_case_begin_1adc78dc8:;
			{
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_74117_d));
			}
		}
		else {
			_case_begin_1adc788cd:;
			{
				_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _73834_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1adc78cda:;
	}
}



inline void _1ad35e58b_check_co_expr(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1aadb606d_CoExpr> _76637_expr) {
	jule::Ptr<_1ad3e89cc_Eval> _76717_eval = _1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0));
	_76717_eval.get()._field_ignored=true;
	jule::Ptr<_1ad3e6975_Data> _76917_d = _1ad418c83_eval_expr(_76717_eval, _76637_expr.get()._field_expr);
	if ((_76917_d == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _76917_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac66904a_FnCallExprModel>>()) {
			_case_begin_1adc80bd2:;
			{
				jule::Ptr<_1ac66904a_FnCallExprModel> _77621_model = _76917_d.get()._field_model.operator jule::Ptr<_1ac66904a_FnCallExprModel>();
				if (_77621_model.get()._field_func.get()._field_decl.get()._field_exceptional) {
					_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _76637_expr.get()._field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1ad3814c0_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				}
				_77621_model.get()._field_is_co=true;
				_1ad40e3b6_check_fn_of_concurrent_call(_76717_eval.ptr(), _77621_model.get()._field_func,_76637_expr.get()._field_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_76917_d));
			}
		}
		else {
			_case_begin_1adc7e9e4:;
			{
				_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _76637_expr.get()._field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1adc7ee56:;
	}
}



inline jule::Ptr<_1ad35596c_If> _1ad35e943_check_if(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab0217b1_If> _79132_i) {
	jule::Ptr<_1ad33ce0a_Scope> _79217_s = _1ad35d733_check_child(_self_, _79132_i.get()._field_scope);
	jule::Ptr<_1ad3e6975_Data> _79417_d = _1ad418c83_eval_expr(_1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0)), _79132_i.get()._field_expr);
	if ((_79417_d == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1ad42ec99_Prim> _79917_prim = _1ad42bec7_prim(_79417_d.get()._field_kind.ptr());
	if ((_79917_prim == nullptr) || (!(_1ad4331ed_is_bool(_79917_prim.ptr())))) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _79132_i.get()._field_expr.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1ad35596c_If>(_1ad35596c_If(_79417_d.get()._field_model,_79217_s));
}



inline jule::Ptr<_1ad355b8c_Else> _1ad35ecea_check_else(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab021b24_Else> _81134_e) {
	return jule::new_ptr<_1ad355b8c_Else>(_1ad355b8c_Else(_1ad35d733_check_child(_self_, _81134_e.get()._field_scope)));
}



inline void _1ad360119_check_conditional(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab022031_Conditional> _81741_conditional) {
	jule::Ptr<_1ad355dac_Conditional> _81817_c = jule::new_ptr<_1ad355dac_Conditional>(_1ad355dac_Conditional());
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_81817_c));
	_81817_c.get()._field_elifs=jule::Slice<jule::Ptr<_1ad35596c_If>>::alloc(0LL,static_cast<jule::I64>((_81741_conditional.get()._field_tail.len() + 1LL)));
	_81817_c.get()._field_elifs = jule::alloc_for_append(_81817_c.get()._field_elifs,1);_81817_c.get()._field_elifs.__push(_1ad35e943_check_if(_self_, _81741_conditional.get()._field_head));
	{
		auto &expr = _81741_conditional.get()._field_tail;
		auto it = expr.begin();
		_iter_begin_1adc8d63a:;
		if (it != expr.end()) {
			jule::Ptr<_1ab0217b1_If> _1adc8c804_elif = *it;
			{
				_81817_c.get()._field_elifs = jule::alloc_for_append(_81817_c.get()._field_elifs,1);_81817_c.get()._field_elifs.__push(_1ad35e943_check_if(_self_, _1adc8c804_elif));
			}
			_iter_next_1adc8d63a:;
			++it;
			goto _iter_begin_1adc8d63a;
		}
		_iter_end_1adc8d63a:;
	}
	if ((_81741_conditional.get()._field_default != nullptr)) {
		_81817_c.get()._field_default=_1ad35ecea_check_else(_self_, _81741_conditional.get()._field_default);
	}
}



inline jule::Ptr<_1ad33ce0a_Scope> _1ad36067a_check_iter_scope_sc(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::U64 _83339_it,jule::Ptr<_1ab01d615_ScopeTree> _83356_tree,jule::Ptr<_1ad35872d_ScopeChecker> _83378_ssc) {
	_83378_ssc.get()._field_it=_83339_it;
	return _1ad35d37b_check_child_sc(_self_, _83356_tree,_83378_ssc);
}



inline jule::Ptr<_1ad33ce0a_Scope> _1ad360b0e_check_iter_scope(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::U64 _83836_it,jule::Ptr<_1ab01d615_ScopeTree>& _83854_tree) {
	jule::Ptr<_1ad35872d_ScopeChecker> _83917_ssc = _1ad36aa2b_new_child_checker(_self_);
	return _1ad36067a_check_iter_scope_sc(_self_, _83836_it,_83854_tree,_83917_ssc);
}



inline void _1ad360e2d_check_inf_iter(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab020040_Iter>& _84339_it) {
	jule::Ptr<_1ad3560cc_InfIter> _84417_kind = jule::new_ptr<_1ad3560cc_InfIter>(_1ad3560cc_InfIter());
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_84417_kind));
	_84417_kind.get()._field_scope=_1ad360b0e_check_iter_scope(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_84417_kind)),_84339_it.get()._field_scope);
}



inline void _1ad36124c_check_while_iter(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab020040_Iter>& _85141_it) {
	jule::Ptr<_1ab0205b2_WhileKind> _85217_wh = _85141_it.get()._field_kind.operator jule::Ptr<_1ab0205b2_WhileKind>();
	if ((_85217_wh.get()._field_expr == nullptr) && (_85217_wh.get()._field_next == jule::Any(jule::Any(nullptr)))) {
		_1ad360e2d_check_inf_iter(_self_, _85141_it);
		return;
	}
	jule::Ptr<_1ad3562ec_WhileIter> _85817_kind = jule::new_ptr<_1ad3562ec_WhileIter>(_1ad3562ec_WhileIter());
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_85817_kind));
	_85817_kind.get()._field_scope=_1ad360b0e_check_iter_scope(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_85817_kind)),_85141_it.get()._field_scope);
	if ((_85217_wh.get()._field_expr != nullptr)) {
		jule::Ptr<_1ad3e6975_Data> _86521_d = _1ad418c83_eval_expr(_1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0)), _85217_wh.get()._field_expr);
		if ((_86521_d == nullptr)) {
			return;
		}
		jule::Ptr<_1ad42ec99_Prim> _87017_prim = _1ad42bec7_prim(_86521_d.get()._field_kind.ptr());
		if ((_87017_prim == nullptr)) {
			_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _85141_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		if ((!(_1ad4331ed_is_bool(_87017_prim.ptr())))) {
			_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _85141_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		_85817_kind.get()._field_expr=_86521_d.get()._field_model;
	}
	if (_1ab0207d2_is_while_next(_85217_wh.ptr())) {
		if ((!(_1ad31ed21_is_valid_ast_st_for_next_st(_85217_wh.get()._field_next)))) {
			_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _85217_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;
		}
		jule::I64 _89017_n = _self_.get()._field_scope.get()._field_stmts.len();
		_1ad3690ac_check_node(_self_, _85217_wh.get()._field_next);
		if (_89017_n < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_scope.get()._field_stmts.len()))) {
			jule::Any _89325_st = _self_.get()._field_scope.get()._field_stmts[_89017_n];
			_self_.get()._field_scope.get()._field_stmts=_self_.get()._field_scope.get()._field_stmts.slice(0LL,_89017_n);
			if ((!(_1ad320904_is_valid_st_for_next_st(_89325_st)))) {
				_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _85217_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			}
			_85817_kind.get()._field_next=_89325_st;
		}
	}
}



inline void _1ad36156b_check_range_iter(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab020040_Iter>& _90441_it) {
	jule::Ptr<_1ab020bcd_RangeKind> _90517_rang = _90441_it.get()._field_kind.operator jule::Ptr<_1ab020bcd_RangeKind>();
	jule::Ptr<_1ad3e6975_Data> _90717_d = _1ad418c83_eval_expr(_1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0)), _90517_rang.get()._field_expr);
	if ((_90717_d == nullptr)) {
		return;
	}
	jule::Ptr<_1ad35651c_RangeIter> _91217_kind = jule::new_ptr<_1ad35651c_RangeIter>(_1ad35651c_RangeIter(_90717_d,jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ad39e037_Var>(),jule::Ptr<_1ad39e037_Var>()));
	_1ad3daa57_RangeChecker _91617_rc = _1ad3daa57_RangeChecker(_self_,_90517_rang,_91217_kind,_90717_d);
	jule::Bool _92213_ok = _1ad3dc96b_check(&_91617_rc);
	if ((!(_92213_ok))) {
		return;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_91217_kind));
	jule::Ptr<_1ad35872d_ScopeChecker> _92917_ssc = _1ad36aa2b_new_child_checker(_self_);
	if ((_91217_kind.get()._field_key_a != nullptr)) {
		if ((!(_1ad3807cc_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ad35c006_is_duplicated_ident(_self_.ptr(), 0LLU,_91217_kind.get()._field_key_a.get()._field_ident)) {
			_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _91217_kind.get()._field_key_a.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_91217_kind.get()._field_key_a.get()._field_ident)}));
			_1ad3814c0_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_92917_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_92917_ssc.get()._field_table.get()._field_vars,1);_92917_ssc.get()._field_table.get()._field_vars.__push(_91217_kind.get()._field_key_a);
	}
	if ((_91217_kind.get()._field_key_b != nullptr)) {
		if ((!(_1ad3807cc_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ad35c006_is_duplicated_ident(_self_.ptr(), 0LLU,_91217_kind.get()._field_key_b.get()._field_ident)) {
			_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _91217_kind.get()._field_key_b.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_91217_kind.get()._field_key_b.get()._field_ident)}));
			_1ad3814c0_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_92917_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_92917_ssc.get()._field_table.get()._field_vars,1);_92917_ssc.get()._field_table.get()._field_vars.__push(_91217_kind.get()._field_key_b);
	}
	_91217_kind.get()._field_scope=_1ad36067a_check_iter_scope_sc(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_91217_kind)),_90441_it.get()._field_scope,_92917_ssc);
}



inline void _1ad36188a_check_iter(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab020040_Iter> _95034_it) {
	if (_1ab020260_is_inf(_95034_it.ptr())) {
		_1ad360e2d_check_inf_iter(_self_, _95034_it);
		return;
	}
	{
		auto &_match_expr{ _95034_it.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ab0205b2_WhileKind>>()) {
			_case_begin_1b04ca89d:;
			{
				_1ad36124c_check_while_iter(_self_, _95034_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab020bcd_RangeKind>>()) {
			_case_begin_1b04cb6e5:;
			{
				_1ad36156b_check_range_iter(_self_, _95034_it);
			}
		}
		else {
			_case_begin_1b04cb2a5:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1b04cb250:;
	}
}



inline jule::Bool _1ad361c42_check_valid_cont_label(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::U64 _96642_it) {
	jule::Ptr<_1ad35872d_ScopeChecker> _96717_scope = _self_;
	_julec_label_iter:;
	if (_96717_scope.get()._field_it == _96642_it) {
		return true;
	}
	if ((_96717_scope.get()._field_parent != nullptr)) {
		_96717_scope=_96717_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1ad36213d_check_valid_break_label(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::U64 _98243_ptr) {
	jule::Ptr<_1ad35872d_ScopeChecker> _98317_scope = _self_;
	_julec_label_iter:;
	if (_98317_scope.get()._field_it == _98243_ptr) {
		return true;
	}
	if ((_98317_scope.get()._field_cse != 0LLU)) {
		jule::U64 _99117_mtch = static_cast<jule::U64>(((_1ad357b7d_Case*)(_98317_scope.get()._field_cse))->_field_owner);
		if (_99117_mtch == _98243_ptr) {
			return true;
		}
	}
	if ((_98317_scope.get()._field_parent != nullptr)) {
		_98317_scope=_98317_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_1ad35673c_ContSt> _1ad3624d4_check_cont_valid_scope(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab0213a4_ContSt> _100542_c) {
	if (_1ad35a8a6_is_deferred(_self_)) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _100542_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_100542_c.get()._field_label._field_id != static_cast<jule::U64>(0LLU)) {
		return jule::new_ptr<_1ad35673c_ContSt>(_1ad35673c_ContSt());
	}
	jule::Ptr<_1ad35872d_ScopeChecker> _101517_scope = _self_;
	_julec_label_iter:;
	{
		
		if (((_101517_scope.get()._field_it == 0LLU) && (_101517_scope.get()._field_parent != nullptr)) && (_101517_scope.get()._field_owner == nullptr)) {
			_case_begin_1b04d5743:;
			{
				_101517_scope=_101517_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_101517_scope.get()._field_it != 0LLU)) {
			_case_begin_1b04d57ba:;
			{
				return jule::new_ptr<_1ad35673c_ContSt>(_1ad35673c_ContSt(_101517_scope.get()._field_it));
			}
		}
		_match_end_1b04d5699:;
	}
	_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _100542_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1ad362803_check_cont(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab0213a4_ContSt> _102930_c) {
	jule::Ptr<_1ad35673c_ContSt> _103017_cont = _1ad3624d4_check_cont_valid_scope(_self_, _102930_c);
	if ((_103017_cont == nullptr)) {
		return;
	}
	if (_102930_c.get()._field_label._field_id != static_cast<jule::U64>(0LLU)) {
		jule::Ptr<_1ad3582dd_ScopeLabel> _103621_label = _1ad2e8613_find_label_parent(_102930_c.get()._field_label._field_kind,_self_.get()._field_parent);
		if ((_103621_label == nullptr)) {
			_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _102930_c.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_102930_c.get()._field_label._field_kind)}));
			return;
		}
		_103621_label.get()._field_used=true;
		if ((_103621_label.get()._field_pos + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_103621_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
			_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _102930_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_102930_c.get()._field_label._field_kind)}));
			return;
		}
		jule::I64 _104917_i = (_103621_label.get()._field_pos + 1LL);
		if (_104917_i >= static_cast<jule::I64>(static_cast<jule::I64>(_103621_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
			_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _102930_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _105325_st = _103621_label.get()._field_scope.get()._field_scope.get()._field_stmts[_104917_i];
			{
				auto &_match_expr{ _105325_st };
				
				if (_match_expr.type_is<jule::Ptr<_1ad3560cc_InfIter>>()) {
					_case_begin_1b04e0d03:;
					{
						_103017_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_105325_st.operator jule::Ptr<_1ad3560cc_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1ad35651c_RangeIter>>()) {
					_case_begin_1b04e0d69:;
					{
						_103017_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_105325_st.operator jule::Ptr<_1ad35651c_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1ad3562ec_WhileIter>>()) {
					_case_begin_1b04e0dd0:;
					{
						_103017_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_105325_st.operator jule::Ptr<_1ad3562ec_WhileIter>()));
					}
				}
				else {
					_case_begin_1b04e0c15:;
					{
						_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _102930_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_102930_c.get()._field_label._field_kind)}));
					}
				}
				_match_end_1b04e0bb0:;
			}
		}
	}
	if ((_103017_cont.get()._field_it != 0LLU)) {
		if ((!(_1ad361c42_check_valid_cont_label(_self_, _103017_cont.get()._field_it)))) {
			_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _102930_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_102930_c.get()._field_label._field_kind)}));
		}
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_103017_cont));
}



inline void _1ad362b22_check_label(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab01ca65_LabelSt> _107635_l) {
	if ((_1ad35b313_find_label(_self_.ptr(), _107635_l.get()._field_ident) != nullptr)) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _107635_l.get()._field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_107635_l.get()._field_ident)}));
		return;
	}
	jule::Ptr<_1ad356b7c_Label> _108217_label = jule::new_ptr<_1ad356b7c_Label>(_1ad356b7c_Label(_107635_l.get()._field_ident));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_108217_label));
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1ad3582dd_ScopeLabel>>({jule::new_ptr<_1ad3582dd_ScopeLabel>(_1ad3582dd_ScopeLabel(_107635_l.get()._field_token,_108217_label,static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_scope.get()._field_stmts.len())) - 1LL))),_self_,jule::Bool()))}));
}



inline void _1ad362e41_push_goto(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab01cc85_GotoSt> _109533_gt) {
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1ad356d9c_GotoSt>(_1ad356d9c_GotoSt(_109533_gt.get()._field_label._field_kind))));
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1ad35850d_ScopeGoto>>({jule::new_ptr<_1ad35850d_ScopeGoto>(_1ad35850d_ScopeGoto(_109533_gt,_self_,static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_scope.get()._field_stmts.len())) - 1LL)))))}));
}



inline void _1ad363260_check_postfix(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab01d3e5_AssignSt> _110737_a) {
	if ((_110737_a.get()._field_left.len() > 1LL)) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _110737_a.get()._field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1aadb528c_Expr> _111317_expr = _110737_a.get()._field_left[0LL].get()._field_expr;
	jule::Ptr<_1ad3e6975_Data> _111417_d = _1ad418c83_eval_expr(_1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0)), _111317_expr);
	if ((_111417_d == nullptr)) {
		return;
	}
	_1ad31bbdb_check_assign(_self_.get()._field_s,_111417_d,nullptr,_110737_a.get()._field_setter);
	if ((_1ad42c57c_ptr(_111417_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ad437983_Ptr> _112221_ptr = _1ad42c57c_ptr(_111417_d.get()._field_kind.ptr());
		if (_1ad4385cc_is_unsafe(_112221_ptr.ptr())) {
			_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _110737_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_110737_a.get()._field_setter._field_kind),jule::Any(_1ad429d4e_to_str(_111417_d.get()._field_kind.ptr()))}));
			return;
		}
	} else {
		if ((_1ad42bec7_prim(_111417_d.get()._field_kind.ptr()) == nullptr) || (!(_1ad355076_is_num(_1ad42bec7_prim(_111417_d.get()._field_kind.ptr()).get()._field_kind)))) {
			_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _110737_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_110737_a.get()._field_setter._field_kind),jule::Any(_1ad429d4e_to_str(_111417_d.get()._field_kind.ptr()))}));
			return;
		}
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1ad3570bc_Postfix>(_1ad3570bc_Postfix(_111417_d.get()._field_model,_110737_a.get()._field_setter._field_kind))));
}



inline jule::Bool _1ad363617_is_new_assign_ident(_1ad35872d_ScopeChecker* _self_,jule::Str _114038_ident) {
	if (_1ab008314_is_ignore_ident(_114038_ident) || _114038_ident.empty()) {
		return false;
	}
	return _1ad3e3ca2_def_by_ident((*_self_)._field_table.ptr(), _114038_ident,false) == jule::Any(jule::Any(nullptr));
}



inline jule::Bool _1ad363bbc_check_structure_assign_op(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ac664551_StructIns>& _114850_s,jule::Ptr<_1ab01d3e5_AssignSt>& _114870_a,jule::Ptr<_1ad3e6975_Data>& _114889_r) {
	jule::Ptr<_1ac67a501_FnIns> _115117_overload = nullptr;
	{
		auto &_match_expr{ _114870_a.get()._field_setter._field_kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1b050a922:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_add_assign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1b050a988:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_sub_assign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1b050a9ee:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_div_assign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1b050aa65:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_mul_assign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1b050bda7:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_mod_assign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1b050be1d:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_shl_assign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1b050be84:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_shr_assign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1b050beea:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_bit_or_assign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1b050c21a:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_bit_and_assign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1b050c281:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_bit_xor_assign;
			}
		}
		else {
			_case_begin_1b050a3c2:;
			{
				_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _114870_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_114870_a.get()._field_setter._field_kind),jule::Any(_1ac66496e_to_str(_114850_s.ptr()))}));
				return false;
			}
		}
		_match_end_1b050a823:;
	}
	if ((_115117_overload == nullptr)) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _114870_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_114870_a.get()._field_setter._field_kind),jule::Any(_1ac66496e_to_str(_114850_s.ptr()))}));
		return false;
	}
	jule::Ptr<_1ac67939b_ParamIns> _118317_p = _115117_overload.get()._field_params[1LL];
	return _1ad387619_check_assign_type(_self_.get()._field_s, _118317_p.get()._field_decl.get()._field_reference,_118317_p.get()._field_kind,_114889_r,_114870_a.get()._field_setter);
}



inline void _1ad363eca_check_single_assign(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab01d3e5_AssignSt>& _118744_a) {
	jule::Ptr<_1ad3e6975_Data> _118817_l = nullptr;
	if ((!(_1ab008314_is_ignore_ident(_118744_a.get()._field_left[0LL].get()._field_ident)))) {
		jule::Ptr<_1aadb528c_Expr> _119121_expr = _118744_a.get()._field_left[0LL].get()._field_expr;
		_118817_l=_1ad418c83_eval_expr(_1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0)), _119121_expr);
		if ((_118817_l == nullptr)) {
			return;
		}
	}
	jule::Ptr<_1ad3e89cc_Eval> _119817_eval = nullptr;
	if ((_118817_l != nullptr)) {
		_119817_eval=_1ad386b24_evalp(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0),_118817_l.get()._field_kind);
	} else {
		_119817_eval=_1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0));
	}
	_119817_eval.get()._field_unsafety=_1ad359cd4_is_unsafe(_self_);
	jule::Ptr<_1ad3e6975_Data> _120517_r = _1ad418c83_eval_expr(_119817_eval, _118744_a.get()._field_right);
	if ((_120517_r == nullptr)) {
		return;
	}
	if ((_118817_l == nullptr)) {
		if (_1ad42acb7_void(_120517_r.get()._field_kind.ptr())) {
			_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _118744_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_120517_r));
		return;
	}
	if ((!(_1ad31bbdb_check_assign(_self_.get()._field_s,_118817_l,_120517_r,_118744_a.get()._field_setter)))) {
		return;
	}
	if ((_1ad42dd42_tup(_120517_r.get()._field_kind.ptr()) != nullptr)) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _118744_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1ac666663_OperandExprModel> _122717_lm = jule::new_ptr<_1ac666663_OperandExprModel>(_1ac666663_OperandExprModel(_118817_l.get()._field_kind,_118817_l.get()._field_model));
	jule::Ptr<_1ac666663_OperandExprModel> _123117_rm = jule::new_ptr<_1ac666663_OperandExprModel>(_1ac666663_OperandExprModel(_120517_r.get()._field_kind,_120517_r.get()._field_model));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1ad3572dc_Assign>(_1ad3572dc_Assign(_122717_lm,_123117_rm,_118744_a.get()._field_setter))));
	if ((_118744_a.get()._field_setter._field_kind != jule::Str("=", 1))) {
		jule::Ptr<_1ac664551_StructIns> _123821_strct = _1ad42d4b2_strct(_118817_l.get()._field_kind.ptr());
		if ((_123821_strct != nullptr)) {
			_1ad363bbc_check_structure_assign_op(_self_, _123821_strct,_118744_a,_120517_r);
			return;
		}
		_118744_a.get()._field_setter._field_kind=_118744_a.get()._field_setter._field_kind.slice(0LL,(_118744_a.get()._field_setter._field_kind.len() - 1LL));
		_1ad41b604_BinaryEval _124521_solver = static__1ad41c10a_new(_119817_eval,_118744_a.get()._field_setter);
		_120517_r=_1ad42296d_solve_explicit(&_124521_solver, _118817_l,_120517_r);
		if ((_120517_r == nullptr)) {
			return;
		}
		_118744_a.get()._field_setter._field_kind+=jule::Str("=", 1);
		return;
	}
	_1ad3d019a_AssignTypeChecker _125417_checker = _1ad3d019a_AssignTypeChecker(_self_.get()._field_s,_118817_l.get()._field_kind,_120517_r,_118744_a.get()._field_setter);
	if (_1ad3d161e_check(&_125417_checker)) {
		_123117_rm.get()._field_model=_120517_r.get()._field_model;
		_122717_lm.get()._field_model=_118817_l.get()._field_model;
	}
}



inline void _1ad3646c3___process_end_part_of_multi_assign(_1ad35872d_ScopeChecker* _self_,jule::Ptr<_1ad35750c_MultiAssign> _126657_st,jule::Ptr<_1ab01d3e5_AssignSt> _126713_a,jule::Ptr<_1ab01d1c5_AssignLeft> _126731_lexpr,jule::Ptr<_1ad3e6975_Data> _126755_l,jule::Ptr<_1ad3e6975_Data> _126769_r) {
	if (_1ab008314_is_ignore_ident(_126731_lexpr.get()._field_ident)) {
		if (_1ad42acb7_void(_126769_r.get()._field_kind.ptr())) {
			_1ad3810c4_push_err((*_self_)._field_s.ptr(), _126713_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		_126657_st.get()._field_l = jule::alloc_for_append(_126657_st.get()._field_l,1);_126657_st.get()._field_l.__push(jule::Any(nullptr));
		return;
	}
	if (_126713_a.get()._field_declarative && _1ad363617_is_new_assign_ident(&(*_self_), _126731_lexpr.get()._field_ident)) {
		if (_1ad35c006_is_duplicated_ident(&(*_self_), 0LLU,_126731_lexpr.get()._field_ident)) {
			_1ad3810c4_push_err((*_self_)._field_s.ptr(), _126731_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_126731_lexpr.get()._field_ident)}));
			_1ad3814c0_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1ad35a301_stop(&(*_self_));
			return;
		}
		jule::Ptr<_1ad39e037_Var> _128621_v = jule::new_ptr<_1ad39e037_Var>(_1ad39e037_Var((*_self_)._field_scope,_126731_lexpr.get()._field_token,_126731_lexpr.get()._field_ident,jule::Bool(),jule::Bool(),_126731_lexpr.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_126731_lexpr.get()._field_reference,jule::Ptr<_1ad42e293_TypeSymbol>(),jule::new_ptr<_1ad3e7c84_Value>(_1ad3e7c84_Value(_126713_a.get()._field_right,_126769_r)),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>(),jule::Ptr<_1ad39cc28_IterRelation>(),jule::Slice<jule::Ptr<_1ad39e037_Var>>()));
		_1ad395160_check_var((*_self_)._field_s, _128621_v);
		_126657_st.get()._field_l = jule::alloc_for_append(_126657_st.get()._field_l,1);_126657_st.get()._field_l.__push(jule::Any(_128621_v));
		(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_128621_v);
		(*_self_)._field_scope.get()._field_stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_stmts,1);(*_self_)._field_scope.get()._field_stmts.__push(jule::Any(_128621_v));
		return;
	}
	if (_126731_lexpr.get()._field_mutable || _126731_lexpr.get()._field_reference) {
		_1ad3810c4_push_err((*_self_)._field_s.ptr(), _126731_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_126731_lexpr.get()._field_ident)}));
		_1ad3814c0_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((!(_1ad31bbdb_check_assign((*_self_)._field_s,_126755_l,_126769_r,_126713_a.get()._field_setter)))) {
		return;
	}
	
	_1ad389aa0_check_validity_for_init_expr((*_self_)._field_s, _126755_l.get()._field_mutable,false,_126755_l.get()._field_kind,_126769_r,_126713_a.get()._field_setter);
	_1ad3d019a_AssignTypeChecker _132117_checker = _1ad3d019a_AssignTypeChecker((*_self_)._field_s,_126755_l.get()._field_kind,_126769_r,_126713_a.get()._field_setter);
	_1ad3d161e_check(&_132117_checker);
	_126657_st.get()._field_l = jule::alloc_for_append(_126657_st.get()._field_l,1);_126657_st.get()._field_l.__push(_126755_l.get()._field_model);
}



inline void _1ad3649ae_check_ret_multi_assign(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab01d3e5_AssignSt>& _133247_a) {
	jule::Ptr<_1ad3e6975_Data> _133317_rd = _1ad418c83_eval_expr(_1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0)), _133247_a.get()._field_right);
	if ((_133317_rd == nullptr)) {
		return;
	}
	jule::Slice<jule::Ptr<_1ad3e6975_Data>> _133817_r = _1ad316499_get_datas_from_tuple_data(_133317_rd);
	{
		
		if (_133247_a.get()._field_left.len() > static_cast<jule::I64>(static_cast<jule::I64>(_133817_r.len()))) {
			_case_begin_1b0537c18:;
			{
				_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _133247_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_133247_a.get()._field_left.len() < static_cast<jule::I64>(static_cast<jule::I64>(_133817_r.len()))) {
			_case_begin_1b0537c90:;
			{
				_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _133247_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1b0537bb3:;
	}
	jule::Ptr<_1ad35750c_MultiAssign> _135017_st = jule::new_ptr<_1ad35750c_MultiAssign>(_1ad35750c_MultiAssign(jule::Slice<jule::Any>(),_133317_rd.get()._field_model));
	if ((_1ad42dd42_tup(_133317_rd.get()._field_kind.ptr()) == nullptr)) {
		_135017_st.get()._field_r=jule::Any(jule::new_ptr<_1ac66d912_TupleExprModel>(_1ac66d912_TupleExprModel(_133817_r)));
	}
	{
		auto &expr = _133247_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1ad77461b:;
		if (it != expr.end()) {
			jule::I64 _1ad774660_i = it - expr.begin();
			{
				jule::Ptr<_1ab01d1c5_AssignLeft> _135921_lexpr = _133247_a.get()._field_left[_1ad774660_i];
				jule::Ptr<_1ad3e6975_Data> _136021_l = nullptr;
				if ((!(_1ab008314_is_ignore_ident(_135921_lexpr.get()._field_ident))) && ((!(_133247_a.get()._field_declarative)) || (!(_1ad363617_is_new_assign_ident(_self_.ptr(), _135921_lexpr.get()._field_ident))))) {
					_136021_l=_1ad418c83_eval_expr(_1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0)), _135921_lexpr.get()._field_expr);
					if ((_136021_l == nullptr)) {
						goto _iter_next_1ad77461b;
					}
				}
				_1ad3646c3___process_end_part_of_multi_assign(_self_.ptr(), _135017_st,_133247_a,_135921_lexpr,_136021_l,_133817_r[_1ad774660_i]);
			}
			_iter_next_1ad77461b:;
			++it;
			_1ad774660_i++;
			goto _iter_begin_1ad77461b;
		}
		_iter_end_1ad77461b:;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_135017_st));
}



inline void _1ad364ccd_check_multi_assign(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab01d3e5_AssignSt>& _137643_a) {
	{
		auto &_match_expr{ _137643_a.get()._field_right.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ab01b3d2_FnCallExpr>>()) {
			_case_begin_1ad779764:;
			{
				_1ad3649ae_check_ret_multi_assign(_self_, _137643_a);
				return;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aadb5d4d_UnsafeExpr>>()) {
			_case_begin_1ad7797ca:;
			{
				{
					auto &_match_expr{ _137643_a.get()._field_right.get()._field_kind.operator jule::Ptr<_1aadb5d4d_UnsafeExpr>().get()._field_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1ab01b3d2_FnCallExpr>>()) {
						_case_begin_1ad77ade7:;
						{
							_1ad3649ae_check_ret_multi_assign(_self_, _137643_a);
							return;
						}
					}
					_match_end_1ad77ad92:;
				}
			}
		}
		_match_end_1ad779665:;
	}
	jule::Slice<jule::Any> _138917_right = _1ad319ec5_get_expr_models(_137643_a.get()._field_right.get()._field_kind);
	{
		
		if (_137643_a.get()._field_left.len() > static_cast<jule::I64>(static_cast<jule::I64>(_138917_right.len()))) {
			_case_begin_1ad77bcb6:;
			{
				_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _137643_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_137643_a.get()._field_left.len() < static_cast<jule::I64>(static_cast<jule::I64>(_138917_right.len()))) {
			_case_begin_1ad77bd2c:;
			{
				_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _137643_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1ad77bbd9:;
	}
	jule::Ptr<_1ac66d912_TupleExprModel> _140017_right_tuple = jule::new_ptr<_1ac66d912_TupleExprModel>(_1ac66d912_TupleExprModel());
	jule::Ptr<_1ad35750c_MultiAssign> _140217_st = jule::new_ptr<_1ad35750c_MultiAssign>(_1ad35750c_MultiAssign(jule::Slice<jule::Any>(),jule::Any(jule::Any(_140017_right_tuple))));
	{
		auto &expr = _137643_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1ad7801a4:;
		if (it != expr.end()) {
			jule::I64 _1ad7802c5_i = it - expr.begin();
			{
				jule::Ptr<_1ab01d1c5_AssignLeft> _140721_lexpr = _137643_a.get()._field_left[_1ad7802c5_i];
				jule::Ptr<_1ad3e6975_Data> _140821_l = nullptr;
				if ((!(_1ab008314_is_ignore_ident(_140721_lexpr.get()._field_ident))) && ((!(_137643_a.get()._field_declarative)) || (!(_1ad363617_is_new_assign_ident(_self_.ptr(), _140721_lexpr.get()._field_ident))))) {
					_140821_l=_1ad418c83_eval_expr(_1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0)), _140721_lexpr.get()._field_expr);
					if ((_140821_l == nullptr)) {
						goto _iter_next_1ad7801a4;
					}
				}
				jule::Ptr<_1aadb528c_Expr> _141821_expr = jule::new_ptr<_1aadb528c_Expr>(_1aadb528c_Expr(_137643_a.get()._field_right.get()._field_token,_1ab005531_Token(),jule::Bool(),_138917_right[_1ad7802c5_i]));
				jule::Ptr<_1ad3e89cc_Eval> _142221_eval = nullptr;
				if ((_140821_l != nullptr)) {
					_142221_eval=_1ad386b24_evalp(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0),_140821_l.get()._field_kind);
				} else {
					_142221_eval=_1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0));
				}
				jule::Ptr<_1ad3e6975_Data> _142821_r = _1ad418c83_eval_expr(_142221_eval, _141821_expr);
				if ((_142821_r == nullptr)) {
					goto _iter_next_1ad7801a4;
				}
				_140017_right_tuple.get()._field_datas = jule::alloc_for_append(_140017_right_tuple.get()._field_datas,1);_140017_right_tuple.get()._field_datas.__push(_142821_r);
				_1ad3646c3___process_end_part_of_multi_assign(_self_.ptr(), _140217_st,_137643_a,_140721_lexpr,_140821_l,_142821_r);
			}
			_iter_next_1ad7801a4:;
			++it;
			_1ad7802c5_i++;
			goto _iter_begin_1ad7801a4;
		}
		_iter_end_1ad7801a4:;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_140217_st));
}



inline void _1ad3650ec_check_assign_st(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab01d3e5_AssignSt> _144139_a) {
	{
		
		if (_1ab00a7cd_is_postfix_op(_144139_a.get()._field_setter._field_kind)) {
			_case_begin_1ae8ea054:;
			{
				_1ad363260_check_postfix(_self_, _144139_a);
			}
		}
		else if ((_144139_a.get()._field_left.len() == 1LL) && (!(_144139_a.get()._field_declarative))) {
			_case_begin_1ae8e9ad1:;
			{
				_1ad363eca_check_single_assign(_self_, _144139_a);
			}
		}
		else {
			_case_begin_1ae8e975c:;
			{
				_1ad364ccd_check_multi_assign(_self_, _144139_a);
			}
		}
		_match_end_1ae8e96b3:;
	}
}



inline jule::Ptr<_1ad33ce0a_Scope> _1ad365581_check_case_scope(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ad357b7d_Case>& _145237_c,jule::Ptr<_1ab01d615_ScopeTree>& _145252_tree) {
	jule::Ptr<_1ad35872d_ScopeChecker> _145317_ssc = _1ad36aa2b_new_child_checker(_self_);
	_145317_ssc.get()._field_cse=static_cast<jule::U64>(static_cast<jule::U64>(_145237_c));
	return _1ad35d37b_check_child_sc(_self_, _145252_tree,_145317_ssc);
}



inline jule::Ptr<_1ad357b7d_Case> _1ad365bbe_check_case(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ad35772c_Match> _145834_m,jule::I64 _145845_i,jule::Ptr<_1ab022a37_Case> _145857_c,jule::Ptr<_1ad3e6975_Data> _145887_expr) {
	jule::Ptr<_1ad357b7d_Case> _145917__case = _145834_m.get()._field_cases[_145845_i];
	_145917__case.get()._field_exprs=jule::Slice<jule::Ptr<_1ad3e6975_Data>>::alloc(0LL,static_cast<jule::I64>(_145857_c.get()._field_exprs.len()));
	jule::Bool _146117_generic_matched = false;
	jule::Ptr<_1ad3e89cc_Eval> _146217_eval = _1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0));
	{
		auto &expr = _145857_c.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ae901bb5:;
		if (it != expr.end()) {
			jule::Ptr<_1aadb528c_Expr> _1ae901cc5_e = *it;
			{
				jule::Ptr<_1ad3e6975_Data> _146421_d = _1ad418524_eval_expr_kind(_146217_eval, _1ae901cc5_e.get()._field_kind);
				if ((_146421_d == nullptr)) {
					goto _iter_next_1ae901bb5;
				}
				if (_145834_m.get()._field_type_match) {
					_145917__case.get()._field_exprs = jule::alloc_for_append(_145917__case.get()._field_exprs,1);_145917__case.get()._field_exprs.__push(_146421_d);
					if ((_1ad33d845_count_match_type(_145834_m,_146421_d.get()._field_kind) > 1LL)) {
						_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _1ae901cc5_e.get()._field_token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_146421_d.get()._field_kind.ptr()))}));
					}
					if (_145887_expr.get()._field_kind.get()._field_generic) {
						_146117_generic_matched=_146117_generic_matched || _1ad42a206_equals(_145887_expr.get()._field_kind, _146421_d.get()._field_kind);
					} else {
						jule::Ptr<_1ac85d096_Trait> _147625_trt = _1ad42d78c_trt(_145887_expr.get()._field_kind.ptr());
						if ((_147625_trt != nullptr)) {
							_1ad387bbe_check_type_compatibility(_self_.get()._field_s, _145887_expr.get()._field_kind,_146421_d.get()._field_kind,_1ae901cc5_e.get()._field_token);
						}
					}
					goto _iter_next_1ae901bb5;
				}
				if (_146421_d.get()._field_decl) {
					_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _1ae901cc5_e.get()._field_token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1ad3814c0_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1ae901bb5;
				}
				_145917__case.get()._field_exprs = jule::alloc_for_append(_145917__case.get()._field_exprs,1);_145917__case.get()._field_exprs.__push(_146421_d);
				_1ad3d019a_AssignTypeChecker _149321_checker = _1ad3d019a_AssignTypeChecker(_self_.get()._field_s,_145887_expr.get()._field_kind,_146421_d,_1ae901cc5_e.get()._field_token);
				_1ad3d161e_check(&_149321_checker);
			}
			_iter_next_1ae901bb5:;
			++it;
			goto _iter_begin_1ae901bb5;
		}
		_iter_end_1ae901bb5:;
	}
	if (((!(_145834_m.get()._field_type_match)) || (!(_145887_expr.get()._field_kind.get()._field_generic))) || _146117_generic_matched) {
		_145917__case.get()._field_scope=_1ad365581_check_case_scope(_self_, _145917__case,_145857_c.get()._field_scope);
	}
	return _145917__case;
}



inline void _1ad366197_check_cases(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab023131_MatchCase>& _150736_m,jule::Ptr<_1ad35772c_Match> _150755_rm,jule::Ptr<_1ad3e6975_Data> _150771_expr) {
	_150755_rm.get()._field_cases=jule::Slice<jule::Ptr<_1ad357b7d_Case>>::alloc(0LL,static_cast<jule::I64>(_150736_m.get()._field_cases.len()));
	{
		auto &expr = _150736_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ae90bc58:;
		if (it != expr.end()) {
			jule::I64 _1ae90d3db_i = it - expr.begin();
			{
				jule::Ptr<_1ad357b7d_Case> _151021__case = jule::new_ptr<_1ad357b7d_Case>(_1ad357b7d_Case(_150755_rm,jule::Ptr<_1ad33ce0a_Scope>(),jule::Slice<jule::Ptr<_1ad3e6975_Data>>(),jule::Ptr<_1ad357b7d_Case>()));
				if ((_1ae90d3db_i > 0LL)) {
					_150755_rm.get()._field_cases[(_1ae90d3db_i - 1LL)].get()._field_next=_151021__case;
				}
				_150755_rm.get()._field_cases = jule::alloc_for_append(_150755_rm.get()._field_cases,1);_150755_rm.get()._field_cases.__push(_151021__case);
			}
			_iter_next_1ae90bc58:;
			++it;
			_1ae90d3db_i++;
			goto _iter_begin_1ae90bc58;
		}
		_iter_end_1ae90bc58:;
	}
	if ((_150755_rm.get()._field_default != nullptr) && (_150736_m.get()._field_cases.len() > 0LL)) {
		_150755_rm.get()._field_cases[(_150755_rm.get()._field_cases.len() - 1LL)].get()._field_next=_150755_rm.get()._field_default;
	}
	{
		auto &expr = _150736_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ae911257:;
		if (it != expr.end()) {
			jule::I64 _1ae9115dc_i = it - expr.begin();
			jule::Ptr<_1ab022a37_Case> _1ae911774_c = *it;
			{
				_1ad365bbe_check_case(_self_, _150755_rm,_1ae9115dc_i,_1ae911774_c,_150771_expr);
			}
			_iter_next_1ae911257:;
			++it;
			_1ae9115dc_i++;
			goto _iter_begin_1ae911257;
		}
		_iter_end_1ae911257:;
	}
}



inline jule::Ptr<_1ad357b7d_Case> _1ad36662b_check_default(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ad35772c_Match> _152837_m,jule::Ptr<_1ab021b24_Else> _152852_d) {
	jule::Ptr<_1ad357b7d_Case> _152917_def = jule::new_ptr<_1ad357b7d_Case>(_1ad357b7d_Case(_152837_m,jule::Ptr<_1ad33ce0a_Scope>(),jule::Slice<jule::Ptr<_1ad3e6975_Data>>(),jule::Ptr<_1ad357b7d_Case>()));
	_152917_def.get()._field_scope=_1ad365581_check_case_scope(_self_, _152917_def,_152852_d.get()._field_scope);
	return _152917_def;
}



inline void _1ad36694a_check_comptime_panic(_1ad35872d_ScopeChecker* _self_,jule::Ptr<_1ad33ce0a_Scope>& _153640_s) {
	if ((_153640_s.get()._field_stmts.len() != 1LL)) {
		return;
	}
	jule::Any _154113_stmt = _153640_s.get()._field_stmts[0LL];
	{
		auto &_match_expr{ _154113_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1ad3e6975_Data>>()) {
			_case_begin_1ae915635:;
			{
				jule::Ptr<_1ad3e6975_Data> _154417_d = _154113_stmt.operator jule::Ptr<_1ad3e6975_Data>();
				{
					auto &_match_expr{ _154417_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ac67020a_BuiltinPanicCallExprModel>>()) {
						_case_begin_1ae9164b0:;
						{
							jule::Ptr<_1ac67020a_BuiltinPanicCallExprModel> _154721_m = _154417_d.get()._field_model.operator jule::Ptr<_1ac67020a_BuiltinPanicCallExprModel>();
							{
								auto &_match_expr{ _154721_m.get()._field_expr };
								
								if (_match_expr.type_is<jule::Ptr<_1ad2c1d8e_Const>>()) {
									_case_begin_1ae91744a:;
									{
										jule::Ptr<_1ad2c1d8e_Const> _155025_c = _154721_m.get()._field_expr.operator jule::Ptr<_1ad2c1d8e_Const>();
										if (_1ad2c657a_is_str(_155025_c.ptr())) {
											_1ad3810c4_push_err((*_self_)._field_s.ptr(), (*((*_self_)._field_called_from)),jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>({jule::Any(_1ad2c39c8_read_str(_155025_c.ptr()))}));
										}
									}
								}
								_match_end_1ae9173e5:;
							}
						}
					}
					_match_end_1ae91645a:;
				}
			}
		}
		_match_end_1ae9155d0:;
	}
}



inline void _1ad366d46_push_type_match(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ad35772c_Match> _155939_tm,jule::Ptr<_1ab023131_MatchCase>& _155956_m) {
	if (_155939_tm.get()._field_expr.get()._field_kind.get()._field_generic) {
		{
			auto &expr = _155939_tm.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1ae919cdd:;
			if (it != expr.end()) {
				jule::Ptr<_1ad357b7d_Case> _1ae919da9_c = *it;
				{
					if ((_1ae919da9_c.get()._field_scope != nullptr)) {
						_1ad36694a_check_comptime_panic(_self_.ptr(), _1ae919da9_c.get()._field_scope);
						_155939_tm.get()._field_default=_1ae919da9_c;
						_155939_tm.get()._field_cases=nullptr;
						goto _julec_label_push;
					}
				}
				_iter_next_1ae919cdd:;
				++it;
				goto _iter_begin_1ae919cdd;
			}
			_iter_end_1ae919cdd:;
		}
		if ((_155956_m.get()._field_default != nullptr)) {
			_155939_tm.get()._field_cases=nullptr;
			_155939_tm.get()._field_default=_1ad36662b_check_default(_self_, _155939_tm,_155956_m.get()._field_default);
			if ((_155939_tm.get()._field_default != nullptr)) {
				_1ad36694a_check_comptime_panic(_self_.ptr(), _155939_tm.get()._field_default.get()._field_scope);
			}
		}
		return;
	}
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_155939_tm));
}



inline void _1ad367165_check_type_match(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab023131_MatchCase>& _158441_m) {
	jule::Ptr<_1ad3e6975_Data> _158517_d = _1ad4188cb_eval(_1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0)), _158441_m.get()._field_expr);
	if ((_158517_d == nullptr)) {
		return;
	}
	if ((!(_158517_d.get()._field_kind.get()._field_generic)) && (!(((_1ad42bec7_prim(_158517_d.get()._field_kind.ptr()) != nullptr) && _1ad4337a3_is_any(_1ad42bec7_prim(_158517_d.get()._field_kind.ptr()).ptr())) || (_1ad42d78c_trt(_158517_d.get()._field_kind.ptr()) != nullptr)))) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _158441_m.get()._field_expr.get()._field_token,jule::Str("type-match must be have <any>, <trait> or <generic> typed expression", 68),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1ad35772c_Match> _159617_tm = jule::new_ptr<_1ad35772c_Match>(_1ad35772c_Match(_158517_d,true,jule::Slice<jule::Ptr<_1ad357b7d_Case>>(),jule::Ptr<_1ad357b7d_Case>()));
	if ((!(_159617_tm.get()._field_expr.get()._field_kind.get()._field_generic)) && (_158441_m.get()._field_default != nullptr)) {
		_159617_tm.get()._field_default=_1ad36662b_check_default(_self_, _159617_tm,_158441_m.get()._field_default);
	}
	_1ad366197_check_cases(_self_, _158441_m,_159617_tm,_158517_d);
	_1ad366d46_push_type_match(_self_, _159617_tm,_158441_m);
}



inline void _1ad367484_check_common_match(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab023131_MatchCase>& _160943_m) {
	jule::Ptr<_1ad3e6975_Data> _161017_d = nullptr;
	if ((_160943_m.get()._field_expr == nullptr)) {
		_161017_d=jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__1ad2c2411_new_bool(true)));
		_161017_d.get()._field_model=jule::Any(_161017_d.get()._field_constant);
	} else {
		_161017_d=_1ad418c83_eval_expr(_1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0)), _160943_m.get()._field_expr);
		if ((_161017_d == nullptr)) {
			return;
		}
	}
	jule::Ptr<_1ad35772c_Match> _162417_mc = jule::new_ptr<_1ad35772c_Match>(_1ad35772c_Match(_161017_d,jule::Bool(),jule::Slice<jule::Ptr<_1ad357b7d_Case>>(),jule::Ptr<_1ad357b7d_Case>()));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_162417_mc));
	if ((_160943_m.get()._field_default != nullptr)) {
		_162417_mc.get()._field_default=_1ad36662b_check_default(_self_, _162417_mc,_160943_m.get()._field_default);
	}
	_1ad366197_check_cases(_self_, _160943_m,_162417_mc,_161017_d);
}



inline void _1ad3677a3_check_match(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab023131_MatchCase> _163635_m) {
	if (_163635_m.get()._field_type_match) {
		_1ad367165_check_type_match(_self_, _163635_m);
		return;
	}
	_1ad367484_check_common_match(_self_, _163635_m);
}



inline void _1ad367ac2_check_fall(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab01cea5_FallSt> _164430_f) {
	if (((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_stmts.len() + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_scope.get()._field_stmts.len())))) || _1ad35a8a6_is_deferred(_self_)) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _164430_f.get()._field_token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;
	}
	_1ad357b7d_Case* _165217__case = ((_1ad357b7d_Case*)(_self_.get()._field_cse));
	if ((_165217__case->_field_next == nullptr)) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _164430_f.get()._field_token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1ad3814c0_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1ad357d9d_FallSt>(_1ad357d9d_FallSt(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_165217__case->_field_next)))))))));
}



inline jule::Ptr<_1ad35695c_BreakSt> _1ad367e79_check_break_with_label(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab021041_BreakSt> _166442_b) {
	jule::Ptr<_1ad35695c_BreakSt> _166517_brk = _1ad368331_check_plain_break(_self_, _166442_b);
	if ((_166517_brk == nullptr)) {
		return nullptr;
	}
	_166517_brk.get()._field_it=0LLU;
	_166517_brk.get()._field_mtch=0LLU;
	jule::Ptr<_1ad3582dd_ScopeLabel> _167517_label = _1ad2e8613_find_label_parent(_166442_b.get()._field_label._field_kind,_self_.get()._field_parent);
	if ((_167517_label == nullptr)) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _166442_b.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_166442_b.get()._field_label._field_kind)}));
		return nullptr;
	}
	_167517_label.get()._field_used=true;
	if ((_167517_label.get()._field_pos + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_167517_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _166442_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166442_b.get()._field_label._field_kind)}));
		return nullptr;
	}
	jule::I64 _168813_i = (_167517_label.get()._field_pos + 1LL);
	if (_168813_i >= static_cast<jule::I64>(static_cast<jule::I64>(_167517_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _166442_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166442_b.get()._field_label._field_kind)}));
	} else {
		jule::Any _169221_st = _167517_label.get()._field_scope.get()._field_scope.get()._field_stmts[_168813_i];
		{
			auto &_match_expr{ _169221_st };
			
			if (_match_expr.type_is<jule::Ptr<_1ad3560cc_InfIter>>()) {
				_case_begin_1ae93c519:;
				{
					_166517_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_169221_st.operator jule::Ptr<_1ad3560cc_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ad35651c_RangeIter>>()) {
				_case_begin_1ae93c580:;
				{
					_166517_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_169221_st.operator jule::Ptr<_1ad35651c_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ad3562ec_WhileIter>>()) {
				_case_begin_1ae93c5e6:;
				{
					_166517_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_169221_st.operator jule::Ptr<_1ad3562ec_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ad35772c_Match>>()) {
				_case_begin_1ae93c65c:;
				{
					_166517_brk.get()._field_mtch=static_cast<jule::U64>(static_cast<jule::U64>(_169221_st.operator jule::Ptr<_1ad35772c_Match>()));
				}
			}
			else {
				_case_begin_1ae93c42b:;
				{
					_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _166442_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166442_b.get()._field_label._field_kind)}));
				}
			}
			_match_end_1ae93c3c6:;
		}
	}
	if ((_166517_brk.get()._field_it != 0LLU)) {
		if ((!(_1ad36213d_check_valid_break_label(_self_, _166517_brk.get()._field_it)))) {
			_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _166442_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166442_b.get()._field_label._field_kind)}));
		}
	}
	if ((_166517_brk.get()._field_mtch != 0LLU)) {
		if ((!(_1ad36213d_check_valid_break_label(_self_, _166517_brk.get()._field_mtch)))) {
			_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _166442_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166442_b.get()._field_label._field_kind)}));
		}
	}
	return _166517_brk;
}



inline jule::Ptr<_1ad35695c_BreakSt> _1ad368331_check_plain_break(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab021041_BreakSt> _171737_b) {
	if (_1ad35a8a6_is_deferred(_self_)) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _171737_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ad35872d_ScopeChecker> _172317_scope = _self_;
	_julec_label_iter:;
	{
		
		if ((((_172317_scope.get()._field_it == 0LLU) && (_172317_scope.get()._field_cse == 0LLU)) && (_172317_scope.get()._field_parent != nullptr)) && (_172317_scope.get()._field_owner == nullptr)) {
			_case_begin_1ae944ec2:;
			{
				_172317_scope=_172317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_172317_scope.get()._field_it != 0LLU)) {
			_case_begin_1ae945049:;
			{
				return jule::new_ptr<_1ad35695c_BreakSt>(_1ad35695c_BreakSt(_172317_scope.get()._field_it,jule::U64()));
			}
		}
		else if ((_172317_scope.get()._field_cse != 0LLU)) {
			_case_begin_1ae9450c1:;
			{
				return jule::new_ptr<_1ad35695c_BreakSt>(_1ad35695c_BreakSt(jule::U64(),static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(((_1ad357b7d_Case*)(_172317_scope.get()._field_cse))->_field_owner)))))));
			}
		}
		_match_end_1ae944e06:;
	}
	_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _171737_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1ad368650_check_break(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab021041_BreakSt> _174131_b) {
	if (_174131_b.get()._field_label._field_id != static_cast<jule::U64>(0LLU)) {
		jule::Ptr<_1ad35695c_BreakSt> _174321_brk = _1ad367e79_check_break_with_label(_self_, _174131_b);
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_174321_brk));
		return;
	}
	jule::Ptr<_1ad35695c_BreakSt> _174817_brk = _1ad368331_check_plain_break(_self_, _174131_b);
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_174817_brk));
}



inline void _1ad36896e_check_ret(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab01ea45_RetSt> _175233_r) {
	if (_1ad35a8a6_is_deferred(_self_)) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _175233_r.get()._field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3580bd_RetSt> _175717_rt = jule::new_ptr<_1ad3580bd_RetSt>(_1ad3580bd_RetSt(_1ad35ab81_get_root(_self_).get()._field_owner,jule::Slice<jule::Ptr<_1ad39e037_Var>>(),jule::Any()));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_175717_rt));
	jule::Ptr<_1ad3dd3b7_RetTypeChecker> _176217_rtc = jule::new_ptr<_1ad3dd3b7_RetTypeChecker>(_1ad3dd3b7_RetTypeChecker(_self_,_175717_rt.get()._field_func,jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1aadb528c_Expr>>(),jule::Slice<jule::Ptr<_1ad39e037_Var>>(),_175233_r.get()._field_token,jule::Any()));
	jule::Bool _176713_ok = _1ad3de4b7_check(_176217_rtc.ptr(), _175233_r.get()._field_expr);
	if ((!(_176713_ok))) {
		return;
	}
	if ((_175233_r.get()._field_expr == nullptr) && (_176217_rtc.get()._field_vars.len() == 0LL)) {
		return;
	}
	_175717_rt.get()._field_vars=_176217_rtc.get()._field_vars;
	if ((_175233_r.get()._field_expr != nullptr)) {
		_175717_rt.get()._field_expr=_176217_rtc.get()._field_model;
	}
}



inline void _1ad368c8d_check_use_expr(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1aadb54ac_UseExpr> _178334_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _178334_ue.get()._field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;
	}
	if (_1ad35a8a6_is_deferred(_self_)) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _178334_ue.get()._field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	}
	if ((_self_.get()._field_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_tree.get()._field_stmts.len()))) {
		_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _178334_ue.get()._field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	}
}



inline void _1ad3690ac_check_node(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Any& _180035_node) {
	{
		auto &_match_expr{ _180035_node };
		
		if (_match_expr.type_is<jule::Ptr<_1ab01d615_ScopeTree>>()) {
			_case_begin_1ae957303:;
			{
				_1ad35da52_check_anon_scope(_self_, _180035_node.operator jule::Ptr<_1ab01d615_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01e6d2_VarDecl>>()) {
			_case_begin_1ae957479:;
			{
				_1ad35c325_check_var_decl(_self_, _180035_node.operator jule::Ptr<_1ab01e6d2_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab02262a_TypeAliasDecl>>()) {
			_case_begin_1ae957666:;
			{
				_1ad35c644_check_type_alias_decl(_self_, _180035_node.operator jule::Ptr<_1ab02262a_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aadb528c_Expr>>()) {
			_case_begin_1ae956dd5:;
			{
				_1ad35e26c_check_expr(_self_, _180035_node.operator jule::Ptr<_1aadb528c_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aadb606d_CoExpr>>()) {
			_case_begin_1ae957534:;
			{
				_1ad35e58b_check_co_expr(_self_, _180035_node.operator jule::Ptr<_1aadb606d_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab022031_Conditional>>()) {
			_case_begin_1ae9577dc:;
			{
				_1ad360119_check_conditional(_self_, _180035_node.operator jule::Ptr<_1ab022031_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab020040_Iter>>()) {
			_case_begin_1ae957853:;
			{
				_1ad36188a_check_iter(_self_, _180035_node.operator jule::Ptr<_1ab020040_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab0213a4_ContSt>>()) {
			_case_begin_1ae9578b9:;
			{
				_1ad362803_check_cont(_self_, _180035_node.operator jule::Ptr<_1ab0213a4_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01ca65_LabelSt>>()) {
			_case_begin_1ae957930:;
			{
				_1ad362b22_check_label(_self_, _180035_node.operator jule::Ptr<_1ab01ca65_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01cc85_GotoSt>>()) {
			_case_begin_1ae957996:;
			{
				_1ad362e41_push_goto(_self_, _180035_node.operator jule::Ptr<_1ab01cc85_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01d3e5_AssignSt>>()) {
			_case_begin_1ae957a0c:;
			{
				_1ad3650ec_check_assign_st(_self_, _180035_node.operator jule::Ptr<_1ab01d3e5_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab023131_MatchCase>>()) {
			_case_begin_1ae957a73:;
			{
				_1ad3677a3_check_match(_self_, _180035_node.operator jule::Ptr<_1ab023131_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01cea5_FallSt>>()) {
			_case_begin_1ae957ad9:;
			{
				_1ad367ac2_check_fall(_self_, _180035_node.operator jule::Ptr<_1ab01cea5_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab021041_BreakSt>>()) {
			_case_begin_1ae957b50:;
			{
				_1ad368650_check_break(_self_, _180035_node.operator jule::Ptr<_1ab021041_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01ea45_RetSt>>()) {
			_case_begin_1ae957bb6:;
			{
				_1ad36896e_check_ret(_self_, _180035_node.operator jule::Ptr<_1ab01ea45_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aadb54ac_UseExpr>>()) {
			_case_begin_1ae957c2c:;
			{
				_1ad368c8d_check_use_expr(_self_, _180035_node.operator jule::Ptr<_1aadb54ac_UseExpr>());
			}
		}
		else {
			_case_begin_1ae95706c:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1ae956e90:;
	}
}



inline void _1ad3692ee_check_result(jule::Ptr<_1ad35872d_ScopeChecker> _self_) {
	_1aae02ad2_Node _184017_stmt = _self_.get()._field_tree.get()._field_stmts[(_self_.get()._field_tree.get()._field_stmts.len() - 1LL)];
	{
		auto &_match_expr{ _184017_stmt._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1aadb54ac_UseExpr>>()) {
			_case_begin_1ae964288:;
			{
				jule::Ptr<_1aadb54ac_UseExpr> _184321_ue = _184017_stmt._field_data.operator jule::Ptr<_1aadb54ac_UseExpr>();
				jule::Ptr<_1ad3e6975_Data> _184421_d = _1ad418c83_eval_expr(_1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0)), _184321_ue.get()._field_expr);
				if ((_184421_d == nullptr)) {
					return;
				}
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_184421_d));
				jule::Ptr<_1ad3dd3b7_RetTypeChecker> _184921_rtc = jule::new_ptr<_1ad3dd3b7_RetTypeChecker>(_1ad3dd3b7_RetTypeChecker(_self_,jule::Ptr<_1ac67a501_FnIns>(),_1ad3a9350_get_result_types(_self_.get()._field_result),jule::Slice<jule::Ptr<_1aadb528c_Expr>>(),jule::Slice<jule::Ptr<_1ad39e037_Var>>(),_184321_ue.get()._field_expr.get()._field_token,jule::Any()));
				_1ad3de4b7_check(_184921_rtc.ptr(), _184321_ue.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aadb528c_Expr>>()) {
			_case_begin_1ae9642ee:;
			{
				jule::Ptr<_1aadb528c_Expr> _185621_expr = _184017_stmt._field_data.operator jule::Ptr<_1aadb528c_Expr>();
				jule::Ptr<_1ad3e6975_Data> _185721_d = _1ad418c83_eval_expr(_1ad386ecb_eval(_self_.get()._field_s, jule::Trait<_1ad447256_Lookup>(_self_, 0)), _185621_expr);
				if ((_185721_d == nullptr)) {
					return;
				}
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_185721_d));
				{
					auto &_match_expr{ _185721_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ac671816_BuiltinErrorCallExprModel>>()) {
						_case_begin_1ae969018:;
						{
							jule::Ptr<_1ac671816_BuiltinErrorCallExprModel> _186425_m = _185721_d.get()._field_model.operator jule::Ptr<_1ac671816_BuiltinErrorCallExprModel>();
							_1ad35de4d_process_error_call(_self_, _186425_m,_185621_expr.get()._field_token);
						}
					}
					else {
						_case_begin_1ae969447:;
						{
							return;
						}
					}
					_match_end_1ae9693e2:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01cc85_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1ab021041_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1ab0213a4_ContSt>>() || _match_expr.type_is<jule::Ptr<_1ab01ea45_RetSt>>()) {
			_case_begin_1ae9637e8:;
			{
				_1ad3690ac_check_node(_self_, _184017_stmt._field_data);
			}
		}
		else {
			_case_begin_1ae963782:;
			{
				_1ad3690ac_check_node(_self_, _184017_stmt._field_data);
				return;
			}
		}
		_match_end_1ae96370a:;
	}
	_self_.get()._field_result=nullptr;
}



inline void _1ad369541_check_tree(jule::Ptr<_1ad35872d_ScopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	for (; _self_.get()._field_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_tree.get()._field_stmts.len())); (_self_.get()._field_i)++) {
		{
			_1aae02ad2_Node _188621_stmt = _self_.get()._field_tree.get()._field_stmts[_self_.get()._field_i];
			_1ad3690ac_check_node(_self_, _188621_stmt._field_data);
			if (_1ad35a5cb_stopped(_self_.ptr())) {
				return;
			}
		}
	_iter_next_1ae96c0d7:;
	}
	_iter_end_1ae96c0d7:;
	if ((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_stmts.len() != 0LL)) {
		_1ad3692ee_check_result(_self_);
	}
}



inline void _1ad36993c_check_goto(_1ad35872d_ScopeChecker* _self_,jule::Ptr<_1ad35850d_ScopeGoto>& _189734_gt,jule::Ptr<_1ad3582dd_ScopeLabel>& _189755_label) {
	jule::Ptr<_1ad35872d_ScopeChecker> _189817_gtsc = _189734_gt.get()._field_scope;
	while ((_189817_gtsc.get()._field_child_index - 1LL) > _189755_label.get()._field_scope.get()._field_child_index) {
		{
			_189817_gtsc=_189817_gtsc.get()._field_parent;
		}
	_iter_next_1ae971174:;
	}
	_iter_end_1ae971174:;
	jule::I64 _190317_n = 0LL;
	if (_189817_gtsc.get()._field_scope == _189755_label.get()._field_scope.get()._field_scope) {
		if (_189734_gt.get()._field_pos > _189755_label.get()._field_pos) {
			return;
		}
		_190317_n=_189734_gt.get()._field_pos;
	}
	jule::I64 _191617_i = (_189755_label.get()._field_pos - 1LL);
	if ((_190317_n == 0LL)) {
		{
			auto &expr = _189755_label.get()._field_scope.get()._field_scope.get()._field_stmts;
			auto it = expr.begin();
			_iter_begin_1ae973d25:;
			if (it != expr.end()) {
				jule::I64 _1ae974045_j = it - expr.begin();
				jule::Any _1ae974287_stmt = *it;
				{
					if (_1ad315355_stmt_is_goto_scope(_1ae974287_stmt,_189817_gtsc.get()._field_scope)) {
						_190317_n=_1ae974045_j;
						goto _iter_end_1ae973d25;
					}
				}
				_iter_next_1ae973d25:;
				++it;
				_1ae974045_j++;
				goto _iter_begin_1ae973d25;
			}
			_iter_end_1ae973d25:;
		}
	}
	for (; _191617_i >= _190317_n; (_191617_i)--) {
		{
			jule::Any _192921_stmt = _189755_label.get()._field_scope.get()._field_scope.get()._field_stmts[_191617_i];
			if (_1ad3214d7_st_is_def(_192921_stmt)) {
				_1ad3810c4_push_err((*_self_)._field_s.ptr(), _189734_gt.get()._field_gt.get()._field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_189734_gt.get()._field_gt.get()._field_label._field_kind)}));
				return;
			}
		}
	_iter_next_1ae973a4a:;
	}
	_iter_end_1ae973a4a:;
}



inline void _1ad369b7e_check_gotos(_1ad35872d_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1ae977543:;
		if (it != expr.end()) {
			jule::Ptr<_1ad35850d_ScopeGoto> _1ae977587_gt = *it;
			{
				jule::Ptr<_1ad3582dd_ScopeLabel> _193921_label = _1ad35ba72_find_label_all(&(*_self_), _1ae977587_gt.get()._field_gt.get()._field_label._field_kind);
				if ((_193921_label == nullptr)) {
					_1ad3810c4_push_err((*_self_)._field_s.ptr(), _1ae977587_gt.get()._field_gt.get()._field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_1ae977587_gt.get()._field_gt.get()._field_label._field_kind)}));
					goto _iter_next_1ae977543;
				}
				_193921_label.get()._field_used=true;
				_1ad36993c_check_goto(&(*_self_), _1ae977587_gt,_193921_label);
			}
			_iter_next_1ae977543:;
			++it;
			goto _iter_begin_1ae977543;
		}
		_iter_end_1ae977543:;
	}
}



inline void _1ad369dc1_check_labels(_1ad35872d_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1ae97a6ab:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3582dd_ScopeLabel> _1ae97a755_l = *it;
			{
				if ((!(_1ae97a755_l.get()._field_used))) {
					_1ad3810c4_push_err((*_self_)._field_s.ptr(), _1ae97a755_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1ae97a755_l.get()._field_label.get()._field_ident)}));
				}
			}
			_iter_next_1ae97a6ab:;
			++it;
			goto _iter_begin_1ae97a6ab;
		}
		_iter_end_1ae97a6ab:;
	}
}



inline void _1ad36a113_check_vars(_1ad35872d_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1ae97c218:;
		if (it != expr.end()) {
			jule::Ptr<_1ad39e037_Var> _1ae97c449_v = *it;
			{
				if ((((!(_1ae97c449_v.get()._field_used)) && (!(_1ab008314_is_ignore_ident(_1ae97c449_v.get()._field_ident)))) && (!(_1ab008622_is_anon_ident(_1ae97c449_v.get()._field_ident)))) && (_1ae97c449_v.get()._field_ident != jule::Str("self", 4))) {
					_1ad3810c4_push_err((*_self_)._field_s.ptr(), _1ae97c449_v.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1ae97c449_v.get()._field_ident)}));
				}
			}
			_iter_next_1ae97c218:;
			++it;
			goto _iter_begin_1ae97c218;
		}
		_iter_end_1ae97c218:;
	}
}



inline void _1ad36a355_check_aliases(_1ad35872d_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1ae97ee52:;
		if (it != expr.end()) {
			jule::Ptr<_1ad428996_TypeAlias> _1ae97eec9_a = *it;
			{
				if (((!(_1ae97eec9_a.get()._field_used)) && (!(_1ab008314_is_ignore_ident(_1ae97eec9_a.get()._field_ident)))) && (!(_1ab008622_is_anon_ident(_1ae97eec9_a.get()._field_ident)))) {
					_1ad3810c4_push_err((*_self_)._field_s.ptr(), _1ae97eec9_a.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1ae97eec9_a.get()._field_ident)}));
				}
			}
			_iter_next_1ae97ee52:;
			++it;
			goto _iter_begin_1ae97ee52;
		}
		_iter_end_1ae97ee52:;
	}
}



inline void _1ad36a751_check(jule::Ptr<_1ad35872d_ScopeChecker> _self_,jule::Ptr<_1ab01d615_ScopeTree>& _197530_tree,jule::Ptr<_1ad33ce0a_Scope>& _197553_s) {
	_197553_s.get()._field_deferred=_197530_tree.get()._field_deferred;
	_197553_s.get()._field_unsafety=_197530_tree.get()._field_unsafety;
	jule::I64 _197913_errors = _self_.get()._field_s.get()._field_errors.len();
	_self_.get()._field_tree=_197530_tree;
	_self_.get()._field_scope=_197553_s;
	_1ad369541_check_tree(_self_);
	if (_197913_errors == static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_s.get()._field_errors.len()))) {
		_1ad36a113_check_vars(_self_.ptr());
		_1ad36a355_check_aliases(_self_.ptr());
		if (_1ad35a0ae_is_root(_self_.ptr())) {
			_1ad369b7e_check_gotos(_self_.ptr());
			_1ad369dc1_check_labels(_self_.ptr());
		}
	}
}



inline jule::Ptr<_1ad35872d_ScopeChecker> _1ad36aa2b_new_child_checker(jule::Ptr<_1ad35872d_ScopeChecker> _self_) {
	jule::Ptr<_1ad35872d_ScopeChecker> _199917_base = _1ad33057e_new_scope_checker_base(_self_.get()._field_s,nullptr);
	_199917_base.get()._field_parent=_self_;
	_199917_base.get()._field_labels=_self_.get()._field_labels;
	_199917_base.get()._field_gotos=_self_.get()._field_gotos;
	_199917_base.get()._field_child_index=static_cast<jule::I64>((_self_.get()._field_child_index + 1LL));
	return _199917_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad35872d_ScopeChecker _Src) {
	_Stream << "ScopeChecker{";
	_Stream << "called_from:" << _Src._field_called_from << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1ad36bea0_check_cdef(_1ad36b9b6_DirectiveChecker* _self_,jule::Ptr<_1aaeaeb7d_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ac676a08_Fn>>()) {
			_case_begin_1ae988114:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1ac676a08_Fn>().get()._field_cpp_linked) {
					goto _match_end_1ae98819c;
				}
				goto _case_begin_1ae9883bc;
			}
		}
		else {
			_case_begin_1ae9883bc:;
			{
				_1ad3810c4_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_1630_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_1ae98819c:;
	}
	if ((_1630_d.get()._field_args.len() > 0LL)) {
		_1ad3810c4_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1ad36c2be_check_typedef(_1ad36b9b6_DirectiveChecker* _self_,jule::Ptr<_1aaeaeb7d_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ac661075_Struct>>()) {
			_case_begin_1ae98c3b0:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1ac661075_Struct>().get()._field_cpp_linked) {
					goto _match_end_1ae98bc2d;
				}
				goto _case_begin_1ae98be4d;
			}
		}
		else {
			_case_begin_1ae98be4d:;
			{
				_1ad3810c4_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_3233_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_1ae98bc2d:;
	}
	if ((_3233_d.get()._field_args.len() > 0LL)) {
		_1ad3810c4_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1ad36c5dd_check_derive(_1ad36b9b6_DirectiveChecker* _self_,jule::Ptr<_1aaeaeb7d_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ac661075_Struct>>()) {
			_case_begin_1ae99087a:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1ac661075_Struct>().get()._field_cpp_linked))) {
					goto _match_end_1ae9901e8;
				}
				goto _case_begin_1ae990418;
			}
		}
		else {
			_case_begin_1ae990418:;
			{
				_1ad3810c4_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ae9901e8:;
	}
	if ((_4832_d.get()._field_args.len() == 0LL)) {
		_1ad3810c4_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1ad3814c0_push_suggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	} else if ((_4832_d.get()._field_args.len() > 1LL)) {
		_1ad3810c4_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	{
		auto &_match_expr{ _4832_d.get()._field_args[0LL]._field_kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1ae994ab0:;
		}
		else {
			_case_begin_1ae9932c8:;
			{
				_1ad3810c4_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_4832_d.get()._field_args[0LL]._field_kind)}));
			}
		}
		_match_end_1ae9946e7:;
	}
}



inline void _1ad36c90c_check_namespace(_1ad36b9b6_DirectiveChecker* _self_,jule::Ptr<_1aaeaeb7d_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ac661075_Struct>>()) {
			_case_begin_1ae99661c:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1ac661075_Struct>().get()._field_cpp_linked))) {
					_1ad3810c4_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac676a08_Fn>>()) {
			_case_begin_1ae9969d5:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1ac676a08_Fn>().get()._field_cpp_linked))) {
					_1ad3810c4_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad39e037_Var>>()) {
			_case_begin_1ae996a4b:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1ad39e037_Var>().get()._field_cpp_linked))) {
					_1ad3810c4_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else {
			_case_begin_1ae9968c5:;
			{
				_1ad3810c4_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_1ae9966a5:;
	}
	if ((_7439_d.get()._field_args.len() == 0LL)) {
		_1ad3810c4_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if ((_7439_d.get()._field_args.len() > 1LL)) {
		_1ad3810c4_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	_1ab005531_Token _10213_arg = _7439_d.get()._field_args[0LL];
	if (_10213_arg._field_id != static_cast<jule::U64>(6LLU)) {
		_1ad3810c4_push_err((*_self_)._field_s.ptr(), _10213_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_10213_arg._field_kind[0LL] != '\"') {
		_1ad3810c4_push_err((*_self_)._field_s.ptr(), _10213_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_7439_d.get()._field_args[0LL]._field_kind=_10213_arg._field_kind.slice(1LL,(_10213_arg._field_kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ac661075_Struct>>()) {
			_case_begin_1ae9a2150:;
			{
				if ((_1ad4232ba_find_directive((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1aaeaeb7d_Directive> _11925_typedef = jule::new_ptr<_1aaeaeb7d_Directive>(_1aaeaeb7d_Directive(_7439_d.get()._field_tag,jule::Slice<_1ab005531_Token>()));
					_11925_typedef.get()._field_tag._field_kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>({_11925_typedef}));
				}
			}
		}
		_match_end_1ae9a1726:;
	}
}



inline void _1ad36cc2b_check_deprecated(_1ad36b9b6_DirectiveChecker* _self_,jule::Ptr<_1aaeaeb7d_Directive>& _12840_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ac661075_Struct>>()) {
			_case_begin_1b0156903:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1ac661075_Struct>().get()._field_cpp_linked) {
					_1ad3810c4_push_err((*_self_)._field_s.ptr(), _12840_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12840_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac676a08_Fn>>()) {
			_case_begin_1b0156c22:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1ac676a08_Fn>().get()._field_cpp_linked) {
					_1ad3810c4_push_err((*_self_)._field_s.ptr(), _12840_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12840_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad39e037_Var>>()) {
			_case_begin_1b0156c88:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1ad39e037_Var>().get()._field_cpp_linked) {
					_1ad3810c4_push_err((*_self_)._field_s.ptr(), _12840_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12840_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else {
			_case_begin_1b0156b78:;
			{
				_1ad3810c4_push_err((*_self_)._field_s.ptr(), _12840_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12840_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_1b0156b23:;
	}
	if ((_12840_d.get()._field_args.len() == 0LL)) {
		return;
	}
	if ((_12840_d.get()._field_args.len() > 1LL)) {
		_1ad3810c4_push_err((*_self_)._field_s.ptr(), _12840_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	_1ab005531_Token _15613_arg = _12840_d.get()._field_args[0LL];
	if (_15613_arg._field_id != static_cast<jule::U64>(6LLU)) {
		_1ad3810c4_push_err((*_self_)._field_s.ptr(), _15613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_15613_arg._field_kind[0LL] != '\"') {
		_1ad3810c4_push_err((*_self_)._field_s.ptr(), _15613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_12840_d.get()._field_args[0LL]._field_kind=_15613_arg._field_kind.slice(1LL,(_15613_arg._field_kind.len() - 1LL));
}



inline void _1ad36d04a_check_test(_1ad36b9b6_DirectiveChecker* _self_,jule::Ptr<_1aaeaeb7d_Directive>& _17031_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ac676a08_Fn>>()) {
			_case_begin_1b0162216:;
			{
				jule::Ptr<_1ac676a08_Fn> _17317_f = (*_self_)._field_o.operator jule::Ptr<_1ac676a08_Fn>();
				if (((!(_17317_f.get()._field_cpp_linked)) && (!(_1ac677850_is_init(_17317_f.ptr())))) && (!(_1ac677575_is_entry_point(_17317_f.ptr())))) {
					goto _match_end_1b0161a84;
				}
				if (_1ac67729a_is_method(_17317_f.ptr())) {
					_1ad3810c4_push_err((*_self_)._field_s.ptr(), _17317_f.get()._field_token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1b0161a84;
				}
				goto _case_begin_1b0161ca4;
			}
		}
		else {
			_case_begin_1b0161ca4:;
			{
				_1ad3810c4_push_err((*_self_)._field_s.ptr(), _17031_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_17031_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_1b0161a84:;
	}
	if ((_17031_d.get()._field_args.len() > 0LL)) {
		_1ad3810c4_push_err((*_self_)._field_s.ptr(), _17031_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1ad36d369_check_directive(_1ad36b9b6_DirectiveChecker* _self_,jule::Ptr<_1aaeaeb7d_Directive>& _19139_d) {
	{
		auto &_match_expr{ _19139_d.get()._field_tag._field_kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1b0166e96:;
			{
				_1ad36bea0_check_cdef(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1b016700c:;
			{
				_1ad36c2be_check_typedef(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1b0167073:;
			{
				_1ad36c5dd_check_derive(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1b01670d9:;
			{
				_1ad36c90c_check_namespace(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1b01680b8:;
			{
				_1ad36cc2b_check_deprecated(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1b016812e:;
			{
				_1ad36d04a_check_test(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1b0168195:;
			{
				_1ad3810c4_push_err((*_self_)._field_s.ptr(), _19139_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_19139_d.get()._field_tag._field_kind)}));
			}
		}
		else {
			_case_begin_1b0166aab:;
			{
				_1ad3810c4_push_err((*_self_)._field_s.ptr(), _19139_d.get()._field_tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_19139_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_1b0166d97:;
	}
}



inline void _1ad36d5ab_check(_1ad36b9b6_DirectiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1b016c3a8:;
		if (it != expr.end()) {
			jule::Ptr<_1aaeaeb7d_Directive> _1b016c5d9_d = *it;
			{
				_1ad36d369_check_directive(&(*_self_), _1b016c5d9_d);
			}
			_iter_next_1b016c3a8:;
			++it;
			goto _iter_begin_1b016c3a8;
		}
		_iter_end_1b016c3a8:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1ad36b9b6_DirectiveChecker _Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad3771ec_find_package(_1ad376b8b_Package* _self_,jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad3775a4_select_package(_1ad376b8b_Package* _self_,jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1ad39e037_Var> _1ad377a38_find_var(_1ad376b8b_Package* _self_,jule::Str _28731_ident,jule::Bool _28743_cpp_linked) {
	return _1ad37103c_find_var_in_package((*_self_)._field_files,_28731_ident,_28743_cpp_linked);
}



inline jule::Ptr<_1ad428996_TypeAlias> _1ad377ebc_find_type_alias(_1ad376b8b_Package* _self_,jule::Str _29338_ident,jule::Bool _29350_cpp_linked) {
	return _1ad37158c_find_type_alias_in_package((*_self_)._field_files,_29338_ident,_29350_cpp_linked);
}



inline jule::Ptr<_1ac661075_Struct> _1ad378451_find_struct(_1ad376b8b_Package* _self_,jule::Str _29934_ident,jule::Bool _29946_cpp_linked) {
	return _1ad371a43_find_struct_in_package((*_self_)._field_files,_29934_ident,_29946_cpp_linked);
}



inline jule::Ptr<_1ac676a08_Fn> _1ad3788d5_find_fn(_1ad376b8b_Package* _self_,jule::Str _30530_ident,jule::Bool _30542_cpp_linked) {
	return _1ad37204e_find_fn_in_package((*_self_)._field_files,_30530_ident,_30542_cpp_linked);
}



inline jule::Ptr<_1ac85d096_Trait> _1ad378c8c_find_trait(_1ad376b8b_Package* _self_,jule::Str _31133_ident) {
	return _1ad372439_find_trait_in_package((*_self_)._field_files,_31133_ident);
}



inline jule::Ptr<_1ac724545_Enum> _1ad379144_find_enum(_1ad376b8b_Package* _self_,jule::Str _31732_ident) {
	return _1ad372824_find_enum_in_package((*_self_)._field_files,_31732_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad376b8b_Package _Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad37d412_find_package(_1ad37cd5c_Sema* _self_,jule::Str _23635_ident) {
	return _1ad3e0bd3_find_package((*_self_)._field_file.ptr(), _23635_ident);
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad37d7b9_select_package(_1ad37cd5c_Sema* _self_,jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)> _24637_selector) {
	return _1ad3e108a_select_package((*_self_)._field_file.ptr(), _24637_selector);
}



inline jule::Ptr<_1ad39e037_Var> _1ad37dc4d_find_var(_1ad37cd5c_Sema* _self_,jule::Str _25631_ident,jule::Bool _25643_cpp_linked) {
	jule::Ptr<_1ad39e037_Var> _25817_v = _1ad37103c_find_var_in_package((*_self_)._field_files,_25631_ident,_25643_cpp_linked);
	if ((_25817_v != nullptr)) {
		return _25817_v;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1b01892c6:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b0188e74_imp = *it;
			{
				if ((!(_1ad37b465_imp_is_lookupable(_1b0188e74_imp,_25631_ident)))) {
					goto _iter_next_1b01892c6;
				}
				_25817_v=_1ad3745a1_find_var(_1b0188e74_imp.ptr(), _25631_ident,_25643_cpp_linked);
				if ((_25817_v != nullptr) && _1ad381954_is_accessible_define(&(*_self_), _25817_v.get()._field_public,_25817_v.get()._field_token)) {
					return _25817_v;
				}
			}
			_iter_next_1b01892c6:;
			++it;
			goto _iter_begin_1b01892c6;
		}
		_iter_end_1b01892c6:;
	}
	return nullptr;
}



inline jule::Ptr<_1ad428996_TypeAlias> _1ad37e1d2_find_type_alias(_1ad37cd5c_Sema* _self_,jule::Str _28338_ident,jule::Bool _28350_cpp_linked) {
	jule::Ptr<_1ad428996_TypeAlias> _28517_ta = _1ad37158c_find_type_alias_in_package((*_self_)._field_files,_28338_ident,_28350_cpp_linked);
	if ((_28517_ta != nullptr)) {
		return _28517_ta;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1b018ca7c:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b018c7d5_imp = *it;
			{
				if ((!(_1ad37b465_imp_is_lookupable(_1b018c7d5_imp,_28338_ident)))) {
					goto _iter_next_1b018ca7c;
				}
				_28517_ta=_1ad374a35_find_type_alias(_1b018c7d5_imp.ptr(), _28338_ident,_28350_cpp_linked);
				if ((_28517_ta != nullptr) && _1ad381954_is_accessible_define(&(*_self_), _28517_ta.get()._field_public,_28517_ta.get()._field_token)) {
					return _28517_ta;
				}
			}
			_iter_next_1b018ca7c:;
			++it;
			goto _iter_begin_1b018ca7c;
		}
		_iter_end_1b018ca7c:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac661075_Struct> _1ad37e666_find_struct(_1ad37cd5c_Sema* _self_,jule::Str _31034_ident,jule::Bool _31046_cpp_linked) {
	jule::Ptr<_1ac661075_Struct> _31217_s = _1ad371a43_find_struct_in_package((*_self_)._field_files,_31034_ident,_31046_cpp_linked);
	if ((_31217_s != nullptr)) {
		return _31217_s;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1b0190d05:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b01909a3_imp = *it;
			{
				if ((!(_1ad37b465_imp_is_lookupable(_1b01909a3_imp,_31034_ident)))) {
					goto _iter_next_1b0190d05;
				}
				_31217_s=_1ad374eb9_find_struct(_1b01909a3_imp.ptr(), _31034_ident,_31046_cpp_linked);
				if ((_31217_s != nullptr) && _1ad381954_is_accessible_define(&(*_self_), _31217_s.get()._field_public,_31217_s.get()._field_token)) {
					return _31217_s;
				}
			}
			_iter_next_1b0190d05:;
			++it;
			goto _iter_begin_1b0190d05;
		}
		_iter_end_1b0190d05:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac676a08_Fn> _1ad37eaea_find_fn(_1ad37cd5c_Sema* _self_,jule::Str _33730_ident,jule::Bool _33742_cpp_linked) {
	jule::Ptr<_1ac676a08_Fn> _33917_f = _1ad37204e_find_fn_in_package((*_self_)._field_files,_33730_ident,_33742_cpp_linked);
	if ((_33917_f != nullptr)) {
		return _33917_f;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1b019407d:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b0193c2b_imp = *it;
			{
				if ((!(_1ad37b465_imp_is_lookupable(_1b0193c2b_imp,_33730_ident)))) {
					goto _iter_next_1b019407d;
				}
				_33917_f=_1ad37544d_find_fn(_1b0193c2b_imp.ptr(), _33730_ident,_33742_cpp_linked);
				if ((_33917_f != nullptr) && _1ad381954_is_accessible_define(&(*_self_), _33917_f.get()._field_public,_33917_f.get()._field_token)) {
					return _33917_f;
				}
			}
			_iter_next_1b019407d:;
			++it;
			goto _iter_begin_1b019407d;
		}
		_iter_end_1b019407d:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac85d096_Trait> _1ad37eea2_find_trait(_1ad37cd5c_Sema* _self_,jule::Str _36433_ident) {
	jule::Ptr<_1ac85d096_Trait> _36617_t = _1ad372439_find_trait_in_package((*_self_)._field_files,_36433_ident);
	if ((_36617_t != nullptr)) {
		return _36617_t;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1b0196d61:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b01972a1_imp = *it;
			{
				if ((!(_1ad37b465_imp_is_lookupable(_1b01972a1_imp,_36433_ident)))) {
					goto _iter_next_1b0196d61;
				}
				_36617_t=_1ad375805_find_trait(_1b01972a1_imp.ptr(), _36433_ident);
				if ((_36617_t != nullptr) && _1ad381954_is_accessible_define(&(*_self_), _36617_t.get()._field_public,_36617_t.get()._field_token)) {
					return _36617_t;
				}
			}
			_iter_next_1b0196d61:;
			++it;
			goto _iter_begin_1b0196d61;
		}
		_iter_end_1b0196d61:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac724545_Enum> _1ad380359_find_enum(_1ad37cd5c_Sema* _self_,jule::Str _39132_ident) {
	jule::Ptr<_1ac724545_Enum> _39317_e = _1ad372824_find_enum_in_package((*_self_)._field_files,_39132_ident);
	if ((_39317_e != nullptr)) {
		return _39317_e;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1b0199bcc:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b019a11c_imp = *it;
			{
				if ((!(_1ad37b465_imp_is_lookupable(_1b019a11c_imp,_39132_ident)))) {
					goto _iter_next_1b0199bcc;
				}
				_39317_e=_1ad375bac_find_enum(_1b019a11c_imp.ptr(), _39132_ident);
				if ((_39317_e != nullptr) && _1ad381954_is_accessible_define(&(*_self_), _39317_e.get()._field_public,_39317_e.get()._field_token)) {
					return _39317_e;
				}
			}
			_iter_next_1b0199bcc:;
			++it;
			goto _iter_begin_1b0199bcc;
		}
		_iter_end_1b0199bcc:;
	}
	return nullptr;
}



inline jule::Bool _1ad3807cc_is_flag(_1ad37cd5c_Sema* _self_,jule::I64 _41522_flags) {
	return ((*_self_)._field_flags & _41522_flags) == _41522_flags;
}



inline void _1ad380aeb_set_current_file(_1ad37cd5c_Sema* _self_,jule::Ptr<_1ad3e062d_SymbolTable> _41739_f) {
	(*_self_)._field_file=_41739_f;
}



inline void _1ad3810c4_push_err(_1ad37cd5c_Sema* _self_,_1ab005531_Token _41927_token,jule::Str _41941_fmt,jule::Slice<jule::Any> _41954_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ad37b07a_compiler_err(_41927_token,true,_41941_fmt,_41954_args));
}



inline void _1ad3814c0_push_suggestion(_1ad37cd5c_Sema* _self_,jule::Str _42434_fmt,jule::Slice<jule::Any> _42447_args) {
	{
		_1ad37c7b8_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_42434_fmt,_42447_args);
	}
}



inline jule::Bool _1ad381954_is_accessible_define(_1ad37cd5c_Sema* _self_,jule::Bool _42935_public,_1ab005531_Token _42949_token) {
	return (_42935_public || (_42949_token._field_file == nullptr)) || (_1ab00c1e7_dir((*_self_)._field_file.get()._field_file.ptr()) == _1ab00c1e7_dir(_42949_token._field_file.ptr()));
}



inline jule::Bool _1ad381eb5_is_duplicated_ident(_1ad37cd5c_Sema* _self_,jule::U64 _43634_itself,jule::Str _43651_ident,jule::Bool _43663_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1b01a3620:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> &_1b01a381d_f = *it;
			{
				if (_1ad3e4313_is_duplicated_ident(_1b01a381d_f.ptr(), _43634_itself,_43651_ident,_43663_cpp_linked)) {
					return true;
				}
				{
					auto &expr = _1b01a381d_f.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1b01a4049:;
					if (it != expr.end()) {
						jule::Ptr<_1ad3736b0_ImportInfo> &_1b01a4ea1_imp = *it;
						{
							{
								auto &expr = _1b01a4ea1_imp.get()._field_selected;
								auto it = expr.begin();
								_iter_begin_1b01a5633:;
								if (it != expr.end()) {
									_1ab005531_Token &_1b01a5677_selected = *it;
									{
										if (_1b01a5677_selected._field_kind == _43651_ident) {
											return true;
										}
									}
									_iter_next_1b01a5633:;
									++it;
									goto _iter_begin_1b01a5633;
								}
								_iter_end_1b01a5633:;
							}
						}
						_iter_next_1b01a4049:;
						++it;
						goto _iter_begin_1b01a4049;
					}
					_iter_end_1b01a4049:;
				}
			}
			_iter_next_1b01a3620:;
			++it;
			goto _iter_begin_1b01a3620;
		}
		_iter_end_1b01a3620:;
	}
	return false;
}



inline void _1ad3823b1_check_directives(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>& _45341_d,jule::Any _45367_o) {
	_1ad36b9b6_DirectiveChecker _45417_dc = _1ad36b9b6_DirectiveChecker(_self_,((jule::Ptr<jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>>)((&(_45341_d)))),_45367_o);
	_1ad36d5ab_check(&_45417_dc);
}



inline jule::Bool _1ad382922_check_generic_quantity(_1ad37cd5c_Sema* _self_,jule::I64 _46241_required,jule::I64 _46256_given,_1ab005531_Token _46268_token) {
	jule::Bool _46284_ok = jule::Bool();
	{
		
		if ((_46241_required == 0LL) && (_46256_given > 0LL)) {
			_case_begin_1b01a913c:;
			{
				_1ad3810c4_push_err(&(*_self_), _46268_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_46284_ok = false;
				return _46284_ok;
			}
		}
		else if ((_46241_required > 0LL) && (_46256_given == 0LL)) {
			_case_begin_1b01a91e7:;
			{
				_1ad3810c4_push_err(&(*_self_), _46268_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_46284_ok = false;
				return _46284_ok;
			}
		}
		else if (_46241_required < _46256_given) {
			_case_begin_1b01a925d:;
			{
				_1ad3810c4_push_err(&(*_self_), _46268_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_46284_ok = false;
				return _46284_ok;
			}
		}
		else if (_46241_required > _46256_given) {
			_case_begin_1b01a8dd9:;
			{
				_1ad3810c4_push_err(&(*_self_), _46268_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_46284_ok = false;
				return _46284_ok;
			}
		}
		else {
			_case_begin_1b01a8977:;
			{
				_46284_ok = true;
				return _46284_ok;
			}
		}
		_match_end_1b01a88ab:;
	}
}



inline jule::Bool _1ad382dea_is_duplicated_import_selection(_1ad37cd5c_Sema* _self_,jule::U64 _48145_itself,jule::Str _48162_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1b01ad185:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> &_1b01ad3b6_imp = *it;
			{
				if (static_cast<jule::U64>(_1b01ad3b6_imp) == _48145_itself) {
					goto _iter_end_1b01ad185;
				}
				if (_1ad37652b_exist_ident(_1b01ad3b6_imp.ptr(), _48162_ident)) {
					return true;
				}
			}
			_iter_next_1b01ad185:;
			++it;
			goto _iter_begin_1b01ad185;
		}
		_iter_end_1b01ad185:;
	}
	return false;
}



inline jule::Any _1ad38336d_get_import_def(_1ad37cd5c_Sema* _self_,jule::Str _49629_ident,jule::Ptr<_1ad3736b0_ImportInfo>& _49646_imp) {
	if (_1ad474a58_find_package_builtin_def(_49646_imp.get()._field_link_path,_49629_ident) != jule::Any(jule::Any(nullptr))) {
		return jule::Any(true);
	}
	{
		auto &expr = _49646_imp.get()._field_package.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b01b0ce2:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b01b0d7a_f = *it;
			{
				
				jule::Any _50321_def = _1ad3e3ca2_def_by_ident(_1b01b0d7a_f.ptr(), _49629_ident,false);
				if (_50321_def != jule::Any(jule::Any(nullptr))) {
					return _50321_def;
				}
			}
			_iter_next_1b01b0ce2:;
			++it;
			goto _iter_begin_1b01b0ce2;
		}
		_iter_end_1b01b0ce2:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1ad383769_check_import_selections(_1ad37cd5c_Sema* _self_,jule::Ptr<_1ad3736b0_ImportInfo>& _51247_imp) {
	jule::Bool _51267_ok = jule::Bool();
	_51267_ok=true;
	{
		auto &expr = _51247_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1b01b2e7b:;
		if (it != expr.end()) {
			_1ab005531_Token _1b01b3322_ident = *it;
			{
				if ((_1b01b3322_ident._field_kind == jule::Str("self", 4))) {
					goto _iter_next_1b01b2e7b;
				}
				if (_1ad382dea_is_duplicated_import_selection(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(_51247_imp)),_1b01b3322_ident._field_kind)) {
					_1ad3810c4_push_err(&(*_self_), _1b01b3322_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1b01b3322_ident._field_kind)}));
					_1ad3814c0_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_51267_ok=false;
					goto _iter_next_1b01b2e7b;
				}
				jule::Any _52621_def = _1ad38336d_get_import_def(&(*_self_), _1b01b3322_ident._field_kind,_51247_imp);
				{
					auto &_match_expr{ _52621_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1b01b6402:;
						{
							goto _iter_next_1b01b2e7b;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad39e037_Var>>()) {
						_case_begin_1b01b6468:;
						{
							jule::Ptr<_1ad39e037_Var> _53225_v = _52621_def.operator jule::Ptr<_1ad39e037_Var>();
							if (_1ad381954_is_accessible_define(&(*_self_), _53225_v.get()._field_public,_53225_v.get()._field_token)) {
								goto _iter_next_1b01b2e7b;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad428996_TypeAlias>>()) {
						_case_begin_1b01b64ce:;
						{
							jule::Ptr<_1ad428996_TypeAlias> _53725_ta = _52621_def.operator jule::Ptr<_1ad428996_TypeAlias>();
							if (_1ad381954_is_accessible_define(&(*_self_), _53725_ta.get()._field_public,_53725_ta.get()._field_token)) {
								goto _iter_next_1b01b2e7b;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac661075_Struct>>()) {
						_case_begin_1b01b6545:;
						{
							jule::Ptr<_1ac661075_Struct> _54225_strct = _52621_def.operator jule::Ptr<_1ac661075_Struct>();
							if (_1ad381954_is_accessible_define(&(*_self_), _54225_strct.get()._field_public,_54225_strct.get()._field_token)) {
								goto _iter_next_1b01b2e7b;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac85d096_Trait>>()) {
						_case_begin_1b01b72d2:;
						{
							jule::Ptr<_1ac85d096_Trait> _54725_t = _52621_def.operator jule::Ptr<_1ac85d096_Trait>();
							if (_1ad381954_is_accessible_define(&(*_self_), _54725_t.get()._field_public,_54725_t.get()._field_token)) {
								goto _iter_next_1b01b2e7b;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac724545_Enum>>()) {
						_case_begin_1b01b7348:;
						{
							jule::Ptr<_1ac724545_Enum> _55225_e = _52621_def.operator jule::Ptr<_1ac724545_Enum>();
							if (_1ad381954_is_accessible_define(&(*_self_), _55225_e.get()._field_public,_55225_e.get()._field_token)) {
								goto _iter_next_1b01b2e7b;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac676a08_Fn>>()) {
						_case_begin_1b01b73ae:;
						{
							jule::Ptr<_1ac676a08_Fn> _55725_f = _52621_def.operator jule::Ptr<_1ac676a08_Fn>();
							if (_1ad381954_is_accessible_define(&(*_self_), _55725_f.get()._field_public,_55725_f.get()._field_token)) {
								goto _iter_next_1b01b2e7b;
							}
						}
					}
					else {
						_case_begin_1b01b62ae:;
						{
							_1ad3810c4_push_err(&(*_self_), _1b01b3322_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_1b01b3322_ident._field_kind)}));
							_51267_ok=false;
							goto _iter_next_1b01b2e7b;
						}
					}
					_match_end_1b01b6259:;
				}
				_1ad3810c4_push_err(&(*_self_), _1b01b3322_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_1b01b3322_ident._field_kind)}));
				_1ad3814c0_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_51267_ok=false;
			}
			_iter_next_1b01b2e7b:;
			++it;
			goto _iter_begin_1b01b2e7b;
		}
		_iter_end_1b01b2e7b:;
	}
	return _51267_ok;
}



inline jule::Bool _1ad383b54_is_use_alias_duplication(_1ad37cd5c_Sema* _self_,jule::Ptr<_1ad3736b0_ImportInfo>& _57444_imp) {
	if ((_57444_imp.get()._field_alias.len() == 0LL)) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1b01beb58:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b01c0681_imp2 = *it;
			{
				if (_1b01c0681_imp2 == _57444_imp) {
					goto _iter_end_1b01beb58;
				}
				if (_1b01c0681_imp2.get()._field_alias == _57444_imp.get()._field_alias) {
					return true;
				}
				if ((_1b01c0681_imp2.get()._field_ident == _1b01c0681_imp2.get()._field_link_path) && (_1b01c0681_imp2.get()._field_ident == _57444_imp.get()._field_alias)) {
					return true;
				}
			}
			_iter_next_1b01beb58:;
			++it;
			goto _iter_begin_1b01beb58;
		}
		_iter_end_1b01beb58:;
	}
	return false;
}



inline jule::Bool _1ad383eea_check_import(_1ad37cd5c_Sema* _self_,jule::Ptr<_1ad3736b0_ImportInfo>& _59536_imp) {
	if (_59536_imp.get()._field_cpp_linked || (_59536_imp.get()._field_package.get()._field_files.len() == 0LL)) {
		return true;
	}
	if (_1ad383b54_is_use_alias_duplication(&(*_self_), _59536_imp)) {
		_1ad3810c4_push_err(&(*_self_), _59536_imp.get()._field_token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>({jule::Any(_59536_imp.get()._field_alias)}));
		_1ad3814c0_push_suggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	}
	if ((!(_59536_imp.get()._field_duplicate))) {
		jule::Ptr<_1ad37cd5c_Sema> _60621_sema = jule::new_ptr<_1ad37cd5c_Sema>(_1ad37cd5c_Sema(jule::Slice<_1a92a31c6_Log>(),jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>(),jule::Ptr<_1ad3e062d_SymbolTable>(),(*_self_)._field_flags));
		_1ad39a583_check(_60621_sema, _59536_imp.get()._field_package.get()._field_files);
		if ((_60621_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_60621_sema.get()._field_errors);
			_60621_sema.get()._field_errors=nullptr;
			return false;
		}
	}
	return _1ad383769_check_import_selections(&(*_self_), _59536_imp);
}



inline void _1ad38423c_check_imports(_1ad37cd5c_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1b01c806d:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b01c825a_file = *it;
			{
				_1ad380aeb_set_current_file(&(*_self_), _1b01c825a_file);
				{
					auto &expr = _1b01c825a_file.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1b01c8a74:;
					if (it != expr.end()) {
						jule::Ptr<_1ad3736b0_ImportInfo> _1b01c8e92_imp = *it;
						{
							jule::Bool _62421_ok = _1ad383eea_check_import(&(*_self_), _1b01c8e92_imp);
							if ((!(_62421_ok))) {
								_1ad3810c4_push_err(&(*_self_), _1b01c8e92_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_1b01c8e92_imp.get()._field_link_path)}));
								return;
							}
						}
						_iter_next_1b01c8a74:;
						++it;
						goto _iter_begin_1b01c8a74;
					}
					_iter_end_1b01c8a74:;
				}
			}
			_iter_next_1b01c806d:;
			++it;
			goto _iter_begin_1b01c806d;
		}
		_iter_end_1b01c806d:;
	}
}



inline void _1ad38447e_impl_file_impls(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_impls;
		auto it = expr.begin();
		_iter_begin_1b01cabec:;
		if (it != expr.end()) {
			jule::Ptr<_1ac76d3b3_Impl> _1b01cac41_imp = *it;
			{
				_1ad390006_impl_impl(_self_, _1b01cac41_imp);
			}
			_iter_next_1b01cabec:;
			++it;
			goto _iter_begin_1b01cabec;
		}
		_iter_end_1b01cabec:;
	}
}



inline void _1ad3846c1_impl_impls(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b01cc25e:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b01cc44b_file = *it;
			{
				_1ad380aeb_set_current_file(_self_.ptr(), _1b01cc44b_file);
				_1ad38447e_impl_file_impls(_self_);
			}
			_iter_next_1b01cc25e:;
			++it;
			goto _iter_begin_1b01cc25e;
		}
		_iter_end_1b01cc25e:;
	}
}



inline void _1ad384913_check_enums(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b01cd6d3:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b01cd8c0_file = *it;
			{
				_1ad380aeb_set_current_file(_self_.ptr(), _1b01cd8c0_file);
				_1ad38baa2_check_enum_decls(_self_);
			}
			_iter_next_1b01cd6d3:;
			++it;
			goto _iter_begin_1b01cd6d3;
		}
		_iter_end_1b01cd6d3:;
	}
}



inline jule::Bool _1ad384e74_check_type_with_refers(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ad42e293_TypeSymbol>& _65747_t,jule::Trait<_1ad447256_Lookup> _65813_l,jule::Ptr<_1ad43a6de_Referencer> _65828_referencer) {
	jule::Bool _65855_ok = jule::Bool();
	if (_1ad42e705_checked(_65747_t.ptr())) {
		_65855_ok = true;
		return _65855_ok;
	}
	_1ad43b635_TypeChecker _66217_tc = _1ad43b635_TypeChecker(_self_,_65813_l,_65828_referencer,_1ab005531_Token(),jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1ad428996_TypeAlias>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>(),jule::Bool());
	if ((_65828_referencer != nullptr) && (_65828_referencer.get()._field_refs != nullptr)) {
		_66217_tc._field_owner_alias=_65828_referencer.get()._field_owner.operator jule::Ptr<_1ad428996_TypeAlias>();
	}
	_1ad44464e_check(&_66217_tc, _65747_t);
	_65855_ok = _1ad42e705_checked(_65747_t.ptr());
	return _65855_ok;
}



inline jule::Bool _1ad385408_check_type(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ad42e293_TypeSymbol>& _68135_t,jule::Trait<_1ad447256_Lookup> _68155_l) {
	return _1ad384e74_check_type_with_refers(_self_, _68135_t,_68155_l,nullptr);
}



inline jule::Ptr<_1ad429931_TypeKind> _1ad3858d1_build_type_with_generics(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1aae075dc_TypeDecl>& _68749_t,jule::Slice<jule::Ptr<_1ad428996_TypeAlias>> _68813_generics) {
	jule::Ptr<_1ad43b635_TypeChecker> _68917_tc = jule::new_ptr<_1ad43b635_TypeChecker>(_1ad43b635_TypeChecker(_self_,jule::Trait<_1ad447256_Lookup>(_self_, 3),jule::Ptr<_1ad43a6de_Referencer>(),_1ab005531_Token(),jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>(),_68813_generics,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1ad428996_TypeAlias>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>(),jule::Bool()));
	return _1ad444330_check_decl(_68917_tc.ptr(), _68749_t);
}



inline jule::Ptr<_1ad429931_TypeKind> _1ad385c77_build_type(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1aae075dc_TypeDecl>& _69835_t) {
	return _1ad3858d1_build_type_with_generics(_self_, _69835_t,nullptr);
}



inline jule::Ptr<_1ad429931_TypeKind> _1ad38612e_select_type(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1aae075dc_TypeDecl>& _70336_t) {
	jule::Ptr<_1ad43b635_TypeChecker> _70417_tc = jule::new_ptr<_1ad43b635_TypeChecker>(_1ad43b635_TypeChecker(_self_,jule::Trait<_1ad447256_Lookup>(_self_, 3),jule::Ptr<_1ad43a6de_Referencer>(),_1ab005531_Token(),jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>(),jule::Bool(),jule::Bool(),true,jule::Ptr<_1ad428996_TypeAlias>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>(),jule::Bool()));
	return _1ad444330_check_decl(_70417_tc.ptr(), _70336_t);
}



inline jule::Ptr<_1ad3e89cc_Eval> _1ad386690_evalpd(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Trait<_1ad447256_Lookup> _71430_l,jule::Ptr<_1ad429931_TypeKind> _71445_p,jule::Ptr<_1ad39e037_Var> _71463_owner) {
	jule::Ptr<_1ad3e89cc_Eval> _71517_e = jule::new_ptr<_1ad3e89cc_Eval>(_1ad3e89cc_Eval(_self_,_71430_l,jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_71463_owner,jule::Ptr<_1ac663a06_FieldIns>(),jule::Bool()));
	{
		auto &_match_expr{ _71430_l };
		
		if (_match_expr.type_is<jule::Ptr<_1ad35872d_ScopeChecker>>()) {
			_case_begin_1b01dae3d:;
			{
				_71517_e.get()._field_unsafety=_1ad359cd4_is_unsafe(_71430_l.operator jule::Ptr<_1ad35872d_ScopeChecker>());
			}
		}
		_match_end_1b01dadd8:;
	}
	_71517_e.get()._field_prefix=_71445_p;
	return _71517_e;
}



inline jule::Ptr<_1ad3e89cc_Eval> _1ad386b24_evalp(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Trait<_1ad447256_Lookup> _73229_l,jule::Ptr<_1ad429931_TypeKind> _73244_p) {
	return _1ad386690_evalpd(_self_, _73229_l,_73244_p,nullptr);
}



inline jule::Ptr<_1ad3e89cc_Eval> _1ad386ecb_eval(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Trait<_1ad447256_Lookup> _73728_l) {
	return _1ad386b24_evalp(_self_, _73728_l,nullptr);
}



inline jule::Bool _1ad387619_check_assign_type(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Bool _74137_dest_is_ref,jule::Ptr<_1ad429931_TypeKind>& _74161_dest,jule::Ptr<_1ad3e6975_Data>& _74214_d,_1ab005531_Token _74228_error_token) {
	if (_74214_d.get()._field_decl) {
		_1ad3810c4_push_err(_self_.ptr(), _74228_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	}
	if (_74137_dest_is_ref) {
		if ((!(_1ad42a206_equals(_74161_dest, _74214_d.get()._field_kind)))) {
			_1ad3810c4_push_err(_self_.ptr(), _74228_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_74161_dest.ptr())),jule::Any(_1ad429d4e_to_str(_74214_d.get()._field_kind.ptr()))}));
			return false;
		}
	} else {
		jule::Ptr<_1ad3d019a_AssignTypeChecker> _75321_atc = jule::new_ptr<_1ad3d019a_AssignTypeChecker>(_1ad3d019a_AssignTypeChecker(_self_,_74161_dest,_74214_d,_74228_error_token));
		jule::Bool _75917_ok = _1ad3d161e_check(_75321_atc.ptr());
		if ((!(_75917_ok))) {
			return false;
		}
	}
	if ((!(_1ad3e747b_is_const(_74214_d.ptr()))) || (_1ad42bec7_prim(_74161_dest.ptr()) == nullptr)) {
		return true;
	}
	jule::Str _76917_kind = _1ad42bec7_prim(_74161_dest.ptr()).get()._field_kind;
	{
		
		if (_1ad3542a6_is_sig_int(_76917_kind)) {
			_case_begin_1b01e4034:;
			{
				_1ad2c4952_set_i64(_74214_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1ad2c407d_as_i64(_74214_d.get()._field_constant.ptr())));
			}
		}
		else if (_1ad354608_is_unsig_int(_76917_kind)) {
			_case_begin_1b01e40ab:;
			{
				_1ad2c4c71_set_u64(_74214_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1ad2c4358_as_u64(_74214_d.get()._field_constant.ptr())));
			}
		}
		else if (_1ad354c68_is_float(_76917_kind)) {
			_case_begin_1b01e4133:;
			{
				_1ad2c56cd_set_f64(_74214_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1ad2c4633_as_f64(_74214_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1b01e3e57:;
	}
	return true;
}



inline jule::Bool _1ad387bbe_check_type_compatibility(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ad429931_TypeKind>& _78349_dest,jule::Ptr<_1ad429931_TypeKind>& _78414_src,_1ab005531_Token& _78435_error_token) {
	if ((_78414_src == nullptr)) {
		_1ad3810c4_push_err(_self_.ptr(), _78435_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_78349_dest.ptr())),jule::Any(_1ad429d4e_to_str(_78414_src.ptr()))}));
		return false;
	}
	if ((_1ad42dd42_tup(_78414_src.ptr()) != nullptr)) {
		_1ad3810c4_push_err(_self_.ptr(), _78435_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_78349_dest.ptr())),jule::Any(_1ad429d4e_to_str(_78414_src.ptr()))}));
		return false;
	}
	_1ad3cd84c_TypeCompatibilityChecker _79817_tcc = _1ad3cd84c_TypeCompatibilityChecker(_self_,_78349_dest,_78414_src,_78435_error_token);
	if (_1ad3cea4b_check(&_79817_tcc)) {
		return true;
	}
	_1ad3810c4_push_err(_self_.ptr(), _78435_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_78349_dest.ptr())),jule::Any(_1ad429d4e_to_str(_78414_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1ad429931_TypeKind> _1ad388186_build_non_generic_type_kind(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1aae075dc_TypeDecl>& _81952_ast,jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>& _82014_generics) {
	jule::Ptr<_1ad43b635_TypeChecker> _82117_tc = jule::new_ptr<_1ad43b635_TypeChecker>(_1ad43b635_TypeChecker(_self_,jule::Trait<_1ad447256_Lookup>(_self_, 3),jule::Ptr<_1ad43a6de_Referencer>(),_1ab005531_Token(),_82014_generics,jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1ad428996_TypeAlias>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>(),jule::Bool()));
	return _1ad444330_check_decl(_82117_tc.ptr(), _81952_ast);
}



inline void _1ad3884d8_build_fn_non_generic_type_kinds(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac67a501_FnIns>& _82956_f) {
	jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>> _83017_generics = nullptr;
	if (_1ac67729a_is_method(_82956_f.get()._field_decl.ptr())) {
		_83017_generics=jule::append(_82956_f.get()._field_decl.get()._field_generics,_82956_f.get()._field_decl.get()._field_owner.get()._field_generics);
	} else {
		_83017_generics=_82956_f.get()._field_decl.get()._field_generics;
	}
	{
		auto &expr = _82956_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1b01eeeeb:;
		if (it != expr.end()) {
			jule::Ptr<_1ac67939b_ParamIns> _1b0200051_p = *it;
			{
				if ((!(_1ac6753db_is_self(_1b0200051_p.get()._field_decl.ptr())))) {
					_1b0200051_p.get()._field_kind=_1ad388186_build_non_generic_type_kind(_self_, _1b0200051_p.get()._field_decl.get()._field_kind.get()._field_decl,_83017_generics);
				}
			}
			_iter_next_1b01eeeeb:;
			++it;
			goto _iter_begin_1b01eeeeb;
		}
		_iter_end_1b01eeeeb:;
	}
	if ((!(_1ac676ec0_is_void(_82956_f.get()._field_decl.ptr())))) {
		_82956_f.get()._field_result=_1ad388186_build_non_generic_type_kind(_self_, _82956_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_83017_generics);
	}
}



inline jule::Ptr<_1ac67a501_FnIns> _1ad3888c3_get_trait_check_fn_kind(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac676a08_Fn>& _84748_f) {
	jule::Ptr<_1ac67a501_FnIns> _84817_ins = _1ac6787b8_instance_force(_84748_f);
	_1ad3884d8_build_fn_non_generic_type_kinds(_self_, _84817_ins);
	return _84817_ins;
}



inline jule::Bool _1ad388c69_reload_fn_ins_types(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac67a501_FnIns>& _85344_f) {
	jule::Bool _85357_ok = jule::Bool();
	if (_1ac67b17d_is_builtin(_85344_f.ptr()) || _1ac67b458_is_anon(_85344_f.ptr())) {
		_85357_ok = true;
		return _85357_ok;
	}
	jule::Ptr<_1ad37cd5c_Sema> _85817_sema = _85344_f.get()._field_decl.get()._field_sema;
	jule::Ptr<_1ad3e062d_SymbolTable> _86017_old = _85344_f.get()._field_decl.get()._field_sema.get()._field_file;
	__JULE_DEFER({
		_1ad380aeb_set_current_file(_85344_f.get()._field_decl.get()._field_sema.ptr(), _86017_old);
	});
	jule::Ptr<_1ad3e062d_SymbolTable> _86217_file = _1ad37c301_find_file(_85344_f.get()._field_decl.get()._field_sema.get()._field_files,_85344_f.get()._field_decl.get()._field_token._field_file);
	if ((_86217_file != nullptr)) {
		_1ad380aeb_set_current_file(_85344_f.get()._field_decl.get()._field_sema.ptr(), _86217_file);
	}
	jule::I64 _86717_size = _85344_f.get()._field_generics.len();
	if ((_85344_f.get()._field_decl != nullptr) && (_85344_f.get()._field_decl.get()._field_owner != nullptr)) {
		_86717_size+=static_cast<jule::I64>(_85344_f.get()._field_decl.get()._field_owner.get()._field_generics.len());
	}
	jule::Slice<jule::Ptr<_1ad428996_TypeAlias>> _87217_generics = jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>::alloc(0LL,_86717_size);
	{
		auto &expr = _85344_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1b0632d9b:;
		if (it != expr.end()) {
			jule::I64 _1b0632e56_i = it - expr.begin();
			jule::Ptr<_1ad429931_TypeKind> _1b0633143_g = *it;
			{
				_87217_generics = jule::alloc_for_append(_87217_generics,1);_87217_generics.__push(jule::new_ptr<_1ad428996_TypeAlias>(_1ad428996_TypeAlias(jule::Ptr<_1ab01d615_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1ab005531_Token(),_85344_f.get()._field_decl.get()._field_generics[_1b0632e56_i].get()._field_ident,jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),_1b0633143_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>())));
			}
			_iter_next_1b0632d9b:;
			++it;
			_1b0632e56_i++;
			goto _iter_begin_1b0632d9b;
		}
		_iter_end_1b0632d9b:;
	}
	if ((_85344_f.get()._field_decl != nullptr) && (_85344_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1ac664551_StructIns> _88421_owner = _85344_f.get()._field_owner;
		{
			auto &expr = _88421_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1b0633ab1:;
			if (it != expr.end()) {
				jule::I64 _1b0634ae5_i = it - expr.begin();
				jule::Ptr<_1ad429931_TypeKind> _1b0634d15_g = *it;
				{
					_87217_generics = jule::alloc_for_append(_87217_generics,1);_87217_generics.__push(jule::new_ptr<_1ad428996_TypeAlias>(_1ad428996_TypeAlias(jule::Ptr<_1ab01d615_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1ab005531_Token(),_88421_owner.get()._field_decl.get()._field_generics[_1b0634ae5_i].get()._field_ident,jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),_1b0634d15_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>())));
				}
				_iter_next_1b0633ab1:;
				++it;
				_1b0634ae5_i++;
				goto _iter_begin_1b0633ab1;
			}
			_iter_end_1b0633ab1:;
		}
	}
	_85357_ok=true;
	{
		auto &expr = _85344_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1b0636641:;
		if (it != expr.end()) {
			jule::Ptr<_1ac67939b_ParamIns> _1b063670c_p = *it;
			{
				if (_1ac6753db_is_self(_1b063670c_p.get()._field_decl.ptr())) {
					if (_1ac6756b6_is_ref(_1b063670c_p.get()._field_decl.ptr())) {
						_1b063670c_p.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ad433b05_Sptr>(_1ad433b05_Sptr(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_85344_f.get()._field_owner, 0))))), 6)));
					} else {
						_1b063670c_p.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_85344_f.get()._field_owner, 0)));
					}
				} else {
					_1b063670c_p.get()._field_kind=_1ad3858d1_build_type_with_generics(_85817_sema, _1b063670c_p.get()._field_decl.get()._field_kind.get()._field_decl,_87217_generics);
					if ((_1b063670c_p.get()._field_kind != nullptr)) {
						_1b063670c_p.get()._field_kind.get()._field_variadic=_1b063670c_p.get()._field_decl.get()._field_variadic;
						if (_1b063670c_p.get()._field_decl.get()._field_reference && (!(_1ad439105_is_valid_for_ref(_1b063670c_p.get()._field_kind)))) {
							_1ad3810c4_push_err(_self_.ptr(), _1b063670c_p.get()._field_decl.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_1b063670c_p.get()._field_kind.ptr()))}));
						}
					} else {
						_85357_ok=false;
					}
				}
			}
			_iter_next_1b0636641:;
			++it;
			goto _iter_begin_1b0636641;
		}
		_iter_end_1b0636641:;
	}
	if ((!(_1ac676ec0_is_void(_85344_f.get()._field_decl.ptr())))) {
		_85344_f.get()._field_result=_1ad3858d1_build_type_with_generics(_85817_sema, _85344_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_87217_generics);
		_85357_ok=(_85344_f.get()._field_result != nullptr) && _85357_ok;
	}
	if (_85817_sema != _self_) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_85817_sema.get()._field_errors);
		_85817_sema.get()._field_errors=nullptr;
	}
	return _85357_ok;
}



inline jule::Bool _1ad389341_check_ref_validity_for_init_expr(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Bool _93752_left_mut,jule::Ptr<_1ad3e6975_Data>& _93773_d,_1ab005531_Token& _93788_error_token) {
	{
		auto &_match_expr{ _93773_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ad39e037_Var>>()) {
			_case_begin_1b0640c44:;
			{
				goto _match_end_1b063edca;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66b69b_TraitSubIdentExprModel>>()) {
			_case_begin_1b0640caa:;
			{
				jule::Ptr<_1ac66b69b_TraitSubIdentExprModel> _94221_model = _93773_d.get()._field_model.operator jule::Ptr<_1ac66b69b_TraitSubIdentExprModel>();
				if ((!(_1ad37aa2a_is_valid_model_for_ref(_94221_model.get()._field_expr)))) {
					_1ad3810c4_push_err(_self_.ptr(), _93788_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(_94221_model.get()._field_method.get()._field_ident)}));
					return false;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>>()) {
			_case_begin_1b063eec9:;
			{
				jule::Ptr<_1ac66c0a3_StructSubIdentExprModel> _94821_model = _93773_d.get()._field_model.operator jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>();
				if ((!(_1ad37aa2a_is_valid_model_for_ref(_94821_model.get()._field_expr.get()._field_model)))) {
					_1ad3810c4_push_err(_self_.ptr(), _93788_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(_94821_model.get()._field_field.get()._field_decl.get()._field_ident)}));
					return false;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66cdea_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac66d5d2_CommonSubIdentExprModel>>()) {
			_case_begin_1b0640040:;
			{
				_1ad3810c4_push_err(_self_.ptr(), _93788_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac667158_UnaryExprModel>>()) {
			_case_begin_1b06400a6:;
			{
				jule::Ptr<_1ac667158_UnaryExprModel> _95821_unary = _93773_d.get()._field_model.operator jule::Ptr<_1ac667158_UnaryExprModel>();
				if ((_95821_unary.get()._field_op._field_kind == jule::Str("*", 1))) {
					if ((!(_1ad37aa2a_is_valid_model_for_ref(_93773_d.get()._field_model)))) {
						_1ad3810c4_push_err(_self_.ptr(), _93788_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					}
					goto _match_end_1b063edca;
				}
				goto _case_begin_1b063ee30;
			}
		}
		else {
			_case_begin_1b063ee30:;
			{
				_1ad3810c4_push_err(_self_.ptr(), _93788_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1b063edca:;
	}
	if (_93752_left_mut && (!(_93773_d.get()._field_mutable))) {
		_1ad3810c4_push_err(_self_.ptr(), _93788_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	}
	return true;
}



inline jule::Bool _1ad389aa0_check_validity_for_init_expr(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Bool _97948_left_mut,jule::Bool _97964_left_ref,jule::Ptr<_1ad429931_TypeKind>& _98010_left_kind,jule::Ptr<_1ad3e6975_Data>& _98037_d,_1ab005531_Token& _98052_error_token) {
	if ((_97948_left_mut && (!(_98037_d.get()._field_mutable))) && _1ad42b092_mutable(_98037_d.get()._field_kind.ptr())) {
		_1ad3810c4_push_err(_self_.ptr(), _98052_error_token,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_98037_d.get()._field_kind.ptr()))}));
		return false;
	}
	if (_97964_left_ref) {
		if ((!(_1ad389341_check_ref_validity_for_init_expr(_self_, _97948_left_mut,_98037_d,_98052_error_token)))) {
			return false;
		}
	}
	jule::Ptr<_1ad3d019a_AssignTypeChecker> _99117_atc = jule::new_ptr<_1ad3d019a_AssignTypeChecker>(_1ad3d019a_AssignTypeChecker(_self_,jule::Ptr<_1ad429931_TypeKind>(),_98037_d,_98052_error_token));
	return _1ad3d09b4_check_validity(_99117_atc.ptr());
}



inline jule::Bool _1ad38a034_check_type_alias_decl_kind(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ad428996_TypeAlias>& _99951_ta,jule::Trait<_1ad447256_Lookup> _99971_l) {
	jule::Bool _99984_ok = jule::Bool();
	jule::Ptr<_1ad3e062d_SymbolTable> _100017_old = _self_.get()._field_file;
	__JULE_DEFER({
		_1ad380aeb_set_current_file(_self_.ptr(), _100017_old);
	});
	jule::Ptr<_1ad3e062d_SymbolTable> _100417_file = _1ad37c301_find_file(_self_.get()._field_files,_99951_ta.get()._field_token._field_file);
	if ((_100417_file != nullptr)) {
		_1ad380aeb_set_current_file(_self_.ptr(), _100417_file);
	}
	_99984_ok=_1ad384e74_check_type_with_refers(_self_, _99951_ta.get()._field_kind,_99971_l,jule::new_ptr<_1ad43a6de_Referencer>(_1ad43a6de_Referencer(_99951_ta.get()._field_ident,jule::Any(jule::Any(_99951_ta)),(&(_99951_ta.get()._field_refers)))));
	if ((_99984_ok && (_1ad42cb32_arr(_99951_ta.get()._field_kind.get()._field_kind.ptr()) != nullptr)) && _1ad42cb32_arr(_99951_ta.get()._field_kind.get()._field_kind.ptr()).get()._field_auto) {
		_1ad3810c4_push_err(_self_.ptr(), _99951_ta.get()._field_kind.get()._field_decl.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_99984_ok=false;
	}
	return _99984_ok;
}



inline void _1ad38a41e_check_type_alias_decl(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ad428996_TypeAlias>& _102046_ta,jule::Trait<_1ad447256_Lookup> _102066_l) {
	if (_1ab008314_is_ignore_ident(_102046_ta.get()._field_ident)) {
		_1ad3810c4_push_err(_self_.ptr(), _102046_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	_1ad38a034_check_type_alias_decl_kind(_self_, _102046_ta,_102066_l);
}



inline void _1ad38a782_check_type_alias_decl_dup(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ad428996_TypeAlias>& _102850_ta) {
	if (_1ad381eb5_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_102850_ta)),_102850_ta.get()._field_ident,_102850_ta.get()._field_cpp_linked)) {
		_1ad3810c4_push_err(_self_.ptr(), _102850_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_102850_ta.get()._field_ident)}));
		_1ad3814c0_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	_1ad38a034_check_type_alias_decl_kind(_self_, _102850_ta,jule::Trait<_1ad447256_Lookup>(_self_, 3));
}



inline jule::Bool _1ad38aa4b_check_type_alias_decls(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	jule::Bool _103744_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1b06578d7:;
		if (it != expr.end()) {
			jule::Ptr<_1ad428996_TypeAlias> _1b065795e_ta = *it;
			{
				_1ad38a782_check_type_alias_decl_dup(_self_, _1b065795e_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_103744_ok = false;
					return _103744_ok;
				}
			}
			_iter_next_1b06578d7:;
			++it;
			goto _iter_begin_1b06578d7;
		}
		_iter_end_1b06578d7:;
	}
	_103744_ok = true;
	return _103744_ok;
}



inline void _1ad38ad6a_check_enum_items_dup(_1ad37cd5c_Sema* _self_,jule::Ptr<_1ac724545_Enum> _104939_e) {
	{
		auto &expr = _104939_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1b0659565:;
		if (it != expr.end()) {
			jule::Ptr<_1ac692a57_EnumItem> &_1b0659631_item = *it;
			{
				if (_1ab008314_is_ignore_ident(_1b0659631_item.get()._field_ident)) {
					_1ad3810c4_push_err(&(*_self_), _1b0659631_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _104939_e.get()._field_items;
						auto it = expr.begin();
						_iter_begin_1b065ada2:;
						if (it != expr.end()) {
							jule::Ptr<_1ac692a57_EnumItem> &_1b065ae7e_citem = *it;
							{
								if (_1b0659631_item == _1b065ae7e_citem) {
									goto _iter_end_1b065ada2;
								} else if (_1b0659631_item.get()._field_ident == _1b065ae7e_citem.get()._field_ident) {
									_1ad3810c4_push_err(&(*_self_), _1b0659631_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1b0659631_item.get()._field_ident)}));
									_1ad3814c0_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1b065ada2;
								}
							}
							_iter_next_1b065ada2:;
							++it;
							goto _iter_begin_1b065ada2;
						}
						_iter_end_1b065ada2:;
					}
				}
			}
			_iter_next_1b0659565:;
			++it;
			goto _iter_begin_1b0659565;
		}
		_iter_end_1b0659565:;
	}
}



inline void _1ad38b189_check_enum_items_str(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac724545_Enum>& _106745_e) {
	{
		auto &expr = _106745_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1b06599e9:;
		if (it != expr.end()) {
			jule::Ptr<_1ac692a57_EnumItem> _1b065d1c3_item = *it;
			{
				if (_1ac746985_auto_expr(_1b065d1c3_item.ptr())) {
					_1b065d1c3_item.get()._field_value=jule::new_ptr<_1ad3e7c84_Value>(_1ad3e7c84_Value(jule::Ptr<_1aadb528c_Expr>(),jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__1ad2c25ed_new_str(_1b065d1c3_item.get()._field_ident)))));
					_1b065d1c3_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_1b065d1c3_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1ad3e6975_Data> _107725_d = _1ad418c83_eval_expr(_1ad386ecb_eval(_self_, jule::Trait<_1ad447256_Lookup>(_self_, 3)), _1b065d1c3_item.get()._field_value.get()._field_expr);
					if ((_107725_d == nullptr)) {
						goto _iter_next_1b06599e9;
					}
					if ((!(_1ad3e747b_is_const(_107725_d.ptr())))) {
						_1ad3810c4_push_err(_self_.ptr(), _1b065d1c3_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					_1ad387619_check_assign_type(_self_, false,_106745_e.get()._field_kind.get()._field_kind,_107725_d,_1b065d1c3_item.get()._field_token);
					_1b065d1c3_item.get()._field_value.get()._field_data=_107725_d;
				}
			}
			_iter_next_1b06599e9:;
			++it;
			goto _iter_begin_1b06599e9;
		}
		_iter_end_1b06599e9:;
	}
}



inline void _1ad38b4a8_check_enum_items_int(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac724545_Enum>& _109245_e) {
	jule::Ptr<_1ad42ec99_Prim> _109313_prim = _1ad42bec7_prim(_109245_e.get()._field_kind.get()._field_kind.ptr());
	jule::U64 _109417_max = static_cast<jule::U64>(_1ad34d58b_max(_1ad430173_to_str(_109313_prim.ptr())));
	{
		auto &expr = _109245_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1b0664aae:;
		if (it != expr.end()) {
			jule::I64 _1b0664cac_i = it - expr.begin();
			jule::Ptr<_1ac692a57_EnumItem> _1b0664e66_item = *it;
			{
				if ((_109417_max == 0LLU)) {
					_1ad3810c4_push_err(_self_.ptr(), _1b0664e66_item.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_109417_max)--;
				}
				if (_1ac746985_auto_expr(_1b0664e66_item.ptr())) {
					_1b0664e66_item.get()._field_value=jule::new_ptr<_1ad3e7c84_Value>(_1ad3e7c84_Value(jule::Ptr<_1aadb528c_Expr>(),jule::new_ptr<_1ad3e6975_Data>()));
					{
						
						if (_1ad3542a6_is_sig_int(_1ad430173_to_str(_109313_prim.ptr()))) {
							_case_begin_1b0667397:;
							{
								_1b0664e66_item.get()._field_value.get()._field_data.get()._field_constant=static__1ad2c20ae_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_109417_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_109417_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1b0664cac_i)))))))));
							}
						}
						else {
							_case_begin_1b0666dbe:;
							{
								_1b0664e66_item.get()._field_value.get()._field_data.get()._field_constant=static__1ad2c2224_new_u64(static_cast<jule::U64>(_109417_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_109417_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1b0664cac_i))))))));
							}
						}
						_match_end_1b0666d69:;
					}
					_1b0664e66_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_1b0664e66_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1ad3e6975_Data> _111325_d = _1ad418c83_eval_expr(_1ad386ecb_eval(_self_, jule::Trait<_1ad447256_Lookup>(_self_, 3)), _1b0664e66_item.get()._field_value.get()._field_expr);
					if ((_111325_d == nullptr)) {
						goto _iter_next_1b0664aae;
					}
					if ((!(_1ad3e747b_is_const(_111325_d.ptr())))) {
						_1ad3810c4_push_err(_self_.ptr(), _1b0664e66_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					_1ad387619_check_assign_type(_self_, false,_109245_e.get()._field_kind.get()._field_kind,_111325_d,_1b0664e66_item.get()._field_token);
					_1b0664e66_item.get()._field_value.get()._field_data=_111325_d;
				}
			}
			_iter_next_1b0664aae:;
			++it;
			_1b0664cac_i++;
			goto _iter_begin_1b0664aae;
		}
		_iter_end_1b0664aae:;
	}
}



inline void _1ad38b7c7_check_enum_decl(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac724545_Enum>& _112840_e) {
	if (_1ab008314_is_ignore_ident(_112840_e.get()._field_ident)) {
		_1ad3810c4_push_err(_self_.ptr(), _112840_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1ad381eb5_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_112840_e)),_112840_e.get()._field_ident,false)) {
		_1ad3810c4_push_err(_self_.ptr(), _112840_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_112840_e.get()._field_ident)}));
		_1ad3814c0_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((_112840_e.get()._field_items.len() == 0LL)) {
		_1ad3810c4_push_err(_self_.ptr(), _112840_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>({jule::Any(_112840_e.get()._field_ident)}));
	}
	_1ad38ad6a_check_enum_items_dup(_self_.ptr(), _112840_e);
	if ((_112840_e.get()._field_kind != nullptr)) {
		if ((!(_1ad385408_check_type(_self_, _112840_e.get()._field_kind,jule::Trait<_1ad447256_Lookup>(_self_, 3))))) {
			return;
		}
	} else {
		_112840_e.get()._field_kind=jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5)))));
	}
	jule::Ptr<_1ad42ec99_Prim> _115517_t = _1ad42bec7_prim(_112840_e.get()._field_kind.get()._field_kind.ptr());
	if ((_115517_t == nullptr)) {
		_1ad3810c4_push_err(_self_.ptr(), _112840_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;
	}
	{
		
		if (_1ad4334c8_is_str(_115517_t.ptr())) {
			_case_begin_1b06757b2:;
			{
				_1ad38b189_check_enum_items_str(_self_, _112840_e);
			}
		}
		else if (_1ad354916_is_int(_1ad430173_to_str(_115517_t.ptr()))) {
			_case_begin_1b0675828:;
			{
				_1ad38b4a8_check_enum_items_int(_self_, _112840_e);
			}
		}
		else {
			_case_begin_1b06725d3:;
			{
				_1ad3810c4_push_err(_self_.ptr(), _112840_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b0674a14:;
	}
}



inline jule::Bool _1ad38baa2_check_enum_decls(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	jule::Bool _117538_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_enums;
		auto it = expr.begin();
		_iter_begin_1b0678276:;
		if (it != expr.end()) {
			jule::Ptr<_1ac724545_Enum> _1b06782ed_e = *it;
			{
				_1ad38b7c7_check_enum_decl(_self_, _1b06782ed_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_117538_ok = false;
					return _117538_ok;
				}
			}
			_iter_next_1b0678276:;
			++it;
			goto _iter_begin_1b0678276;
		}
		_iter_end_1b0678276:;
	}
	_117538_ok = true;
	return _117538_ok;
}



inline jule::Bool _1ad38be59_check_decl_generics(_1ad37cd5c_Sema* _self_,jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>& _118739_generics) {
	jule::Bool _118772_ok = jule::Bool();
	_118772_ok=true;
	{
		auto &expr = _118739_generics;
		auto it = expr.begin();
		_iter_begin_1b067a146:;
		if (it != expr.end()) {
			jule::I64 _1b067a410_i = it - expr.begin();
			jule::Ptr<_1ab01c845_GenericDecl> &_1b067a652_g = *it;
			{
				if (_1ab008314_is_ignore_ident(_1b067a652_g.get()._field_ident)) {
					_1ad3810c4_push_err(&(*_self_), _1b067a652_g.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_118772_ok=false;
					goto _iter_next_1b067a146;
				}
				_julec_label_duplication_lookup:;
				{
					auto &expr = _118739_generics;
					auto it = expr.begin();
					_iter_begin_1b067bd29:;
					if (it != expr.end()) {
						jule::I64 _1b067bdc3_j = it - expr.begin();
						jule::Ptr<_1ab01c845_GenericDecl> &_1b067c148_ct = *it;
						{
							{
								
								if (_1b067bdc3_j >= _1b067a410_i) {
									_case_begin_1b067c852:;
									{
										goto _iter_end_1b067bd29;
									}
								}
								else if (_1b067a652_g.get()._field_ident == _1b067c148_ct.get()._field_ident) {
									_case_begin_1b067c8c9:;
									{
										_1ad3810c4_push_err(&(*_self_), _1b067a652_g.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1b067a652_g.get()._field_ident)}));
										_1ad3814c0_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_118772_ok=false;
										goto _iter_end_1b067bd29;
									}
								}
								_match_end_1b067c742:;
							}
						}
						_iter_next_1b067bd29:;
						++it;
						_1b067bdc3_j++;
						goto _iter_begin_1b067bd29;
					}
					_iter_end_1b067bd29:;
				}
			}
			_iter_next_1b067a146:;
			++it;
			_1b067a410_i++;
			goto _iter_begin_1b067a146;
		}
		_iter_end_1b067a146:;
	}
	return _118772_ok;
}



inline jule::Bool _1ad38c355_check_fn_decl_params_dup(_1ad37cd5c_Sema* _self_,jule::Ptr<_1ac676a08_Fn>& _121544_f) {
	jule::Bool _121554_ok = jule::Bool();
	_121554_ok=true;
	_julec_label_check:;
	{
		auto &expr = _121544_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1b0680c73:;
		if (it != expr.end()) {
			jule::I64 _1b0680e71_i = it - expr.begin();
			jule::Ptr<_1ac674bd2_Param> &_1b068114c_p = *it;
			{
				{
					auto &expr = _121544_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1b0681856:;
					if (it != expr.end()) {
						jule::Ptr<_1ab01c845_GenericDecl> &_1b0681922_g = *it;
						{
							if (_1b068114c_p.get()._field_ident == _1b0681922_g.get()._field_ident) {
								_121554_ok=false;
								_1ad3810c4_push_err(&(*_self_), _1b068114c_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1b068114c_p.get()._field_ident)}));
								_1ad3814c0_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1b0680c73;
							}
						}
						_iter_next_1b0681856:;
						++it;
						goto _iter_begin_1b0681856;
					}
					_iter_end_1b0681856:;
				}
				_julec_label_params_lookup:;
				{
					auto &expr = _121544_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1b0682181:;
					if (it != expr.end()) {
						jule::I64 _1b0681b75_j = it - expr.begin();
						jule::Ptr<_1ac674bd2_Param> &_1b0683a34_jp = *it;
						{
							{
								
								if (_1b0681b75_j >= _1b0680e71_i) {
									_case_begin_1b068423d:;
									{
										goto _iter_end_1b0682181;
									}
								}
								else if (_1ab008622_is_anon_ident(_1b068114c_p.get()._field_ident) || _1ab008622_is_anon_ident(_1b0683a34_jp.get()._field_ident)) {
									_case_begin_1b06842b5:;
									{
										goto _iter_end_1b0682181;
									}
								}
								else if (_1b068114c_p.get()._field_ident == _1b0683a34_jp.get()._field_ident) {
									_case_begin_1b068433c:;
									{
										_121554_ok=false;
										_1ad3810c4_push_err(&(*_self_), _1b068114c_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1b068114c_p.get()._field_ident)}));
										_1ad3814c0_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1b0680c73;
									}
								}
								_match_end_1b068411c:;
							}
						}
						_iter_next_1b0682181:;
						++it;
						_1b0681b75_j++;
						goto _iter_begin_1b0682181;
					}
					_iter_end_1b0682181:;
				}
			}
			_iter_next_1b0680c73:;
			++it;
			_1b0680e71_i++;
			goto _iter_begin_1b0680c73;
		}
		_iter_end_1b0680c73:;
	}
	return _121554_ok;
}



inline jule::Bool _1ad38c740_check_fn_decl_result_dup(_1ad37cd5c_Sema* _self_,jule::Ptr<_1ac676a08_Fn>& _124944_f) {
	jule::Bool _124954_ok = jule::Bool();
	_124954_ok=true;
	if (_1ac676ec0_is_void(_124944_f.ptr())) {
		return _124954_ok;
	}
	{
		auto &expr = _124944_f.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1b06880dd:;
		if (it != expr.end()) {
			jule::I64 _1b0688374_i = it - expr.begin();
			_1ab005531_Token &_1b0688594_v = *it;
			{
				if (_1ab008314_is_ignore_ident(_1b0688594_v._field_kind) || _1ab008622_is_anon_ident(_1b0688594_v._field_kind)) {
					goto _iter_next_1b06880dd;
				}
				{
					auto &expr = _124944_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1b068951d:;
					if (it != expr.end()) {
						jule::Ptr<_1ab01c845_GenericDecl> &_1b068984d_g = *it;
						{
							if (_1b0688594_v._field_kind == _1b068984d_g.get()._field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_1b068951d:;
						++it;
						goto _iter_begin_1b068951d;
					}
					_iter_end_1b068951d:;
				}
				{
					auto &expr = _124944_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1b068a8b5:;
					if (it != expr.end()) {
						jule::Ptr<_1ac674bd2_Param> &_1b068a9e7_p = *it;
						{
							if (_1b0688594_v._field_kind == _1b068a9e7_p.get()._field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_1b068a8b5:;
						++it;
						goto _iter_begin_1b068a8b5;
					}
					_iter_end_1b068a8b5:;
				}
				_julec_label_itself_lookup:;
				{
					auto &expr = _124944_f.get()._field_result.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1b068bb4c:;
					if (it != expr.end()) {
						jule::I64 _1b068bc4b_j = it - expr.begin();
						_1ab005531_Token &_1b068be8d_jv = *it;
						{
							{
								
								if (_1b068bc4b_j >= _1b0688374_i) {
									_case_begin_1b068c653:;
									{
										goto _iter_end_1b068bb4c;
									}
								}
								else if (_1b068be8d_jv._field_kind == _1b0688594_v._field_kind) {
									_case_begin_1b068c6ca:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1b068c543:;
							}
						}
						_iter_next_1b068bb4c:;
						++it;
						_1b068bc4b_j++;
						goto _iter_begin_1b068bb4c;
					}
					_iter_end_1b068bb4c:;
				}
				goto _iter_next_1b06880dd;
				_julec_label_exist:;
				_1ad3810c4_push_err(&(*_self_), _1b0688594_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1b0688594_v._field_kind)}));
				_1ad3814c0_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_124954_ok=false;
			}
			_iter_next_1b06880dd:;
			++it;
			_1b0688374_i++;
			goto _iter_begin_1b06880dd;
		}
		_iter_end_1b06880dd:;
	}
	return _124954_ok;
}



inline void _1ad38ca4d_check_fn_decl_types(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac676a08_Fn>& _129444_f) {
	jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>> _129517_generics = _129444_f.get()._field_generics;
	if ((_129444_f.get()._field_owner != nullptr) && (_129444_f.get()._field_owner.get()._field_generics.len() != 0LL)) {
		_129517_generics=jule::append(_129517_generics,_129444_f.get()._field_owner.get()._field_generics);
	}
	{
		auto &expr = _129444_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1b0692119:;
		if (it != expr.end()) {
			jule::Ptr<_1ac674bd2_Param> _1b0692229_p = *it;
			{
				if ((!(_1ac6753db_is_self(_1b0692229_p.ptr())))) {
					jule::Ptr<_1ad429931_TypeKind> _130225_kind = _1ad388186_build_non_generic_type_kind(_self_, _1b0692229_p.get()._field_kind.get()._field_decl,_129517_generics);
					_1b0692229_p.get()._field_kind.get()._field_kind=_130225_kind;
				}
			}
			_iter_next_1b0692119:;
			++it;
			goto _iter_begin_1b0692119;
		}
		_iter_end_1b0692119:;
	}
	if ((!(_1ac676ec0_is_void(_129444_f.ptr())))) {
		jule::Ptr<_1ad429931_TypeKind> _130821_kind = _1ad388186_build_non_generic_type_kind(_self_, _129444_f.get()._field_result.get()._field_kind.get()._field_decl,_129517_generics);
		_129444_f.get()._field_result.get()._field_kind.get()._field_kind=_130821_kind;
	}
}



inline void _1ad38cdb1_check_fn_decl_prototype(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac676a08_Fn>& _131548_f) {
	if (_131548_f.get()._field_exceptional && _131548_f.get()._field_cpp_linked) {
		_1ad3810c4_push_err(_self_.ptr(), _131548_f.get()._field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;
	}
	if (_131548_f.get()._field_exceptional) {
		if (_1ac677575_is_entry_point(_131548_f.ptr())) {
			_1ad3810c4_push_err(_self_.ptr(), _131548_f.get()._field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1ac677850_is_init(_131548_f.ptr())) {
			_1ad3810c4_push_err(_self_.ptr(), _131548_f.get()._field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		}
	}
	{
		
		if ((!(_1ad38be59_check_decl_generics(_self_.ptr(), _131548_f.get()._field_generics)))) {
			_case_begin_1b0698175:;
		}
		else if ((!(_1ad38c355_check_fn_decl_params_dup(_self_.ptr(), _131548_f)))) {
			_case_begin_1b06981db:;
		}
		else if ((!(_1ad38c740_check_fn_decl_result_dup(_self_.ptr(), _131548_f)))) {
			_case_begin_1b0698252:;
		}
		_match_end_1b069664b:;
	}
	_1ad38ca4d_check_fn_decl_types(_self_, _131548_f);
}



inline void _1ad38d213_check_trait_decl_method(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac676a08_Fn>& _133848_f) {
	if (_1ab008314_is_ignore_ident(_133848_f.get()._field_ident)) {
		_1ad3810c4_push_err(_self_.ptr(), _133848_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	_1ad38cdb1_check_fn_decl_prototype(_self_, _133848_f);
	_133848_f.get()._field_sema=_self_;
}



inline void _1ad38d565_check_trait_decl_methods(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac85d096_Trait>& _134749_t) {
	{
		auto &expr = _134749_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1b069c71d:;
		if (it != expr.end()) {
			jule::I64 _1b069c7d9_i = it - expr.begin();
			jule::Ptr<_1ac676a08_Fn> _1b069c9a4_f = *it;
			{
				_1ad38d213_check_trait_decl_method(_self_, _1b069c9a4_f);
				_134749_t.get()._field_mutable=_134749_t.get()._field_mutable || _1b069c9a4_f.get()._field_params[0LL].get()._field_mutable;
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _134749_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1b069e92e:;
					if (it != expr.end()) {
						jule::I64 _1b069e9ea_j = it - expr.begin();
						jule::Ptr<_1ac676a08_Fn> _1b069ebb5_jf = *it;
						{
							{
								
								if (_1b069e9ea_j >= _1b069c7d9_i) {
									_case_begin_1b06a037a:;
									{
										goto _iter_end_1b069e92e;
									}
								}
								else if (_1b069c9a4_f.get()._field_ident == _1b069ebb5_jf.get()._field_ident) {
									_case_begin_1b06a0402:;
									{
										_1ad3810c4_push_err(_self_.ptr(), _1b069c9a4_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1b069c9a4_f.get()._field_ident)}));
										_1ad3814c0_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1b069e92e;
									}
								}
								_match_end_1b06a026a:;
							}
						}
						_iter_next_1b069e92e:;
						++it;
						_1b069e9ea_j++;
						goto _iter_begin_1b069e92e;
					}
					_iter_end_1b069e92e:;
				}
			}
			_iter_next_1b069c71d:;
			++it;
			_1b069c7d9_i++;
			goto _iter_begin_1b069c71d;
		}
		_iter_end_1b069c71d:;
	}
}



inline void _1ad38d873_check_trait_decl(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac85d096_Trait>& _137841_t) {
	if (_1ab008314_is_ignore_ident(_137841_t.get()._field_ident)) {
		_1ad3810c4_push_err(_self_.ptr(), _137841_t.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1ad381eb5_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_137841_t)),_137841_t.get()._field_ident,false)) {
		_1ad3810c4_push_err(_self_.ptr(), _137841_t.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_137841_t.get()._field_ident)}));
		_1ad3814c0_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	_1ad38d565_check_trait_decl_methods(_self_, _137841_t);
}



inline jule::Bool _1ad38db4d_check_trait_decls(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	jule::Bool _139039_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1b06a656d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac85d096_Trait> _1b06a65e5_t = *it;
			{
				_1ad38d873_check_trait_decl(_self_, _1b06a65e5_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_139039_ok = false;
					return _139039_ok;
				}
			}
			_iter_next_1b06a656d:;
			++it;
			goto _iter_begin_1b06a656d;
		}
		_iter_end_1b06a656d:;
	}
	_139039_ok = true;
	return _139039_ok;
}



inline jule::Bool _1ad38e126_check_trait_impl_methods(_1ad37cd5c_Sema* _self_,jule::Ptr<_1ac85d096_Trait>& _140248_base,jule::Ptr<_1ac76d3b3_Impl>& _140263_ipl) {
	jule::Bool _140277_ok = jule::Bool();
	_140277_ok=true;
	{
		auto &expr = _140263_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1b06a8718:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> &_1b06a8b9c_f = *it;
			{
				if ((_1ac702842_find_method(_140248_base.ptr(), _1b06a8b9c_f.get()._field_ident) == nullptr)) {
					_1ad3810c4_push_err(&(*_self_), _1b06a8b9c_f.get()._field_token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>({jule::Any(_140248_base.get()._field_ident),jule::Any(_1b06a8b9c_f.get()._field_ident)}));
					_140277_ok=false;
				}
			}
			_iter_next_1b06a8718:;
			++it;
			goto _iter_begin_1b06a8718;
		}
		_iter_end_1b06a8718:;
	}
	return _140277_ok;
}



inline jule::Bool _1ad38e599_impl_to_struct(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac661075_Struct>& _141339_dest,jule::Ptr<_1ac76d3b3_Impl>& _141359_ipl) {
	jule::Bool _141373_ok = jule::Bool();
	_141373_ok=true;
	{
		auto &expr = _141359_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1b06ab72c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1b06abbb1_f = *it;
			{
				if ((_1ac661d56_find_method(_141339_dest.ptr(), _1b06abbb1_f.get()._field_ident,_1b06abbb1_f.get()._field_statically) != nullptr) || (_1ac6625b5_find_field(_141339_dest.ptr(), _1b06abbb1_f.get()._field_ident) != nullptr)) {
					_1ad3810c4_push_err(_self_.ptr(), _1b06abbb1_f.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>({jule::Any(_141339_dest.get()._field_ident),jule::Any(_1b06abbb1_f.get()._field_ident)}));
					_141373_ok=false;
					goto _iter_next_1b06ab72c;
				}
				if ((_141339_dest.get()._field_generics.len() > 0LL) && (_1b06abbb1_f.get()._field_generics.len() > 0LL)) {
					{
						auto &expr = _1b06abbb1_f.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1b06ae93e:;
						if (it != expr.end()) {
							jule::Ptr<_1ab01c845_GenericDecl> _1b06aea0a_fg = *it;
							{
								{
									auto &expr = _141339_dest.get()._field_generics;
									auto it = expr.begin();
									_iter_begin_1b06b019d:;
									if (it != expr.end()) {
										jule::Ptr<_1ab01c845_GenericDecl> _1b06b0269_dg = *it;
										{
											if (_1b06aea0a_fg.get()._field_ident == _1b06b0269_dg.get()._field_ident) {
												_1ad3810c4_push_err(_self_.ptr(), _1b06aea0a_fg.get()._field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_141373_ok=false;
											}
										}
										_iter_next_1b06b019d:;
										++it;
										goto _iter_begin_1b06b019d;
									}
									_iter_end_1b06b019d:;
								}
							}
							_iter_next_1b06ae93e:;
							++it;
							goto _iter_begin_1b06ae93e;
						}
						_iter_end_1b06ae93e:;
					}
				}
				_1ad3823b1_check_directives(_self_, _1b06abbb1_f.get()._field_directives,jule::Any(_1b06abbb1_f));
				_1b06abbb1_f.get()._field_sema=_self_;
				_1b06abbb1_f.get()._field_owner=_141339_dest;
				_141339_dest.get()._field_methods = jule::alloc_for_append(_141339_dest.get()._field_methods,1);_141339_dest.get()._field_methods.__push(_1b06abbb1_f);
			}
			_iter_next_1b06ab72c:;
			++it;
			goto _iter_begin_1b06ab72c;
		}
		_iter_end_1b06ab72c:;
	}
	{
		auto &expr = _141359_ipl.get()._field_statics;
		auto it = expr.begin();
		_iter_begin_1b06abcd2:;
		if (it != expr.end()) {
			jule::Ptr<_1ad39e037_Var> _1b06abd26_v = *it;
			{
				
				if ((_1ac661d56_find_method(_141339_dest.ptr(), _1b06abd26_v.get()._field_ident,true) != nullptr) || (_1ac66220d_find_static(_141339_dest.ptr(), _1b06abd26_v.get()._field_ident) != nullptr)) {
					_1ad3810c4_push_err(_self_.ptr(), _1b06abd26_v.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>({jule::Any(_141339_dest.get()._field_ident),jule::Any(_1b06abd26_v.get()._field_ident)}));
					_141373_ok=false;
					goto _iter_next_1b06abcd2;
				}
				_1ad390402_check_var_decl(_self_, _1b06abd26_v,jule::Trait<_1ad447256_Lookup>(_self_, 3));
				_1ad39555b_check_type_var(_self_, _1b06abd26_v,jule::Trait<_1ad447256_Lookup>(_self_, 3));
				_141339_dest.get()._field_statics = jule::alloc_for_append(_141339_dest.get()._field_statics,1);_141339_dest.get()._field_statics.__push(_1b06abd26_v);
			}
			_iter_next_1b06abcd2:;
			++it;
			goto _iter_begin_1b06abcd2;
		}
		_iter_end_1b06abcd2:;
	}
	return _141373_ok;
}



inline void _1ad38e8b8_impl_trait(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac76d3b3_Impl>& _145835_decl) {
	jule::Ptr<_1ad429931_TypeKind> _145917_base_t = _1ad38612e_select_type(_self_, _145835_decl.get()._field_base);
	if ((_145917_base_t == nullptr)) {
		return;
	}
	jule::Ptr<_1ac85d096_Trait> _146317_base = _1ad42d78c_trt(_145917_base_t.ptr());
	if ((_146317_base == nullptr)) {
		_1ad3810c4_push_err(_self_.ptr(), _145835_decl.get()._field_base.get()._field_token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_145917_base_t.ptr()))}));
		_1ad3814c0_push_suggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1ad429931_TypeKind> _147017_dest_t = _1ad38612e_select_type(_self_, _145835_decl.get()._field_dest);
	if ((_147017_dest_t == nullptr)) {
		return;
	}
	jule::Ptr<_1ac664551_StructIns> _147417_dest_s = _1ad42d4b2_strct(_147017_dest_t.ptr());
	if ((_147417_dest_s == nullptr)) {
		_1ad3810c4_push_err(_self_.ptr(), _145835_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_147017_dest_t.ptr()))}));
		_1ad3814c0_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1ac661075_Struct> _148117_dest = _147417_dest_s.get()._field_decl;
	if (_1ab00c1e7_dir(_148117_dest.get()._field_token._field_file.ptr()) != _1ab00c1e7_dir(_self_.get()._field_file.get()._field_file.ptr())) {
		_1ad3810c4_push_err(_self_.ptr(), _145835_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	_146317_base.get()._field_implemented = jule::alloc_for_append(_146317_base.get()._field_implemented,1);_146317_base.get()._field_implemented.__push(_148117_dest);
	_148117_dest.get()._field_implements = jule::alloc_for_append(_148117_dest.get()._field_implements,1);_148117_dest.get()._field_implements.__push(_146317_base);
	if ((_145835_decl.get()._field_statics.len() > 0LL)) {
		_1ad3810c4_push_err(_self_.ptr(), _145835_decl.get()._field_statics[0LL].get()._field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	}
	{
		
		if ((!(_1ad38e126_check_trait_impl_methods(_self_.ptr(), _146317_base,_145835_decl)))) {
			_case_begin_1b06c090b:;
			{
				return;
			}
		}
		else if ((!(_1ad38e599_impl_to_struct(_self_, _148117_dest,_145835_decl)))) {
			_case_begin_1b06c0be7:;
			{
				return;
			}
		}
		_match_end_1b06bd541:;
	}
}



inline void _1ad38ebd7_impl_struct(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac76d3b3_Impl>& _150136_decl) {
	jule::Ptr<_1ad429931_TypeKind> _150217_dest_t = _1ad38612e_select_type(_self_, _150136_decl.get()._field_dest);
	if ((_150217_dest_t == nullptr)) {
		return;
	}
	jule::Ptr<_1ac664551_StructIns> _150617_dest_s = _1ad42d4b2_strct(_150217_dest_t.ptr());
	if ((_150617_dest_s == nullptr)) {
		_1ad3810c4_push_err(_self_.ptr(), _150136_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_150217_dest_t.ptr()))}));
		_1ad3814c0_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1ac661075_Struct> _151317_dest = _150617_dest_s.get()._field_decl;
	if (_1ab00c1e7_dir(_151317_dest.get()._field_token._field_file.ptr()) != _1ab00c1e7_dir(_self_.get()._field_file.get()._field_file.ptr())) {
		_1ad3810c4_push_err(_self_.ptr(), _150136_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	{
		
		if ((!(_1ad38e599_impl_to_struct(_self_, _151317_dest,_150136_decl)))) {
			_case_begin_1b06c60b5:;
			{
				return;
			}
		}
		_match_end_1b06c6615:;
	}
}



inline void _1ad390006_impl_impl(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac76d3b3_Impl>& _152634_decl) {
	{
		
		if (_1ac950276_is_trait_impl(_152634_decl.ptr())) {
			_case_begin_1b06c7acd:;
			{
				_1ad38e8b8_impl_trait(_self_, _152634_decl);
			}
		}
		else if (_1ac98d55b_is_struct_impl(_152634_decl.ptr())) {
			_case_begin_1b06c7b55:;
			{
				_1ad38ebd7_impl_struct(_self_, _152634_decl);
			}
		}
		_match_end_1b06c79e0:;
	}
}



inline void _1ad390402_check_var_decl(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ad39e037_Var>& _153739_decl,jule::Trait<_1ad447256_Lookup> _153755_l) {
	if (_1ab008314_is_ignore_ident(_153739_decl.get()._field_ident)) {
		_1ad3810c4_push_err(_self_.ptr(), _153739_decl.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	if (_1ad39e730_is_type_inferred(_153739_decl.ptr())) {
		if ((!(_1ad39e455_is_initialized(_153739_decl.ptr())))) {
			_1ad3810c4_push_err(_self_.ptr(), _153739_decl.get()._field_token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		}
	} else {
		_1ad385408_check_type(_self_, _153739_decl.get()._field_kind,_153755_l);
	}
	if (_153739_decl.get()._field_constant && _153739_decl.get()._field_reference) {
		_1ad3810c4_push_err(_self_.ptr(), _153739_decl.get()._field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	}
	if ((!(_1ad39e455_is_initialized(_153739_decl.ptr())))) {
		if (_153739_decl.get()._field_constant) {
			_1ad3810c4_push_err(_self_.ptr(), _153739_decl.get()._field_token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		}
		if (_153739_decl.get()._field_statically) {
			_1ad3810c4_push_err(_self_.ptr(), _153739_decl.get()._field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		}
		if (_153739_decl.get()._field_reference) {
			_1ad3810c4_push_err(_self_.ptr(), _153739_decl.get()._field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		}
	}
}



inline void _1ad390721_check_global_var_decl(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ad39e037_Var>& _157146_decl) {
	if (_1ad381eb5_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_157146_decl)),_157146_decl.get()._field_ident,_157146_decl.get()._field_cpp_linked)) {
		_1ad3810c4_push_err(_self_.ptr(), _157146_decl.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_157146_decl.get()._field_ident)}));
		_1ad3814c0_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if (_157146_decl.get()._field_cpp_linked && _157146_decl.get()._field_constant) {
		_1ad3810c4_push_err(_self_.ptr(), _157146_decl.get()._field_token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	}
	if (((!(_157146_decl.get()._field_cpp_linked)) && (!(_157146_decl.get()._field_constant))) && (!(_157146_decl.get()._field_statically))) {
		_1ad3810c4_push_err(_self_.ptr(), _157146_decl.get()._field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1ad3814c0_push_suggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	}
	_1ad3823b1_check_directives(_self_, _157146_decl.get()._field_directives,jule::Any(_157146_decl));
	_1ad390402_check_var_decl(_self_, _157146_decl,jule::Trait<_1ad447256_Lookup>(_self_, 3));
}



inline jule::Bool _1ad3909eb_check_global_decls(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	jule::Bool _159040_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1b06d6c0d:;
		if (it != expr.end()) {
			jule::Ptr<_1ad39e037_Var> _1b06d6c85_decl = *it;
			{
				_1ad390721_check_global_var_decl(_self_, _1b06d6c85_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_159040_ok = false;
					return _159040_ok;
				}
			}
			_iter_next_1b06d6c0d:;
			++it;
			goto _iter_begin_1b06d6c0d;
		}
		_iter_end_1b06d6c0d:;
	}
	_159040_ok = true;
	return _159040_ok;
}



inline jule::Bool _1ad390ec4_check_struct_trait_impl(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac661075_Struct>& _160248_strct,jule::Ptr<_1ac85d096_Trait>& _160269_trt) {
	jule::Bool _160284_ok = jule::Bool();
	{
		auto &expr = _160269_trt.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1b06d90d9:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1b06d91a5_tf = *it;
			{
				jule::Bool _160421_exist = false;
				jule::Ptr<_1ac676a08_Fn> _160521_sf = _1ac661d56_find_method(_160248_strct.ptr(), _1b06d91a5_tf.get()._field_ident,_1b06d91a5_tf.get()._field_statically);
				jule::Ptr<_1ac67a501_FnIns> _160617_tf_k = _1ad3888c3_get_trait_check_fn_kind(_self_, _1b06d91a5_tf);
				if ((_160521_sf != nullptr)) {
					jule::Ptr<_1ac67a501_FnIns> _160825_sf_k = _1ad3888c3_get_trait_check_fn_kind(_self_, _160521_sf);
					_160421_exist=((_160617_tf_k.get()._field_decl.get()._field_public == _160825_sf_k.get()._field_decl.get()._field_public) && (_160617_tf_k.get()._field_decl.get()._field_ident == _160825_sf_k.get()._field_decl.get()._field_ident)) && _1ac67ac82_equals(_160617_tf_k, jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_160825_sf_k, 1))));
				}
				if (_160421_exist) {
					jule::Ptr<_1aaeaeb7d_Directive> _161621_d = _1ad4232ba_find_directive(_160521_sf.get()._field_directives,jule::Str("deprecated", 10));
					if ((_161621_d != nullptr)) {
						_1ad3810c4_push_err(_self_.ptr(), _161621_d.get()._field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					}
					_160284_ok=false;
				} else {
					
					jule::Str _162325_s = _1ac67bbb7_get_kind_str(_160617_tf_k.ptr(), true);
					if (_1b06d91a5_tf.get()._field_public) {
						(_162325_s).buffer.insert(0, (jule::Str("pub ", 4)));
					}
					_1ad3810c4_push_err(_self_.ptr(), _160248_strct.get()._field_token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>({jule::Any(_160269_trt.get()._field_ident),jule::Any(_162325_s)}));
					_160284_ok=false;
				}
			}
			_iter_next_1b06d90d9:;
			++it;
			goto _iter_begin_1b06d90d9;
		}
		_iter_end_1b06d90d9:;
	}
	return _160284_ok;
}



inline jule::Bool _1ad39136a_check_struct_impls(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac661075_Struct>& _163443_s) {
	jule::Bool _163457_ok = jule::Bool();
	_163457_ok=true;
	{
		auto &expr = _163443_s.get()._field_implements;
		auto it = expr.begin();
		_iter_begin_1b06e1e7c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac85d096_Trait> _1b06e2323_trt = *it;
			{
				_163457_ok=_1ad390ec4_check_struct_trait_impl(_self_, _163443_s,_1b06e2323_trt) && _163457_ok;
			}
			_iter_next_1b06e1e7c:;
			++it;
			goto _iter_begin_1b06e1e7c;
		}
		_iter_end_1b06e1e7c:;
	}
	return _163457_ok;
}



inline jule::Bool _1ad391722_check_struct_fields(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac661075_Struct>& _164244_st) {
	jule::Bool _164259_ok = jule::Bool();
	_164259_ok=true;
	jule::Ptr<_1ad43b635_TypeChecker> _164517_tc = jule::new_ptr<_1ad43b635_TypeChecker>(_1ad43b635_TypeChecker(_self_,jule::Trait<_1ad447256_Lookup>(_self_, 3),jule::new_ptr<_1ad43a6de_Referencer>(_1ad43a6de_Referencer(_164244_st.get()._field_ident,jule::Any(jule::Any(_164244_st)),nullptr)),_1ab005531_Token(),_164244_st.get()._field_generics,jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1ad428996_TypeAlias>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>(),jule::Bool()));
	jule::I64 _165513_n = _164244_st.get()._field_instances.len();
	{
		auto &expr = _164244_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1b06e4e4c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac65ca77_Field> _1b06e514a_f = *it;
			{
				_1b06e514a_f.get()._field_owner=_164244_st;
				_1b06e514a_f.get()._field_kind.get()._field_kind=_1ad444330_check_decl(_164517_tc.ptr(), _1b06e514a_f.get()._field_kind.get()._field_decl);
				_164259_ok=(_1b06e514a_f.get()._field_kind.get()._field_kind != nullptr) && _164259_ok;
				{
					auto &expr = _164244_st.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1b06e6bc9:;
					if (it != expr.end()) {
						jule::Ptr<_1ac65ca77_Field> _1b06e6cb7_cf = *it;
						{
							if (_1b06e514a_f == _1b06e6cb7_cf) {
								goto _iter_end_1b06e6bc9;
							} else if (_1b06e514a_f.get()._field_ident == _1b06e6cb7_cf.get()._field_ident) {
								_1ad3810c4_push_err(_self_.ptr(), _1b06e514a_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1b06e514a_f.get()._field_ident)}));
								_1ad3814c0_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_164259_ok=false;
							}
						}
						_iter_next_1b06e6bc9:;
						++it;
						goto _iter_begin_1b06e6bc9;
					}
					_iter_end_1b06e6bc9:;
				}
			}
			_iter_next_1b06e4e4c:;
			++it;
			goto _iter_begin_1b06e4e4c;
		}
		_iter_end_1b06e4e4c:;
	}
	if (_164259_ok && (_165513_n != static_cast<jule::I64>(static_cast<jule::I64>(_164244_st.get()._field_instances.len())))) {
		_164517_tc.get()._field_referencer=nullptr;
		_164244_st.get()._field_instances=_164244_st.get()._field_instances.slice(0LL,_165513_n);
		{
			auto &expr = _164244_st.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1b06e736c:;
			if (it != expr.end()) {
				jule::Ptr<_1ac65ca77_Field> _1b06e9616_f = *it;
				{
					_1b06e9616_f.get()._field_kind.get()._field_kind=_1ad444330_check_decl(_164517_tc.ptr(), _1b06e9616_f.get()._field_kind.get()._field_decl);
				}
				_iter_next_1b06e736c:;
				++it;
				goto _iter_begin_1b06e736c;
			}
			_iter_end_1b06e736c:;
		}
	}
	return _164259_ok;
}



inline jule::Bool _1ad391b1d_check_struct_decl_methods(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac661075_Struct>& _168450_s) {
	jule::Bool _168464_ok = jule::Bool();
	{
		auto &expr = _168450_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1b06eb63a:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1b06eb706_m = *it;
			{
				_1ad38ca4d_check_fn_decl_types(_self_, _1b06eb706_m);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_168464_ok = false;
					return _168464_ok;
				}
			}
			_iter_next_1b06eb63a:;
			++it;
			goto _iter_begin_1b06eb63a;
		}
		_iter_end_1b06eb63a:;
	}
	_168464_ok = true;
	return _168464_ok;
}



inline void _1ad391e2b_check_struct_decl(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac661075_Struct>& _169442_s) {
	if (_1ab008314_is_ignore_ident(_169442_s.get()._field_ident)) {
		_1ad3810c4_push_err(_self_.ptr(), _169442_s.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1ad381eb5_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_169442_s)),_169442_s.get()._field_ident,_169442_s.get()._field_cpp_linked)) {
		_1ad3810c4_push_err(_self_.ptr(), _169442_s.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_169442_s.get()._field_ident)}));
		_1ad3814c0_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	_1ad3823b1_check_directives(_self_, _169442_s.get()._field_directives,jule::Any(_169442_s));
	_169442_s.get()._field_sema=_self_;
	{
		
		if ((!(_1ad38be59_check_decl_generics(_self_.ptr(), _169442_s.get()._field_generics)))) {
			_case_begin_1ad784890:;
		}
		else if ((!(_1ad391722_check_struct_fields(_self_, _169442_s)))) {
			_case_begin_1ad784906:;
		}
		else if ((!(_1ad391b1d_check_struct_decl_methods(_self_, _169442_s)))) {
			_case_begin_1ad78496c:;
		}
		else if ((!(_1ad39136a_check_struct_impls(_self_, _169442_s)))) {
			_case_begin_1ad7849d3:;
		}
		_match_end_1ad780616:;
	}
}



inline jule::Bool _1ad392206_check_struct_decls(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	jule::Bool _171440_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1b0538aa4:;
		if (it != expr.end()) {
			jule::Ptr<_1ac661075_Struct> _1b0538b1a_s = *it;
			{
				_1ad391e2b_check_struct_decl(_self_, _1b0538b1a_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_171440_ok = false;
					return _171440_ok;
				}
			}
			_iter_next_1b0538aa4:;
			++it;
			goto _iter_begin_1b0538aa4;
		}
		_iter_end_1b0538aa4:;
	}
	_171440_ok = true;
	return _171440_ok;
}



inline void _1ad392525_check_fn_decl(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac676a08_Fn>& _172738_f) {
	if (_1ab008314_is_ignore_ident(_172738_f.get()._field_ident)) {
		_1ad3810c4_push_err(_self_.ptr(), _172738_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	_1ad3823b1_check_directives(_self_, _172738_f.get()._field_directives,jule::Any(_172738_f));
	_172738_f.get()._field_sema=_self_;
	_1ad38cdb1_check_fn_decl_prototype(_self_, _172738_f);
	if (_1ad381eb5_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_172738_f)),_172738_f.get()._field_ident,_172738_f.get()._field_cpp_linked)) {
		if ((_172738_f.get()._field_ident == jule::Str("init", 4))) {
			jule::Ptr<_1ac676a08_Fn> _173921_init = _1ad37eaea_find_fn(_self_.ptr(), jule::Str("init", 4),false);
			if ((_173921_init != nullptr)) {
				return;
			}
		}
		_1ad3810c4_push_err(_self_.ptr(), _172738_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_172738_f.get()._field_ident)}));
		_1ad3814c0_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
}



inline jule::Bool _1ad392800_check_fn_decls(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	jule::Bool _175036_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1b054046d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1b05404e5_f = *it;
			{
				_1ad392525_check_fn_decl(_self_, _1b05404e5_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_175036_ok = false;
					return _175036_ok;
				}
			}
			_iter_next_1b054046d:;
			++it;
			goto _iter_begin_1b054046d;
		}
		_iter_end_1b054046d:;
	}
	_175036_ok = true;
	return _175036_ok;
}



inline void _1ad392cc8_push_cycle_error(_1ad37cd5c_Sema* _self_,jule::Ptr<_1ac661075_Struct>& _176232_st1,jule::Ptr<_1ac661075_Struct>& _176247_st2,jule::Str& _176266_message) {
	
	jule::Str _176513_refers_to = _1a92a36b0_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_176232_st1.get()._field_ident),jule::Any(_176247_st2.get()._field_ident)}));
	(_176266_message).buffer.insert(0, (((_1a902da23_repeat(jule::Str(" ", 1),4LL) + _176513_refers_to) + jule::Str("\n", 1))));
}



inline jule::Bool _1ad393339_check_cross_cycle(_1ad37cd5c_Sema* _self_,jule::Ptr<_1ac661075_Struct>& _176933_st1,jule::Ptr<_1ac661075_Struct>& _176948_st2,jule::Str& _176967_message) {
	{
		auto &expr = _176948_st2.get()._field_uses;
		auto it = expr.begin();
		_iter_begin_1b0544d9b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac661075_Struct> &_1b0544e9a_u = *it;
			{
				if (_1b0544e9a_u == _176933_st1) {
					_1ad392cc8_push_cycle_error(&(*_self_), _176948_st2,_1b0544e9a_u,_176967_message);
					return false;
				}
				if ((!(_1ad393339_check_cross_cycle(&(*_self_), _176933_st1,_1b0544e9a_u,_176967_message)))) {
					_1ad392cc8_push_cycle_error(&(*_self_), _176948_st2,_1b0544e9a_u,_176967_message);
					return false;
				}
			}
			_iter_next_1b0544d9b:;
			++it;
			goto _iter_begin_1b0544d9b;
		}
		_iter_end_1b0544d9b:;
	}
	return true;
}



inline jule::Bool _1ad393911_check_struct_derive_illegal_cycles(_1ad37cd5c_Sema* _self_,jule::Str _178553_derive,jule::Ptr<_1ac661075_Struct>& _178567_st1,jule::Ptr<_1ad429931_TypeKind>& _178586_k) {
	jule::Bool _1785102_ok = jule::Bool();
	jule::Ptr<_1ac661075_Struct> _178617_st2 = _1ad439e3b_get_struct_from_kind(_178586_k);
	if ((_178617_st2 == nullptr)) {
		_1785102_ok = true;
		return _1785102_ok;
	}
	if (_178567_st1 == _178617_st2) {
		_1ad3810c4_push_err(&(*_self_), _178567_st1.get()._field_token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>({jule::Any(_178553_derive),jule::Any(_178567_st1.get()._field_ident)}));
		_1785102_ok = false;
		return _1785102_ok;
	}
	jule::Str _179817_message = jule::Str();
	if ((!(_1ad393339_check_cross_cycle(&(*_self_), _178567_st1,_178617_st2,_179817_message)))) {
		jule::Str _180121_err_msg = _179817_message;
		_179817_message=jule::Str();
		_1ad392cc8_push_cycle_error(&(*_self_), _178567_st1,_178617_st2,_179817_message);
		_180121_err_msg=_180121_err_msg + _179817_message;
		_1ad3810c4_push_err(&(*_self_), _178567_st1.get()._field_token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>({jule::Any(_178553_derive),jule::Any(_180121_err_msg)}));
		_1785102_ok = false;
		return _1785102_ok;
	}
	_1785102_ok = true;
	return _1785102_ok;
}



inline jule::Bool _1ad393cc9_check_struct_ins_derive_clone(_1ad37cd5c_Sema* _self_,jule::Ptr<_1ac664551_StructIns> _181252_st) {
	jule::Bool _181270_ok = jule::Bool();
	if ((!(_1ac662d24_is_derives(_181252_st.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
		_181270_ok = true;
		return _181270_ok;
	}
	{
		auto &expr = _181252_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1b054d24a:;
		if (it != expr.end()) {
			jule::Ptr<_1ac663a06_FieldIns> _1b054d613_f = *it;
			{
				if ((_1b054d613_f.get()._field_kind == nullptr)) {
					goto _iter_next_1b054d24a;
				}
				if ((!(_1ad42b922_supports_cloning(_1b054d613_f.get()._field_kind.ptr())))) {
					_1ad3810c4_push_err(&(*_self_), _181252_st.get()._field_decl.get()._field_token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_1b054d613_f.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_181270_ok = false;
					return _181270_ok;
				}
				if ((!(_1ad393911_check_struct_derive_illegal_cycles(&(*_self_), jule::Str("Clone", 5),_181252_st.get()._field_decl,_1b054d613_f.get()._field_kind)))) {
					_181270_ok = false;
					return _181270_ok;
				}
			}
			_iter_next_1b054d24a:;
			++it;
			goto _iter_begin_1b054d24a;
		}
		_iter_end_1b054d24a:;
	}
	_181270_ok = true;
	return _181270_ok;
}



inline jule::Bool _1ad3941b4_check_struct_derive_clone(_1ad37cd5c_Sema* _self_,jule::Ptr<_1ac661075_Struct>& _183549_st) {
	return _1ad393cc9_check_struct_ins_derive_clone(&(*_self_), _1ac66151a_instance(_183549_st));
}



inline jule::Bool _1ad39447d_check_file_derives(_1ad37cd5c_Sema* _self_) {
	jule::Bool _183939_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1b05532c7:;
		if (it != expr.end()) {
			jule::Ptr<_1ac661075_Struct> _1b055334e_st = *it;
			{
				_183939_ok=_1ad3941b4_check_struct_derive_clone(&(*_self_), _1b055334e_st);
				if ((!(_183939_ok))) {
					goto _iter_end_1b05532c7;
				}
			}
			_iter_next_1b05532c7:;
			++it;
			goto _iter_begin_1b05532c7;
		}
		_iter_end_1b05532c7:;
	}
	return _183939_ok;
}



inline void _1ad3946c0_check_package_derives(_1ad37cd5c_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1b05545d6:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b05546e6_f = *it;
			{
				_1ad380aeb_set_current_file(&(*_self_), _1b05546e6_f);
				jule::Bool _185417_ok = _1ad39447d_check_file_derives(&(*_self_));
				if ((!(_185417_ok))) {
					return;
				}
			}
			_iter_next_1b05545d6:;
			++it;
			goto _iter_begin_1b05545d6;
		}
		_iter_end_1b05545d6:;
	}
}



inline void _1ad394912_check_package_decls(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b0556066:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b0556253_f = *it;
			{
				_1ad380aeb_set_current_file(_self_.ptr(), _1b0556253_f);
				if ((!(_1ad38aa4b_check_type_alias_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1b0556066:;
			++it;
			goto _iter_begin_1b0556066;
		}
		_iter_end_1b0556066:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b05563c9:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b05564d9_f = *it;
			{
				_1ad380aeb_set_current_file(_self_.ptr(), _1b05564d9_f);
				if ((!(_1ad38db4d_check_trait_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1b05563c9:;
			++it;
			goto _iter_begin_1b05563c9;
		}
		_iter_end_1b05563c9:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b0557463:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b05575a6_f = *it;
			{
				_1ad380aeb_set_current_file(_self_.ptr(), _1b05575a6_f);
				if ((!(_1ad3909eb_check_global_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1b0557463:;
			++it;
			goto _iter_begin_1b0557463;
		}
		_iter_end_1b0557463:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b0558442:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b0558552_f = *it;
			{
				_1ad380aeb_set_current_file(_self_.ptr(), _1b0558552_f);
				if ((!(_1ad392800_check_fn_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1b0558442:;
			++it;
			goto _iter_begin_1b0558442;
		}
		_iter_end_1b0558442:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b0559388:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b05594cb_f = *it;
			{
				_1ad380aeb_set_current_file(_self_.ptr(), _1b05594cb_f);
				if ((!(_1ad392206_check_struct_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1b0559388:;
			++it;
			goto _iter_begin_1b0559388;
		}
		_iter_end_1b0559388:;
	}
	_1ad3946c0_check_package_derives(_self_.ptr());
}



inline void _1ad394d52_check_data_for_type_inference(_1ad37cd5c_Sema* _self_,jule::Ptr<_1ad3e6975_Data>& _190249_d,_1ab005531_Token& _190260_err_token) {
	{
		
		if (_1ad3e6dc6_is_nil(_190249_d.ptr())) {
			_case_begin_1b055c105:;
			{
				_1ad3810c4_push_err(&(*_self_), _190260_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1ad3e71a1_is_void(_190249_d.ptr())) {
			_case_begin_1b055c17c:;
			{
				_1ad3810c4_push_err(&(*_self_), _190260_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_190249_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1b055c204:;
			{
				_1ad3810c4_push_err(&(*_self_), _190260_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b055c017:;
	}
}



inline void _1ad395160_check_var(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ad39e037_Var>& _191334_v) {
	if (_191334_v.get()._field_cpp_linked) {
		return;
	}
	if (_1ad39e730_is_type_inferred(_191334_v.ptr())) {
		_191334_v.get()._field_kind=jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),_191334_v.get()._field_value.get()._field_data.get()._field_kind));
		_1ad394d52_check_data_for_type_inference(_self_.ptr(), _191334_v.get()._field_value.get()._field_data,_191334_v.get()._field_value.get()._field_expr.get()._field_token);
	} else {
		jule::Ptr<_1ad436da0_Arr> _192421_arr = _1ad42cb32_arr(_191334_v.get()._field_kind.get()._field_kind.ptr());
		if ((_192421_arr != nullptr)) {
			if (_192421_arr.get()._field_auto) {
				jule::Ptr<_1ad436da0_Arr> _192725_data_arr = _1ad42cb32_arr(_191334_v.get()._field_value.get()._field_data.get()._field_kind.ptr());
				if ((_192725_data_arr != nullptr)) {
					_192421_arr.get()._field_n=_192725_data_arr.get()._field_n;
				}
			}
		}
		_1ad387619_check_assign_type(_self_, _191334_v.get()._field_reference,_191334_v.get()._field_kind.get()._field_kind,_191334_v.get()._field_value.get()._field_data,_191334_v.get()._field_value.get()._field_expr.get()._field_token);
	}
	if (_191334_v.get()._field_reference && (!(_1ad439105_is_valid_for_ref(_191334_v.get()._field_kind.get()._field_kind)))) {
		_1ad3810c4_push_err(_self_.ptr(), _191334_v.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_191334_v.get()._field_kind.get()._field_kind.ptr()))}));
	}
	_1ad389aa0_check_validity_for_init_expr(_self_, _191334_v.get()._field_mutable,_191334_v.get()._field_reference,_191334_v.get()._field_kind.get()._field_kind,_191334_v.get()._field_value.get()._field_data,_191334_v.get()._field_value.get()._field_expr.get()._field_token);
	if (_191334_v.get()._field_constant) {
		if ((!(_1ad3e747b_is_const(_191334_v.get()._field_value.get()._field_data.ptr())))) {
			_1ad3810c4_push_err(_self_.ptr(), _191334_v.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		}
	} else {
		_191334_v.get()._field_value.get()._field_data.get()._field_constant=nullptr;
	}
	if ((_1ad42dd42_tup(_191334_v.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
		_191334_v.get()._field_kind.get()._field_kind=nullptr;
	}
}



inline void _1ad39555b_check_type_var(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ad39e037_Var>& _196239_decl,jule::Trait<_1ad447256_Lookup> _196255_l) {
	if (_196239_decl.get()._field_cpp_linked || (!(_1ad39e455_is_initialized(_196239_decl.ptr())))) {
		return;
	}
	jule::Ptr<_1ad3e89cc_Eval> _196717_eval = nullptr;
	if ((_196239_decl.get()._field_kind != nullptr)) {
		_196717_eval=_1ad386690_evalpd(_self_, _196255_l,_196239_decl.get()._field_kind.get()._field_kind,_196239_decl);
	} else {
		_196717_eval=_1ad386690_evalpd(_self_, _196255_l,nullptr,_196239_decl);
	}
	_196717_eval.get()._field_immutable=(!(_196239_decl.get()._field_mutable));
	_196239_decl.get()._field_value.get()._field_data=_1ad418c83_eval_expr(_196717_eval, _196239_decl.get()._field_value.get()._field_expr);
	if ((_196239_decl.get()._field_value.get()._field_data == nullptr)) {
		return;
	}
	_1ad395160_check_var(_self_, _196239_decl);
}



inline void _1ad39579d_check_global_types(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1b056ea30:;
		if (it != expr.end()) {
			jule::Ptr<_1ad39e037_Var> _1b056eaa7_decl = *it;
			{
				if ((_1ad39e455_is_initialized(_1b056eaa7_decl.ptr()) && (_1b056eaa7_decl.get()._field_value.get()._field_data == nullptr)) || (_1ad39e730_is_type_inferred(_1b056eaa7_decl.ptr()) && (_1b056eaa7_decl.get()._field_kind.get()._field_kind == nullptr))) {
					_1ad39555b_check_type_var(_self_, _1b056eaa7_decl,jule::Trait<_1ad447256_Lookup>(_self_, 3));
				}
			}
			_iter_next_1b056ea30:;
			++it;
			goto _iter_begin_1b056ea30;
		}
		_iter_end_1b056ea30:;
	}
}



inline jule::Ptr<_1ac67a501_FnIns> _1ad395c32_ready_to_check_fn(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac664551_StructIns>& _199442_s,jule::Ptr<_1ac676a08_Fn>& _199462_f) {
	jule::Ptr<_1ac67a501_FnIns> _199517_ins = _1ac678a93_instance(_199462_f);
	if ((_199462_f.get()._field_instances.len() != 0LL)) {
		return _199517_ins;
	}
	_199517_ins.get()._field_owner=_199442_s;
	_1ac678e4a_append_instance(_199462_f.ptr(), _199517_ins);
	_1ad388c69_reload_fn_ins_types(_self_, _199517_ins);
	_199517_ins.get()._field_reloaded=true;
	return _199517_ins;
}



inline void _1ad39612d_check_type_method(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac664551_StructIns>& _200642_s,jule::Ptr<_1ac676a08_Fn>& _200662_f) {
	if (_200662_f.get()._field_cpp_linked) {
		return;
	}
	if ((_200662_f.get()._field_generics.len() > 0LL)) {
		return;
	}
	_1ad395c32_ready_to_check_fn(_self_, _200642_s,_200662_f);
	{
		auto &expr = _200662_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1b0575250:;
		if (it != expr.end()) {
			jule::Ptr<_1ac67a501_FnIns> _1b0576509_ins = *it;
			{
				if ((_1b0576509_ins.get()._field_scope.get()._field_stmts.len() > 0LL)) {
					goto _iter_next_1b0575250;
				}
				_1ad398b9c_check_fn_ins(_self_, _1b0576509_ins);
			}
			_iter_next_1b0575250:;
			++it;
			goto _iter_begin_1b0575250;
		}
		_iter_end_1b0575250:;
	}
}



inline void _1ad39644c_check_field_defaults(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac664551_StructIns>& _202645_ins) {
	jule::Ptr<_1ad3e89cc_Eval> _202717_eval = _1ad386ecb_eval(_self_, jule::Trait<_1ad447256_Lookup>(_self_, 3));
	{
		auto &expr = _202645_ins.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1b0578a7d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac663a06_FieldIns> _1b0578c7b_f = *it;
			{
				if ((_1b0578c7b_f.get()._field_decl.get()._field_default == nullptr)) {
					goto _iter_next_1b0578a7d;
				}
				_202717_eval.get()._field_prefix=_1b0578c7b_f.get()._field_kind;
				_202717_eval.get()._field_field=_1b0578c7b_f;
				_1b0578c7b_f.get()._field_default=_1ad418c83_eval_expr(_202717_eval, _1b0578c7b_f.get()._field_decl.get()._field_default);
				if ((_1b0578c7b_f.get()._field_default == nullptr)) {
					goto _iter_next_1b0578a7d;
				}
				
				_1ad387619_check_assign_type(_self_, false,_1b0578c7b_f.get()._field_kind,_1b0578c7b_f.get()._field_default,_1b0578c7b_f.get()._field_decl.get()._field_default.get()._field_token);
			}
			_iter_next_1b0578a7d:;
			++it;
			goto _iter_begin_1b0578a7d;
		}
		_iter_end_1b0578a7d:;
	}
}



inline jule::Ptr<_1ac67a501_FnIns> _1ad3969ad_check_struct_ins_op(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac664551_StructIns>& _204844_s,jule::Ptr<_1ac676a08_Fn>& _204864_f,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)> _204872_p) {
	if ((_204864_f == nullptr) || (_204864_f.get()._field_generics.len() > 0LL)) {
		return nullptr;
	}
	jule::Ptr<_1ac67a501_FnIns> _205217_ins = _1ad395c32_ready_to_check_fn(_self_, _204844_s,_204864_f);
	if (_204872_p(_204864_f)) {
		return _205217_ins;
	}
	return nullptr;
}



inline void _1ad396ccc_check_struct_ins(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac664551_StructIns>& _205941_s) {
	_1ad39644c_check_field_defaults(_self_, _205941_s);
	{
		auto &expr = _205941_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1b05807dd:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1b0580ea3_f = *it;
			{
				_1ad39612d_check_type_method(_self_, _205941_s,_1b0580ea3_f);
			}
			_iter_next_1b05807dd:;
			++it;
			goto _iter_begin_1b05807dd;
		}
		_iter_end_1b05807dd:;
	}
}



inline void _1ad3970eb_check_type_struct(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac661075_Struct>& _206642_s) {
	if (_206642_s.get()._field_cpp_linked) {
		return;
	}
	if ((_206642_s.get()._field_generics.len() > 0LL)) {
		return;
	}
	if ((_206642_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1ac664551_StructIns> _207721_ins = _1ac66151a_instance(_206642_s);
		_207721_ins.get()._field_checked=true;
		_1ac6618c2_append_instance(_206642_s.ptr(), _207721_ins);
	}
	{
		auto &expr = _206642_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1b058423c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac664551_StructIns> _1b05842a3_ins = *it;
			{
				_1ad396ccc_check_struct_ins(_self_, _1b05842a3_ins);
			}
			_iter_next_1b058423c:;
			++it;
			goto _iter_begin_1b058423c;
		}
		_iter_end_1b058423c:;
	}
}



inline void _1ad39733d_check_struct_types(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1b058533c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac661075_Struct> _1b05853b4_s = *it;
			{
				_1ad3970eb_check_type_struct(_self_, _1b05853b4_s);
			}
			_iter_next_1b058533c:;
			++it;
			goto _iter_begin_1b058533c;
		}
		_iter_end_1b058533c:;
	}
}



inline void _1ad3976a1_check_struct_ins_operators(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac664551_StructIns> _209350_s) {
	{
		auto &expr = _209350_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1b0586816:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1b05868d2_m = *it;
			{
				{
					auto &_match_expr{ _1b05868d2_m.get()._field_ident };
					
					if (_match_expr == jule::Str("eq", 2)) {
						_case_begin_1b0586d11:;
						{
							_209350_s.get()._field_operators._field_eq=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _209768_f) mutable -> jule::Bool {
								return static__1ad3a0d3b_eq(_209768_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt", 2)) {
						_case_begin_1b0587383:;
						{
							_209350_s.get()._field_operators._field_gt=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _209968_f) mutable -> jule::Bool {
								return static__1ad3a1149_gt(_209968_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt_eq", 5)) {
						_case_begin_1b05873e9:;
						{
							_209350_s.get()._field_operators._field_gt_eq=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _210171_f) mutable -> jule::Bool {
								return static__1ad3a1457_gt_eq(_210171_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt", 2)) {
						_case_begin_1b0587460:;
						{
							_209350_s.get()._field_operators._field_lt=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _210368_f) mutable -> jule::Bool {
								return static__1ad3a1765_lt(_210368_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt_eq", 5)) {
						_case_begin_1b05874c6:;
						{
							_209350_s.get()._field_operators._field_lt_eq=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _210571_f) mutable -> jule::Bool {
								return static__1ad3a1a73_lt_eq(_210571_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl", 3)) {
						_case_begin_1b058754d:;
						{
							_209350_s.get()._field_operators._field_shl=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _210769_f) mutable -> jule::Bool {
								return static__1ad3a226b_shl(_210769_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr", 3)) {
						_case_begin_1b05875c5:;
						{
							_209350_s.get()._field_operators._field_shr=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _210969_f) mutable -> jule::Bool {
								return static__1ad3a2579_shr(_210969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add", 3)) {
						_case_begin_1b058764c:;
						{
							_209350_s.get()._field_operators._field_add=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _211169_f) mutable -> jule::Bool {
								return static__1ad3a2887_add(_211169_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub", 3)) {
						_case_begin_1b05876c4:;
						{
							_209350_s.get()._field_operators._field_sub=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _211369_f) mutable -> jule::Bool {
								return static__1ad3a2b95_sub(_211369_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div", 3)) {
						_case_begin_1b058774b:;
						{
							_209350_s.get()._field_operators._field_div=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _211569_f) mutable -> jule::Bool {
								return static__1ad3a2ea3_div(_211569_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul", 3)) {
						_case_begin_1b05877c3:;
						{
							_209350_s.get()._field_operators._field_mul=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _211769_f) mutable -> jule::Bool {
								return static__1ad3a32b1_mul(_211769_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod", 3)) {
						_case_begin_1b058784a:;
						{
							_209350_s.get()._field_operators._field_mod=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _211969_f) mutable -> jule::Bool {
								return static__1ad3a35be_mod(_211969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and", 7)) {
						_case_begin_1b05878c2:;
						{
							_209350_s.get()._field_operators._field_bit_and=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _212173_f) mutable -> jule::Bool {
								return static__1ad3a38cc_bit_and(_212173_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or", 6)) {
						_case_begin_1b0587949:;
						{
							_209350_s.get()._field_operators._field_bit_or=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _212372_f) mutable -> jule::Bool {
								return static__1ad3a3bda_bit_or(_212372_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor", 7)) {
						_case_begin_1b05879c1:;
						{
							_209350_s.get()._field_operators._field_bit_xor=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _212573_f) mutable -> jule::Bool {
								return static__1ad3a3ee8_bit_xor(_212573_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("neg", 3)) {
						_case_begin_1b0587a48:;
						{
							_209350_s.get()._field_operators._field_neg=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _212769_f) mutable -> jule::Bool {
								return static__1ad3a46e1_neg(_212769_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("pos", 3)) {
						_case_begin_1b0587ac0:;
						{
							_209350_s.get()._field_operators._field_pos=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _212969_f) mutable -> jule::Bool {
								return static__1ad3a49ee_pos(_212969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_not", 7)) {
						_case_begin_1b0587b47:;
						{
							_209350_s.get()._field_operators._field_bit_not=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _213173_f) mutable -> jule::Bool {
								return static__1ad3a4d0c_bit_not(_213173_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add_assign", 10)) {
						_case_begin_1b0587bbe:;
						{
							_209350_s.get()._field_operators._field_add_assign=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _213376_f) mutable -> jule::Bool {
								return static__1ad3a5505_add_assign(_213376_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub_assign", 10)) {
						_case_begin_1b0587c46:;
						{
							_209350_s.get()._field_operators._field_sub_assign=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _213576_f) mutable -> jule::Bool {
								return static__1ad3a5813_sub_assign(_213576_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div_assign", 10)) {
						_case_begin_1b0587cbd:;
						{
							_209350_s.get()._field_operators._field_div_assign=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _213776_f) mutable -> jule::Bool {
								return static__1ad3a5b21_div_assign(_213776_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul_assign", 10)) {
						_case_begin_1b0587d45:;
						{
							_209350_s.get()._field_operators._field_mul_assign=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _213976_f) mutable -> jule::Bool {
								return static__1ad3a5e2e_mul_assign(_213976_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod_assign", 10)) {
						_case_begin_1b0587dbc:;
						{
							_209350_s.get()._field_operators._field_mod_assign=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _214176_f) mutable -> jule::Bool {
								return static__1ad3a623c_mod_assign(_214176_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl_assign", 10)) {
						_case_begin_1b0587e44:;
						{
							_209350_s.get()._field_operators._field_shl_assign=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _214376_f) mutable -> jule::Bool {
								return static__1ad3a654a_shl_assign(_214376_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr_assign", 10)) {
						_case_begin_1b0587ebb:;
						{
							_209350_s.get()._field_operators._field_shr_assign=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _214576_f) mutable -> jule::Bool {
								return static__1ad3a6858_shr_assign(_214576_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or_assign", 13)) {
						_case_begin_1b0588043:;
						{
							_209350_s.get()._field_operators._field_bit_or_assign=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _214779_f) mutable -> jule::Bool {
								return static__1ad3a6b66_bit_or_assign(_214779_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and_assign", 14)) {
						_case_begin_1b05880ba:;
						{
							_209350_s.get()._field_operators._field_bit_and_assign=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _214980_f) mutable -> jule::Bool {
								return static__1ad3a6e74_bit_and_assign(_214980_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor_assign", 14)) {
						_case_begin_1b0588142:;
						{
							_209350_s.get()._field_operators._field_bit_xor_assign=_1ad3969ad_check_struct_ins_op(_self_, _209350_s,_1b05868d2_m,jule::Fn<jule::Bool(jule::Ptr<_1ac676a08_Fn>)>([=](jule::Ptr<_1ac676a08_Fn> _215180_f) mutable -> jule::Bool {
								return static__1ad3a7282_bit_xor_assign(_215180_f);
							}));
						}
					}
					_match_end_1b058711e:;
				}
			}
			_iter_next_1b0586816:;
			++it;
			goto _iter_begin_1b0586816;
		}
		_iter_end_1b0586816:;
	}
}



inline void _1ad397a03_check_type_struct_operators(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac661075_Struct>& _215652_s) {
	if (_215652_s.get()._field_cpp_linked) {
		return;
	}
	if ((_215652_s.get()._field_generics.len() > 0LL)) {
		return;
	}
	if ((_215652_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1ac664551_StructIns> _216721_ins = _1ac66151a_instance(_215652_s);
		_216721_ins.get()._field_checked=true;
		_1ac6618c2_append_instance(_215652_s.ptr(), _216721_ins);
	}
	_1ad3976a1_check_struct_ins_operators(_self_, _215652_s.get()._field_instances[0LL]);
}



inline void _1ad397c78_check_struct_types_operators(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1b05b985a:;
		if (it != expr.end()) {
			jule::Ptr<_1ac661075_Struct> _1b05b98d2_s = *it;
			{
				_1ad397a03_check_type_struct_operators(_self_, _1b05b98d2_s);
			}
			_iter_next_1b05b985a:;
			++it;
			goto _iter_begin_1b05b985a;
		}
		_iter_end_1b05b985a:;
	}
}



inline void _1ad398086_check_rets(_1ad37cd5c_Sema* _self_,jule::Ptr<_1ac67a501_FnIns>& _218134_f) {
	if (_1ac676ec0_is_void(_218134_f.get()._field_decl.ptr())) {
		return;
	}
	_1ad39a9d4_MissingRetChecker _218513_mrc = static__1ad39add0_new();
	jule::Bool _218613_ok = _1ad39c222_check(&_218513_mrc, _218134_f.get()._field_scope);
	if ((!(_218613_ok))) {
		_1ad3810c4_push_err(&(*_self_), _218134_f.get()._field_decl.get()._field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	}
}



inline void _1ad398482_check_fn_ins_sc(_1ad37cd5c_Sema* _self_,jule::Ptr<_1ac67a501_FnIns>& _219239_f,jule::Ptr<_1ad35872d_ScopeChecker>& _219255_sc) {
	if (_219239_f.get()._field_decl.get()._field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ptr<_1ad39e037_Var>> _219717_vars = _1ad37b7b7_build_ret_vars(_219239_f);
	_219255_sc.get()._field_table.get()._field_vars=jule::append(_219255_sc.get()._field_table.get()._field_vars,_219717_vars);
	_219255_sc.get()._field_table.get()._field_vars=jule::append(_219255_sc.get()._field_table.get()._field_vars,_1ad37bac5_build_param_vars(_219239_f));
	_219255_sc.get()._field_table.get()._field_type_aliases=jule::append(_219255_sc.get()._field_table.get()._field_type_aliases,_1ad37be27_build_generic_type_aliases(_219239_f));
	_1ad36a751_check(_219255_sc, _219239_f.get()._field_decl.get()._field_scope,_219239_f.get()._field_scope);
	if ((_219717_vars.len() > 0LL)) {
		jule::Slice<jule::Any> _220721_stmts = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_219239_f.get()._field_scope.get()._field_stmts.len() + static_cast<jule::I64>(static_cast<jule::I64>(_219717_vars.len()))));
		{
			auto &expr = _219717_vars;
			auto it = expr.begin();
			_iter_begin_1b05c2973:;
			if (it != expr.end()) {
				jule::Ptr<_1ad39e037_Var> _1b05c3446_v = *it;
				{
					_220721_stmts = jule::alloc_for_append(_220721_stmts,1);_220721_stmts.__push(jule::Any(_1b05c3446_v));
				}
				_iter_next_1b05c2973:;
				++it;
				goto _iter_begin_1b05c2973;
			}
			_iter_end_1b05c2973:;
		}
		_220721_stmts=jule::append(_220721_stmts,_219239_f.get()._field_scope.get()._field_stmts);
		_219239_f.get()._field_scope.get()._field_stmts=_220721_stmts;
	}
	if ((!(_1ad35a5cb_stopped(_219255_sc.ptr())))) {
		_1ad398086_check_rets(&(*_self_), _219239_f);
	}
}



inline void _1ad39887d_check_fn_ins_caller(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac67a501_FnIns>& _222244_f,jule::Ptr<_1ab005531_Token> _222259_caller) {
	if (_222244_f.get()._field_decl.get()._field_cpp_linked) {
		return;
	}
	jule::Ptr<_1ad3e062d_SymbolTable> _222717_old = _222244_f.get()._field_decl.get()._field_sema.get()._field_file;
	__JULE_DEFER({
		_1ad380aeb_set_current_file(_222244_f.get()._field_decl.get()._field_sema.ptr(), _222717_old);
	});
	jule::Ptr<_1ad3e062d_SymbolTable> _222917_file = _1ad37c301_find_file(_222244_f.get()._field_decl.get()._field_sema.get()._field_files,_222244_f.get()._field_decl.get()._field_token._field_file);
	if ((_222917_file != nullptr)) {
		_1ad380aeb_set_current_file(_222244_f.get()._field_decl.get()._field_sema.ptr(), _222917_file);
	}
	jule::Ptr<_1ad35872d_ScopeChecker> _223417_sc = _1ad30a449_new_scope_checker(_222244_f.get()._field_decl.get()._field_sema,_222244_f);
	_223417_sc.get()._field_called_from=_222259_caller;
	_1ad398482_check_fn_ins_sc(_self_.ptr(), _222244_f,_223417_sc);
	if (_222244_f.get()._field_decl.get()._field_sema != _self_) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_222244_f.get()._field_decl.get()._field_sema.get()._field_errors);
		_222244_f.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
	}
}



inline void _1ad398b9c_check_fn_ins(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac67a501_FnIns>& _224437_f) {
	_1ad39887d_check_fn_ins_caller(_self_, _224437_f,nullptr);
}



inline void _1ad398ebb_check_type_fn(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac676a08_Fn>& _224838_f) {
	if (_224838_f.get()._field_cpp_linked) {
		return;
	}
	if ((_224838_f.get()._field_generics.len() > 0LL)) {
		return;
	}
	{
		auto &expr = _224838_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1b05ccd46:;
		if (it != expr.end()) {
			jule::Ptr<_1ac67a501_FnIns> _1b05cce89_ins = *it;
			{
				_1ad398b9c_check_fn_ins(_self_, _1b05cce89_ins);
			}
			_iter_next_1b05ccd46:;
			++it;
			goto _iter_begin_1b05ccd46;
		}
		_iter_end_1b05ccd46:;
	}
}



inline void _1ad3992da_check_test_fn(_1ad37cd5c_Sema* _self_,jule::Ptr<_1ac67a501_FnIns>& _226337_f) {
	if (_226337_f.get()._field_decl.get()._field_public) {
		_1ad3810c4_push_err(&(*_self_), _226337_f.get()._field_decl.get()._field_token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1ad3814c0_push_suggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;
	}
	if ((_226337_f.get()._field_params.len() != 1LL) || (_226337_f.get()._field_result != nullptr)) {
		_1ad3810c4_push_err(&(*_self_), _226337_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1ad3814c0_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1ad433b05_Sptr> _227617_sptr = _1ad42c2a2_sptr(_226337_f.get()._field_params[0LL].get()._field_kind.ptr());
	if ((_227617_sptr == nullptr)) {
		_1ad3810c4_push_err(&(*_self_), _226337_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1ad3814c0_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1ac664551_StructIns> _228313_s = _1ad42d4b2_strct(_227617_sptr.get()._field_elem.ptr());
	if ((_228313_s == nullptr) || (!(_1ad3795d9_is_std_package(_228313_s.get()._field_decl.get()._field_token._field_file.get()._field_path,jule::Str("testing", 7))))) {
		_1ad3810c4_push_err(&(*_self_), _226337_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1ad3814c0_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
}



inline void _1ad399609_precheck_type_fn(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Ptr<_1ac676a08_Fn>& _229141_f) {
	if (_229141_f.get()._field_cpp_linked) {
		return;
	}
	if ((_229141_f.get()._field_generics.len() > 0LL)) {
		return;
	}
	if ((_229141_f.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1ac67a501_FnIns> _230221_ins = _1ac678a93_instance(_229141_f);
		_229141_f.get()._field_instances = jule::alloc_for_append(_229141_f.get()._field_instances,1);_229141_f.get()._field_instances.__push(_230221_ins);
		_1ad388c69_reload_fn_ins_types(_self_, _230221_ins);
		_230221_ins.get()._field_reloaded=true;
		if (_1ad427cb4_has_directive(_229141_f.get()._field_directives,jule::Str("test", 4))) {
			_1ad3992da_check_test_fn(_self_.ptr(), _230221_ins);
		}
	}
}



inline void _1ad39984b_precheck_fn_types(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1b05da947:;
		if (it != expr.end()) {
			jule::Ptr<_1ac85d096_Trait> _1b05da9be_decl = *it;
			{
				{
					auto &expr = _1b05da9be_decl.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1b05db23e:;
					if (it != expr.end()) {
						jule::Ptr<_1ac676a08_Fn> _1b05db283_m = *it;
						{
							_1ad399609_precheck_type_fn(_self_, _1b05db283_m);
						}
						_iter_next_1b05db23e:;
						++it;
						goto _iter_begin_1b05db23e;
					}
					_iter_end_1b05db23e:;
				}
			}
			_iter_next_1b05da947:;
			++it;
			goto _iter_begin_1b05da947;
		}
		_iter_end_1b05da947:;
	}
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1b05dac33:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1b05db508_decl = *it;
			{
				_1ad399609_precheck_type_fn(_self_, _1b05db508_decl);
			}
			_iter_next_1b05dac33:;
			++it;
			goto _iter_begin_1b05dac33;
		}
		_iter_end_1b05dac33:;
	}
}



inline void _1ad399a8d_check_fn_types(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1b05dcb58:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1b05dcbd0_decl = *it;
			{
				_1ad398ebb_check_type_fn(_self_, _1b05dcbd0_decl);
			}
			_iter_next_1b05dcb58:;
			++it;
			goto _iter_begin_1b05dcb58;
		}
		_iter_end_1b05dcb58:;
	}
}



inline void _1ad399cd0_check_package_types(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b05ddc14:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b05dde01_f = *it;
			{
				_1ad380aeb_set_current_file(_self_.ptr(), _1b05dde01_f);
				_1ad39579d_check_global_types(_self_);
			}
			_iter_next_1b05ddc14:;
			++it;
			goto _iter_begin_1b05ddc14;
		}
		_iter_end_1b05ddc14:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b05de0aa:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b05de1ba_f = *it;
			{
				_1ad380aeb_set_current_file(_self_.ptr(), _1b05de1ba_f);
				_1ad39984b_precheck_fn_types(_self_);
			}
			_iter_next_1b05de0aa:;
			++it;
			goto _iter_begin_1b05de0aa;
		}
		_iter_end_1b05de0aa:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b05dedad:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b05e0a29_f = *it;
			{
				_1ad380aeb_set_current_file(_self_.ptr(), _1b05e0a29_f);
				_1ad397c78_check_struct_types_operators(_self_);
			}
			_iter_next_1b05dedad:;
			++it;
			goto _iter_begin_1b05dedad;
		}
		_iter_end_1b05dedad:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b05e1277:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b05e0c8d_f = *it;
			{
				_1ad380aeb_set_current_file(_self_.ptr(), _1b05e0c8d_f);
				_1ad39733d_check_struct_types(_self_);
			}
			_iter_next_1b05e1277:;
			++it;
			goto _iter_begin_1b05e1277;
		}
		_iter_end_1b05e1277:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b05e1992:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b05e1a6e_f = *it;
			{
				_1ad380aeb_set_current_file(_self_.ptr(), _1b05e1a6e_f);
				_1ad399a8d_check_fn_types(_self_);
			}
			_iter_next_1b05e1992:;
			++it;
			goto _iter_begin_1b05e1992;
		}
		_iter_end_1b05e1992:;
	}
}



inline void _1ad39a022_set_file_sema_fields(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1b05e393e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1b05e39b6_f = *it;
			{
				_1b05e39b6_f.get()._field_sema=_self_;
			}
			_iter_next_1b05e393e:;
			++it;
			goto _iter_begin_1b05e393e;
		}
		_iter_end_1b05e393e:;
	}
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1b05e3b92:;
		if (it != expr.end()) {
			jule::Ptr<_1ac661075_Struct> _1b05e3d90_st = *it;
			{
				_1b05e3d90_st.get()._field_sema=_self_;
			}
			_iter_next_1b05e3b92:;
			++it;
			goto _iter_begin_1b05e3b92;
		}
		_iter_end_1b05e3b92:;
	}
}



inline void _1ad39a264_set_sema_fields(jule::Ptr<_1ad37cd5c_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b05e50c2:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b05e52ae_file = *it;
			{
				_1ad380aeb_set_current_file(_self_.ptr(), _1b05e52ae_file);
				_1ad39a022_set_file_sema_fields(_self_);
			}
			_iter_next_1b05e50c2:;
			++it;
			goto _iter_begin_1b05e50c2;
		}
		_iter_end_1b05e50c2:;
	}
}



inline void _1ad39a583_check(jule::Ptr<_1ad37cd5c_Sema> _self_,jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>& _237930_files) {
	_self_.get()._field_files=_237930_files;
	_1ad38423c_check_imports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_1ad384913_check_enums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_1ad39a264_set_sema_fields(_self_);
	_1ad3846c1_impl_impls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_1ad394912_check_package_decls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_1ad399cd0_check_package_types(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad37cd5c_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1ad39a9d4_MissingRetChecker static__1ad39add0_new(void) {
	return _1ad39a9d4_MissingRetChecker(jule::Slice<jule::U64>::alloc(16LL),jule::Bool());
}



inline jule::Bool _1ad39b254_check_conditional(_1ad39a9d4_MissingRetChecker* _self_,jule::Ptr<_1ad355dac_Conditional> _242536_c) {
	{
		auto &expr = _242536_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1b05ea902:;
		if (it != expr.end()) {
			jule::Ptr<_1ad35596c_If> _1b05ea9bd_elif = *it;
			{
				if ((_1b05ea9bd_elif == nullptr)) {
					return false;
				}
				if ((!(_1ad39bd6a_check_scope(&(*_self_), _1b05ea9bd_elif.get()._field_scope)))) {
					return false;
				}
			}
			_iter_next_1b05ea902:;
			++it;
			goto _iter_begin_1b05ea902;
		}
		_iter_end_1b05ea902:;
	}
	return (_242536_c.get()._field_default != nullptr) && _1ad39bd6a_check_scope(&(*_self_), _242536_c.get()._field_default.get()._field_scope);
}



inline jule::Bool _1ad39b60b_check_match(_1ad39a9d4_MissingRetChecker* _self_,jule::Ptr<_1ad35772c_Match> _243730_m) {
	{
		auto &expr = _243730_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1b05ed54d:;
		if (it != expr.end()) {
			jule::Ptr<_1ad357b7d_Case> _1b05ed619_c = *it;
			{
				if ((_1b05ed619_c == nullptr)) {
					return false;
				}
				jule::I64 _244217_n = (*_self_)._field_breaked.len();
				jule::Bool _244317_ok = _1ad39bd6a_check_scope(&(*_self_), _1b05ed619_c.get()._field_scope);
				{
					
					if (_244217_n != static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_breaked.len()))) {
						_case_begin_1b05eee23:;
						{
							return false;
						}
					}
					else if ((!(_244317_ok))) {
						_case_begin_1b05eee9a:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							}
							goto _case_begin_1b0600022;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1b0600022:;
						{
							(*_self_)._field_falled=false;
							if ((_1b05ed619_c.get()._field_next == nullptr)) {
								return false;
							}
							goto _iter_next_1b05ed54d;
						}
					}
					_match_end_1b05eed79:;
				}
			}
			_iter_next_1b05ed54d:;
			++it;
			goto _iter_begin_1b05ed54d;
		}
		_iter_end_1b05ed54d:;
	}
	return (_243730_m.get()._field_default != nullptr) && _1ad39bd6a_check_scope(&(*_self_), _243730_m.get()._field_default.get()._field_scope);
}



inline jule::Bool _1ad39b9b3_check_inf_iter(_1ad39a9d4_MissingRetChecker* _self_,jule::Ptr<_1ad3560cc_InfIter> _246333_it) {
	jule::I64 _246413_n = (*_self_)._field_breaked.len();
	if (_1ad39bd6a_check_scope(&(*_self_), _246333_it.get()._field_scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_246413_n);
		return true;
	}
	if (_246413_n != static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_breaked.len()))) {
		jule::U64 _247017_itaddr = static_cast<jule::U64>(_246333_it);
		{
			auto expr = (*_self_)._field_breaked.slice(_246413_n);
			auto it = expr.begin();
			_iter_begin_1b0604b81:;
			if (it != expr.end()) {
				jule::U64 _1b0604c5d_addr = *it;
				{
					if (_247017_itaddr == _1b0604c5d_addr) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_246413_n);
						return false;
					}
				}
				_iter_next_1b0604b81:;
				++it;
				goto _iter_begin_1b0604b81;
			}
			_iter_end_1b0604b81:;
		}
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_246413_n);
	}
	return true;
}



inline jule::Bool _1ad39bd6a_check_scope(_1ad39a9d4_MissingRetChecker* _self_,jule::Ptr<_1ad33ce0a_Scope> _248230_s) {
	if ((_248230_s == nullptr)) {
		return false;
	}
	{
		auto &expr = _248230_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1b0606b2d:;
		if (it != expr.end()) {
			jule::Any _1b0606699_st = *it;
			{
				{
					auto &_match_expr{ _1b0606699_st };
					
					if (_match_expr.type_is<jule::Ptr<_1ad357d9d_FallSt>>()) {
						_case_begin_1b060736a:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad35695c_BreakSt>>()) {
						_case_begin_1b0607414:;
						{
							jule::U64 _249221_addr = _1b0606699_st.operator jule::Ptr<_1ad35695c_BreakSt>().get()._field_it;
							if ((_249221_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_249221_addr);
							}
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad35673c_ContSt>>()) {
						_case_begin_1b060747a:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad3560cc_InfIter>>()) {
						_case_begin_1b06074e1:;
						{
							if (_1ad39b9b3_check_inf_iter(&(*_self_), _1b0606699_st.operator jule::Ptr<_1ad3560cc_InfIter>())) {
								return true;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad3580bd_RetSt>>()) {
						_case_begin_1b0607568:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad33ce0a_Scope>>()) {
						_case_begin_1b06075e0:;
						{
							if (_1ad39bd6a_check_scope(&(*_self_), _1b0606699_st.operator jule::Ptr<_1ad33ce0a_Scope>())) {
								return true;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad3e6975_Data>>()) {
						_case_begin_1b0607667:;
						{
							{
								auto &_match_expr{ _1b0606699_st.operator jule::Ptr<_1ad3e6975_Data>().get()._field_model };
								
								if (_match_expr.type_is<jule::Ptr<_1ac67020a_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac671816_BuiltinErrorCallExprModel>>()) {
									_case_begin_1b060b715:;
									{
										return true;
									}
								}
								_match_end_1b060b6b0:;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad355dac_Conditional>>()) {
						_case_begin_1b06076de:;
						{
							if (_1ad39b254_check_conditional(&(*_self_), _1b0606699_st.operator jule::Ptr<_1ad355dac_Conditional>())) {
								return true;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ad35772c_Match>>()) {
						_case_begin_1b0607766:;
						{
							if (_1ad39b60b_check_match(&(*_self_), _1b0606699_st.operator jule::Ptr<_1ad35772c_Match>())) {
								return true;
							}
						}
					}
					_match_end_1b0606c82:;
				}
			}
			_iter_next_1b0606b2d:;
			++it;
			goto _iter_begin_1b0606b2d;
		}
		_iter_end_1b0606b2d:;
	}
	return false;
}



inline jule::Bool _1ad39c222_check(_1ad39a9d4_MissingRetChecker* _self_,jule::Ptr<_1ad33ce0a_Scope> _252824_s) {
	return _1ad39bd6a_check_scope(&(*_self_), _252824_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad39a9d4_MissingRetChecker _Src) {
	_Stream << "MissingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad39cc28_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1ad3a0335_dispose(jule::Ptr<_1ac676a08_Fn> _1027_f) {
	return ((((((((((_1027_f != nullptr) && (_1027_f.get()._field_owner != nullptr)) && (_1027_f.get()._field_ident == jule::Str("dispose", 7))) && (!(_1027_f.get()._field_statically))) && (!(_1027_f.get()._field_unsafety))) && _1027_f.get()._field_public) && _1ac676ec0_is_void(_1027_f.ptr())) && (_1027_f.get()._field_generics.len() == 0LL)) && (_1027_f.get()._field_params.len() == 1LL)) && _1027_f.get()._field_params[0LL].get()._field_mutable) && (!(_1ac6756b6_is_ref(_1027_f.get()._field_params[0LL].ptr())));
}



inline jule::Bool static__1ad3a0643_to_str(jule::Ptr<_1ac676a08_Fn> _2526_f) {
	if (((((((((((_2526_f == nullptr) || (_2526_f.get()._field_owner == nullptr)) || (_2526_f.get()._field_ident != jule::Str("to_str", 6))) || _2526_f.get()._field_statically) || _2526_f.get()._field_unsafety) || (!(_2526_f.get()._field_public))) || _1ac676ec0_is_void(_2526_f.ptr())) || (_2526_f.get()._field_generics.len() != 0LL)) || (_2526_f.get()._field_params.len() != 1LL)) || _2526_f.get()._field_params[0LL].get()._field_mutable) || _1ac6756b6_is_ref(_2526_f.get()._field_params[0LL].ptr())) {
		return false;
	}
	jule::Ptr<_1ac67a501_FnIns> _4017_ins = _2526_f.get()._field_instances[0LL];
	jule::Ptr<_1ad42ec99_Prim> _4113_prim = _1ad42bec7_prim(_4017_ins.get()._field_result.ptr());
	if ((_4113_prim == nullptr)) {
		return false;
	}
	return _1ad4334c8_is_str(_4113_prim.ptr());
}



inline jule::Bool static__1ad3a0a2d_logical(jule::Ptr<_1ac676a08_Fn>& _4824_f,jule::Str _4832_ident) {
	if ((((((((((((((_4824_f == nullptr) || (_4824_f.get()._field_ident != _4832_ident)) || (_4824_f.get()._field_owner == nullptr)) || (_4824_f.get()._field_instances.len() == 0LL)) || _4824_f.get()._field_statically) || _4824_f.get()._field_unsafety) || (!(_4824_f.get()._field_public))) || _1ac676ec0_is_void(_4824_f.ptr())) || (_4824_f.get()._field_generics.len() != 0LL)) || (_4824_f.get()._field_params.len() != 2LL)) || _4824_f.get()._field_params[0LL].get()._field_mutable) || _1ac6756b6_is_ref(_4824_f.get()._field_params[0LL].ptr())) || _4824_f.get()._field_params[1LL].get()._field_mutable) || _4824_f.get()._field_params[1LL].get()._field_reference) {
		return false;
	}
	jule::Ptr<_1ac67a501_FnIns> _6617_ins = _4824_f.get()._field_instances[0LL];
	jule::Ptr<_1ad42ec99_Prim> _6713_prim = _1ad42bec7_prim(_6617_ins.get()._field_result.ptr());
	if ((_6713_prim == nullptr) || (!(_1ad4331ed_is_bool(_6713_prim.ptr())))) {
		return false;
	}
	return _6617_ins.get()._field_owner == _1ad42d4b2_strct(_6617_ins.get()._field_params[1LL].get()._field_kind.ptr());
}



inline jule::Bool static__1ad3a0d3b_eq(jule::Ptr<_1ac676a08_Fn> _7522_f) {
	return static__1ad3a0a2d_logical(_7522_f,jule::Str("eq", 2));
}



inline jule::Bool static__1ad3a1149_gt(jule::Ptr<_1ac676a08_Fn> _8022_f) {
	return static__1ad3a0a2d_logical(_8022_f,jule::Str("gt", 2));
}



inline jule::Bool static__1ad3a1457_gt_eq(jule::Ptr<_1ac676a08_Fn> _8525_f) {
	return static__1ad3a0a2d_logical(_8525_f,jule::Str("gt_eq", 5));
}



inline jule::Bool static__1ad3a1765_lt(jule::Ptr<_1ac676a08_Fn> _9022_f) {
	return static__1ad3a0a2d_logical(_9022_f,jule::Str("lt", 2));
}



inline jule::Bool static__1ad3a1a73_lt_eq(jule::Ptr<_1ac676a08_Fn> _9525_f) {
	return static__1ad3a0a2d_logical(_9525_f,jule::Str("lt_eq", 5));
}



inline jule::Bool static__1ad3a1e5d_result(jule::Ptr<_1ac676a08_Fn>& _9923_f,jule::Str _9931_ident) {
	if ((((((((((((((_9923_f == nullptr) || (_9923_f.get()._field_ident != _9931_ident)) || (_9923_f.get()._field_owner == nullptr)) || (_9923_f.get()._field_instances.len() == 0LL)) || _9923_f.get()._field_statically) || _9923_f.get()._field_unsafety) || (!(_9923_f.get()._field_public))) || _1ac676ec0_is_void(_9923_f.ptr())) || (_9923_f.get()._field_generics.len() != 0LL)) || (_9923_f.get()._field_params.len() != 2LL)) || _9923_f.get()._field_params[0LL].get()._field_mutable) || _1ac6756b6_is_ref(_9923_f.get()._field_params[0LL].ptr())) || _9923_f.get()._field_params[1LL].get()._field_mutable) || _9923_f.get()._field_params[1LL].get()._field_reference) {
		return false;
	}
	jule::Ptr<_1ac67a501_FnIns> _11717_ins = _9923_f.get()._field_instances[0LL];
	return _1ad42d4b2_strct(_11717_ins.get()._field_result.ptr()) == _11717_ins.get()._field_owner;
}



inline jule::Bool static__1ad3a226b_shl(jule::Ptr<_1ac676a08_Fn> _12223_f) {
	return static__1ad3a1e5d_result(_12223_f,jule::Str("shl", 3));
}



inline jule::Bool static__1ad3a2579_shr(jule::Ptr<_1ac676a08_Fn> _12723_f) {
	return static__1ad3a1e5d_result(_12723_f,jule::Str("shr", 3));
}



inline jule::Bool static__1ad3a2887_add(jule::Ptr<_1ac676a08_Fn> _13223_f) {
	return static__1ad3a1e5d_result(_13223_f,jule::Str("add", 3));
}



inline jule::Bool static__1ad3a2b95_sub(jule::Ptr<_1ac676a08_Fn> _13723_f) {
	return static__1ad3a1e5d_result(_13723_f,jule::Str("sub", 3));
}



inline jule::Bool static__1ad3a2ea3_div(jule::Ptr<_1ac676a08_Fn> _14223_f) {
	return static__1ad3a1e5d_result(_14223_f,jule::Str("div", 3));
}



inline jule::Bool static__1ad3a32b1_mul(jule::Ptr<_1ac676a08_Fn> _14723_f) {
	return static__1ad3a1e5d_result(_14723_f,jule::Str("mul", 3));
}



inline jule::Bool static__1ad3a35be_mod(jule::Ptr<_1ac676a08_Fn> _15223_f) {
	return static__1ad3a1e5d_result(_15223_f,jule::Str("mod", 3));
}



inline jule::Bool static__1ad3a38cc_bit_and(jule::Ptr<_1ac676a08_Fn> _15727_f) {
	return static__1ad3a1e5d_result(_15727_f,jule::Str("bit_and", 7));
}



inline jule::Bool static__1ad3a3bda_bit_or(jule::Ptr<_1ac676a08_Fn> _16226_f) {
	return static__1ad3a1e5d_result(_16226_f,jule::Str("bit_or", 6));
}



inline jule::Bool static__1ad3a3ee8_bit_xor(jule::Ptr<_1ac676a08_Fn> _16727_f) {
	return static__1ad3a1e5d_result(_16727_f,jule::Str("bit_xor", 7));
}



inline jule::Bool static__1ad3a43d3_unary(jule::Ptr<_1ac676a08_Fn>& _17122_f,jule::Str _17130_ident) {
	if ((((((((((((_17122_f == nullptr) || (_17122_f.get()._field_ident != _17130_ident)) || (_17122_f.get()._field_owner == nullptr)) || (_17122_f.get()._field_instances.len() == 0LL)) || _17122_f.get()._field_statically) || _17122_f.get()._field_unsafety) || (!(_17122_f.get()._field_public))) || _1ac676ec0_is_void(_17122_f.ptr())) || (_17122_f.get()._field_generics.len() != 0LL)) || (_17122_f.get()._field_params.len() != 1LL)) || _17122_f.get()._field_params[0LL].get()._field_mutable) || _1ac6756b6_is_ref(_17122_f.get()._field_params[0LL].ptr())) {
		return false;
	}
	jule::Ptr<_1ac67a501_FnIns> _18717_ins = _17122_f.get()._field_instances[0LL];
	return _1ad42d4b2_strct(_18717_ins.get()._field_result.ptr()) == _18717_ins.get()._field_owner;
}



inline jule::Bool static__1ad3a46e1_neg(jule::Ptr<_1ac676a08_Fn> _19223_f) {
	return static__1ad3a43d3_unary(_19223_f,jule::Str("neg", 3));
}



inline jule::Bool static__1ad3a49ee_pos(jule::Ptr<_1ac676a08_Fn> _19723_f) {
	return static__1ad3a43d3_unary(_19723_f,jule::Str("pos", 3));
}



inline jule::Bool static__1ad3a4d0c_bit_not(jule::Ptr<_1ac676a08_Fn> _20227_f) {
	return static__1ad3a43d3_unary(_20227_f,jule::Str("bit_not", 7));
}



inline jule::Bool static__1ad3a51e7_assign(jule::Ptr<_1ac676a08_Fn>& _20623_f,jule::Str _20631_ident) {
	if ((((((((((((((_20623_f == nullptr) || (_20623_f.get()._field_ident != _20631_ident)) || (_20623_f.get()._field_owner == nullptr)) || (_20623_f.get()._field_instances.len() == 0LL)) || _20623_f.get()._field_statically) || _20623_f.get()._field_unsafety) || (!(_20623_f.get()._field_public))) || (!(_1ac676ec0_is_void(_20623_f.ptr())))) || (_20623_f.get()._field_generics.len() != 0LL)) || (_20623_f.get()._field_params.len() != 2LL)) || (!(_20623_f.get()._field_params[0LL].get()._field_mutable))) || _1ac6756b6_is_ref(_20623_f.get()._field_params[0LL].ptr())) || _20623_f.get()._field_params[1LL].get()._field_mutable) || _20623_f.get()._field_params[1LL].get()._field_reference) {
		return false;
	}
	return true;
}



inline jule::Bool static__1ad3a5505_add_assign(jule::Ptr<_1ac676a08_Fn> _22730_f) {
	return static__1ad3a51e7_assign(_22730_f,jule::Str("add_assign", 10));
}



inline jule::Bool static__1ad3a5813_sub_assign(jule::Ptr<_1ac676a08_Fn> _23230_f) {
	return static__1ad3a51e7_assign(_23230_f,jule::Str("sub_assign", 10));
}



inline jule::Bool static__1ad3a5b21_div_assign(jule::Ptr<_1ac676a08_Fn> _23730_f) {
	return static__1ad3a51e7_assign(_23730_f,jule::Str("div_assign", 10));
}



inline jule::Bool static__1ad3a5e2e_mul_assign(jule::Ptr<_1ac676a08_Fn> _24230_f) {
	return static__1ad3a51e7_assign(_24230_f,jule::Str("mul_assign", 10));
}



inline jule::Bool static__1ad3a623c_mod_assign(jule::Ptr<_1ac676a08_Fn> _24730_f) {
	return static__1ad3a51e7_assign(_24730_f,jule::Str("mod_assign", 10));
}



inline jule::Bool static__1ad3a654a_shl_assign(jule::Ptr<_1ac676a08_Fn> _25230_f) {
	return static__1ad3a51e7_assign(_25230_f,jule::Str("shl_assign", 10));
}



inline jule::Bool static__1ad3a6858_shr_assign(jule::Ptr<_1ac676a08_Fn> _25730_f) {
	return static__1ad3a51e7_assign(_25730_f,jule::Str("shr_assign", 10));
}



inline jule::Bool static__1ad3a6b66_bit_or_assign(jule::Ptr<_1ac676a08_Fn> _26233_f) {
	return static__1ad3a51e7_assign(_26233_f,jule::Str("bit_or_assign", 13));
}



inline jule::Bool static__1ad3a6e74_bit_and_assign(jule::Ptr<_1ac676a08_Fn> _26734_f) {
	return static__1ad3a51e7_assign(_26734_f,jule::Str("bit_and_assign", 14));
}



inline jule::Bool static__1ad3a7282_bit_xor_assign(jule::Ptr<_1ac676a08_Fn> _27234_f) {
	return static__1ad3a51e7_assign(_27234_f,jule::Str("bit_xor_assign", 14));
}







std::ostream &operator<<(std::ostream &_Stream, _1ad39eb4d_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad39e037_Var> _1ad3db096_build_var(_1ad3daa57_RangeChecker* _self_,jule::Ptr<_1ab01e6d2_VarDecl>& _91429_decl) {
	jule::Ptr<_1ad39e037_Var> _91517_v = _1ac683c46_build_var(_91429_decl);
	return _91517_v;
}



inline void _1ad3db2d8_set_size_key(_1ad3daa57_RangeChecker* _self_) {
	if (((*_self_)._field_rang.get()._field_key_a == nullptr) || _1ab008314_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident)) {
		return;
	}
	(*_self_)._field_kind.get()._field_key_a=_1ad3db096_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5)))));
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ad39e037_Var>>()) {
			_case_begin_1b085c1d5:;
			{
				(*_self_)._field_kind.get()._field_key_a.get()._field_iter_relation=jule::new_ptr<_1ad39cc28_IterRelation>(_1ad39cc28_IterRelation((*_self_)._field_d.get()._field_model.operator jule::Ptr<_1ad39e037_Var>()));
			}
		}
		_match_end_1b085c0d6:;
	}
}



inline void _1ad3db805_check_range_expr_validity(_1ad3daa57_RangeChecker* _self_,jule::Ptr<_1ad3e6975_Data>& _94549_d,jule::Ptr<_1ad39e037_Var>& _94560_key,jule::Ptr<_1ad429931_TypeKind>& _94576_k) {
	jule::Bool _94617__mut = _94560_key.get()._field_mutable;
	if (_94617__mut && (!(_1ad42b092_mutable(_94576_k.ptr())))) {
		_94617__mut=false;
	}
	_1ad389aa0_check_validity_for_init_expr((*_self_)._field_sc.get()._field_s, _94617__mut,_94560_key.get()._field_reference,_94560_key.get()._field_kind.get()._field_kind,_94549_d,(*_self_)._field_rang.get()._field_in_token);
}



inline void _1ad3dba36_check_slice(_1ad3daa57_RangeChecker* _self_) {
	_1ad3db2d8_set_size_key(&(*_self_));
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _1ab008314_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	jule::Ptr<_1ad4346d8_Slc> _96417_slc = _1ad42ce0c_slc((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_b=_1ad3db096_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),_96417_slc.get()._field_elem));
	_1ad3db805_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_96417_slc.get()._field_elem);
}



inline void _1ad3dbc78_check_array(_1ad3daa57_RangeChecker* _self_) {
	_1ad3db2d8_set_size_key(&(*_self_));
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _1ab008314_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	jule::Ptr<_1ad436da0_Arr> _97717_arr = _1ad42cb32_arr((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_b=_1ad3db096_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),_97717_arr.get()._field_elem));
	_1ad3db805_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_97717_arr.get()._field_elem);
}



inline void _1ad3dbeba_check_map_key_a(_1ad3daa57_RangeChecker* _self_) {
	if (((*_self_)._field_rang.get()._field_key_a == nullptr) || _1ab008314_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident)) {
		return;
	}
	jule::Ptr<_1ad4360be_Map> _98917_m = _1ad42da67_map((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_a=_1ad3db096_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),_98917_m.get()._field_key));
	jule::Ptr<_1ad3e6975_Data> _99317_d = jule::new_ptr<_1ad3e6975_Data>((*((*_self_)._field_d)));
	_99317_d.get()._field_kind=_98917_m.get()._field_key;
	_1ad3db805_check_range_expr_validity(&(*_self_), _99317_d,(*_self_)._field_kind.get()._field_key_a,_98917_m.get()._field_key);
}



inline void _1ad3dc20c_check_map_key_b(_1ad3daa57_RangeChecker* _self_) {
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _1ab008314_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	jule::Ptr<_1ad4360be_Map> _100417_m = _1ad42da67_map((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_b=_1ad3db096_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),_100417_m.get()._field_val));
	jule::Ptr<_1ad3e6975_Data> _100817_d = jule::new_ptr<_1ad3e6975_Data>((*((*_self_)._field_d)));
	_100817_d.get()._field_kind=_100417_m.get()._field_val;
	_1ad3db805_check_range_expr_validity(&(*_self_), _100817_d,(*_self_)._field_kind.get()._field_key_b,_100417_m.get()._field_val);
}



inline void _1ad3dc44e_check_map(_1ad3daa57_RangeChecker* _self_) {
	_1ad3dbeba_check_map_key_a(&(*_self_));
	_1ad3dc20c_check_map_key_b(&(*_self_));
}



inline void _1ad3dc691_check_str(_1ad3daa57_RangeChecker* _self_) {
	_1ad3db2d8_set_size_key(&(*_self_));
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _1ab008314_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	(*_self_)._field_kind.get()._field_key_b=_1ad3db096_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("u8", 2)), 5)))));
}



inline jule::Bool _1ad3dc96b_check(_1ad3daa57_RangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1ad79e558:;
		}
		else if ((_1ad42ce0c_slc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad79cd5e:;
			{
				_1ad3dba36_check_slice(&(*_self_));
				return true;
			}
		}
		else if ((_1ad42cb32_arr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad79cdc5:;
			{
				_1ad3dbc78_check_array(&(*_self_));
				return true;
			}
		}
		else if ((_1ad42da67_map((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad79ce3b:;
			{
				_1ad3dc44e_check_map(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1ad79cce8:;
			{
				jule::Ptr<_1ad42ec99_Prim> _104717_prim = _1ad42bec7_prim((*_self_)._field_d.get()._field_kind.ptr());
				if ((_104717_prim != nullptr) && _1ad4334c8_is_str(_104717_prim.ptr())) {
					_1ad3dc691_check_str(&(*_self_));
					return true;
				}
			}
		}
		_match_end_1ad79cc2c:;
	}
	_1ad3810c4_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3daa57_RangeChecker _Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad3e0bd3_find_package(_1ad3e062d_SymbolTable* _self_,jule::Str _2535_ident) {
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1ad7bc4dd:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1ad7bc5a9_pkg = *it;
			{
				if (_1ad7bc5a9_pkg.get()._field_ident == _2535_ident) {
					return _1ad7bc5a9_pkg;
				}
			}
			_iter_next_1ad7bc4dd:;
			++it;
			goto _iter_begin_1ad7bc4dd;
		}
		_iter_end_1ad7bc4dd:;
	}
	return nullptr;
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad3e108a_select_package(_1ad3e062d_SymbolTable* _self_,jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)> _3737_selector) {
	if ((_3737_selector == nullptr)) {
		return nullptr;
	}
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1ad7bd9c8:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1ad7bd4de_pkg = *it;
			{
				if (_3737_selector(_1ad7bd4de_pkg)) {
					return _1ad7bd4de_pkg;
				}
			}
			_iter_next_1ad7bd9c8:;
			++it;
			goto _iter_begin_1ad7bd9c8;
		}
		_iter_end_1ad7bd9c8:;
	}
	return nullptr;
}



inline jule::Ptr<_1ad39e037_Var> _1ad3e151e_find_var(_1ad3e062d_SymbolTable* _self_,jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return _1ad3e32ac___find_var(&(*_self_), _5231_ident,_5243_cpp_linked,false);
}



inline jule::Ptr<_1ad428996_TypeAlias> _1ad3e19a3_find_type_alias(_1ad3e062d_SymbolTable* _self_,jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return _1ad3e381d___find_type_alias(&(*_self_), _5838_ident,_5850_cpp_linked,false);
}



inline jule::Ptr<_1ac661075_Struct> _1ad3e1e37_find_struct(_1ad3e062d_SymbolTable* _self_,jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1ad7c2878:;
		if (it != expr.end()) {
			jule::Ptr<_1ac661075_Struct> _1ad7c2944_s = *it;
			{
				if ((_1ad7c2944_s.get()._field_ident == _6434_ident) && (_1ad7c2944_s.get()._field_cpp_linked == _6446_cpp_linked)) {
					return _1ad7c2944_s;
				}
			}
			_iter_next_1ad7c2878:;
			++it;
			goto _iter_begin_1ad7c2878;
		}
		_iter_end_1ad7c2878:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac676a08_Fn> _1ad3e23bb_find_fn(_1ad3e062d_SymbolTable* _self_,jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ad7c44e5:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1ad7c45b1_f = *it;
			{
				if ((_1ad7c45b1_f.get()._field_ident == _7530_ident) && (_1ad7c45b1_f.get()._field_cpp_linked == _7542_cpp_linked)) {
					return _1ad7c45b1_f;
				}
			}
			_iter_next_1ad7c44e5:;
			++it;
			goto _iter_begin_1ad7c44e5;
		}
		_iter_end_1ad7c44e5:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac85d096_Trait> _1ad3e2773_find_trait(_1ad3e062d_SymbolTable* _self_,jule::Str _8633_ident) {
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1ad7c5d76:;
		if (it != expr.end()) {
			jule::Ptr<_1ac85d096_Trait> _1ad7c5e42_t = *it;
			{
				if (_1ad7c5e42_t.get()._field_ident == _8633_ident) {
					return _1ad7c5e42_t;
				}
			}
			_iter_next_1ad7c5d76:;
			++it;
			goto _iter_begin_1ad7c5d76;
		}
		_iter_end_1ad7c5d76:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac724545_Enum> _1ad3e2b2a_find_enum(_1ad3e062d_SymbolTable* _self_,jule::Str _9732_ident) {
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1ad7c730b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac724545_Enum> _1ad7c73c7_e = *it;
			{
				if (_1ad7c73c7_e.get()._field_ident == _9732_ident) {
					return _1ad7c73c7_e;
				}
			}
			_iter_next_1ad7c730b:;
			++it;
			goto _iter_begin_1ad7c730b;
		}
		_iter_end_1ad7c730b:;
	}
	return nullptr;
}



inline jule::Ptr<_1ad39e037_Var> _1ad3e32ac___find_var(_1ad3e062d_SymbolTable* _self_,jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = ((*_self_)._field_vars.len() - 1LL);
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_1ad39e037_Var> _11225_v = (*_self_)._field_vars[_11021_i];
				if ((_11225_v.get()._field_ident == _10829_ident) && (_11225_v.get()._field_cpp_linked == _10841_cpp_linked)) {
					return _11225_v;
				}
			}
		_iter_next_1ad7c9187:;
		}
		_iter_end_1ad7c9187:;
	} else {
		{
			auto &expr = (*_self_)._field_vars;
			auto it = expr.begin();
			_iter_begin_1ad7ca70a:;
			if (it != expr.end()) {
				jule::Ptr<_1ad39e037_Var> _1ad7ca74e_v = *it;
				{
					if ((_1ad7ca74e_v.get()._field_ident == _10829_ident) && (_1ad7ca74e_v.get()._field_cpp_linked == _10841_cpp_linked)) {
						return _1ad7ca74e_v;
					}
				}
				_iter_next_1ad7ca70a:;
				++it;
				goto _iter_begin_1ad7ca70a;
			}
			_iter_end_1ad7ca70a:;
		}
	}
	return nullptr;
}



inline jule::Ptr<_1ad428996_TypeAlias> _1ad3e381d___find_type_alias(_1ad3e062d_SymbolTable* _self_,jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = ((*_self_)._field_type_aliases.len() - 1LL);
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_1ad428996_TypeAlias> _13125_ta = (*_self_)._field_type_aliases[_12921_i];
				if ((_13125_ta.get()._field_ident == _12736_ident) && (_13125_ta.get()._field_cpp_linked == _12748_cpp_linked)) {
					return _13125_ta;
				}
			}
		_iter_next_1ad7cc5db:;
		}
		_iter_end_1ad7cc5db:;
	} else {
		{
			auto &expr = (*_self_)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_1ad7cdb5e:;
			if (it != expr.end()) {
				jule::Ptr<_1ad428996_TypeAlias> _1ad7cdba3_ta = *it;
				{
					if ((_1ad7cdba3_ta.get()._field_ident == _12736_ident) && (_1ad7cdba3_ta.get()._field_cpp_linked == _12748_cpp_linked)) {
						return _1ad7cdba3_ta;
					}
				}
				_iter_next_1ad7cdb5e:;
				++it;
				goto _iter_begin_1ad7cdb5e;
			}
			_iter_end_1ad7cdb5e:;
		}
	}
	return nullptr;
}



inline jule::Any _1ad3e3ca2_def_by_ident(_1ad3e062d_SymbolTable* _self_,jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1ad7ced5d:;
		if (it != expr.end()) {
			jule::Ptr<_1ad39e037_Var> _1ad7cee29_v = *it;
			{
				if ((_1ad7cee29_v.get()._field_ident == _14831_ident) && (_1ad7cee29_v.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1ad7cee29_v);
				}
			}
			_iter_next_1ad7ced5d:;
			++it;
			goto _iter_begin_1ad7ced5d;
		}
		_iter_end_1ad7ced5d:;
	}
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1ad7cebb5:;
		if (it != expr.end()) {
			jule::Ptr<_1ad428996_TypeAlias> _1ad7d0149_ta = *it;
			{
				if ((_1ad7d0149_ta.get()._field_ident == _14831_ident) && (_1ad7d0149_ta.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1ad7d0149_ta);
				}
			}
			_iter_next_1ad7cebb5:;
			++it;
			goto _iter_begin_1ad7cebb5;
		}
		_iter_end_1ad7cebb5:;
	}
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1ad7d0c71:;
		if (it != expr.end()) {
			jule::Ptr<_1ac661075_Struct> _1ad7d1029_s = *it;
			{
				if ((_1ad7d1029_s.get()._field_ident == _14831_ident) && (_1ad7d1029_s.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1ad7d1029_s);
				}
			}
			_iter_next_1ad7d0c71:;
			++it;
			goto _iter_begin_1ad7d0c71;
		}
		_iter_end_1ad7d0c71:;
	}
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ad7ceb71:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1ad7d1e5e_f = *it;
			{
				if ((_1ad7d1e5e_f.get()._field_ident == _14831_ident) && (_1ad7d1e5e_f.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1ad7d1e5e_f);
				}
			}
			_iter_next_1ad7ceb71:;
			++it;
			goto _iter_begin_1ad7ceb71;
		}
		_iter_end_1ad7ceb71:;
	}
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1ad7d2d50:;
		if (it != expr.end()) {
			jule::Ptr<_1ac85d096_Trait> _1ad7d3b53_t = *it;
			{
				if (_1ad7d3b53_t.get()._field_ident == _14831_ident) {
					return jule::Any(_1ad7d3b53_t);
				}
			}
			_iter_next_1ad7d2d50:;
			++it;
			goto _iter_begin_1ad7d2d50;
		}
		_iter_end_1ad7d2d50:;
	}
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1ad7d2e2c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac724545_Enum> _1ad7d43d4_e = *it;
			{
				if (_1ad7d43d4_e.get()._field_ident == _14831_ident) {
					return jule::Any(_1ad7d43d4_e);
				}
			}
			_iter_next_1ad7d2e2c:;
			++it;
			goto _iter_begin_1ad7d2e2c;
		}
		_iter_end_1ad7d2e2c:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1ad3e4313_is_duplicated_ident(_1ad3e062d_SymbolTable* _self_,jule::U64 _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1ad7d5c65:;
		if (it != expr.end()) {
			jule::Ptr<_1ad39e037_Var> &_1ad7d5d64_v = *it;
			{
				if (((static_cast<jule::U64>(_1ad7d5d64_v) != _19534_itself) && (_1ad7d5d64_v.get()._field_ident == _19551_ident)) && (_1ad7d5d64_v.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1ad7d5c65:;
			++it;
			goto _iter_begin_1ad7d5c65;
		}
		_iter_end_1ad7d5c65:;
	}
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1ad7d63e7:;
		if (it != expr.end()) {
			jule::Ptr<_1ad428996_TypeAlias> &_1ad7d6095_ta = *it;
			{
				if (((static_cast<jule::U64>(_1ad7d6095_ta) != _19534_itself) && (_1ad7d6095_ta.get()._field_ident == _19551_ident)) && (_1ad7d6095_ta.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1ad7d63e7:;
			++it;
			goto _iter_begin_1ad7d63e7;
		}
		_iter_end_1ad7d63e7:;
	}
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1ad7d84a4:;
		if (it != expr.end()) {
			jule::Ptr<_1ac661075_Struct> &_1ad7d733d_s = *it;
			{
				if (((static_cast<jule::U64>(_1ad7d733d_s) != _19534_itself) && (_1ad7d733d_s.get()._field_ident == _19551_ident)) && (_1ad7d733d_s.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1ad7d84a4:;
			++it;
			goto _iter_begin_1ad7d84a4;
		}
		_iter_end_1ad7d84a4:;
	}
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ad7d973b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> &_1ad7d8581_f = *it;
			{
				if (((static_cast<jule::U64>(_1ad7d8581_f) != _19534_itself) && (_1ad7d8581_f.get()._field_ident == _19551_ident)) && (_1ad7d8581_f.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1ad7d973b:;
			++it;
			goto _iter_begin_1ad7d973b;
		}
		_iter_end_1ad7d973b:;
	}
	if (_19563_cpp_linked) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1ad7da9c3:;
		if (it != expr.end()) {
			jule::Ptr<_1ac85d096_Trait> &_1ad7d9780_t = *it;
			{
				if ((static_cast<jule::U64>(_1ad7d9780_t) != _19534_itself) && (_1ad7d9780_t.get()._field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_1ad7da9c3:;
			++it;
			goto _iter_begin_1ad7da9c3;
		}
		_iter_end_1ad7da9c3:;
	}
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1ad7d9939:;
		if (it != expr.end()) {
			jule::Ptr<_1ac724545_Enum> &_1ad7dad47_e = *it;
			{
				if ((static_cast<jule::U64>(_1ad7dad47_e) != _19534_itself) && (_1ad7dad47_e.get()._field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_1ad7d9939:;
			++it;
			goto _iter_begin_1ad7d9939;
		}
		_iter_end_1ad7d9939:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3e062d_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ad3e6dc6_is_nil(_1ad3e6975_Data* _self_) {
	return _1ad42a9dc_is_nil((*_self_)._field_kind.ptr());
}



inline jule::Bool _1ad3e71a1_is_void(_1ad3e6975_Data* _self_) {
	return _1ad42acb7_void((*_self_)._field_kind.ptr());
}



inline jule::Bool _1ad3e747b_is_const(_1ad3e6975_Data* _self_) {
	return ((*_self_)._field_constant != nullptr);
}



inline jule::Bool _1ad3e7833_good_operand(_1ad3e6975_Data* _self_,jule::Ptr<_1ad3e6975_Data>& _9736_other) {
	return (((_1ad42bec7_prim(_9736_other.get()._field_kind.ptr()) == nullptr) || (!(_1ad4337a3_is_any(_1ad42bec7_prim(_9736_other.get()._field_kind.ptr()).ptr())))) && (_1ad42d78c_trt(_9736_other.get()._field_kind.ptr()) == nullptr)) && (!(_1ad42a9dc_is_nil((*_self_)._field_kind.ptr())));
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3e6975_Data _Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3e7c84_Value _Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1ad3e90b5_push_err(_1ad3e89cc_Eval* _self_,_1ab005531_Token _12527_token,jule::Str _12541_fmt,jule::Slice<jule::Any> _12554_args) {
	_1ad3810c4_push_err((*_self_)._field_s.ptr(), _12527_token,_12541_fmt,_12554_args);
}



inline void _1ad3e94b1_push_suggestion(_1ad3e89cc_Eval* _self_,jule::Str _13034_fmt,jule::Slice<jule::Any> _13047_args) {
	_1ad3814c0_push_suggestion((*_self_)._field_s.ptr(), _13034_fmt,_13047_args);
}



inline void _1ad3e9703_allow_builtin(_1ad3e89cc_Eval* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1ad3e9945_disallow_builtin(_1ad3e89cc_Eval* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Bool _1ad3e9c20_is_unsafe(_1ad3e89cc_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1ad3e9eea_is_global(_1ad3e89cc_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ad37cd5c_Sema>>()) {
			_case_begin_1ad7e5648:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ad7e5901:;
			{
				return false;
			}
		}
		_match_end_1ad7e56d1:;
	}
}



inline jule::Bool _1ad3ea3a2_apply_numeric_prefix(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data>& _15544_d) {
	if (((((_15544_d == nullptr) || (_15544_d.get()._field_cast_kind != nullptr)) || (!(_1ad3e747b_is_const(_15544_d.ptr())))) || (_1ad42bec7_prim(_15544_d.get()._field_kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr)) {
		return false;
	}
	jule::Ptr<_1ad42ec99_Prim> _16313_prim = _1ad42bec7_prim((*_self_)._field_prefix.ptr());
	if ((_16313_prim == nullptr)) {
		return false;
	}
	{
		
		if (_1ad354c68_is_float(_1ad430173_to_str(_16313_prim.ptr()))) {
			_case_begin_1ad7e8edc:;
			{
				_15544_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>((*((*_self_)._field_prefix)));
				_1ad2c56cd_set_f64(_15544_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1ad2c4633_as_f64(_15544_d.get()._field_constant.ptr())));
			}
		}
		else if (_1ad3542a6_is_sig_int(_1ad430173_to_str(_16313_prim.ptr()))) {
			_case_begin_1ad7e8c01:;
			{
				if ((!(_1ad3bcbe3_sig_assignable(_1ad430173_to_str(_16313_prim.ptr()),_15544_d)))) {
					return false;
				}
				_15544_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>((*((*_self_)._field_prefix)));
				_1ad2c4952_set_i64(_15544_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1ad2c407d_as_i64(_15544_d.get()._field_constant.ptr())));
			}
		}
		else if (_1ad354608_is_unsig_int(_1ad430173_to_str(_16313_prim.ptr()))) {
			_case_begin_1ad7e8c67:;
			{
				if ((!(_1ad3ccd9b_unsig_assignable(_1ad430173_to_str(_16313_prim.ptr()),_15544_d)))) {
					return false;
				}
				_15544_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>((*((*_self_)._field_prefix)));
				_1ad2c4c71_set_u64(_15544_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1ad2c4358_as_u64(_15544_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1ad7e8e32:;
	}
	return true;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad3ea67c_lit_nil(_1ad3e89cc_Eval* _self_) {
	jule::Ptr<_1ad2c1d8e_Const> _19217_constant = static__1ad2c29d8_new_nil();
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),nullptr)),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_19217_constant)),false,_19217_constant));
}



inline jule::Ptr<_1ad3e6975_Data> _1ad3eaa34_lit_str(_1ad3e89cc_Eval* _self_,jule::Ptr<_1aadb5b2d_LitExpr>& _20323_l) {
	jule::Str _20417_s = _20323_l.get()._field_value.slice(1LL,(_20323_l.get()._field_value.len() - 1LL));
	if (_1ab006b1a_is_raw_str(_20323_l.get()._field_value)) {
		_20417_s=_1ad3cbbd0_to_raw_str(static_cast<jule::Slice<jule::U8>>(_20417_s));
	} else {
		_20417_s=_1ad3cc032_to_str(static_cast<jule::Slice<jule::U8>>(_20417_s));
	}
	jule::Ptr<_1ad2c1d8e_Const> _21017_constant = static__1ad2c25ed_new_str(_20417_s);
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("str", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_21017_constant)),false,_21017_constant));
}



inline jule::Ptr<_1ad3e6975_Data> _1ad3eaddb_lit_bool(_1ad3e89cc_Eval* _self_,jule::Ptr<_1aadb5b2d_LitExpr>& _22424_l) {
	jule::Ptr<_1ad2c1d8e_Const> _22517_constant = static__1ad2c2411_new_bool((_22424_l.get()._field_value == jule::Str("true", 4)));
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_22517_constant)),false,_22517_constant));
}



inline jule::Ptr<_1ad3e6975_Data> _1ad3eb293_lit_rune(_1ad3e89cc_Eval* _self_,jule::Ptr<_1aadb5b2d_LitExpr>& _23824_l) {
	
	
	jule::Str _24213_lt = _23824_l.get()._field_value.slice(1LL,(_23824_l.get()._field_value.len() - 1LL));
	jule::I32 _24313_r = _1ad3a8d66_to_rune(static_cast<jule::Slice<jule::U8>>(_24213_lt));
	jule::Ptr<_1ad3e6975_Data> _24417_data = jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,static__1ad2c20ae_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_24313_r)))));
	jule::Bool _25113_is_ascii = _1ad3a887c_is_ascii(_24313_r);
	if (_25113_is_ascii) {
		_24417_data.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("u8", 2)), 5)));
	} else {
		_24417_data.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("i32", 3)), 5)));
	}
	_24417_data.get()._field_model=jule::Any(jule::new_ptr<_1ac6725b4_RuneExprModel>(_1ac6725b4_RuneExprModel(_24313_r)));
	_24417_data.get()._field_is_rune=true;
	return _24417_data;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad3eb64a_lit_float(_1ad3e89cc_Eval* _self_,jule::Ptr<_1aadb5b2d_LitExpr>& _26725_l) {
	
	jule::F64 _27013_f = ({
		auto except = _1ace68041_parse_float(_26725_l.get()._field_value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});
	jule::Ptr<_1ad2c1d8e_Const> _27117_constant = static__1ad2c27da_new_f64(_27013_f);
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_27117_constant)),false,_27117_constant));
}



inline jule::Ptr<_1ad3e6975_Data> _1ad3eba02_lit_int(_1ad3e89cc_Eval* _self_,jule::Ptr<_1aadb5b2d_LitExpr>& _28527_l) {
	
	jule::Str _28817_lit = _28527_l.get()._field_value;
	jule::I64 _28917_base = 0LL;
	{
		
		if (_1a904e0b5_has_prefix(_28817_lit,jule::Str("0x", 2))) {
			_case_begin_1ad80eab3:;
			{
				(_28817_lit).mut_slice(2LL);
				_28917_base=16LL;
			}
		}
		else if (_1a904e0b5_has_prefix(_28817_lit,jule::Str("0b", 2))) {
			_case_begin_1ad80ec5b:;
			{
				(_28817_lit).mut_slice(2LL);
				_28917_base=2LL;
			}
		}
		else if (_1a904e0b5_has_prefix(_28817_lit,jule::Str("0o", 2))) {
			_case_begin_1ad80e7a5:;
			{
				(_28817_lit).mut_slice(2LL);
				_28917_base=8LL;
			}
		}
		else if ((_28817_lit[0LL] == '0') && (_28817_lit.len() > 1LL)) {
			_case_begin_1ad80e81b:;
			{
				(_28817_lit).mut_slice(1LL);
				_28917_base=8LL;
			}
		}
		else {
			_case_begin_1ad80e73e:;
			{
				_28917_base=10LL;
			}
		}
		_match_end_1ad80e6d9:;
	}
	jule::Ptr<_1ad3e6975_Data> _30817_d = jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1ad2c1d8e_Const>()));
	jule::Bool _31417_ok = true;
	jule::I64 _31513_sig = ({
		auto except = _1ad0739ed_parse_int(_28817_lit,_28917_base,64LL);
		(except.ok()) ? (except.result) : ({
			_31417_ok=false;
			0LL;
		});
	});
	if (_31417_ok) {
		_30817_d.get()._field_constant=static__1ad2c20ae_new_i64(_31513_sig);
		_30817_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5)));
	} else {
		jule::U64 _32517_unsig = ({
			auto except = _1aceeeaab_parse_uint(_28817_lit,_28917_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1ad3e90b5_push_err(&(*_self_), _28527_l.get()._field_token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1ad3e94b1_push_suggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});
		_30817_d.get()._field_constant=static__1ad2c2224_new_u64(_32517_unsig);
		_30817_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("uint", 4)), 5)));
	}
	_30817_d.get()._field_model=jule::Any(_30817_d.get()._field_constant);
	if ((!(_1ad3ea3a2_apply_numeric_prefix(&(*_self_), _30817_d)))) {
		_1ad42396e_fit_bitsize(_30817_d);
	}
	return _30817_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad3ebda9_lit_num(_1ad3e89cc_Eval* _self_,jule::Ptr<_1aadb5b2d_LitExpr>& _34627_l) {
	{
		
		if (_1ab0078da_is_float(_34627_l.get()._field_value)) {
			_case_begin_1ad819e75:;
			{
				return _1ad3eb64a_lit_float(&(*_self_), _34627_l);
			}
		}
		else {
			_case_begin_1ad81931a:;
			{
				return _1ad3eba02_lit_int(&(*_self_), _34627_l);
			}
		}
		_match_end_1ad819271:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad3ec261_eval_lit(_1ad3e89cc_Eval* _self_,jule::Ptr<_1aadb5b2d_LitExpr> _35527_lit) {
	{
		
		if (_1aadc3102_is_nil(_35527_lit.ptr())) {
			_case_begin_1ad81b5e7:;
			{
				return _1ad3ea67c_lit_nil(&(*_self_));
			}
		}
		else if (_1ab00680c_is_str(_35527_lit.get()._field_value)) {
			_case_begin_1ad81b691:;
			{
				return _1ad3eaa34_lit_str(&(*_self_), _35527_lit);
			}
		}
		else if (_1ab0075cc_is_bool(_35527_lit.get()._field_value)) {
			_case_begin_1ad81b718:;
			{
				return _1ad3eaddb_lit_bool(&(*_self_), _35527_lit);
			}
		}
		else if (_1ab006e28_is_rune(_35527_lit.get()._field_value)) {
			_case_begin_1ad81b3d8:;
			{
				return _1ad3eb293_lit_rune(&(*_self_), _35527_lit);
			}
		}
		else if (_1ab007be8_is_num(_35527_lit.get()._field_value)) {
			_case_begin_1ad81b460:;
			{
				return _1ad3ebda9_lit_num(&(*_self_), _35527_lit);
			}
		}
		else {
			_case_begin_1ad81ae76:;
			{
				return nullptr;
			}
		}
		_match_end_1ad81adcc:;
	}
}



inline jule::Any _1ad3ec618_find_builtins(_1ad3e89cc_Eval* _self_,jule::Str _37232_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ad3736b0_ImportInfo>>()) {
			_case_begin_1ad81ec27:;
			{
				jule::Any _37521_def = _1ad4236e9_find_builtins_import(_37232_ident,(*_self_)._field_lookup.operator jule::Ptr<_1ad3736b0_ImportInfo>());
				if (_37521_def != jule::Any(jule::Any(nullptr))) {
					return _37521_def;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad37cd5c_Sema>>()) {
			_case_begin_1ad81ec9e:;
			{
				jule::Any _38021_def = _1ad4245da_find_builtins_sema(_37232_ident,(*_self_)._field_lookup.operator jule::Ptr<_1ad37cd5c_Sema>());
				if (_38021_def != jule::Any(jule::Any(nullptr))) {
					return _38021_def;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad35872d_ScopeChecker>>()) {
			_case_begin_1ad81ed26:;
			{
				jule::Any _38521_def = _1ad4245da_find_builtins_sema(_37232_ident,(*_self_)._field_lookup.operator jule::Ptr<_1ad35872d_ScopeChecker>().get()._field_s);
				if (_38521_def != jule::Any(jule::Any(nullptr))) {
					return _38521_def;
				}
			}
		}
		_match_end_1ad81e9e6:;
	}
	if ((*_self_)._field_dis_builtin) {
		return jule::Any(nullptr);
	}
	return _1ad45124e_find_builtin_def(_37232_ident);
}



inline jule::Any _1ad3eca9c_get_def(_1ad3e89cc_Eval* _self_,jule::Str _39626_ident,jule::Bool _39638_cpp_linked) {
	if ((!(_39638_cpp_linked))) {
		jule::Ptr<_1ac724545_Enum> _39821_enm = _1ad447256_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad4470d0_find_enum((*_self_)._field_lookup, _39626_ident);
		if ((_39821_enm != nullptr)) {
			return jule::Any(_39821_enm);
		}
	}
	jule::Ptr<_1ad39e037_Var> _40417_v = _1ad447256_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad4459c4_find_var((*_self_)._field_lookup, _39626_ident,_39638_cpp_linked);
	if ((_40417_v != nullptr)) {
		return jule::Any(_40417_v);
	}
	jule::Ptr<_1ac676a08_Fn> _40917_f = _1ad447256_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad446871_find_fn((*_self_)._field_lookup, _39626_ident,_39638_cpp_linked);
	if ((_40917_f != nullptr)) {
		return jule::Any(_40917_f);
	}
	jule::Ptr<_1ac661075_Struct> _41417_s = _1ad447256_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad4463dc_find_struct((*_self_)._field_lookup, _39626_ident,_39638_cpp_linked);
	if ((_41417_s != nullptr)) {
		return jule::Any(_41417_s);
	}
	jule::Ptr<_1ad428996_TypeAlias> _41917_ta = _1ad447256_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad445e58_find_type_alias((*_self_)._field_lookup, _39626_ident,_39638_cpp_linked);
	if ((_41917_ta != nullptr)) {
		return jule::Any(_41917_ta);
	}
	return _1ad3ec618_find_builtins(&(*_self_), _39626_ident);
}



inline void _1ad3ecdbb_push_reference(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ac67de2d_ReferenceStack>& _42738_references) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ad35872d_ScopeChecker>>()) {
			_case_begin_1ad829e0d:;
			{
				jule::Ptr<_1ad35872d_ScopeChecker> _43021_sc = _1ad35ab81_get_root((*_self_)._field_lookup.operator jule::Ptr<_1ad35872d_ScopeChecker>());
				if ((!(_1ac68010a_exist_1(_42738_references.ptr(), _43021_sc.get()._field_owner)))) {
					_1ac67ec53_push(_42738_references.ptr(), jule::Any(_43021_sc.get()._field_owner));
				}
			}
		}
		else {
			_case_begin_1ad829814:;
			{
				if (((*_self_)._field_owner != nullptr) && (!(_1ac68010a_exist_0(_42738_references.ptr(), (*_self_)._field_owner)))) {
					_1ac67ec53_push(_42738_references.ptr(), jule::Any((*_self_)._field_owner));
				}
			}
		}
		_match_end_1ad8295e4:;
	}
}



inline void _1ad3ed1da_push_reference_to_fn(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ac67a501_FnIns>& _44144_f) {
	_1ad3ecdbb_push_reference(&(*_self_), _44144_f.get()._field_references);
}



inline void _1ad3ed509_push_reference_to_var(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad39e037_Var>& _44545_v) {
	if ((_44545_v.get()._field_references != nullptr)) {
		_1ad3ecdbb_push_reference(&(*_self_), _44545_v.get()._field_references);
	}
}



inline void _1ad3ed86c_push_reference_to_struct(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ac664551_StructIns>& _45148_s) {
	_1ad3ecdbb_push_reference(&(*_self_), _45148_s.get()._field_references);
}



inline jule::Ptr<_1ad3e6975_Data> _1ad3edc13___eval_enum(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ac724545_Enum> _45530_enm) {
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_45530_enm, 3))),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),true,nullptr));
}



inline jule::Ptr<_1ad3e6975_Data> _1ad3ee197_eval_enum(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ac724545_Enum> _46732_enm,_1ab005531_Token _46744_error_token) {
	if ((!(_1ad381954_is_accessible_define((*_self_)._field_s.ptr(), _46732_enm.get()._field_public,_46732_enm.get()._field_token)))) {
		_1ad3e90b5_push_err(&(*_self_), _46744_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_46732_enm.get()._field_ident)}));
		_1ad3e94b1_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _1ad3edc13___eval_enum(&(*_self_), _46732_enm);
}



inline jule::Ptr<_1ad3e6975_Data> _1ad3ee54e___eval_struct(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ac664551_StructIns> _47732_s) {
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_47732_s, 0))),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_47732_s)),true,nullptr));
}



inline jule::Ptr<_1ad3e6975_Data> _1ad3ee9d3_eval_struct(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ac664551_StructIns> _49034_s,_1ab005531_Token _49049_error_token) {
	if ((!(_1ad381954_is_accessible_define((*_self_)._field_s.ptr(), _49034_s.get()._field_decl.get()._field_public,_49034_s.get()._field_decl.get()._field_token)))) {
		_1ad3e90b5_push_err(&(*_self_), _49049_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_49034_s.get()._field_decl.get()._field_ident)}));
		_1ad3e94b1_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1ad400286_check_deprecated(&(*_self_), _49034_s.get()._field_decl.get()._field_directives,_49049_error_token);
	return _1ad3ee54e___eval_struct(&(*_self_), _49034_s);
}



inline jule::Ptr<_1ad3e6975_Data> _1ad3eed8a_eval_fn_ins(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ac67a501_FnIns> _50230_f) {
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_50230_f, 1))),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_50230_f)),false,nullptr));
}



inline void _1ad400286_check_deprecated(_1ad3e89cc_Eval* _self_,jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>& _51540_directives,_1ab005531_Token _51582_tok) {
	if (_1ad3e9c20_is_unsafe(&(*_self_))) {
		return;
	}
	jule::Ptr<_1aaeaeb7d_Directive> _52013_d = _1ad4232ba_find_directive(_51540_directives,jule::Str("deprecated", 10));
	if ((_52013_d != nullptr)) {
		if ((_52013_d.get()._field_args.len() == 0LL)) {
			_1ad3e90b5_push_err(&(*_self_), _51582_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1ad3e90b5_push_err(&(*_self_), _51582_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>({jule::Any(_52013_d.get()._field_args[0LL]._field_kind)}));
		}
		_1ad3e94b1_push_suggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad40071a_eval_fn(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ac676a08_Fn> _53130_f,_1ab005531_Token _53138_error_token) {
	if ((!(_1ad381954_is_accessible_define((*_self_)._field_s.ptr(), _53130_f.get()._field_public,_53130_f.get()._field_token)))) {
		_1ad3e90b5_push_err(&(*_self_), _53138_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_53130_f.get()._field_ident)}));
		_1ad3e94b1_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1ad400286_check_deprecated(&(*_self_), _53130_f.get()._field_directives,_53138_error_token);
	jule::Ptr<_1ac67a501_FnIns> _54017_ins = _1ac678a93_instance(_53130_f);
	_1ad3ed1da_push_reference_to_fn(&(*_self_), _54017_ins);
	return _1ad3eed8a_eval_fn_ins(&(*_self_), _54017_ins);
}



inline void _1ad400c37_push_illegal_cycle_error(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad39e037_Var>& _54544_v1,jule::Ptr<_1ad39e037_Var>& _54555_v2,jule::Str& _54570_message) {
	
	jule::Str _54813_refers_to = _1a92a36b0_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_54544_v1.get()._field_ident),jule::Any(_54555_v2.get()._field_ident)}));
	(_54570_message).buffer.insert(0, (((_1a902da23_repeat(jule::Str(" ", 1),4LL) + _54813_refers_to) + jule::Str("\n", 1))));
}



inline jule::Bool _1ad4011aa_check_cross_cycle(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad39e037_Var>& _55237_v,jule::Str& _55251_message) {
	{
		auto &expr = _55237_v.get()._field_depends;
		auto it = expr.begin();
		_iter_begin_1b0389581:;
		if (it != expr.end()) {
			jule::Ptr<_1ad39e037_Var> &_1b038964c_d = *it;
			{
				if (_1b038964c_d == (*_self_)._field_owner) {
					_1ad400c37_push_illegal_cycle_error(&(*_self_), _55237_v,_1b038964c_d,_55251_message);
					return false;
				}
				if ((!(_1ad4011aa_check_cross_cycle(&(*_self_), _1b038964c_d,_55251_message)))) {
					_1ad400c37_push_illegal_cycle_error(&(*_self_), _55237_v,_1b038964c_d,_55251_message);
					return false;
				}
			}
			_iter_next_1b0389581:;
			++it;
			goto _iter_begin_1b0389581;
		}
		_iter_end_1b0389581:;
	}
	return true;
}



inline jule::Bool _1ad40163e_check_illegal_cycles(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad39e037_Var>& _57144_v,_1ab005531_Token _57153_decl_token) {
	jule::Bool _57174_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_57174_ok = true;
		return _57174_ok;
	}
	if ((*_self_)._field_owner == _57144_v) {
		_1ad3e90b5_push_err(&(*_self_), (*_self_)._field_owner.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*_self_)._field_owner.get()._field_ident)}));
		_57174_ok = false;
		return _57174_ok;
	}
	jule::Str _58317_message = jule::Str();
	if ((!(_1ad4011aa_check_cross_cycle(&(*_self_), _57144_v,_58317_message)))) {
		jule::Str _58621_err_msg = _58317_message;
		_58317_message=jule::Str();
		_1ad400c37_push_illegal_cycle_error(&(*_self_), (*_self_)._field_owner,_57144_v,_58317_message);
		_58621_err_msg=_58621_err_msg + _58317_message;
		_1ad3e90b5_push_err(&(*_self_), _57153_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_58621_err_msg)}));
		_57174_ok = false;
		return _57174_ok;
	}
	(*_self_)._field_owner.get()._field_depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_depends,1);(*_self_)._field_owner.get()._field_depends.__push(_57144_v);
	_57174_ok = true;
	return _57174_ok;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad401ac3_eval_var(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad39e037_Var> _59831_v,_1ab005531_Token _59840_error_token) {
	if ((!(_1ad381954_is_accessible_define((*_self_)._field_s.ptr(), _59831_v.get()._field_public,_59831_v.get()._field_token)))) {
		_1ad3e90b5_push_err(&(*_self_), _59840_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_59831_v.get()._field_ident)}));
		_1ad3e94b1_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1ad400286_check_deprecated(&(*_self_), _59831_v.get()._field_directives,_59840_error_token);
	_59831_v.get()._field_used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ad37cd5c_Sema>>()) {
			_case_begin_1b0394b85:;
			{
				jule::Bool _61217_ok = _1ad40163e_check_illegal_cycles(&(*_self_), _59831_v,_59840_error_token);
				if ((!(_61217_ok))) {
					return nullptr;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad35872d_ScopeChecker>>()) {
			_case_begin_1b0394c51:;
			{
				if ((!(_59831_v.get()._field_reference)) || _1ad3e9c20_is_unsafe(&(*_self_))) {
					goto _match_end_1b0394b30;
				}
				jule::Ptr<_1ad35872d_ScopeChecker> _62021_s = (*_self_)._field_lookup.operator jule::Ptr<_1ad35872d_ScopeChecker>();
				while ((_62021_s.get()._field_owner == nullptr) && (_62021_s.get()._field_parent != nullptr)) {
					{
						_62021_s=_62021_s.get()._field_parent;
					}
				_iter_next_1b0396acc:;
				}
				_iter_end_1b0396acc:;
				if (((_62021_s.get()._field_owner != nullptr) && _62021_s.get()._field_owner.get()._field_anon) && (_59831_v.get()._field_scope != _62021_s.get()._field_owner.get()._field_scope)) {
					_1ad3e90b5_push_err(&(*_self_), _59840_error_token,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>({jule::Any(_59831_v.get()._field_ident)}));
				}
			}
		}
		_match_end_1b0394b30:;
	}
	_1ad3ed509_push_reference_to_var(&(*_self_), _59831_v);
	if ((!(_59831_v.get()._field_cpp_linked)) && ((_59831_v.get()._field_value == nullptr) || (_59831_v.get()._field_value.get()._field_data == nullptr))) {
		if (_59831_v.get()._field_constant) {
			_1ad39555b_check_type_var((*_self_)._field_s, _59831_v,jule::Trait<_1ad447256_Lookup>((*_self_)._field_s, 3));
			if ((_59831_v.get()._field_value.get()._field_data == nullptr)) {
				return nullptr;
			}
		}
	}
	if ((_59831_v.get()._field_kind == nullptr) || (_59831_v.get()._field_kind.get()._field_kind == nullptr)) {
		if ((_59831_v.get()._field_scope != nullptr)) {
			return nullptr;
		}
		_1ad39555b_check_type_var((*_self_)._field_s, _59831_v,(*_self_)._field_lookup);
		if ((_59831_v.get()._field_kind == nullptr) || (_59831_v.get()._field_kind.get()._field_kind == nullptr)) {
			return nullptr;
		}
	}
	jule::Ptr<_1ad3e6975_Data> _66017_d = jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(_59831_v.get()._field_kind.get()._field_kind,jule::Ptr<_1ad429931_TypeKind>(),_59831_v.get()._field_mutable,_59831_v.get()._field_reference,(!(_59831_v.get()._field_constant)),jule::Bool(),jule::Any(jule::Any(_59831_v)),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
	if (((!(_59831_v.get()._field_cpp_linked)) && _1ad39e455_is_initialized(_59831_v.ptr())) && (_59831_v.get()._field_value.get()._field_data != nullptr)) {
		_66017_d.get()._field_is_rune=_59831_v.get()._field_value.get()._field_data.get()._field_is_rune;
	}
	if (_59831_v.get()._field_constant && (_59831_v.get()._field_value.get()._field_data.get()._field_constant != nullptr)) {
		_66017_d.get()._field_constant=jule::new_ptr<_1ad2c1d8e_Const>((*(_59831_v.get()._field_value.get()._field_data.get()._field_constant)));
		_66017_d.get()._field_model=jule::Any(_66017_d.get()._field_constant);
	}
	if (_1ad3e747b_is_const(_66017_d.ptr())) {
		_1ad3ea3a2_apply_numeric_prefix(&(*_self_), _66017_d);
	}
	return _66017_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad402057_eval_type_alias(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad428996_TypeAlias> _68438_ta,_1ab005531_Token _68454_error_token) {
	if ((!(_1ad381954_is_accessible_define((*_self_)._field_s.ptr(), _68438_ta.get()._field_public,_68438_ta.get()._field_token)))) {
		_1ad3e90b5_push_err(&(*_self_), _68454_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_68438_ta.get()._field_ident)}));
		_1ad3e94b1_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_68438_ta.get()._field_used=true;
	jule::Trait<_1ad4293e2_Kind> _69317_kind = _68438_ta.get()._field_kind.get()._field_kind.get()._field_kind;
	jule::Ptr<_1ad3e6975_Data> _69417_d = nullptr;
	{
		auto &_match_expr{ _69317_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac664551_StructIns>>()) {
			_case_begin_1b03a759e:;
			{
				_69417_d=_1ad3ee54e___eval_struct(&(*_self_), _69317_kind.operator jule::Ptr<_1ac664551_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac724545_Enum>>()) {
			_case_begin_1b03a624b:;
			{
				_69417_d=_1ad3edc13___eval_enum(&(*_self_), _69317_kind.operator jule::Ptr<_1ac724545_Enum>());
			}
		}
		else {
			_case_begin_1b03a65ae:;
			{
				_69417_d=jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_68438_ta.get()._field_kind.get()._field_kind.get()._field_kind)),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ptr<_1ad2c1d8e_Const>()));
				if (_68438_ta.get()._field_cpp_linked) {
					_69417_d.get()._field_kind.get()._field_cpp_ident=_68438_ta.get()._field_ident;
				} else {
					_69417_d.get()._field_kind.get()._field_cpp_ident=_68438_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
				}
				_69417_d.get()._field_model=jule::Any(_69417_d.get()._field_kind);
			}
		}
		_match_end_1b03a6559:;
	}
	_69417_d.get()._field_kind.get()._field_generic=_68438_ta.get()._field_generic;
	return _69417_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4024db_eval_def(_1ad3e89cc_Eval* _self_,jule::Any _71831_def,_1ab005531_Token _71841_ident) {
	{
		auto &_match_expr{ _71831_def };
		
		if (_match_expr.type_is<jule::Ptr<_1ad39e037_Var>>()) {
			_case_begin_1b03aabbd:;
			{
				return _1ad401ac3_eval_var(&(*_self_), _71831_def.operator jule::Ptr<_1ad39e037_Var>(),_71841_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac724545_Enum>>()) {
			_case_begin_1b03aac34:;
			{
				return _1ad3ee197_eval_enum(&(*_self_), _71831_def.operator jule::Ptr<_1ac724545_Enum>(),_71841_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac661075_Struct>>()) {
			_case_begin_1b03aac9a:;
			{
				return _1ad3ee9d3_eval_struct(&(*_self_), _1ac66151a_instance(_71831_def.operator jule::Ptr<_1ac661075_Struct>()),_71841_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac676a08_Fn>>()) {
			_case_begin_1b03aad22:;
			{
				jule::Ptr<_1ac676a08_Fn> _72721_f = _71831_def.operator jule::Ptr<_1ac676a08_Fn>();
				if ((_72721_f.get()._field_ident != jule::Str("init", 4))) {
					return _1ad40071a_eval_fn(&(*_self_), _72721_f,_71841_ident);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac67a501_FnIns>>()) {
			_case_begin_1b03aad99:;
			{
				return _1ad3eed8a_eval_fn_ins(&(*_self_), _71831_def.operator jule::Ptr<_1ac67a501_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad428996_TypeAlias>>()) {
			_case_begin_1b03aae21:;
			{
				return _1ad402057_eval_type_alias(&(*_self_), _71831_def.operator jule::Ptr<_1ad428996_TypeAlias>(),_71841_ident);
			}
		}
		_match_end_1b03aaa69:;
	}
	_1ad3e90b5_push_err(&(*_self_), _71841_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_71841_ident._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad402893_eval_ident(_1ad3e89cc_Eval* _self_,jule::Ptr<_1aadb628d_IdentExpr> _74029_ident) {
	jule::Any _74117_def = _1ad3eca9c_get_def(&(*_self_), _74029_ident.get()._field_ident,_74029_ident.get()._field_cpp_linked);
	return _1ad4024db_eval_def(&(*_self_), _74117_def,_74029_ident.get()._field_token);
}



inline jule::Ptr<_1ad3e6975_Data> _1ad402c4a_eval_unary(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1aadb64ad_UnaryExpr> _74534_u) {
	_1ad4192d3_UnaryEval _74617_unary = static__1ad419800_new(_self_);
	return _1ad41aea5_eval(&_74617_unary, _74534_u);
}



inline jule::Ptr<_1ad3e6975_Data> _1ad403102_eval_variadic(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1aadb66cd_VariadicExpr> _75037_v) {
	if ((_75037_v.get()._field_expr == nullptr)) {
		_1ad3e90b5_push_err(_self_.ptr(), _75037_v.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ad429931_TypeKind> _75617_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75617_prefix;
	});
	jule::Ptr<_1ad3e6975_Data> _76017_d = _1ad418524_eval_expr_kind(_self_, jule::Any(_75037_v.get()._field_expr));
	if ((_76017_d == nullptr)) {
		return nullptr;
	}
	if ((!(_1ad42bbec_variadicable(_76017_d.get()._field_kind.ptr())))) {
		_1ad3e90b5_push_err(_self_.ptr(), _75037_v.get()._field_token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_76017_d.get()._field_kind.ptr()))}));
		return nullptr;
	}
	jule::Ptr<_1ad4346d8_Slc> _77013_slc = _1ad42ce0c_slc(_76017_d.get()._field_kind.ptr());
	_76017_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(_77013_slc.get()._field_elem.get()._field_cpp_ident,_77013_slc.get()._field_elem.get()._field_generic,true,_77013_slc.get()._field_elem.get()._field_kind));
	return _76017_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4034a9_eval_unsafe(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1aadb5d4d_UnsafeExpr> _78035_u) {
	jule::Bool _78113_unsafety = _self_.get()._field_unsafety;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1ad3e6975_Data> _78417_d = _1ad418524_eval_expr_kind(_self_, jule::Any(_78035_u.get()._field_expr));
	_self_.get()._field_unsafety=_78113_unsafety;
	return _78417_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad403861_eval_arr(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ab01be82_SliceExpr> _79132_s) {
	jule::Ptr<_1ad436da0_Arr> _79317_pt = _1ad42cb32_arr(_self_.get()._field_prefix.ptr());
	jule::Ptr<_1ad436da0_Arr> _79517_arr = jule::new_ptr<_1ad436da0_Arr>(_1ad436da0_Arr(false,0LL,_79317_pt.get()._field_elem));
	jule::Bool _80117_filled = false;
	if ((_79132_s.get()._field_exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _79132_s.get()._field_exprs[1LL].get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_1aadb66cd_VariadicExpr>>()) {
				_case_begin_1b03be93a:;
				{
					if ((_79132_s.get()._field_exprs[1LL].get()._field_kind.operator jule::Ptr<_1aadb66cd_VariadicExpr>().get()._field_expr != nullptr)) {
						goto _match_end_1b03be8b3;
					}
					if (_79317_pt.get()._field_auto) {
						_1ad3e90b5_push_err(_self_.ptr(), _79132_s.get()._field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					}
					_80117_filled=true;
					_79132_s.get()._field_exprs=_79132_s.get()._field_exprs.slice(0LL,1LL);
				}
			}
			_match_end_1b03be8b3:;
		}
	}
	_79517_arr.get()._field_n=static_cast<jule::I64>(_79132_s.get()._field_exprs.len());
	if ((!(_79317_pt.get()._field_auto))) {
		if (_79517_arr.get()._field_n > _79317_pt.get()._field_n) {
			_1ad3e90b5_push_err(_self_.ptr(), _79132_s.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if (_79517_arr.get()._field_n < _79317_pt.get()._field_n) {
			_79517_arr.get()._field_n=_79317_pt.get()._field_n;
		}
	}
	jule::Ptr<_1ac66ca98_ArrayExprModel> _83017_model = jule::new_ptr<_1ac66ca98_ArrayExprModel>(_1ac66ca98_ArrayExprModel(_79517_arr,jule::Slice<jule::Any>()));
	if (_80117_filled) {
		_83017_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_83017_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_79132_s.get()._field_exprs.len()));
	}
	jule::Ptr<_1ad429931_TypeKind> _83917_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=_79517_arr.get()._field_elem;
	{
		auto &expr = _79132_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1b03c5864:;
		if (it != expr.end()) {
			jule::Ptr<_1aadb528c_Expr> _1b03c5c0a_elem = *it;
			{
				jule::Ptr<_1ad3e6975_Data> _84221_d = _1ad418524_eval_expr_kind(_self_, jule::Any(_1b03c5c0a_elem));
				if ((_84221_d == nullptr)) {
					goto _iter_next_1b03c5864;
				}
				_1ad387619_check_assign_type(_self_.get()._field_s, false,_79517_arr.get()._field_elem,_84221_d,_79132_s.get()._field_token);
				_83017_model.get()._field_elems = jule::alloc_for_append(_83017_model.get()._field_elems,1);_83017_model.get()._field_elems.__push(_84221_d.get()._field_model);
			}
			_iter_next_1b03c5864:;
			++it;
			goto _iter_begin_1b03c5864;
		}
		_iter_end_1b03c5864:;
	}
	_self_.get()._field_prefix=_83917_prefix;
	if (_80117_filled) {
		_83017_model.get()._field_elems = jule::alloc_for_append(_83017_model.get()._field_elems,1);_83017_model.get()._field_elems.__push(jule::Any(nullptr));
	}
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_79517_arr, 10))),jule::Ptr<_1ad429931_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_83017_model)),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
}



inline jule::Ptr<_1ad3e6975_Data> _1ad403ce5_eval_exp_slc(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ab01be82_SliceExpr> _86636_s,jule::Ptr<_1ad429931_TypeKind> _86655_elem_type) {
	jule::Ptr<_1ad4346d8_Slc> _86717_slc = jule::new_ptr<_1ad4346d8_Slc>(_1ad4346d8_Slc(_86655_elem_type));
	jule::Ptr<_1ac66949b_SliceExprModel> _87117_model = jule::new_ptr<_1ac66949b_SliceExprModel>(_1ac66949b_SliceExprModel(_86655_elem_type,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_86636_s.get()._field_exprs.len()))));
	jule::Ptr<_1ad429931_TypeKind> _87617_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=_86717_slc.get()._field_elem;
	{
		auto &expr = _86636_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1b03cb617:;
		if (it != expr.end()) {
			jule::Ptr<_1aadb528c_Expr> _1b03cb738_elem = *it;
			{
				jule::Ptr<_1ad3e6975_Data> _87921_d = _1ad418524_eval_expr_kind(_self_, jule::Any(_1b03cb738_elem));
				if ((_87921_d == nullptr)) {
					goto _iter_next_1b03cb617;
				}
				_1ad387619_check_assign_type(_self_.get()._field_s, false,_86717_slc.get()._field_elem,_87921_d,_86636_s.get()._field_token);
				_87117_model.get()._field_elems = jule::alloc_for_append(_87117_model.get()._field_elems,1);_87117_model.get()._field_elems.__push(_87921_d.get()._field_model);
			}
			_iter_next_1b03cb617:;
			++it;
			goto _iter_begin_1b03cb617;
		}
		_iter_end_1b03cb617:;
	}
	_self_.get()._field_prefix=_87617_prefix;
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_86717_slc, 7))),jule::Ptr<_1ad429931_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_87117_model)),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
}



inline jule::Ptr<_1ad3e6975_Data> _1ad40419c_eval_slice_expr(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ab01be82_SliceExpr> _89739_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1ad42cb32_arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1b03d03da:;
				{
					return _1ad403861_eval_arr(_self_, _89739_s);
				}
			}
			else if ((_1ad42ce0c_slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1b03d0462:;
				{
					jule::Ptr<_1ad4346d8_Slc> _90425_pt = _1ad42ce0c_slc(_self_.get()._field_prefix.ptr());
					return _1ad403ce5_eval_exp_slc(_self_, _89739_s,_90425_pt.get()._field_elem);
				}
			}
			_match_end_1b03d02ca:;
		}
	}
	jule::Ptr<_1ad429931_TypeKind> _90917_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	if ((_89739_s.get()._field_exprs.len() == 0LL)) {
		_1ad3e90b5_push_err(_self_.ptr(), _89739_s.get()._field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ad3e6975_Data> _91717_first_elem = _1ad418524_eval_expr_kind(_self_, jule::Any(_89739_s.get()._field_exprs[0LL]));
	if ((_91717_first_elem == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1ad3e6975_Data> _92217_d = _1ad403ce5_eval_exp_slc(_self_, _89739_s,_91717_first_elem.get()._field_kind);
	_self_.get()._field_prefix=_90917_prefix;
	return _92217_d;
}



inline void _1ad4045dc_check_integer_indexing_by_data(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data>& _92854_d,_1ab005531_Token _92864_token) {
	jule::Str _92913_err_key = _1ad425b5d_check_data_for_integer_indexing(_92854_d);
	{
		auto &_match_expr{ _92913_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b03d6c71:;
			{
				return;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1b03d6a73:;
			{
				_1ad3e90b5_push_err(&(*_self_), _92864_token,_92913_err_key,jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_92854_d.get()._field_kind.ptr()))}));
			}
		}
		else {
			_case_begin_1b03d6424:;
			{
				_1ad3e90b5_push_err(&(*_self_), _92864_token,_92913_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1b03d6941:;
	}
}



inline void _1ad404aa4_indexing_ptr(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data>& _94236_d,jule::Ptr<_1ad3e6975_Data>& _94251_index,jule::Ptr<_1aadb58ec_IndexingExpr>& _94266_i) {
	_1ad4045dc_check_integer_indexing_by_data(&(*_self_), _94251_index,_94266_i.get()._field_token);
	jule::Ptr<_1ad437983_Ptr> _94517_ptr = _1ad42c57c_ptr(_94236_d.get()._field_kind.ptr());
	{
		
		if (_1ad4385cc_is_unsafe(_94517_ptr.ptr())) {
			_case_begin_1b03da1c5:;
			{
				_1ad3e90b5_push_err(&(*_self_), _94266_i.get()._field_token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;
			}
		}
		else if ((!(_1ad3e9c20_is_unsafe(&(*_self_))))) {
			_case_begin_1b03da24c:;
			{
				_1ad3e90b5_push_err(&(*_self_), _94266_i.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b03da0d7:;
	}
	_94236_d.get()._field_kind=_94517_ptr.get()._field_elem;
}



inline void _1ad40507c_indexing_arr(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data>& _95836_d,jule::Ptr<_1ad3e6975_Data>& _95851_index,jule::Ptr<_1aadb58ec_IndexingExpr>& _95866_i) {
	jule::Ptr<_1ad436da0_Arr> _95917_arr = _1ad42cb32_arr(_95836_d.get()._field_kind.ptr());
	_95836_d.get()._field_kind=_95917_arr.get()._field_elem;
	_1ad4045dc_check_integer_indexing_by_data(&(*_self_), _95851_index,_95866_i.get()._field_token);
	if (_1ad3e747b_is_const(_95851_index.ptr()) && (_1ad2c4633_as_f64(_95851_index.get()._field_constant.ptr()) >= static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_95917_arr.get()._field_n))))) {
		_1ad3e90b5_push_err(&(*_self_), _95866_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	}
}



inline void _1ad405555_indexing_slc(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data>& _96736_d,jule::Ptr<_1ad3e6975_Data>& _96751_index,jule::Ptr<_1aadb58ec_IndexingExpr>& _96766_i) {
	jule::Ptr<_1ad4346d8_Slc> _96817_slc = _1ad42ce0c_slc(_96736_d.get()._field_kind.ptr());
	_96736_d.get()._field_kind=_96817_slc.get()._field_elem;
	_1ad4045dc_check_integer_indexing_by_data(&(*_self_), _96751_index,_96766_i.get()._field_token);
	if ((!(_1ad3e747b_is_const(_96751_index.ptr())))) {
		return;
	}
	{
		auto &_match_expr{ _96736_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac66949b_SliceExprModel>>()) {
			_case_begin_1b03e381b:;
			{
				jule::Ptr<_1ac66949b_SliceExprModel> _97821_m = _96736_d.get()._field_model.operator jule::Ptr<_1ac66949b_SliceExprModel>();
				jule::F64 _97917_indx = _1ad2c4633_as_f64(_96751_index.get()._field_constant.ptr());
				if (_97917_indx >= static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_97821_m.get()._field_elems.len())))) {
					_1ad3e90b5_push_err(&(*_self_), _96766_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_96736_d.get()._field_model=_97821_m.get()._field_elems[static_cast<jule::I64>(static_cast<jule::U64>(_97917_indx))];
					_96736_d.get()._field_decl=true;
				}
			}
		}
		_match_end_1b03e37a5:;
	}
}



inline void _1ad405a2d_indexing_map(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data>& _98936_d,jule::Ptr<_1ad3e6975_Data>& _98951_index,jule::Ptr<_1aadb58ec_IndexingExpr>& _98970_i) {
	if ((_98951_index == nullptr)) {
		return;
	}
	jule::Ptr<_1ad4360be_Map> _99417_m = _1ad42da67_map(_98936_d.get()._field_kind.ptr());
	_1ad3d019a_AssignTypeChecker _99517_atc = _1ad3d019a_AssignTypeChecker((*_self_)._field_s,_99417_m.get()._field_key,_98951_index,_98970_i.get()._field_token);
	_1ad3d161e_check(&_99517_atc);
	_98936_d.get()._field_kind=_99417_m.get()._field_val;
}



inline void _1ad406006_indexing_str(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data>& _100636_d,jule::Ptr<_1ad3e6975_Data>& _100651_index,jule::Ptr<_1aadb58ec_IndexingExpr>& _100666_i) {
	
	_100636_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("u8", 2)), 5)));
	if ((_100651_index == nullptr)) {
		return;
	}
	_1ad4045dc_check_integer_indexing_by_data(&(*_self_), _100651_index,_100666_i.get()._field_token);
	if ((!(_1ad3e747b_is_const(_100651_index.ptr())))) {
		_100636_d.get()._field_constant=nullptr;
		return;
	}
	if (_1ad3e747b_is_const(_100636_d.ptr())) {
		_1ab005531_Token _102217_error_token = _100666_i.get()._field_token;
		jule::I64 _102317_j = _1ad2c407d_as_i64(_100651_index.get()._field_constant.ptr());
		jule::Str _102417_s = _1ad2c39c8_read_str(_100636_d.get()._field_constant.ptr());
		if (static_cast<jule::I64>(_102317_j) >= static_cast<jule::I64>(static_cast<jule::I64>(_102417_s.len()))) {
			_1ad3e90b5_push_err(&(*_self_), _102217_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1ad2c4c71_set_u64(_100636_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_102417_s[_102317_j])));
		}
	}
}



inline void _1ad4064ce_to_indexing(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data>& _103335_d,jule::Ptr<_1ad3e6975_Data>& _103350_index,jule::Ptr<_1aadb58ec_IndexingExpr>& _103369_i) {
	{
		
		if ((_1ad42c57c_ptr(_103335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b040132e:;
			{
				_1ad404aa4_indexing_ptr(&(*_self_), _103335_d,_103350_index,_103369_i);
				return;
			}
		}
		else if ((_1ad42cb32_arr(_103335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b04013a6:;
			{
				_1ad40507c_indexing_arr(&(*_self_), _103335_d,_103350_index,_103369_i);
				return;
			}
		}
		else if ((_1ad42ce0c_slc(_103335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b040142d:;
			{
				_1ad405555_indexing_slc(&(*_self_), _103335_d,_103350_index,_103369_i);
				return;
			}
		}
		else if ((_1ad42da67_map(_103335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b04014a5:;
			{
				_1ad405a2d_indexing_map(&(*_self_), _103335_d,_103350_index,_103369_i);
				return;
			}
		}
		else if ((_1ad42bec7_prim(_103335_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b040152c:;
			{
				jule::Ptr<_1ad42ec99_Prim> _105217_prim = _1ad42bec7_prim(_103335_d.get()._field_kind.ptr());
				{
					
					if (_1ad4334c8_is_str(_105217_prim.ptr())) {
						_case_begin_1b04065dc:;
						{
							_1ad406006_indexing_str(&(*_self_), _103335_d,_103350_index,_103369_i);
							return;
						}
					}
					_match_end_1b0406532:;
				}
			}
		}
		_match_end_1b04011db:;
	}
	_1ad3e90b5_push_err(&(*_self_), _103369_i.get()._field_token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_103335_d.get()._field_kind.ptr()))}));
}



inline jule::Bool _1ad4069a7_push_generics_from_index_data(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1aaec9b87_IdentTypeDecl>& _106354_decl,jule::Ptr<_1aadb58ec_IndexingExpr>& _106381_i) {
	{
		auto &_match_expr{ _106381_i.get()._field_index.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1aadb64ad_UnaryExpr>>()) {
			_case_begin_1b0409bc8:;
			{
				jule::Ptr<_1ad3e6975_Data> _106821_d = _1ad402c4a_eval_unary(_self_, _106381_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1aadb64ad_UnaryExpr>());
				if ((!(_106821_d.get()._field_decl))) {
					_1ad3e90b5_push_err(_self_.ptr(), _106381_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				}
				_106354_decl.get()._field_generics = jule::alloc_for_append(_106354_decl.get()._field_generics,1);_106354_decl.get()._field_generics.__push(jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl(_1ab005531_Token(),jule::Any(jule::Any(_106821_d.get()._field_kind)))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aae075dc_TypeDecl>>()) {
			_case_begin_1b0408d09:;
			{
				_106354_decl.get()._field_generics = jule::alloc_for_append(_106354_decl.get()._field_generics,1);_106354_decl.get()._field_generics.__push(_106381_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1aae075dc_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aadb628d_IdentExpr>>()) {
			_case_begin_1b0408d70:;
			{
				jule::Ptr<_1aadb628d_IdentExpr> _107921_expr = _106381_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1aadb628d_IdentExpr>();
				_106354_decl.get()._field_generics = jule::alloc_for_append(_106354_decl.get()._field_generics,1);_106354_decl.get()._field_generics.__push(jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl(_1ab005531_Token(),jule::Any(jule::Any(jule::new_ptr<_1aaec9b87_IdentTypeDecl>(_1aaec9b87_IdentTypeDecl(_107921_expr.get()._field_token,_107921_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>>())))))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aadb56cc_TupleExpr>>()) {
			_case_begin_1b0408dd6:;
			{
				{
					auto &expr = _106381_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1aadb56cc_TupleExpr>().get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1b040dd75:;
					if (it != expr.end()) {
						jule::Ptr<_1aadb528c_Expr> _1b040eb67_expr = *it;
						{
							{
								auto &_match_expr{ _1b040eb67_expr.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1aae075dc_TypeDecl>>()) {
									_case_begin_1b0410492:;
									{
										_106354_decl.get()._field_generics = jule::alloc_for_append(_106354_decl.get()._field_generics,1);_106354_decl.get()._field_generics.__push(_1b040eb67_expr.get()._field_kind.operator jule::Ptr<_1aae075dc_TypeDecl>());
									}
								}
								else if (_match_expr.type_is<jule::Ptr<_1aadb628d_IdentExpr>>()) {
									_case_begin_1b0410508:;
									{
										jule::Ptr<_1aadb628d_IdentExpr> _109229_expr = _1b040eb67_expr.get()._field_kind.operator jule::Ptr<_1aadb628d_IdentExpr>();
										_106354_decl.get()._field_generics = jule::alloc_for_append(_106354_decl.get()._field_generics,1);_106354_decl.get()._field_generics.__push(jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl(_1ab005531_Token(),jule::Any(jule::Any(jule::new_ptr<_1aaec9b87_IdentTypeDecl>(_1aaec9b87_IdentTypeDecl(_109229_expr.get()._field_token,_109229_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>>())))))));
									}
								}
								_match_end_1b041043c:;
							}
						}
						_iter_next_1b040dd75:;
						++it;
						goto _iter_begin_1b040dd75;
					}
					_iter_end_1b040dd75:;
				}
			}
		}
		else {
			_case_begin_1b0408c93:;
			{
				_1ad3e90b5_push_err(_self_.ptr(), _106381_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1b0408b94:;
	}
	return true;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad406e6e_eval_ident_decl_from_indexing(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ad3e6975_Data>& _110854_d,jule::Ptr<_1aadb58ec_IndexingExpr>& _110869_i) {
	jule::Ptr<_1aae075dc_TypeDecl> _110917_tdecl = jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl());
	jule::Ptr<_1aaec9b87_IdentTypeDecl> _111017_decl = nullptr;
	{
		auto &_match_expr{ _110869_i.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1aadb628d_IdentExpr>>()) {
			_case_begin_1b04149d5:;
			{
				jule::Ptr<_1aadb628d_IdentExpr> _111321_expr = _110869_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1aadb628d_IdentExpr>();
				_111017_decl=jule::new_ptr<_1aaec9b87_IdentTypeDecl>(_1aaec9b87_IdentTypeDecl(_111321_expr.get()._field_token,_111321_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>>()));
				_110917_tdecl.get()._field_kind=jule::Any(_111017_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01ac72_NsSelectionExpr>>()) {
			_case_begin_1b0414a4b:;
			{
				jule::Ptr<_1ab01ac72_NsSelectionExpr> _112021_expr = _110869_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1ab01ac72_NsSelectionExpr>();
				_111017_decl=jule::new_ptr<_1aaec9b87_IdentTypeDecl>(_1aaec9b87_IdentTypeDecl(_112021_expr.get()._field_ident,_112021_expr.get()._field_ident._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>>()));
				_110917_tdecl.get()._field_kind=jule::Any(jule::new_ptr<_1aaea458a_NamespaceTypeDecl>(_1aaea458a_NamespaceTypeDecl(_112021_expr.get()._field_ns,_111017_decl)));
			}
		}
		else {
			_case_begin_1b0413b5a:;
			{
				_1ad3e90b5_push_err(_self_.ptr(), _110869_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b0413a5b:;
	}
	if ((!(_1ad4069a7_push_generics_from_index_data(_self_, _111017_decl,_110869_i)))) {
		return nullptr;
	}
	return _1ad40d1ea_eval_type(_self_.ptr(), _110917_tdecl);
}



inline jule::Ptr<_1ad3e6975_Data> _1ad407315_eval_indexing(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1aadb58ec_IndexingExpr> _113937_i) {
	jule::Ptr<_1ad429931_TypeKind> _114017_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_114017_prefix;
	});
	jule::Ptr<_1ad3e6975_Data> _114417_d = _1ad418524_eval_expr_kind(_self_, jule::Any(_113937_i.get()._field_expr));
	if ((_114417_d == nullptr)) {
		return nullptr;
	}
	if (_114417_d.get()._field_decl) {
		return _1ad406e6e_eval_ident_decl_from_indexing(_self_, _114417_d,_113937_i);
	}
	_1ad3e6975_Data _115417_old_d = (*(_114417_d));
	jule::Ptr<_1ad3e6975_Data> _115617_index = _1ad418524_eval_expr_kind(_self_, jule::Any(_113937_i.get()._field_index));
	if ((_115617_index == nullptr)) {
		return nullptr;
	}
	_114417_d.get()._field_decl=false;
	_1ad4064ce_to_indexing(_self_.ptr(), _114417_d,_115617_index,_113937_i);
	if (_1ad3e747b_is_const(_114417_d.ptr())) {
		_114417_d.get()._field_decl=false;
		_114417_d.get()._field_model=jule::Any(_114417_d.get()._field_constant);
	} else if (_114417_d.get()._field_decl) {
		_114417_d.get()._field_decl=false;
	} else {
		_114417_d.get()._field_model=jule::Any(jule::new_ptr<_1ac6699eb_IndexingExprModel>(_1ac6699eb_IndexingExprModel(_113937_i.get()._field_token,jule::new_ptr<_1ad3e6975_Data>(_115417_old_d),_115617_index)));
	}
	return _114417_d;
}



inline std::tuple<jule::Ptr<_1ad3e6975_Data>,jule::Ptr<_1ad3e6975_Data>> _1ad4076bc_eval_slicing_exprs(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ab01c625_SlicingExpr>& _118743_s) {
	jule::Ptr<_1ad429931_TypeKind> _118817_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_118817_prefix;
	});
	jule::Ptr<_1ad3e6975_Data> _119217_l = nullptr;
	jule::Ptr<_1ad3e6975_Data> _119317_r = nullptr;
	if ((_118743_s.get()._field_start != nullptr)) {
		_119217_l=_1ad418524_eval_expr_kind(_self_, jule::Any(_118743_s.get()._field_start));
		if ((_119217_l != nullptr)) {
			_1ad4045dc_check_integer_indexing_by_data(_self_.ptr(), _119217_l,_118743_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	} else {
		_119217_l=jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__1ad2c20ae_new_i64(0LL)));
		_119217_l.get()._field_model=jule::Any(_119217_l.get()._field_constant);
	}
	if ((_118743_s.get()._field_to != nullptr)) {
		_119317_r=_1ad418524_eval_expr_kind(_self_, jule::Any(_118743_s.get()._field_to));
		if ((_119317_r != nullptr)) {
			_1ad4045dc_check_integer_indexing_by_data(_self_.ptr(), _119317_r,_118743_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	}
	return std::make_tuple(_119217_l,_119317_r);
}



inline void _1ad4079db_slicing_arr(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data>& _122231_d) {
	jule::Ptr<_1ad429931_TypeKind> _122317_elem_type = _1ad42cb32_arr(_122231_d.get()._field_kind.ptr()).get()._field_elem;
	_122231_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ad4346d8_Slc>(_1ad4346d8_Slc(_122317_elem_type)), 7)));
	_122231_d.get()._field_lvalue=false;
	_122231_d.get()._field_mutable=_122231_d.get()._field_mutable || (!(_1ad42b092_mutable(_122317_elem_type.ptr())));
}



inline void _1ad407eb4_slicing_str(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data>& _123731_d,jule::Ptr<_1ad3e6975_Data>& _123742_l,jule::Ptr<_1ad3e6975_Data>& _123753_r) {
	_123731_d.get()._field_lvalue=false;
	_123731_d.get()._field_mutable=true;
	if ((!(_1ad3e747b_is_const(_123731_d.ptr())))) {
		return;
	}
	if ((_123742_l == nullptr) || (_123753_r == nullptr)) {
		_123731_d.get()._field_constant=nullptr;
		return;
	}
	if (_1ad3e747b_is_const(_123742_l.ptr()) && _1ad3e747b_is_const(_123753_r.ptr())) {
		jule::I64 _125017_left = _1ad2c407d_as_i64(_123742_l.get()._field_constant.ptr());
		if ((_125017_left < 0LL)) {
			return;
		}
		jule::Str _125517_s = _1ad2c39c8_read_str(_123731_d.get()._field_constant.ptr());
		jule::I64 _125621_right = 0LL;
		if ((_123753_r == nullptr)) {
			_125621_right=static_cast<jule::I64>(static_cast<jule::I64>(_125517_s.len()));
		} else {
			_125621_right=static_cast<jule::I64>(_1ad2c407d_as_i64(_123753_r.get()._field_constant.ptr()));
		}
		if (_125017_left > _125621_right) {
			return;
		}
		_1ad2c53ae_set_str(_123731_d.get()._field_constant.ptr(), _125517_s.slice(_125017_left,_125621_right));
		_123731_d.get()._field_decl=true;
	} else {
		_123731_d.get()._field_constant=nullptr;
	}
}



inline void _1ad408569_check_slicing(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data>& _127337_d,jule::Ptr<_1ad3e6975_Data>& _127348_l,jule::Ptr<_1ad3e6975_Data>& _127359_r,jule::Ptr<_1ab01c625_SlicingExpr>& _127370_s) {
	{
		
		if ((_1ad42cb32_arr(_127337_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0430748:;
			{
				_1ad4079db_slicing_arr(&(*_self_), _127337_d);
				return;
			}
		}
		else if ((_1ad42ce0c_slc(_127337_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b04307c0:;
			{
				return;
			}
		}
		else if ((_1ad42bec7_prim(_127337_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0430847:;
			{
				jule::Ptr<_1ad42ec99_Prim> _128117_prim = _1ad42bec7_prim(_127337_d.get()._field_kind.ptr());
				{
					
					if (_1ad4334c8_is_str(_128117_prim.ptr())) {
						_case_begin_1b0433185:;
						{
							_1ad407eb4_slicing_str(&(*_self_), _127337_d,_127348_l,_127359_r);
							return;
						}
					}
					_match_end_1b04330ca:;
				}
			}
		}
		_match_end_1b0430627:;
	}
	_1ad3e90b5_push_err(&(*_self_), _127370_s.get()._field_token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_127337_d.get()._field_kind.ptr()))}));
}



inline jule::Ptr<_1ad3e6975_Data> _1ad408921_eval_slicing(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ab01c625_SlicingExpr> _129236_s) {
	jule::Ptr<_1ad3e6975_Data> _129317_d = _1ad418524_eval_expr_kind(_self_, jule::Any(_129236_s.get()._field_expr));
	if ((_129317_d == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1ad3e6975_Data> _129818_l;
	jule::Ptr<_1ad3e6975_Data> _129825_r;
	std::tie(_129818_l,_129825_r) = _1ad4076bc_eval_slicing_exprs(_self_, _129236_s);
	if ((_129818_l == nullptr)) {
		return _129317_d;
	}
	_129317_d.get()._field_decl=false;
	_1ad408569_check_slicing(_self_.ptr(), _129317_d,_129818_l,_129825_r,_129236_s);
	_129317_d.get()._field_cast_kind=nullptr;
	if (_1ad3e747b_is_const(_129317_d.ptr())) {
		_129317_d.get()._field_decl=false;
		_129317_d.get()._field_model=jule::Any(_129317_d.get()._field_constant);
	} else if (_129317_d.get()._field_decl) {
		_129317_d.get()._field_decl=false;
	} else {
		jule::Ptr<_1ac66b04c_SlicingExprModel> _131721_model = jule::new_ptr<_1ac66b04c_SlicingExprModel>(_1ac66b04c_SlicingExprModel(_129236_s.get()._field_token,_129317_d.get()._field_model,_129818_l.get()._field_model,jule::Any()));
		if ((_129825_r != nullptr)) {
			_131721_model.get()._field_right=_129825_r.get()._field_model;
		}
		_129317_d.get()._field_model=jule::Any(_131721_model);
	}
	return _129317_d;
}



inline void _1ad408de9_cast_ptr(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad429931_TypeKind> _133031_t,jule::Ptr<_1ad3e6975_Data> _133049_d,_1ab005531_Token _133059_error_token) {
	jule::Ptr<_1ad433b05_Sptr> _133113_sptr = _1ad42c2a2_sptr(_133049_d.get()._field_kind.ptr());
	if ((_133113_sptr != nullptr)) {
		if ((!(_1ad42a206_equals(_1ad42c57c_ptr(_133031_t.ptr()).get()._field_elem, _133113_sptr.get()._field_elem)))) {
			_1ad3e90b5_push_err(&(*_self_), _133059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_133049_d.get()._field_kind.ptr())),jule::Any(_1ad429d4e_to_str(_133031_t.ptr()))}));
		}
		return;
	}
	if ((!(_1ad3e9c20_is_unsafe(&(*_self_))))) {
		_1ad3e90b5_push_err(&(*_self_), _133059_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1ad42ec99_Prim> _134413_prim = _1ad42bec7_prim(_133049_d.get()._field_kind.ptr());
	if ((_1ad42c57c_ptr(_133049_d.get()._field_kind.ptr()) == nullptr) && ((_134413_prim == nullptr) || (!(_1ad354916_is_int(_1ad430173_to_str(_134413_prim.ptr())))))) {
		_1ad3e90b5_push_err(&(*_self_), _133059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_133049_d.get()._field_kind.ptr())),jule::Any(_1ad429d4e_to_str(_133031_t.ptr()))}));
	}
	_133049_d.get()._field_constant=nullptr;
}



inline void _1ad4093c2_cast_struct(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad429931_TypeKind> _135234_t,jule::Ptr<_1ad3e6975_Data> _135252_d,_1ab005531_Token _135262_error_token) {
	jule::Ptr<_1ac85d096_Trait> _135317_tr = _1ad42d78c_trt(_135252_d.get()._field_kind.ptr());
	if ((_135317_tr == nullptr)) {
		_1ad3e90b5_push_err(&(*_self_), _135262_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_135252_d.get()._field_kind.ptr())),jule::Any(_1ad429d4e_to_str(_135234_t.ptr()))}));
		return;
	}
	jule::Ptr<_1ac664551_StructIns> _135917_s = _1ad42d4b2_strct(_135234_t.ptr());
	_1ad3ed86c_push_reference_to_struct(&(*_self_), _135917_s);
	if ((!(_1ac66296c_is_implements(_135917_s.get()._field_decl.ptr(), _135317_tr)))) {
		_1ad3e90b5_push_err(&(*_self_), _135262_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_135252_d.get()._field_kind.ptr())),jule::Any(_1ad429d4e_to_str(_135234_t.ptr()))}));
	}
}



inline void _1ad40989a_cast_ref(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad429931_TypeKind> _136731_t,jule::Ptr<_1ad3e6975_Data> _136749_d,_1ab005531_Token _136759_error_token) {
	jule::Ptr<_1ad433b05_Sptr> _136817_sptr = _1ad42c2a2_sptr(_136731_t.ptr());
	jule::Ptr<_1ad437983_Ptr> _137017_ptr = _1ad42c57c_ptr(_136749_d.get()._field_kind.ptr());
	if ((_137017_ptr != nullptr) && _1ad42a206_equals(_136817_sptr.get()._field_elem, _137017_ptr.get()._field_elem)) {
		if ((!(_1ad3e9c20_is_unsafe(&(*_self_))))) {
			_1ad3e90b5_push_err(&(*_self_), _136759_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		}
		return;
	}
	if ((_1ad42d4b2_strct(_136817_sptr.get()._field_elem.ptr()) != nullptr)) {
		_1ad4093c2_cast_struct(&(*_self_), _136817_sptr.get()._field_elem,_136749_d,_136759_error_token);
		return;
	}
	_1ad3e90b5_push_err(&(*_self_), _136759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_136749_d.get()._field_kind.ptr())),jule::Any(_1ad429d4e_to_str(_136731_t.ptr()))}));
}



inline void _1ad409d73_cast_slc(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad429931_TypeKind> _138931_t,jule::Ptr<_1ad3e6975_Data> _138949_d,_1ab005531_Token _138959_error_token) {
	if ((_1ad42c857_enm(_138949_d.get()._field_kind.ptr()) != nullptr)) {
		if ((_1ad42bec7_prim(_1ad42c857_enm(_138949_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1ad4334c8_is_str(_1ad42bec7_prim(_1ad42c857_enm(_138949_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).ptr())))) {
			_1ad3e90b5_push_err(&(*_self_), _138959_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_138949_d.get()._field_kind.ptr())),jule::Any(_1ad429d4e_to_str(_138931_t.ptr()))}));
			return;
		}
	} else if ((_1ad42bec7_prim(_138949_d.get()._field_kind.ptr()) == nullptr) || (!(_1ad4334c8_is_str(_1ad42bec7_prim(_138949_d.get()._field_kind.ptr()).ptr())))) {
		_1ad3e90b5_push_err(&(*_self_), _138959_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_138949_d.get()._field_kind.ptr())),jule::Any(_1ad429d4e_to_str(_138931_t.ptr()))}));
		return;
	}
	_138931_t=_1ad42ce0c_slc(_138931_t.ptr()).get()._field_elem;
	jule::Ptr<_1ad42ec99_Prim> _140113_prim = _1ad42bec7_prim(_138931_t.ptr());
	if ((_140113_prim == nullptr) || ((!(_1ad43165d_is_u8(_140113_prim.ptr()))) && (!(_1ad4310a8_is_i32(_140113_prim.ptr()))))) {
		_1ad3e90b5_push_err(&(*_self_), _138959_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_138949_d.get()._field_kind.ptr())),jule::Any(_1ad429d4e_to_str(_138931_t.ptr()))}));
	}
}



inline void _1ad40a26e_cast_str(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data> _140731_d,_1ab005531_Token _140741_error_token) {
	if ((_1ad42c857_enm(_140731_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac724545_Enum> _140921_e = _1ad42c857_enm(_140731_d.get()._field_kind.ptr());
		if ((_1ad42bec7_prim(_140921_e.get()._field_kind.get()._field_kind.ptr()) != nullptr) && _1ad4334c8_is_str(_1ad42bec7_prim(_140921_e.get()._field_kind.get()._field_kind.ptr()).ptr())) {
			return;
		}
	}
	if ((_1ad42bec7_prim(_140731_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ad42ec99_Prim> _141617_prim = _1ad42bec7_prim(_140731_d.get()._field_kind.ptr());
		if ((!(_1ad43165d_is_u8(_141617_prim.ptr()))) && (!(_1ad4310a8_is_i32(_141617_prim.ptr())))) {
			_1ad3e90b5_push_err(&(*_self_), _140741_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1ad429d4e_to_str(_140731_d.get()._field_kind.ptr()))}));
		}
		return;
	}
	if ((_1ad42ce0c_slc(_140731_d.get()._field_kind.ptr()) == nullptr)) {
		_1ad3e90b5_push_err(&(*_self_), _140741_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1ad429d4e_to_str(_140731_d.get()._field_kind.ptr()))}));
		return;
	}
	jule::Ptr<_1ad429931_TypeKind> _142817_t = _1ad42ce0c_slc(_140731_d.get()._field_kind.ptr()).get()._field_elem;
	jule::Ptr<_1ad42ec99_Prim> _142913_prim = _1ad42bec7_prim(_142817_t.ptr());
	if ((_142913_prim == nullptr) || ((!(_1ad43165d_is_u8(_142913_prim.ptr()))) && (!(_1ad4310a8_is_i32(_142913_prim.ptr()))))) {
		_1ad3e90b5_push_err(&(*_self_), _140741_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1ad429d4e_to_str(_140731_d.get()._field_kind.ptr()))}));
	}
}



inline void _1ad40a747_cast_int(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad429931_TypeKind> _143531_t,jule::Ptr<_1ad3e6975_Data> _143549_d,_1ab005531_Token _143559_error_token) {
	if (_1ad3e747b_is_const(_143549_d.ptr())) {
		jule::Ptr<_1ad42ec99_Prim> _143717_prim = _1ad42bec7_prim(_143531_t.ptr());
		{
			
			if (_1ad3542a6_is_sig_int(_143717_prim.get()._field_kind)) {
				_case_begin_1b046068a:;
				{
					_1ad2c4952_set_i64(_143549_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1ad2c407d_as_i64(_143549_d.get()._field_constant.ptr())));
				}
			}
			else if (_1ad354608_is_unsig_int(_143717_prim.get()._field_kind)) {
				_case_begin_1b0460712:;
				{
					_1ad2c4c71_set_u64(_143549_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1ad2c4358_as_u64(_143549_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1b04605d0:;
		}
	}
	if ((_1ad42c857_enm(_143549_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac724545_Enum> _144817_e = _1ad42c857_enm(_143549_d.get()._field_kind.ptr());
		if (_1ad355076_is_num(_1ad429d4e_to_str(_144817_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;
		}
	}
	if ((_1ad42c2a2_sptr(_143549_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ad42ec99_Prim> _145517_prim = _1ad42bec7_prim(_143531_t.ptr());
		if ((!(_1ad432e23_is_uintptr(_145517_prim.ptr())))) {
			_1ad3e90b5_push_err(&(*_self_), _143559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_143549_d.get()._field_kind.ptr())),jule::Any(_1ad429d4e_to_str(_143531_t.ptr()))}));
		}
		return;
	}
	if ((_1ad42c57c_ptr(_143549_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ad42ec99_Prim> _146217_prim = _1ad42bec7_prim(_143531_t.ptr());
		if (_1ad432e23_is_uintptr(_146217_prim.ptr())) {
		} else if ((!(_1ad3e9c20_is_unsafe(&(*_self_))))) {
			_1ad3e90b5_push_err(&(*_self_), _143559_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if (((((!(_1ad4310a8_is_i32(_146217_prim.ptr()))) && (!(_1ad431383_is_i64(_146217_prim.ptr())))) && (!(_1ad431938_is_u16(_146217_prim.ptr())))) && (!(_1ad431c13_is_u32(_146217_prim.ptr())))) && (!(_1ad431edd_is_u64(_146217_prim.ptr())))) {
			_1ad3e90b5_push_err(&(*_self_), _143559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_143549_d.get()._field_kind.ptr())),jule::Any(_1ad429d4e_to_str(_143531_t.ptr()))}));
		}
		return;
	}
	jule::Ptr<_1ad42ec99_Prim> _147313_prim = _1ad42bec7_prim(_143549_d.get()._field_kind.ptr());
	if ((_147313_prim != nullptr) && _1ad355076_is_num(_1ad430173_to_str(_147313_prim.ptr()))) {
		return;
	}
	_1ad3e90b5_push_err(&(*_self_), _143559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_143549_d.get()._field_kind.ptr())),jule::Any(_1ad429d4e_to_str(_143531_t.ptr()))}));
}



inline void _1ad40ac20_cast_num(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad429931_TypeKind> _148131_t,jule::Ptr<_1ad3e6975_Data> _148149_d,_1ab005531_Token _148159_error_token) {
	if (_1ad3e747b_is_const(_148149_d.ptr())) {
		jule::Ptr<_1ad42ec99_Prim> _148317_prim = _1ad42bec7_prim(_148131_t.ptr());
		{
			
			if (_1ad354c68_is_float(_148317_prim.get()._field_kind)) {
				_case_begin_1ad83727d:;
				{
					_1ad2c56cd_set_f64(_148149_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1ad2c4633_as_f64(_148149_d.get()._field_constant.ptr())));
				}
			}
			else if (_1ad3542a6_is_sig_int(_148317_prim.get()._field_kind)) {
				_case_begin_1ad837305:;
				{
					_1ad2c4952_set_i64(_148149_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1ad2c407d_as_i64(_148149_d.get()._field_constant.ptr())));
				}
			}
			else if (_1ad354608_is_unsig_int(_148317_prim.get()._field_kind)) {
				_case_begin_1ad83737c:;
				{
					_1ad2c4c71_set_u64(_148149_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1ad2c4358_as_u64(_148149_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1ad8371b2:;
		}
	}
	if ((_1ad42c857_enm(_148149_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac724545_Enum> _149517_e = _1ad42c857_enm(_148149_d.get()._field_kind.ptr());
		if (_1ad355076_is_num(_1ad429d4e_to_str(_149517_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;
		}
	}
	jule::Ptr<_1ad42ec99_Prim> _150113_prim = _1ad42bec7_prim(_148149_d.get()._field_kind.ptr());
	if ((_150113_prim != nullptr) && _1ad355076_is_num(_1ad430173_to_str(_150113_prim.ptr()))) {
		return;
	}
	_1ad3e90b5_push_err(&(*_self_), _148159_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_148149_d.get()._field_kind.ptr())),jule::Any(_1ad429d4e_to_str(_148131_t.ptr()))}));
}



inline void _1ad40b1e8_cast_prim(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad429931_TypeKind> _150932_t,jule::Ptr<_1ad3e6975_Data> _150950_d,_1ab005531_Token _150960_error_token) {
	jule::Ptr<_1ad42ec99_Prim> _151013_prim = _1ad42bec7_prim(_150932_t.ptr());
	{
		
		if (_1ad4337a3_is_any(_151013_prim.ptr())) {
			_case_begin_1ad840253:;
		}
		else if (_1ad4334c8_is_str(_151013_prim.ptr())) {
			_case_begin_1ad8402b9:;
			{
				_1ad40a26e_cast_str(&(*_self_), _150950_d,_150960_error_token);
			}
		}
		else if (_1ad354916_is_int(_1ad430173_to_str(_151013_prim.ptr()))) {
			_case_begin_1ad840330:;
			{
				_1ad40a747_cast_int(&(*_self_), _150932_t,_150950_d,_150960_error_token);
			}
		}
		else if (_1ad355076_is_num(_1ad430173_to_str(_151013_prim.ptr()))) {
			_case_begin_1ad840396:;
			{
				_1ad40ac20_cast_num(&(*_self_), _150932_t,_150950_d,_150960_error_token);
			}
		}
		else {
			_case_begin_1ad8401dc:;
			{
				_1ad3e90b5_push_err(&(*_self_), _150960_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_150932_t.ptr()))}));
			}
		}
		_match_end_1ad840176:;
	}
}



inline void _1ad40b5e4_cast_constant(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad429931_TypeKind>& _152537_t,jule::Ptr<_1ad3e6975_Data>& _152556_d) {
	if ((_152556_d == nullptr) || (!(_1ad3e747b_is_const(_152556_d.ptr())))) {
		return;
	}
	jule::Ptr<_1ad42ec99_Prim> _152913_prim = _1ad42bec7_prim(_152537_t.ptr());
	_1ad426334_cast_const_by_type(_152913_prim.get()._field_kind,_152556_d);
	_152556_d.get()._field_model=jule::Any(_152556_d.get()._field_constant);
}



inline jule::Ptr<_1ad3e6975_Data> _1ad40bb99_eval_cast_by_type_n_data(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad429931_TypeKind> _153447_t,jule::Ptr<_1ad3e6975_Data> _153465_d,_1ab005531_Token _153479_error_token) {
	if ((_153465_d != nullptr) && _153465_d.get()._field_decl) {
		_1ad3e90b5_push_err(&(*_self_), _153479_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	{
		
		if ((_1ad42bec7_prim(_153465_d.get()._field_kind.ptr()) != nullptr) && _1ad4337a3_is_any(_1ad42bec7_prim(_153465_d.get()._field_kind.ptr()).ptr())) {
			_case_begin_1ad8481a1:;
			{
				if ((_1ad42c857_enm(_153447_t.ptr()) != nullptr)) {
					_1ad3e90b5_push_err(&(*_self_), _153479_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1ad3e94b1_push_suggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				}
			}
		}
		else if ((_1ad42c57c_ptr(_153447_t.ptr()) != nullptr)) {
			_case_begin_1ad848217:;
			{
				_1ad408de9_cast_ptr(&(*_self_), _153447_t,_153465_d,_153479_error_token);
			}
		}
		else if ((_1ad42c2a2_sptr(_153447_t.ptr()) != nullptr)) {
			_case_begin_1ad84827d:;
			{
				_1ad40989a_cast_ref(&(*_self_), _153447_t,_153465_d,_153479_error_token);
			}
		}
		else if ((_1ad42ce0c_slc(_153447_t.ptr()) != nullptr)) {
			_case_begin_1ad8482e4:;
			{
				_1ad409d73_cast_slc(&(*_self_), _153447_t,_153465_d,_153479_error_token);
			}
		}
		else if ((_1ad42d4b2_strct(_153447_t.ptr()) != nullptr)) {
			_case_begin_1ad8492e5:;
			{
				_1ad4093c2_cast_struct(&(*_self_), _153447_t,_153465_d,_153479_error_token);
			}
		}
		else if ((_1ad42bec7_prim(_153447_t.ptr()) != nullptr)) {
			_case_begin_1ad84935b:;
			{
				_1ad40b1e8_cast_prim(&(*_self_), _153447_t,_153465_d,_153479_error_token);
				_1ad40b5e4_cast_constant(&(*_self_), _153447_t,_153465_d);
			}
		}
		else {
			_case_begin_1ad84813a:;
			{
				_1ad3e90b5_push_err(&(*_self_), _153479_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_153447_t.ptr()))}));
				_153465_d=nullptr;
			}
		}
		_match_end_1ad847ee7:;
	}
	if ((_153465_d == nullptr)) {
		return nullptr;
	}
	_153465_d.get()._field_mutable=_153465_d.get()._field_mutable || ((!(_1ad42b092_mutable(_153465_d.get()._field_kind.ptr()))) && _1ad42b092_mutable(_153447_t.ptr()));
	_153465_d.get()._field_lvalue=false;
	_153465_d.get()._field_decl=false;
	if ((_1ad42c857_enm(_153465_d.get()._field_kind.ptr()) == nullptr) || (!(_1ad42a206_equals(_1ad42c857_enm(_153465_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind, _153447_t)))) {
		_153465_d.get()._field_cast_kind=_153447_t;
		_1ad4255ca_apply_cast_kind(_153465_d);
		_153465_d.get()._field_model.operator jule::Ptr<_1ac668566_CastingExprModel>().get()._field_token=_153479_error_token;
	} else {
		_153465_d.get()._field_kind=_153447_t;
	}
	return _153465_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad40c040_eval_cast(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ab01aa52_CastExpr> _158433_c) {
	jule::Ptr<_1ad42e293_TypeSymbol> _158517_t = _1ac680924_build_type(_158433_c.get()._field_kind);
	jule::Bool _158613_ok = _1ad385408_check_type(_self_.get()._field_s, _158517_t,_self_.get()._field_lookup);
	if ((!(_158613_ok))) {
		return nullptr;
	}
	jule::Ptr<_1ad429931_TypeKind> _159117_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_159117_prefix;
	});
	jule::Ptr<_1ad3e6975_Data> _159517_d = _1ad418524_eval_expr_kind(_self_, jule::Any(_158433_c.get()._field_expr));
	if ((_159517_d == nullptr)) {
		return nullptr;
	}
	return _1ad40bb99_eval_cast_by_type_n_data(_self_.ptr(), _158517_t.get()._field_kind,_159517_d,_158433_c.get()._field_kind.get()._field_token);
}



inline jule::Ptr<_1ad3e6975_Data> _1ad40c3e7_eval_ns_selection(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ab01ac72_NsSelectionExpr> _160336_s) {
	jule::Str _160413_path = _1ad439798_build_link_path_by_tokens(_160336_s.get()._field_ns);
	jule::Ptr<_1ad3736b0_ImportInfo> _160517_imp = _1ad447256_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad445540_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)>([=](jule::Ptr<_1ad3736b0_ImportInfo> _160553_imp) mutable -> jule::Bool {
		if ((_160336_s.get()._field_ns.len() == 1LL) && (_160553_imp.get()._field_alias == _160413_path)) {
			return true;
		}
		return (_160553_imp.get()._field_link_path == _160413_path) && _1ad37684a_is_accessible_via_selection(_160553_imp.ptr());
	}));
	if ((_160517_imp == nullptr)) {
		_1ad3e90b5_push_err(&(*_self_), _160336_s.get()._field_ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>({jule::Any(_160413_path)}));
		return nullptr;
	}
	jule::Trait<_1ad447256_Lookup> _161717_lookup = (*_self_)._field_lookup;
	(*_self_)._field_lookup=jule::Trait<_1ad447256_Lookup>(_160517_imp, 1);
	
	_1ad3e9945_disallow_builtin(&(*_self_));
	jule::Any _162217_def = _1ad3eca9c_get_def(&(*_self_), _160336_s.get()._field_ident._field_kind,false);
	_1ad3e9703_allow_builtin(&(*_self_));
	(*_self_)._field_lookup=_161717_lookup;
	jule::Ptr<_1ad3e6975_Data> _162617_d = _1ad4024db_eval_def(&(*_self_), _162217_def,_160336_s.get()._field_ident);
	return _162617_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad40c99c_eval_struct_lit_explicit(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ac664551_StructIns> _163148_s,jule::Slice<jule::Ptr<_1aadb528c_Expr>> _163213_exprs,_1ab005531_Token _163233_error_token) {
	jule::Bool _163313_ok = _1ad382922_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_163148_s.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_163148_s.get()._field_generics.len()),_163233_error_token);
	if ((!(_163313_ok))) {
		return nullptr;
	}
	if ((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_decl.get()._field_owner == _163148_s.get()._field_decl)) {
		_1ad3e90b5_push_err(_self_.ptr(), _163233_error_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any(_163148_s.get()._field_decl.get()._field_ident)}));
	}
	_1ad3ed86c_push_reference_to_struct(_self_.ptr(), _163148_s);
	_1ad400286_check_deprecated(_self_.ptr(), _163148_s.get()._field_decl.get()._field_directives,_163233_error_token);
	_1ad3d8846_StructLitChecker _164617_slc = _1ad3d8846_StructLitChecker(_self_,_163233_error_token,_163148_s,jule::Slice<jule::Ptr<_1ac6675ed_StructArgExprModel>>());
	_1ad3da408_check(&_164617_slc, _163213_exprs);
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_163148_s, 0))),jule::Ptr<_1ad429931_TypeKind>(),(!(_self_.get()._field_immutable)),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ac667a4e_StructLitExprModel>(_1ac667a4e_StructLitExprModel(_163148_s,_164617_slc._field_args)))),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
}



inline jule::Ptr<_1ad3e6975_Data> _1ad40cd43_eval_struct_lit(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ab01b822_StructLit> _166539_lit) {
	jule::Ptr<_1ad42e293_TypeSymbol> _166617_t = _1ac680924_build_type(_166539_lit.get()._field_kind);
	jule::Bool _166713_ok = _1ad385408_check_type(_self_.get()._field_s, _166617_t,_self_.get()._field_lookup);
	if ((!(_166713_ok))) {
		return nullptr;
	}
	jule::Ptr<_1ac664551_StructIns> _167217_s = _1ad42d4b2_strct(_166617_t.get()._field_kind.ptr());
	if ((_167217_s == nullptr)) {
		if ((_1ad42c2a2_sptr(_166617_t.get()._field_kind.ptr()) != nullptr)) {
			_167217_s=_1ad42d4b2_strct(_1ad42c2a2_sptr(_166617_t.get()._field_kind.ptr()).get()._field_elem.ptr());
			if ((_167217_s != nullptr)) {
				goto _julec_label_eval;
			}
		}
		_1ad3e90b5_push_err(_self_.ptr(), _166539_lit.get()._field_kind.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_julec_label_eval:;
	jule::Ptr<_1ad3e6975_Data> _168517_d = _1ad40c99c_eval_struct_lit_explicit(_self_, _167217_s,_166539_lit.get()._field_exprs,_166539_lit.get()._field_kind.get()._field_token);
	if ((_1ad42c2a2_sptr(_166617_t.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac667a4e_StructLitExprModel> _168721_model = _168517_d.get()._field_model.operator jule::Ptr<_1ac667a4e_StructLitExprModel>();
		_1ad423d15_make_struct_lit_alloc(_168517_d,_168721_model);
	}
	return _168517_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad40d1ea_eval_type(_1ad3e89cc_Eval* _self_,jule::Ptr<_1aae075dc_TypeDecl> _169332_t) {
	jule::Ptr<_1ad42e293_TypeSymbol> _169417_tk = _1ac680924_build_type(_169332_t);
	jule::Bool _169513_ok = _1ad385408_check_type((*_self_)._field_s, _169417_tk,(*_self_)._field_lookup);
	if ((!(_169513_ok))) {
		return nullptr;
	}
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(_169417_tk.get()._field_kind,jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_169417_tk.get()._field_kind)),true,jule::Ptr<_1ad2c1d8e_Const>()));
}



inline void _1ad40d5e6_call_type_fn(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ab01b3d2_FnCallExpr>& _170637_fc,jule::Ptr<_1ad3e6975_Data>& _170659_d) {
	if ((_170637_fc.get()._field_generics.len() > 0LL)) {
		_1ad3e90b5_push_err(_self_.ptr(), _170637_fc.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_170659_d.get()._field_kind.ptr()))}));
	} else if ((_170637_fc.get()._field_args.len() < 1LL)) {
		_1ad3e90b5_push_err(_self_.ptr(), _170637_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if ((_170637_fc.get()._field_args.len() > 1LL)) {
		_1ad3e90b5_push_err(_self_.ptr(), _170637_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	if ((_170637_fc.get()._field_args.len() > 0LL)) {
		jule::Ptr<_1ad429931_TypeKind> _171621_prefix = _self_.get()._field_prefix;
		_self_.get()._field_prefix=nullptr;
		jule::Ptr<_1ad3e6975_Data> _171821_arg = _1ad418524_eval_expr_kind(_self_, _170637_fc.get()._field_args[0LL].get()._field_kind);
		_self_.get()._field_prefix=_171621_prefix;
		if ((_171821_arg != nullptr)) {
			_170659_d=_1ad40bb99_eval_cast_by_type_n_data(_self_.ptr(), _170659_d.get()._field_kind,_171821_arg,_170637_fc.get()._field_args[0LL].get()._field_token);
		}
	}
	if ((_170659_d != nullptr)) {
		_170659_d.get()._field_decl=false;
	}
}



inline std::tuple<jule::Bool,jule::Bool> _1ad40da7a_check_fn_call_generics(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ac67a501_FnIns> _173045_f,jule::Ptr<_1ab01b3d2_FnCallExpr> _173113_fc) {
	jule::Bool _173132_ok = jule::Bool();
	jule::Bool _173142_dynamic_annotation = jule::Bool();
	{
		
		if (((_173045_f.get()._field_decl.get()._field_generics.len() > 0LL) && (_173113_fc.get()._field_generics.len() == 0LL)) && (_173045_f.get()._field_params.len() > 0LL)) {
			_case_begin_1ad87cc74:;
			{
				_173142_dynamic_annotation=true;
				_173045_f.get()._field_generics=jule::Slice<jule::Ptr<_1ad429931_TypeKind>>::alloc(static_cast<jule::I64>(_173045_f.get()._field_decl.get()._field_generics.len()));
				_173132_ok = true;
				_173142_dynamic_annotation = true;
				return std::make_tuple(_173132_ok,_173142_dynamic_annotation);
			}
		}
		else if ((!(_1ad382922_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_173045_f.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_173113_fc.get()._field_generics.len()),_173113_fc.get()._field_token)))) {
			_case_begin_1ad87ccda:;
			{
				_173132_ok = false;
				_173142_dynamic_annotation = false;
				return std::make_tuple(_173132_ok,_173142_dynamic_annotation);
			}
		}
		else {
			_case_begin_1ad87959a:;
			{
				_173045_f.get()._field_generics=jule::Slice<jule::Ptr<_1ad429931_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_173045_f.get()._field_decl.get()._field_generics.len()));
				{
					auto &expr = _173113_fc.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1ad879ab7:;
					if (it != expr.end()) {
						jule::Ptr<_1aae075dc_TypeDecl> _1ad87a722_g = *it;
						{
							jule::Ptr<_1ad42e293_TypeSymbol> _174425_k = _1ac680924_build_type(_1ad87a722_g);
							_173132_ok=_1ad385408_check_type((*_self_)._field_s, _174425_k,(*_self_)._field_lookup);
							if ((!(_173132_ok))) {
								_173132_ok = false;
								_173142_dynamic_annotation = false;
								return std::make_tuple(_173132_ok,_173142_dynamic_annotation);
							}
							_173045_f.get()._field_generics = jule::alloc_for_append(_173045_f.get()._field_generics,1);_173045_f.get()._field_generics.__push(_174425_k.get()._field_kind);
						}
						_iter_next_1ad879ab7:;
						++it;
						goto _iter_begin_1ad879ab7;
					}
					_iter_end_1ad879ab7:;
				}
				_173132_ok = true;
				_173142_dynamic_annotation = false;
				return std::make_tuple(_173132_ok,_173142_dynamic_annotation);
			}
		}
		_match_end_1ad8794ce:;
	}
}



inline void _1ad40de76_call_builtin_fn(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ab01b3d2_FnCallExpr>& _175640_fc,jule::Ptr<_1ad3e6975_Data>& _175662_d) {
	_175662_d=_1ad42d1d7_fnc(_175662_d.get()._field_kind.ptr()).get()._field_caller(_self_,_175640_fc,_175662_d);
	if ((_175662_d == nullptr)) {
		return;
	}
	_175662_d.get()._field_mutable=true;
}



inline void _1ad40e3b6_check_fn_of_concurrent_call(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ac67a501_FnIns>& _176447_f,_1ab005531_Token _176458_error_token) {
	if (_1ad3e9c20_is_unsafe(&(*_self_))) {
		return;
	}
	{
		auto &expr = _176447_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1b08e3eb4:;
		if (it != expr.end()) {
			jule::Ptr<_1ac67939b_ParamIns> &_1b08e41b2_p = *it;
			{
				if (_1b08e41b2_p.get()._field_decl.get()._field_reference) {
					_1ad3e90b5_push_err(&(*_self_), _176458_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;
				}
			}
			_iter_next_1b08e3eb4:;
			++it;
			goto _iter_begin_1b08e3eb4;
		}
		_iter_end_1b08e3eb4:;
	}
}



inline void _1ad40e8c2_process_exceptional_handler(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ac67a501_FnIns>& _177751_f,jule::Ptr<_1ab01b3d2_FnCallExpr>& _177767_fc,jule::Ptr<_1ad3e6975_Data>& _177789_d) {
	jule::Bool _177813_result_needed = (!(_1ac676ec0_is_void(_177751_f.get()._field_decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored)));
	jule::Ptr<_1ad35872d_ScopeChecker> _177917_csc = nullptr;
	jule::Ptr<_1ad33ce0a_Scope> _178017_ch = nullptr;
	jule::Ptr<_1ac66904a_FnCallExprModel> _178217_model = _177789_d.get()._field_model.operator jule::Ptr<_1ac66904a_FnCallExprModel>();
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ad37cd5c_Sema>>()) {
			_case_begin_1b08e7ddb:;
			{
				jule::Ptr<_1ad37cd5c_Sema> _178621_s = (*_self_)._field_lookup.operator jule::Ptr<_1ad37cd5c_Sema>();
				_177917_csc=_1ad30a449_new_scope_checker(_178621_s,nullptr);
				if (_177813_result_needed) {
					_177917_csc.get()._field_result=_177751_f.get()._field_result;
				}
				_178017_ch=jule::new_ptr<_1ad33ce0a_Scope>();
				_177917_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_177917_csc.get()._field_table.get()._field_vars,1);_177917_csc.get()._field_table.get()._field_vars.__push(_1ad424200_build_error_var(_178017_ch,_177767_fc));
				_1ad36a751_check(_177917_csc, _177767_fc.get()._field_exception,_178017_ch);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad35872d_ScopeChecker>>()) {
			_case_begin_1b08e7e52:;
			{
				jule::Ptr<_1ad35872d_ScopeChecker> _179521_sc = (*_self_)._field_lookup.operator jule::Ptr<_1ad35872d_ScopeChecker>();
				_177917_csc=_1ad36aa2b_new_child_checker(_179521_sc);
				if (_177813_result_needed) {
					_177917_csc.get()._field_result=_177751_f.get()._field_result;
				}
				_178017_ch=_1ad35c91e_get_child(_179521_sc.ptr());
				_177917_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_177917_csc.get()._field_table.get()._field_vars,1);_177917_csc.get()._field_table.get()._field_vars.__push(_1ad424200_build_error_var(_178017_ch,_177767_fc));
				_1ad35cde7_check_child_ssc(_179521_sc, _177767_fc.get()._field_exception,_178017_ch,_177917_csc);
			}
		}
		_match_end_1b08e7d86:;
	}
	_178217_model.get()._field_assigned=_177813_result_needed;
	_178217_model.get()._field_except=_178017_ch;
	if (_177813_result_needed && (_177917_csc.get()._field_result != nullptr)) {
		_1ad3e90b5_push_err(&(*_self_), _177767_fc.get()._field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	}
}



inline void _1ad40ecac_call_fn(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ab01b3d2_FnCallExpr>& _181332_fc,jule::Ptr<_1ad3e6975_Data>& _181354_d) {
	jule::Ptr<_1ac67a501_FnIns> _181417_f = _1ad42d1d7_fnc(_181354_d.get()._field_kind.ptr());
	if (_1ac67b17d_is_builtin(_181417_f.ptr())) {
		_1ad40de76_call_builtin_fn(_self_, _181332_fc,_181354_d);
		return;
	}
	if ((!(_1ac67729a_is_method(_181417_f.get()._field_decl.ptr()))) && _1ad427cb4_has_directive(_181417_f.get()._field_decl.get()._field_directives,jule::Str("test", 4))) {
		_1ad3e90b5_push_err(_self_.ptr(), _181332_fc.get()._field_token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_181354_d=nullptr;
		return;
	}
	if ((((!(_181354_d.get()._field_mutable)) && _1ac67729a_is_method(_181417_f.get()._field_decl.ptr())) && (!(_181417_f.get()._field_decl.get()._field_statically))) && _181417_f.get()._field_decl.get()._field_params[0LL].get()._field_mutable) {
		_1ad3e90b5_push_err(_self_.ptr(), _181332_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if ((!(_1ad3e9c20_is_unsafe(_self_.ptr()))) && _181417_f.get()._field_decl.get()._field_unsafety) {
		_1ad3e90b5_push_err(_self_.ptr(), _181332_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	jule::Bool _183218_ok;
	jule::Bool _183222_dynamic_annotation;
	std::tie(_183218_ok,_183222_dynamic_annotation) = _1ad40da7a_check_fn_call_generics(_self_.ptr(), _181417_f,_181332_fc);
	if ((!(_183218_ok))) {
		_181354_d=nullptr;
		return;
	}
	jule::Ptr<_1ad37cd5c_Sema> _183817_old = _self_.get()._field_s;
	if ((_181417_f.get()._field_decl.get()._field_owner != nullptr)) {
		_self_.get()._field_s=_181417_f.get()._field_decl.get()._field_owner.get()._field_sema;
	}
	__JULE_DEFER({
		if (_183817_old != _self_.get()._field_s) {
			_183817_old.get()._field_errors=jule::append(_183817_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		}
		_self_.get()._field_s=_183817_old;
	});
	if ((!(_183222_dynamic_annotation))) {
		if ((!(_181417_f.get()._field_reloaded))) {
			_183218_ok=_1ad388c69_reload_fn_ins_types(_self_.get()._field_s, _181417_f);
			if ((!(_183218_ok))) {
				_181354_d=nullptr;
				return;
			}
			_181417_f.get()._field_reloaded=true;
		}
	} else {
		_1ad3884d8_build_fn_non_generic_type_kinds(_self_.get()._field_s, _181417_f);
	}
	_1ad3d55e0_FnCallArgChecker _186417_fcac = _1ad3d55e0_FnCallArgChecker(_self_,_181332_fc.get()._field_args,_181332_fc.get()._field_token,_181417_f,_183222_dynamic_annotation,jule::Slice<jule::Any>());
	if ((_181417_f.get()._field_decl.get()._field_owner != nullptr)) {
		std::tie(_183817_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_183817_old);
		_183218_ok=_1ad3d81e7_check(&_186417_fcac);
		std::tie(_183817_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_183817_old);
	} else {
		_183218_ok=_1ad3d81e7_check(&_186417_fcac);
	}
	if ((!(_183218_ok)) && _183222_dynamic_annotation) {
		_181354_d=nullptr;
		return;
	}
	jule::Bool _188414_is_unique_ins;
	jule::I64 _188429_pos;
	std::tie(_188414_is_unique_ins,_188429_pos) = _1ac678e4a_append_instance(_181417_f.get()._field_decl.ptr(), _181417_f);
	if ((!(_188414_is_unique_ins))) {
		_181417_f=_181417_f.get()._field_decl.get()._field_instances[_188429_pos];
	}
	jule::Any _188917_call_model = _181354_d.get()._field_model;
	if (_1ac676ec0_is_void(_181417_f.get()._field_decl.ptr())) {
		_181354_d=_1ad42580b_build_void_data();
	} else {
		if (_183222_dynamic_annotation) {
			_183218_ok=_1ad388c69_reload_fn_ins_types(_self_.get()._field_s, _181417_f);
			if ((!(_183218_ok))) {
				_181354_d=nullptr;
				return;
			}
			_181417_f.get()._field_reloaded=true;
		}
		_181354_d.get()._field_kind=_181417_f.get()._field_result;
		_181354_d.get()._field_lvalue=false;
	}
	_181354_d.get()._field_mutable=true;
	_181354_d.get()._field_model=jule::Any(jule::new_ptr<_1ac66904a_FnCallExprModel>(_1ac66904a_FnCallExprModel(_181332_fc.get()._field_token,_181417_f,jule::Bool(),_188917_call_model,_186417_fcac._field_arg_models,jule::Ptr<_1ad33ce0a_Scope>(),jule::Bool())));
	if (_181417_f.get()._field_decl.get()._field_exceptional) {
		{
			
			if (_1aae07ec2_unhandled(_181332_fc.ptr())) {
				_case_begin_1b0913566:;
				{
					_1ad3e90b5_push_err(_self_.ptr(), _181332_fc.get()._field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1ad3e94b1_push_suggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1aadb68ed_ignored(_181332_fc.ptr())) {
				_case_begin_1b0913434:;
				{
					goto _match_end_1b0912895;
				}
			}
			else {
				_case_begin_1b0912961:;
				{
					_1ad40e8c2_process_exceptional_handler(_self_.ptr(), _181417_f,_181332_fc,_181354_d);
				}
			}
			_match_end_1b0912895:;
		}
	} else if ((!(_1aae07ec2_unhandled(_181332_fc.ptr())))) {
		_1ad3e90b5_push_err(_self_.ptr(), _181332_fc.get()._field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	}
	if ((_181417_f.get()._field_generics.len() > 0LL) && _188414_is_unique_ins) {
		_1ad39887d_check_fn_ins_caller(_self_.get()._field_s, _181417_f,((jule::Ptr<_1ab005531_Token>)((&(_181332_fc.get()._field_token)))));
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad410164_eval_fn_call(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ab01b3d2_FnCallExpr> _193636_fc) {
	jule::Ptr<_1ad429931_TypeKind> _193717_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_193717_prefix;
	});
	{
		auto &_match_expr{ _193636_fc.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1aadb628d_IdentExpr>>()) {
			_case_begin_1b0917d73:;
			{
				if ((_193636_fc.get()._field_expr.get()._field_token._field_kind == jule::Str("error", 5))) {
					return _1ad44a413_builtin_caller_error(_self_,_193636_fc);
				}
			}
		}
		_match_end_1b0917d1d:;
	}
	jule::Ptr<_1ad3e6975_Data> _195017_d = _1ad418524_eval_expr_kind(_self_, _193636_fc.get()._field_expr.get()._field_kind);
	if ((_195017_d == nullptr)) {
		return nullptr;
	}
	if (_195017_d.get()._field_decl) {
		_1ad40d5e6_call_type_fn(_self_, _193636_fc,_195017_d);
		return _195017_d;
	}
	if ((_1ad42d1d7_fnc(_195017_d.get()._field_kind.ptr()) == nullptr)) {
		_1ad3e90b5_push_err(_self_.ptr(), _193636_fc.get()._field_token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1ad40ecac_call_fn(_self_, _193636_fc,_195017_d);
	return _195017_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4105e8_eval_enum_static(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ac724545_Enum> _196939_enm,_1ab005531_Token _196951_ident) {
	jule::Ptr<_1ad3e6975_Data> _197017_d = jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_196939_enm, 3))),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1ad2c1d8e_Const>()));
	jule::Ptr<_1ac692a57_EnumItem> _197917_item = _1ac94e5b6_find_item(_196939_enm.ptr(), _196951_ident._field_kind);
	if ((_197917_item == nullptr)) {
		_1ad3e90b5_push_err(&(*_self_), _196951_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_196939_enm.get()._field_ident),jule::Any(_196951_ident._field_kind)}));
	} else {
		_197017_d.get()._field_constant=jule::new_ptr<_1ad2c1d8e_Const>((*(_197917_item.get()._field_value.get()._field_data.get()._field_constant)));
		_197017_d.get()._field_model=jule::Any(_197017_d.get()._field_constant);
		_1ad425ee3_apply_cast_model_by_enum(_197017_d,_196939_enm);
	}
	return _197017_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad410a7c_eval_struct_static(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ac664551_StructIns> _199141_s,_1ab005531_Token _199156_ident) {
	jule::Ptr<_1ad3e6975_Data> _199217_d = jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1ad2c1d8e_Const>()));
	
	jule::Ptr<_1ac676a08_Fn> _200017_method = _1ac665772_find_method(_199141_s.ptr(), _199156_ident._field_kind,true);
	if ((_200017_method != nullptr)) {
		if ((!(_1ad381954_is_accessible_define((*_self_)._field_s.ptr(), _200017_method.get()._field_public,_200017_method.get()._field_token)))) {
			_1ad3e90b5_push_err(&(*_self_), _199156_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_199156_ident._field_kind)}));
			_1ad3e94b1_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_1ac67a501_FnIns> _200721_ins = _1ac678a93_instance(_200017_method);
		_200721_ins.get()._field_owner=_199141_s;
		_1ad3ed1da_push_reference_to_fn(&(*_self_), _200721_ins);
		_199217_d.get()._field_model=jule::Any(jule::new_ptr<_1ac66c669_StructStaticIdentExprModel>(_1ac66c669_StructStaticIdentExprModel(_199141_s,_199217_d.get()._field_model,_200721_ins)));
		_199217_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_200721_ins, 1)));
		return _199217_d;
	}
	jule::Ptr<_1ad39e037_Var> _202117_sttc = _1ac66220d_find_static(_199141_s.get()._field_decl.ptr(), _199156_ident._field_kind);
	if ((_202117_sttc != nullptr)) {
		return _1ad401ac3_eval_var(&(*_self_), _202117_sttc,_199156_ident);
	}
	_1ad3e90b5_push_err(&(*_self_), _199156_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_199141_s.get()._field_decl.get()._field_ident),jule::Any(_199156_ident._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4110dd_eval_trait_sub_ident(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data> _203043_d,jule::Ptr<_1ac85d096_Trait> _203057_trt,_1ab005531_Token _203074_ident) {
	jule::Ptr<_1ac676a08_Fn> _203117_f = _1ac702842_find_method(_203057_trt.ptr(), _203074_ident._field_kind);
	if ((_203117_f == nullptr)) {
		_1ad3e90b5_push_err(&(*_self_), _203074_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_203057_trt.get()._field_ident),jule::Any(_203074_ident._field_kind)}));
		return nullptr;
	}
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ac678a93_instance(_203117_f), 1))),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ac66b69b_TraitSubIdentExprModel>(_1ac66b69b_TraitSubIdentExprModel(_203074_ident,_203043_d.get()._field_model,_203117_f,_203057_trt)))),false,jule::Ptr<_1ad2c1d8e_Const>()));
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41172b_eval_struct_sub_ident(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data> _205344_d,jule::Ptr<_1ac664551_StructIns> _205358_s,jule::Ptr<_1ab01ae92_SubIdentExpr> _205377_si,jule::Bool _205396_ref) {
	jule::Ptr<_1ac663a06_FieldIns> _205417_f = _1ac665b29_find_field(_205358_s.ptr(), _205377_si.get()._field_ident._field_kind);
	if ((_205417_f != nullptr)) {
		if ((!(_1ad381954_is_accessible_define((*_self_)._field_s.ptr(), _205417_f.get()._field_decl.get()._field_public,_205417_f.get()._field_decl.get()._field_token)))) {
			_1ad3e90b5_push_err(&(*_self_), _205377_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_205417_f.get()._field_decl.get()._field_ident)}));
			_1ad3e94b1_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_1ac66c0a3_StructSubIdentExprModel> _206121_model = jule::new_ptr<_1ac66c0a3_StructSubIdentExprModel>(_1ac66c0a3_StructSubIdentExprModel(_205377_si.get()._field_ident,jule::new_ptr<_1ad3e6975_Data>((*(_205344_d))),_205344_d.get()._field_kind,jule::Ptr<_1ac67a501_FnIns>(),_205417_f));
		_205344_d.get()._field_model=jule::Any(_206121_model);
		_205344_d.get()._field_kind=_205417_f.get()._field_kind;
		_205344_d.get()._field_lvalue=true;
		if (_205417_f.get()._field_decl.get()._field_mutable && (!(_205344_d.get()._field_mutable))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1ad35872d_ScopeChecker>>()) {
					_case_begin_1b093319b:;
					{
						jule::Ptr<_1ad35872d_ScopeChecker> _207525_scope = _1ad35ab81_get_root((*_self_)._field_lookup.operator jule::Ptr<_1ad35872d_ScopeChecker>());
						_205344_d.get()._field_mutable=(_207525_scope.get()._field_owner != nullptr) && (_207525_scope.get()._field_owner.get()._field_owner == _205358_s);
					}
				}
				_match_end_1b0933146:;
			}
		}
		return _205344_d;
	}
	
	jule::Ptr<_1ac676a08_Fn> _208417_m = _1ac665772_find_method(_205358_s.ptr(), _205377_si.get()._field_ident._field_kind,false);
	if ((_208417_m == nullptr)) {
		_1ad3e90b5_push_err(&(*_self_), _205377_si.get()._field_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_205358_s.get()._field_decl.get()._field_ident),jule::Any(_205377_si.get()._field_ident._field_kind)}));
		return nullptr;
	}
	if ((!(_1ad381954_is_accessible_define((*_self_)._field_s.ptr(), _208417_m.get()._field_public,_208417_m.get()._field_token)))) {
		_1ad3e90b5_push_err(&(*_self_), _205377_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_208417_m.get()._field_ident)}));
		_1ad3e94b1_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	}
	if (_1ac6756b6_is_ref(_208417_m.get()._field_params[0LL].ptr()) && (!(_205396_ref))) {
		_1ad3e90b5_push_err(&(*_self_), _205377_si.get()._field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	}
	_1ad400286_check_deprecated(&(*_self_), _208417_m.get()._field_directives,_205377_si.get()._field_ident);
	jule::Ptr<_1ac67a501_FnIns> _210017_ins = _1ac678a93_instance(_208417_m);
	_210017_ins.get()._field_owner=_205358_s;
	_1ad3ed1da_push_reference_to_fn(&(*_self_), _210017_ins);
	jule::Ptr<_1ad3e6975_Data> _210317_model = jule::new_ptr<_1ad3e6975_Data>((*(_205344_d)));
	_205344_d.get()._field_model=jule::Any(jule::new_ptr<_1ac66c0a3_StructSubIdentExprModel>(_1ac66c0a3_StructSubIdentExprModel(_205377_si.get()._field_ident,_210317_model,_205344_d.get()._field_kind,_210017_ins,jule::Ptr<_1ac663a06_FieldIns>())));
	_205344_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_210017_ins, 1)));
	return _205344_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad411bb0_eval_slice_sub_ident(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data> _211443_d,_1ab005531_Token _211457_ident) {
	{
		auto &_match_expr{ _211457_ident._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1b093e6a2:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ac66d5d2_CommonSubIdentExprModel>(_1ac66d5d2_CommonSubIdentExprModel(_211443_d.get()._field_kind,_211443_d.get()._field_model,_211457_ident,jule::Str("len()", 5))))),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1b093e718:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ac66d5d2_CommonSubIdentExprModel>(_1ac66d5d2_CommonSubIdentExprModel(_211443_d.get()._field_kind,_211443_d.get()._field_model,_211457_ident,jule::Str("cap()", 5))))),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1b093d2c7:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>({jule::new_ptr<_1ac67939b_ParamIns>(_1ac67939b_ParamIns(jule::new_ptr<_1ac674bd2_Param>(_1ac674bd2_Param(_1ab005531_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1ad42e293_TypeSymbol>(),jule::Str("i", 1))),jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5))))),jule::new_ptr<_1ac67939b_ParamIns>(_1ac67939b_ParamIns(jule::new_ptr<_1ac674bd2_Param>(_1ac674bd2_Param(_1ab005531_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1ad42e293_TypeSymbol>(),jule::Str("j", 1))),jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5)))))}),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad44a29d_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1ad429931_TypeKind>(),_211443_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ac66d5d2_CommonSubIdentExprModel>(_1ac66d5d2_CommonSubIdentExprModel(_211443_d.get()._field_kind,_211443_d.get()._field_model,_211457_ident,jule::Str("swap", 4))))),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else {
			_case_begin_1b093cedb:;
			{
				_1ad3e90b5_push_err(&(*_self_), _211457_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_211443_d.get()._field_kind.ptr())),jule::Any(_211457_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b093d20b:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad412144_eval_array_sub_ident(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data> _217443_d,_1ab005531_Token _217457_ident) {
	{
		auto &_match_expr{ _217457_ident._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1b0946522:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _217721_c = static__1ad2c20ae_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1ad42cb32_arr(_217443_d.get()._field_kind.ptr()).get()._field_n)));
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_217721_c)),jule::Bool(),_217721_c));
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1b0946588:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>({jule::new_ptr<_1ac67939b_ParamIns>(_1ac67939b_ParamIns(jule::new_ptr<_1ac674bd2_Param>(_1ac674bd2_Param(_1ab005531_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1ad42e293_TypeSymbol>(),jule::Str("i", 1))),jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5))))),jule::new_ptr<_1ac67939b_ParamIns>(_1ac67939b_ParamIns(jule::new_ptr<_1ac674bd2_Param>(_1ac674bd2_Param(_1ab005531_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1ad42e293_TypeSymbol>(),jule::Str("j", 1))),jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5)))))}),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad44a29d_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1ad429931_TypeKind>(),_217443_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ac66d5d2_CommonSubIdentExprModel>(_1ac66d5d2_CommonSubIdentExprModel(_217443_d.get()._field_kind,_217443_d.get()._field_model,_217457_ident,jule::Str("swap", 4))))),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else {
			_case_begin_1b094470c:;
			{
				_1ad3e90b5_push_err(&(*_self_), _217457_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_217443_d.get()._field_kind.ptr())),jule::Any(_217457_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b094492c:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4125c8_eval_map_sub_ident(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data> _222041_d,_1ab005531_Token _222055_ident) {
	jule::Ptr<_1ad4360be_Map> _222117_map_kind = _1ad42da67_map(_222041_d.get()._field_kind.ptr());
	{
		auto &_match_expr{ _222055_ident._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1b094cb00:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ac66d5d2_CommonSubIdentExprModel>(_1ac66d5d2_CommonSubIdentExprModel(_222041_d.get()._field_kind,_222041_d.get()._field_model,_222055_ident,jule::Str("len()", 5))))),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1b094b3c3:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad44a29d_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1ad429931_TypeKind>(),_222041_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ac66d5d2_CommonSubIdentExprModel>(_1ac66d5d2_CommonSubIdentExprModel(_222041_d.get()._field_kind,_222041_d.get()._field_model,_222055_ident,jule::Str("clear", 5))))),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1b094b439:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ad4346d8_Slc>(_1ad4346d8_Slc(_222117_map_kind.get()._field_key)), 7))),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad44a29d_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1ad429931_TypeKind>(),_222041_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ac66d5d2_CommonSubIdentExprModel>(_1ac66d5d2_CommonSubIdentExprModel(_222041_d.get()._field_kind,_222041_d.get()._field_model,_222055_ident,jule::Str("keys", 4))))),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1b094b4a0:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ad4346d8_Slc>(_1ad4346d8_Slc(_222117_map_kind.get()._field_val)), 7))),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad44a29d_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1ad429931_TypeKind>(),_222041_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ac66d5d2_CommonSubIdentExprModel>(_1ac66d5d2_CommonSubIdentExprModel(_222041_d.get()._field_kind,_222041_d.get()._field_model,_222055_ident,jule::Str("values", 6))))),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1b094b516:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>({jule::new_ptr<_1ac67939b_ParamIns>(_1ac67939b_ParamIns(jule::new_ptr<_1ac674bd2_Param>(_1ac674bd2_Param(_1ab005531_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1ad42e293_TypeSymbol>(),jule::Str("key", 3))),_222117_map_kind.get()._field_key))}),jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad44c39e_builtin_caller_common),jule::Bool())), 1))),jule::Ptr<_1ad429931_TypeKind>(),_222041_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ac66d5d2_CommonSubIdentExprModel>(_1ac66d5d2_CommonSubIdentExprModel(_222041_d.get()._field_kind,_222041_d.get()._field_model,_222055_ident,jule::Str("has", 3))))),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1b094c869:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>({jule::new_ptr<_1ac67939b_ParamIns>(_1ac67939b_ParamIns(jule::new_ptr<_1ac674bd2_Param>(_1ac674bd2_Param(_1ab005531_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1ad42e293_TypeSymbol>(),jule::Str("key", 3))),_222117_map_kind.get()._field_key))}),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad44a29d_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1ad429931_TypeKind>(),_222041_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ac66d5d2_CommonSubIdentExprModel>(_1ac66d5d2_CommonSubIdentExprModel(_222041_d.get()._field_kind,_222041_d.get()._field_model,_222055_ident,jule::Str("del", 3))))),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else {
			_case_begin_1b094b35c:;
			{
				_1ad3e90b5_push_err(&(*_self_), _222055_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1ad436498_to_str(_222117_map_kind.ptr())),jule::Any(_222055_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b094b307:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad412a5c_eval_str_sub_ident(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data> _234341_d,_1ab005531_Token _234355_ident) {
	jule::Ptr<_1ad429931_TypeKind> _234417_str_kind = jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("str", 3)), 5)));
	{
		auto &_match_expr{ _234355_ident._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1b0958413:;
			{
				jule::Ptr<_1ad3e6975_Data> _234721_sd = jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
				if (_1ad3e747b_is_const(_234341_d.ptr())) {
					_234721_sd.get()._field_constant=static__1ad2c20ae_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c39c8_read_str(_234341_d.get()._field_constant.ptr()).len())));
					_234721_sd.get()._field_model=jule::Any(_234721_sd.get()._field_constant);
				} else {
					_234721_sd.get()._field_model=jule::Any(jule::new_ptr<_1ac66d5d2_CommonSubIdentExprModel>(_1ac66d5d2_CommonSubIdentExprModel(_234341_d.get()._field_kind,_234341_d.get()._field_model,_234355_ident,jule::Str("len()", 5))));
				}
				return _234721_sd;
			}
		}
		else {
			_case_begin_1b09575dd:;
			{
				_1ad3e90b5_push_err(&(*_self_), _234355_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_234417_str_kind.ptr())),jule::Any(_234355_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b0958116:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad412e14_eval_int_type_static(_1ad3e89cc_Eval* _self_,_1ab005531_Token _236839_ident) {
	
	{
		auto &_match_expr{ _236839_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1b095dca9:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _237321_c = static__1ad2c20ae_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1ad34d58b_max(jule::Str("int", 3)))));
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_237321_c)),jule::Bool(),_237321_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1b095dd20:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _238021_c = static__1ad2c20ae_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1ad34d239_min(jule::Str("int", 3)))));
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_238021_c)),jule::Bool(),_238021_c));
			}
		}
		else {
			_case_begin_1b095cb76:;
			{
				_1ad3e90b5_push_err(&(*_self_), _236839_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_236839_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b095cb21:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4132bb_eval_uint_type_static(_1ad3e89cc_Eval* _self_,_1ab005531_Token _239240_ident) {
	
	{
		auto &_match_expr{ _239240_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1b096352d:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _239721_c = static__1ad2c2224_new_u64(static_cast<jule::U64>(static_cast<jule::U64>(_1ad34d58b_max(jule::Str("uint", 4)))));
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("uint", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_239721_c)),jule::Bool(),_239721_c));
			}
		}
		else {
			_case_begin_1b09623ea:;
			{
				_1ad3e90b5_push_err(&(*_self_), _239240_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_239240_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b0962395:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad413673_eval_i8_type_static(_1ad3e89cc_Eval* _self_,_1ab005531_Token _240938_ident) {
	
	
	
	{
		auto &_match_expr{ _240938_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1b0967114:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _241621_c = static__1ad2c20ae_new_i64(127LL);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("i8", 2)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_241621_c)),jule::Bool(),_241621_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1b096717a:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _242321_c = static__1ad2c20ae_new_i64(-128LL);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("i8", 2)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_242321_c)),jule::Bool(),_242321_c));
			}
		}
		else {
			_case_begin_1b0965ee2:;
			{
				_1ad3e90b5_push_err(&(*_self_), _240938_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_240938_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b0965e8c:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad413a2a_eval_i16_type_static(_1ad3e89cc_Eval* _self_,_1ab005531_Token _243539_ident) {
	
	
	
	{
		auto &_match_expr{ _243539_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1b096b877:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _244221_c = static__1ad2c20ae_new_i64(32767LL);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("i16", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_244221_c)),jule::Bool(),_244221_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1b096b8dd:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _244921_c = static__1ad2c20ae_new_i64(-32768LL);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("i16", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_244921_c)),jule::Bool(),_244921_c));
			}
		}
		else {
			_case_begin_1b096a755:;
			{
				_1ad3e90b5_push_err(&(*_self_), _243539_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_243539_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b096a700:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad413dd2_eval_i32_type_static(_1ad3e89cc_Eval* _self_,_1ab005531_Token _246139_ident) {
	
	
	
	{
		auto &_match_expr{ _246139_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1b09710da:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _246821_c = static__1ad2c20ae_new_i64(2147483647LL);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("i32", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_246821_c)),jule::Bool(),_246821_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1b0971151:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _247521_c = static__1ad2c20ae_new_i64(-2147483648LL);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("i32", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_247521_c)),jule::Bool(),_247521_c));
			}
		}
		else {
			_case_begin_1b096eeb8:;
			{
				_1ad3e90b5_push_err(&(*_self_), _246139_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_246139_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b096ee63:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad414289_eval_i64_type_static(_1ad3e89cc_Eval* _self_,_1ab005531_Token _248739_ident) {
	
	
	
	{
		auto &_match_expr{ _248739_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1b09756d8:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _249421_c = static__1ad2c20ae_new_i64(jule::MAX_I64);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("i64", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_249421_c)),jule::Bool(),_249421_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1b097574e:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _250121_c = static__1ad2c20ae_new_i64(jule::MIN_I64);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("i64", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_250121_c)),jule::Bool(),_250121_c));
			}
		}
		else {
			_case_begin_1b0974363:;
			{
				_1ad3e90b5_push_err(&(*_self_), _248739_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_248739_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b0974583:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad414641_eval_u8_type_static(_1ad3e89cc_Eval* _self_,_1ab005531_Token _251338_ident) {
	
	
	{
		auto &_match_expr{ _251338_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1b097a116:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _251921_c = static__1ad2c2224_new_u64(255LLU);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("u8", 2)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_251921_c)),jule::Bool(),_251921_c));
			}
		}
		else {
			_case_begin_1b0978e6c:;
			{
				_1ad3e90b5_push_err(&(*_self_), _251338_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_251338_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b0978e17:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4149e8_eval_u16_type_static(_1ad3e89cc_Eval* _self_,_1ab005531_Token _253139_ident) {
	
	
	{
		auto &_match_expr{ _253139_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1b097d3b1:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _253721_c = static__1ad2c2224_new_u64(65535LLU);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("u16", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_253721_c)),jule::Bool(),_253721_c));
			}
		}
		else {
			_case_begin_1b097c217:;
			{
				_1ad3e90b5_push_err(&(*_self_), _253139_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_253139_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b097c1b2:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad414da0_eval_u32_type_static(_1ad3e89cc_Eval* _self_,_1ab005531_Token _254939_ident) {
	
	
	{
		auto &_match_expr{ _254939_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1b098165b:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _255521_c = static__1ad2c2224_new_u64(4294967295LLU);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("u32", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_255521_c)),jule::Bool(),_255521_c));
			}
		}
		else {
			_case_begin_1b09804b2:;
			{
				_1ad3e90b5_push_err(&(*_self_), _254939_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_254939_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b098045c:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad415257_eval_u64_type_static(_1ad3e89cc_Eval* _self_,_1ab005531_Token _256739_ident) {
	
	
	{
		auto &_match_expr{ _256739_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1b098484b:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _257321_c = static__1ad2c2224_new_u64(jule::MAX_U64);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("u64", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_257321_c)),jule::Bool(),_257321_c));
			}
		}
		else {
			_case_begin_1b098310d:;
			{
				_1ad3e90b5_push_err(&(*_self_), _256739_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_256739_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b098364c:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41560e_eval_f32_type_tatic(_1ad3e89cc_Eval* _self_,_1ab005531_Token _258538_ident) {
	
	
	
	
	{
		auto &_match_expr{ _258538_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1b09882cd:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _259321_c = static__1ad2c27da_new_f64(340282346638528860000000000000000000000.0);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("f32", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_259321_c)),jule::Bool(),_259321_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1b0988344:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _260021_c = static__1ad2c27da_new_f64(-340282346638528860000000000000000000000.0);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("f32", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_260021_c)),jule::Bool(),_260021_c));
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1b0988113:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _260721_c = static__1ad2c27da_new_f64(0.000000000000000000000000000000000000000000001401298464324817);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("f32", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_260721_c)),jule::Bool(),_260721_c));
			}
		}
		else {
			_case_begin_1b098719a:;
			{
				_1ad3e90b5_push_err(&(*_self_), _258538_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_258538_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b0987145:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4159b6_eval_f64_type_static(_1ad3e89cc_Eval* _self_,_1ab005531_Token _261939_ident) {
	
	
	
	
	{
		auto &_match_expr{ _261939_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1b098dc84:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _262721_c = static__1ad2c27da_new_f64(jule::MAX_F64);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_262721_c)),jule::Bool(),_262721_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1b098dcea:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _263421_c = static__1ad2c27da_new_f64(jule::MIN_F64);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_263421_c)),jule::Bool(),_263421_c));
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1b098dab9:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _264121_c = static__1ad2c27da_new_f64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_264121_c)),jule::Bool(),_264121_c));
			}
		}
		else {
			_case_begin_1b098cb51:;
			{
				_1ad3e90b5_push_err(&(*_self_), _261939_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_261939_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b098caeb:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad415e4a_eval_prim_static(_1ad3e89cc_Eval* _self_,jule::Str _265335_kind,_1ab005531_Token _265346_ident) {
	{
		auto &_match_expr{ _265335_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b099396a:;
			{
				return _1ad412e14_eval_int_type_static(&(*_self_), _265346_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b09939d1:;
			{
				return _1ad4132bb_eval_uint_type_static(&(*_self_), _265346_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b0993a47:;
			{
				return _1ad413673_eval_i8_type_static(&(*_self_), _265346_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b0993aad:;
			{
				return _1ad413a2a_eval_i16_type_static(&(*_self_), _265346_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b0992bbc:;
			{
				return _1ad413dd2_eval_i32_type_static(&(*_self_), _265346_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b0992c33:;
			{
				return _1ad414289_eval_i64_type_static(&(*_self_), _265346_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1b0992c99:;
			{
				return _1ad414641_eval_u8_type_static(&(*_self_), _265346_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b0992d10:;
			{
				return _1ad4149e8_eval_u16_type_static(&(*_self_), _265346_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b0992d87:;
			{
				return _1ad414da0_eval_u32_type_static(&(*_self_), _265346_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b0993c78:;
			{
				return _1ad415257_eval_u64_type_static(&(*_self_), _265346_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b0993d00:;
			{
				return _1ad41560e_eval_f32_type_tatic(&(*_self_), _265346_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b0993d77:;
			{
				return _1ad4159b6_eval_f64_type_static(&(*_self_), _265346_ident);
			}
		}
		else {
			_case_begin_1b0992903:;
			{
				_1ad3e90b5_push_err(&(*_self_), _265346_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_265335_kind),jule::Any(_265346_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b099298b:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4163ce_eval_type_static(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data> _268539_d,jule::Ptr<_1ab01ae92_SubIdentExpr> _268553_si) {
	{
		
		if ((_1ad42bec7_prim(_268539_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b099aea0:;
			{
				return _1ad415e4a_eval_prim_static(&(*_self_), _1ad430173_to_str(_1ad42bec7_prim(_268539_d.get()._field_kind.ptr()).ptr()),_268553_si.get()._field_ident);
			}
		}
		else if ((_1ad42c857_enm(_268539_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b099b016:;
			{
				return _1ad4105e8_eval_enum_static(&(*_self_), _1ad42c857_enm(_268539_d.get()._field_kind.ptr()),_268553_si.get()._field_ident);
			}
		}
		else if ((_1ad42d4b2_strct(_268539_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0999b3b:;
			{
				return _1ad410a7c_eval_struct_static(&(*_self_), _1ad42d4b2_strct(_268539_d.get()._field_kind.ptr()),_268553_si.get()._field_ident);
			}
		}
		else {
			_case_begin_1b0999ac5:;
			{
				_1ad3e90b5_push_err(&(*_self_), _268553_si.get()._field_ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_268539_d.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b0999a3c:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad416863_eval_obj_sub_ident(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ad3e6975_Data> _269941_d,jule::Ptr<_1ab01ae92_SubIdentExpr> _269955_si) {
	if (_1ab008314_is_ignore_ident(_269955_si.get()._field_ident._field_kind)) {
		_1ad3e90b5_push_err(&(*_self_), _269955_si.get()._field_ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ad429931_TypeKind> _270517_kind = _269941_d.get()._field_kind;
	{
		
		if ((_1ad42c57c_ptr(_269941_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b09a13d4:;
			{
				jule::Ptr<_1ad437983_Ptr> _270817_ptr = _1ad42c57c_ptr(_269941_d.get()._field_kind.ptr());
				if (_1ad4385cc_is_unsafe(_270817_ptr.ptr())) {
					goto _match_end_1b09a12c4;
				}
				if ((!(_269955_si.get()._field_is_self)) && (!(_1ad3e9c20_is_unsafe(&(*_self_))))) {
					_1ad3e90b5_push_err(&(*_self_), _269955_si.get()._field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				}
				_270517_kind=_1ad42c57c_ptr(_269941_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else if ((_1ad42c2a2_sptr(_269941_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b09a145b:;
			{
				_270517_kind=_1ad42c2a2_sptr(_269941_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		_match_end_1b09a12c4:;
	}
	{
		
		if ((_1ad42d78c_trt(_269941_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b09a467e:;
			{
				return _1ad4110dd_eval_trait_sub_ident(&(*_self_), _269941_d,_1ad42d78c_trt(_269941_d.get()._field_kind.ptr()),_269955_si.get()._field_ident);
			}
		}
		else if ((_1ad42d4b2_strct(_270517_kind.ptr()) != nullptr)) {
			_case_begin_1b09a46e5:;
			{
				jule::Ptr<_1ac664551_StructIns> _272417_s = _1ad42d4b2_strct(_270517_kind.ptr());
				if (_1ad424c8e_is_instanced_struct(_272417_s)) {
					jule::Bool _272625_used_reference_elem = (_1ad42c2a2_sptr(_269941_d.get()._field_kind.ptr()) != nullptr);
					return _1ad41172b_eval_struct_sub_ident(&(*_self_), _269941_d,_1ad42d4b2_strct(_270517_kind.ptr()),_269955_si,_272625_used_reference_elem);
				}
			}
		}
		else if ((_1ad42ce0c_slc(_270517_kind.ptr()) != nullptr)) {
			_case_begin_1b09a476c:;
			{
				return _1ad411bb0_eval_slice_sub_ident(&(*_self_), _269941_d,_269955_si.get()._field_ident);
			}
		}
		else if ((_1ad42cb32_arr(_270517_kind.ptr()) != nullptr)) {
			_case_begin_1b09a47e4:;
			{
				return _1ad412144_eval_array_sub_ident(&(*_self_), _269941_d,_269955_si.get()._field_ident);
			}
		}
		else if ((_1ad42da67_map(_270517_kind.ptr()) != nullptr)) {
			_case_begin_1b09a486b:;
			{
				return _1ad4125c8_eval_map_sub_ident(&(*_self_), _269941_d,_269955_si.get()._field_ident);
			}
		}
		else if ((_1ad42bec7_prim(_270517_kind.ptr()) != nullptr)) {
			_case_begin_1b09a50a8:;
			{
				jule::Ptr<_1ad42ec99_Prim> _273617_p = _1ad42bec7_prim(_270517_kind.ptr());
				{
					auto &_match_expr{ _273617_p.get()._field_kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1b09ab6db:;
						{
							return _1ad412a5c_eval_str_sub_ident(&(*_self_), _269941_d,_269955_si.get()._field_ident);
						}
					}
					_match_end_1b09abce6:;
				}
			}
		}
		_match_end_1b09a200b:;
	}
	_1ad3e90b5_push_err(&(*_self_), _269955_si.get()._field_ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_269941_d.get()._field_kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad416c1a_eval_sub_ident(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ab01ae92_SubIdentExpr> _274638_si) {
	jule::Ptr<_1ad429931_TypeKind> _274717_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_274717_prefix;
	});
	jule::Ptr<_1ad3e6975_Data> _275117_d = _1ad418524_eval_expr_kind(_self_, jule::Any(_274638_si.get()._field_expr));
	if ((_275117_d == nullptr)) {
		return nullptr;
	}
	if (_275117_d.get()._field_decl) {
		return _1ad4163ce_eval_type_static(_self_.ptr(), _275117_d,_274638_si);
	}
	return _1ad416863_eval_obj_sub_ident(_self_.ptr(), _275117_d,_274638_si);
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4170c2_eval_tuple(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1aadb56cc_TupleExpr> _276334_tup) {
	jule::Ptr<_1ad435354_Tuple> _276417_tup_t = jule::new_ptr<_1ad435354_Tuple>(_1ad435354_Tuple());
	_276417_tup_t.get()._field_types=jule::Slice<jule::Ptr<_1ad429931_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_276334_tup.get()._field_expr.len()));
	jule::Ptr<_1ac66d912_TupleExprModel> _276717_model = jule::new_ptr<_1ac66d912_TupleExprModel>(_1ac66d912_TupleExprModel(jule::Slice<jule::Ptr<_1ad3e6975_Data>>::alloc(0LL,static_cast<jule::I64>(_276334_tup.get()._field_expr.len()))));
	jule::Bool _277117_ok = true;
	{
		auto &expr = _276334_tup.get()._field_expr;
		auto it = expr.begin();
		_iter_begin_1b09b38d0:;
		if (it != expr.end()) {
			jule::Ptr<_1aadb528c_Expr> _1b09b3acd_expr = *it;
			{
				jule::Ptr<_1ad3e6975_Data> _277321_d = _1ad418524_eval_expr_kind(_self_, _1b09b3acd_expr.get()._field_kind);
				if ((_277321_d == nullptr)) {
					_277117_ok=false;
					goto _iter_next_1b09b38d0;
				}
				_276417_tup_t.get()._field_types = jule::alloc_for_append(_276417_tup_t.get()._field_types,1);_276417_tup_t.get()._field_types.__push(_277321_d.get()._field_kind);
				_276717_model.get()._field_datas = jule::alloc_for_append(_276717_model.get()._field_datas,1);_276717_model.get()._field_datas.__push(_277321_d);
			}
			_iter_next_1b09b38d0:;
			++it;
			goto _iter_begin_1b09b38d0;
		}
		_iter_end_1b09b38d0:;
	}
	if ((!(_277117_ok))) {
		return nullptr;
	}
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_276417_tup_t, 8))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_276717_model)),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
}



inline jule::Ptr<_1ad3e6975_Data> _1ad417556_eval_map(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ad4360be_Map> _279232_m,jule::Ptr<_1ab01ba42_BraceLit> _279245_lit) {
	jule::Ptr<_1ac66a8ed_MapExprModel> _279317_model = jule::new_ptr<_1ac66a8ed_MapExprModel>(_1ac66a8ed_MapExprModel(_279232_m.get()._field_key,_279232_m.get()._field_val,jule::Slice<jule::Ptr<_1ac66a39d_KeyValPairExprModel>>()));
	{
		auto &expr = _279245_lit.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1b09b78d4:;
		if (it != expr.end()) {
			jule::Ptr<_1aadb528c_Expr> _1b09b7ae3_expr = *it;
			{
				{
					auto &_match_expr{ _1b09b7ae3_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1ab01bc62_KeyValPair>>()) {
						_case_begin_1b09b8022:;
						{
							goto _match_end_1b09b8297;
						}
					}
					else {
						_case_begin_1b09b82ec:;
						{
							_1ad3e90b5_push_err(_self_.ptr(), _279245_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1b09b8297:;
				}
				jule::Ptr<_1ab01bc62_KeyValPair> _280821_pair = _1b09b7ae3_expr.get()._field_kind.operator jule::Ptr<_1ab01bc62_KeyValPair>();
				jule::Ptr<_1ad3e6975_Data> _281021_key = _1ad418524_eval_expr_kind(_self_, jule::Any(_280821_pair.get()._field_key));
				if ((_281021_key == nullptr)) {
					return nullptr;
				}
				jule::Ptr<_1ad3e6975_Data> _281521_val = _1ad418524_eval_expr_kind(_self_, jule::Any(_280821_pair.get()._field_val));
				if ((_281521_val == nullptr)) {
					return nullptr;
				}
				_1ad387619_check_assign_type(_self_.get()._field_s, false,_279232_m.get()._field_key,_281021_key,_280821_pair.get()._field_colon);
				_1ad387619_check_assign_type(_self_.get()._field_s, false,_279232_m.get()._field_val,_281521_val,_280821_pair.get()._field_colon);
				_279317_model.get()._field_entries = jule::alloc_for_append(_279317_model.get()._field_entries,1);_279317_model.get()._field_entries.__push(jule::new_ptr<_1ac66a39d_KeyValPairExprModel>(_1ac66a39d_KeyValPairExprModel(_281021_key.get()._field_model,_281521_val.get()._field_model)));
			}
			_iter_next_1b09b78d4:;
			++it;
			goto _iter_begin_1b09b78d4;
		}
		_iter_end_1b09b78d4:;
	}
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_279232_m, 9))),jule::Ptr<_1ad429931_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_279317_model)),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41790d_eval_brace_lit(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ab01ba42_BraceLit> _283638_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1b09be963:;
			{
				_1ad3e90b5_push_err(_self_.ptr(), _283638_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1ad42da67_map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b09be9c9:;
			{
				return _1ad417556_eval_map(_self_, _1ad42da67_map(_self_.get()._field_prefix.ptr()),_283638_lit);
			}
		}
		else if ((_1ad42d4b2_strct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b09bda72:;
			{
				return _1ad40c99c_eval_struct_lit_explicit(_self_, _1ad42d4b2_strct(_self_.get()._field_prefix.ptr()),_283638_lit.get()._field_exprs,_283638_lit.get()._field_token);
			}
		}
		else {
			_case_begin_1b09bda0b:;
			{
				_1ad3e90b5_push_err(_self_.ptr(), _283638_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b09bd962:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad417cb5_eval_anon_fn(_1ad3e89cc_Eval* _self_,jule::Ptr<_1ab01da55_FnDecl> _285135_decl) {
	_1ad43b635_TypeChecker _285217_tc = _1ad43b635_TypeChecker((*_self_)._field_s,(*_self_)._field_lookup,jule::Ptr<_1ad43a6de_Referencer>(),_1ab005531_Token(),jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1ad428996_TypeAlias>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>(),jule::Bool());
	jule::Ptr<_1ac67a501_FnIns> _285617_ins = _1ad443719_build_fn(&_285217_tc, _285135_decl);
	_285617_ins.get()._field_anon=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ad35872d_ScopeChecker>>()) {
			_case_begin_1b09c543b:;
			{
				jule::Ptr<_1ad35872d_ScopeChecker> _286121_sc = (*_self_)._field_lookup.operator jule::Ptr<_1ad35872d_ScopeChecker>();
				jule::Ptr<_1ad35872d_ScopeChecker> _286221_scc = _1ad36aa2b_new_child_checker(_286121_sc);
				_286221_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ad3582dd_ScopeLabel>>>(nullptr);
				_286221_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ad35850d_ScopeGoto>>>(nullptr);
				_286221_scc.get()._field_owner=nullptr;
				_286221_scc.get()._field_child_index=0LL;
				_286221_scc.get()._field_it=0LLU;
				_286221_scc.get()._field_cse=0LLU;
				_286221_scc.get()._field_owner=_285617_ins;
				_1ad398482_check_fn_ins_sc((*_self_)._field_s.ptr(), _285617_ins,_286221_scc);
			}
		}
		else {
			_case_begin_1b09c4ade:;
			{
				_1ad398b9c_check_fn_ins((*_self_)._field_s, _285617_ins);
			}
		}
		_match_end_1b09c4a89:;
	}
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_285617_ins, 1))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ac669e4c_AnonFnExprModel>(_1ac669e4c_AnonFnExprModel(_285617_ins,_1ad3e9eea_is_global(&(*_self_)))))),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41816c_eval_binop(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1ab01b1b2_BinopExpr> _288534_op) {
	_1ad41b604_BinaryEval _288617_bs = static__1ad41bc20_new_plain(_self_);
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1ad42ec99_Prim> _289017_prim = _1ad42bec7_prim(_self_.get()._field_prefix.ptr());
		if ((_289017_prim == nullptr) || (!(_1ad355076_is_num(_1ad430173_to_str(_289017_prim.ptr()))))) {
			jule::Ptr<_1ad429931_TypeKind> _289225_prefix = _self_.get()._field_prefix;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_289225_prefix;
			});
			return _1ad422d25_eval(&_288617_bs, _288534_op);
		}
	}
	return _1ad422d25_eval(&_288617_bs, _288534_op);
}



inline jule::Ptr<_1ad3e6975_Data> _1ad418524_eval_expr_kind(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Any _290238_kind) {
	jule::Ptr<_1ad3e6975_Data> _290317_d = nullptr;
	{
		auto &_match_expr{ _290238_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1aadb528c_Expr>>()) {
			_case_begin_1b09ce434:;
			{
				_290317_d=_1ad418524_eval_expr_kind(_self_, _290238_kind.operator jule::Ptr<_1aadb528c_Expr>().get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aadb5b2d_LitExpr>>()) {
			_case_begin_1b09ce49a:;
			{
				_290317_d=_1ad3ec261_eval_lit(_self_.ptr(), _290238_kind.operator jule::Ptr<_1aadb5b2d_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aadb628d_IdentExpr>>()) {
			_case_begin_1b09ce511:;
			{
				_290317_d=_1ad402893_eval_ident(_self_.ptr(), _290238_kind.operator jule::Ptr<_1aadb628d_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aadb64ad_UnaryExpr>>()) {
			_case_begin_1b09ce6ed:;
			{
				_290317_d=_1ad402c4a_eval_unary(_self_, _290238_kind.operator jule::Ptr<_1aadb64ad_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aadb66cd_VariadicExpr>>()) {
			_case_begin_1b09ce764:;
			{
				_290317_d=_1ad403102_eval_variadic(_self_, _290238_kind.operator jule::Ptr<_1aadb66cd_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aadb5d4d_UnsafeExpr>>()) {
			_case_begin_1b09ce7ca:;
			{
				_290317_d=_1ad4034a9_eval_unsafe(_self_, _290238_kind.operator jule::Ptr<_1aadb5d4d_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01be82_SliceExpr>>()) {
			_case_begin_1b09ce852:;
			{
				_290317_d=_1ad40419c_eval_slice_expr(_self_, _290238_kind.operator jule::Ptr<_1ab01be82_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aadb58ec_IndexingExpr>>()) {
			_case_begin_1b09ce8c9:;
			{
				_290317_d=_1ad407315_eval_indexing(_self_, _290238_kind.operator jule::Ptr<_1aadb58ec_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01c625_SlicingExpr>>()) {
			_case_begin_1b09ce951:;
			{
				_290317_d=_1ad408921_eval_slicing(_self_, _290238_kind.operator jule::Ptr<_1ab01c625_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01aa52_CastExpr>>()) {
			_case_begin_1b09ce9c8:;
			{
				_290317_d=_1ad40c040_eval_cast(_self_, _290238_kind.operator jule::Ptr<_1ab01aa52_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01ac72_NsSelectionExpr>>()) {
			_case_begin_1b09cea50:;
			{
				_290317_d=_1ad40c3e7_eval_ns_selection(_self_.ptr(), _290238_kind.operator jule::Ptr<_1ab01ac72_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01b822_StructLit>>()) {
			_case_begin_1b09ceac7:;
			{
				_290317_d=_1ad40cd43_eval_struct_lit(_self_, _290238_kind.operator jule::Ptr<_1ab01b822_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aae075dc_TypeDecl>>()) {
			_case_begin_1b09ceb4e:;
			{
				_290317_d=_1ad40d1ea_eval_type(_self_.ptr(), _290238_kind.operator jule::Ptr<_1aae075dc_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01b3d2_FnCallExpr>>()) {
			_case_begin_1b09cebc6:;
			{
				_290317_d=_1ad410164_eval_fn_call(_self_, _290238_kind.operator jule::Ptr<_1ab01b3d2_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01ae92_SubIdentExpr>>()) {
			_case_begin_1b09cec4d:;
			{
				_290317_d=_1ad416c1a_eval_sub_ident(_self_, _290238_kind.operator jule::Ptr<_1ab01ae92_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aadb56cc_TupleExpr>>()) {
			_case_begin_1b09cecc5:;
			{
				_290317_d=_1ad4170c2_eval_tuple(_self_, _290238_kind.operator jule::Ptr<_1aadb56cc_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01ba42_BraceLit>>()) {
			_case_begin_1b09ced4c:;
			{
				_290317_d=_1ad41790d_eval_brace_lit(_self_, _290238_kind.operator jule::Ptr<_1ab01ba42_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01da55_FnDecl>>()) {
			_case_begin_1b09cedc4:;
			{
				_290317_d=_1ad417cb5_eval_anon_fn(_self_.ptr(), _290238_kind.operator jule::Ptr<_1ab01da55_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01b1b2_BinopExpr>>()) {
			_case_begin_1b09cee4b:;
			{
				_290317_d=_1ad41816c_eval_binop(_self_, _290238_kind.operator jule::Ptr<_1ab01b1b2_BinopExpr>());
			}
		}
		_match_end_1b09ce368:;
	}
	if ((_290317_d == nullptr)) {
		return nullptr;
	}
	if ((_290317_d.get()._field_kind == nullptr)) {
		return _290317_d;
	}
	if ((!(_290317_d.get()._field_decl)) && (_self_.get()._field_prefix != nullptr)) {
		if (((((((!(_1ad42a712_cpp_linked(_290317_d.get()._field_kind.ptr()))) && (_290317_d.get()._field_cast_kind == nullptr)) && (!(_290317_d.get()._field_kind.get()._field_variadic))) && (!(_290317_d.get()._field_lvalue))) && (!(_1ad3e747b_is_const(_290317_d.ptr())))) && (_1ad42bec7_prim(_290317_d.get()._field_kind.ptr()) != nullptr)) && _1ad355076_is_num(_1ad42bec7_prim(_290317_d.get()._field_kind.ptr()).get()._field_kind)) {
			_290317_d.get()._field_cast_kind=_290317_d.get()._field_kind;
		}
		_1ad4255ca_apply_cast_kind(_290317_d);
		if ((_1ad42bec7_prim(_290317_d.get()._field_kind.ptr()) == nullptr) || (!(_1ad4337a3_is_any(_1ad42bec7_prim(_290317_d.get()._field_kind.ptr()).ptr())))) {
			if ((_1ad42bec7_prim(_self_.get()._field_prefix.ptr()) != nullptr) && _1ad4337a3_is_any(_1ad42bec7_prim(_self_.get()._field_prefix.ptr()).ptr())) {
				_290317_d.get()._field_cast_kind=_self_.get()._field_prefix;
				_1ad425355_apply_cast_kind_model(_290317_d);
				_290317_d.get()._field_cast_kind=nullptr;
			}
		}
	}
	return _290317_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4188cb_eval(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1aadb528c_Expr> _297928_expr) {
	jule::Ptr<_1ad3e6975_Data> _298017_d = _1ad418524_eval_expr_kind(_self_, _297928_expr.get()._field_kind);
	if ((_298017_d == nullptr) || (_298017_d.get()._field_kind == nullptr)) {
		return nullptr;
	}
	{
		
		if ((_1ad42d1d7_fnc(_298017_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b09e42b2:;
			{
				jule::Ptr<_1ac67a501_FnIns> _298721_f = _1ad42d1d7_fnc(_298017_d.get()._field_kind.ptr());
				if (_1ac67b17d_is_builtin(_298721_f.ptr())) {
					goto _match_end_1b09e41d5;
				}
				if (_298721_f.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>(_298721_f.get()._field_decl.get()._field_generics.len()))) {
					_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _297928_expr.get()._field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				}
				if (_1ac67729a_is_method(_298721_f.get()._field_decl.ptr())) {
					_1ad3810c4_push_err(_self_.get()._field_s.ptr(), _297928_expr.get()._field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				}
			}
		}
		_match_end_1b09e41d5:;
	}
	return _298017_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad418c83_eval_expr(jule::Ptr<_1ad3e89cc_Eval> _self_,jule::Ptr<_1aadb528c_Expr> _300533_expr) {
	jule::Ptr<_1ad3e6975_Data> _300617_d = _1ad4188cb_eval(_self_, _300533_expr);
	{
		
		if ((_300617_d == nullptr)) {
			_case_begin_1b09e8c34:;
			{
				return nullptr;
			}
		}
		else if (_300617_d.get()._field_decl) {
			_case_begin_1b09e8c9a:;
			{
				_1ad3e90b5_push_err(_self_.ptr(), _300533_expr.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1b09e863a:;
			{
				return _300617_d;
			}
		}
		_match_end_1b09e85d5:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3e89cc_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1ad4192d3_UnaryEval static__1ad419800_new(jule::Ptr<_1ad3e89cc_Eval> _302623_e) {
	return _1ad4192d3_UnaryEval(_302623_e,jule::Ptr<_1ad3e6975_Data>(),jule::Ptr<_1aadb64ad_UnaryExpr>());
}



inline void _1ad419a42_minus(_1ad4192d3_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1b09ea97d:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		else if ((_1ad42bec7_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b09eae67:;
			{
				if ((!(_1ad355076_is_num(_1ad429d4e_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((_1ad42d4b2_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b09eaecd:;
			{
				if ((_1ad42d4b2_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else {
			_case_begin_1b09ea609:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1b09ea53d:;
	}
	if (_1ad3e747b_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1ad2c6855_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1b09ee92c:;
				{
					_1ad2c56cd_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((-(static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c3ca3_read_f64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1ad2c5bea_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1b09ee9a4:;
				{
					_1ad2c4952_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c3148_read_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1ad2c5ec5_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1b09eea2b:;
				{
					_1ad2c4952_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c407d_as_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			_match_end_1b09ee696:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1ac667158_UnaryExprModel>(_1ac667158_UnaryExprModel(jule::new_ptr<_1ad3e6975_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1ad419c84_plus(_1ad4192d3_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1b0a05801:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		else if ((_1ad42bec7_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0a05cda:;
			{
				if ((!(_1ad355076_is_num(_1ad429d4e_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((_1ad42d4b2_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0a05d51:;
			{
				if ((_1ad42d4b2_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else {
			_case_begin_1b0a0547c:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1b0a053b1:;
	}
	if (_1ad3e747b_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1ad2c6855_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1b0a097a0:;
				{
					_1ad2c56cd_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((+(static_cast<jule::F64>(static_cast<jule::F64>(_1ad2c3ca3_read_f64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1ad2c5bea_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1b0a09827:;
				{
					_1ad2c4952_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c3148_read_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1ad2c5ec5_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1b0a0989e:;
				{
					_1ad2c4952_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c407d_as_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			_match_end_1b0a09519:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1ac667158_UnaryExprModel>(_1ac667158_UnaryExprModel(jule::new_ptr<_1ad3e6975_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1ad419ec6_caret(_1ad4192d3_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1b0a10861:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		else if ((_1ad42bec7_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0a10d4a:;
			{
				if ((!(_1ad354916_is_int(_1ad429d4e_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((_1ad42d4b2_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0a10db1:;
			{
				if ((_1ad42d4b2_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_bit_not == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else {
			_case_begin_1b0a104dc:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1b0a10421:;
	}
	if (_1ad3e747b_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1ad2c5bea_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1b0a14810:;
				{
					_1ad2c4952_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((~(static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c3148_read_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1ad2c5ec5_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1b0a14876:;
				{
					_1ad2c4c71_set_u64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::U64>((~(static_cast<jule::U64>(static_cast<jule::U64>(_1ad2c3423_read_u64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			_match_end_1b0a14579:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1ac667158_UnaryExprModel>(_1ac667158_UnaryExprModel(jule::new_ptr<_1ad3e6975_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1ad41a218_excl(_1ad4192d3_UnaryEval* _self_) {
	jule::Ptr<_1ad42ec99_Prim> _314513_t = _1ad42bec7_prim((*_self_)._field_d.get()._field_kind.ptr());
	if ((_314513_t == nullptr) || (!(_1ad4331ed_is_bool(_314513_t.ptr())))) {
		(*_self_)._field_d=nullptr;
		return;
	}
	if (_1ad3e747b_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1ad2c62a0_is_bool((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1b0a1ac34:;
				{
					_1ad2c5090_set_bool((*_self_)._field_d.get()._field_constant.ptr(), (!(_1ad2c36ed_read_bool((*_self_)._field_d.get()._field_constant.ptr()))));
				}
			}
			_match_end_1b0a1ab35:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1ac667158_UnaryExprModel>(_1ac667158_UnaryExprModel(jule::new_ptr<_1ad3e6975_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1ad41a45a_star(_1ad4192d3_UnaryEval* _self_) {
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1ac667158_UnaryExprModel>(_1ac667158_UnaryExprModel(jule::new_ptr<_1ad3e6975_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
	{
		
		if ((_1ad42c57c_ptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0a1ea07:;
			{
				if ((!(_1ad3e9c20_is_unsafe((*_self_)._field_e.ptr())))) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				}
				jule::Ptr<_1ad437983_Ptr> _317721_t = _1ad42c57c_ptr((*_self_)._field_d.get()._field_kind.ptr());
				if (_1ad4385cc_is_unsafe(_317721_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;
				}
				(*_self_)._field_d.get()._field_kind=_317721_t.get()._field_elem;
			}
		}
		else if ((_1ad42c2a2_sptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0a1eee1:;
			{
				(*_self_)._field_d.get()._field_kind=_1ad42c2a2_sptr((*_self_)._field_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else {
			_case_begin_1b0a1e6a5:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1b0a1e650:;
	}
	(*_self_)._field_d.get()._field_constant=nullptr;
	(*_self_)._field_d.get()._field_lvalue=true;
}



inline void _1ad41a69c_amper(_1ad4192d3_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac667a4e_StructLitExprModel>>()) {
			_case_begin_1b0a25535:;
			{
				jule::Ptr<_1ac667a4e_StructLitExprModel> _319721_lit = (*_self_)._field_d.get()._field_model.operator jule::Ptr<_1ac667a4e_StructLitExprModel>();
				_1ad423d15_make_struct_lit_alloc((*_self_)._field_d,_319721_lit);
			}
		}
		else {
			_case_begin_1b0a24ed5:;
			{
				{
					
					if (_1ad438995_can_get_ptr((*_self_)._field_d)) {
						_case_begin_1b0a25843:;
						{
							(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ad437983_Ptr>(_1ad437983_Ptr((*_self_)._field_d.get()._field_kind)), 11)));
							(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1ac667158_UnaryExprModel>(_1ac667158_UnaryExprModel(jule::new_ptr<_1ad3e6975_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
						}
					}
					else {
						_case_begin_1b0a254be:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1b0a25425:;
				}
			}
		}
		_match_end_1b0a24e5d:;
	}
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_constant=nullptr;
		(*_self_)._field_d.get()._field_lvalue=false;
	}
}



inline void _1ad41a8de_type_decl(_1ad4192d3_UnaryEval* _self_) {
	_1ad43b635_TypeChecker _322217_tc = _1ad43b635_TypeChecker((*_self_)._field_e.get()._field_s,(*_self_)._field_e.get()._field_lookup,jule::Ptr<_1ad43a6de_Referencer>(),(*_self_)._field_u.get()._field_op,jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1ad428996_TypeAlias>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>(),jule::Bool());
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b0a2c77e:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad441b35_build_ptr_from_type(&_322217_tc, (*_self_)._field_d.get()._field_kind), 11)));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b0a2c7e5:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad4413c6_build_sptr_from_type(&_322217_tc, (*_self_)._field_d.get()._field_kind), 6)));
			}
		}
		else {
			_case_begin_1b0a2988b:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>({jule::Any((*_self_)._field_u.get()._field_op._field_kind),jule::Any(_1ad429d4e_to_str((*_self_)._field_d.get()._field_kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1b0a2aa02:;
	}
	(*_self_)._field_d.get()._field_decl=true;
}



inline void _1ad41ab31_eval_data(_1ad4192d3_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1b0a3119a:;
			{
				jule::Ptr<_1ad429931_TypeKind> _324421_prefix = (*_self_)._field_e.get()._field_prefix;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1ad418524_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
				(*_self_)._field_e.get()._field_prefix=_324421_prefix;
			}
		}
		else {
			_case_begin_1b0a30892:;
			{
				(*_self_)._field_d=_1ad418524_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
			}
		}
		_match_end_1b0a30d37:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41aea5_eval(_1ad4192d3_UnaryEval* _self_,jule::Ptr<_1aadb64ad_UnaryExpr> _325327_u) {
	(*_self_)._field_u=_325327_u;
	_1ad41ab31_eval_data(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	}
	if ((*_self_)._field_d.get()._field_decl) {
		_1ad41a8de_type_decl(&(*_self_));
		return (*_self_)._field_d;
	}
	jule::Ptr<_1ad429931_TypeKind> _326417_cast_kind = (*_self_)._field_d.get()._field_cast_kind;
	jule::Ptr<_1ad429931_TypeKind> _326513_kind = (*_self_)._field_d.get()._field_kind;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1b0a3614a:;
			{
				_1ad419a42_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b0a361b1:;
			{
				_1ad419c84_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b0a36227:;
			{
				_1ad419ec6_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1b0a3628d:;
			{
				_1ad41a218_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b0a36843:;
			{
				_1ad41a45a_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b0a368a9:;
			{
				_1ad41a69c_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1b0a33a0a:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1b0a35ea2:;
	}
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1b0a38b0e:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>({jule::Any((*_self_)._field_u.get()._field_op._field_kind),jule::Any(_1ad429d4e_to_str(_326513_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1ad3e747b_is_const((*_self_)._field_d.ptr())) {
			_case_begin_1b0a38b75:;
			{
				(*_self_)._field_d.get()._field_model=jule::Any((*_self_)._field_d.get()._field_constant);
			}
		}
		else if ((_326417_cast_kind != nullptr)) {
			_case_begin_1b0a38bdb:;
			{
				(*_self_)._field_d.get()._field_cast_kind=_326417_cast_kind;
				_1ad4255ca_apply_cast_kind((*_self_)._field_d);
			}
		}
		_match_end_1b0a3859d:;
	}
	(*_self_)._field_d.get()._field_mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad4192d3_UnaryEval _Src) {
	_Stream << "UnaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad429d4e_to_str(_1ad429931_TypeKind* _self_) {
	if (_1ad42a9dc_is_nil(&(*_self_))) {
		return jule::Str("nil", 3);
	}
	jule::Str _7717_kind = jule::Str();
	if ((*_self_)._field_variadic) {
		_7717_kind+=jule::Str("...", 3);
	}
	if (_1ad42a712_cpp_linked(&(*_self_))) {
		_7717_kind+=jule::Str("cpp.", 4);
		_7717_kind+=(*_self_)._field_cpp_ident;
	} else {
		_7717_kind+=_1ad4293e2_Kind_mptr_data[((*_self_)._field_kind).type_offset]._1ad428db4_to_str((*_self_)._field_kind);
	}
	return _7717_kind;
}



inline jule::Bool _1ad42a206_equals(jule::Ptr<_1ad429931_TypeKind> _self_,jule::Ptr<_1ad429931_TypeKind> _9326_other) {
	if (_1ad42a9dc_is_nil(_self_.ptr())) {
		return _1ad42a9dc_is_nil(_9326_other.ptr());
	}
	if (_1ad42a712_cpp_linked(_self_.ptr())) {
		return _1ad42a712_cpp_linked(_9326_other.ptr()) && (_self_.get()._field_cpp_ident == _9326_other.get()._field_cpp_ident);
	}
	return _1ad4293e2_Kind_mptr_data[(_self_.get()._field_kind).type_offset]._1ad42926b_equals(_self_.get()._field_kind, _9326_other);
}



inline jule::Bool _1ad42a712_cpp_linked(_1ad429931_TypeKind* _self_) {
	return ((*_self_)._field_cpp_ident.len() != 0LL);
}



inline jule::Bool _1ad42a9dc_is_nil(_1ad429931_TypeKind* _self_) {
	return ((*_self_)._field_kind == nullptr);
}



inline jule::Bool _1ad42acb7_void(_1ad429931_TypeKind* _self_) {
	jule::Ptr<_1ad42ec99_Prim> _11613_prim = _1ad42bec7_prim(&(*_self_));
	return (_11613_prim != nullptr) && (_11613_prim.get()._field_kind == jule::Str("void", 4));
}



inline jule::Bool _1ad42b092_mutable(_1ad429931_TypeKind* _self_) {
	{
		_1ad429931_TypeKind* _12321__self = (&((*_self_)));
		if ((_1ad42d4b2_strct(_12321__self) != nullptr)) {
			return _1ad42d4b2_strct(_12321__self).get()._field_mutable;
		}
		if ((_1ad42d78c_trt(_12321__self) != nullptr)) {
			return _1ad42d78c_trt(_12321__self).get()._field_mutable;
		}
		if ((_1ad42bec7_prim(_12321__self) != nullptr)) {
			jule::Ptr<_1ad42ec99_Prim> _13221_p = _1ad42bec7_prim(_12321__self);
			return _1ad4337a3_is_any(_13221_p.ptr());
		}
		if ((_1ad42cb32_arr(_12321__self) != nullptr)) {
			return _1ad42b092_mutable(_1ad42cb32_arr(_12321__self).get()._field_elem.ptr());
		}
		return ((_1ad42ce0c_slc(_12321__self) != nullptr) || (_1ad42c57c_ptr(_12321__self) != nullptr)) || (_1ad42c2a2_sptr(_12321__self) != nullptr);
	}
}



inline jule::Bool _1ad42b36c_nil_compatible(_1ad429931_TypeKind* _self_) {
	{
		_1ad429931_TypeKind* _14721__self = (&((*_self_)));
		jule::Ptr<_1ad42ec99_Prim> _14917_prim = _1ad42bec7_prim(_14721__self);
		if ((_14917_prim != nullptr) && _1ad4337a3_is_any(_14917_prim.ptr())) {
			return true;
		}
		return (((((_1ad42a9dc_is_nil(_14721__self) || (_1ad42d1d7_fnc(_14721__self) != nullptr)) || (_1ad42c2a2_sptr(_14721__self) != nullptr)) || (_1ad42c57c_ptr(_14721__self) != nullptr)) || (_1ad42d78c_trt(_14721__self) != nullptr)) || (_1ad42ce0c_slc(_14721__self) != nullptr)) || (_1ad42da67_map(_14721__self) != nullptr);
	}
}



inline jule::Bool _1ad42b647_performs_rc(_1ad429931_TypeKind* _self_) {
	{
		_1ad429931_TypeKind* _16721__self = (&((*_self_)));
		return ((_1ad42c2a2_sptr(_16721__self) != nullptr) || (_1ad42ce0c_slc(_16721__self) != nullptr)) || (_1ad42d78c_trt(_16721__self) != nullptr);
	}
}



inline jule::Bool _1ad42b922_supports_cloning(_1ad429931_TypeKind* _self_) {
	{
		_1ad429931_TypeKind* _17521__self = (&((*_self_)));
		{
			
			if ((_1ad42bec7_prim(_17521__self) != nullptr)) {
				_case_begin_1b089214e:;
				{
					return (!(_1ad4337a3_is_any(_1ad42bec7_prim(_17521__self).ptr())));
				}
			}
			else if ((_1ad42c857_enm(_17521__self) != nullptr)) {
				_case_begin_1b08921b5:;
				{
					return true;
				}
			}
			else if ((_1ad42d1d7_fnc(_17521__self) != nullptr)) {
				_case_begin_1b0891d74:;
				{
					return true;
				}
			}
			else if ((_1ad42c57c_ptr(_17521__self) != nullptr)) {
				_case_begin_1b0891dda:;
				{
					return true;
				}
			}
			else if ((_1ad42ce0c_slc(_17521__self) != nullptr)) {
				_case_begin_1b0891e51:;
				{
					return _1ad42b922_supports_cloning(_1ad42ce0c_slc(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1ad42da67_map(_17521__self) != nullptr)) {
				_case_begin_1b0891978:;
				{
					jule::Ptr<_1ad4360be_Map> _18521_m = _1ad42da67_map(_17521__self);
					return _1ad42b922_supports_cloning(_18521_m.get()._field_key.ptr()) && _1ad42b922_supports_cloning(_18521_m.get()._field_val.ptr());
				}
			}
			else if ((_1ad42cb32_arr(_17521__self) != nullptr)) {
				_case_begin_1b08919de:;
				{
					return _1ad42b922_supports_cloning(_1ad42cb32_arr(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1ad42c2a2_sptr(_17521__self) != nullptr)) {
				_case_begin_1b0891a55:;
				{
					return _1ad42b922_supports_cloning(_1ad42c2a2_sptr(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1ad42d4b2_strct(_17521__self) != nullptr)) {
				_case_begin_1b0891abb:;
				{
					jule::Ptr<_1ac664551_StructIns> _19225_s = _1ad42d4b2_strct(_17521__self);
					return ((_19225_s.get()._field_decl != nullptr) && (!(_19225_s.get()._field_decl.get()._field_cpp_linked))) && _1ac662d24_is_derives(_19225_s.get()._field_decl.ptr(), jule::Str("Clone", 5));
				}
			}
			else {
				_case_begin_1b0891912:;
				{
					return false;
				}
			}
			_match_end_1b089188a:;
		}
	}
}



inline jule::Bool _1ad42bbec_variadicable(_1ad429931_TypeKind* _self_) {
	{
		_1ad429931_TypeKind* _20521__self = (&((*_self_)));
		return (_1ad42ce0c_slc(_20521__self) != nullptr);
	}
}



inline jule::Ptr<_1ad42ec99_Prim> _1ad42bec7_prim(_1ad429931_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad42ec99_Prim>>()) {
			_case_begin_1b089b048:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ad42ec99_Prim>();
			}
		}
		else {
			_case_begin_1b088e38d:;
			{
				return nullptr;
			}
		}
		_match_end_1b088e338:;
	}
}



inline jule::Ptr<_1ad433b05_Sptr> _1ad42c2a2_sptr(_1ad429931_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad433b05_Sptr>>()) {
			_case_begin_1b088e4d1:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ad433b05_Sptr>();
			}
		}
		else {
			_case_begin_1b089ae27:;
			{
				return nullptr;
			}
		}
		_match_end_1b089adc2:;
	}
}



inline jule::Ptr<_1ad437983_Ptr> _1ad42c57c_ptr(_1ad429931_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad437983_Ptr>>()) {
			_case_begin_1b089ba4e:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ad437983_Ptr>();
			}
		}
		else {
			_case_begin_1b089bcb3:;
			{
				return nullptr;
			}
		}
		_match_end_1b089bc5d:;
	}
}



inline jule::Ptr<_1ac724545_Enum> _1ad42c857_enm(_1ad429931_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac724545_Enum>>()) {
			_case_begin_1b089c8da:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ac724545_Enum>();
			}
		}
		else {
			_case_begin_1b089cb1b:;
			{
				return nullptr;
			}
		}
		_match_end_1b089cab6:;
	}
}



inline jule::Ptr<_1ad436da0_Arr> _1ad42cb32_arr(_1ad429931_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad436da0_Arr>>()) {
			_case_begin_1b089d743:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ad436da0_Arr>();
			}
		}
		else {
			_case_begin_1b089d974:;
			{
				return nullptr;
			}
		}
		_match_end_1b089d91e:;
	}
}



inline jule::Ptr<_1ad4346d8_Slc> _1ad42ce0c_slc(_1ad429931_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad4346d8_Slc>>()) {
			_case_begin_1b089e59b:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ad4346d8_Slc>();
			}
		}
		else {
			_case_begin_1b089e7cc:;
			{
				return nullptr;
			}
		}
		_match_end_1b089e777:;
	}
}



inline jule::Ptr<_1ac67a501_FnIns> _1ad42d1d7_fnc(_1ad429931_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac67a501_FnIns>>()) {
			_case_begin_1b08a0404:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ac67a501_FnIns>();
			}
		}
		else {
			_case_begin_1b08a0635:;
			{
				return nullptr;
			}
		}
		_match_end_1b08a05d0:;
	}
}



inline jule::Ptr<_1ac664551_StructIns> _1ad42d4b2_strct(_1ad429931_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac664551_StructIns>>()) {
			_case_begin_1b08a125c:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ac664551_StructIns>();
			}
		}
		else {
			_case_begin_1b08a148d:;
			{
				return nullptr;
			}
		}
		_match_end_1b08a1438:;
	}
}



inline jule::Ptr<_1ac85d096_Trait> _1ad42d78c_trt(_1ad429931_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac85d096_Trait>>()) {
			_case_begin_1b08a3319:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ac85d096_Trait>();
			}
		}
		else {
			_case_begin_1b08a22e6:;
			{
				return nullptr;
			}
		}
		_match_end_1b08a2291:;
	}
}



inline jule::Ptr<_1ad4360be_Map> _1ad42da67_map(_1ad429931_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad4360be_Map>>()) {
			_case_begin_1b08a41b6:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ad4360be_Map>();
			}
		}
		else {
			_case_begin_1b08a3209:;
			{
				return nullptr;
			}
		}
		_match_end_1b08a31a4:;
	}
}



inline jule::Ptr<_1ad435354_Tuple> _1ad42dd42_tup(_1ad429931_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad435354_Tuple>>()) {
			_case_begin_1b08a5063:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ad435354_Tuple>();
			}
		}
		else {
			_case_begin_1b08a40a6:;
			{
				return nullptr;
			}
		}
		_match_end_1b08a4051:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1ad429931_TypeKind _Src) {
	_Stream << _1ad429d4e_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1ad42e705_checked(_1ad42e293_TypeSymbol* _self_) {
	return ((*_self_)._field_kind != nullptr);
}



inline void _1ad42e947_remove_kind(_1ad42e293_TypeSymbol* _self_) {
	(*_self_)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad42e293_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad430173_to_str(_1ad42ec99_Prim* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1ad43052a_equals(jule::Ptr<_1ad42ec99_Prim> _self_,jule::Ptr<_1ad429931_TypeKind> _32626_other) {
	jule::Ptr<_1ad42ec99_Prim> _32713_prim = _1ad42bec7_prim(_32626_other.ptr());
	if ((_32713_prim == nullptr)) {
		return false;
	}
	return _self_.get()._field_kind == _32713_prim.get()._field_kind;
}



inline jule::Bool _1ad430a03_is_i8(_1ad42ec99_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i8", 2));
}



inline jule::Bool _1ad430ccd_is_i16(_1ad42ec99_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i16", 3));
}



inline jule::Bool _1ad4310a8_is_i32(_1ad42ec99_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i32", 3));
}



inline jule::Bool _1ad431383_is_i64(_1ad42ec99_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i64", 3));
}



inline jule::Bool _1ad43165d_is_u8(_1ad42ec99_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u8", 2));
}



inline jule::Bool _1ad431938_is_u16(_1ad42ec99_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u16", 3));
}



inline jule::Bool _1ad431c13_is_u32(_1ad42ec99_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u32", 3));
}



inline jule::Bool _1ad431edd_is_u64(_1ad42ec99_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u64", 3));
}



inline jule::Bool _1ad4322b8_is_f32(_1ad42ec99_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f32", 3));
}



inline jule::Bool _1ad432593_is_f64(_1ad42ec99_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f64", 3));
}



inline jule::Bool _1ad43286d_is_int(_1ad42ec99_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("int", 3));
}



inline jule::Bool _1ad432b48_is_uint(_1ad42ec99_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uint", 4));
}



inline jule::Bool _1ad432e23_is_uintptr(_1ad42ec99_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1ad4331ed_is_bool(_1ad42ec99_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("bool", 4));
}



inline jule::Bool _1ad4334c8_is_str(_1ad42ec99_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("str", 3));
}



inline jule::Bool _1ad4337a3_is_any(_1ad42ec99_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1ad42ec99_Prim _Src) {
	_Stream << _1ad430173_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1ad433ece_to_str(_1ad433b05_Sptr* _self_) {
	return jule::Str("&", 1) + _1ad429d4e_to_str((*_self_)._field_elem.ptr());
}



inline jule::Bool _1ad434386_equals(jule::Ptr<_1ad433b05_Sptr> _self_,jule::Ptr<_1ad429931_TypeKind> _39526_other) {
	jule::Ptr<_1ad433b05_Sptr> _39613_sptr = _1ad42c2a2_sptr(_39526_other.ptr());
	if ((_39613_sptr == nullptr)) {
		return false;
	}
	return _1ad42a206_equals(_self_.get()._field_elem, _39613_sptr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad433b05_Sptr _Src) {
	_Stream << _1ad433ece_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1ad434b4a_to_str(_1ad4346d8_Slc* _self_) {
	return jule::Str("[]", 2) + _1ad429d4e_to_str((*_self_)._field_elem.ptr());
}



inline jule::Bool _1ad435002_equals(jule::Ptr<_1ad4346d8_Slc> _self_,jule::Ptr<_1ad429931_TypeKind> _41426_other) {
	jule::Ptr<_1ad4346d8_Slc> _41513_slc = _1ad42ce0c_slc(_41426_other.ptr());
	if ((_41513_slc == nullptr)) {
		return false;
	}
	return _1ad42a206_equals(_self_.get()._field_elem, _41513_slc.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad4346d8_Slc _Src) {
	_Stream << _1ad434b4a_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1ad4357b6_to_str(_1ad435354_Tuple* _self_) {
	jule::Str _43117_s = jule::Str("(", 1);
	_43117_s+=_1ad429d4e_to_str((*_self_)._field_types[0LL].ptr());
	{
		auto expr = (*_self_)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1b08b7e55:;
		if (it != expr.end()) {
			jule::Ptr<_1ad429931_TypeKind> &_1b08b810e_t = *it;
			{
				_43117_s+=jule::Str(",", 1);
				_43117_s+=_1ad429d4e_to_str(_1b08b810e_t.ptr());
			}
			_iter_next_1b08b7e55:;
			++it;
			goto _iter_begin_1b08b7e55;
		}
		_iter_end_1b08b7e55:;
	}
	_43117_s+=jule::Str(")", 1);
	return _43117_s;
}



inline jule::Bool _1ad435b6d_equals(jule::Ptr<_1ad435354_Tuple> _self_,jule::Ptr<_1ad429931_TypeKind> _44226_other) {
	jule::Ptr<_1ad435354_Tuple> _44313_tup = _1ad42dd42_tup(_44226_other.ptr());
	if ((_44313_tup == nullptr)) {
		return false;
	}
	if (_self_.get()._field_types.len() != static_cast<jule::I64>(static_cast<jule::I64>(_44313_tup.get()._field_types.len()))) {
		return false;
	}
	jule::I64 _45217_i = 0LL;
	for (; _45217_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_types.len())); (_45217_i)++) {
		{
			if ((!(_1ad42a206_equals(_self_.get()._field_types[_45217_i], _44313_tup.get()._field_types[_45217_i])))) {
				return false;
			}
		}
	_iter_next_1b08bb178:;
	}
	_iter_end_1b08bb178:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad435354_Tuple _Src) {
	_Stream << _1ad4357b6_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1ad436498_to_str(_1ad4360be_Map* _self_) {
	jule::Str _47217_s = jule::Str("[", 1);
	_47217_s+=_1ad429d4e_to_str((*_self_)._field_key.ptr());
	_47217_s+=jule::Str(":", 1);
	_47217_s+=_1ad429d4e_to_str((*_self_)._field_val.ptr());
	_47217_s+=jule::Str("]", 1);
	return _47217_s;
}



inline jule::Bool _1ad436850_equals(jule::Ptr<_1ad4360be_Map> _self_,jule::Ptr<_1ad429931_TypeKind> _48126_other) {
	jule::Ptr<_1ad4360be_Map> _48213_map = _1ad42da67_map(_48126_other.ptr());
	if ((_48213_map == nullptr)) {
		return false;
	}
	return _1ad42a206_equals(_self_.get()._field_key, _48213_map.get()._field_key) && _1ad42a206_equals(_self_.get()._field_val, _48213_map.get()._field_val);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad4360be_Map _Src) {
	_Stream << _1ad436498_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1ad437279_to_str(_1ad436da0_Arr* _self_) {
	jule::Str _50017_s = jule::Str("[", 1);
	_50017_s+=_1ad258364_itoa((*_self_)._field_n);
	_50017_s+=jule::Str("]", 1);
	_50017_s+=_1ad429d4e_to_str((*_self_)._field_elem.ptr());
	return _50017_s;
}



inline jule::Bool _1ad437631_equals(jule::Ptr<_1ad436da0_Arr> _self_,jule::Ptr<_1ad429931_TypeKind> _50826_other) {
	jule::Ptr<_1ad436da0_Arr> _50913_arr = _1ad42cb32_arr(_50826_other.ptr());
	if ((_50913_arr == nullptr)) {
		return false;
	}
	return (_self_.get()._field_n == _50913_arr.get()._field_n) && _1ad42a206_equals(_self_.get()._field_elem, _50913_arr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad436da0_Arr _Src) {
	_Stream << _1ad437279_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1ad437d5c_to_str(_1ad437983_Ptr* _self_) {
	if (_1ad4385cc_is_unsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + _1ad429d4e_to_str((*_self_)._field_elem.ptr());
}



inline jule::Bool _1ad438214_equals(jule::Ptr<_1ad437983_Ptr> _self_,jule::Ptr<_1ad429931_TypeKind> _53226_other) {
	jule::Ptr<_1ad437983_Ptr> _53313_ptr = _1ad42c57c_ptr(_53226_other.ptr());
	if ((_53313_ptr == nullptr)) {
		return false;
	}
	return _1ad42a206_equals(_self_.get()._field_elem, _53313_ptr.get()._field_elem);
}



inline jule::Bool _1ad4385cc_is_unsafe(_1ad437983_Ptr* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad437983_Ptr _Src) {
	_Stream << _1ad437d5c_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad43a6de_Referencer _Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b4ae5da4_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "prod:" << _Src._field_prod << ", ";
	_Stream << "test:" << _Src._field_test << ", ";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "cpp_std:" << _Src._field_cpp_std;
	_Stream << "}";
	return _Stream;
}



inline void _1b4aeddce_push_err(_1aad97e40_DirectiveEval* _self_,_1ab005531_Token _2127_t,jule::Str _2137_fmt,jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_1a92a31c6_Log(static_cast<jule::I64>(1LL),_2127_t._field_row,_2127_t._field_column,_2127_t._field_file.get()._field_path,_1a92a36b0_logf(_2137_fmt,_2150_args),jule::Str(),jule::Str()));
}



inline jule::Slice<jule::Slice<_1ab005531_Token>> _1b4b00166_split_operans(_1aad97e40_DirectiveEval* _self_,jule::Str _3332_op,jule::Slice<_1ab005531_Token>& _3352_tokens) {
	jule::Slice<jule::Slice<_1ab005531_Token>> _3417_parts = jule::Slice<jule::Slice<_1ab005531_Token>>::alloc(0LL,10LL);
	jule::I64 _3617_i = 0LL;
	jule::I64 _3717_range_n = 0LL;
	jule::I64 _3817_last = 0LL;
	for (; _3617_i < static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_3352_tokens.len())) - 1LL))); (_3617_i)++) {
		{
			_1ab005531_Token _4017_b = _3352_tokens[_3617_i];
			if (_4017_b._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _4017_b._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1b0d766bb:;
						{
							(_3717_range_n)++;
							goto _iter_next_1b0d75643;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1b0d76732:;
						{
							(_3717_range_n)--;
						}
					}
					_match_end_1b0d76633:;
				}
			}
			if ((_3717_range_n > 0LL) || (_4017_b._field_id != static_cast<jule::U64>(7LLU))) {
				goto _iter_next_1b0d75643;
			}
			if (_4017_b._field_kind == _3332_op) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last,_3617_i));
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			}
		}
	_iter_next_1b0d75643:;
	}
	_iter_end_1b0d75643:;
	if (_3817_last < static_cast<jule::I64>(static_cast<jule::I64>(_3352_tokens.len()))) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last));
	} else {
		_1b4aeddce_push_err(&(*_self_), _3352_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _3417_parts;
}



inline jule::Bool _1b4aeb272_eval_directive_ident(_1aad97e40_DirectiveEval* _self_,jule::Str _7435_ident) {
	if (_7435_ident.empty()) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1b0d7adda:;
		if (it != expr.end()) {
			jule::Str &_1b0d7b24d_var = *it;
			{
				if (_1b0d7b24d_var == _7435_ident) {
					return true;
				}
			}
			_iter_next_1b0d7adda:;
			++it;
			goto _iter_begin_1b0d7adda;
		}
		_iter_end_1b0d7adda:;
	}
	return false;
}



inline jule::Bool _1aad80257_eval_directive_part(_1aad97e40_DirectiveEval* _self_,jule::Slice<_1ab005531_Token> _8842_part) {
	jule::Bool _8913_logical_not = (_8842_part[0LL]._field_id == static_cast<jule::U64>(7LLU)) && (_8842_part[0LL]._field_kind == jule::Str("!", 1));
	if (_8913_logical_not) {
		_8842_part=_8842_part.slice(1LL);
	}
	if ((_8842_part.len() > 1LL)) {
		_1b4aeddce_push_err(&(*_self_), _8842_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _9917_result = _1b4aeb272_eval_directive_ident(&(*_self_), _8842_part[0LL]._field_kind);
	if (_8913_logical_not) {
		_9917_result=(!(_9917_result));
	}
	return _9917_result;
}



inline jule::Bool _1b4b049d9_eval(_1aad97e40_DirectiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_args.len() == 0LL)) {
		_1b4aeddce_push_err(&(*_self_), (*_self_)._field_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _11217_result = false;
	jule::Slice<jule::Slice<_1ab005531_Token>> _11417_logical_or_parts = _1b4b00166_split_operans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_args);
	if ((_11417_logical_or_parts == nullptr)) {
		return false;
	}
	{
		auto &expr = _11417_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_1b0d83079:;
		if (it != expr.end()) {
			jule::Slice<_1ab005531_Token> _1b0d82d48_part = *it;
			{
				jule::Bool _12021_and = true;
				jule::Slice<jule::Slice<_1ab005531_Token>> _12121_logical_and_parts = _1b4b00166_split_operans(&(*_self_), jule::Str("&&", 2),_1b0d82d48_part);
				if ((_12121_logical_and_parts == nullptr)) {
					return false;
				}
				{
					auto &expr = _12121_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_1b0d8471d:;
					if (it != expr.end()) {
						jule::Slice<_1ab005531_Token> _1b0d844ed_and_part = *it;
						{
							_1ab005531_Token _12721_first = _1b0d844ed_and_part[0LL];
							if ((_12721_first._field_id == static_cast<jule::U64>(3LLU)) && (_12721_first._field_kind == jule::Str("(", 1))) {
								_1ab005531_Token _12925_end = _1b0d844ed_and_part[(_1b0d844ed_and_part.len() - 1LL)];
								if ((_12925_end._field_id != static_cast<jule::U64>(3LLU)) || (_12925_end._field_kind != jule::Str(")", 1))) {
									_1b4aeddce_push_err(&(*_self_), _12721_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								}
								_1b0d844ed_and_part=_1b0d844ed_and_part.slice(1LL,(_1b0d844ed_and_part.len() - 1LL));
							}
							_12021_and=_12021_and && _1aad80257_eval_directive_part(&(*_self_), _1b0d844ed_and_part);
						}
						_iter_next_1b0d8471d:;
						++it;
						goto _iter_begin_1b0d8471d;
					}
					_iter_end_1b0d8471d:;
				}
				_11217_result=_11217_result || _12021_and;
			}
			_iter_next_1b0d83079:;
			++it;
			goto _iter_begin_1b0d83079;
		}
		_iter_end_1b0d83079:;
	}
	return _11217_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1aad97e40_DirectiveEval _Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e6bde1ac_JuleImporter> static__1e6be0c19_new(_1b4ae5da4_CompileInfo _5823_info) {
	jule::Ptr<_1e6bde1ac_JuleImporter> _5917_imp = jule::new_ptr<_1e6bde1ac_JuleImporter>(_1e6bde1ac_JuleImporter(jule::Slice<jule::Str>({_1a92b37be_PATH_STDLIB}),jule::Str(),jule::Slice<jule::Ptr<_1ad3736b0_ImportInfo>>(),jule::Slice<jule::Str>()));
	_1b4ae6844_init_vars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1ad3736b0_ImportInfo>> _1e6be40c4_all_packages(_1e6bde1ac_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1e6be611a_set_mod_path(_1e6bde1ac_JuleImporter* _self_,jule::Str _7535_path) {
	(*_self_)._field_mod=_7535_path;
}



inline jule::Str _1e6c01961_get_mod_path(_1e6bde1ac_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1e6c07d74_mod_by_id(_1e6bde1ac_JuleImporter* _self_,jule::I64 _8328_id) {
	return (*_self_)._field_mods[_8328_id];
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1e6c36a40_get_import(_1e6bde1ac_JuleImporter* _self_,jule::Str _8733_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1b0d8cc43:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b0d8d062_p = *it;
			{
				if (_1b0d8d062_p.get()._field_path == _8733_path) {
					return _1b0d8d062_p;
				}
			}
			_iter_next_1b0d8cc43:;
			++it;
			goto _iter_begin_1b0d8cc43;
		}
		_iter_end_1b0d8cc43:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1aae013a5_Ast>>,jule::Slice<_1a92a31c6_Log>> _1e6c3b935_import_package(_1e6bde1ac_JuleImporter* _self_,jule::Str _9637_path,jule::Bool _9648_update_mod) {
	jule::Slice<jule::Ptr<_1e7acc7c5_DirEntry>> _9717_dirents = ({
		auto except = static__1a90c955d_read(_9637_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_1a92a31c6_Log>({_1e6bdb286_flat_compiler_err(jule::Str("connot read package directory: ", 31) + _9637_path)}));
			return std::make_tuple(nullptr,jule::Slice<_1a92a31c6_Log>({_1e6bdb286_flat_compiler_err(jule::Str("connot read package directory: ", 31) + _9637_path)}));
		} jule::Slice<jule::Ptr<_1e7acc7c5_DirEntry>>();});
	});
	if (_9648_update_mod) {
		jule::Str _10217_new_mod = _1b4b06e4d_find_module_file_deep(_9637_path);
		if (_10217_new_mod != (*_self_)._field_mod) {
			(*_self_)._field_mod=_10217_new_mod;
			jule::Slice<_1a92a31c6_Log> _10525_errs = _1b4b0826d_check_module_file((*_self_)._field_mod);
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			}
		}
	}
	jule::Slice<jule::Ptr<_1aae013a5_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1aae013a5_Ast>>::alloc(0LL,static_cast<jule::I64>(_9717_dirents.len()));
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1b0d93452:;
		if (it != expr.end()) {
			jule::Ptr<_1e7acc7c5_DirEntry> _1b0d935d9_dirent = *it;
			{
				if (_1e7ad206b_is_dir(_1b0d935d9_dirent.get()._field_stat.ptr()) || (!(_1a9092823_has_suffix(_1b0d935d9_dirent.get()._field_name,jule::Str(".jule", 5))))) {
					goto _iter_next_1b0d93452;
				}
				jule::Str _11917__path = _1a90c5d40_join(jule::Slice<jule::Str>({_9637_path,_1b0d935d9_dirent.get()._field_name}));
				jule::Ptr<_1ab00b67a_File> _12021_file = _1ab00d01c_new_file_set(_11917__path);
				_1ab00be1c_fill(_12021_file.ptr(), _1e6bda1ca_read_buff(_12021_file.get()._field_path));
				jule::Slice<_1a92a31c6_Log> _12221_errors = _1ab01a865_lex(_12021_file,static_cast<jule::I64>(0LL));
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				}
				jule::Ptr<_1ab5554ba_FileInfo> _12721_finfo = _1ab55590a_parse_file(_12021_file);
				if ((_12721_finfo.get()._field_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_errors);
				}
				if ((!(_1b4ae4c3d_is_pass_file_annotation(_1b0d935d9_dirent.get()._field_name)))) {
					goto _iter_next_1b0d93452;
				}
				jule::Bool _13718_r;
				jule::Slice<_1a92a31c6_Log> _13725_logs;
				std::tie(_13718_r,_13725_logs) = _1e6cc996d_is_pass_build_directives(&(*_self_), _12721_finfo.get()._field_ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				}
				if ((!(_13718_r))) {
					goto _iter_next_1b0d93452;
				}
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_ast);
			}
			_iter_next_1b0d93452:;
			++it;
			goto _iter_begin_1b0d93452;
		}
		_iter_end_1b0d93452:;
	}
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1e6c9772c_imported(_1e6bde1ac_JuleImporter* _self_,jule::Ptr<_1ad3736b0_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1b0d9ab74:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b0d9ae93_p = *it;
			{
				if ((_1b0d9ae93_p.get()._field_cpp_linked == _15335_imp.get()._field_cpp_linked) && (_1b0d9ae93_p.get()._field_link_path == _15335_imp.get()._field_link_path)) {
					return;
				}
			}
			_iter_next_1b0d9ab74:;
			++it;
			goto _iter_begin_1b0d9ab74;
		}
		_iter_end_1b0d9ab74:;
	}
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1b0d9c1d6:;
			if (it != expr.end()) {
				jule::I64 _1b0d9c417_i = it - expr.begin();
				jule::Str _1b0d9c538_mod = *it;
				{
					if ((*_self_)._field_mod == _1b0d9c538_mod) {
						_15335_imp.get()._field_mod_id=_1b0d9c417_i;
						goto _julec_label_setted;
					}
				}
				_iter_next_1b0d9c1d6:;
				++it;
				_1b0d9c417_i++;
				goto _iter_begin_1b0d9c1d6;
			}
			_iter_end_1b0d9c1d6:;
		}
		_15335_imp.get()._field_mod_id=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);
		_julec_label_setted:;
	}
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);
}



inline std::tuple<jule::Bool,jule::Slice<_1a92a31c6_Log>> _1e6cc996d_is_pass_build_directives(_1e6bde1ac_JuleImporter* _self_,jule::Ptr<_1aae013a5_Ast>& _17948_file) {
	{
		auto &expr = _17948_file.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1b0da089e:;
		if (it != expr.end()) {
			jule::Ptr<_1aaeaeb7d_Directive> _1b0da09c0_td = *it;
			{
				if ((_1b0da09c0_td.get()._field_tag._field_kind != jule::Str("build", 5))) {
					goto _iter_next_1b0da089e;
				}
				_1aad97e40_DirectiveEval _18421_de = _1aad97e40_DirectiveEval(jule::Slice<_1a92a31c6_Log>(),_1b0da09c0_td,(*_self_)._field_vars);
				jule::Bool _18817_result = _1b4b049d9_eval(&_18421_de);
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				}
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				}
			}
			_iter_next_1b0da089e:;
			++it;
			goto _iter_begin_1b0da089e;
		}
		_iter_end_1b0da089e:;
	}
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e6bde1ac_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e6c44d4a_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1abcbc02d_is_common_ordered_0(jule::Slice<jule::Ptr<_1ac661075_Struct>>& _1737_s,jule::Ptr<_1ac661075_Struct> _1746_t) {
	jule::Ptr<_1ac661075_Struct>* _1817_p = (&(_1746_t.get()._field_depends[0LL]));
	jule::Ptr<_1ac661075_Struct>* _1913_end = _1817_p + static_cast<jule::I64>(static_cast<jule::I64>(_1746_t.get()._field_depends.len()));
	{
		auto &expr = _1737_s;
		auto it = expr.begin();
		_iter_begin_1ae9d7ad1:;
		if (it != expr.end()) {
			jule::Ptr<_1ac661075_Struct> &_1ae9d7c8a_tt = *it;
			{
				{
					if (_1ae9d7c8a_tt == _1746_t) {
						goto _iter_end_1ae9d7ad1;
					}
					if (((*(_1817_p)).get()._field_cpp_linked || ((*(_1817_p)).get()._field_depends.len() == 0LL)) || (_1ae9d7c8a_tt == (*(_1817_p)))) {
						(_1817_p)++;
						if (_1817_p == _1913_end) {
							return true;
						}
					}
				}
			}
			_iter_next_1ae9d7ad1:;
			++it;
			goto _iter_begin_1ae9d7ad1;
		}
		_iter_end_1ae9d7ad1:;
	}
	return false;
}



inline void static__1abc641a1_order_common_0(jule::Slice<jule::Ptr<_1ac661075_Struct>>& _3840_s) {
	jule::I64 _3917_i = 0LL;
	{
		auto &expr = _3840_s;
		auto it = expr.begin();
		_iter_begin_1ae9d1e4e:;
		if (it != expr.end()) {
			jule::I64 _1ae9d1ee8_j = it - expr.begin();
			jule::Ptr<_1ac661075_Struct> _1ae9d226d_t = *it;
			{
				if (_1ae9d226d_t.get()._field_cpp_linked || (_1ae9d226d_t.get()._field_depends.len() == 0LL)) {
					_3840_s.swap(_3917_i,_1ae9d1ee8_j);
					(_3917_i)++;
				}
			}
			_iter_next_1ae9d1e4e:;
			++it;
			_1ae9d1ee8_j++;
			goto _iter_begin_1ae9d1e4e;
		}
		_iter_end_1ae9d1e4e:;
	}
	jule::I64 _4717_j = _3917_i;
	for (; _4717_j < static_cast<jule::I64>(static_cast<jule::I64>(_3840_s.len())); (_4717_j)++) {
		{
			jule::I64 _4921_k = _3917_i;
			for (; _4921_k < static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_3840_s.len())) - 1LL))); (_4921_k)++) {
				{
					if ((!(static__1abcbc02d_is_common_ordered_0(_3840_s,_3840_s[_4921_k])))) {
						_3840_s.swap(_4921_k,static_cast<jule::I64>((_4921_k + 1LL)));
					}
				}
			_iter_next_1ae9d40c7:;
			}
			_iter_end_1ae9d40c7:;
		}
	_iter_next_1ae9d17de:;
	}
	_iter_end_1ae9d17de:;
}



inline void static__1abc6c2ec_order_structures(jule::Slice<jule::Ptr<_1ac661075_Struct>>& _6041_structs) {
	static__1abc641a1_order_common_0(_6041_structs);
}







std::ostream &operator<<(std::ostream &_Stream, _1e6c2a704_DefineOrderer _Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _1abec5005_optimize_child(jule::Ptr<_1abb20799_ScopeDeadCode> _self_,jule::Ptr<_1ad33ce0a_Scope>& _2739_s) {
	jule::Ptr<_1abb20799_ScopeDeadCode> _2817_sdc = jule::new_ptr<_1abb20799_ScopeDeadCode>(_1abb20799_ScopeDeadCode(_self_,_2739_s,(&(_2739_s.get()._field_stmts)),jule::I64()));
	{
		_1ac0099da_optimize_stmts(_2817_sdc);
	}
}



inline void _1abed34ec_eliminate_followed(_1abb20799_ScopeDeadCode* _self_) {
	(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	jule::Ptr<_1abb20799_ScopeDeadCode> _3817_parent = (*_self_)._field_parent;
	while ((_3817_parent != nullptr)) {
		{
			(*(_3817_parent.get()._field_stmts))=(*(_3817_parent.get()._field_stmts)).slice(0LL,(_3817_parent.get()._field_i + 1LL));
			_3817_parent=_3817_parent.get()._field_parent;
		}
	_iter_next_1ae9edeb0:;
	}
	_iter_end_1ae9edeb0:;
}



inline void _1ac0015e7_optimize_stmt(jule::Ptr<_1abb20799_ScopeDeadCode> _self_,jule::Any _4544_st) {
	{
		auto &_match_expr{ _4544_st };
		
		if (_match_expr.type_is<jule::Ptr<_1ad33ce0a_Scope>>()) {
			_case_begin_1aea018ca:;
			{
				jule::Ptr<_1ad33ce0a_Scope> _4821_scope = _4544_st.operator jule::Ptr<_1ad33ce0a_Scope>();
				if (_4821_scope.get()._field_deferred) {
					_1abe47890_eliminate_dead_code_of_scope(_4821_scope);
				} else {
					_1abec5005_optimize_child(_self_, _4821_scope);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad3e6975_Data>>()) {
			_case_begin_1aea01941:;
			{
				{
					auto &_match_expr{ _4544_st.operator jule::Ptr<_1ad3e6975_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ac671816_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac67020a_BuiltinPanicCallExprModel>>()) {
						_case_begin_1aea038bb:;
						{
							_1abed34ec_eliminate_followed(_self_.ptr());
						}
					}
					_match_end_1aea03833:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad3580bd_RetSt>>()) {
			_case_begin_1aea019a7:;
			{
				_1abed34ec_eliminate_followed(_self_.ptr());
			}
		}
		_match_end_1aea01831:;
	}
}



inline void _1ac0099da_optimize_stmts(jule::Ptr<_1abb20799_ScopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; _self_.get()._field_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_stmts->len())); (_self_.get()._field_i)++) {
		{
			_1ac0015e7_optimize_stmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1aea04867:;
	}
	_iter_end_1aea04867:;
}







std::ostream &operator<<(std::ostream &_Stream, _1abb20799_ScopeDeadCode _Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void static__1ac02a2be_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1ac030ba9_print(jule::Str _2025_escape,jule::Str _2038_text) {
	jule::out(_2025_escape);
	jule::out(_2038_text);
	static__1ac02a2be_reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1abb38c02_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1ac03a4ee_log_flat(_1a92a31c6_Log& _1429_l) {
	jule::outln(_1429_l._field_text);
}



inline void static__1ac045949_log_error(_1a92a31c6_Log& _1930_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1930_l._field_text);
	static__1ac02a2be_reset();
	if ((_1930_l._field_path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1930_l._field_path);
	}
	if ((_1930_l._field_row != 0LL) && (_1930_l._field_column != 0LL)) {
		jule::out(jule::Str(":", 1));
		jule::out(_1ad258364_itoa(_1930_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1ad258364_itoa(_1930_l._field_column));
	}
	if ((_1930_l._field_line.len() != 0LL)) {
		jule::Str _3621_line = _1a90c2930_trim_left(_1930_l._field_line,jule::Str("\r\n\v\b ", 5));
		jule::I64 _3721_offset = ((_1930_l._field_line.len() - static_cast<jule::I64>(static_cast<jule::I64>(_3621_line.len()))) + 1LL);
		jule::I64 _3821_old_len = _3621_line.len();
		_3621_line=_1a90c2930_trim_left(_3621_line,jule::Str("\t", 1));
		if (_3821_old_len != static_cast<jule::I64>(static_cast<jule::I64>(_3621_line.len()))) {
			_3721_offset+=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_3821_old_len - static_cast<jule::I64>(static_cast<jule::I64>(_3621_line.len()))))) << 3LLU);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1ad258364_itoa(_1930_l._field_row);
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1a902da23_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1a902da23_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_1930_l._field_column - _3721_offset)));
		jule::out(jule::Str("^", 1));
		if ((_1930_l._field_suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1a902da23_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1ac030ba9_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1930_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



inline void static__1ac065507_log(_1a92a31c6_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1b0e95015:;
			{
				static__1ac03a4ee_log_flat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1b0ea0927:;
			{
				static__1ac045949_log_error(_6524_l);
			}
		}
		_match_end_1b0ea085b:;
	}
}



inline void static__1ac067d67_print_logs(jule::Slice<_1a92a31c6_Log>& _7531_logs) {
	{
		auto &expr = _7531_logs;
		auto it = expr.begin();
		_iter_begin_1b0ea1dce:;
		if (it != expr.end()) {
			_1a92a31c6_Log &_1b0ea1e9a_l = *it;
			{
				static__1ac065507_log(_1b0ea1e9a_l);
			}
			_iter_next_1b0ea1dce:;
			++it;
			goto _iter_begin_1b0ea1dce;
		}
		_iter_end_1b0ea1dce:;
	}
	jule::out(jule::Str("=== ", 4));
	jule::out(_1ad258364_itoa(static_cast<jule::I64>(_7531_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1abb47b78_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ada69a65_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ada69d2e_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ada6a192_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ada6ab65_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ada6c1b6_ScopeOptimizer> static__1ada6c6d3_new(jule::Ptr<_1ad33ce0a_Scope> _4527_scope) {
	return jule::new_ptr<_1ada6c1b6_ScopeOptimizer>(_1ada6c1b6_ScopeOptimizer(jule::I64(),_4527_scope));
}



inline void _1ada6ca02_set_current_stmt(_1ada6c1b6_ScopeOptimizer* _self_,jule::Any _5139_stmt) {
	(*_self_)._field_scope.get()._field_stmts[(*_self_)._field_i]=_5139_stmt;
}



inline void _1ada6cd21_optimize_data(_1ada6c1b6_ScopeOptimizer* _self_,jule::Ptr<_1ad3e6975_Data> _5536_d) {
	{
		auto &_match_expr{ _5536_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac66904a_FnCallExprModel>>()) {
			_case_begin_1b0eb1e77:;
			{
				jule::Ptr<_1ac66904a_FnCallExprModel> _5821_m = _5536_d.get()._field_model.operator jule::Ptr<_1ac66904a_FnCallExprModel>();
				if (_1e6ae3d5e_PRODUCTION) {
					if ((!(_1ac67b17d_is_builtin(_5821_m.get()._field_func.ptr()))) && _1ada71264_is_std_package(_5821_m.get()._field_func.get()._field_decl.get()._field_token._field_file.get()._field_path,jule::Str("debug", 5))) {
						_1ada6ca02_set_current_stmt(&(*_self_), jule::Any(nullptr));
						return;
					}
				}
			}
		}
		_match_end_1b0eb1e22:;
	}
	static__1ada73d05_optimize(_5536_d.get()._field_model);
}



inline void _1ada6d140_optimize_var(_1ada6c1b6_ScopeOptimizer* _self_,jule::Ptr<_1ad39e037_Var> _7035_v) {
	if ((_7035_v.get()._field_value != nullptr)) {
		static__1ada73d05_optimize(_7035_v.get()._field_value.get()._field_data.get()._field_model);
	}
}



inline void _1ada6d45e_optimize_conditional(_1ada6c1b6_ScopeOptimizer* _self_,jule::Ptr<_1ad355dac_Conditional> _7643_c) {
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1b0eb6894:;
		if (it != expr.end()) {
			jule::Ptr<_1ad35596c_If> _1b0eb69b5_elif = *it;
			{
				static__1ada73d05_optimize(_1b0eb69b5_elif.get()._field_expr);
				_1ada70a7c_optimize_child(&(*_self_), _1b0eb69b5_elif.get()._field_scope);
			}
			_iter_next_1b0eb6894:;
			++it;
			goto _iter_begin_1b0eb6894;
		}
		_iter_end_1b0eb6894:;
	}
	if ((_7643_c.get()._field_default != nullptr)) {
		_1ada70a7c_optimize_child(&(*_self_), _7643_c.get()._field_default.get()._field_scope);
	}
	if ((!(_1e6ae490e_OPT_COND))) {
		return;
	}
	jule::Bool _8917_const_case = false;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1b0eb907d:;
		if (it != expr.end()) {
			jule::I64 _1b0eb91c1_i = it - expr.begin();
			jule::Ptr<_1ad35596c_If> _1b0eb9369_elif = *it;
			{
				if ((!(_1ada7162c_is_constant_valid_conditional_case(_1b0eb9369_elif)))) {
					goto _iter_next_1b0eb907d;
				}
				_8917_const_case=true;
				_7643_c.get()._field_elifs=_7643_c.get()._field_elifs.slice(0LL,_1b0eb91c1_i);
				_7643_c.get()._field_default=jule::new_ptr<_1ad355b8c_Else>(_1ad355b8c_Else(_1b0eb9369_elif.get()._field_scope));
				goto _iter_end_1b0eb907d;
			}
			_iter_next_1b0eb907d:;
			++it;
			_1b0eb91c1_i++;
			goto _iter_begin_1b0eb907d;
		}
		_iter_end_1b0eb907d:;
	}
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;
	}
	jule::Ptr<_1ad35596c_If>* _10917_i = (&(_7643_c.get()._field_elifs[0LL]));
	jule::Ptr<_1ad35596c_If>* _11013_end = (&(_7643_c.get()._field_elifs[(_7643_c.get()._field_elifs.len() - 1LL)]));
	for (; _10917_i <= _11013_end; (_10917_i)++) {
		{
			{
				if (_1ada720de_is_unreachable_conditional_case((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				}
			}
		}
	_iter_next_1b0eb65db:;
	}
	_iter_end_1b0eb65db:;
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;
	}
	if ((!(_8917_const_case))) {
		return;
	}
	jule::I64 _12817_only = -1LL;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1b0ebe0c7:;
		if (it != expr.end()) {
			jule::I64 _1b0ebe209_j = it - expr.begin();
			jule::Ptr<_1ad35596c_If> _1b0ebe3b3_elif = *it;
			{
				if ((_1b0ebe3b3_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;
					}
					_12817_only=_1b0ebe209_j;
				}
			}
			_iter_next_1b0ebe0c7:;
			++it;
			_1b0ebe209_j++;
			goto _iter_begin_1b0ebe0c7;
		}
		_iter_end_1b0ebe0c7:;
	}
	if ((_12817_only != -1LL)) {
		_1ada6ca02_set_current_stmt(&(*_self_), jule::Any(_7643_c.get()._field_elifs[_12817_only].get()._field_scope));
	}
}



inline void _1ada6d77d_optimize_match(_1ada6c1b6_ScopeOptimizer* _self_,jule::Ptr<_1ad35772c_Match> _14537_m) {
	{
		auto &expr = _14537_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1b0ec1717:;
		if (it != expr.end()) {
			jule::Ptr<_1ad357b7d_Case> _1b0ec1838_case = *it;
			{
				{
					auto &expr = _1b0ec1838_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1b0ec1edc:;
					if (it != expr.end()) {
						jule::Ptr<_1ad3e6975_Data> _1b0ec2075_expr = *it;
						{
							static__1ada73d05_optimize(_1b0ec2075_expr.get()._field_model);
						}
						_iter_next_1b0ec1edc:;
						++it;
						goto _iter_begin_1b0ec1edc;
					}
					_iter_end_1b0ec1edc:;
				}
				_1ada70a7c_optimize_child(&(*_self_), _1b0ec1838_case.get()._field_scope);
			}
			_iter_next_1b0ec1717:;
			++it;
			goto _iter_begin_1b0ec1717;
		}
		_iter_end_1b0ec1717:;
	}
	if ((_14537_m.get()._field_default != nullptr)) {
		_1ada70a7c_optimize_child(&(*_self_), _14537_m.get()._field_default.get()._field_scope);
	}
	if ((!(_1e6ae490e_OPT_COND))) {
		return;
	}
	jule::Bool _16017_const_case = false;
	{
		auto &expr = _14537_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1b0ec3e89:;
		if (it != expr.end()) {
			jule::I64 _1b0ec40cc_i = it - expr.begin();
			jule::Ptr<_1ad357b7d_Case> _1b0ec4275_case = *it;
			{
				if ((!(_1ada71c9d_is_constant_valid_match_case(_1b0ec4275_case)))) {
					goto _iter_next_1b0ec3e89;
				}
				_16017_const_case=true;
				_14537_m.get()._field_cases=_14537_m.get()._field_cases.slice(0LL,_1b0ec40cc_i);
				_1b0ec4275_case.get()._field_exprs=nullptr;
				_14537_m.get()._field_default=_1b0ec4275_case;
				goto _iter_end_1b0ec3e89;
			}
			_iter_next_1b0ec3e89:;
			++it;
			_1b0ec40cc_i++;
			goto _iter_begin_1b0ec3e89;
		}
		_iter_end_1b0ec3e89:;
	}
	if ((_14537_m.get()._field_cases.len() == 0LL)) {
		return;
	}
	jule::Ptr<_1ad357b7d_Case>* _17917_i = (&(_14537_m.get()._field_cases[0LL]));
	jule::Ptr<_1ad357b7d_Case>* _18013_end = (&(_14537_m.get()._field_cases[(_14537_m.get()._field_cases.len() - 1LL)]));
	for (; _17917_i <= _18013_end; (_17917_i)++) {
		{
			{
				if (_1ada72430_is_unreachable_match_case((*(_17917_i)))) {
					(*(_17917_i))=nullptr;
				}
			}
		}
	_iter_next_1b0ec145e:;
	}
	_iter_end_1b0ec145e:;
	if ((!(_16017_const_case))) {
		return;
	}
	jule::I64 _19417_only = -1LL;
	{
		auto &expr = _14537_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1b0ec880c:;
		if (it != expr.end()) {
			jule::I64 _1b0ec893e_j = it - expr.begin();
			jule::Ptr<_1ad357b7d_Case> _1b0ec8ae8_case = *it;
			{
				if ((_1b0ec8ae8_case != nullptr)) {
					if ((_19417_only != -1LL)) {
						return;
					}
					_19417_only=_1b0ec893e_j;
				}
			}
			_iter_next_1b0ec880c:;
			++it;
			_1b0ec893e_j++;
			goto _iter_begin_1b0ec880c;
		}
		_iter_end_1b0ec880c:;
	}
	if ((_19417_only != -1LL)) {
		_1ada6ca02_set_current_stmt(&(*_self_), jule::Any(_14537_m.get()._field_cases[_19417_only].get()._field_scope));
	}
}



inline void _1ada6da9c_optimize_range_iter(_1ada6c1b6_ScopeOptimizer* _self_,jule::Ptr<_1ad35651c_RangeIter> _21142_it) {
	static__1ada73d05_optimize(_21142_it.get()._field_expr.get()._field_model);
	_1ada70a7c_optimize_child(&(*_self_), _21142_it.get()._field_scope);
}



inline void _1ada6ddbb_optimize_while_iter(_1ada6c1b6_ScopeOptimizer* _self_,jule::Ptr<_1ad3562ec_WhileIter> _21642_it) {
	static__1ada73d05_optimize(_21642_it.get()._field_expr);
	_1ada7075d_optimize_stmt(&(*_self_), _21642_it.get()._field_next);
	_1ada70a7c_optimize_child(&(*_self_), _21642_it.get()._field_scope);
}



inline jule::Bool _1ada6e273_substr(_1ada6c1b6_ScopeOptimizer* _self_,jule::Ptr<_1ad3572dc_Assign> _22229_a) {
	{
		auto &_match_expr{ _22229_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac66b04c_SlicingExprModel>>()) {
			_case_begin_1b0ece56b:;
			{
				jule::Ptr<_1ac66b04c_SlicingExprModel> _22521_sem = _22229_a.get()._field_r.get()._field_model.operator jule::Ptr<_1ac66b04c_SlicingExprModel>();
				if (_22521_sem.get()._field_expr == _22229_a.get()._field_l.get()._field_model) {
					_1ada6ca02_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1ada6a67b_MutSlicingExprModel>(_1ada6a67b_MutSlicingExprModel(_22521_sem.get()._field_token,_22521_sem.get()._field_expr,_22521_sem.get()._field_left,_22521_sem.get()._field_right))));
					return true;
				}
			}
		}
		_match_end_1b0ece516:;
	}
	return false;
}



inline jule::Bool _1ada6e62a_str_insert(_1ada6c1b6_ScopeOptimizer* _self_,jule::Ptr<_1ad3572dc_Assign> _23933_a) {
	{
		auto &_match_expr{ _23933_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac666c07_BinopExprModel>>()) {
			_case_begin_1b0ed23c6:;
			{
				jule::Ptr<_1ac666c07_BinopExprModel> _24221_m = _23933_a.get()._field_r.get()._field_model.operator jule::Ptr<_1ac666c07_BinopExprModel>();
				if (_24221_m.get()._field_right.get()._field_model == _23933_a.get()._field_l.get()._field_model) {
					_1ada6ca02_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1ada6ab65_StrInsertBeginExprModel>(_1ada6ab65_StrInsertBeginExprModel(_23933_a.get()._field_l.get()._field_model,_24221_m.get()._field_left.get()._field_model))));
					return true;
				}
			}
		}
		_match_end_1b0ed2371:;
	}
	return false;
}



inline jule::Bool _1ada6e9d2_str_assign(_1ada6c1b6_ScopeOptimizer* _self_,jule::Ptr<_1ad3572dc_Assign> _25433_a) {
	if ((_25433_a.get()._field_op._field_kind != jule::Str("=", 1))) {
		return false;
	}
	jule::Ptr<_1ad42ec99_Prim> _25813_lp = _1ad42bec7_prim(_25433_a.get()._field_l.get()._field_kind.ptr());
	if ((_25813_lp == nullptr) || (!(_1ad4334c8_is_str(_25813_lp.ptr())))) {
		return false;
	}
	{
		
		if (_1ada6e273_substr(&(*_self_), _25433_a) || _1ada6e62a_str_insert(&(*_self_), _25433_a)) {
			_case_begin_1b0ed68a3:;
			{
				return true;
			}
		}
		_match_end_1b0ed684d:;
	}
	return false;
}



inline void _1ada6ed01_optimize_assign(_1ada6c1b6_ScopeOptimizer* _self_,jule::Ptr<_1ad3572dc_Assign> _27038_assign) {
	if (_1e6ae3e80_OPT_COPY && _1ada6e9d2_str_assign(&(*_self_), _27038_assign)) {
		return;
	}
	static__1ada73d05_optimize(_27038_assign.get()._field_l.get()._field_model);
	static__1ada73d05_optimize(_27038_assign.get()._field_r.get()._field_model);
	{
		auto &_match_expr{ _27038_assign.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1b0ed8300:;
			{
				if (_1e6ae436a_OPT_MATH && (_1ad42d4b2_strct(_27038_assign.get()._field_l.get()._field_kind.ptr()) == nullptr)) {
					_27038_assign.get()._field_op._field_kind=_27038_assign.get()._field_op._field_kind.slice(0LL,(_27038_assign.get()._field_op._field_kind.len() - 1LL));
					jule::Any _28325_model = jule::Any(jule::new_ptr<_1ac666c07_BinopExprModel>(_1ac666c07_BinopExprModel(_27038_assign.get()._field_l,_27038_assign.get()._field_r,_27038_assign.get()._field_op)));
					static__1ada73d05_optimize(_28325_model);
					{
						auto &_match_expr{ _28325_model };
						
						if (_match_expr.type_is<jule::Ptr<_1ac666c07_BinopExprModel>>()) {
							_case_begin_1b0edc03a:;
							{
								_27038_assign.get()._field_r=jule::new_ptr<_1ac666663_OperandExprModel>((*(_27038_assign.get()._field_r)));
								_27038_assign.get()._field_op._field_kind=jule::Str("=", 1);
								_27038_assign.get()._field_r.get()._field_model=_28325_model;
								return;
							}
						}
						_match_end_1b0edbed5:;
					}
					_27038_assign.get()._field_op._field_kind+=jule::Str("=", 1);
					return;
				}
			}
		}
		_match_end_1b0ed95ba:;
	}
	if (_1e6ae4249_OPT_APPEND) {
		{
			auto &_match_expr{ _27038_assign.get()._field_r.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1ac67134e_BuiltinAppendCallExprModel>>()) {
				_case_begin_1b0ede070:;
				{
					jule::Ptr<_1ac67134e_BuiltinAppendCallExprModel> _30425_m = _27038_assign.get()._field_r.get()._field_model.operator jule::Ptr<_1ac67134e_BuiltinAppendCallExprModel>();
					{
						auto &_match_expr{ _30425_m.get()._field_elements };
						
						if (_match_expr.type_is<jule::Ptr<_1ac66949b_SliceExprModel>>()) {
							_case_begin_1b0ee013c:;
							{
								{
									auto &_match_expr{ _30425_m.get()._field_dest };
									
									if (_match_expr.type_is<jule::Ptr<_1ad39e037_Var>>() || _match_expr.type_is<jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>>()) {
										_case_begin_1b0ee0945:;
										{
											_1ada6ca02_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1ada6a192_PushToSliceExprModel>(_1ada6a192_PushToSliceExprModel(_30425_m.get()._field_dest,_30425_m.get()._field_elements.operator jule::Ptr<_1ac66949b_SliceExprModel>()))));
										}
									}
									_match_end_1b0ee08ac:;
								}
							}
						}
						_match_end_1b0ee00a4:;
					}
				}
			}
			_match_end_1b0ede009:;
		}
	}
}



inline void _1ada70120_optimize_multi_assign(_1ada6c1b6_ScopeOptimizer* _self_,jule::Ptr<_1ad35750c_MultiAssign> _32044_assign) {
	{
		auto &expr = _32044_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1b0ee0eb7:;
		if (it != expr.end()) {
			jule::I64 _1b0ee103e_i = it - expr.begin();
			jule::Any _1b0ee1eda_l = *it;
			{
				static__1ada73d05_optimize(_1b0ee1eda_l);
				_32044_assign.get()._field_l[_1b0ee103e_i]=_1b0ee1eda_l;
			}
			_iter_next_1b0ee0eb7:;
			++it;
			_1b0ee103e_i++;
			goto _iter_begin_1b0ee0eb7;
		}
		_iter_end_1b0ee0eb7:;
	}
	static__1ada73d05_optimize(_32044_assign.get()._field_r);
}



inline void _1ada7043e_optimize_ret(_1ada6c1b6_ScopeOptimizer* _self_,jule::Ptr<_1ad3580bd_RetSt> _32835_r) {
	static__1ada73d05_optimize(_32835_r.get()._field_expr);
}



inline void _1ada7075d_optimize_stmt(_1ada6c1b6_ScopeOptimizer* _self_,jule::Any _33236_stmt) {
	{
		auto &_match_expr{ _33236_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1ad33ce0a_Scope>>()) {
			_case_begin_1b0ee3ea9:;
			{
				_1ada70a7c_optimize_child(&(*_self_), _33236_stmt.operator jule::Ptr<_1ad33ce0a_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad3e6975_Data>>()) {
			_case_begin_1b0ee4020:;
			{
				_1ada6cd21_optimize_data(&(*_self_), _33236_stmt.operator jule::Ptr<_1ad3e6975_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad39e037_Var>>()) {
			_case_begin_1b0ee4097:;
			{
				_1ada6d140_optimize_var(&(*_self_), _33236_stmt.operator jule::Ptr<_1ad39e037_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad355dac_Conditional>>()) {
			_case_begin_1b0ee410d:;
			{
				_1ada6d45e_optimize_conditional(&(*_self_), _33236_stmt.operator jule::Ptr<_1ad355dac_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad35651c_RangeIter>>()) {
			_case_begin_1b0ee4174:;
			{
				_1ada6da9c_optimize_range_iter(&(*_self_), _33236_stmt.operator jule::Ptr<_1ad35651c_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad3562ec_WhileIter>>()) {
			_case_begin_1b0ee41da:;
			{
				_1ada6ddbb_optimize_while_iter(&(*_self_), _33236_stmt.operator jule::Ptr<_1ad3562ec_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad3560cc_InfIter>>()) {
			_case_begin_1b0ee4251:;
			{
				_1ada70a7c_optimize_child(&(*_self_), _33236_stmt.operator jule::Ptr<_1ad3560cc_InfIter>().get()._field_scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad3572dc_Assign>>()) {
			_case_begin_1b0ee42c8:;
			{
				_1ada6ed01_optimize_assign(&(*_self_), _33236_stmt.operator jule::Ptr<_1ad3572dc_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad35750c_MultiAssign>>()) {
			_case_begin_1b0ee4350:;
			{
				_1ada70120_optimize_multi_assign(&(*_self_), _33236_stmt.operator jule::Ptr<_1ad35750c_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad35772c_Match>>()) {
			_case_begin_1b0ee43c7:;
			{
				_1ada6d77d_optimize_match(&(*_self_), _33236_stmt.operator jule::Ptr<_1ad35772c_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad3580bd_RetSt>>()) {
			_case_begin_1b0ee444e:;
			{
				_1ada7043e_optimize_ret(&(*_self_), _33236_stmt.operator jule::Ptr<_1ad3580bd_RetSt>());
			}
		}
		_match_end_1b0ee3d77:;
	}
}



inline void _1ada70a7c_optimize_child(_1ada6c1b6_ScopeOptimizer* _self_,jule::Ptr<_1ad33ce0a_Scope> _35937_child) {
	jule::Ptr<_1ada6c1b6_ScopeOptimizer> _36017_so = static__1ada6c6d3_new(_35937_child);
	_1ada70cbe_optimize(_36017_so.ptr());
}



inline void _1ada70cbe_optimize(_1ada6c1b6_ScopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1b0eec006:;
		if (it != expr.end()) {
			jule::I64 _1b0eec08e_i = it - expr.begin();
			jule::Any _1b0eec29d_stmt = *it;
			{
				(*_self_)._field_i=_1b0eec08e_i;
				_1ada7075d_optimize_stmt(&(*_self_), _1b0eec29d_stmt);
			}
			_iter_next_1b0eec006:;
			++it;
			_1b0eec08e_i++;
			goto _iter_begin_1b0eec006;
		}
		_iter_end_1b0eec006:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1ada6c1b6_ScopeOptimizer _Src) {
	_Stream << "ScopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1ada73d05_optimize(jule::Any& _5433_model) {
	{
		
		if (_1e6ae47dd_OPT_PTR || _1e6ae436a_OPT_MATH || _1e6ae448b_OPT_ACCESS || _1e6ae490e_OPT_COND) {
			_case_begin_1b0eec710:;
			{
				jule::Ptr<_1ada73794_ExprOptimizer> _6121_exop = jule::new_ptr<_1ada73794_ExprOptimizer>(_1ada73794_ExprOptimizer(((jule::Ptr<jule::Any>)((&(_5433_model))))));
				_1ada7a7ce_do(_6121_exop.ptr());
			}
		}
		_match_end_1b0eec644:;
	}
}



inline jule::Bool _1ada741ac_str_cond(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac666c07_BinopExprModel> _6827_m) {
	jule::Ptr<_1ad42ec99_Prim> _6913_lp = _1ad42bec7_prim(_6827_m.get()._field_left.get()._field_kind.ptr());
	if ((_6913_lp == nullptr) || (!(_1ad4334c8_is_str(_6913_lp.ptr())))) {
		return false;
	}
	if ((_6827_m.get()._field_op._field_kind != jule::Str("==", 2)) && (_6827_m.get()._field_op._field_kind != jule::Str("!=", 2))) {
		return false;
	}
	{
		auto &_match_expr{ _6827_m.get()._field_left.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ad2c1d8e_Const>>()) {
			_case_begin_1b10026e3:;
			{
				std::tie(_6827_m.get()._field_left,_6827_m.get()._field_right) = std::make_tuple(_6827_m.get()._field_right,_6827_m.get()._field_left);
				goto _julec_label_opt;
			}
		}
		_match_end_1b10025d3:;
	}
	{
		auto &_match_expr{ _6827_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ad2c1d8e_Const>>()) {
			_case_begin_1b1001b21:;
			{
				goto _match_end_1b1003859;
			}
		}
		else {
			_case_begin_1b10038ae:;
			{
				return true;
			}
		}
		_match_end_1b1003859:;
	}
	_julec_label_opt:;
	jule::Ptr<_1ad2c1d8e_Const> _8813_c = _6827_m.get()._field_right.get()._field_model.operator jule::Ptr<_1ad2c1d8e_Const>();
	if ((!(_1ad2c39c8_read_str(_8813_c.ptr()).empty()))) {
		return false;
	}
	{
		auto &_match_expr{ _6827_m.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1b1004c67:;
			{
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1ac66d5d2_CommonSubIdentExprModel>(_1ac66d5d2_CommonSubIdentExprModel(_6827_m.get()._field_left.get()._field_kind,_6827_m.get()._field_left.get()._field_model,_1ab005531_Token(),jule::Str("empty()", 7))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1b10052c8:;
			{
				_1ab005531_Token _10021_op = _6827_m.get()._field_op;
				_10021_op._field_kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1ac667158_UnaryExprModel>(_1ac667158_UnaryExprModel(jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ac66d5d2_CommonSubIdentExprModel>(_1ac66d5d2_CommonSubIdentExprModel(_6827_m.get()._field_left.get()._field_kind,_6827_m.get()._field_left.get()._field_model,_1ab005531_Token(),jule::Str("empty()", 7))))),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>())),_10021_op)));
			}
		}
		_match_end_1b1005273:;
	}
	return true;
}



inline void _1ada744cb_binary(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac666c07_BinopExprModel> _11625_m) {
	static__1ada73d05_optimize(_11625_m.get()._field_left.get()._field_model);
	static__1ada73d05_optimize(_11625_m.get()._field_right.get()._field_model);
	{
		auto &_match_expr{ _11625_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ad2c1d8e_Const>>()) {
			_case_begin_1b1009222:;
			{
				goto _match_end_1b1009c17;
			}
		}
		else {
			_case_begin_1b1009c6c:;
			{
				return;
			}
		}
		_match_end_1b1009c17:;
	}
	if (_1e6ae490e_OPT_COND && _1ada741ac_str_cond(&(*_self_), _11625_m)) {
		return;
	}
	if ((!(_1e6ae436a_OPT_MATH))) {
		return;
	}
	{
		auto &_match_expr{ _11625_m.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b100b08c:;
			{
				jule::Bool _13618_ok;
				jule::U64 _13622_x;
				std::tie(_13618_ok,_13622_x) = _1ada7acb8_check_for_bit_shift_opt(_11625_m.get()._field_left,_11625_m.get()._field_right);
				if (_13618_ok) {
					_11625_m.get()._field_op._field_kind=jule::Str("<<", 2);
					jule::Ptr<_1ad2c1d8e_Const> _13925_c = _11625_m.get()._field_right.get()._field_model.operator jule::Ptr<_1ad2c1d8e_Const>();
					_1ad2c4c71_set_u64(_13925_c.ptr(), _13622_x);
					return;
				}
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1b100b103:;
			{
				jule::Bool _14418_ok;
				jule::U64 _14422_x;
				std::tie(_14418_ok,_14422_x) = _1ada7acb8_check_for_bit_shift_opt(_11625_m.get()._field_left,_11625_m.get()._field_right);
				if (_14418_ok) {
					_11625_m.get()._field_op._field_kind=jule::Str(">>", 2);
					jule::Ptr<_1ad2c1d8e_Const> _14725_c = _11625_m.get()._field_right.get()._field_model.operator jule::Ptr<_1ad2c1d8e_Const>();
					_1ad2c4c71_set_u64(_14725_c.ptr(), _14422_x);
					return;
				}
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b100b169:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _15221_c = _11625_m.get()._field_right.get()._field_model.operator jule::Ptr<_1ad2c1d8e_Const>();
				jule::F64 _15317_d = _1ad2c4633_as_f64(_15221_c.ptr());
				if ((_15317_d == 2LL)) {
					_11625_m.get()._field_op._field_kind=jule::Str("&", 1);
					_1ad2c4952_set_i64(_15221_c.ptr(), 1LL);
				}
			}
		}
		_match_end_1b100b037:;
	}
	(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1ada69a65_UnsafeBinopExprModel>(_1ada69a65_UnsafeBinopExprModel(_11625_m)));
}



inline void _1ada747ea_unary(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac667158_UnaryExprModel> _16424_m) {
	static__1ada73d05_optimize(_16424_m.get()._field_expr.get()._field_model);
	if (_1e6ae47dd_OPT_PTR && (_16424_m.get()._field_op._field_kind == jule::Str("*", 1))) {
		{
			auto &_match_expr{ _16424_m.get()._field_expr.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1ac667158_UnaryExprModel>>()) {
				_case_begin_1b1013ca9:;
				{
					jule::Ptr<_1ac667158_UnaryExprModel> _16925_um = _16424_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1ac667158_UnaryExprModel>();
					if ((_16925_um.get()._field_op._field_kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16925_um.get()._field_expr.get()._field_model;
					}
				}
			}
			_match_end_1b1013c43:;
		}
	}
}



inline void _1ada74b19_structure_lit(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac667a4e_StructLitExprModel> _17732_m) {
	{
		auto &expr = _17732_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1b1016350:;
		if (it != expr.end()) {
			jule::Ptr<_1ac6675ed_StructArgExprModel> _1b1016471_arg = *it;
			{
				static__1ada73d05_optimize(_1b1016471_arg.get()._field_expr);
			}
			_iter_next_1b1016350:;
			++it;
			goto _iter_begin_1b1016350;
		}
		_iter_end_1b1016350:;
	}
}



inline void _1ada74e38_alloc_structure(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac667e39_AllocStructLitExprModel> _18334_m) {
	_1ada74b19_structure_lit(&(*_self_), _18334_m.get()._field_lit);
}



inline void _1ada75257_casting(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac668566_CastingExprModel> _18726_m) {
	static__1ada73d05_optimize(_18726_m.get()._field_expr);
}



inline void _1ada75576_args(_1ada73794_ExprOptimizer* _self_,jule::Slice<jule::Any> _19123_args) {
	{
		auto &expr = _19123_args;
		auto it = expr.begin();
		_iter_begin_1b1018d9c:;
		if (it != expr.end()) {
			jule::I64 _1b1018de1_i = it - expr.begin();
			jule::Any _1b1019166_arg = *it;
			{
				static__1ada73d05_optimize(_1b1019166_arg);
				_19123_args[_1b1018de1_i]=_1b1019166_arg;
			}
			_iter_next_1b1018d9c:;
			++it;
			_1b1018de1_i++;
			goto _iter_begin_1b1018d9c;
		}
		_iter_end_1b1018d9c:;
	}
}



inline void _1ada75895_scope(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ad33ce0a_Scope>& _19825_s) {
	jule::Ptr<_1ada6c1b6_ScopeOptimizer> _19917_scopt = static__1ada6c6d3_new(_19825_s);
	_1ada70cbe_optimize(_19917_scopt.ptr());
}



inline void _1ada75bb4_func_call(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac66904a_FnCallExprModel> _20328_m) {
	static__1ada73d05_optimize(_20328_m.get()._field_expr);
	_1ada75576_args(&(*_self_), _20328_m.get()._field_args);
	if ((_20328_m.get()._field_except != nullptr)) {
		_1ada75895_scope(&(*_self_), _20328_m.get()._field_except);
	}
}



inline void _1ada75ed3_slice(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac66949b_SliceExprModel> _21124_m) {
	_1ada75576_args(&(*_self_), _21124_m.get()._field_elems);
}



inline void _1ada76302_array(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac66ca98_ArrayExprModel> _21524_m) {
	if ((_21524_m.get()._field_elems.len() == 2LL) && (_21524_m.get()._field_elems[1LL] == jule::Any(jule::Any(nullptr)))) {
		jule::Any _21721_elem = _21524_m.get()._field_elems[0LL];
		static__1ada73d05_optimize(_21721_elem);
		_21524_m.get()._field_elems[0LL]=_21721_elem;
	}
	_1ada75576_args(&(*_self_), _21524_m.get()._field_elems);
}



inline void _1ada76621_indexing(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac6699eb_IndexingExprModel> _22427_m) {
	static__1ada73d05_optimize(_22427_m.get()._field_expr.get()._field_model);
	static__1ada73d05_optimize(_22427_m.get()._field_index.get()._field_model);
	if ((!(_1e6ae448b_OPT_ACCESS))) {
		return;
	}
	jule::Bool _23013_array = (_1ad42cb32_arr(_22427_m.get()._field_expr.get()._field_kind.ptr()) != nullptr);
	if (_23013_array && _1ad3e747b_is_const(_22427_m.get()._field_index.ptr())) {
		(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1ada69d2e_UnsafeIndexingExprModel>(_1ada69d2e_UnsafeIndexingExprModel(_22427_m)));
		return;
	}
	{
		auto &_match_expr{ _22427_m.get()._field_index.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ad39e037_Var>>()) {
			_case_begin_1b1024b77:;
			{
				jule::Ptr<_1ad39e037_Var> _24017_i = _22427_m.get()._field_index.get()._field_model.operator jule::Ptr<_1ad39e037_Var>();
				if (_24017_i.get()._field_mutable || (_24017_i.get()._field_iter_relation == nullptr)) {
					goto _match_end_1b1024ade;
				}
				{
					auto &_match_expr{ _22427_m.get()._field_expr.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ad39e037_Var>>()) {
						_case_begin_1b10265b3:;
						{
							jule::Ptr<_1ad39e037_Var> _24621_r = _22427_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1ad39e037_Var>();
							if (_24017_i.get()._field_iter_relation.get()._field_range == _24621_r) {
								(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1ada69d2e_UnsafeIndexingExprModel>(_1ada69d2e_UnsafeIndexingExprModel(_22427_m)));
							}
						}
					}
					_match_end_1b10264a3:;
				}
			}
		}
		_match_end_1b1024ade:;
	}
}



inline void _1ada76940_anon_func(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac669e4c_AnonFnExprModel> _25728_m) {
	_1ada75895_scope(&(*_self_), _25728_m.get()._field_func.get()._field_scope);
}



inline void _1ada76c5e_map(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac66a8ed_MapExprModel> _26122_m) {
	{
		auto &expr = _26122_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1b10293b8:;
		if (it != expr.end()) {
			jule::Ptr<_1ac66a39d_KeyValPairExprModel> _1b10294d9_pair = *it;
			{
				static__1ada73d05_optimize(_1b10294d9_pair.get()._field_key);
				static__1ada73d05_optimize(_1b10294d9_pair.get()._field_val);
			}
			_iter_next_1b10293b8:;
			++it;
			goto _iter_begin_1b10293b8;
		}
		_iter_end_1b10293b8:;
	}
}



inline void _1ada7707d_slicing(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac66b04c_SlicingExprModel> _26826_m) {
	static__1ada73d05_optimize(_26826_m.get()._field_expr);
	static__1ada73d05_optimize(_26826_m.get()._field_left);
	if (_26826_m.get()._field_right != jule::Any(jule::Any(nullptr))) {
		static__1ada73d05_optimize(_26826_m.get()._field_right);
	}
}



inline void _1ada7739c_trait_sub(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac66b69b_TraitSubIdentExprModel> _27628_m) {
	static__1ada73d05_optimize(_27628_m.get()._field_expr);
}



inline void _1ada776bb_structure_sub(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac66c0a3_StructSubIdentExprModel> _28032_m) {
	static__1ada73d05_optimize(_28032_m.get()._field_expr.get()._field_model);
}



inline void _1ada779da_common_sub(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac66d5d2_CommonSubIdentExprModel> _28429_m) {
	static__1ada73d05_optimize(_28429_m.get()._field_expr);
}



inline void _1ada77d09_tuple(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac66d912_TupleExprModel> _28824_m) {
	{
		auto &expr = _28824_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1b102e885:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e6975_Data> _1b102e9a6_d = *it;
			{
				static__1ada73d05_optimize(_1b102e9a6_d.get()._field_model);
			}
			_iter_next_1b102e885:;
			++it;
			goto _iter_begin_1b102e885;
		}
		_iter_end_1b102e885:;
	}
}



inline void _1ada78128_new_call(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac66ec43_BuiltinNewCallExprModel> _29427_m) {
	if (_29427_m.get()._field_init != jule::Any(jule::Any(nullptr))) {
		static__1ada73d05_optimize(_29427_m.get()._field_init);
	}
}



inline void _1ada78447_out_call(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac66ddeb_BuiltinOutCallExprModel> _30027_m) {
	static__1ada73d05_optimize(_30027_m.get()._field_expr);
}



inline void _1ada78766_outln_call(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac66e3b3_BuiltinOutlnCallExprModel> _30429_m) {
	static__1ada73d05_optimize(_30429_m.get()._field_expr);
}



inline void _1ada78a85_panic_call(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac67020a_BuiltinPanicCallExprModel> _30829_m) {
	static__1ada73d05_optimize(_30829_m.get()._field_expr);
}



inline void _1ada78da4_assert_call(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac6707c1_BuiltinAssertCallExprModel> _31230_m) {
	static__1ada73d05_optimize(_31230_m.get()._field_expr);
}



inline void _1ada791c3_error_call(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac671816_BuiltinErrorCallExprModel> _31629_m) {
	static__1ada73d05_optimize(_31629_m.get()._field_err);
}



inline void _1ada794e2_make_call(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac670d87_BuiltinMakeCallExprModel> _32028_m) {
	if (_32028_m.get()._field_len != jule::Any(jule::Any(nullptr))) {
		static__1ada73d05_optimize(_32028_m.get()._field_len);
	}
	if (_32028_m.get()._field_cap != jule::Any(jule::Any(nullptr))) {
		static__1ada73d05_optimize(_32028_m.get()._field_cap);
	}
}



inline void _1ada79811_append_call(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac67134e_BuiltinAppendCallExprModel> _32930_m) {
	static__1ada73d05_optimize(_32930_m.get()._field_dest);
	static__1ada73d05_optimize(_32930_m.get()._field_elements);
}



inline void _1ada79b30_clone_call(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac66e77b_BuiltinCloneCallExprModel> _33429_m) {
	static__1ada73d05_optimize(_33429_m.get()._field_expr);
}



inline void _1ada79e4e_sizeof(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac671b46_SizeofExprModel> _33825_m) {
	static__1ada73d05_optimize(_33825_m.get()._field_expr);
}



inline void _1ada7a26d_alignof(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac6722ea_AlignofExprModel> _34226_m) {
	static__1ada73d05_optimize(_34226_m.get()._field_expr);
}



inline void _1ada7a58c_integrated_to_str(_1ada73794_ExprOptimizer* _self_,jule::Ptr<_1ac672927_IntegratedToStrExprModel> _34636_m) {
	static__1ada73d05_optimize(_34636_m.get()._field_expr);
}



inline void _1ada7a7ce_do(_1ada73794_ExprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1ad3e6975_Data>>()) {
			_case_begin_1b103adbe:;
			{
				(*((*_self_)._field_model))=(*((*_self_)._field_model)).operator jule::Ptr<_1ad3e6975_Data>().get()._field_model;
				_1ada7a7ce_do(&(*_self_));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac666c07_BinopExprModel>>()) {
			_case_begin_1b103b155:;
			{
				_1ada744cb_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac666c07_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac667158_UnaryExprModel>>()) {
			_case_begin_1b103b1bb:;
			{
				_1ada747ea_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac667158_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac667a4e_StructLitExprModel>>()) {
			_case_begin_1b103b232:;
			{
				_1ada74b19_structure_lit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac667a4e_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac667e39_AllocStructLitExprModel>>()) {
			_case_begin_1b103b298:;
			{
				_1ada74e38_alloc_structure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac667e39_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac668566_CastingExprModel>>()) {
			_case_begin_1b103b30e:;
			{
				_1ada75257_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac668566_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66904a_FnCallExprModel>>()) {
			_case_begin_1b103b386:;
			{
				_1ada75bb4_func_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac66904a_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66949b_SliceExprModel>>()) {
			_case_begin_1b103b40d:;
			{
				_1ada75ed3_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac66949b_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66ca98_ArrayExprModel>>()) {
			_case_begin_1b103b485:;
			{
				_1ada76302_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac66ca98_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac6699eb_IndexingExprModel>>()) {
			_case_begin_1b103b50c:;
			{
				_1ada76621_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac6699eb_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac669e4c_AnonFnExprModel>>()) {
			_case_begin_1b103b584:;
			{
				_1ada76940_anon_func(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac669e4c_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66a8ed_MapExprModel>>()) {
			_case_begin_1b103b60b:;
			{
				_1ada76c5e_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac66a8ed_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66b04c_SlicingExprModel>>()) {
			_case_begin_1b103b683:;
			{
				_1ada7707d_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac66b04c_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66b69b_TraitSubIdentExprModel>>()) {
			_case_begin_1b103b70a:;
			{
				_1ada7739c_trait_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac66b69b_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>>()) {
			_case_begin_1b103b782:;
			{
				_1ada776bb_structure_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66d5d2_CommonSubIdentExprModel>>()) {
			_case_begin_1b103b809:;
			{
				_1ada779da_common_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac66d5d2_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66d912_TupleExprModel>>()) {
			_case_begin_1b103b881:;
			{
				_1ada77d09_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac66d912_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66ddeb_BuiltinOutCallExprModel>>()) {
			_case_begin_1b103b908:;
			{
				_1ada78447_out_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac66ddeb_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66e3b3_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1b103b980:;
			{
				_1ada78766_outln_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac66e3b3_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66ec43_BuiltinNewCallExprModel>>()) {
			_case_begin_1b103ba07:;
			{
				_1ada78128_new_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac66ec43_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac67020a_BuiltinPanicCallExprModel>>()) {
			_case_begin_1b103ba7e:;
			{
				_1ada78a85_panic_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac67020a_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac6707c1_BuiltinAssertCallExprModel>>()) {
			_case_begin_1b103bb06:;
			{
				_1ada78da4_assert_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac6707c1_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac671816_BuiltinErrorCallExprModel>>()) {
			_case_begin_1b103bb7d:;
			{
				_1ada791c3_error_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac671816_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac670d87_BuiltinMakeCallExprModel>>()) {
			_case_begin_1b103bc05:;
			{
				_1ada794e2_make_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac670d87_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac67134e_BuiltinAppendCallExprModel>>()) {
			_case_begin_1b103bc7c:;
			{
				_1ada79811_append_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac67134e_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66e77b_BuiltinCloneCallExprModel>>()) {
			_case_begin_1b103bd04:;
			{
				_1ada79b30_clone_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac66e77b_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac671b46_SizeofExprModel>>()) {
			_case_begin_1b103bd7b:;
			{
				_1ada79e4e_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac671b46_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac6722ea_AlignofExprModel>>()) {
			_case_begin_1b103be03:;
			{
				_1ada7a26d_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac6722ea_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac672927_IntegratedToStrExprModel>>()) {
			_case_begin_1b103be7a:;
			{
				_1ada7a58c_integrated_to_str(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ac672927_IntegratedToStrExprModel>());
			}
		}
		_match_end_1b103ad69:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1ada73794_ExprOptimizer _Src) {
	_Stream << "ExprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ada7bb65_Optimizer> static__1ada7c02d_new(jule::Ptr<_1e6be526d_IR>& _2228_ir) {
	return jule::new_ptr<_1ada7bb65_Optimizer>(_1ada7bb65_Optimizer(_2228_ir));
}



inline void _1ada7c34c_optimize_global(_1ada7bb65_Optimizer* _self_,jule::Ptr<_1ad39e037_Var>& _2839_v) {
	if ((!(_2839_v.get()._field_cpp_linked))) {
		static__1ada73d05_optimize(_2839_v.get()._field_value.get()._field_data.get()._field_model);
	}
}



inline void _1ada7c66b_optimize_function(_1ada7bb65_Optimizer* _self_,jule::Ptr<_1ac676a08_Fn>& _3441_func) {
	if (_3441_func.get()._field_cpp_linked) {
		return;
	}
	{
		auto &expr = _3441_func.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1b1055702:;
		if (it != expr.end()) {
			jule::Ptr<_1ac67a501_FnIns> _1b1055834_ins = *it;
			{
				jule::Ptr<_1ada6c1b6_ScopeOptimizer> _3921_so = static__1ada6c6d3_new(_1b1055834_ins.get()._field_scope);
				_1ada70cbe_optimize(_3921_so.ptr());
			}
			_iter_next_1b1055702:;
			++it;
			goto _iter_begin_1b1055702;
		}
		_iter_end_1b1055702:;
	}
}



inline void _1ada7c98a_optimize_struct(_1ada7bb65_Optimizer* _self_,jule::Ptr<_1ac661075_Struct>& _4439_s) {
	if (_4439_s.get()._field_cpp_linked) {
		return;
	}
	{
		auto &expr = _4439_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1b1057171:;
		if (it != expr.end()) {
			jule::Ptr<_1ac664551_StructIns> _1b10572a3_ins = *it;
			{
				{
					auto &expr = _1b10572a3_ins.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1b1057924:;
					if (it != expr.end()) {
						jule::Ptr<_1ac663a06_FieldIns> _1b10579ac_f = *it;
						{
							if ((_1b10579ac_f.get()._field_default != nullptr)) {
								static__1ada73d05_optimize(_1b10579ac_f.get()._field_default.get()._field_model);
							}
						}
						_iter_next_1b1057924:;
						++it;
						goto _iter_begin_1b1057924;
					}
					_iter_end_1b1057924:;
				}
				{
					auto &expr = _1b10572a3_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1b10581d8:;
					if (it != expr.end()) {
						jule::Ptr<_1ac676a08_Fn> _1b1057b66_m = *it;
						{
							_1ada7c66b_optimize_function(&(*_self_), _1b1057b66_m);
						}
						_iter_next_1b10581d8:;
						++it;
						goto _iter_begin_1b10581d8;
					}
					_iter_end_1b10581d8:;
				}
			}
			_iter_next_1b1057171:;
			++it;
			goto _iter_begin_1b1057171;
		}
		_iter_end_1b1057171:;
	}
}



inline void _1ada7cca9_optimize_globals(_1ada7bb65_Optimizer* _self_,jule::Ptr<_1ad376b8b_Package>& _6040_p) {
	{
		auto &expr = _6040_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b1059926:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b1059a47_f = *it;
			{
				{
					auto &expr = _1b1059a47_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1b105a1eb:;
					if (it != expr.end()) {
						jule::Ptr<_1ad39e037_Var> _1b105a284_v = *it;
						{
							_1ada7c34c_optimize_global(&(*_self_), _1b105a284_v);
						}
						_iter_next_1b105a1eb:;
						++it;
						goto _iter_begin_1b105a1eb;
					}
					_iter_end_1b105a1eb:;
				}
			}
			_iter_next_1b1059926:;
			++it;
			goto _iter_begin_1b1059926;
		}
		_iter_end_1b1059926:;
	}
}



inline void _1ada7d0c8_optimize_functions(_1ada7bb65_Optimizer* _self_,jule::Ptr<_1ad376b8b_Package>& _6842_p) {
	{
		auto &expr = _6842_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b105b241:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b105b362_f = *it;
			{
				{
					auto &expr = _1b105b362_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1b105ba16:;
					if (it != expr.end()) {
						jule::Ptr<_1ac676a08_Fn> _1b105ba9e_func = *it;
						{
							_1ada7c66b_optimize_function(&(*_self_), _1b105ba9e_func);
						}
						_iter_next_1b105ba16:;
						++it;
						goto _iter_begin_1b105ba16;
					}
					_iter_end_1b105ba16:;
				}
			}
			_iter_next_1b105b241:;
			++it;
			goto _iter_begin_1b105b241;
		}
		_iter_end_1b105b241:;
	}
}



inline void _1ada7d3e7_optimize_structs(_1ada7bb65_Optimizer* _self_,jule::Ptr<_1ad376b8b_Package>& _7640_p) {
	{
		auto &expr = _7640_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b105c9e5:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b105cb16_f = *it;
			{
				{
					auto &expr = _1b105cb16_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1b105d2ba:;
					if (it != expr.end()) {
						jule::Ptr<_1ac661075_Struct> _1b105d353_s = *it;
						{
							_1ada7c98a_optimize_struct(&(*_self_), _1b105d353_s);
						}
						_iter_next_1b105d2ba:;
						++it;
						goto _iter_begin_1b105d2ba;
					}
					_iter_end_1b105d2ba:;
				}
			}
			_iter_next_1b105c9e5:;
			++it;
			goto _iter_begin_1b105c9e5;
		}
		_iter_end_1b105c9e5:;
	}
}



inline void _1ada7d716_optimize_package(_1ada7bb65_Optimizer* _self_,jule::Ptr<_1ad376b8b_Package>& _8440_p) {
	_1ada7cca9_optimize_globals(&(*_self_), _8440_p);
	_1ada7d0c8_optimize_functions(&(*_self_), _8440_p);
	_1ada7d3e7_optimize_structs(&(*_self_), _8440_p);
}



inline void _1ada7d958_optimize(_1ada7bb65_Optimizer* _self_) {
	{
		
		if (_1e6ae490e_OPT_COND || _1e6ae4249_OPT_APPEND || _1e6ae3e80_OPT_COPY) {
			_case_begin_1b1060bd5:;
			{
				goto _match_end_1b1060685;
			}
		}
		else {
			_case_begin_1b1060751:;
			{
				return;
			}
		}
		_match_end_1b1060685:;
	}
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1b1061103:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b1061323_u = *it;
			{
				if ((!(_1b1061323_u.get()._field_cpp_linked))) {
					_1ada7d716_optimize_package(&(*_self_), _1b1061323_u.get()._field_package);
				}
			}
			_iter_next_1b1061103:;
			++it;
			goto _iter_begin_1b1061103;
		}
		_iter_end_1b1061103:;
	}
	_1ada7d716_optimize_package(&(*_self_), (*_self_)._field_ir.get()._field_main);
}







std::ostream &operator<<(std::ostream &_Stream, _1ada7bb65_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1adae0349_unix(_1adadede8_AbsTime* _self_) {
	jule::Bool _5417_leap = false;
	jule::U64 _5517_y = ((*_self_)._field_year - 1900LLU);
	jule::U64 _5617_m = ((*_self_)._field_month - 1LLU);
	if ((_5617_m >= 12LLU) || (_5617_m < 0LLU)) {
		jule::U64 _5821_adj = (_5617_m / 12LLU);
		_5617_m%=12LL;
		if ((_5617_m < 0LLU)) {
			(_5821_adj)--;
			_5617_m+=12LLU;
		}
		_5517_y+=_5821_adj;
	}
	jule::U64 _6617_t = _1adae5492_unix_year_to_seconds(_5517_y,_5417_leap);
	_6617_t+=static_cast<jule::U64>(_1adae58c1_unix_month_to_seconds(_5617_m,_5417_leap));
	_6617_t+=static_cast<jule::U64>(86400LLU * static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(((*_self_)._field_day - 1LLU)))));
	_6617_t+=static_cast<jule::U64>(3600LLU * (*_self_)._field_hour);
	_6617_t+=static_cast<jule::U64>(60LLU * (*_self_)._field_minute);
	_6617_t+=(*_self_)._field_second;
	return _6617_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1adadede8_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1adae069b_Time static__1adae0aa8_unix(jule::U64 _8924_sec) {
	return _1adae069b_Time(_8924_sec);
}



inline _1adae069b_Time static__1adae0cd9_now(void) {
	return static__1adae0aa8_unix(static_cast<jule::U64>(_1adae50a7_unix()));
}



inline jule::U64 _1adae12a1_unix(_1adae069b_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1adae157b_day(_1adae069b_Time* _self_) {
	return _1adae278b_abs(&(*_self_))._field_day;
}



inline jule::U64 _1adae1856_month(_1adae069b_Time* _self_) {
	return _1adae278b_abs(&(*_self_))._field_month;
}



inline jule::U64 _1adae1b31_year(_1adae069b_Time* _self_) {
	return _1adae278b_abs(&(*_self_))._field_year;
}



inline jule::U64 _1adae1e0b_second(_1adae069b_Time* _self_) {
	return _1adae278b_abs(&(*_self_))._field_second;
}



inline jule::U64 _1adae21d6_minute(_1adae069b_Time* _self_) {
	return _1adae278b_abs(&(*_self_))._field_minute;
}



inline jule::U64 _1adae24b1_hour(_1adae069b_Time* _self_) {
	return _1adae278b_abs(&(*_self_))._field_hour;
}



inline _1adadede8_AbsTime _1adae278b_abs(_1adae069b_Time* _self_) {
	jule::U64 _12513_secs = ((*_self_)._field_sec - 951868800LLU);
	jule::U64 _12617_days = (_12513_secs / 86400LLU);
	jule::U64 _12717_rem_secs = (_12513_secs % 86400LL);
	if ((_12717_rem_secs < 0LLU)) {
		_12717_rem_secs+=86400LLU;
		(_12617_days)--;
	}
	jule::U64 _13317_qc_cycles = (_12617_days / 146097LLU);
	jule::U64 _13417_rem_days = (_12617_days % 146097LL);
	if ((_13417_rem_days < 0LLU)) {
		_13417_rem_days+=146097LLU;
		(_13317_qc_cycles)--;
	}
	jule::U64 _14017_c_cycles = (_13417_rem_days / 36524LLU);
	if ((_14017_c_cycles == 4LLU)) {
		(_14017_c_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>((_14017_c_cycles * 36524LLU));
	jule::U64 _14617_q_cycles = (_13417_rem_days / 1461LLU);
	if ((_14617_q_cycles == 25LLU)) {
		(_14617_q_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>((_14617_q_cycles * 1461LLU));
	jule::U64 _15217_rem_years = (_13417_rem_days / 365LLU);
	if ((_15217_rem_years == 4LLU)) {
		(_15217_rem_years)--;
	}
	_13417_rem_days-=static_cast<jule::U64>((_15217_rem_years * 365LLU));
	jule::U64 _15817_leap = static_cast<jule::U64>(0LLU);
	if ((_15217_rem_years == 0LLU) && ((_14617_q_cycles > 0LLU) || (_14017_c_cycles == 0LLU))) {
		_15817_leap=1LLU;
	}
	jule::U64 _16217_y_day = ((_13417_rem_days + 31LLU) + 28LLU) + _15817_leap;
	if (_16217_y_day >= static_cast<jule::U64>(static_cast<jule::U64>(365LLU + _15817_leap))) {
		_16217_y_day-=static_cast<jule::U64>(365LLU + _15817_leap);
	}
	jule::U64 _16717_months = 0LLU;
	for (; _1adade1e4_MDAYS[static_cast<jule::I64>(_16717_months)] <= _13417_rem_days; (_16717_months)++) {
		{
			_13417_rem_days-=_1adade1e4_MDAYS[static_cast<jule::I64>(_16717_months)];
		}
	_iter_next_1b108a605:;
	}
	_iter_end_1b108a605:;
	_1adadede8_AbsTime _17217_t = _1adadede8_AbsTime();
	_17217_t._field_year=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_15217_rem_years + static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _14617_q_cycles)))) + static_cast<jule::U64>(static_cast<jule::U64>(100LLU * _14017_c_cycles)))) + static_cast<jule::U64>(static_cast<jule::U64>(400LLU * _13317_qc_cycles)))) + 100LLU));
	_17217_t._field_month=static_cast<jule::U64>((_16717_months + 2LLU));
	if ((_17217_t._field_month >= 12LLU)) {
		_17217_t._field_month-=12LLU;
		(_17217_t._field_year)++;
	}
	_17217_t._field_month+=1LLU;
	_17217_t._field_year+=1900LLU;
	_17217_t._field_day=static_cast<jule::U64>((_13417_rem_days + 1LLU));
	_17217_t._field_week_day=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(3LLU + _12617_days))) % 7LL));
	if ((_17217_t._field_week_day < 0LLU)) {
		_17217_t._field_week_day+=7LLU;
	}
	_17217_t._field_year_day=_16217_y_day;
	_17217_t._field_hour=static_cast<jule::U64>((_12717_rem_secs / 3600LLU));
	_17217_t._field_minute=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>((_12717_rem_secs / 60LLU))) % 60LL));
	_17217_t._field_second=static_cast<jule::U64>((_12717_rem_secs % 60LL));
	return _17217_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1adae069b_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 static__1adae3083_nanoseconds(jule::I64 _22531_d) {
	return static_cast<jule::I64>((_22531_d * 1LL));
}



inline jule::I64 static__1adae3391_microseconds(jule::I64 _23032_d) {
	return static_cast<jule::I64>((_23032_d * 1000LL));
}



inline jule::I64 static__1adae369e_milliseconds(jule::I64 _23532_d) {
	return static_cast<jule::I64>((_23532_d * 1000000LL));
}



inline jule::I64 static__1adae39ac_seconds(jule::I64 _24027_d) {
	return static_cast<jule::I64>((_24027_d * 1000000000LL));
}



inline jule::I64 static__1adae3cba_minutes(jule::I64 _24527_d) {
	return static_cast<jule::I64>((_24527_d * 60000000000LL));
}



inline jule::I64 static__1adae40c8_hours(jule::I64 _25025_d) {
	return static_cast<jule::I64>((_25025_d * 3600000000000LL));
}







std::ostream &operator<<(std::ostream &_Stream, _1adae2add_Duration _Src) {
	_Stream << "Duration{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad921b81_TestCoder> static__1ad96a7ce_new(jule::Ptr<_1adaa65b8_ObjectCoder>& _2928_oc) {
	return jule::new_ptr<_1ad921b81_TestCoder>(_1ad921b81_TestCoder(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Ptr<_1ac676a08_Fn>(),jule::Ptr<_1ac676a08_Fn>(),_2928_oc));
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad96aa65_find_testing_package(_1ad921b81_TestCoder* _self_) {
	{
		auto &expr = (*_self_)._field_oc.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1b10d065b:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b10d0705_imp = *it;
			{
				if ((_1b10d0705_imp.get()._field_link_path == jule::Str("std::testing", 12))) {
					return _1b10d0705_imp;
				}
			}
			_iter_next_1b10d065b:;
			++it;
			goto _iter_begin_1b10d065b;
		}
		_iter_end_1b10d065b:;
	}
	return nullptr;
}



inline void _1ad96ae61_append_test(_1ad921b81_TestCoder* _self_,jule::Str& _4435_obj,jule::Ptr<_1ac67a501_FnIns> _4449_f) {
	_4435_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_4435_obj+=_1ad96b912_call_tm_reset(&(*_self_));
	_4435_obj+=jule::Str(";\n", 2);
	_4435_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_4435_obj+=jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35);
	_4435_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_4435_obj+=jule::Str("jule::outln(", 12);
	_4435_obj+=_1ada88e2a_cstr_lit(static_cast<jule::Slice<jule::U8>>(_4449_f.get()._field_decl.get()._field_ident));
	_4435_obj+=jule::Str(");\n", 3);
	_4435_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_4435_obj+=static__1ada8ddca_func_ins(_4449_f);
	_4435_obj+=jule::Str("(_t);\n", 6);
	_4435_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_4435_obj+=jule::Str("post_test();\n", 13);
}



inline void _1ad96b35c_append_package_tests(_1ad921b81_TestCoder* _self_,jule::Str& _6144_obj,jule::Ptr<_1ad376b8b_Package>& _6159_p) {
	{
		auto &expr = _6159_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b10d6cc2:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b10d6dc1_file = *it;
			{
				{
					auto &expr = _1b10d6dc1_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1b10d75a8:;
					if (it != expr.end()) {
						jule::Ptr<_1ac676a08_Fn> _1b10d7641_f = *it;
						{
							if (_1adb0059b_has_directive(_1b10d7641_f.get()._field_directives,jule::Str("test", 4))) {
								_1ad96ae61_append_test(&(*_self_), _6144_obj,_1b10d7641_f.get()._field_instances[0LL]);
							}
						}
						_iter_next_1b10d75a8:;
						++it;
						goto _iter_begin_1b10d75a8;
					}
					_iter_end_1b10d75a8:;
				}
			}
			_iter_next_1b10d6cc2:;
			++it;
			goto _iter_begin_1b10d6cc2;
		}
		_iter_end_1b10d6cc2:;
	}
}



inline jule::Bool _1ad96b637_ready_testing_package(_1ad921b81_TestCoder* _self_) {
	jule::Ptr<_1ad3736b0_ImportInfo> _7217_p = _1ad96aa65_find_testing_package(&(*_self_));
	if ((_7217_p == nullptr)) {
		return false;
	}
	(*_self_)._field_t=_1ad374eb9_find_struct(_7217_p.ptr(), jule::Str("T", 1),false).get()._field_instances[0LL];
	(*_self_)._field_tm_reset=_1ac665772_find_method((*_self_)._field_t.ptr(), jule::Str("reset", 5),false);
	(*_self_)._field_tm_failed=_1ac665772_find_method((*_self_)._field_t.ptr(), jule::Str("failed", 6),false);
	(*_self_)._field_tm_skipped=_1ac665772_find_method((*_self_)._field_t.ptr(), jule::Str("skipped", 7),false);
	return true;
}



inline jule::Str _1ad96b912_call_tm_reset(_1ad921b81_TestCoder* _self_) {
	jule::Str _8817_obj = static__1ada8dabc_func((*_self_)._field_tm_reset);
	_8817_obj+=jule::Str("(_t)", 4);
	return _8817_obj;
}



inline jule::Str _1ad96bbdc_call_tm_failed(_1ad921b81_TestCoder* _self_) {
	jule::Str _9417_obj = static__1ada8dabc_func((*_self_)._field_tm_failed);
	_9417_obj+=jule::Str("(_t)", 4);
	return _9417_obj;
}



inline jule::Str _1ad96beb7_call_tm_skipped(_1ad921b81_TestCoder* _self_) {
	jule::Str _10017_obj = static__1ada8dabc_func((*_self_)._field_tm_skipped);
	_10017_obj+=jule::Str("(_t)", 4);
	return _10017_obj;
}



inline void _1ad96c2d6_serialize(_1ad921b81_TestCoder* _self_,jule::Str& _10737_obj) {
	_10737_obj+=jule::Str("\nvoid test_point(void) {\n", 25);
	_1ada98533_add_indent((*_self_)._field_oc.ptr());
	_10737_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	if ((!(_1ad96b637_ready_testing_package(&(*_self_))))) {
		_10737_obj+=jule::Str("}", 1);
		_1ada9b646_done_indent((*_self_)._field_oc.ptr());
		return;
	}
	_10737_obj+=static__1adb0234a_as_sptr(static__1adb046e3_structure_ins((*_self_)._field_t));
	_10737_obj+=jule::Str(" _t = jule::new_ptr<", 20);
	_10737_obj+=static__1adb046e3_structure_ins((*_self_)._field_t);
	_10737_obj+=jule::Str(">(); _t.ref = nullptr;\n", 23);
	_10737_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47);
	_10737_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("auto post_test = [&](void) {\n", 29);
	_1ada98533_add_indent((*_self_)._field_oc.ptr());
	_10737_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("++total;\n", 9);
	_10737_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("if (", 4);
	_10737_obj+=_1ad96bbdc_call_tm_failed(&(*_self_));
	_10737_obj+=jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60);
	_10737_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("else if (", 9);
	_10737_obj+=_1ad96beb7_call_tm_skipped(&(*_self_));
	_10737_obj+=jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62);
	_10737_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53);
	_1ada9b646_done_indent((*_self_)._field_oc.ptr());
	_10737_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("};\n", 3);
	_1ad96b35c_append_package_tests(&(*_self_), _10737_obj,(*_self_)._field_oc.get()._field_ir.get()._field_main);
	_10737_obj+=jule::Str("\n\n", 2);
	_10737_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154);
	_10737_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("if (failed != 0) std::exit(1);\n", 31);
	_1ada9b646_done_indent((*_self_)._field_oc.ptr());
	_10737_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("}\n", 2);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad921b81_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tm_reset:" << _Src._field_tm_reset << ", ";
	_Stream << "tm_failed:" << _Src._field_tm_failed << ", ";
	_Stream << "tm_skipped:" << _Src._field_tm_skipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad978c1b_ScopeCoder> static__1ad9c0207_new(jule::Ptr<_1adaa65b8_ObjectCoder>& _4824_oc) {
	return jule::new_ptr<_1ad978c1b_ScopeCoder>(_1ad978c1b_ScopeCoder(_4824_oc));
}



inline jule::Str _1ad970bad_range_index_iter(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad35651c_RangeIter>& _5440_it) {
	jule::Str _5513_begin = static__1ada9053b_iter_begin(static_cast<jule::U64>(static_cast<jule::U64>(_5440_it)));
	jule::Str _5613_next = static__1ada90b57_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_5440_it)));
	jule::Str _5817_obj = jule::Str("{\n", 2);
	_1ada98533_add_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("auto ", 5);
	if (_1e6ae3e80_OPT_COPY && _1ada22b72_is_copy_optimizable(_5440_it.get()._field_expr)) {
		_5817_obj+=jule::Str("&", 1);
	}
	_5817_obj+=jule::Str("expr = ", 7);
	_5817_obj+=_1ada8717b_model((*_self_)._field_oc.get()._field_ec.ptr(), _5440_it.get()._field_expr.get()._field_model);
	_5817_obj+=jule::Str(";\n", 2);
	_5817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_5817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_5513_begin;
	_5817_obj+=jule::Str(":;\n", 3);
	_5817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_1ada98533_add_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	if ((_5440_it.get()._field_key_a != nullptr)) {
		_5817_obj+=_1adae7153_var_init_expr((*_self_)._field_oc.ptr(), _5440_it.get()._field_key_a,jule::Str("it - expr.begin()", 17));
		_5817_obj+=jule::Str("\n", 1);
		_5817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	}
	if ((_5440_it.get()._field_key_b != nullptr)) {
		if (_1e6ae3e80_OPT_COPY) {
			_5440_it.get()._field_key_b.get()._field_reference=_1ada24cea_is_iter_copy_optimizable(_5440_it.get()._field_expr,_5440_it.get()._field_key_b);
		}
		_5817_obj+=_1adae7153_var_init_expr((*_self_)._field_oc.ptr(), _5440_it.get()._field_key_b,jule::Str("*it", 3));
		_5817_obj+=jule::Str("\n", 1);
		_5817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	}
	_5817_obj+=_1ada209c7_scope(&(*_self_), _5440_it.get()._field_scope);
	_5817_obj+=jule::Str("\n", 1);
	_5817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_5613_next;
	_5817_obj+=jule::Str(":;\n", 3);
	_5817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("++it;\n", 6);
	_5817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	if ((_5440_it.get()._field_key_a != nullptr)) {
		_5817_obj+=static__1ada9022d_var(_5440_it.get()._field_key_a);
		_5817_obj+=jule::Str("++;\n", 4);
		_5817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	}
	_5817_obj+=jule::Str("goto ", 5);
	_5817_obj+=_5513_begin;
	_5817_obj+=jule::Str(";\n", 2);
	_1ada9b646_done_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("}\n", 2);
	_5817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_5817_obj+=static__1ada90849_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_5440_it)));
	_5817_obj+=jule::Str(":;\n", 3);
	_1ada9b646_done_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("}", 1);
	return _5817_obj;
}



inline jule::Str _1ad9ce744_range_hashmap_iter(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad35651c_RangeIter>& _12442_it) {
	jule::Str _12513_begin = static__1ada9053b_iter_begin(static_cast<jule::U64>(static_cast<jule::U64>(_12442_it)));
	jule::Str _12613_next = static__1ada90b57_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_12442_it)));
	jule::Str _12817_obj = jule::Str("{\n", 2);
	_1ada98533_add_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("auto ", 5);
	if (_1e6ae3e80_OPT_COPY && _1ada22b72_is_copy_optimizable(_12442_it.get()._field_expr)) {
		_12817_obj+=jule::Str("&", 1);
	}
	_12817_obj+=jule::Str("expr = ", 7);
	_12817_obj+=_1ada8717b_model((*_self_)._field_oc.get()._field_ec.ptr(), _12442_it.get()._field_expr.get()._field_model);
	_12817_obj+=jule::Str(";\n", 2);
	_12817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_12817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_12513_begin;
	_12817_obj+=jule::Str(":;\n", 3);
	_12817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_1ada98533_add_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	if ((_12442_it.get()._field_key_a != nullptr)) {
		if (_1e6ae3e80_OPT_COPY) {
			_12442_it.get()._field_key_a.get()._field_reference=_1ada24cea_is_iter_copy_optimizable(_12442_it.get()._field_expr,_12442_it.get()._field_key_a);
		}
		_12817_obj+=_1adae7153_var_init_expr((*_self_)._field_oc.ptr(), _12442_it.get()._field_key_a,jule::Str("it->first", 9));
		_12817_obj+=jule::Str("\n", 1);
		_12817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	}
	if ((_12442_it.get()._field_key_b != nullptr)) {
		if (_1e6ae3e80_OPT_COPY) {
			_12442_it.get()._field_key_b.get()._field_reference=_1ada24cea_is_iter_copy_optimizable(_12442_it.get()._field_expr,_12442_it.get()._field_key_b);
		}
		_12817_obj+=_1adae7153_var_init_expr((*_self_)._field_oc.ptr(), _12442_it.get()._field_key_b,jule::Str("it->second", 10));
		_12817_obj+=jule::Str("\n", 1);
		_12817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	}
	_12817_obj+=_1ada209c7_scope(&(*_self_), _12442_it.get()._field_scope);
	_12817_obj+=jule::Str("\n", 1);
	_12817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_12613_next;
	_12817_obj+=jule::Str(":;\n", 3);
	_12817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("++it;\n", 6);
	_12817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("goto ", 5);
	_12817_obj+=_12513_begin;
	_12817_obj+=jule::Str(";\n", 2);
	_1ada9b646_done_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("}\n", 2);
	_12817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_12817_obj+=static__1ada90849_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_12442_it)));
	_12817_obj+=jule::Str(":;\n", 3);
	_1ada9b646_done_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("}", 1);
	return _12817_obj;
}



inline jule::Str _1ad972a6c_if_case(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad35596c_If> _19230_i) {
	jule::Str _19317_obj = jule::Str();
	if (_19230_i.get()._field_expr != jule::Any(jule::Any(nullptr))) {
		_19317_obj+=jule::Str("if (", 4);
		_19317_obj+=_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _19230_i.get()._field_expr);
		_19317_obj+=jule::Str(") ", 2);
	}
	_19317_obj+=_1ada209c7_scope(&(*_self_), _19230_i.get()._field_scope);
	return _19317_obj;
}



inline jule::Str _1ad9752bc_conditional(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad355dac_Conditional> _20334_c) {
	jule::Str _20417_obj = jule::Str();
	{
		auto &expr = _20334_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1b1122170:;
		if (it != expr.end()) {
			jule::Ptr<_1ad35596c_If> _1b112223b_elif = *it;
			{
				if ((_1b112223b_elif == nullptr)) {
					goto _iter_next_1b1122170;
				}
				if ((_20417_obj.len() != 0LL)) {
					_20417_obj+=jule::Str(" else ", 6);
				}
				_20417_obj+=_1ad972a6c_if_case(&(*_self_), _1b112223b_elif);
			}
			_iter_next_1b1122170:;
			++it;
			goto _iter_begin_1b1122170;
		}
		_iter_end_1b1122170:;
	}
	if ((_20334_c.get()._field_default != nullptr)) {
		if ((_20417_obj.len() != 0LL)) {
			_20417_obj+=jule::Str(" else ", 6);
		}
		_20417_obj+=_1ada209c7_scope(&(*_self_), _20334_c.get()._field_default.get()._field_scope);
	}
	return _20417_obj;
}



inline jule::Str _1ad9c4690_inf_iter(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad3560cc_InfIter> _22331_it) {
	jule::Str _22417_obj = jule::Str("for (;;) {\n", 11);
	_1ada98533_add_indent((*_self_)._field_oc.ptr());
	_22417_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_22417_obj+=_1ada209c7_scope(&(*_self_), _22331_it.get()._field_scope);
	_1ada9b646_done_indent((*_self_)._field_oc.ptr());
	_22417_obj+=jule::Str("\n", 1);
	_22417_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_22417_obj+=static__1ada90b57_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_22331_it)));
	_22417_obj+=jule::Str(":;\n", 3);
	_22417_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_22417_obj+=jule::Str("}\n", 2);
	_22417_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_22417_obj+=static__1ada90849_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_22331_it)));
	_22417_obj+=jule::Str(":;", 2);
	return _22417_obj;
}



inline jule::Str _1ad9c87a4_while_iter(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad3562ec_WhileIter> _24433_it) {
	jule::Str _24517_obj = jule::Str();
	if ((_24433_it.get()._field_expr != jule::Any(jule::Any(nullptr))) && (_24433_it.get()._field_next == jule::Any(jule::Any(nullptr)))) {
		_24517_obj+=jule::Str("while (", 7);
		_24517_obj+=_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _24433_it.get()._field_expr);
		_24517_obj+=jule::Str(") {\n", 4);
	} else {
		_24517_obj+=jule::Str("for (; ", 7);
		if (_24433_it.get()._field_expr != jule::Any(jule::Any(nullptr))) {
			_24517_obj+=_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _24433_it.get()._field_expr);
		}
		_24517_obj+=jule::Str("; ", 2);
		if (_24433_it.get()._field_next != jule::Any(jule::Any(nullptr))) {
			jule::Str _25721_st = _1ada1eb08_st(&(*_self_), _24433_it.get()._field_next);
			_24517_obj+=_25721_st.slice(0LL,(_25721_st.len() - 1LL));
		}
		_24517_obj+=jule::Str(") {\n", 4);
	}
	_1ada98533_add_indent((*_self_)._field_oc.ptr());
	_24517_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_24517_obj+=_1ada209c7_scope(&(*_self_), _24433_it.get()._field_scope);
	_24517_obj+=jule::Str("\n", 1);
	_1ada9b646_done_indent((*_self_)._field_oc.ptr());
	_24517_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_24517_obj+=static__1ada90b57_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_24433_it)));
	_24517_obj+=jule::Str(":;\n", 3);
	_24517_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_24517_obj+=jule::Str("}\n", 2);
	_24517_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_24517_obj+=static__1ada90849_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_24433_it)));
	_24517_obj+=jule::Str(":;", 2);
	return _24517_obj;
}



inline jule::Str _1ad9cabb3_range_iter(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad35651c_RangeIter> _28033_it) {
	{
		
		if ((_1ad42ce0c_slc(_28033_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b11344d4:;
			{
				return _1ad970bad_range_index_iter(&(*_self_), _28033_it);
			}
		}
		else if ((_1ad42cb32_arr(_28033_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b1133e84:;
			{
				return _1ad970bad_range_index_iter(&(*_self_), _28033_it);
			}
		}
		else if ((_1ad42da67_map(_28033_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b1133eea:;
			{
				return _1ad9ce744_range_hashmap_iter(&(*_self_), _28033_it);
			}
		}
		else {
			_case_begin_1b1133879:;
			{
				return _1ad970bad_range_index_iter(&(*_self_), _28033_it);
			}
		}
		_match_end_1b11337d0:;
	}
}



inline jule::Str _1ad9e4759_cont(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad35673c_ContSt> _29319_c) {
	jule::Str _29417_obj = jule::Str("goto ", 5);
	_29417_obj+=static__1ada90b57_iter_next(_29319_c.get()._field_it);
	_29417_obj+=jule::Str(";", 1);
	return _29417_obj;
}



inline jule::Str _1ada04d63_label(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad356b7c_Label> _30020_l) {
	return (static__1ada90e65_label(_30020_l.get()._field_ident) + jule::Str(":;", 2));
}



inline jule::Str _1ada0a484_goto_st(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad356d9c_GotoSt> _30422_gt) {
	jule::Str _30517_obj = jule::Str("goto ", 5);
	_30517_obj+=static__1ada90e65_label(_30422_gt.get()._field_ident);
	_30517_obj+=jule::Str(";", 1);
	return _30517_obj;
}



inline jule::Str _1ada11457_postfix(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad3570bc_Postfix> _31130_p) {
	jule::Str _31217_obj = jule::Str("(", 1);
	_31217_obj+=_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _31130_p.get()._field_expr);
	_31217_obj+=jule::Str(")", 1);
	_31217_obj+=_31130_p.get()._field_op;
	_31217_obj+=jule::Str(";", 1);
	return _31217_obj;
}



inline jule::Str _1ada5c3b5_assign(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad3572dc_Assign> _32029_a) {
	jule::Str _32117_obj = _1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _32029_a.get()._field_l.get()._field_model);
	_32117_obj+=_32029_a.get()._field_op._field_kind;
	_32117_obj+=_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _32029_a.get()._field_r.get()._field_model);
	_32117_obj+=jule::Str(";", 1);
	return _32117_obj;
}



inline jule::Str _1ada60819_multi_assign(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad35750c_MultiAssign> _32835_a) {
	jule::Str _32917_obj = jule::Str("std::tie(", 9);
	{
		auto &expr = _32835_a.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1b1140633:;
		if (it != expr.end()) {
			jule::Any _1b11406ee_l = *it;
			{
				if (_1b11406ee_l == jule::Any(jule::Any(nullptr))) {
					_32917_obj+=jule::Str("std::ignore", 11);
				} else {
					_32917_obj+=_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1b11406ee_l);
				}
				_32917_obj+=jule::Str(",", 1);
			}
			_iter_next_1b1140633:;
			++it;
			goto _iter_begin_1b1140633;
		}
		_iter_end_1b1140633:;
	}
	(_32917_obj).mut_slice(0LL,_32917_obj.len() - 1LL);
	_32917_obj+=jule::Str(") = ", 4);
	_32917_obj+=_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _32835_a.get()._field_r);
	_32917_obj+=jule::Str(";", 1);
	return _32917_obj;
}



inline jule::Str _1ad9d2deb_match_expr(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad35772c_Match>& _34734_m) {
	if ((!(_1ad3e747b_is_const(_34734_m.get()._field_expr.ptr())))) {
		return jule::Str("_match_expr", 11);
	}
	if ((!(_1ad2c62a0_is_bool(_34734_m.get()._field_expr.get()._field_constant.ptr()))) || (!(_1ad2c36ed_read_bool(_34734_m.get()._field_expr.get()._field_constant.ptr())))) {
		return _1ada8717b_model((*_self_)._field_oc.get()._field_ec.ptr(), _34734_m.get()._field_expr.get()._field_model);
	}
	return jule::Str();
}



inline jule::Str _1ada07bce_case(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad35772c_Match> _35727_m,jule::Ptr<_1ad357b7d_Case> _35742_c) {
	jule::Str _35817_obj = jule::Str();
	if ((_35742_c.get()._field_exprs.len() != 0LL) && (!(_1ad32d318_is_generic_type_match(_35727_m.ptr())))) {
		if ((_35727_m.get()._field_cases.len() > 0LL) && (_35727_m.get()._field_cases[0LL] == _35742_c)) {
			_35817_obj+=jule::Str("if (", 4);
		} else {
			_35817_obj+=jule::Str("else if (", 9);
		}
		{
			auto &expr = _35742_c.get()._field_exprs;
			auto it = expr.begin();
			_iter_begin_1b11485b4:;
			if (it != expr.end()) {
				jule::I64 _1b1147edc_i = it - expr.begin();
				jule::Ptr<_1ad3e6975_Data> _1b114862a_expr = *it;
				{
					{
						
						if ((!(_35727_m.get()._field_type_match))) {
							_case_begin_1b114a011:;
							{
								jule::Str _36925_case_expr = _1ad9d2deb_match_expr(&(*_self_), _35727_m);
								if (_1ad3e7833_good_operand(_35727_m.get()._field_expr.ptr(), _1b114862a_expr)) {
									if ((_36925_case_expr.len() != 0LL)) {
										_35817_obj+=_36925_case_expr;
										_35817_obj+=jule::Str(" == ", 4);
									}
									_35817_obj+=_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1b114862a_expr.get()._field_model);
								} else {
									_35817_obj+=_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1b114862a_expr.get()._field_model);
									if ((_36925_case_expr.len() != 0LL)) {
										_35817_obj+=jule::Str(" == ", 4);
										_35817_obj+=_36925_case_expr;
									}
								}
							}
						}
						else {
							_case_begin_1b1148c35:;
							{
								_35817_obj+=jule::Str("_match_expr", 11);
								_35817_obj+=jule::Str(".type_is<", 9);
								_35817_obj+=_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1b114862a_expr.get()._field_model);
								_35817_obj+=jule::Str(">()", 3);
							}
						}
						_match_end_1b1148b69:;
					}
					if ((_1b1147edc_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_35742_c.get()._field_exprs.len()))) {
						_35817_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_1b11485b4:;
				++it;
				_1b1147edc_i++;
				goto _iter_begin_1b11485b4;
			}
			_iter_end_1b11485b4:;
		}
		_35817_obj+=jule::Str(") ", 2);
	} else if ((_35727_m.get()._field_default == _35742_c) && (_35727_m.get()._field_cases.len() != 0LL)) {
		_35817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
		_35817_obj+=jule::Str("else ", 5);
	}
	_1ada98533_add_indent((*_self_)._field_oc.ptr());
	_35817_obj+=jule::Str("{\n", 2);
	_35817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_35817_obj+=static__1ada91581_case_begin(static_cast<jule::U64>(static_cast<jule::U64>(_35742_c)));
	_35817_obj+=jule::Str(":;\n", 3);
	if ((_35742_c.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		_35817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
		_35817_obj+=_1ada209c7_scope(&(*_self_), _35742_c.get()._field_scope);
		_35817_obj+=jule::Str("\n", 1);
	}
	_1ada9b646_done_indent((*_self_)._field_oc.ptr());
	_35817_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_35817_obj+=jule::Str("}", 1);
	return _35817_obj;
}



inline jule::Str _1ada2b9b1_match_st(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad35772c_Match> _41931_m) {
	if ((_41931_m.get()._field_cases.len() == 0LL) && (_41931_m.get()._field_default == nullptr)) {
		return jule::Str();
	}
	jule::Bool _42413_generic_type_match = _1ad32d318_is_generic_type_match(_41931_m.ptr());
	if (_42413_generic_type_match && ((_41931_m.get()._field_default == nullptr) || (_41931_m.get()._field_default.get()._field_scope.get()._field_stmts.len() == 0LL))) {
		return jule::Str();
	}
	jule::Str _42917_obj = jule::Str("{\n", 2);
	_1ada98533_add_indent((*_self_)._field_oc.ptr());
	_42917_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	if ((!(_42413_generic_type_match)) && (!(_1ad3e747b_is_const(_41931_m.get()._field_expr.ptr())))) {
		if (_1e6ae3e80_OPT_COPY && _1ada22b72_is_copy_optimizable(_41931_m.get()._field_expr)) {
			_42917_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_42917_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_42917_obj+=_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _41931_m.get()._field_expr.get()._field_model);
		_42917_obj+=jule::Str(" };\n", 4);
		_42917_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	}
	if ((_41931_m.get()._field_cases.len() > 0LL)) {
		{
			auto &expr = _41931_m.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1b115a21e:;
			if (it != expr.end()) {
				jule::Ptr<_1ad357b7d_Case> _1b115a41c_c = *it;
				{
					if ((_1b115a41c_c == nullptr)) {
						goto _iter_next_1b115a21e;
					}
					_42917_obj+=jule::Str("\n", 1);
					_42917_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
					_42917_obj+=_1ada07bce_case(&(*_self_), _41931_m,_1b115a41c_c);
				}
				_iter_next_1b115a21e:;
				++it;
				goto _iter_begin_1b115a21e;
			}
			_iter_end_1b115a21e:;
		}
	}
	if ((_41931_m.get()._field_default != nullptr)) {
		_42917_obj+=jule::Str("\n", 1);
		_42917_obj+=_1ada07bce_case(&(*_self_), _41931_m,_41931_m.get()._field_default);
	}
	_42917_obj+=jule::Str("\n", 1);
	_42917_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_42917_obj+=static__1ada91273_match_end(static_cast<jule::U64>(static_cast<jule::U64>(_41931_m)));
	_42917_obj+=jule::Str(":;", 2);
	_42917_obj+=jule::Str("\n", 1);
	_1ada9b646_done_indent((*_self_)._field_oc.ptr());
	_42917_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_42917_obj+=jule::Str("}", 1);
	return _42917_obj;
}



inline jule::Str _1ad97ac84_fall_st(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad357d9d_FallSt> _47722_f) {
	jule::Str _47817_obj = jule::Str("goto ", 5);
	_47817_obj+=static__1ada91581_case_begin(_47722_f.get()._field_dest_case);
	_47817_obj+=jule::Str(";", 1);
	return _47817_obj;
}



inline jule::Str _1ad99ee1d_break_st(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad35695c_BreakSt> _48423_b) {
	jule::Str _48517_obj = jule::Str("goto ", 5);
	if ((_48423_b.get()._field_it != 0LLU)) {
		_48517_obj+=static__1ada90849_iter_end(_48423_b.get()._field_it);
	} else {
		_48517_obj+=static__1ada91273_match_end(_48423_b.get()._field_mtch);
	}
	_48517_obj+=jule::Str(";", 1);
	return _48517_obj;
}



inline jule::Str _1ad9b3481_ret_with_vars(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad3580bd_RetSt> _49536_r) {
	jule::Str _49617_obj = jule::Str();
	{
		auto &expr = _49536_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1b1163953:;
		if (it != expr.end()) {
			jule::Ptr<_1ad39e037_Var> _1b1163a1e_v = *it;
			{
				if (_1ab008314_is_ignore_ident(_1b1163a1e_v.get()._field_ident)) {
					_49617_obj+=_1ada87c92_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1b1163a1e_v.get()._field_kind.get()._field_kind);
				} else {
					_49617_obj+=static__1ada9022d_var(_1b1163a1e_v);
				}
				_49617_obj+=jule::Str(",", 1);
			}
			_iter_next_1b1163953:;
			++it;
			goto _iter_begin_1b1163953;
		}
		_iter_end_1b1163953:;
	}
	(_49617_obj).mut_slice(0LL,_49617_obj.len() - 1LL);
	jule::Str _50817_oobj = jule::Str("return ", 7);
	if (_49536_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_50817_oobj+=jule::Str("jule::Exceptional<", 18);
		_50817_oobj+=static__1adb06162_kind(_49536_r.get()._field_func.get()._field_result);
		_50817_oobj+=jule::Str(">(jule::Any(), ", 15);
	}
	if ((_49536_r.get()._field_vars.len() > 1LL)) {
		_50817_oobj+=jule::Str("std::make_tuple(", 16);
		_50817_oobj+=_49617_obj;
		_50817_oobj+=jule::Str(")", 1);
	} else {
		_50817_oobj+=_49617_obj;
	}
	if (_49536_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_50817_oobj+=jule::Str(")", 1);
	}
	_50817_oobj+=jule::Str(";", 1);
	return _50817_oobj;
}



inline jule::Str _1ad9b4141_ret_tuple(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad3580bd_RetSt> _53232_r) {
	jule::Slice<jule::Ptr<_1ad3e6975_Data>> _53317_datas = _53232_r.get()._field_expr.operator jule::Ptr<_1ac66d912_TupleExprModel>().get()._field_datas;
	jule::Str _53417_obj = jule::Str();
	{
		auto &expr = _53232_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1b116a493:;
		if (it != expr.end()) {
			jule::I64 _1b116a691_i = it - expr.begin();
			jule::Ptr<_1ad39e037_Var> _1b116a86c_v = *it;
			{
				if (_1ab008314_is_ignore_ident(_1b116a86c_v.get()._field_ident)) {
					goto _iter_next_1b116a493;
				}
				jule::Any _54021_model = _53317_datas[_1b116a691_i].get()._field_model;
				if (_54021_model == jule::Any(jule::Any(_1b116a86c_v))) {
					goto _iter_next_1b116a493;
				}
				jule::Str _54517_ident = static__1ada9022d_var(_1b116a86c_v);
				_53417_obj+=_54517_ident;
				_53417_obj+=jule::Str(" = ", 3);
				_53417_obj+=_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _54021_model);
				_53417_obj+=jule::Str(";\n", 2);
				_53417_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
			}
			_iter_next_1b116a493:;
			++it;
			_1b116a691_i++;
			goto _iter_begin_1b116a493;
		}
		_iter_end_1b116a493:;
	}
	jule::Str _55317_oobj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _53317_datas;
		auto it = expr.begin();
		_iter_begin_1b11697d3:;
		if (it != expr.end()) {
			jule::I64 _1b116ab7a_i = it - expr.begin();
			jule::Ptr<_1ad3e6975_Data> _1b116db4a_d = *it;
			{
				jule::Ptr<_1ad39e037_Var> _55521_v = _53232_r.get()._field_vars[_1b116ab7a_i];
				if (_1ab008314_is_ignore_ident(_55521_v.get()._field_ident)) {
					_55317_oobj+=_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1b116db4a_d.get()._field_model);
				} else {
					_55317_oobj+=static__1ada9022d_var(_55521_v);
				}
				_55317_oobj+=jule::Str(",", 1);
			}
			_iter_next_1b11697d3:;
			++it;
			_1b116ab7a_i++;
			goto _iter_begin_1b11697d3;
		}
		_iter_end_1b11697d3:;
	}
	(_55317_oobj).mut_slice(0LL,_55317_oobj.len() - 1LL);
	_55317_oobj+=jule::Str(")", 1);
	if (_53232_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_53417_obj+=jule::Str("return jule::Exceptional<", 25);
		_53417_obj+=static__1adb06162_kind(_53232_r.get()._field_func.get()._field_result);
		_53417_obj+=jule::Str(">(jule::Any(),", 14);
		_53417_obj+=_55317_oobj;
		_53417_obj+=jule::Str(")", 1);
	} else {
		_53417_obj+=jule::Str("return ", 7);
		_53417_obj+=_55317_oobj;
	}
	_53417_obj+=jule::Str(";", 1);
	return _53417_obj;
}



inline jule::Str _1ada06172_ret_with_exprs(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad3580bd_RetSt> _58237_r) {
	if ((_58237_r.get()._field_vars.len() > 1LL)) {
		return _1ad9b4141_ret_tuple(&(*_self_), _58237_r);
	}
	if ((_58237_r.get()._field_vars.len() > 0LL)) {
		jule::Ptr<_1ad39e037_Var> _58921_v = _58237_r.get()._field_vars[0LL];
		if ((!(_1ab008314_is_ignore_ident(_58921_v.get()._field_ident))) && (_58237_r.get()._field_expr != jule::Any(jule::Any(_58921_v)))) {
			jule::Str _59121_ident = static__1ada9022d_var(_58921_v);
			jule::Str _59225_obj = _59121_ident;
			_59225_obj+=jule::Str(" = ", 3);
			_59225_obj+=_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _58237_r.get()._field_expr);
			_59225_obj+=jule::Str(";\n", 2);
			_59225_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
			if (_58237_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
				_59225_obj+=jule::Str("return jule::Exceptional<", 25);
				_59225_obj+=static__1adb06162_kind(_58237_r.get()._field_func.get()._field_result);
				_59225_obj+=jule::Str(">(jule::Any(),", 14);
				_59225_obj+=_59121_ident;
				_59225_obj+=jule::Str(")", 1);
			} else {
				_59225_obj+=jule::Str("return ", 7);
				_59225_obj+=_59121_ident;
			}
			_59225_obj+=jule::Str(";", 1);
			return _59225_obj;
		}
	}
	if (_58237_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		jule::Str _61321_obj = jule::Str("return jule::Exceptional<", 25);
		_61321_obj+=static__1adb06162_kind(_58237_r.get()._field_func.get()._field_result);
		_61321_obj+=jule::Str(">(jule::Any(),", 14);
		_61321_obj+=_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _58237_r.get()._field_expr);
		_61321_obj+=jule::Str(")", 1);
		_61321_obj+=jule::Str(";", 1);
		return _61321_obj;
	}
	jule::Str _62217_obj = jule::Str("return ", 7);
	_62217_obj+=_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), _58237_r.get()._field_expr);
	_62217_obj+=jule::Str(";", 1);
	return _62217_obj;
}



inline jule::Str _1ada06dba_ret_st(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad3580bd_RetSt> _62829_r) {
	if ((_62829_r.get()._field_expr == jule::Any(jule::Any(nullptr))) && (_62829_r.get()._field_vars.len() == 0LL)) {
		if (_62829_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
			return jule::Str("return jule::VoidExceptional();", 31);
		}
		return jule::Str("return;", 7);
	}
	if (_62829_r.get()._field_expr == jule::Any(jule::Any(nullptr))) {
		return _1ad9b3481_ret_with_vars(&(*_self_), _62829_r);
	}
	return _1ada06172_ret_with_exprs(&(*_self_), _62829_r);
}



inline jule::Str _1ada0d355_ret_with_defaults(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad429931_TypeKind> _64340_result) {
	jule::Str _64417_obj = jule::Str("return ", 7);
	if ((_1ad42dd42_tup(_64340_result.ptr()) != nullptr)) {
		_64417_obj+=jule::Str("std::make_tuple(", 16);
		{
			auto &expr = _1ad42dd42_tup(_64340_result.ptr()).get()._field_types;
			auto it = expr.begin();
			_iter_begin_1b1181003:;
			if (it != expr.end()) {
				jule::Ptr<_1ad429931_TypeKind> _1b1181388_t = *it;
				{
					_64417_obj+=_1ada87c92_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1b1181388_t);
					_64417_obj+=jule::Str(",", 1);
				}
				_iter_next_1b1181003:;
				++it;
				goto _iter_begin_1b1181003;
			}
			_iter_end_1b1181003:;
		}
		(_64417_obj).mut_slice(0LL,_64417_obj.len() - 1LL);
		_64417_obj+=jule::Str(")", 1);
	} else {
		_64417_obj+=_1ada87c92_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _64340_result);
	}
	_64417_obj+=jule::Str(";", 1);
	return _64417_obj;
}



inline jule::Str _1ada1a131_var(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad39e037_Var> _66026_v) {
	if (_66026_v.get()._field_constant) {
		return jule::Str();
	}
	return _1adae72b8_var((*_self_)._field_oc.ptr(), _66026_v);
}



inline jule::Str _1ada1eb08_st(_1ad978c1b_ScopeCoder* _self_,jule::Any _66825_st) {
	if (_66825_st == jule::Any(jule::Any(nullptr))) {
		return jule::Str();
	}
	{
		auto &_match_expr{ _66825_st };
		
		if (_match_expr.type_is<jule::Ptr<_1ad33ce0a_Scope>>()) {
			_case_begin_1b1185238:;
			{
				return _1ada209c7_scope(&(*_self_), _66825_st.operator jule::Ptr<_1ad33ce0a_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad39e037_Var>>()) {
			_case_begin_1b11853e2:;
			{
				return _1ada1a131_var(&(*_self_), _66825_st.operator jule::Ptr<_1ad39e037_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad3e6975_Data>>()) {
			_case_begin_1b1185e3c:;
			{
				return (_1ada87533_expr((*_self_)._field_oc.get()._field_ec.ptr(), jule::Any(_66825_st.operator jule::Ptr<_1ad3e6975_Data>())) + jule::Str(";", 1));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad355dac_Conditional>>()) {
			_case_begin_1b1185ea3:;
			{
				return _1ad9752bc_conditional(&(*_self_), _66825_st.operator jule::Ptr<_1ad355dac_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad3560cc_InfIter>>()) {
			_case_begin_1b1185c3e:;
			{
				return _1ad9c4690_inf_iter(&(*_self_), _66825_st.operator jule::Ptr<_1ad3560cc_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad3562ec_WhileIter>>()) {
			_case_begin_1b1185ca5:;
			{
				return _1ad9c87a4_while_iter(&(*_self_), _66825_st.operator jule::Ptr<_1ad3562ec_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad35651c_RangeIter>>()) {
			_case_begin_1b1185d1b:;
			{
				return _1ad9cabb3_range_iter(&(*_self_), _66825_st.operator jule::Ptr<_1ad35651c_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad35673c_ContSt>>()) {
			_case_begin_1b1185d82:;
			{
				return _1ad9e4759_cont(&(*_self_), _66825_st.operator jule::Ptr<_1ad35673c_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad356b7c_Label>>()) {
			_case_begin_1b118603b:;
			{
				return _1ada04d63_label(&(*_self_), _66825_st.operator jule::Ptr<_1ad356b7c_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad356d9c_GotoSt>>()) {
			_case_begin_1b11860a2:;
			{
				return _1ada0a484_goto_st(&(*_self_), _66825_st.operator jule::Ptr<_1ad356d9c_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad3570bc_Postfix>>()) {
			_case_begin_1b1186129:;
			{
				return _1ada11457_postfix(&(*_self_), _66825_st.operator jule::Ptr<_1ad3570bc_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad3572dc_Assign>>()) {
			_case_begin_1b11861a1:;
			{
				return _1ada5c3b5_assign(&(*_self_), _66825_st.operator jule::Ptr<_1ad3572dc_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad35750c_MultiAssign>>()) {
			_case_begin_1b1186228:;
			{
				return _1ada60819_multi_assign(&(*_self_), _66825_st.operator jule::Ptr<_1ad35750c_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad35772c_Match>>()) {
			_case_begin_1b11862a0:;
			{
				return _1ada2b9b1_match_st(&(*_self_), _66825_st.operator jule::Ptr<_1ad35772c_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad357d9d_FallSt>>()) {
			_case_begin_1b1186327:;
			{
				return _1ad97ac84_fall_st(&(*_self_), _66825_st.operator jule::Ptr<_1ad357d9d_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad35695c_BreakSt>>()) {
			_case_begin_1b118639e:;
			{
				return _1ad99ee1d_break_st(&(*_self_), _66825_st.operator jule::Ptr<_1ad35695c_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad3580bd_RetSt>>()) {
			_case_begin_1b1186426:;
			{
				return _1ada06dba_ret_st(&(*_self_), _66825_st.operator jule::Ptr<_1ad3580bd_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ada6a192_PushToSliceExprModel>>()) {
			_case_begin_1b118649d:;
			{
				return _1ada84222_push_to_slice((*_self_)._field_oc.get()._field_ec.ptr(), _66825_st.operator jule::Ptr<_1ada6a192_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ada6a67b_MutSlicingExprModel>>()) {
			_case_begin_1b1186525:;
			{
				return _1ada8691c_mut_slicing((*_self_)._field_oc.get()._field_ec.ptr(), _66825_st.operator jule::Ptr<_1ada6a67b_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ada6ab65_StrInsertBeginExprModel>>()) {
			_case_begin_1b118659c:;
			{
				return _1ada86cc4_str_insert_begin((*_self_)._field_oc.get()._field_ec.ptr(), _66825_st.operator jule::Ptr<_1ada6ab65_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1b1185920:;
			{
				return jule::Str("<unimplemented_stmt>", 20);
			}
		}
		_match_end_1b1185854:;
	}
}



inline jule::Str _1ada209c7_scope(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ad33ce0a_Scope> _71928_s) {
	jule::Str _72017_obj = jule::Str("{\n", 2);
	_1ada98533_add_indent((*_self_)._field_oc.ptr());
	{
		auto &expr = _71928_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1b11948eb:;
		if (it != expr.end()) {
			jule::Any _1b1194ae9_st = *it;
			{
				_72017_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
				_72017_obj+=_1ada1eb08_st(&(*_self_), _1b1194ae9_st);
				_72017_obj+=jule::Str("\n", 1);
			}
			_iter_next_1b11948eb:;
			++it;
			goto _iter_begin_1b11948eb;
		}
		_iter_end_1b11948eb:;
	}
	_1ada9b646_done_indent((*_self_)._field_oc.ptr());
	_72017_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_72017_obj+=jule::Str("}", 1);
	if (_71928_s.get()._field_deferred) {
		_72017_obj=((jule::Str("__JULE_DEFER(", 13) + _72017_obj) + jule::Str(");", 2));
	}
	return _72017_obj;
}



inline jule::Str _1ada21786_func_scope(_1ad978c1b_ScopeCoder* _self_,jule::Ptr<_1ac67a501_FnIns> _74133_f) {
	if ((_74133_f.get()._field_scope == nullptr)) {
		return jule::Str();
	}
	jule::Str _74517_obj = _1ada209c7_scope(&(*_self_), _74133_f.get()._field_scope);
	if (_74133_f.get()._field_decl.get()._field_exceptional && _1ac676ec0_is_void(_74133_f.get()._field_decl.ptr())) {
		_74517_obj=(_74517_obj.slice(0LL,(_74517_obj.len() - 2LL)) + jule::Str(" return jule::VoidExceptional(); }", 34));
	}
	return _74517_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad978c1b_ScopeCoder _Src) {
	_Stream << "ScopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ada27627_ExprCoder> static__1ad96e00d_new(jule::Ptr<_1adaa65b8_ObjectCoder>& _9024_oc) {
	return jule::new_ptr<_1ada27627_ExprCoder>(_1ada27627_ExprCoder(_9024_oc));
}



inline jule::Str _1ada283d6_string(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ad2c1d8e_Const>& _9622_c) {
	jule::Str _9713_content = _1ad2c39c8_read_str(_9622_c.ptr());
	if ((_9713_content.len() == 0LL)) {
		return jule::Str("jule::Str()", 11);
	}
	jule::Slice<jule::U8> _10113_bytes = static_cast<jule::Slice<jule::U8>>(_9713_content);
	jule::Str _10213_len = _1ad2581ee_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_10113_bytes.len())),10LL);
	jule::Str _10313_lit = _1ada88e2a_cstr_lit(_10113_bytes);
	return ((((jule::Str("jule::Str(", 10) + _10313_lit) + jule::Str(", ", 2)) + _10213_len) + jule::Str(")", 1));
}



inline jule::Str _1ada2c71a_boolean(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ad2c1d8e_Const>& _10723_c) {
	if (_1ad2c36ed_read_bool(_10723_c.ptr())) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _1ada2d430_nil_lit(_1ada27627_ExprCoder* _self_) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _1ada62134_ftoa_special_cases(_1ada27627_ExprCoder* _self_,jule::F64& _11834_x) {
	{
		
		if (_1ad175418_is_nan(_11834_x)) {
			_case_begin_1b11a0462:;
			{
				return jule::Str("NAN", 3);
			}
		}
		else if (_1ad17c244_is_inf(_11834_x,1LL)) {
			_case_begin_1b11a05c7:;
			{
				return jule::Str("INFINITY", 8);
			}
		}
		else if (_1ad17c244_is_inf(_11834_x,-1LL)) {
			_case_begin_1b11a063d:;
			{
				return jule::Str("-INFINITY", 9);
			}
		}
		else {
			_case_begin_1b119ed57:;
			{
				return jule::Str();
			}
		}
		_match_end_1b119ecad:;
	}
}



inline jule::Str _1ada63a09_float32(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ad2c1d8e_Const>& _13123_c) {
	jule::F64 _13213_x = _1ad2c4633_as_f64(_13123_c.ptr());
	jule::Str _13513_f = _1ada62134_ftoa_special_cases(&(*_self_), _13213_x);
	if ((!(_13513_f.empty()))) {
		return _13513_f;
	}
	{
		
		if ((_13213_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1b11a37d9:;
			{
				return jule::Str("jule::MAX_F32", 13);
			}
		}
		else if ((_13213_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1b11a329a:;
			{
				return jule::Str("jule::MIN_F32", 13);
			}
		}
		else {
			_case_begin_1b11a2b7e:;
			{
				return (_1ada89315_ftoa(_13213_x,32LL) + jule::Str("f", 1));
			}
		}
		_match_end_1b11a2ac4:;
	}
}



inline jule::Str _1ad9d00a2_float64(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ad2c1d8e_Const>& _15023_c) {
	jule::F64 _15113_x = _1ad2c4633_as_f64(_15023_c.ptr());
	jule::Str _15413_f = _1ada62134_ftoa_special_cases(&(*_self_), _15113_x);
	if ((!(_15413_f.empty()))) {
		return _15413_f;
	}
	{
		
		if ((_15113_x == jule::MAX_F64)) {
			_case_begin_1b11a6611:;
			{
				return jule::Str("jule::MAX_F64", 13);
			}
		}
		else if ((_15113_x == jule::MIN_F64)) {
			_case_begin_1b11a63ad:;
			{
				return jule::Str("jule::MIN_F64", 13);
			}
		}
		else {
			_case_begin_1b11a5ad8:;
			{
				return _1ada89315_ftoa(_15113_x,64LL);
			}
		}
		_match_end_1b11a5a2d:;
	}
}



inline jule::Str _1ada30146_constant(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ad2c1d8e_Const> _17027_c,jule::Bool _17038_fx32) {
	{
		
		if (_1ad2c657a_is_str(_17027_c.ptr())) {
			_case_begin_1b11a81a1:;
			{
				return _1ada283d6_string(&(*_self_), _17027_c);
			}
		}
		else if (_1ad2c62a0_is_bool(_17027_c.ptr())) {
			_case_begin_1b11a8217:;
			{
				return _1ada2c71a_boolean(&(*_self_), _17027_c);
			}
		}
		else if (_1ad2c6855_is_f64(_17027_c.ptr())) {
			_case_begin_1b11a828e:;
			{
				{
					
					if (_17038_fx32) {
						_case_begin_1b11aa835:;
						{
							return _1ada63a09_float32(&(*_self_), _17027_c);
						}
					}
					else {
						_case_begin_1b11a9bca:;
						{
							return _1ad9d00a2_float64(&(*_self_), _17027_c);
						}
					}
					_match_end_1b11a9b0e:;
				}
			}
		}
		else if (_1ad2c5bea_is_i64(_17027_c.ptr())) {
			_case_begin_1b11a7ca5:;
			{
				return _1ada89623_itoa(static_cast<jule::I64>(_1ad2c3148_read_i64(_17027_c.ptr())));
			}
		}
		else if (_1ad2c5ec5_is_u64(_17027_c.ptr())) {
			_case_begin_1b11a7d1b:;
			{
				return _1ada899b9_utoa(static_cast<jule::U64>(_1ad2c3423_read_u64(_17027_c.ptr())));
			}
		}
		else if (_1ad2c6b30_is_nil(_17027_c.ptr())) {
			_case_begin_1b11a7d82:;
			{
				return _1ada2d430_nil_lit(&(*_self_));
			}
		}
		else {
			_case_begin_1b11a7c3e:;
			{
				return jule::Str("<unimplemented_constant_expression>", 35);
			}
		}
		_match_end_1b11a7ba6:;
	}
}



inline jule::Str _1ada575e1_div_by_zero_binary(_1ada27627_ExprCoder* _self_,_1ab005531_Token& _19438_op,jule::Ptr<_1ac666663_OperandExprModel>& _19454_l,jule::Ptr<_1ac666663_OperandExprModel>& _19481_r) {
	jule::Str _19517_op_func = jule::Str();
	{
		auto &_match_expr{ _19438_op._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1b11ad618:;
			{
				_19517_op_func=jule::Str("div", 3);
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1b11adae1:;
			{
				_19517_op_func=jule::Str("mod", 3);
			}
		}
		_match_end_1b11ada25:;
	}
	jule::Str _20517_obj = jule::Str("jule::", 6);
	_20517_obj+=_19517_op_func;
	_20517_obj+=jule::Str("(", 1);
	if ((!(_1e6ae3d5e_PRODUCTION))) {
		_20517_obj+=jule::Str("\"", 1);
		_20517_obj+=_1adac5dac_loc_info((*_self_)._field_oc.ptr(), _19438_op);
		_20517_obj+=jule::Str("\",", 2);
	}
	_20517_obj+=_1ada87533_expr(&(*_self_), _19454_l.get()._field_model);
	_20517_obj+=jule::Str(",", 1);
	_20517_obj+=_1ada87533_expr(&(*_self_), _19481_r.get()._field_model);
	_20517_obj+=jule::Str(")", 1);
	return _20517_obj;
}



inline jule::Str _1ad9719c2_unsafe_binary(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac666c07_BinopExprModel> _22036_m) {
	jule::Str _22117_obj = jule::Str("(", 1);
	_22117_obj+=_1ada8717b_model(&(*_self_), _22036_m.get()._field_left.get()._field_model);
	_22117_obj+=jule::Str(" ", 1);
	_22117_obj+=_22036_m.get()._field_op._field_kind;
	_22117_obj+=jule::Str(" ", 1);
	_22117_obj+=_1ada8717b_model(&(*_self_), _22036_m.get()._field_right.get()._field_model);
	_22117_obj+=jule::Str(")", 1);
	return _22117_obj;
}



inline jule::Str _1ada653ce_binary(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac666c07_BinopExprModel> _23129_m) {
	{
		auto &_match_expr{ _23129_m.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1b11b57a7:;
			{
				if ((_1ad42d4b2_strct(_23129_m.get()._field_left.get()._field_kind.ptr()) == nullptr)) {
					return _1ada575e1_div_by_zero_binary(&(*_self_), _23129_m.get()._field_op,_23129_m.get()._field_left,_23129_m.get()._field_right);
				}
			}
		}
		_match_end_1b11b56a8:;
	}
	return _1ad9719c2_unsafe_binary(&(*_self_), _23129_m);
}



inline jule::Str _1ada1bb7c_var(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ad39e037_Var> _24222_m) {
	if (_24222_m.get()._field_cpp_linked) {
		jule::Ptr<_1aaeaeb7d_Directive> _24417_d = _1adb0015b_find_directive(_24222_m.get()._field_directives,jule::Str("namespace", 9));
		if ((_24417_d != nullptr)) {
			jule::Str _24625_obj = _1ada8815a_concat_all_parts(_24417_d.get()._field_args);
			_24625_obj+=jule::Str("::", 2);
			_24625_obj+=static__1ada9022d_var(_24222_m);
			return _24625_obj;
		}
	}
	return static__1ada9022d_var(_24222_m);
}



inline jule::Str _1ada1bce2_structure(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac661075_Struct> _25524_m) {
	return static__1adb043d5_structure(_25524_m);
}



inline jule::Str _1ada5726c_structure_ins(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac664551_StructIns> _25932_m) {
	return static__1adb046e3_structure_ins(_25932_m);
}



inline jule::Str _1ada573d2_unary(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac667158_UnaryExprModel> _26328_m) {
	{
		auto &_match_expr{ _26328_m.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b11bc02d:;
			{
				jule::Str _26621_obj = jule::Str("(~(", 3);
				_26621_obj+=_1ada87533_expr(&(*_self_), _26328_m.get()._field_expr.get()._field_model);
				_26621_obj+=jule::Str("))", 2);
				return _26621_obj;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b11bc094:;
			{
				if (_1e6ae3d5e_PRODUCTION || (_1ad42c2a2_sptr(_26328_m.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					goto _match_end_1b11bbe2e;
				}
				jule::Str _27421_obj = _1ada87533_expr(&(*_self_), _26328_m.get()._field_expr.get()._field_model);
				_27421_obj+=jule::Str(".get(\"", 6);
				_27421_obj+=_1adac5dac_loc_info((*_self_)._field_oc.ptr(), _26328_m.get()._field_op);
				_27421_obj+=jule::Str("\")", 2);
				return _27421_obj;
			}
		}
		_match_end_1b11bbe2e:;
	}
	jule::Str _28117_obj = jule::Str("(", 1);
	_28117_obj+=_26328_m.get()._field_op._field_kind;
	_28117_obj+=jule::Str("(", 1);
	_28117_obj+=_1ada87533_expr(&(*_self_), _26328_m.get()._field_expr.get()._field_model);
	_28117_obj+=jule::Str("))", 2);
	return _28117_obj;
}



inline jule::Str _1ad9be0d5_cpp_structure_lit(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac667a4e_StructLitExprModel> _28940_m) {
	jule::Str _29017_obj = jule::Str("(", 1) + static__1adb046e3_structure_ins(_28940_m.get()._field_strct);
	_29017_obj+=jule::Str("){", 2);
	if ((_28940_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _28940_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1b11c3496:;
			if (it != expr.end()) {
				jule::Ptr<_1ac663a06_FieldIns> _1b11c35c8_f = *it;
				{
					if (_28940_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
						{
							auto &expr = _28940_m.get()._field_args;
							auto it = expr.begin();
							_iter_begin_1b11c4178:;
							if (it != expr.end()) {
								jule::Ptr<_1ac6675ed_StructArgExprModel> _1b11c4244_arg = *it;
								{
									if (_1b11c4244_arg.get()._field_field == _1b11c35c8_f) {
										_29017_obj+=jule::Str(".", 1);
										_29017_obj+=static__1ada8ee20_field(_1b11c35c8_f.get()._field_decl);
										_29017_obj+=jule::Str("=", 1);
										_29017_obj+=_1ada87533_expr(&(*_self_), _1b11c4244_arg.get()._field_expr);
										_29017_obj+=jule::Str(",", 1);
										goto _iter_next_1b11c3496;
									}
								}
								_iter_next_1b11c4178:;
								++it;
								goto _iter_begin_1b11c4178;
							}
							_iter_end_1b11c4178:;
						}
						goto _iter_next_1b11c3496;
					}
					_29017_obj+=static__1ada8ee20_field(_1b11c35c8_f.get()._field_decl);
					_29017_obj+=jule::Str(": ", 2);
					{
						auto &expr = _28940_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1b11c6994:;
						if (it != expr.end()) {
							jule::Ptr<_1ac6675ed_StructArgExprModel> _1b11c6a71_arg = *it;
							{
								if (_1b11c6a71_arg.get()._field_field == _1b11c35c8_f) {
									_29017_obj+=_1ada87533_expr(&(*_self_), _1b11c6a71_arg.get()._field_expr);
									_29017_obj+=jule::Str(",", 1);
									goto _iter_next_1b11c3496;
								}
							}
							_iter_next_1b11c6994:;
							++it;
							goto _iter_begin_1b11c6994;
						}
						_iter_end_1b11c6994:;
					}
					_29017_obj+=_1ada87c92_init_expr(&(*_self_), _1b11c35c8_f.get()._field_kind);
					_29017_obj+=jule::Str(",", 1);
				}
				_iter_next_1b11c3496:;
				++it;
				goto _iter_begin_1b11c3496;
			}
			_iter_end_1b11c3496:;
		}
		(_29017_obj).mut_slice(0LL,_29017_obj.len() - 1LL);
	}
	_29017_obj+=jule::Str("}", 1);
	return _29017_obj;
}



inline jule::Str _1ad9be24a_structure_lit(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac667a4e_StructLitExprModel> _32636_m) {
	if (_32636_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		return _1ad9be0d5_cpp_structure_lit(&(*_self_), _32636_m);
	}
	jule::Str _33117_obj = static__1ada8eb12_structure_ins(_32636_m.get()._field_strct);
	_33117_obj+=jule::Str("(", 1);
	if ((_32636_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _32636_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1b11cb889:;
			if (it != expr.end()) {
				jule::Ptr<_1ac663a06_FieldIns> _1b11cb9bb_f = *it;
				{
					{
						auto &expr = _32636_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1b11cc15e:;
						if (it != expr.end()) {
							jule::Ptr<_1ac6675ed_StructArgExprModel> _1b11cc22a_arg = *it;
							{
								if (_1b11cc22a_arg.get()._field_field == _1b11cb9bb_f) {
									_33117_obj+=_1ada87533_expr(&(*_self_), _1b11cc22a_arg.get()._field_expr);
									_33117_obj+=jule::Str(",", 1);
									goto _iter_next_1b11cb889;
								}
							}
							_iter_next_1b11cc15e:;
							++it;
							goto _iter_begin_1b11cc15e;
						}
						_iter_end_1b11cc15e:;
					}
					_33117_obj+=_1ada87c92_init_expr(&(*_self_), _1b11cb9bb_f.get()._field_kind);
					_33117_obj+=jule::Str(",", 1);
				}
				_iter_next_1b11cb889:;
				++it;
				goto _iter_begin_1b11cb889;
			}
			_iter_end_1b11cb889:;
		}
		(_33117_obj).mut_slice(0LL,_33117_obj.len() - 1LL);
	}
	_33117_obj+=jule::Str(")", 1);
	return _33117_obj;
}



inline jule::Str _1ad970020_alloc_structure(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac667e39_AllocStructLitExprModel> _35238_m) {
	jule::Str _35317_obj = jule::Str("jule::new_ptr<", 14);
	_35317_obj+=static__1ada8eb12_structure_ins(_35238_m.get()._field_lit.get()._field_strct);
	_35317_obj+=jule::Str(">(", 2);
	_35317_obj+=_1ad9be24a_structure_lit(&(*_self_), _35238_m.get()._field_lit);
	_35317_obj+=jule::Str(")", 1);
	return _35317_obj;
}



inline jule::Str _1ad970185_casting(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac668566_CastingExprModel> _36130_m) {
	jule::Str _36217_obj = jule::Str();
	{
		
		if ((_1ad42bec7_prim(_36130_m.get()._field_kind.ptr()) != nullptr) && _1ad4337a3_is_any(_1ad42bec7_prim(_36130_m.get()._field_kind.ptr()).ptr())) {
			_case_begin_1b11d3cd1:;
			{
				_36217_obj+=static__1adb06162_kind(_36130_m.get()._field_kind);
				_36217_obj+=jule::Str("(", 1);
				_36217_obj+=_1ada8717b_model(&(*_self_), _36130_m.get()._field_expr);
				_36217_obj+=jule::Str(")", 1);
			}
		}
		else if ((_1ad42c57c_ptr(_36130_m.get()._field_expr_kind.ptr()) != nullptr) || (_1ad42c57c_ptr(_36130_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b11d29a0:;
			{
				_36217_obj+=jule::Str("((", 2);
				_36217_obj+=static__1adb06162_kind(_36130_m.get()._field_kind);
				_36217_obj+=jule::Str(")(", 2);
				_36217_obj+=_1ada87533_expr(&(*_self_), _36130_m.get()._field_expr);
				_36217_obj+=jule::Str("))", 2);
			}
		}
		else if ((_1ad42d78c_trt(_36130_m.get()._field_expr_kind.ptr()) != nullptr) || (_1ad42bec7_prim(_36130_m.get()._field_expr_kind.ptr()) != nullptr) && _1ad4337a3_is_any(_1ad42bec7_prim(_36130_m.get()._field_expr_kind.ptr()).ptr())) {
			_case_begin_1b11d3e9b:;
			{
				_36217_obj+=_1ada8717b_model(&(*_self_), _36130_m.get()._field_expr);
				_36217_obj+=jule::Str(".", 1);
				if (_1e6ae3d5e_PRODUCTION) {
					_36217_obj+=jule::Str("operator ", 9);
					_36217_obj+=static__1adb06162_kind(_36130_m.get()._field_kind);
					_36217_obj+=jule::Str("()", 2);
				} else {
					if ((_1ad42d78c_trt(_36130_m.get()._field_expr_kind.ptr()) != nullptr) && (_1ad42c2a2_sptr(_36130_m.get()._field_kind.ptr()) != nullptr)) {
						_36217_obj+=jule::Str("cast_ptr<", 9);
						_36217_obj+=static__1adb06162_kind(_1ad42c2a2_sptr(_36130_m.get()._field_kind.ptr()).get()._field_elem);
					} else {
						_36217_obj+=jule::Str("cast<", 5);
						_36217_obj+=static__1adb06162_kind(_36130_m.get()._field_kind);
					}
					_36217_obj+=jule::Str(">(\"", 3);
					_36217_obj+=_1adac5dac_loc_info((*_self_)._field_oc.ptr(), _36130_m.get()._field_token);
					_36217_obj+=jule::Str("\")", 2);
				}
			}
		}
		else if ((_1ad42d78c_trt(_36130_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b11d4012:;
			{
				_36217_obj+=static__1adb06162_kind(_36130_m.get()._field_kind);
				_36217_obj+=jule::Str("(", 1);
				_36217_obj+=_1ada87533_expr(&(*_self_), _36130_m.get()._field_expr);
				_36217_obj+=jule::Str(", ", 2);
				_36217_obj+=_1ad258364_itoa(static_cast<jule::I64>(_1adac5681_find_type_offset((*_self_)._field_oc.ptr(), _1ad42d78c_trt(_36130_m.get()._field_kind.ptr()),_36130_m.get()._field_expr_kind)));
				_36217_obj+=jule::Str(")", 1);
			}
		}
		else {
			_case_begin_1b11d262b:;
			{
				_36217_obj+=jule::Str("static_cast<", 12);
				_36217_obj+=static__1adb06162_kind(_36130_m.get()._field_kind);
				_36217_obj+=jule::Str(">(", 2);
				_36217_obj+=_1ada87533_expr(&(*_self_), _36130_m.get()._field_expr);
				_36217_obj+=jule::Str(")", 1);
			}
		}
		_match_end_1b11d25a4:;
	}
	return _36217_obj;
}



inline jule::Str _1ad971c9c_args(_1ada27627_ExprCoder* _self_,jule::Slice<jule::Any> _41327_args) {
	if ((_41327_args.len() == 0LL)) {
		return jule::Str();
	}
	jule::Str _41717_obj = jule::Str();
	{
		auto &expr = _41327_args;
		auto it = expr.begin();
		_iter_begin_1b11e2097:;
		if (it != expr.end()) {
			jule::Any _1b11e2185_a = *it;
			{
				_41717_obj+=_1ada87533_expr(&(*_self_), _1b11e2185_a);
				_41717_obj+=jule::Str(",", 1);
			}
			_iter_next_1b11e2097:;
			++it;
			goto _iter_begin_1b11e2097;
		}
		_iter_end_1b11e2097:;
	}
	(_41717_obj).mut_slice(0LL,_41717_obj.len() - 1LL);
	return _41717_obj;
}



inline jule::Str _1ad972099_model_for_call(_1ada27627_ExprCoder* _self_,jule::Any _42637_expr) {
	{
		auto &_match_expr{ _42637_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1ac67a501_FnIns>>()) {
			_case_begin_1b11e3b6a:;
			{
				return _1ada81dce_func_ins(&(*_self_), _42637_expr.operator jule::Ptr<_1ac67a501_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>>()) {
			_case_begin_1b11e3bd1:;
			{
				jule::Ptr<_1ac66c0a3_StructSubIdentExprModel> _43121_ssie = _42637_expr.operator jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>();
				if ((_43121_ssie.get()._field_method != nullptr)) {
					return _1ada81dce_func_ins(&(*_self_), _43121_ssie.get()._field_method);
				}
			}
		}
		_match_end_1b11e3a8d:;
	}
	return _1ada8717b_model(&(*_self_), _42637_expr);
}



inline void _1ad9cdd81_push_call_inf(_1ada27627_ExprCoder* _self_,jule::Str& _43937_obj,jule::Ptr<_1ac66904a_FnCallExprModel>& _43948_m) {
	if (_1e6ae3d5e_PRODUCTION || ((!(_43948_m.get()._field_func.get()._field_anon)) && (!(_1ada8a129_is_builtin_call_has_debuginf(_43948_m))))) {
		_43937_obj+=jule::Str("(", 1);
		return;
	}
	if (_43948_m.get()._field_func.get()._field_anon) {
		{
			auto &_match_expr{ _43948_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>>()) {
				_case_begin_1b11e85cb:;
				{
					if (_43948_m.get()._field_expr.operator jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>().get()._field_field.get()._field_decl.get()._field_owner.get()._field_cpp_linked) {
						_43937_obj+=jule::Str("(", 1);
						return;
					}
					goto _case_begin_1b11e80ae;
				}
			}
			else {
				_case_begin_1b11e80ae:;
				{
					_43937_obj+=jule::Str(".call", 5);
				}
			}
			_match_end_1b11e8059:;
		}
	}
	_43937_obj+=jule::Str("(\"", 2);
	_43937_obj+=_1adac5dac_loc_info((*_self_)._field_oc.ptr(), _43948_m.get()._field_token);
	_43937_obj+=jule::Str("\"", 1);
	if ((_43948_m.get()._field_args.len() != 0LL)) {
		_43937_obj+=jule::Str(",", 1);
	}
}



inline jule::Str _1ad9ce238_pure_func_call(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac66904a_FnCallExprModel>& _46438_m) {
	jule::Str _46517_obj = _1ad972099_model_for_call(&(*_self_), _46438_m.get()._field_expr);
	if ((!(_1ac67b17d_is_builtin(_46438_m.get()._field_func.ptr())))) {
		if (_46438_m.get()._field_func.get()._field_decl.get()._field_cpp_linked && (_46438_m.get()._field_func.get()._field_generics.len() > 0LL)) {
			if ((!(_1adb0059b_has_directive(_46438_m.get()._field_func.get()._field_decl.get()._field_directives,jule::Str("cdef", 4))))) {
				_46517_obj+=jule::Str("<", 1);
				{
					auto &expr = _46438_m.get()._field_func.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1b11ec965:;
					if (it != expr.end()) {
						jule::Ptr<_1ad429931_TypeKind> _1b11ecbc9_g = *it;
						{
							_46517_obj+=static__1adb06162_kind(_1b11ecbc9_g);
							_46517_obj+=jule::Str(",", 1);
						}
						_iter_next_1b11ec965:;
						++it;
						goto _iter_begin_1b11ec965;
					}
					_iter_end_1b11ec965:;
				}
				(_46517_obj).mut_slice(0LL,_46517_obj.len() - 1LL);
				_46517_obj+=jule::Str(">", 1);
			}
		}
	}
	_1ad9cdd81_push_call_inf(&(*_self_), _46517_obj,_46438_m);
	jule::Bool _48017_locinfo = false;
	jule::Str _48117_wrap_receiver = jule::Str();
	if (((!(_1ac67b17d_is_builtin(_46438_m.get()._field_func.ptr()))) && (_46438_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1ac6753db_is_self(_46438_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
		{
			auto &_match_expr{ _46438_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>>()) {
				_case_begin_1b12010c8:;
				{
					jule::Ptr<_1ac66c0a3_StructSubIdentExprModel> _48525_ssie = _46438_m.get()._field_expr.operator jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>();
					{
						
						if (_1ac6756b6_is_ref(_46438_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
							_case_begin_1b12026a1:;
							{
								_46517_obj+=_1ada8717b_model(&(*_self_), jule::Any(_48525_ssie.get()._field_expr));
							}
						}
						else if ((_1ad42c2a2_sptr(_48525_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1b1204b26:;
							{
								_46517_obj+=_1ada8717b_model(&(*_self_), jule::Any(_48525_ssie.get()._field_expr));
								_46517_obj+=jule::Str(".ptr(", 5);
								if ((!(_1e6ae3d5e_PRODUCTION))) {
									_46517_obj+=jule::Str("\"", 1);
									_46517_obj+=_1adac5dac_loc_info((*_self_)._field_oc.ptr(), _46438_m.get()._field_token);
									_46517_obj+=jule::Str("\"", 1);
								}
								_46517_obj+=jule::Str(")", 1);
							}
						}
						else {
							_case_begin_1b1201e31:;
							{
								if ((_1ad42d4b2_strct(_48525_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									_46517_obj+=jule::Str("&", 1);
									if ((!(_48525_ssie.get()._field_expr.get()._field_lvalue))) {
										_48117_wrap_receiver=_1ada8717b_model(&(*_self_), jule::Any(_48525_ssie.get()._field_expr));
									}
								}
								if ((!(_48117_wrap_receiver.empty()))) {
									_46517_obj+=jule::Str("_wrap_copy", 10);
								} else {
									_46517_obj+=_1ada8717b_model(&(*_self_), jule::Any(_48525_ssie.get()._field_expr));
								}
							}
						}
						_match_end_1b1201dcb:;
					}
					if ((_46438_m.get()._field_args.len() > 0LL)) {
						_46517_obj+=jule::Str(", ", 2);
					}
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ac66b69b_TraitSubIdentExprModel>>()) {
				_case_begin_1b120113e:;
				{
					_46517_obj+=_1ada8717b_model(&(*_self_), _46438_m.get()._field_expr.operator jule::Ptr<_1ac66b69b_TraitSubIdentExprModel>().get()._field_expr);
					if ((!(_1e6ae3d5e_PRODUCTION))) {
						_48017_locinfo=true;
					}
					if ((_46438_m.get()._field_args.len() > 0LL)) {
						_46517_obj+=jule::Str(", ", 2);
					}
				}
			}
			_match_end_1b1201062:;
		}
	}
	_46517_obj+=_1ad971c9c_args(&(*_self_), _46438_m.get()._field_args);
	if (_48017_locinfo) {
		_46517_obj+=jule::Str(", \"", 3);
		_46517_obj+=_1adac5dac_loc_info((*_self_)._field_oc.ptr(), _46438_m.get()._field_token);
		_46517_obj+=jule::Str("\"", 1);
	}
	_46517_obj+=jule::Str(")", 1);
	if ((!(_48117_wrap_receiver.empty()))) {
		(_46517_obj).buffer.insert(0, (((jule::Str("({ auto _wrap_copy = ", 21) + _48117_wrap_receiver) + jule::Str("; ", 2))));
		_46517_obj+=jule::Str("; })", 4);
	}
	if (_46438_m.get()._field_is_co) {
		(_46517_obj).buffer.insert(0, (jule::Str("__JULE_CO(", 10)));
		_46517_obj+=jule::Str(")", 1);
	}
	return _46517_obj;
}



inline jule::Str _1ada7db78_func_call(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac66904a_FnCallExprModel> _54632_m) {
	if ((_1ac67b17d_is_builtin(_54632_m.get()._field_func.ptr()) || (!(_54632_m.get()._field_func.get()._field_decl.get()._field_exceptional))) || ((_54632_m.get()._field_except != nullptr) && (_54632_m.get()._field_except.get()._field_stmts.len() == 0LL))) {
		return _1ad9ce238_pure_func_call(&(*_self_), _54632_m);
	}
	jule::Str _55417_obj = jule::Str("({\n", 3);
	_1ada98533_add_indent((*_self_)._field_oc.ptr());
	_55417_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_55417_obj+=jule::Str("auto except = ", 14);
	_55417_obj+=_1ad9ce238_pure_func_call(&(*_self_), _54632_m);
	_55417_obj+=jule::Str(";\n", 2);
	_55417_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	if ((_54632_m.get()._field_except != nullptr)) {
		if ((_54632_m.get()._field_func.get()._field_result == nullptr) || (!(_54632_m.get()._field_assigned))) {
			_55417_obj+=jule::Str("if (!except.ok()) ", 18);
			_55417_obj+=_1ada209c7_scope((*_self_)._field_oc.get()._field_sc.ptr(), _54632_m.get()._field_except);
			_55417_obj+=jule::Str("\n", 1);
		} else {
			jule::Bool _56721_forwarded = _1ada89cc7_is_forwarded(_54632_m.get()._field_except);
			_55417_obj+=jule::Str("(except.ok()) ? (except.result) : (", 35);
			if (_56721_forwarded) {
				_55417_obj+=jule::Str("{", 1);
			}
			_55417_obj+=_1ada209c7_scope((*_self_)._field_oc.get()._field_sc.ptr(), _54632_m.get()._field_except);
			if (_56721_forwarded) {
				_55417_obj+=jule::Str(" ", 1);
				_55417_obj+=_1ada87c92_init_expr(&(*_self_), _54632_m.get()._field_func.get()._field_result);
				_55417_obj+=jule::Str(";}", 2);
			}
			_55417_obj+=jule::Str(");\n", 3);
		}
		_1ada9b646_done_indent((*_self_)._field_oc.ptr());
	} else {
		_55417_obj+=jule::Str("if (!except.ok()) jule::panic(jule::Str(\"", 41);
		_55417_obj+=jule::Str("unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 98);
		_55417_obj+=_1adac5dac_loc_info((*_self_)._field_oc.ptr(), _54632_m.get()._field_token);
		_55417_obj+=jule::Str("\"));\n", 5);
		if ((!(_1ac676ec0_is_void(_54632_m.get()._field_func.get()._field_decl.ptr())))) {
			_55417_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
			_55417_obj+=jule::Str("(except.result);\n", 17);
		}
		_1ada9b646_done_indent((*_self_)._field_oc.ptr());
	}
	_55417_obj+=_1ada9aea3_indent((*_self_)._field_oc.ptr());
	_55417_obj+=jule::Str("})", 2);
	return _55417_obj;
}



inline jule::Str _1ada7de75_slice(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac66949b_SliceExprModel> _59828_m) {
	if ((_59828_m.get()._field_elems.len() == 0LL)) {
		return (static__1adb03390_as_slice(_59828_m.get()._field_elem_kind) + jule::Str("()", 2));
	}
	jule::Str _60217_obj = static__1adb03390_as_slice(_59828_m.get()._field_elem_kind);
	_60217_obj+=jule::Str("({", 2);
	_60217_obj+=_1ad971c9c_args(&(*_self_), _59828_m.get()._field_elems);
	_60217_obj+=jule::Str("})", 2);
	return _60217_obj;
}



inline jule::Str _1ada7e32c_indexing(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac6699eb_IndexingExprModel> _60931_m) {
	jule::Str _61017_obj = _1ada8717b_model(&(*_self_), _60931_m.get()._field_expr.get()._field_model);
	{
		
		if (_1e6ae3d5e_PRODUCTION || (_1ad42c57c_ptr(_60931_m.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1ad42da67_map(_60931_m.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b121e7bc:;
			{
				_61017_obj+=jule::Str("[", 1);
				_61017_obj+=_1ada87533_expr(&(*_self_), _60931_m.get()._field_index.get()._field_model);
				_61017_obj+=jule::Str("]", 1);
			}
		}
		else {
			_case_begin_1b121d744:;
			{
				_61017_obj+=jule::Str(".at(\"", 5);
				_61017_obj+=_1adac5dac_loc_info((*_self_)._field_oc.ptr(), _60931_m.get()._field_token);
				_61017_obj+=jule::Str("\",", 2);
				_61017_obj+=_1ada87533_expr(&(*_self_), _60931_m.get()._field_index.get()._field_model);
				_61017_obj+=jule::Str(")", 1);
			}
		}
		_match_end_1b121d6de:;
	}
	return _61017_obj;
}



inline jule::Str _1ada7e6d4_unsafe_indexing(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ada69d2e_UnsafeIndexingExprModel> _62938_m) {
	jule::Str _63017_obj = _1ada8717b_model(&(*_self_), _62938_m.get()._field_node.get()._field_expr.get()._field_model);
	{
		
		if (_1e6ae3d5e_PRODUCTION || (_1ad42c57c_ptr(_62938_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1ad42da67_map(_62938_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b122433d:;
			{
				_63017_obj+=jule::Str("[", 1);
				_63017_obj+=_1ada87533_expr(&(*_self_), _62938_m.get()._field_node.get()._field_index.get()._field_model);
				_63017_obj+=jule::Str("]", 1);
			}
		}
		else {
			_case_begin_1b122321b:;
			{
				_63017_obj+=jule::Str(".__at(", 6);
				_63017_obj+=_1ada87533_expr(&(*_self_), _62938_m.get()._field_node.get()._field_index.get()._field_model);
				_63017_obj+=jule::Str(")", 1);
			}
		}
		_match_end_1b12231a5:;
	}
	return _63017_obj;
}



inline jule::Str _1ada7ea8b_anon_func(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac669e4c_AnonFnExprModel> _64732_m) {
	jule::Str _64817_obj = static__1adb05d54_func(_64732_m.get()._field_func);
	_64817_obj+=jule::Str("([=]", 4);
	_64817_obj+=_1adae6383_params_ins((*_self_)._field_oc.ptr(), _64732_m.get()._field_func.get()._field_params);
	_64817_obj+=jule::Str(" mutable -> ", 12);
	_64817_obj+=static__1adb05738_func_ins_result(_64732_m.get()._field_func);
	_64817_obj+=jule::Str(" ", 1);
	_64817_obj+=_1ada21786_func_scope((*_self_)._field_oc.get()._field_sc.ptr(), _64732_m.get()._field_func);
	_64817_obj+=jule::Str(")", 1);
	return _64817_obj;
}



inline jule::Str _1ada7ee43_map(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac66a8ed_MapExprModel> _65926_m) {
	jule::Str _66017_obj = jule::Str("jule::Map<", 10);
	_66017_obj+=static__1adb06162_kind(_65926_m.get()._field_key_kind);
	_66017_obj+=jule::Str(",", 1);
	_66017_obj+=static__1adb06162_kind(_65926_m.get()._field_val_kind);
	_66017_obj+=jule::Str(">({", 3);
	if ((_65926_m.get()._field_entries.len() > 0LL)) {
		{
			auto &expr = _65926_m.get()._field_entries;
			auto it = expr.begin();
			_iter_begin_1b122c368:;
			if (it != expr.end()) {
				jule::Ptr<_1ac66a39d_KeyValPairExprModel> _1b122c566_pair = *it;
				{
					jule::Str _66725_pair_obj = jule::Str("{", 1);
					_66725_pair_obj+=_1ada87533_expr(&(*_self_), _1b122c566_pair.get()._field_key);
					_66725_pair_obj+=jule::Str(",", 1);
					_66725_pair_obj+=_1ada87533_expr(&(*_self_), _1b122c566_pair.get()._field_val);
					_66725_pair_obj+=jule::Str("}", 1);
					_66017_obj+=_66725_pair_obj;
					_66017_obj+=jule::Str(",", 1);
				}
				_iter_next_1b122c368:;
				++it;
				goto _iter_begin_1b122c368;
			}
			_iter_end_1b122c368:;
		}
		(_66017_obj).mut_slice(0LL,_66017_obj.len() - 1LL);
	}
	_66017_obj+=jule::Str("})", 2);
	return _66017_obj;
}



inline jule::Str _1ada802ea_slicing(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac66b04c_SlicingExprModel> _68130_m) {
	jule::Str _68217_obj = _1ada8717b_model(&(*_self_), _68130_m.get()._field_expr);
	_68217_obj+=jule::Str(".slice(", 7);
	if ((!(_1e6ae3d5e_PRODUCTION))) {
		_68217_obj+=jule::Str("\"", 1);
		_68217_obj+=_1adac5dac_loc_info((*_self_)._field_oc.ptr(), _68130_m.get()._field_token);
		_68217_obj+=jule::Str("\",", 2);
	}
	_68217_obj+=_1ada87533_expr(&(*_self_), _68130_m.get()._field_left);
	if (_68130_m.get()._field_right != jule::Any(jule::Any(nullptr))) {
		_68217_obj+=jule::Str(",", 1);
		_68217_obj+=_1ada87533_expr(&(*_self_), _68130_m.get()._field_right);
	}
	_68217_obj+=jule::Str(")", 1);
	return _68217_obj;
}



inline jule::Str _1ada806a2_trait_sub(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac66b69b_TraitSubIdentExprModel> _69832_m) {
	jule::Str _69917_obj = static__1ada8e1d8_trait_decl(_69832_m.get()._field_trt);
	_69917_obj+=jule::Str("_mptr_data", 10);
	_69917_obj+=jule::Str("[(", 2);
	_69917_obj+=_1ada8717b_model(&(*_self_), _69832_m.get()._field_expr);
	_69917_obj+=jule::Str(").type_offset].", 15);
	_69917_obj+=static__1ada8dabc_func(_69832_m.get()._field_method);
	return _69917_obj;
}



inline jule::Str _1ada80a59_structure_sub(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac66c0a3_StructSubIdentExprModel> _70836_m) {
	jule::Str _70917_obj = _1ada8717b_model(&(*_self_), jule::Any(_70836_m.get()._field_expr));
	if ((_70836_m.get()._field_field != nullptr)) {
		if ((_1ad42c57c_ptr(_70836_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_70917_obj+=jule::Str("->", 2);
		} else if ((_1ad42c2a2_sptr(_70836_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_70917_obj+=jule::Str(".get(", 5);
			if ((!(_1e6ae3d5e_PRODUCTION))) {
				_70917_obj+=jule::Str("\"", 1);
				_70917_obj+=_1adac5dac_loc_info((*_self_)._field_oc.ptr(), _70836_m.get()._field_token);
				_70917_obj+=jule::Str("\"", 1);
			}
			_70917_obj+=jule::Str(").", 2);
		} else {
			_70917_obj+=jule::Str(".", 1);
		}
		_70917_obj+=static__1ada8ee20_field(_70836_m.get()._field_field.get()._field_decl);
	}
	return _70917_obj;
}



inline jule::Str _1ada80e11_common_ident(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac66cdea_CommonIdentExprModel> _72927_m) {
	return _72927_m.get()._field_ident;
}



inline jule::Str _1ada812b8_common_sub(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac66d5d2_CommonSubIdentExprModel> _73333_m) {
	jule::Str _73417_obj = _1ada8717b_model(&(*_self_), _73333_m.get()._field_expr);
	{
		
		if ((_1ad42c57c_ptr(_73333_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1b0dc2ccd:;
			{
				_73417_obj+=jule::Str("->", 2);
			}
		}
		else if ((_1ad42c2a2_sptr(_73333_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1b0dc2a25:;
			{
				_73417_obj+=jule::Str(".get(", 5);
				if ((!(_1e6ae3d5e_PRODUCTION))) {
					_73417_obj+=jule::Str("\n", 1);
					_73417_obj+=_1adac5dac_loc_info((*_self_)._field_oc.ptr(), _73333_m.get()._field_token);
					_73417_obj+=jule::Str("\n", 1);
				}
				_73417_obj+=jule::Str(").", 2);
			}
		}
		else {
			_case_begin_1b0dc26a1:;
			{
				_73417_obj+=jule::Str(".", 1);
			}
		}
		_match_end_1b0dc264b:;
	}
	_73417_obj+=_73333_m.get()._field_ident;
	return _73417_obj;
}



inline jule::Str _1ada81670_array(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac66ca98_ArrayExprModel> _75328_m) {
	jule::Str _75417_obj = static__1adb04a01_array(_75328_m.get()._field_kind);
	if ((_75328_m.get()._field_elems.len() == 0LL)) {
		_75417_obj+=jule::Str("()", 2);
		return _75417_obj;
	}
	if ((_75328_m.get()._field_elems.len() == 2LL) && (_75328_m.get()._field_elems[1LL] == jule::Any(jule::Any(nullptr)))) {
		_75417_obj+=jule::Str("(", 1);
		_75417_obj+=_1ada87533_expr(&(*_self_), _75328_m.get()._field_elems[0LL]);
		_75417_obj+=jule::Str(")", 1);
		return _75417_obj;
	}
	_75417_obj+=jule::Str("({", 2);
	_75417_obj+=_1ad971c9c_args(&(*_self_), _75328_m.get()._field_elems);
	_75417_obj+=jule::Str("})", 2);
	return _75417_obj;
}



inline jule::Str _1ada81a27_func_ins_common(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac67a501_FnIns> _77634_m) {
	jule::Str _77717_obj = static__1adb05d54_func(_77634_m);
	_77717_obj+=jule::Str("(", 1);
	_77717_obj+=_1ada81dce_func_ins(&(*_self_), _77634_m);
	_77717_obj+=jule::Str(")", 1);
	return _77717_obj;
}



inline jule::Str _1ada81dce_func_ins(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac67a501_FnIns> _78527_m) {
	if ((_78527_m.get()._field_decl != nullptr) && _78527_m.get()._field_decl.get()._field_cpp_linked) {
		jule::Ptr<_1aaeaeb7d_Directive> _78717_d = _1adb0015b_find_directive(_78527_m.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));
		if ((_78717_d != nullptr)) {
			jule::Str _78925_obj = _1ada8815a_concat_all_parts(_78717_d.get()._field_args);
			_78925_obj+=jule::Str("::", 2);
			_78925_obj+=static__1ada8ddca_func_ins(_78527_m);
			return _78925_obj;
		}
	}
	return static__1ada8ddca_func_ins(_78527_m);
}



inline jule::Str _1ada82286_tuple(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac66d912_TupleExprModel> _79828_m) {
	jule::Str _79917_obj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _79828_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1b0dced2e:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e6975_Data> _1b0dcedea_d = *it;
			{
				_79917_obj+=_1ada87533_expr(&(*_self_), _1b0dcedea_d.get()._field_model);
				_79917_obj+=jule::Str(",", 1);
			}
			_iter_next_1b0dced2e:;
			++it;
			goto _iter_begin_1b0dced2e;
		}
		_iter_end_1b0dced2e:;
	}
	(_79917_obj).mut_slice(0LL,_79917_obj.len() - 1LL);
	_79917_obj+=jule::Str(")", 1);
	return _79917_obj;
}



inline jule::Str _1ada8263d_new_call(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac66ec43_BuiltinNewCallExprModel> _80931_m) {
	jule::Str _81017_obj = jule::Str("jule::new_ptr<", 14);
	_81017_obj+=static__1adb06162_kind(_80931_m.get()._field_kind);
	_81017_obj+=jule::Str(">(", 2);
	if (_80931_m.get()._field_init != jule::Any(jule::Any(nullptr))) {
		_81017_obj+=_1ada87533_expr(&(*_self_), _80931_m.get()._field_init);
	}
	_81017_obj+=jule::Str(")", 1);
	return _81017_obj;
}



inline jule::Str _1ada829e5_out_call(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac66ddeb_BuiltinOutCallExprModel> _82031_m) {
	if (_82031_m.get()._field_debug && _1e6ae3d5e_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _82417_obj = jule::Str("jule::out(", 10);
	_82417_obj+=_1ada87533_expr(&(*_self_), _82031_m.get()._field_expr);
	_82417_obj+=jule::Str(")", 1);
	return _82417_obj;
}



inline jule::Str _1ada82d9c_outln_call(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac66e3b3_BuiltinOutlnCallExprModel> _83033_m) {
	if (_83033_m.get()._field_debug && _1e6ae3d5e_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _83417_obj = jule::Str("jule::outln(", 12);
	_83417_obj+=_1ada87533_expr(&(*_self_), _83033_m.get()._field_expr);
	_83417_obj+=jule::Str(")", 1);
	return _83417_obj;
}



inline jule::Str _1ada83254_panic_call(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac67020a_BuiltinPanicCallExprModel> _84033_m) {
	jule::Str _84117_obj = jule::Str("jule::panic(", 12);
	_84117_obj+=_1ada87533_expr(&(*_self_), _84033_m.get()._field_expr);
	_84117_obj+=jule::Str(" + jule::Str(\"\\nlocation: ", 26);
	_84117_obj+=_1adac5dac_loc_info((*_self_)._field_oc.ptr(), _84033_m.get()._field_token);
	_84117_obj+=jule::Str("\"));", 4);
	return _84117_obj;
}



inline jule::Str _1ada8360b_assert_call(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac6707c1_BuiltinAssertCallExprModel> _84934_m) {
	if (_1e6ae3d5e_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _85317_obj = jule::Str("if (!(", 6);
	_85317_obj+=_1ada87533_expr(&(*_self_), _84934_m.get()._field_expr);
	_85317_obj+=jule::Str(")) jule::panic(jule::Str(", 25);
	_85317_obj+=_1ada88e2a_cstr_lit(static_cast<jule::Slice<jule::U8>>(_84934_m.get()._field_log));
	_85317_obj+=jule::Str(") + jule::Str(\"\\nlocation: ", 27);
	_85317_obj+=_1adac5dac_loc_info((*_self_)._field_oc.ptr(), _84934_m.get()._field_token);
	_85317_obj+=jule::Str("\"));", 4);
	return _85317_obj;
}



inline jule::Str _1ada839b3_error_call(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac671816_BuiltinErrorCallExprModel> _86333_m) {
	jule::Str _86417_obj = jule::Str("return ", 7);
	if (_1ac676ec0_is_void(_86333_m.get()._field_func.get()._field_decl.ptr())) {
		_86417_obj+=jule::Str("jule::VoidExceptional(", 22);
	} else {
		_86417_obj+=jule::Str("jule::Exceptional<", 18);
		_86417_obj+=static__1adb06162_kind(_86333_m.get()._field_func.get()._field_result);
		_86417_obj+=jule::Str(">(", 2);
	}
	_86417_obj+=_1ada87533_expr(&(*_self_), _86333_m.get()._field_err);
	_86417_obj+=jule::Str(")", 1);
	return _86417_obj;
}



inline jule::Str _1ada83d6a_make_call(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac670d87_BuiltinMakeCallExprModel> _87732_m) {
	jule::Str _87817_obj = jule::Str();
	if (_87732_m.get()._field_len != jule::Any(jule::Any(nullptr))) {
		_87817_obj+=_1ada87533_expr(&(*_self_), _87732_m.get()._field_len);
	} else {
		_87817_obj+=jule::Str("0", 1);
	}
	if (_87732_m.get()._field_cap != jule::Any(jule::Any(nullptr))) {
		_87817_obj+=jule::Str(",", 1) + _1ada87533_expr(&(*_self_), _87732_m.get()._field_cap);
	}
	if ((_1ad42c857_enm(_1ad42ce0c_slc(_87732_m.get()._field_kind.ptr()).get()._field_elem.ptr()) != nullptr)) {
		_87817_obj+=jule::Str(",", 1);
		_87817_obj+=_1ada87c92_init_expr(&(*_self_), _1ad42ce0c_slc(_87732_m.get()._field_kind.ptr()).get()._field_elem);
		if (_87732_m.get()._field_cap != jule::Any(jule::Any(nullptr))) {
			(_87817_obj).buffer.insert(0, ((static__1adb06162_kind(_87732_m.get()._field_kind) + jule::Str("::alloc(", 8))));
		} else {
			(_87817_obj).buffer.insert(0, ((static__1adb06162_kind(_87732_m.get()._field_kind) + jule::Str("::alloc_def(", 12))));
		}
	} else {
		(_87817_obj).buffer.insert(0, ((static__1adb06162_kind(_87732_m.get()._field_kind) + jule::Str("::alloc(", 8))));
	}
	_87817_obj+=jule::Str(")", 1);
	return _87817_obj;
}



inline jule::Str _1ada84222_push_to_slice(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ada6a192_PushToSliceExprModel> _90436_m) {
	jule::Str _90513_dest = _1ada8717b_model(&(*_self_), _90436_m.get()._field_dest);
	jule::Str _90617_obj = _90513_dest;
	_90617_obj+=jule::Str(" = jule::alloc_for_append(", 26);
	_90617_obj+=_90513_dest;
	_90617_obj+=jule::Str(",", 1);
	_90617_obj+=_1ad258364_itoa(static_cast<jule::I64>(_90436_m.get()._field_elems.get()._field_elems.len()));
	_90617_obj+=jule::Str(");", 2);
	{
		auto &expr = _90436_m.get()._field_elems.get()._field_elems;
		auto it = expr.begin();
		_iter_begin_1b0de862d:;
		if (it != expr.end()) {
			jule::Any _1b0de86a5_e = *it;
			{
				_90617_obj+=_90513_dest;
				_90617_obj+=jule::Str(".__push(", 8);
				_90617_obj+=_1ada8717b_model(&(*_self_), _1b0de86a5_e);
				_90617_obj+=jule::Str(");", 2);
			}
			_iter_next_1b0de862d:;
			++it;
			goto _iter_begin_1b0de862d;
		}
		_iter_end_1b0de862d:;
	}
	return _90617_obj;
}



inline jule::Str _1ada845c9_append_call(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac67134e_BuiltinAppendCallExprModel> _92234_m) {
	jule::Str _92317_obj = jule::Str("jule::append(", 13);
	_92317_obj+=_1ada8717b_model(&(*_self_), _92234_m.get()._field_dest);
	_92317_obj+=jule::Str(",", 1);
	_92317_obj+=_1ada8717b_model(&(*_self_), _92234_m.get()._field_elements);
	_92317_obj+=jule::Str(")", 1);
	return _92317_obj;
}



inline jule::Str _1ada84981_clone_call(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac66e77b_BuiltinCloneCallExprModel> _93133_m) {
	jule::Str _93217_obj = jule::Str("jule::clone(", 12);
	_93217_obj+=_1ada8717b_model(&(*_self_), _93133_m.get()._field_expr);
	_93217_obj+=jule::Str(")", 1);
	return _93217_obj;
}



inline jule::Str _1ada84d38_sizeof(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac671b46_SizeofExprModel> _93829_m) {
	jule::Str _93917_obj = jule::Str("sizeof(", 7);
	_93917_obj+=_1ada87533_expr(&(*_self_), _93829_m.get()._field_expr);
	_93917_obj+=jule::Str(")", 1);
	return _93917_obj;
}



inline jule::Str _1ada851e0_alignof(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac6722ea_AlignofExprModel> _94530_m) {
	jule::Str _94617_obj = jule::Str("alignof(", 8);
	_94617_obj+=_1ada87533_expr(&(*_self_), _94530_m.get()._field_expr);
	_94617_obj+=jule::Str(")", 1);
	return _94617_obj;
}



inline jule::Str _1ada85597_rune_lit(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac6725b4_RuneExprModel> _95223_m) {
	if ((_95223_m.get()._field_code <= 127LL)) {
		jule::Str _95421_b = _1ada887ba_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_95223_m.get()._field_code)));
		if ((_95421_b == jule::Str("'", 1))) {
			_95421_b=jule::Str("\\'", 2);
		}
		return ((jule::Str("'", 1) + _95421_b) + jule::Str("'", 1));
	}
	return _1ada89623_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_95223_m.get()._field_code)));
}



inline jule::Str _1ada8594e_structure_static(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac66c669_StructStaticIdentExprModel> _96335_m) {
	return static__1ada8ddca_func_ins(_96335_m.get()._field_method);
}



inline jule::Str _1ada85d06_integrated_to_str(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac672927_IntegratedToStrExprModel> _96740_m) {
	jule::Str _96817_obj = jule::Str("jule::to_str(", 13);
	_96817_obj+=_1ada8717b_model(&(*_self_), _96740_m.get()._field_expr);
	_96817_obj+=jule::Str(")", 1);
	return _96817_obj;
}



inline jule::Str _1ada861ad_backend_emit(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac672d56_BackendEmitExprModel> _97435_m) {
	if ((_97435_m.get()._field_exprs.len() == 0LL)) {
		return _97435_m.get()._field_code;
	}
	{
		auto &expr = _97435_m.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1b0e06619:;
		if (it != expr.end()) {
			jule::I64 _1b0e07186_i = it - expr.begin();
			jule::Any _1b0e0730c_expr = *it;
			{
				_97435_m.get()._field_exprs[_1b0e07186_i]=jule::Any(_1ada87533_expr(&(*_self_), _1b0e0730c_expr));
			}
			_iter_next_1b0e06619:;
			++it;
			_1b0e07186_i++;
			goto _iter_begin_1b0e06619;
		}
		_iter_end_1b0e06619:;
	}
	return _1ad4a15e0_format(_97435_m.get()._field_code,_97435_m.get()._field_exprs);
}



inline jule::Str _1ada86565_free(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ac6731a8_FreeExprModel> _98427_m) {
	if (_1e6ae5b52_RC) {
		return (_1ada87533_expr(&(*_self_), _98427_m.get()._field_expr) + jule::Str(".dealloc()", 10));
	}
	return (_1ada87533_expr(&(*_self_), _98427_m.get()._field_expr) + jule::Str(".__free()", 9));
}



inline jule::Str _1ada8691c_mut_slicing(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ada6a67b_MutSlicingExprModel> _99134_m) {
	jule::Str _99217_obj = jule::Str("(", 1);
	_99217_obj+=_1ada8717b_model(&(*_self_), _99134_m.get()._field_expr);
	_99217_obj+=jule::Str(").mut_slice(", 12);
	if ((!(_1e6ae3d5e_PRODUCTION))) {
		_99217_obj+=jule::Str("\"", 1);
		_99217_obj+=_1adac5dac_loc_info((*_self_)._field_oc.ptr(), _99134_m.get()._field_token);
		_99217_obj+=jule::Str("\",", 2);
	}
	_99217_obj+=_1ada87533_expr(&(*_self_), _99134_m.get()._field_left);
	if (_99134_m.get()._field_right != jule::Any(jule::Any(nullptr))) {
		_99217_obj+=jule::Str(",", 1);
		_99217_obj+=_1ada87533_expr(&(*_self_), _99134_m.get()._field_right);
	}
	_99217_obj+=jule::Str(");", 2);
	return _99217_obj;
}



inline jule::Str _1ada86cc4_str_insert_begin(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ada6ab65_StrInsertBeginExprModel> _100939_m) {
	jule::Str _101017_obj = jule::Str("(", 1);
	_101017_obj+=_1ada8717b_model(&(*_self_), _100939_m.get()._field_dest);
	_101017_obj+=jule::Str(").buffer.insert(0, (", 20);
	_101017_obj+=_1ada8717b_model(&(*_self_), _100939_m.get()._field_expr);
	_101017_obj+=jule::Str("));", 3);
	return _101017_obj;
}



inline jule::Str _1ada8717b_model(_1ada27627_ExprCoder* _self_,jule::Any _101828_m) {
	{
		auto &_match_expr{ _101828_m };
		
		if (_match_expr.type_is<jule::Ptr<_1ad3e6975_Data>>()) {
			_case_begin_1b0e103d1:;
			{
				return _1ada8717b_model(&(*_self_), _101828_m.operator jule::Ptr<_1ad3e6975_Data>().get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad429931_TypeKind>>()) {
			_case_begin_1b0e10d0a:;
			{
				return static__1adb06162_kind(_101828_m.operator jule::Ptr<_1ad429931_TypeKind>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad2c1d8e_Const>>()) {
			_case_begin_1b0e106cd:;
			{
				return _1ada30146_constant(&(*_self_), _101828_m.operator jule::Ptr<_1ad2c1d8e_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad39e037_Var>>()) {
			_case_begin_1b0e10744:;
			{
				return _1ada1bb7c_var(&(*_self_), _101828_m.operator jule::Ptr<_1ad39e037_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac85d096_Trait>>()) {
			_case_begin_1b0e107aa:;
			{
				return static__1ada8e1d8_trait_decl(_101828_m.operator jule::Ptr<_1ac85d096_Trait>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac661075_Struct>>()) {
			_case_begin_1b0e10821:;
			{
				return _1ada1bce2_structure(&(*_self_), _101828_m.operator jule::Ptr<_1ac661075_Struct>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac664551_StructIns>>()) {
			_case_begin_1b0e10975:;
			{
				return _1ada5726c_structure_ins(&(*_self_), _101828_m.operator jule::Ptr<_1ac664551_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac67a501_FnIns>>()) {
			_case_begin_1b0e109db:;
			{
				return _1ada81a27_func_ins_common(&(*_self_), _101828_m.operator jule::Ptr<_1ac67a501_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ada69a65_UnsafeBinopExprModel>>()) {
			_case_begin_1b0e10a52:;
			{
				return _1ad9719c2_unsafe_binary(&(*_self_), _101828_m.operator jule::Ptr<_1ada69a65_UnsafeBinopExprModel>().get()._field_node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac666c07_BinopExprModel>>()) {
			_case_begin_1b0e10ac9:;
			{
				return _1ada653ce_binary(&(*_self_), _101828_m.operator jule::Ptr<_1ac666c07_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac667158_UnaryExprModel>>()) {
			_case_begin_1b0e10b51:;
			{
				return _1ada573d2_unary(&(*_self_), _101828_m.operator jule::Ptr<_1ac667158_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac667a4e_StructLitExprModel>>()) {
			_case_begin_1b0e10bc8:;
			{
				return _1ad9be24a_structure_lit(&(*_self_), _101828_m.operator jule::Ptr<_1ac667a4e_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac667e39_AllocStructLitExprModel>>()) {
			_case_begin_1b0e111d4:;
			{
				return _1ad970020_alloc_structure(&(*_self_), _101828_m.operator jule::Ptr<_1ac667e39_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac668566_CastingExprModel>>()) {
			_case_begin_1b0e1125b:;
			{
				return _1ad970185_casting(&(*_self_), _101828_m.operator jule::Ptr<_1ac668566_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66904a_FnCallExprModel>>()) {
			_case_begin_1b0e112d3:;
			{
				return _1ada7db78_func_call(&(*_self_), _101828_m.operator jule::Ptr<_1ac66904a_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66949b_SliceExprModel>>()) {
			_case_begin_1b0e1135a:;
			{
				return _1ada7de75_slice(&(*_self_), _101828_m.operator jule::Ptr<_1ac66949b_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66ca98_ArrayExprModel>>()) {
			_case_begin_1b0e113d2:;
			{
				return _1ada81670_array(&(*_self_), _101828_m.operator jule::Ptr<_1ac66ca98_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ada69d2e_UnsafeIndexingExprModel>>()) {
			_case_begin_1b0e11459:;
			{
				return _1ada7e6d4_unsafe_indexing(&(*_self_), _101828_m.operator jule::Ptr<_1ada69d2e_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac6699eb_IndexingExprModel>>()) {
			_case_begin_1b0e114d1:;
			{
				return _1ada7e32c_indexing(&(*_self_), _101828_m.operator jule::Ptr<_1ac6699eb_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac669e4c_AnonFnExprModel>>()) {
			_case_begin_1b0e11558:;
			{
				return _1ada7ea8b_anon_func(&(*_self_), _101828_m.operator jule::Ptr<_1ac669e4c_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66a8ed_MapExprModel>>()) {
			_case_begin_1b0e115d0:;
			{
				return _1ada7ee43_map(&(*_self_), _101828_m.operator jule::Ptr<_1ac66a8ed_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66b04c_SlicingExprModel>>()) {
			_case_begin_1b0e11657:;
			{
				return _1ada802ea_slicing(&(*_self_), _101828_m.operator jule::Ptr<_1ac66b04c_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66b69b_TraitSubIdentExprModel>>()) {
			_case_begin_1b0e116ce:;
			{
				return _1ada806a2_trait_sub(&(*_self_), _101828_m.operator jule::Ptr<_1ac66b69b_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>>()) {
			_case_begin_1b0e11756:;
			{
				return _1ada80a59_structure_sub(&(*_self_), _101828_m.operator jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66cdea_CommonIdentExprModel>>()) {
			_case_begin_1b0e117cd:;
			{
				return _1ada80e11_common_ident(&(*_self_), _101828_m.operator jule::Ptr<_1ac66cdea_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66d5d2_CommonSubIdentExprModel>>()) {
			_case_begin_1b0e11855:;
			{
				return _1ada812b8_common_sub(&(*_self_), _101828_m.operator jule::Ptr<_1ac66d5d2_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66d912_TupleExprModel>>()) {
			_case_begin_1b0e118cc:;
			{
				return _1ada82286_tuple(&(*_self_), _101828_m.operator jule::Ptr<_1ac66d912_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66ddeb_BuiltinOutCallExprModel>>()) {
			_case_begin_1b0e11954:;
			{
				return _1ada829e5_out_call(&(*_self_), _101828_m.operator jule::Ptr<_1ac66ddeb_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66e3b3_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1b0e119cb:;
			{
				return _1ada82d9c_outln_call(&(*_self_), _101828_m.operator jule::Ptr<_1ac66e3b3_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66ec43_BuiltinNewCallExprModel>>()) {
			_case_begin_1b0e11a53:;
			{
				return _1ada8263d_new_call(&(*_self_), _101828_m.operator jule::Ptr<_1ac66ec43_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac67020a_BuiltinPanicCallExprModel>>()) {
			_case_begin_1b0e11aca:;
			{
				return _1ada83254_panic_call(&(*_self_), _101828_m.operator jule::Ptr<_1ac67020a_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac6707c1_BuiltinAssertCallExprModel>>()) {
			_case_begin_1b0e11b52:;
			{
				return _1ada8360b_assert_call(&(*_self_), _101828_m.operator jule::Ptr<_1ac6707c1_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac671816_BuiltinErrorCallExprModel>>()) {
			_case_begin_1b0e11bc9:;
			{
				return _1ada839b3_error_call(&(*_self_), _101828_m.operator jule::Ptr<_1ac671816_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac670d87_BuiltinMakeCallExprModel>>()) {
			_case_begin_1b0e11c51:;
			{
				return _1ada83d6a_make_call(&(*_self_), _101828_m.operator jule::Ptr<_1ac670d87_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac67134e_BuiltinAppendCallExprModel>>()) {
			_case_begin_1b0e11cc8:;
			{
				return _1ada845c9_append_call(&(*_self_), _101828_m.operator jule::Ptr<_1ac67134e_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66e77b_BuiltinCloneCallExprModel>>()) {
			_case_begin_1b0e11d50:;
			{
				return _1ada84981_clone_call(&(*_self_), _101828_m.operator jule::Ptr<_1ac66e77b_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac671b46_SizeofExprModel>>()) {
			_case_begin_1b0e11dc7:;
			{
				return _1ada84d38_sizeof(&(*_self_), _101828_m.operator jule::Ptr<_1ac671b46_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac6722ea_AlignofExprModel>>()) {
			_case_begin_1b0e11e4e:;
			{
				return _1ada851e0_alignof(&(*_self_), _101828_m.operator jule::Ptr<_1ac6722ea_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac6725b4_RuneExprModel>>()) {
			_case_begin_1b0e11ec6:;
			{
				return _1ada85597_rune_lit(&(*_self_), _101828_m.operator jule::Ptr<_1ac6725b4_RuneExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66c669_StructStaticIdentExprModel>>()) {
			_case_begin_1b0e1204d:;
			{
				return _1ada8594e_structure_static(&(*_self_), _101828_m.operator jule::Ptr<_1ac66c669_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac672927_IntegratedToStrExprModel>>()) {
			_case_begin_1b0e120c5:;
			{
				return _1ada85d06_integrated_to_str(&(*_self_), _101828_m.operator jule::Ptr<_1ac672927_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac672d56_BackendEmitExprModel>>()) {
			_case_begin_1b0e1214c:;
			{
				return _1ada861ad_backend_emit(&(*_self_), _101828_m.operator jule::Ptr<_1ac672d56_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac6731a8_FreeExprModel>>()) {
			_case_begin_1b0e121c4:;
			{
				return _1ada86565_free(&(*_self_), _101828_m.operator jule::Ptr<_1ac6731a8_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ada6a67b_MutSlicingExprModel>>()) {
			_case_begin_1b0e1224b:;
			{
				return _1ada8691c_mut_slicing(&(*_self_), _101828_m.operator jule::Ptr<_1ada6a67b_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ada6ab65_StrInsertBeginExprModel>>()) {
			_case_begin_1b0e122c3:;
			{
				return _1ada86cc4_str_insert_begin(&(*_self_), _101828_m.operator jule::Ptr<_1ada6ab65_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1b0e10579:;
			{
				return jule::Str("<unimplemented_expression_model>", 32);
			}
		}
		_match_end_1b0e1049c:;
	}
}



inline jule::Str _1ada87533_expr(_1ada27627_ExprCoder* _self_,jule::Any _111527_e) {
	jule::Str _111617_obj = _1ada8717b_model(&(*_self_), _111527_e);
	if ((_111617_obj.len() == 0LL) || (_111617_obj[0LL] != '(')) {
		return _111617_obj;
	}
	{
		auto &_match_expr{ _111527_e };
		
		if (_match_expr.type_is<jule::Ptr<_1ac666c07_BinopExprModel>>()) {
			_case_begin_1b0e2cd9e:;
			{
				(_111617_obj).mut_slice(1LL,_111617_obj.len() - 1LL);
			}
		}
		_match_end_1b0e2cbc3:;
	}
	return _111617_obj;
}



inline jule::Str _1ada878da_val(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ad3e7c84_Value> _112726_v) {
	if (_1ad3e747b_is_const(_112726_v.get()._field_data.ptr())) {
		return _1ada30146_constant(&(*_self_), _112726_v.get()._field_data.get()._field_constant,(_112726_v.get()._field_data.get()._field_kind != nullptr) && _1ad4322b8_is_f32(_1ad42bec7_prim(_112726_v.get()._field_data.get()._field_kind.ptr()).ptr()));
	}
	return _1ada87533_expr(&(*_self_), _112726_v.get()._field_data.get()._field_model);
}



inline jule::Str _1ada87c92_init_expr(_1ada27627_ExprCoder* _self_,jule::Ptr<_1ad429931_TypeKind> _113432_t) {
	if ((_1ad42c57c_ptr(_113432_t.ptr()) != nullptr)) {
		return jule::Str("nullptr", 7);
	}
	jule::Ptr<_1ac724545_Enum> _113817_enm = _1ad42c857_enm(_113432_t.ptr());
	if ((_113817_enm != nullptr)) {
		return _1ada878da_val(&(*_self_), _113817_enm.get()._field_items[0LL].get()._field_value);
	}
	return (static__1adb06162_kind(_113432_t) + jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1ada27627_ExprCoder _Src) {
	_Stream << "ExprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1ada8abc9_clone_func_decl(jule::Ptr<_1ac661075_Struct>& _1032_s) {
	jule::Str _1117_obj = static__1adb043d5_structure(_1032_s);
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1ada8aed7_clone_func_def(jule::Ptr<_1ac661075_Struct>& _1631_s) {
	jule::Str _1717_obj = static__1adb043d5_structure(_1631_s);
	_1717_obj+=jule::Str(" ", 1) + _1717_obj;
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1ada8a833_DeriveCoder _Src) {
	_Stream << "DeriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1ada8caee_to_ident(jule::Str _3124_ident) {
	return jule::Str("_", 1) + _3124_ident;
}



inline jule::Str static__1ada8ce0c_addr(jule::U64 _3620_addr) {
	return jule::Str("_", 1) + _1ad258089_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_3620_addr)),15LL);
}



inline jule::Str static__1ada8d2e7_to_out(jule::Str _4522_ident,jule::U64 _4534_addr) {
	if ((_4534_addr != 0LLU)) {
		jule::Str _4721_obj = static__1ada8ce0c_addr(_4534_addr);
		_4721_obj+=jule::Str("_", 1);
		_4721_obj+=_4522_ident;
		return _4721_obj;
	}
	return static__1ada8caee_to_ident(_4522_ident);
}



inline jule::Str static__1ada8d7ae_to_local(jule::I64 _6124_row,jule::I64 _6134_col,jule::Str _6144_ident) {
	jule::Str _6217_obj = _1ad258364_itoa(_6124_row);
	_6217_obj+=_1ad258364_itoa(_6134_col);
	_6217_obj+=jule::Str("_", 1);
	_6217_obj+=_6144_ident;
	return static__1ada8caee_to_ident(_6217_obj);
}



inline jule::Str static__1ada8dabc_func(jule::Ptr<_1ac676a08_Fn>& _7021_f) {
	{
		
		if (_7021_f.get()._field_cpp_linked) {
			_case_begin_1b0e3b264:;
			{
				return _7021_f.get()._field_ident;
			}
		}
		else if ((_7021_f.get()._field_ident == jule::Str("main", 4))) {
			_case_begin_1b0e3b2ca:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1ac67729a_is_method(_7021_f.ptr())) {
			_case_begin_1b0e3a939:;
			{
				jule::Str _7721_obj = static__1ada8d2e7_to_out(_7021_f.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_7021_f)));
				if (_7021_f.get()._field_statically) {
					(_7721_obj).buffer.insert(0, (jule::Str("static_", 7)));
					return _7721_obj;
				}
				return _7721_obj;
			}
		}
		else {
			_case_begin_1b0e3a8c3:;
			{
				return static__1ada8d2e7_to_out(_7021_f.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_7021_f)));
			}
		}
		_match_end_1b0e3a73b:;
	}
}



inline jule::Str static__1ada8ddca_func_ins(jule::Ptr<_1ac67a501_FnIns>& _8929_f) {
	if (_1ac67b17d_is_builtin(_8929_f.ptr())) {
		return jule::Str("jule::", 6) + _8929_f.get()._field_decl.get()._field_ident;
	}
	if (_8929_f.get()._field_decl.get()._field_cpp_linked || (_8929_f.get()._field_generics.len() == 0LL)) {
		return static__1ada8dabc_func(_8929_f.get()._field_decl);
	}
	{
		auto &expr = _8929_f.get()._field_decl.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1b0e401d0:;
		if (it != expr.end()) {
			jule::I64 _1b0e402e0_i = it - expr.begin();
			jule::Ptr<_1ac67a501_FnIns> _1b0e40510_ins = *it;
			{
				if (_1ac67b810_same(_1b0e40510_ins.ptr(), _8929_f)) {
					jule::Str _9825_obj = static__1ada8dabc_func(_8929_f.get()._field_decl);
					_9825_obj+=jule::Str("_", 1);
					_9825_obj+=_1ad258364_itoa(_1b0e402e0_i);
					return _9825_obj;
				}
			}
			_iter_next_1b0e401d0:;
			++it;
			_1b0e402e0_i++;
			goto _iter_begin_1b0e401d0;
		}
		_iter_end_1b0e401d0:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str static__1ada8e1d8_trait_decl(jule::Ptr<_1ac85d096_Trait> _10826_t) {
	if (_1ac6d2866_is_builtin(_10826_t.ptr())) {
		return jule::Str("jule::", 6) + _10826_t.get()._field_ident;
	}
	return static__1ada8d2e7_to_out(_10826_t.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_10826_t)));
}



inline jule::Str static__1ada8e4e6_param(jule::Ptr<_1ac674bd2_Param>& _11622_p) {
	if (_1ab008622_is_anon_ident(_11622_p.get()._field_ident) || _1ab008314_is_ignore_ident(_11622_p.get()._field_ident)) {
		return jule::Str();
	}
	if (_1ac6753db_is_self(_11622_p.ptr())) {
		return jule::Str("_self_", 6);
	}
	return static__1ada8d7ae_to_local(_11622_p.get()._field_token._field_row,_11622_p.get()._field_token._field_column,_11622_p.get()._field_ident);
}



inline jule::Str static__1ada8e804_structure(jule::Ptr<_1ac661075_Struct>& _12726_s) {
	if (_12726_s.get()._field_cpp_linked) {
		if (_1adb0059b_has_directive(_12726_s.get()._field_directives,jule::Str("typedef", 7))) {
			return _12726_s.get()._field_ident;
		}
		return jule::Str("struct ", 7) + _12726_s.get()._field_ident;
	}
	return static__1ada8d2e7_to_out(_12726_s.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_12726_s)));
}



inline jule::Str static__1ada8eb12_structure_ins(jule::Ptr<_1ac664551_StructIns>& _13834_s) {
	if (_13834_s.get()._field_decl.get()._field_cpp_linked || (_13834_s.get()._field_generics.len() == 0LL)) {
		return static__1ada8e804_structure(_13834_s.get()._field_decl);
	}
	{
		auto &expr = _13834_s.get()._field_decl.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1b0e4855c:;
		if (it != expr.end()) {
			jule::I64 _1b0e4868e_i = it - expr.begin();
			jule::Ptr<_1ac664551_StructIns> _1b0e4889d_ins = *it;
			{
				if (_1ac6652dd_same(_1b0e4889d_ins.ptr(), _13834_s)) {
					jule::Str _14425_obj = static__1ada8e804_structure(_13834_s.get()._field_decl);
					_14425_obj+=jule::Str("_", 1);
					_14425_obj+=_1ad258364_itoa(_1b0e4868e_i);
					return _14425_obj;
				}
			}
			_iter_next_1b0e4855c:;
			++it;
			_1b0e4868e_i++;
			goto _iter_begin_1b0e4855c;
		}
		_iter_end_1b0e4855c:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str static__1ada8ee20_field(jule::Ptr<_1ac65ca77_Field>& _15422_f) {
	if (_15422_f.get()._field_owner.get()._field_cpp_linked) {
		return _15422_f.get()._field_ident;
	}
	return jule::Str("_field_", 7) + _15422_f.get()._field_ident;
}



inline jule::Str static__1ada9022d_var(jule::Ptr<_1ad39e037_Var> _16223_v) {
	{
		
		if (_16223_v.get()._field_cpp_linked) {
			_case_begin_1b0e4b818:;
			{
				return _16223_v.get()._field_ident;
			}
		}
		else if ((_16223_v.get()._field_ident == jule::Str("error", 5))) {
			_case_begin_1b0e4aedd:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_16223_v.get()._field_ident == jule::Str("self", 4))) {
			_case_begin_1b0e4b054:;
			{
				if ((_1ad42c2a2_sptr(_16223_v.get()._field_kind.get()._field_kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				}
				return jule::Str("_self_", 6);
			}
		}
		else if ((_16223_v.get()._field_scope != nullptr)) {
			_case_begin_1b0e4b0ba:;
			{
				return static__1ada8d7ae_to_local(_16223_v.get()._field_token._field_row,_16223_v.get()._field_token._field_column,_16223_v.get()._field_ident);
			}
		}
		else {
			_case_begin_1b0e4ae77:;
			{
				return static__1ada8d2e7_to_out(_16223_v.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_16223_v)));
			}
		}
		_match_end_1b0e4aad1:;
	}
}



inline jule::Str static__1ada9053b_iter_begin(jule::U64 _18126_it) {
	return jule::Str("_iter_begin_", 12) + _1ad258089_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_18126_it)),15LL);
}



inline jule::Str static__1ada90849_iter_end(jule::U64 _18624_it) {
	return jule::Str("_iter_end_", 10) + _1ad258089_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_18624_it)),15LL);
}



inline jule::Str static__1ada90b57_iter_next(jule::U64 _19125_it) {
	return jule::Str("_iter_next_", 11) + _1ad258089_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19125_it)),15LL);
}



inline jule::Str static__1ada90e65_label(jule::Str _19621_ident) {
	return jule::Str("_julec_label_", 13) + _19621_ident;
}



inline jule::Str static__1ada91273_match_end(jule::U64 _20125_m) {
	return jule::Str("_match_end_", 11) + _1ad258089_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20125_m)),15LL);
}



inline jule::Str static__1ada91581_case_begin(jule::U64 _20626_c) {
	return jule::Str("_case_begin_", 12) + _1ad258089_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20626_c)),15LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1ada8c6e2_IdentCoder _Src) {
	_Stream << "IdentCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1adac2abd_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "compiler_command:" << _Src._field_compiler_command;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1adaa29c1_TraitHash _Src) {
	_Stream << "TraitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1adb00c83_to_str(_1adb00821_CustomType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1adb0113a_equals(jule::Ptr<_1adb00821_CustomType> _self_,jule::Ptr<_1ad429931_TypeKind> _5326_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1adb00821_CustomType _Src) {
	_Stream << _1adb00c83_to_str(&_Src);
	return _Stream;
}



inline jule::Str static__1adb01921_to_type(jule::Str _7327_id) {
	_7327_id=_1ad348267_real_kind_of(_7327_id);
	if ((97LL <= _7327_id[0LL]) && (_7327_id[0LL] <= 122LLU)) {
		_7327_id[0LL]-=32LLU;
	}
	return jule::Str("jule::", 6) + _7327_id;
}



inline jule::Str static__1adb01c2e_prim(jule::Ptr<_1ad42ec99_Prim> _8220_p) {
	return static__1adb01921_to_type(_1ad430173_to_str(_8220_p.ptr()));
}



inline jule::Str static__1adb0203c_tuple(jule::Ptr<_1ad435354_Tuple> _8725_t) {
	jule::Str _8817_obj = jule::Str("std::tuple<", 11);
	{
		auto &expr = _8725_t.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1b146db5e:;
		if (it != expr.end()) {
			jule::Ptr<_1ad429931_TypeKind> _1b146dc2a_tk = *it;
			{
				_8817_obj+=static__1adb06162_kind(_1b146dc2a_tk);
				_8817_obj+=jule::Str(",", 1);
			}
			_iter_next_1b146db5e:;
			++it;
			goto _iter_begin_1b146db5e;
		}
		_iter_end_1b146db5e:;
	}
	(_8817_obj).mut_slice(0LL,_8817_obj.len() - 1LL);
	_8817_obj+=jule::Str(">", 1);
	return _8817_obj;
}



inline jule::Str static__1adb0234a_as_sptr(jule::Str _9923_elem) {
	jule::Str _10017_obj = jule::Str("jule::Ptr<", 10);
	_10017_obj+=_9923_elem;
	_10017_obj+=jule::Str(">", 1);
	return _10017_obj;
}



inline jule::Str static__1adb02658_as_ptr(jule::Str _10722_elem) {
	return (_10722_elem + jule::Str("*", 1));
}



inline jule::Str static__1adb02966_sptr(jule::Ptr<_1ad433b05_Sptr> _11224_sptr) {
	return static__1adb0234a_as_sptr(static__1adb06162_kind(_11224_sptr.get()._field_elem));
}



inline jule::Str static__1adb02c74_ptr(jule::Ptr<_1ad437983_Ptr> _11723_p) {
	
	if (_1ad4385cc_is_unsafe(_11723_p.ptr())) {
		return jule::Str("void*", 5);
	}
	jule::Str _12217_elem = static__1adb06162_kind(_11723_p.get()._field_elem);
	_12217_elem+=jule::Str("*", 1);
	return _12217_elem;
}



inline jule::Str static__1adb03082_enum_decl(jule::Ptr<_1ac724545_Enum> _12829_e) {
	return static__1adb06162_kind(_12829_e.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1adb03390_as_slice(jule::Ptr<_1ad429931_TypeKind> _13228_elem) {
	jule::Str _13317_obj = jule::Str("jule::Slice<", 12);
	_13317_obj+=static__1adb06162_kind(_13228_elem);
	_13317_obj+=jule::Str(">", 1);
	return _13317_obj;
}



inline jule::Str static__1adb0369d_slice(jule::Ptr<_1ad4346d8_Slc> _14025_s) {
	return static__1adb03390_as_slice(_14025_s.get()._field_elem);
}



inline jule::Str static__1adb039ab_map(jule::Ptr<_1ad4360be_Map> _14523_m) {
	jule::Str _14617_obj = jule::Str("jule::Map<", 10);
	_14617_obj+=static__1adb06162_kind(_14523_m.get()._field_key);
	_14617_obj+=jule::Str(",", 1);
	_14617_obj+=static__1adb06162_kind(_14523_m.get()._field_val);
	_14617_obj+=jule::Str(">", 1);
	return _14617_obj;
}



inline jule::Str static__1adb03cb9_trait_ident(jule::Str _15427_ident) {
	jule::Str _15517_obj = jule::Str("jule::Trait<", 12);
	_15517_obj+=_15427_ident;
	_15517_obj+=jule::Str(">", 1);
	return _15517_obj;
}



inline jule::Str static__1adb040c7_trait_decl(jule::Ptr<_1ac85d096_Trait> _16226_t) {
	return static__1adb03cb9_trait_ident(static__1ada8e1d8_trait_decl(_16226_t));
}



inline jule::Str static__1adb043d5_structure(jule::Ptr<_1ac661075_Struct> _16725_s) {
	jule::Str _16817_rep = jule::Str();
	if (_16725_s.get()._field_cpp_linked && (!(_1adb0059b_has_directive(_16725_s.get()._field_directives,jule::Str("typedef", 7))))) {
		_16817_rep+=jule::Str("struct ", 7);
	}
	_16817_rep+=static__1ada8e804_structure(_16725_s);
	return _16817_rep;
}



inline jule::Str static__1adb046e3_structure_ins(jule::Ptr<_1ac664551_StructIns> _17733_s) {
	if (_17733_s.get()._field_decl.get()._field_cpp_linked) {
		jule::Str _17921_ident = static__1ada8eb12_structure_ins(_17733_s);
		if ((_17733_s.get()._field_generics.len() > 0LL)) {
			_17921_ident+=jule::Str("<", 1);
			{
				auto &expr = _17733_s.get()._field_generics;
				auto it = expr.begin();
				_iter_begin_1b147b3ec:;
				if (it != expr.end()) {
					jule::Ptr<_1ad429931_TypeKind> _1b147b908_g = *it;
					{
						_17921_ident+=static__1adb06162_kind(_1b147b908_g);
						_17921_ident+=jule::Str(",", 1);
					}
					_iter_next_1b147b3ec:;
					++it;
					goto _iter_begin_1b147b3ec;
				}
				_iter_end_1b147b3ec:;
			}
			(_17921_ident).mut_slice(0LL,_17921_ident.len() - 1LL);
			_17921_ident+=jule::Str(">", 1);
		}
		jule::Ptr<_1aaeaeb7d_Directive> _18917_d = _1adb0015b_find_directive(_17733_s.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));
		if ((_18917_d != nullptr)) {
			(_17921_ident).buffer.insert(0, ((_1ada8815a_concat_all_parts(_18917_d.get()._field_args) + jule::Str("::", 2))));
		}
		return _17921_ident;
	}
	return static__1ada8eb12_structure_ins(_17733_s);
}



inline jule::Str static__1adb04a01_array(jule::Ptr<_1ad436da0_Arr> _19925_a) {
	jule::Str _20017_obj = jule::Str("jule::Array<", 12);
	_20017_obj+=static__1adb06162_kind(_19925_a.get()._field_elem);
	_20017_obj+=jule::Str(",", 1);
	_20017_obj+=_1ad258364_itoa(_19925_a.get()._field_n);
	_20017_obj+=jule::Str(">", 1);
	return _20017_obj;
}



inline jule::Str static__1adb04d0e_param(jule::Ptr<_1ac674bd2_Param>& _20926_p) {
	jule::Str _21017_obj = jule::Str();
	if (_20926_p.get()._field_variadic) {
		_21017_obj+=jule::Str("jule::Slice<", 12);
		_21017_obj+=static__1adb06162_kind(_20926_p.get()._field_kind.get()._field_kind);
		_21017_obj+=jule::Str(">", 1);
	} else {
		_21017_obj+=static__1adb06162_kind(_20926_p.get()._field_kind.get()._field_kind);
	}
	if (_20926_p.get()._field_reference) {
		_21017_obj+=jule::Str("&", 1);
	}
	return _21017_obj;
}



inline jule::Str static__1adb0511c_param_ins(jule::Ptr<_1ac67939b_ParamIns>& _22530_p) {
	jule::Str _22617_obj = jule::Str();
	if (_22530_p.get()._field_decl.get()._field_variadic) {
		_22617_obj+=jule::Str("jule::Slice<", 12);
		_22617_obj+=static__1adb06162_kind(_22530_p.get()._field_kind);
		_22617_obj+=jule::Str(">", 1);
	} else {
		_22617_obj+=static__1adb06162_kind(_22530_p.get()._field_kind);
	}
	if (_22530_p.get()._field_decl.get()._field_reference) {
		_22617_obj+=jule::Str("&", 1);
	}
	return _22617_obj;
}



inline jule::Str static__1adb0542a_func_result(jule::Ptr<_1ac676a08_Fn>& _24132_f) {
	if (_1ac676ec0_is_void(_24132_f.ptr())) {
		if (_24132_f.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if (_24132_f.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1adb06162_kind(_24132_f.get()._field_result.get()._field_kind.get()._field_kind)) + jule::Str(">", 1));
	}
	return static__1adb06162_kind(_24132_f.get()._field_result.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1adb05738_func_ins_result(jule::Ptr<_1ac67a501_FnIns>& _25536_f) {
	if (_1ac676ec0_is_void(_25536_f.get()._field_decl.ptr())) {
		if (_25536_f.get()._field_decl.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if (_25536_f.get()._field_decl.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1adb06162_kind(_25536_f.get()._field_result)) + jule::Str(">", 1));
	}
	return static__1adb06162_kind(_25536_f.get()._field_result);
}



inline jule::Str static__1adb05a46_anon_func(jule::Ptr<_1ac67a501_FnIns> _26829_f) {
	jule::Str _26917_decl = static__1adb05738_func_ins_result(_26829_f);
	_26917_decl+=jule::Str("(", 1);
	if ((_26829_f.get()._field_params.len() > 0LL)) {
		{
			auto &expr = _26829_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_1b148a043:;
			if (it != expr.end()) {
				jule::Ptr<_1ac67939b_ParamIns> _1b148a10e_param = *it;
				{
					if (_1ac6753db_is_self(_1b148a10e_param.get()._field_decl.ptr())) {
						goto _iter_next_1b148a043;
					}
					_26917_decl+=static__1adb0511c_param_ins(_1b148a10e_param);
					_26917_decl+=jule::Str(",", 1);
				}
				_iter_next_1b148a043:;
				++it;
				goto _iter_begin_1b148a043;
			}
			_iter_end_1b148a043:;
		}
		(_26917_decl).mut_slice(0LL,_26917_decl.len() - 1LL);
	} else {
		_26917_decl+=jule::Str("void", 4);
	}
	_26917_decl+=jule::Str(")", 1);
	return _26917_decl;
}



inline jule::Str static__1adb05d54_func(jule::Ptr<_1ac67a501_FnIns> _28824_f) {
	jule::Str _28917_obj = jule::Str("jule::Fn<", 9);
	_28917_obj+=static__1adb05a46_anon_func(_28824_f);
	_28917_obj+=jule::Str(">", 1);
	return _28917_obj;
}



inline jule::Str static__1adb06162_kind(jule::Ptr<_1ad429931_TypeKind> _29624_k) {
	{
		
		if (_1ad42a712_cpp_linked(_29624_k.ptr())) {
			_case_begin_1b148d0bd:;
			{
				return _29624_k.get()._field_cpp_ident;
			}
		}
		else if ((_1ad42bec7_prim(_29624_k.ptr()) != nullptr)) {
			_case_begin_1b148d255:;
			{
				return static__1adb01c2e_prim(_1ad42bec7_prim(_29624_k.ptr()));
			}
		}
		else if ((_1ad42dd42_tup(_29624_k.ptr()) != nullptr)) {
			_case_begin_1b148d2bb:;
			{
				return static__1adb0203c_tuple(_1ad42dd42_tup(_29624_k.ptr()));
			}
		}
		else if ((_1ad42c2a2_sptr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1b148d332:;
			{
				return static__1adb02966_sptr(_1ad42c2a2_sptr(_29624_k.ptr()));
			}
		}
		else if ((_1ad42c57c_ptr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1b148d3a9:;
			{
				return static__1adb02c74_ptr(_1ad42c57c_ptr(_29624_k.ptr()));
			}
		}
		else if ((_1ad42c857_enm(_29624_k.ptr()) != nullptr)) {
			_case_begin_1b148d431:;
			{
				return static__1adb03082_enum_decl(_1ad42c857_enm(_29624_k.ptr()));
			}
		}
		else if ((_1ad42ce0c_slc(_29624_k.ptr()) != nullptr)) {
			_case_begin_1b148d4a8:;
			{
				return static__1adb0369d_slice(_1ad42ce0c_slc(_29624_k.ptr()));
			}
		}
		else if ((_1ad42da67_map(_29624_k.ptr()) != nullptr)) {
			_case_begin_1b148d530:;
			{
				return static__1adb039ab_map(_1ad42da67_map(_29624_k.ptr()));
			}
		}
		else if ((_1ad42d78c_trt(_29624_k.ptr()) != nullptr)) {
			_case_begin_1b148d5a7:;
			{
				return static__1adb040c7_trait_decl(_1ad42d78c_trt(_29624_k.ptr()));
			}
		}
		else if ((_1ad42d4b2_strct(_29624_k.ptr()) != nullptr)) {
			_case_begin_1b148d62e:;
			{
				return static__1adb046e3_structure_ins(_1ad42d4b2_strct(_29624_k.ptr()));
			}
		}
		else if ((_1ad42cb32_arr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1b148d6a6:;
			{
				return static__1adb04a01_array(_1ad42cb32_arr(_29624_k.ptr()));
			}
		}
		else if ((_1ad42d1d7_fnc(_29624_k.ptr()) != nullptr)) {
			_case_begin_1b148d72d:;
			{
				return static__1adb05d54_func(_1ad42d1d7_fnc(_29624_k.ptr()));
			}
		}
		_match_end_1b148cee1:;
	}
	{
		auto &_match_expr{ _29624_k.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1adb00821_CustomType>>()) {
			_case_begin_1b148d7d8:;
			{
				return _29624_k.get()._field_kind.operator jule::Ptr<_1adb00821_CustomType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1b1496e51:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1b14978be:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1adb0138d_TypeCoder _Src) {
	_Stream << "TypeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b14b2862_name(_1adb3dcd2_Flag_0* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1b14b29c7_what(_1adb3dcd2_Flag_0* _self_) {
	return (*_self_)._field__what;
}



inline void _1b14b2b3c_reset(_1adb3dcd2_Flag_0* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1b14b2ca2_short(_1adb3dcd2_Flag_0* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1adb3dcd2_Flag_0 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b14b5b95_name(_1adb3dcd2_Flag_1* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1b14b2e28_what(_1adb3dcd2_Flag_1* _self_) {
	return (*_self_)._field__what;
}



inline void _1b14b45ab_reset(_1adb3dcd2_Flag_1* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1b14b58ed_short(_1adb3dcd2_Flag_1* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1adb3dcd2_Flag_1 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b14b91a4_name(_1adb3dcd2_Flag_2* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1b14b6437_what(_1adb3dcd2_Flag_2* _self_) {
	return (*_self_)._field__what;
}



inline void _1b14b7aba_reset(_1adb3dcd2_Flag_2* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1b14b8e0c_short(_1adb3dcd2_Flag_2* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1adb3dcd2_Flag_2 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b14b99ac_name(_1adb3dcd2_Flag_3* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1b14bc707_what(_1adb3dcd2_Flag_3* _self_) {
	return (*_self_)._field__what;
}



inline void _1b14bb11d_reset(_1adb3dcd2_Flag_3* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1b14bc460_short(_1adb3dcd2_Flag_3* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1adb3dcd2_Flag_3 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b14c0c16_name(_1adb3dcd2_Flag_4* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1b14bce99_what(_1adb3dcd2_Flag_4* _self_) {
	return (*_self_)._field__what;
}



inline void _1b14be62c_reset(_1adb3dcd2_Flag_4* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1b14c096e_short(_1adb3dcd2_Flag_4* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1adb3dcd2_Flag_4 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1adb40256_FlagSet> static__1adb40575_new(void) {
	return jule::new_ptr<_1adb40256_FlagSet>(_1adb40256_FlagSet(jule::Slice<jule::Trait<_1adb3d8d6_CommonFlag>>::alloc(0LL,20LL)));
}



inline jule::Trait<_1adb3d8d6_CommonFlag> _1adb40ad6_find_flag(_1adb40256_FlagSet* _self_,jule::Str _6732_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1b14c9acc:;
		if (it != expr.end()) {
			jule::Trait<_1adb3d8d6_CommonFlag> _1b14c9b98_flag = *it;
			{
				if (_1adb3d8d6_CommonFlag_mptr_data[(_1b14c9b98_flag).type_offset]._1adb3d232_name(_1b14c9b98_flag) == _6732_name) {
					return _1b14c9b98_flag;
				}
			}
			_iter_next_1b14c9acc:;
			++it;
			goto _iter_begin_1b14c9acc;
		}
		_iter_end_1b14c9acc:;
	}
	return nullptr;
}



inline jule::Trait<_1adb3d8d6_CommonFlag> _1adb40e8d_find_flag_short(_1adb40256_FlagSet* _self_,jule::I32 _7738_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1b14cb00c:;
		if (it != expr.end()) {
			jule::Trait<_1adb3d8d6_CommonFlag> _1b14cb0c8_flag = *it;
			{
				if (_1adb3d8d6_CommonFlag_mptr_data[(_1b14cb0c8_flag).type_offset]._1adb3d397_short(_1b14cb0c8_flag) == _7738_name) {
					return _1b14cb0c8_flag;
				}
			}
			_iter_next_1b14cb00c:;
			++it;
			goto _iter_begin_1b14cb00c;
		}
		_iter_end_1b14cb00c:;
	}
	return nullptr;
}



inline jule::Slice<jule::Trait<_1adb3d8d6_CommonFlag>> _1adb41268_flags(_1adb40256_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1adb41620_parse(_1adb40256_FlagSet* _self_,jule::Slice<jule::Str> _11128_args) {
	_1adb43215_ArgParser _11217_ap = _1adb43215_ArgParser((*_self_),_11128_args,jule::Slice<jule::Str>(),jule::I64());
	({
		auto except = _1adb44a0d_parse(&_11217_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11217_ap._field_content);
}



inline void _1adb41862_reset(_1adb40256_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1b14ce8a1:;
		if (it != expr.end()) {
			jule::Trait<_1adb3d8d6_CommonFlag> _1b14ceb26_f = *it;
			{
				_1adb3d8d6_CommonFlag_mptr_data[(_1b14ceb26_f).type_offset]._1adb3d771_reset(_1b14ceb26_f);
			}
			_iter_next_1b14ce8a1:;
			++it;
			goto _iter_begin_1b14ce8a1;
		}
		_iter_end_1b14ce8a1:;
	}
}



inline jule::Ptr<_1adb3dcd2_Flag_4> _1adb41dc3_add_flag_common_0(_1adb40256_FlagSet* _self_,jule::Str _12741_name,jule::I32 _12752_short,jule::Str _12765_what) {
	{
		
{
			_case_begin_1b1557c8c:;
			{
				goto _match_end_1b1557c37;
			}
		}
		_match_end_1b1557c37:;
	}
	if ((_1adb40ad6_find_flag(&(*_self_), _12741_name) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12741_name + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	}
	if ((_12752_short != 0LL) && (_1adb40e8d_find_flag_short(&(*_self_), _12752_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12752_short) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	}
	jule::Ptr<_1adb3dcd2_Flag_4> _14417_flag = jule::new_ptr<_1adb3dcd2_Flag_4>(_1adb3dcd2_Flag_4(_12741_name,_12752_short,jule::Str(),_12765_what,jule::Ptr<jule::Str>()));
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1adb3d8d6_CommonFlag>(_14417_flag, 4));
	return _14417_flag;
}

inline jule::Ptr<_1adb3dcd2_Flag_3> _1adb41dc3_add_flag_common_1(_1adb40256_FlagSet* _self_,jule::Str _12741_name,jule::I32 _12752_short,jule::Str _12765_what) {
	{
		
{
			_case_begin_1b1562967:;
			{
				goto _match_end_1b1562912;
			}
		}
		_match_end_1b1562912:;
	}
	if ((_1adb40ad6_find_flag(&(*_self_), _12741_name) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12741_name + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	}
	if ((_12752_short != 0LL) && (_1adb40e8d_find_flag_short(&(*_self_), _12752_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12752_short) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	}
	jule::Ptr<_1adb3dcd2_Flag_3> _14417_flag = jule::new_ptr<_1adb3dcd2_Flag_3>(_1adb3dcd2_Flag_3(_12741_name,_12752_short,jule::Bool(),_12765_what,jule::Ptr<jule::Bool>()));
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1adb3d8d6_CommonFlag>(_14417_flag, 3));
	return _14417_flag;
}





inline void _1adb42ab6_add_var_0(_1adb40256_FlagSet* _self_,jule::Ptr<jule::Str> _17137_var,jule::Str _17146_name,jule::I32 _17157_short,jule::Str _17170_what) {
	jule::Ptr<_1adb3dcd2_Flag_4> _17217_flag = _1adb41dc3_add_flag_common_0(&(*_self_), _17146_name,_17157_short,_17170_what);
	_17217_flag.get()._field__default=(*(_17137_var));
	_17217_flag.get()._field__data=_17137_var;
}

inline void _1adb42ab6_add_var_1(_1adb40256_FlagSet* _self_,jule::Ptr<jule::Bool> _17137_var,jule::Str _17146_name,jule::I32 _17157_short,jule::Str _17170_what) {
	jule::Ptr<_1adb3dcd2_Flag_3> _17217_flag = _1adb41dc3_add_flag_common_1(&(*_self_), _17146_name,_17157_short,_17170_what);
	_17217_flag.get()._field__default=(*(_17137_var));
	_17217_flag.get()._field__data=_17137_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1adb40256_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac920961_to_str(_1ac724545_Enum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1ac928958_equals(jule::Ptr<_1ac724545_Enum> _self_,jule::Ptr<_1ad429931_TypeKind> _3826_other) {
	jule::Ptr<_1ac724545_Enum> _3913_enm = _1ad42c857_enm(_3826_other.ptr());
	return _self_ == _3913_enm;
}



inline jule::Ptr<_1ac692a57_EnumItem> _1ac94e5b6_find_item(_1ac724545_Enum* _self_,jule::Str _4732_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1adc2e499:;
		if (it != expr.end()) {
			jule::Ptr<_1ac692a57_EnumItem> _1adc2e565_item = *it;
			{
				if (_1adc2e565_item.get()._field_ident == _4732_ident) {
					return _1adc2e565_item;
				}
			}
			_iter_next_1adc2e499:;
			++it;
			goto _iter_begin_1adc2e499;
		}
		_iter_end_1adc2e499:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac724545_Enum _Src) {
	_Stream << _1ac920961_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab02561c_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab025b6c_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab0263dc_is_trait_impl(_1ab0261bc_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1ab026552_is_struct_impl(_1ab0261bc_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0261bc_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeb5579_is_prim(_1aaec9b87_IdentTypeDecl* _self_) {
	return (*_self_)._field_token._field_id == static_cast<jule::U64>(1LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _1aaec9b87_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aadb528c_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "range:" << _Src._field_range << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aadb54ac_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aae2d4c0_is_decl(_1aae02ad2_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1ab0245c7_EnumDecl>>() || _match_expr.type_is<jule::Ptr<_1ab01da55_FnDecl>>() || _match_expr.type_is<jule::Ptr<_1ab02561c_StructDecl>>() || _match_expr.type_is<jule::Ptr<_1ab025b6c_TraitDecl>>() || _match_expr.type_is<jule::Ptr<_1ab02262a_TypeAliasDecl>>() || _match_expr.type_is<jule::Ptr<_1ab024d36_FieldDecl>>() || _match_expr.type_is<jule::Ptr<_1ab0237c4_UseDecl>>() || _match_expr.type_is<jule::Ptr<_1ab01e6d2_VarDecl>>() || _match_expr.type_is<jule::Ptr<_1aae075dc_TypeDecl>>()) {
			_case_begin_1ae481c2e:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ae481ed7:;
			{
				return false;
			}
		}
		_match_end_1ae481e82:;
	}
}



inline jule::Bool _1aae81bd8_is_directive(_1aae02ad2_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1aaeaeb7d_Directive>>()) {
			_case_begin_1ae48346c:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ae483c20:;
			{
				return false;
			}
		}
		_match_end_1ae483bba:;
	}
}



inline jule::Bool _1aae98d32_is_impl(_1aae02ad2_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1ab0261bc_Impl>>()) {
			_case_begin_1ae484737:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ae484b44:;
			{
				return false;
			}
		}
		_match_end_1ae484ade:;
	}
}



inline jule::Bool _1aaea4d1b_is_use_decl(_1aae02ad2_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1ab0237c4_UseDecl>>()) {
			_case_begin_1ae485529:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ae485a8a:;
			{
				return false;
			}
		}
		_match_end_1ae485a35:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1aae02ad2_Node _Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aadc3102_is_nil(_1aadb5b2d_LitExpr* _self_) {
	return ((*_self_)._field_value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1aadb5b2d_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aadb5d4d_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab57b38c_AssignInfo _Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aadb606d_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aae548c0_is_self(_1aadb628d_IdentExpr* _self_) {
	return ((*_self_)._field_ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1aadb628d_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aadb64ad_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3572dc_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aadb66cd_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaeaeb7d_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01ac72_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01ae92_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01b1b2_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3582dd_ScopeLabel _Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aae07ec2_unhandled(_1ab01b3d2_FnCallExpr* _self_) {
	return ((*_self_)._field_exception == nullptr);
}



inline jule::Bool _1aadb68ed_ignored(_1ab01b3d2_FnCallExpr* _self_) {
	return ((*_self_)._field_exception != nullptr) && (*_self_)._field_exception.get()._field_deferred;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01b3d2_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aadc9d40_is_targeted(_1ab01b602_FieldExprPair* _self_) {
	return (*_self_)._field_field._field_id != static_cast<jule::U64>(0LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01b602_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac663a06_FieldIns> _1ac65cdeb_instance(jule::Ptr<_1ac65ca77_Field> _self_) {
	return jule::new_ptr<_1ac663a06_FieldIns>(_1ac663a06_FieldIns(_self_,_self_.get()._field_kind.get()._field_kind,jule::Ptr<_1ad3e6975_Data>()));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac65ca77_Field _Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad373c65_find_package(_1ad3736b0_ImportInfo* _self_,jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1ad3736b0_ImportInfo> _1ad37411c_select_package(_1ad3736b0_ImportInfo* _self_,jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1ad39e037_Var> _1ad3745a1_find_var(_1ad3736b0_ImportInfo* _self_,jule::Str _16431_ident,jule::Bool _16443_cpp_linked) {
	if ((!(_1ad376174_is_lookupable(&(*_self_), _16431_ident)))) {
		return nullptr;
	}
	return _1ad37103c_find_var_in_package((*_self_)._field_package.get()._field_files,_16431_ident,false);
}



inline jule::Ptr<_1ad428996_TypeAlias> _1ad374a35_find_type_alias(_1ad3736b0_ImportInfo* _self_,jule::Str _17738_ident,jule::Bool _17750_cpp_linked) {
	if ((!(_1ad376174_is_lookupable(&(*_self_), _17738_ident)))) {
		return nullptr;
	}
	return _1ad37158c_find_type_alias_in_package((*_self_)._field_package.get()._field_files,_17738_ident,false);
}



inline jule::Ptr<_1ac661075_Struct> _1ad374eb9_find_struct(_1ad3736b0_ImportInfo* _self_,jule::Str _19034_ident,jule::Bool _19046_cpp_linked) {
	if ((!(_1ad376174_is_lookupable(&(*_self_), _19034_ident)))) {
		return nullptr;
	}
	return _1ad371a43_find_struct_in_package((*_self_)._field_package.get()._field_files,_19034_ident,false);
}



inline jule::Ptr<_1ac676a08_Fn> _1ad37544d_find_fn(_1ad3736b0_ImportInfo* _self_,jule::Str _20330_ident,jule::Bool _20342_cpp_linked) {
	if ((!(_1ad376174_is_lookupable(&(*_self_), _20330_ident)))) {
		return nullptr;
	}
	return _1ad37204e_find_fn_in_package((*_self_)._field_package.get()._field_files,_20330_ident,false);
}



inline jule::Ptr<_1ac85d096_Trait> _1ad375805_find_trait(_1ad3736b0_ImportInfo* _self_,jule::Str _21533_ident) {
	if ((!(_1ad376174_is_lookupable(&(*_self_), _21533_ident)))) {
		return nullptr;
	}
	return _1ad372439_find_trait_in_package((*_self_)._field_package.get()._field_files,_21533_ident);
}



inline jule::Ptr<_1ac724545_Enum> _1ad375bac_find_enum(_1ad3736b0_ImportInfo* _self_,jule::Str _22732_ident) {
	if ((!(_1ad376174_is_lookupable(&(*_self_), _22732_ident)))) {
		return nullptr;
	}
	return _1ad372824_find_enum_in_package((*_self_)._field_package.get()._field_files,_22732_ident);
}



inline jule::Bool _1ad376174_is_lookupable(_1ad3736b0_ImportInfo* _self_,jule::Str _23728_ident) {
	if ((*_self_)._field_cpp_linked) {
		return false;
	}
	if ((!((*_self_)._field_import_all))) {
		if (((*_self_)._field_alias.len() != 0LL) || _1ad37652b_exist_ident(&(*_self_), jule::Str("self", 4))) {
			return true;
		}
		if (((*_self_)._field_selected.len() > 0LL)) {
			if ((!(_1ad37652b_exist_ident(&(*_self_), _23728_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _1ad37652b_exist_ident(_1ad3736b0_ImportInfo* _self_,jule::Str _25726_ident) {
	{
		auto &expr = (*_self_)._field_selected;
		auto it = expr.begin();
		_iter_begin_1b017b9e4:;
		if (it != expr.end()) {
			_1ab005531_Token &_1b017bab0_sident = *it;
			{
				if (_1b017bab0_sident._field_kind == _25726_ident) {
					return true;
				}
			}
			_iter_next_1b017b9e4:;
			++it;
			goto _iter_begin_1b017b9e4;
		}
		_iter_end_1b017b9e4:;
	}
	return false;
}



inline jule::Bool _1ad37684a_is_accessible_via_selection(_1ad3736b0_ImportInfo* _self_) {
	return ((*_self_)._field_import_all || ((*_self_)._field_selected.len() == 0LL)) || _1ad37652b_exist_ident(&(*_self_), jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3736b0_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package << ", ";
	_Stream << "mod_id:" << _Src._field_mod_id;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01b822_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac664551_StructIns> _1ac66151a_instance(jule::Ptr<_1ac661075_Struct> _self_) {
	if ((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL)) {
		return _self_.get()._field_instances[0LL];
	}
	jule::Ptr<_1ac664551_StructIns> _10017_ins = jule::new_ptr<_1ac664551_StructIns>(_1ac664551_StructIns(jule::Bool(),_self_,jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac663a06_FieldIns>>::alloc(0LL,static_cast<jule::I64>(_self_.get()._field_fields.len())),jule::Slice<jule::Ptr<_1ac676a08_Fn>>(),jule::Bool(),static__1ac67e181_new(),_1ac65ee31_Operators()));
	{
		auto &expr = _self_.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1b0362ee9:;
		if (it != expr.end()) {
			jule::Ptr<_1ac65ca77_Field> _1b0363208_f = *it;
			{
				_10017_ins.get()._field_fields = jule::alloc_for_append(_10017_ins.get()._field_fields,1);_10017_ins.get()._field_fields.__push(_1ac65cdeb_instance(_1b0363208_f));
				if (((!(_1b0363208_f.get()._field_mutable)) && (_1b0363208_f.get()._field_kind.get()._field_kind != nullptr)) && _1ad42b092_mutable(_1b0363208_f.get()._field_kind.get()._field_kind.ptr())) {
					_10017_ins.get()._field_mutable=true;
				}
			}
			_iter_next_1b0362ee9:;
			++it;
			goto _iter_begin_1b0362ee9;
		}
		_iter_end_1b0362ee9:;
	}
	if ((_self_.get()._field_generics.len() == 0LL)) {
		_10017_ins.get()._field_methods=_self_.get()._field_methods;
	} else {
		_10017_ins.get()._field_methods=jule::Slice<jule::Ptr<_1ac676a08_Fn>>::alloc(0LL,static_cast<jule::I64>(_self_.get()._field_methods.len()));
		{
			auto &expr = _self_.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1b03663a4:;
			if (it != expr.end()) {
				jule::Ptr<_1ac676a08_Fn> _1b0366c56_f = *it;
				{
					jule::Ptr<_1ac676a08_Fn> _11825_fins = jule::new_ptr<_1ac676a08_Fn>((*(_1b0366c56_f)));
					_11825_fins.get()._field_instances=nullptr;
					_10017_ins.get()._field_methods = jule::alloc_for_append(_10017_ins.get()._field_methods,1);_10017_ins.get()._field_methods.__push(_11825_fins);
				}
				_iter_next_1b03663a4:;
				++it;
				goto _iter_begin_1b03663a4;
			}
			_iter_end_1b03663a4:;
		}
	}
	return _10017_ins;
}



inline jule::Ptr<_1ac664551_StructIns> _1ac6618c2_append_instance(_1ac661075_Struct* _self_,jule::Ptr<_1ac664551_StructIns>& _12939_ins) {
	if (((*_self_)._field_generics.len() == 0LL) && ((*_self_)._field_instances.len() == 1LL)) {
		return (*_self_)._field_instances[0LL];
	}
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1b0369231:;
		if (it != expr.end()) {
			jule::Ptr<_1ac664551_StructIns> _1b036996d_ains = *it;
			{
				if (_1ac6652dd_same(_1b036996d_ains.ptr(), _12939_ins)) {
					return _1b036996d_ains;
				}
			}
			_iter_next_1b0369231:;
			++it;
			goto _iter_begin_1b0369231;
		}
		_iter_end_1b0369231:;
	}
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12939_ins);
	return nullptr;
}



inline jule::Ptr<_1ac676a08_Fn> _1ac661d56_find_method(_1ac661075_Struct* _self_,jule::Str _14734_ident,jule::Bool _14746_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1b036bbb2:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1b036bc7d_f = *it;
			{
				if ((_1b036bc7d_f.get()._field_statically == _14746_statically) && (_1b036bc7d_f.get()._field_ident == _14734_ident)) {
					return _1b036bc7d_f;
				}
			}
			_iter_next_1b036bbb2:;
			++it;
			goto _iter_begin_1b036bbb2;
		}
		_iter_end_1b036bbb2:;
	}
	return nullptr;
}



inline jule::Ptr<_1ad39e037_Var> _1ac66220d_find_static(_1ac661075_Struct* _self_,jule::Str _15834_ident) {
	{
		auto &expr = (*_self_)._field_statics;
		auto it = expr.begin();
		_iter_begin_1b036d521:;
		if (it != expr.end()) {
			jule::Ptr<_1ad39e037_Var> _1b036d5dc_v = *it;
			{
				if (_1b036d5dc_v.get()._field_ident == _15834_ident) {
					return _1b036d5dc_v;
				}
			}
			_iter_next_1b036d521:;
			++it;
			goto _iter_begin_1b036d521;
		}
		_iter_end_1b036d521:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac65ca77_Field> _1ac6625b5_find_field(_1ac661075_Struct* _self_,jule::Str _16933_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1b036e984:;
		if (it != expr.end()) {
			jule::Ptr<_1ac65ca77_Field> _1b036ea50_f = *it;
			{
				if (_1b036ea50_f.get()._field_ident == _16933_ident) {
					return _1b036ea50_f;
				}
			}
			_iter_next_1b036e984:;
			++it;
			goto _iter_begin_1b036e984;
		}
		_iter_end_1b036e984:;
	}
	return nullptr;
}



inline jule::Bool _1ac66296c_is_implements(_1ac661075_Struct* _self_,jule::Ptr<_1ac85d096_Trait> _17932_t) {
	{
		auto &expr = (*_self_)._field_implements;
		auto it = expr.begin();
		_iter_begin_1b0370de7:;
		if (it != expr.end()) {
			jule::Ptr<_1ac85d096_Trait> &_1b0370eb3_it = *it;
			{
				if (_17932_t == _1b0370eb3_it) {
					return true;
				}
			}
			_iter_next_1b0370de7:;
			++it;
			goto _iter_begin_1b0370de7;
		}
		_iter_end_1b0370de7:;
	}
	return false;
}



inline jule::Bool _1ac662d24_is_derives(_1ac661075_Struct* _self_,jule::Str _18929_ident) {
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1b0372228:;
		if (it != expr.end()) {
			jule::Ptr<_1aaeaeb7d_Directive> &_1b03722e4_d = *it;
			{
				if ((_1b03722e4_d.get()._field_tag._field_kind == jule::Str("derive", 6))) {
					if ((_1b03722e4_d.get()._field_args.len() == 1LL) && (_1b03722e4_d.get()._field_args[0LL]._field_kind == _18929_ident)) {
						return true;
					}
				}
			}
			_iter_next_1b0372228:;
			++it;
			goto _iter_begin_1b0372228;
		}
		_iter_end_1b0372228:;
	}
	return false;
}



inline jule::Bool _1ac6631cb_is_uses(_1ac661075_Struct* _self_,jule::Ptr<_1ac661075_Struct> _20126_s) {
	{
		auto &expr = (*_self_)._field_uses;
		auto it = expr.begin();
		_iter_begin_1adb62a5e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac661075_Struct> &_1adb62b2a_u = *it;
			{
				while (_20126_s == _1adb62b2a_u) {
					{
						return true;
					}
				_iter_next_1adb63059:;
				}
				_iter_end_1adb63059:;
			}
			_iter_next_1adb62a5e:;
			++it;
			goto _iter_begin_1adb62a5e;
		}
		_iter_end_1adb62a5e:;
	}
	return false;
}



inline jule::Bool _1ac6634a6_has_ref_accessible(_1ac661075_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1adb638b7:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> &_1adb63ab5_m = *it;
			{
				if ((_1adb63ab5_m.get()._field_params.len() > 0LL) && _1ac6756b6_is_ref(_1adb63ab5_m.get()._field_params[0LL].ptr())) {
					return true;
				}
			}
			_iter_next_1adb638b7:;
			++it;
			goto _iter_begin_1adb638b7;
		}
		_iter_end_1adb638b7:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac661075_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aadcb33b_is_empty(_1ab01ba42_BraceLit* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01ba42_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac66496e_to_str(_1ac664551_StructIns* _self_) {
	jule::Str _24417_kind = jule::Str();
	_24417_kind+=(*_self_)._field_decl.get()._field_ident;
	if (((*_self_)._field_generics.len() > 0LL)) {
		_24417_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1adb66810:;
			if (it != expr.end()) {
				jule::Ptr<_1ad429931_TypeKind> &_1adb66997_g = *it;
				{
					_24417_kind+=_1ad429d4e_to_str(_1adb66997_g.ptr());
					_24417_kind+=jule::Str(",", 1);
				}
				_iter_next_1adb66810:;
				++it;
				goto _iter_begin_1adb66810;
			}
			_iter_end_1adb66810:;
		}
		(_24417_kind).mut_slice(0LL,_24417_kind.len() - 1LL);
		_24417_kind+=jule::Str("]", 1);
	}
	return _24417_kind;
}



inline jule::Bool _1ac664d26_equals(jule::Ptr<_1ac664551_StructIns> _self_,jule::Ptr<_1ad429931_TypeKind> _25926_other) {
	jule::Ptr<_1ac664551_StructIns> _26013_s = _1ad42d4b2_strct(_25926_other.ptr());
	if ((_26013_s == nullptr)) {
		return false;
	}
	if (_self_.get()._field_decl != _26013_s.get()._field_decl) {
		return false;
	}
	if (_self_.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>(_26013_s.get()._field_generics.len()))) {
		return false;
	}
	jule::I64 _27317_i = 0LL;
	for (; _27317_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_generics.len())); (_27317_i)++) {
		{
			if ((!(_1ad42a206_equals(_self_.get()._field_generics[_27317_i], _26013_s.get()._field_generics[_27317_i])))) {
				return false;
			}
		}
	_iter_next_1adb6b10b:;
	}
	_iter_end_1adb6b10b:;
	return true;
}



inline jule::Bool _1ac6652dd_same(_1ac664551_StructIns* _self_,jule::Ptr<_1ac664551_StructIns> _28723_s) {
	if (((*_self_)._field_decl != _28723_s.get()._field_decl) || (_28723_s.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_generics.len())))) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1adb6d262:;
		if (it != expr.end()) {
			jule::I64 _1adb6e483_i = it - expr.begin();
			jule::Ptr<_1ad429931_TypeKind> &_1adb6e61a_g = *it;
			{
				if ((!(_1ad42a206_equals(_1adb6e61a_g, _28723_s.get()._field_generics[_1adb6e483_i])))) {
					return false;
				}
			}
			_iter_next_1adb6d262:;
			++it;
			_1adb6e483_i++;
			goto _iter_begin_1adb6d262;
		}
		_iter_end_1adb6d262:;
	}
	return true;
}



inline jule::Ptr<_1ac676a08_Fn> _1ac665772_find_method(_1ac664551_StructIns* _self_,jule::Str _30234_ident,jule::Bool _30246_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1adb71353:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1adb7141e_f = *it;
			{
				if ((_1adb7141e_f.get()._field_statically == _30246_statically) && (_1adb7141e_f.get()._field_ident == _30234_ident)) {
					return _1adb7141e_f;
				}
			}
			_iter_next_1adb71353:;
			++it;
			goto _iter_begin_1adb71353;
		}
		_iter_end_1adb71353:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac663a06_FieldIns> _1ac665b29_find_field(_1ac664551_StructIns* _self_,jule::Str _31333_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1adb72bd4:;
		if (it != expr.end()) {
			jule::Ptr<_1ac663a06_FieldIns> _1adb72ca0_f = *it;
			{
				if (_1adb72ca0_f.get()._field_decl.get()._field_ident == _31333_ident) {
					return _1adb72ca0_f;
				}
			}
			_iter_next_1adb72bd4:;
			++it;
			goto _iter_begin_1adb72bd4;
		}
		_iter_end_1adb72bd4:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac664551_StructIns _Src) {
	_Stream << _1ac66496e_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1ad39e455_is_initialized(_1ad39e037_Var* _self_) {
	return ((*_self_)._field_value != nullptr);
}



inline jule::Bool _1ad39e730_is_type_inferred(_1ad39e037_Var* _self_) {
	return ((*_self_)._field_kind == nullptr) || ((*_self_)._field_kind.get()._field_decl == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ad39e037_Var _Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01bc62_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline void _1ad3cdde1_push_err(_1ad3cd84c_TypeCompatibilityChecker* _self_,jule::Str _13027_fmt,jule::Slice<jule::Any> _13040_args) {
	_1ad3810c4_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_13027_fmt,_13040_args);
}



inline jule::Bool _1ad3ce1bb_check_trait(_1ad3cd84c_TypeCompatibilityChecker* _self_) {
	jule::Bool _13432_ok = jule::Bool();
	if (_1ad42a9dc_is_nil((*_self_)._field_src.ptr())) {
		_13432_ok = true;
		return _13432_ok;
	}
	jule::Ptr<_1ac85d096_Trait> _13913_trt = _1ad42d78c_trt((*_self_)._field_dest.ptr());
	jule::Bool _14017_ref = false;
	{
		
		if ((_1ad42c2a2_sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1b07a3ea6:;
			{
				_14017_ref=true;
				(*_self_)._field_src=_1ad42c2a2_sptr((*_self_)._field_src.ptr()).get()._field_elem;
				if ((_1ad42d4b2_strct((*_self_)._field_src.ptr()) == nullptr)) {
					_13432_ok = false;
					return _13432_ok;
				}
				goto _case_begin_1b07a4072;
			}
		}
		else if ((_1ad42d4b2_strct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1b07a4072:;
			{
				jule::Ptr<_1ac664551_StructIns> _15117_s = _1ad42d4b2_strct((*_self_)._field_src.ptr());
				if ((!(_1ac66296c_is_implements(_15117_s.get()._field_decl.ptr(), _13913_trt)))) {
					_13432_ok = false;
					return _13432_ok;
				}
				if ((!(_14017_ref)) && _1ad3aa52c_trait_has_reference_receiver(_13913_trt)) {
					_1ad3cdde1_push_err(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_13432_ok = false;
					return _13432_ok;
				}
				_13432_ok = true;
				return _13432_ok;
			}
		}
		else if ((_1ad42d78c_trt((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1b07a40d8:;
			{
				_13432_ok = _13913_trt == _1ad42d78c_trt((*_self_)._field_src.ptr());
				return _13432_ok;
			}
		}
		else {
			_case_begin_1b07a3802:;
			{
				_13432_ok = false;
				return _13432_ok;
			}
		}
		_match_end_1b07a377a:;
	}
}



inline jule::Bool _1ad3ce496_check_ptr(_1ad3cd84c_TypeCompatibilityChecker* _self_) {
	jule::Bool _17130_ok = jule::Bool();
	if (_1ad42a9dc_is_nil((*_self_)._field_src.ptr())) {
		_17130_ok = true;
		return _17130_ok;
	}
	jule::Ptr<_1ad437983_Ptr> _17617_dest = _1ad42c57c_ptr((*_self_)._field_dest.ptr());
	if (_1ad4385cc_is_unsafe(_17617_dest.ptr())) {
		_17130_ok = true;
		return _17130_ok;
	}
	_17130_ok = _1ad42a206_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _17130_ok;
}



inline jule::Bool _1ad3ce771_check_prim(_1ad3cd84c_TypeCompatibilityChecker* _self_) {
	jule::Bool _18531_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_variadic))) {
		jule::Ptr<_1ad42ec99_Prim> _18717_prim = _1ad42bec7_prim((*_self_)._field_dest.ptr());
		if ((_18717_prim != nullptr) && _1ad4337a3_is_any(_18717_prim.ptr())) {
			_18531_ok = true;
			return _18531_ok;
		}
	}
	_18531_ok = _1ad42a206_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _18531_ok;
}



inline jule::Bool _1ad3cea4b_check(_1ad3cd84c_TypeCompatibilityChecker* _self_) {
	jule::Bool _19526_ok = jule::Bool();
	if ((_1ad42c57c_ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19526_ok = _1ad3ce496_check_ptr(&(*_self_));
		return _19526_ok;
	}
	if (_1ad42b36c_nil_compatible((*_self_)._field_dest.ptr())) {
		if (_1ad42a9dc_is_nil((*_self_)._field_src.ptr())) {
			_19526_ok = true;
			return _19526_ok;
		}
	}
	{
		
		if ((_1ad42bec7_prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1b07b0a1d:;
			{
				_19526_ok = _1ad3ce771_check_prim(&(*_self_));
				return _19526_ok;
			}
		}
		else if ((_1ad42d78c_trt((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1b07b0677:;
			{
				_19526_ok = _1ad3ce1bb_check_trait(&(*_self_));
				return _19526_ok;
			}
		}
		else {
			_case_begin_1b07b005b:;
			{
				_19526_ok = _1ad42a206_equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19526_ok;
			}
		}
		_match_end_1b07aee7e:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3cd84c_TypeCompatibilityChecker _Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1ad3d06d9_push_err(_1ad3d019a_AssignTypeChecker* _self_,jule::Str _22527_fmt,jule::Slice<jule::Any> _22540_args) {
	_1ad3810c4_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_22527_fmt,_22540_args);
}



inline jule::Bool _1ad3d09b4_check_validity(_1ad3d019a_AssignTypeChecker* _self_) {
	jule::Bool _23017_valid = true;
	{
		
		if ((_1ad42d1d7_fnc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b07b3c96:;
			{
				jule::Ptr<_1ac67a501_FnIns> _23317_f = _1ad42d1d7_fnc((*_self_)._field_d.get()._field_kind.ptr());
				{
					
					if (_1ac67b17d_is_builtin(_23317_f.ptr())) {
						_case_begin_1b07b546d:;
						{
							_1ad3d06d9_push_err(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					else if (_23317_f.get()._field_decl.get()._field_cpp_linked) {
						_case_begin_1b07b54e5:;
						{
							_1ad3d06d9_push_err(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					else if (_1ac67729a_is_method(_23317_f.get()._field_decl.ptr())) {
						_case_begin_1b07b556c:;
						{
							_1ad3d06d9_push_err(&(*_self_), jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					else if ((_23317_f.get()._field_decl.get()._field_generics.len() > 0LL)) {
						_case_begin_1b07b55e4:;
						{
							_1ad3d06d9_push_err(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					_match_end_1b07b5380:;
				}
			}
		}
		else if ((_1ad42dd42_tup((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b07b3d1d:;
			{
				_1ad3d06d9_push_err(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23017_valid=false;
			}
		}
		_match_end_1b07b3bca:;
	}
	return _23017_valid;
}



inline jule::Bool _1ad3d0c8e_check_const(_1ad3d019a_AssignTypeChecker* _self_) {
	if ((((!(_1ad3e747b_is_const((*_self_)._field_d.ptr()))) || (_1ad42bec7_prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1ad42bec7_prim((*_self_)._field_d.get()._field_kind.ptr()) == nullptr)) || (!(_1ad355076_is_num(_1ad42bec7_prim((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind)))) {
		return false;
	}
	if ((*_self_)._field_d.get()._field_model != (*_self_)._field_d.get()._field_constant) {
		return false;
	}
	jule::Str _26913_kind = _1ad42bec7_prim((*_self_)._field_dest.ptr()).get()._field_kind;
	{
		
		if (_1ad354c68_is_float(_26913_kind)) {
			_case_begin_1b07bda09:;
			{
				if ((!(_1ad3b028a_float_assignable(_26913_kind,(*_self_)._field_d)))) {
					_1ad3d06d9_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				}
			}
		}
		else if (_1ad354916_is_int(_26913_kind)) {
			_case_begin_1b07bdb08:;
			{
				if ((!(_1ad3cd220_int_assignable(_26913_kind,(*_self_)._field_d)))) {
					_1ad3d06d9_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				}
			}
		}
		else {
			_case_begin_1b07bd3dd:;
			{
				return false;
			}
		}
		_match_end_1b07bd388:;
	}
	return true;
}



inline jule::Bool _1ad3d1069_is_prim(_1ad3d019a_AssignTypeChecker* _self_) {
	if ((*_self_)._field_dest.get()._field_variadic || (*_self_)._field_d.get()._field_kind.get()._field_variadic) {
		return false;
	}
	if (_1ad42a712_cpp_linked((*_self_)._field_dest.ptr()) || _1ad42a712_cpp_linked((*_self_)._field_d.get()._field_kind.ptr())) {
		return false;
	}
	return (_1ad42bec7_prim((*_self_)._field_dest.ptr()) != nullptr) && (_1ad42bec7_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr);
}



inline jule::Bool _1ad3d1344_check_compatibility(_1ad3d019a_AssignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1b07c4405:;
			{
				return false;
			}
		}
		else if ((!(_1ad3d09b4_check_validity(&(*_self_))))) {
			_case_begin_1b07c447c:;
			{
				return false;
			}
		}
		else if (_1ad3d0c8e_check_const(&(*_self_))) {
			_case_begin_1b07c4504:;
			{
				return true;
			}
		}
		else if ((_1ad42c857_enm((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b07c457b:;
			{
				jule::Ptr<_1ad429931_TypeKind> _31121_dkind = (*_self_)._field_dest;
				if ((_1ad42c857_enm((*_self_)._field_dest.ptr()) != nullptr)) {
					_31121_dkind=_1ad42c857_enm((*_self_)._field_dest.ptr()).get()._field_kind.get()._field_kind;
				} else if ((_1ad42bec7_prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1b07c42b2;
				}
				if (_1ad350cec_types_are_compatible(_1ad42bec7_prim(_1ad42c857_enm((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).get()._field_kind,_1ad42bec7_prim(_31121_dkind.ptr()).get()._field_kind)) {
					return true;
				}
			}
		}
		else if (_1ad3d1069_is_prim(&(*_self_))) {
			_case_begin_1b07c4603:;
			{
				jule::Ptr<_1ad42ec99_Prim> _32117_dest = _1ad42bec7_prim((*_self_)._field_dest.ptr());
				if (_1ad4337a3_is_any(_32117_dest.ptr())) {
					return true;
				}
				jule::Ptr<_1ad42ec99_Prim> _32521_src = _1ad42bec7_prim((*_self_)._field_d.get()._field_kind.ptr());
				if (_1ad350cec_types_are_compatible(_32117_dest.get()._field_kind,_32521_src.get()._field_kind)) {
					return true;
				}
			}
		}
		_match_end_1b07c42b2:;
	}
	return _1ad387bbe_check_type_compatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_kind,(*_self_)._field_error_token);
}



inline jule::Bool _1ad3d161e_check(_1ad3d019a_AssignTypeChecker* _self_) {
	jule::Bool _33413_ok = _1ad3d1344_check_compatibility(&(*_self_));
	if (_33413_ok) {
		_1ad444a5b_apply_implicit_cast((*_self_)._field_dest,(*_self_)._field_d);
	}
	return _33413_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3d019a_AssignTypeChecker _Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1ad3d25cb_push_generic(_1ad3d1e6b_DynamicTypeAnnotation* _self_,jule::Ptr<_1ad429931_TypeKind>& _35236_k,jule::I64 _35250_i) {
	(*_self_)._field_f.get()._field_generics[_35250_i]=_35236_k;
}



inline jule::Bool _1ad3d2950_annotate_prim(_1ad3d1e6b_DynamicTypeAnnotation* _self_,jule::Ptr<_1ad429931_TypeKind>& _35644_k) {
	jule::Bool _35660_ok = jule::Bool();
	jule::Str _35713_kind = _1ad429d4e_to_str((*((*_self_)._field_k)).ptr());
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1b07d0488:;
		if (it != expr.end()) {
			jule::I64 _1b07d0510_i = it - expr.begin();
			jule::Ptr<_1ab01c845_GenericDecl> _1b07d0763_g = *it;
			{
				if (_35713_kind != _1b07d0763_g.get()._field_ident) {
					goto _iter_next_1b07d0488;
				}
				jule::Ptr<_1ad429931_TypeKind> _36317_t = (*_self_)._field_f.get()._field_generics[_1b07d0510_i];
				{
					
					if ((_36317_t == nullptr)) {
						_case_begin_1b07d1b0a:;
						{
							_1ad3d25cb_push_generic(&(*_self_), _35644_k,_1b07d0510_i);
						}
					}
					else if ((!(_1ad42a206_equals(_36317_t, _35644_k)))) {
						_case_begin_1b07d1b82:;
						{
							_35660_ok = false;
							return _35660_ok;
						}
					}
					_match_end_1b07d1a0b:;
				}
				(*((*_self_)._field_k)).get()._field_kind=_35644_k.get()._field_kind;
				_35660_ok = true;
				return _35660_ok;
			}
			_iter_next_1b07d0488:;
			++it;
			_1b07d0510_i++;
			goto _iter_begin_1b07d0488;
		}
		_iter_end_1b07d0488:;
	}
	_35660_ok = false;
	return _35660_ok;
}



inline jule::Bool _1ad3d2d07_annotate_slc(_1ad3d1e6b_DynamicTypeAnnotation* _self_,jule::Ptr<_1ad429931_TypeKind>& _38043_k) {
	jule::Bool _38059_ok = jule::Bool();
	jule::Ptr<_1ad4346d8_Slc> _38117_pslc = _1ad42ce0c_slc((*((*_self_)._field_k)).ptr());
	if ((_38117_pslc == nullptr)) {
		_38059_ok = false;
		return _38059_ok;
	}
	jule::Ptr<_1ad4346d8_Slc> _38617_slc = _1ad42ce0c_slc(_38043_k.ptr());
	(*_self_)._field_k=(&(_38117_pslc.get()._field_elem));
	_38059_ok = _1ad3d49b8_annotate_kind(&(*_self_), _38617_slc.get()._field_elem);
	return _38059_ok;
}



inline jule::Bool _1ad3d328b_check_map_key(_1ad3d1e6b_DynamicTypeAnnotation* _self_,jule::Ptr<_1ad429931_TypeKind>* _39143_k,jule::Ptr<_1ad429931_TypeKind>& _39163_ck) {
	jule::Bool _39180_ok = jule::Bool();
	jule::Ptr<_1ad429931_TypeKind>* _39217_old = (*_self_)._field_k;
	(*_self_)._field_k=_39143_k;
	_39180_ok=_1ad3d49b8_annotate_kind(&(*_self_), _39163_ck);
	(*_self_)._field_k=_39217_old;
	return _39180_ok;
}



inline jule::Bool _1ad3d3643_annotate_map(_1ad3d1e6b_DynamicTypeAnnotation* _self_,jule::Ptr<_1ad429931_TypeKind>& _39943_k) {
	jule::Bool _39959_ok = jule::Bool();
	jule::Ptr<_1ad4360be_Map> _40017_pmap = _1ad42da67_map((*((*_self_)._field_k)).ptr());
	if ((_40017_pmap == nullptr)) {
		_39959_ok = false;
		return _39959_ok;
	}
	jule::Ptr<_1ad4360be_Map> _40517_m = _1ad42da67_map(_39943_k.ptr());
	_39959_ok = _1ad3d328b_check_map_key(&(*_self_), (&(_40017_pmap.get()._field_key)),_40517_m.get()._field_key) && _1ad3d328b_check_map_key(&(*_self_), (&(_40017_pmap.get()._field_val)),_40517_m.get()._field_val);
	return _39959_ok;
}



inline jule::Bool _1ad3d39ea_annotate_fn(_1ad3d1e6b_DynamicTypeAnnotation* _self_,jule::Ptr<_1ad429931_TypeKind>& _41142_k) {
	jule::Bool _41158_ok = jule::Bool();
	jule::Ptr<_1ac67a501_FnIns> _41217_pf = _1ad42d1d7_fnc((*((*_self_)._field_k)).ptr());
	if ((_41217_pf == nullptr)) {
		_41158_ok = false;
		return _41158_ok;
	}
	jule::Ptr<_1ac67a501_FnIns> _41617_f = _1ad42d1d7_fnc(_41142_k.ptr());
	{
		
		if (_41217_pf.get()._field_params.len() != static_cast<jule::I64>(static_cast<jule::I64>(_41617_f.get()._field_params.len()))) {
			_case_begin_1b07dd83c:;
			{
				_41158_ok = false;
				return _41158_ok;
			}
		}
		else if (_1ac676ec0_is_void(_41217_pf.get()._field_decl.ptr()) != _1ac676ec0_is_void(_41617_f.get()._field_decl.ptr())) {
			_case_begin_1b07dd8b4:;
			{
				_41158_ok = false;
				return _41158_ok;
			}
		}
		_match_end_1b07dd771:;
	}
	_41158_ok=true;
	jule::Ptr<_1ad429931_TypeKind>* _42617_old = (*_self_)._field_k;
	{
		auto &expr = _41617_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1b07e0630:;
		if (it != expr.end()) {
			jule::I64 _1b07e0b5d_i = it - expr.begin();
			jule::Ptr<_1ac67939b_ParamIns> _1b07e0d5b_fp = *it;
			{
				(*_self_)._field_k=(&(_41217_pf.get()._field_params[_1b07e0b5d_i].get()._field_kind));
				_41158_ok=_1ad3d49b8_annotate_kind(&(*_self_), _1b07e0d5b_fp.get()._field_kind) && _41158_ok;
			}
			_iter_next_1b07e0630:;
			++it;
			_1b07e0b5d_i++;
			goto _iter_begin_1b07e0630;
		}
		_iter_end_1b07e0630:;
	}
	if ((!(_1ac676ec0_is_void(_41217_pf.get()._field_decl.ptr())))) {
		(*_self_)._field_k=(&(_41217_pf.get()._field_result));
		_41158_ok=_1ad3d49b8_annotate_kind(&(*_self_), _41617_f.get()._field_result) && _41158_ok;
	}
	(*_self_)._field_k=_42617_old;
	return _41158_ok;
}



inline jule::Bool _1ad3d3da2_annotate_ptr(_1ad3d1e6b_DynamicTypeAnnotation* _self_,jule::Ptr<_1ad429931_TypeKind>& _44143_k) {
	jule::Bool _44159_ok = jule::Bool();
	jule::Ptr<_1ad437983_Ptr> _44217_pptr = _1ad42c57c_ptr((*((*_self_)._field_k)).ptr());
	if ((_44217_pptr == nullptr)) {
		_44159_ok = false;
		return _44159_ok;
	}
	jule::Ptr<_1ad437983_Ptr> _44717_ptr = _1ad42c57c_ptr(_44143_k.ptr());
	(*_self_)._field_k=(&(_44217_pptr.get()._field_elem));
	_44159_ok = _1ad3d49b8_annotate_kind(&(*_self_), _44717_ptr.get()._field_elem);
	return _44159_ok;
}



inline jule::Bool _1ad3d4259_annotate_sptr(_1ad3d1e6b_DynamicTypeAnnotation* _self_,jule::Ptr<_1ad429931_TypeKind>& _45244_k) {
	jule::Bool _45260_ok = jule::Bool();
	jule::Ptr<_1ad433b05_Sptr> _45317_ssptr = _1ad42c2a2_sptr((*((*_self_)._field_k)).ptr());
	if ((_45317_ssptr == nullptr)) {
		_45260_ok = false;
		return _45260_ok;
	}
	jule::Ptr<_1ad433b05_Sptr> _45817_sptr = _1ad42c2a2_sptr(_45244_k.ptr());
	(*_self_)._field_k=(&(_45317_ssptr.get()._field_elem));
	_45260_ok = _1ad3d49b8_annotate_kind(&(*_self_), _45817_sptr.get()._field_elem);
	return _45260_ok;
}



inline jule::Bool _1ad3d4611_annotate_any(_1ad3d1e6b_DynamicTypeAnnotation* _self_,jule::Ptr<_1ad429931_TypeKind>& _46343_k) {
	jule::Bool _46359_ok = jule::Bool();
	jule::Str _46413_kind = _1ad429d4e_to_str((*((*_self_)._field_k)).ptr());
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1b07ea041:;
		if (it != expr.end()) {
			jule::I64 _1b07ea34e_i = it - expr.begin();
			jule::Ptr<_1ab01c845_GenericDecl> _1b07ea591_g = *it;
			{
				if (_46413_kind != _1b07ea591_g.get()._field_ident) {
					goto _iter_next_1b07ea041;
				}
				jule::Ptr<_1ad429931_TypeKind> _47017_t = (*_self_)._field_f.get()._field_generics[_1b07ea34e_i];
				{
					
					if ((_47017_t == nullptr)) {
						_case_begin_1b07eb938:;
						{
							_1ad3d25cb_push_generic(&(*_self_), _46343_k,_1b07ea34e_i);
						}
					}
					else if ((!(_1ad42a206_equals(_47017_t, _46343_k)))) {
						_case_begin_1b07eb9b0:;
						{
							_46359_ok = false;
							return _46359_ok;
						}
					}
					_match_end_1b07eb839:;
				}
				(*((*_self_)._field_k)).get()._field_kind=_46343_k.get()._field_kind;
				_46359_ok = true;
				return _46359_ok;
			}
			_iter_next_1b07ea041:;
			++it;
			_1b07ea34e_i++;
			goto _iter_begin_1b07ea041;
		}
		_iter_end_1b07ea041:;
	}
	_46359_ok = false;
	return _46359_ok;
}



inline jule::Bool _1ad3d49b8_annotate_kind(_1ad3d1e6b_DynamicTypeAnnotation* _self_,jule::Ptr<_1ad429931_TypeKind>& _48744_k) {
	jule::Bool _48760_ok = jule::Bool();
	if (((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr)) {
		return _48760_ok;
	}
	{
		
		if (_1ad3d4611_annotate_any(&(*_self_), _48744_k)) {
			_case_begin_1b07eebd3:;
			{
				_48760_ok = true;
				return _48760_ok;
			}
		}
		else if ((_1ad42bec7_prim(_48744_k.ptr()) != nullptr)) {
			_case_begin_1b07eec49:;
			{
				_48760_ok = _1ad3d2950_annotate_prim(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else if ((_1ad42ce0c_slc(_48744_k.ptr()) != nullptr)) {
			_case_begin_1b07ee8c5:;
			{
				_48760_ok = _1ad3d2d07_annotate_slc(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else if ((_1ad42da67_map(_48744_k.ptr()) != nullptr)) {
			_case_begin_1b07ee93b:;
			{
				_48760_ok = _1ad3d3643_annotate_map(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else if ((_1ad42d1d7_fnc(_48744_k.ptr()) != nullptr)) {
			_case_begin_1b07ee9a2:;
			{
				_48760_ok = _1ad3d39ea_annotate_fn(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else if ((_1ad42c57c_ptr(_48744_k.ptr()) != nullptr)) {
			_case_begin_1b07ee52e:;
			{
				_48760_ok = _1ad3d3da2_annotate_ptr(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else if ((_1ad42c2a2_sptr(_48744_k.ptr()) != nullptr)) {
			_case_begin_1b07ee595:;
			{
				_48760_ok = _1ad3d4259_annotate_sptr(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else {
			_case_begin_1b07ee4b8:;
			{
				_48760_ok = false;
				return _48760_ok;
			}
		}
		_match_end_1b07edb05:;
	}
}



inline jule::Bool _1ad3d4c93_annotate(_1ad3d1e6b_DynamicTypeAnnotation* _self_) {
	jule::Bool _50436_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_kind));
	_50436_ok = _1ad3d49b8_annotate_kind(&(*_self_), (*_self_)._field_a.get()._field_kind);
	return _50436_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3d1e6b_DynamicTypeAnnotation _Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1ad3d5c50_push_err_token(_1ad3d55e0_FnCallArgChecker* _self_,_1ab005531_Token _52033_token,jule::Str _52047_fmt,jule::Slice<jule::Any> _52060_args) {
	_1ad3810c4_push_err((*_self_)._field_e.get()._field_s.ptr(), _52033_token,_52047_fmt,_52060_args);
}



inline void _1ad3d614b_push_err(_1ad3d55e0_FnCallArgChecker* _self_,jule::Str _52427_fmt,jule::Slice<jule::Any> _52440_args) {
	_1ad3d5c50_push_err_token(&(*_self_), (*_self_)._field_error_token,_52427_fmt,_52440_args);
}



inline jule::Slice<jule::Ptr<_1ac67939b_ParamIns>> _1ad3d6426_get_params(_1ad3d55e0_FnCallArgChecker* _self_) {
	if ((((*_self_)._field_f.get()._field_params.len() > 0LL) && ((*_self_)._field_f.get()._field_params[0LL].get()._field_decl != nullptr)) && _1ac6753db_is_self((*_self_)._field_f.get()._field_params[0LL].get()._field_decl.ptr())) {
		return (*_self_)._field_f.get()._field_params.slice(1LL);
	}
	return (*_self_)._field_f.get()._field_params;
}



inline jule::Bool _1ad3d67cd_check_counts(_1ad3d55e0_FnCallArgChecker* _self_,jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>& _53732_params) {
	jule::Bool _53755_ok = jule::Bool();
	jule::I64 _53817_n = _53732_params.len();
	if ((_53817_n > 0LL) && _1ac6753db_is_self(_53732_params[0LL].get()._field_decl.ptr())) {
		(_53817_n)--;
	}
	jule::I64 _54317_diff = _53817_n - static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len()));
	{
		
		if ((_54317_diff == 0LL)) {
			_case_begin_1b080db59:;
			{
				_53755_ok = true;
				return _53755_ok;
			}
		}
		else if ((_53817_n > 0LL) && _53732_params[(_53817_n - 1LL)].get()._field_decl.get()._field_variadic) {
			_case_begin_1b080dbd1:;
			{
				_53755_ok = true;
				return _53755_ok;
			}
		}
		else if ((_54317_diff < 0LL) || (_54317_diff > static_cast<jule::I64>(static_cast<jule::I64>(_53732_params.len())))) {
			_case_begin_1b080dc58:;
			{
				_1ad3d614b_push_err(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_53755_ok = false;
				return _53755_ok;
			}
		}
		_match_end_1b080da7c:;
	}
	jule::Str _55417_idents = jule::Str();
	for (; (_54317_diff > 0LL); (_54317_diff)--) {
		{
			_55417_idents+=jule::Str(", ", 2) + _53732_params[_53817_n - _54317_diff].get()._field_decl.get()._field_ident;
		}
	_iter_next_1b0811530:;
	}
	_iter_end_1b0811530:;
	(_55417_idents).mut_slice(2LL);
	_1ad3d614b_push_err(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_55417_idents)}));
	_53755_ok = false;
	return _53755_ok;
}



inline jule::Bool _1ad3d6d3e_check_arg(_1ad3d55e0_FnCallArgChecker* _self_,jule::Ptr<_1ac67939b_ParamIns>& _56433_p,jule::Ptr<_1ad3e6975_Data>& _56452_arg,_1ab005531_Token& _56469_error_token) {
	jule::Bool _56491_ok = jule::Bool();
	if ((*_self_)._field_dynamic_annotation && _1ac67c5d0_parameter_uses_generics(_56433_p.get()._field_decl,(*_self_)._field_f.get()._field_decl.get()._field_generics)) {
		_56491_ok=(!(_56433_p.get()._field_decl.get()._field_variadic));
		if (_56491_ok) {
			_1ad3d1e6b_DynamicTypeAnnotation _56825_dta = _1ad3d1e6b_DynamicTypeAnnotation((*_self_)._field_e,(*_self_)._field_f,_56433_p,_56452_arg,_56469_error_token,nullptr);
			_56491_ok=_1ad3d4c93_annotate(&_56825_dta);
		}
		if ((!(_56491_ok))) {
			_1ad3d5c50_push_err_token(&(*_self_), _56469_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_56491_ok = false;
			return _56491_ok;
		}
	}
	if (_1ad389aa0_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, _56433_p.get()._field_decl.get()._field_mutable,_56433_p.get()._field_decl.get()._field_reference,_56433_p.get()._field_kind,_56452_arg,_56469_error_token)) {
		_1ad387619_check_assign_type((*_self_)._field_e.get()._field_s, _56433_p.get()._field_decl.get()._field_reference,_56433_p.get()._field_kind,_56452_arg,_56469_error_token);
	}
	_56491_ok = true;
	return _56491_ok;
}



inline jule::Bool _1ad3d72c3_push(_1ad3d55e0_FnCallArgChecker* _self_,jule::Ptr<_1ac67939b_ParamIns>& _59128_p,jule::Ptr<_1aadb528c_Expr> _59146_arg) {
	jule::Bool _59160_ok = jule::Bool();
	jule::Ptr<_1ad429931_TypeKind> _59217_old = (*_self_)._field_e.get()._field_prefix;
	jule::Bool _59313_old_immut = (*_self_)._field_e.get()._field_immutable;
	jule::Ptr<_1ad3e6975_Data> _59417_d = nullptr;
	(*_self_)._field_e.get()._field_immutable=(!(_59128_p.get()._field_decl.get()._field_mutable));
	if ((!((*_self_)._field_dynamic_annotation)) && (!(_59128_p.get()._field_decl.get()._field_variadic))) {
		(*_self_)._field_e.get()._field_prefix=_59128_p.get()._field_kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	}
	_59417_d=_1ad418524_eval_expr_kind((*_self_)._field_e, _59146_arg.get()._field_kind);
	(*_self_)._field_e.get()._field_prefix=_59217_old;
	(*_self_)._field_e.get()._field_immutable=_59313_old_immut;
	if ((_59417_d == nullptr)) {
		_59160_ok = false;
		return _59160_ok;
	}
	(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_59417_d));
	_59160_ok = _1ad3d6d3e_check_arg(&(*_self_), _59128_p,_59417_d,_59146_arg.get()._field_token);
	return _59160_ok;
}



inline jule::Bool _1ad3d7757_push_variadic(_1ad3d55e0_FnCallArgChecker* _self_,jule::Ptr<_1ac67939b_ParamIns>& _61537_p,jule::I64 _61555_i) {
	jule::Bool _61565_ok = jule::Bool();
	_61565_ok=true;
	jule::Bool _61717_variadiced = false;
	jule::Bool _61813_more = (_61555_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len()));
	jule::Ptr<_1ac66949b_SliceExprModel> _61917_model = jule::new_ptr<_1ac66949b_SliceExprModel>(_1ac66949b_SliceExprModel(_61537_p.get()._field_kind,jule::Slice<jule::Any>()));
	jule::Ptr<_1ad429931_TypeKind> _62317_old = (*_self_)._field_e.get()._field_prefix;
	jule::Bool _62813_variadic = _61537_p.get()._field_kind.get()._field_variadic;
	_61537_p.get()._field_kind.get()._field_variadic=false;
	__JULE_DEFER({
		_61537_p.get()._field_kind.get()._field_variadic=_62813_variadic;
	});
	for (; _61555_i < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len())); (_61555_i)++) {
		{
			jule::Ptr<_1aadb528c_Expr> _63521_arg = (*_self_)._field_args[_61555_i];
			{
				auto &_match_expr{ _63521_arg.get()._field_kind };
				
				if (_match_expr.type_is<jule::Ptr<_1aadb66cd_VariadicExpr>>()) {
					_case_begin_1b0821b6c:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ad4346d8_Slc>(_1ad4346d8_Slc(_61537_p.get()._field_kind)), 7)));
					}
				}
				else {
					_case_begin_1b08237a6:;
					{
						(*_self_)._field_e.get()._field_prefix=_61537_p.get()._field_kind;
					}
				}
				_match_end_1b082372e:;
			}
			jule::Ptr<_1ad3e6975_Data> _64821_d = _1ad4188cb_eval((*_self_)._field_e, _63521_arg);
			if ((_64821_d == nullptr)) {
				_61565_ok=false;
				goto _iter_next_1b0822ce4;
			}
			if (_64821_d.get()._field_kind.get()._field_variadic) {
				_61717_variadiced=true;
				{
					auto &_match_expr{ _64821_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ac66949b_SliceExprModel>>()) {
						_case_begin_1b0826787:;
						{
							_61917_model=_64821_d.get()._field_model.operator jule::Ptr<_1ac66949b_SliceExprModel>();
							_61917_model.get()._field_elem_kind=_61537_p.get()._field_kind;
						}
					}
					else {
						_case_begin_1b082628c:;
						{
							_61917_model=nullptr;
							(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_64821_d));
						}
					}
					_match_end_1b0826237:;
				}
				_61537_p.get()._field_kind.get()._field_variadic=true;
				_61565_ok=_61565_ok && _1ad3d6d3e_check_arg(&(*_self_), _61537_p,_64821_d,_63521_arg.get()._field_token);
				(_61555_i)++;
				goto _iter_end_1b0822ce4;
			}
			_61565_ok=_61565_ok && _1ad3d6d3e_check_arg(&(*_self_), _61537_p,_64821_d,_63521_arg.get()._field_token);
			_61917_model.get()._field_elems = jule::alloc_for_append(_61917_model.get()._field_elems,1);_61917_model.get()._field_elems.__push(_64821_d.get()._field_model);
		}
	_iter_next_1b0822ce4:;
	}
	_iter_end_1b0822ce4:;
	(*_self_)._field_e.get()._field_prefix=_62317_old;
	if (_61717_variadiced && _61813_more) {
		_1ad3d5c50_push_err_token(&(*_self_), (*_self_)._field_args[_61555_i].get()._field_token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	}
	if ((_61917_model != nullptr)) {
		(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_61917_model));
	}
	return _61565_ok;
}



inline jule::Bool _1ad3d7b0e_check_args(_1ad3d55e0_FnCallArgChecker* _self_,jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>& _69434_params) {
	jule::Bool _69457_ok = jule::Bool();
	jule::Bool _69513_arg = (*_self_)._field_e.get()._field_arg;
	(*_self_)._field_e.get()._field_arg=true;
	_69457_ok=true;
	jule::I64 _69917_i = 0LL;
	_julec_label_iter:;
	while (_69917_i < static_cast<jule::I64>(static_cast<jule::I64>(_69434_params.len()))) {
		{
			jule::Ptr<_1ac67939b_ParamIns> _70221_p = _69434_params[_69917_i];
			{
				
				if (_1ac6753db_is_self(_70221_p.get()._field_decl.ptr())) {
					_case_begin_1b082dd22:;
					{
						goto _match_end_1b082d926;
					}
				}
				else if (_70221_p.get()._field_decl.get()._field_variadic) {
					_case_begin_1b082da14:;
					{
						_69457_ok=_1ad3d7757_push_variadic(&(*_self_), _70221_p,_69917_i) && _69457_ok;
						goto _iter_end_1b082ce86;
					}
				}
				else if ((*_self_)._field_args.len() <= _69917_i) {
					_case_begin_1b082da7a:;
					{
						_69457_ok=false;
						goto _iter_end_1b082ce86;
					}
				}
				else {
					_case_begin_1b082d99d:;
					{
						_69457_ok=_1ad3d72c3_push(&(*_self_), _70221_p,(*_self_)._field_args[_69917_i]) && _69457_ok;
					}
				}
				_match_end_1b082d926:;
			}
			(_69917_i)++;
		}
	_iter_next_1b082ce86:;
	}
	_iter_end_1b082ce86:;
	(*_self_)._field_e.get()._field_arg=_69513_arg;
	return _69457_ok;
}



inline jule::Bool _1ad3d7e2d_check_dynamic_type_annotation(_1ad3d55e0_FnCallArgChecker* _self_) {
	jule::Bool _72450_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1b08325c8:;
		if (it != expr.end()) {
			jule::Ptr<_1ad429931_TypeKind> _1b0832650_g = *it;
			{
				if ((_1b0832650_g == nullptr)) {
					_1ad3d614b_push_err(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_72450_ok = false;
					return _72450_ok;
				}
			}
			_iter_next_1b08325c8:;
			++it;
			goto _iter_begin_1b08325c8;
		}
		_iter_end_1b08325c8:;
	}
	_72450_ok = true;
	return _72450_ok;
}



inline jule::Bool _1ad3d81e7_check(_1ad3d55e0_FnCallArgChecker* _self_) {
	jule::Bool _73426_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1ac67939b_ParamIns>> _73517_params = _1ad3d6426_get_params(&(*_self_));
	_73426_ok=_1ad3d67cd_check_counts(&(*_self_), _73517_params);
	if ((!(_73426_ok))) {
		_73426_ok = false;
		return _73426_ok;
	}
	_73426_ok=_1ad3d7b0e_check_args(&(*_self_), _73517_params);
	if (_73426_ok && (*_self_)._field_dynamic_annotation) {
		_73426_ok=_1ad3d7e2d_check_dynamic_type_annotation(&(*_self_));
	}
	return _73426_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3d55e0_FnCallArgChecker _Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1ad3d8e62_push_err(_1ad3d8846_StructLitChecker* _self_,_1ab005531_Token _75827_token,jule::Str _75841_fmt,jule::Slice<jule::Any> _75854_args) {
	_1ad3e90b5_push_err((*_self_)._field_e.ptr(), _75827_token,_75841_fmt,_75854_args);
}



inline void _1ad3d935d_push_suggestion(_1ad3d8846_StructLitChecker* _self_,jule::Str _76334_fmt,jule::Slice<jule::Any> _76347_args) {
	_1ad3e94b1_push_suggestion((*_self_)._field_e.ptr(), _76334_fmt,_76347_args);
}



inline void _1ad3d9836_push_match(_1ad3d8846_StructLitChecker* _self_,jule::Ptr<_1ac663a06_FieldIns>& _76734_f,jule::Ptr<_1ad3e6975_Data>& _76753_d,_1ab005531_Token& _76768_error_token) {
	
	if (_1ad389aa0_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_76734_f.get()._field_kind,_76753_d,_76768_error_token)) {
		_1ad387619_check_assign_type((*_self_)._field_e.get()._field_s, false,_76734_f.get()._field_kind,_76753_d,_76768_error_token);
	}
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1ac6675ed_StructArgExprModel>(_1ac6675ed_StructArgExprModel(_76734_f,_76753_d.get()._field_model)));
}



inline void _1ad3d9c32_check_pair(_1ad3d8846_StructLitChecker* _self_,jule::Ptr<_1ab01b602_FieldExprPair>& _78034_pair,jule::Slice<jule::Ptr<_1aadb528c_Expr>>& _78061_exprs) {
	jule::Ptr<_1ac663a06_FieldIns> _78217_f = _1ac665b29_find_field((*_self_)._field_s.ptr(), _78034_pair.get()._field_field._field_kind);
	if ((_78217_f == nullptr)) {
		_1ad3d8e62_push_err(&(*_self_), _78034_pair.get()._field_field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_78034_pair.get()._field_field._field_kind)}));
		return;
	}
	if ((!(_1ad381954_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _78217_f.get()._field_decl.get()._field_public,_78217_f.get()._field_decl.get()._field_token)))) {
		_1ad3d8e62_push_err(&(*_self_), _78034_pair.get()._field_field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_78034_pair.get()._field_field._field_kind)}));
		_1ad3d935d_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	}
	_julec_label_dup_lookup:;
	{
		auto &expr = _78061_exprs;
		auto it = expr.begin();
		_iter_begin_1b0842341:;
		if (it != expr.end()) {
			jule::Ptr<_1aadb528c_Expr> _1b084241d_expr = *it;
			{
				{
					auto &_match_expr{ _1b084241d_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1ab01b602_FieldExprPair>>()) {
						_case_begin_1b0842bc1:;
						{
							jule::Ptr<_1ab01b602_FieldExprPair> _79725_dpair = _1b084241d_expr.get()._field_kind.operator jule::Ptr<_1ab01b602_FieldExprPair>();
							{
								
								if (_78034_pair == _79725_dpair) {
									_case_begin_1b08439c4:;
									{
										goto _iter_end_1b0842341;
									}
								}
								else if (_78034_pair.get()._field_field._field_kind == _79725_dpair.get()._field_field._field_kind) {
									_case_begin_1b0843a4b:;
									{
										_1ad3d8e62_push_err(&(*_self_), _78034_pair.get()._field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_78034_pair.get()._field_field._field_kind)}));
										goto _iter_end_1b0842341;
									}
								}
								_match_end_1b0843908:;
							}
						}
					}
					_match_end_1b0842b6b:;
				}
			}
			_iter_next_1b0842341:;
			++it;
			goto _iter_begin_1b0842341;
		}
		_iter_end_1b0842341:;
	}
	jule::Ptr<_1ad429931_TypeKind> _80817_prefix = (*_self_)._field_e.get()._field_prefix;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_80817_prefix;
	});
	(*_self_)._field_e.get()._field_prefix=_78217_f.get()._field_kind;
	jule::Ptr<_1ad3e6975_Data> _81217_d = _1ad418524_eval_expr_kind((*_self_)._field_e, jule::Any(_78034_pair.get()._field_expr));
	if ((_81217_d == nullptr)) {
		return;
	}
	_1ad3d9836_push_match(&(*_self_), _78217_f,_81217_d,_78034_pair.get()._field_field);
}



inline jule::Bool _1ad3da0d9_ready_exprs(_1ad3d8846_StructLitChecker* _self_,jule::Slice<jule::Ptr<_1aadb528c_Expr>>& _81935_exprs) {
	jule::Bool _82017_ok = true;
	{
		auto &expr = _81935_exprs;
		auto it = expr.begin();
		_iter_begin_1b0848479:;
		if (it != expr.end()) {
			jule::I64 _1b0848523_i = it - expr.begin();
			jule::Ptr<_1aadb528c_Expr> _1b0848798_expr = *it;
			{
				{
					auto &_match_expr{ _1b0848798_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1ab01bc62_KeyValPair>>()) {
						_case_begin_1b084907e:;
						{
							jule::Ptr<_1ab01bc62_KeyValPair> _82425_pair = _1b0848798_expr.get()._field_kind.operator jule::Ptr<_1ab01bc62_KeyValPair>();
							{
								auto &_match_expr{ _82425_pair.get()._field_key.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1aadb628d_IdentExpr>>()) {
									_case_begin_1b0849766:;
									{
										goto _match_end_1b084a0c4;
									}
								}
								else {
									_case_begin_1b084a129:;
									{
										_1ad3d8e62_push_err(&(*_self_), _82425_pair.get()._field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_82017_ok=false;
										goto _iter_next_1b0848479;
									}
								}
								_match_end_1b084a0c4:;
							}
							_81935_exprs[_1b0848523_i].get()._field_kind=jule::Any(jule::new_ptr<_1ab01b602_FieldExprPair>(_1ab01b602_FieldExprPair(_82425_pair.get()._field_key.get()._field_token,_82425_pair.get()._field_val)));
						}
					}
					_match_end_1b0849029:;
				}
			}
			_iter_next_1b0848479:;
			++it;
			_1b0848523_i++;
			goto _iter_begin_1b0848479;
		}
		_iter_end_1b0848479:;
	}
	return _82017_ok;
}



inline void _1ad3da408_check(_1ad3d8846_StructLitChecker* _self_,jule::Slice<jule::Ptr<_1aadb528c_Expr>>& _84329_exprs) {
	if ((_84329_exprs.len() == 0LL)) {
		return;
	}
	if ((!(_1ad3da0d9_ready_exprs(&(*_self_), _84329_exprs)))) {
		return;
	}
	jule::Bool _85217_paired = false;
	{
		auto &expr = _84329_exprs;
		auto it = expr.begin();
		_iter_begin_1b084d0e9:;
		if (it != expr.end()) {
			jule::I64 _1b084d1a4_i = it - expr.begin();
			jule::Ptr<_1aadb528c_Expr> _1b084d418_expr = *it;
			{
				{
					auto &_match_expr{ _1b084d418_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1ab01b602_FieldExprPair>>()) {
						_case_begin_1b0852a38:;
						{
							jule::Ptr<_1ab01b602_FieldExprPair> _85625_pair = _1b084d418_expr.get()._field_kind.operator jule::Ptr<_1ab01b602_FieldExprPair>();
							if ((_1b084d1a4_i > 0LL) && (!(_85217_paired))) {
								_1ad3d8e62_push_err(&(*_self_), _85625_pair.get()._field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							}
							_85217_paired=true;
							_1ad3d9c32_check_pair(&(*_self_), _85625_pair,_84329_exprs);
						}
					}
					else {
						_case_begin_1b084dbee:;
						{
							if (_85217_paired) {
								_1ad3d8e62_push_err(&(*_self_), _1b084d418_expr.get()._field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							}
							if (_1b084d1a4_i >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_s.get()._field_fields.len()))) {
								_1ad3d8e62_push_err(&(*_self_), _1b084d418_expr.get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1b084d0e9;
							}
							jule::Ptr<_1ac663a06_FieldIns> _87125_field = (*_self_)._field_s.get()._field_fields[_1b084d1a4_i];
							jule::Ptr<_1ad429931_TypeKind> _87325_prefix = (*_self_)._field_e.get()._field_prefix;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_87325_prefix;
							});
							(*_self_)._field_e.get()._field_prefix=_87125_field.get()._field_kind;
							jule::Ptr<_1ad3e6975_Data> _87725_d = _1ad418524_eval_expr_kind((*_self_)._field_e, _1b084d418_expr.get()._field_kind);
							if ((_87725_d == nullptr)) {
								goto _iter_next_1b084d0e9;
							}
							_1ad3d9836_push_match(&(*_self_), _87125_field,_87725_d,_1b084d418_expr.get()._field_token);
						}
					}
					_match_end_1b084db99:;
				}
			}
			_iter_next_1b084d0e9:;
			++it;
			_1b084d1a4_i++;
			goto _iter_begin_1b084d0e9;
		}
		_iter_end_1b084d0e9:;
	}
	if ((!(_85217_paired))) {
		jule::I64 _88817_n = (*_self_)._field_s.get()._field_fields.len();
		jule::I64 _88921_diff = _88817_n - static_cast<jule::I64>(static_cast<jule::I64>(_84329_exprs.len()));
		{
			
			if ((_88921_diff <= 0LL)) {
				_case_begin_1b08562de:;
				{
					return;
				}
			}
			_match_end_1b0856212:;
		}
		jule::Str _89521_idents = jule::Str();
		for (; (_88921_diff > 0LL); (_88921_diff)--) {
			{
				_89521_idents+=jule::Str(", ", 2) + (*_self_)._field_s.get()._field_fields[_88817_n - _88921_diff].get()._field_decl.get()._field_ident;
			}
		_iter_next_1b084d737:;
		}
		_iter_end_1b084d737:;
		(_89521_idents).mut_slice(2LL);
		_1ad3d8e62_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_89521_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3d8846_StructLitChecker _Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac666c07_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline void _1ad3dd85c_prepare_types(_1ad3dd3b7_RetTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1ad3a9350_get_result_types((*_self_)._field_f.get()._field_result);
	}
}



inline void _1ad3ddb7b_prepare_exprs(_1ad3dd3b7_RetTypeChecker* _self_,jule::Ptr<_1aadb528c_Expr>& _107637_e) {
	if ((_107637_e == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _107637_e.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1aadb56cc_TupleExpr>>()) {
			_case_begin_1ad7a575c:;
			{
				(*_self_)._field_exprs=_107637_e.get()._field_kind.operator jule::Ptr<_1aadb56cc_TupleExpr>().get()._field_expr;
			}
		}
		else {
			_case_begin_1ad7a53a5:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_107637_e);
			}
		}
		_match_end_1ad7a4dbb:;
	}
}



inline void _1ad3dddbd_ret_vars(_1ad3dd3b7_RetTypeChecker* _self_) {
	if (((*_self_)._field_f == nullptr) || _1ac676ec0_is_void((*_self_)._field_f.get()._field_decl.ptr())) {
		return;
	}
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1ad39e037_Var>>::alloc(0LL,static_cast<jule::I64>((*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents.len()));
	jule::Ptr<_1ad35872d_ScopeChecker> _109417_root_scope = _1ad35ab81_get_root((*_self_)._field_sc);
	jule::I64 _109617_j = 0LL;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1ad7a91bc:;
		if (it != expr.end()) {
			jule::I64 _1ad7a9244_i = it - expr.begin();
			_1ab005531_Token _1ad7a9497_ident = *it;
			{
				if ((!(_1ab008314_is_ignore_ident(_1ad7a9497_ident._field_kind))) && (!(_1ab008622_is_anon_ident(_1ad7a9497_ident._field_kind)))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_109417_root_scope.get()._field_table.get()._field_vars[_109617_j]);
					(_109617_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1ad39e037_Var>(_1ad39e037_Var(jule::Ptr<_1ad33ce0a_Scope>(),_1ab005531_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),(*_self_)._field_types[_1ad7a9244_i])),jule::Ptr<_1ad3e7c84_Value>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>(),jule::Ptr<_1ad39cc28_IterRelation>(),jule::Slice<jule::Ptr<_1ad39e037_Var>>())));
				}
			}
			_iter_next_1ad7a91bc:;
			++it;
			_1ad7a9244_i++;
			goto _iter_begin_1ad7a91bc;
		}
		_iter_end_1ad7a91bc:;
	}
	if ((_109617_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	}
}



inline void _1ad3de110_check_exprs(_1ad3dd3b7_RetTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;
	}
	jule::Slice<jule::Ptr<_1ad3e6975_Data>> _112017_datas = jule::Slice<jule::Ptr<_1ad3e6975_Data>>::alloc(0LL,static_cast<jule::I64>((*_self_)._field_exprs.len()));
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ad7ad831:;
		if (it != expr.end()) {
			jule::I64 _1ad7ad8ca_i = it - expr.begin();
			jule::Ptr<_1aadb528c_Expr> _1ad7ad9eb_expr = *it;
			{
				if (_1ad7ad8ca_i >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_types.len()))) {
					goto _iter_end_1ad7ad831;
				}
				jule::Ptr<_1ad429931_TypeKind> _112721_t = (*_self_)._field_types[_1ad7ad8ca_i];
				jule::Ptr<_1ad3e6975_Data> _112921_d = _1ad418c83_eval_expr(_1ad386b24_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1ad447256_Lookup>((*_self_)._field_sc, 0),_112721_t), _1ad7ad9eb_expr);
				if ((_112921_d == nullptr)) {
					goto _iter_next_1ad7ad831;
				}
				_112017_datas = jule::alloc_for_append(_112017_datas,1);_112017_datas.__push(_112921_d);
				if ((!(_112921_d.get()._field_mutable)) && _1ad42b092_mutable(_112921_d.get()._field_kind.ptr())) {
					_1ad3810c4_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;
				}
				_1ad3d019a_AssignTypeChecker _114121_ac = _1ad3d019a_AssignTypeChecker((*_self_)._field_sc.get()._field_s,_112721_t,_112921_d,(*_self_)._field_error_token);
				_1ad3d161e_check(&_114121_ac);
			}
			_iter_next_1ad7ad831:;
			++it;
			_1ad7ad8ca_i++;
			goto _iter_begin_1ad7ad831;
		}
		_iter_end_1ad7ad831:;
	}
	if ((_112017_datas.len() > 1LL)) {
		(*_self_)._field_model=jule::Any(jule::new_ptr<_1ac66d912_TupleExprModel>(_1ac66d912_TupleExprModel(_112017_datas)));
	} else if ((_112017_datas.len() == 1LL)) {
		(*_self_)._field_model=_112017_datas[0LL].get()._field_model;
	}
}



inline jule::Bool _1ad3de4b7_check(_1ad3dd3b7_RetTypeChecker* _self_,jule::Ptr<_1aadb528c_Expr>& _116029_e) {
	_1ad3dd85c_prepare_types(&(*_self_));
	_1ad3ddb7b_prepare_exprs(&(*_self_), _116029_e);
	_1ad3dddbd_ret_vars(&(*_self_));
	jule::I64 _116513_n = (*_self_)._field_exprs.len();
	if ((_116513_n == 0LL) && ((*_self_)._field_types.len() > 0LL)) {
		if ((!(_1ac677e05_any_var((*_self_)._field_f.get()._field_decl.ptr())))) {
			_1ad3810c4_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		}
		return true;
	}
	if (((_116513_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1ac676ec0_is_void((*_self_)._field_f.get()._field_decl.ptr())) {
		_1ad3810c4_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	}
	if (_116513_n > static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_types.len()))) {
		_1ad3810c4_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if (_116513_n < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_types.len()))) {
		_1ad3810c4_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	}
	_1ad3de110_check_exprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3dd3b7_RetTypeChecker _Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac667158_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaddb923_is_empty(_1ab01be82_SliceExpr* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01be82_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aadb58ec_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01c625_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac668566_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}



inline _1ad41b604_BinaryEval static__1ad41bc20_new_plain(jule::Ptr<_1ad3e89cc_Eval> _330629_e) {
	return _1ad41b604_BinaryEval(_330629_e,jule::Ptr<_1ad3e6975_Data>(),jule::Ptr<_1ad3e6975_Data>(),_1ab005531_Token());
}



inline _1ad41b604_BinaryEval static__1ad41c10a_new(jule::Ptr<_1ad3e89cc_Eval> _331223_e,_1ab005531_Token _331237_op) {
	return _1ad41b604_BinaryEval(_331223_e,jule::Ptr<_1ad3e6975_Data>(),jule::Ptr<_1ad3e6975_Data>(),_331237_op);
}



inline jule::Bool _1ad41c429_check_type_compatibility(_1ad41b604_BinaryEval* _self_) {
	return _1ad387bbe_check_type_compatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_kind,(*_self_)._field_r.get()._field_kind,(*_self_)._field_op);
}



inline jule::Bool _1ad41c759_check_struct_common_operator_compatibility(_1ad41b604_BinaryEval* _self_) {
	jule::Ptr<_1ac67a501_FnIns> _332617_overload = nullptr;
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1b0a40792:;
			{
				_332617_overload=_1ad42d4b2_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1b0a40808:;
			{
				_332617_overload=_1ad42d4b2_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b0a4086e:;
			{
				_332617_overload=_1ad42d4b2_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1b0a408d5:;
			{
				_332617_overload=_1ad42d4b2_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1b0a41e03:;
			{
				_332617_overload=_1ad42d4b2_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b0a41e69:;
			{
				_332617_overload=_1ad42d4b2_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b0a41ed0:;
			{
				_332617_overload=_1ad42d4b2_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b0a42046:;
			{
				_332617_overload=_1ad42d4b2_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_and;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1b0a42266:;
			{
				_332617_overload=_1ad42d4b2_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_or;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b0a422cc:;
			{
				_332617_overload=_1ad42d4b2_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_xor;
			}
		}
		else {
			_case_begin_1b0a40242:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1ad429d4e_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return false;
			}
		}
		_match_end_1b0a4072b:;
	}
	if ((_332617_overload == nullptr)) {
		_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1ad429d4e_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
		return false;
	}
	jule::Ptr<_1ac67939b_ParamIns> _335817_p = _332617_overload.get()._field_params[1LL];
	return _1ad387619_check_assign_type((*_self_)._field_e.get()._field_s, _335817_p.get()._field_decl.get()._field_reference,_335817_p.get()._field_kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41ca34_eval_nil(_1ad41b604_BinaryEval* _self_) {
	if ((!(_1ad42b36c_nil_compatible((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any(_1ad429d4e_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0a54d39:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else {
			_case_begin_1b0a5340e:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1b0a5384e:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41cd0e_eval_enum(_1ad41b604_BinaryEval* _self_) {
	jule::Ptr<_1ac724545_Enum> _338317_enm = _1ad42c857_enm((*_self_)._field_l.get()._field_kind.ptr());
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0a55b92:;
			{
				jule::Ptr<_1ad429931_TypeKind> _338721_rkind = (*_self_)._field_r.get()._field_kind;
				if ((_1ad42c857_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
					_338721_rkind=_1ad42c857_enm((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind.get()._field_kind;
				}
				if ((!(_1ad387bbe_check_type_compatibility((*_self_)._field_e.get()._field_s, _338317_enm.get()._field_kind.get()._field_kind,_338721_rkind,(*_self_)._field_op)))) {
					return nullptr;
				}
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		_match_end_1b0a56544:;
	}
	if ((_1ad42c857_enm((*_self_)._field_r.get()._field_kind.ptr()) == nullptr) || (_338317_enm != _1ad42c857_enm((*_self_)._field_r.get()._field_kind.ptr()))) {
		_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_338317_enm.get()._field_ident),jule::Any(_1ad429d4e_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b0a5c050:;
			{
				if ((!(_1ad355076_is_num(_1ad429d4e_to_str(_338317_enm.get()._field_kind.get()._field_kind.ptr()))))) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_338317_enm.get()._field_ident)}));
					return nullptr;
				}
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1b0a5bb21:;
			{
				if ((_1ad42bec7_prim(_338317_enm.get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1ad354916_is_int(_1ad430173_to_str(_1ad42bec7_prim(_338317_enm.get()._field_kind.get()._field_kind.ptr()).ptr()))))) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_338317_enm.get()._field_ident)}));
				}
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1b0a5aceb:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_338317_enm.get()._field_ident)}));
				return nullptr;
			}
		}
		_match_end_1b0a5baaa:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41d0d9_eval_sptr(_1ad41b604_BinaryEval* _self_) {
	if ((!(_1ad41c429_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0a656b8:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else {
			_case_begin_1b0a63991:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1ad429d4e_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b0a63d59:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41d3b4_eval_ptr(_1ad41b604_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1b0a680a0:;
			{
				if ((!(_1ad41c429_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				}
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1b0a68116:;
			{
				if ((_1ad42c57c_ptr((*_self_)._field_l.get()._field_kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				}
				if (_1ad4385cc_is_unsafe(_1ad42c57c_ptr((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1ad429d4e_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				}
				if ((!(_1ad425113_is_ptr_arithmetic_compatible_int((*_self_)._field_r)))) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1b0a65a5e:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1ad429d4e_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b0a666ca:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41d68e_eval_arr(_1ad41b604_BinaryEval* _self_) {
	if ((!(_1ad41c429_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0a714a4:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else {
			_case_begin_1b0a6e79e:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1ad429d4e_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b0a6eb12:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41d969_eval_slc(_1ad41b604_BinaryEval* _self_) {
	if ((!(_1ad41c429_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0a7441e:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else {
			_case_begin_1b0a7275d:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1ad429d4e_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b0a72a7c:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41dc44_eval_fn(_1ad41b604_BinaryEval* _self_) {
	if ((!(_1ad41c429_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0a77389:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else {
			_case_begin_1b0a756c8:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1ad429d4e_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b0a759e7:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41e01e_eval_struct(_1ad41b604_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1b0a78401:;
			{
				if ((_1ad42d4b2_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt == nullptr)) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1ad429d4e_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1b0a78467:;
			{
				if ((_1ad42d4b2_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt_eq == nullptr)) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1ad429d4e_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1b0a784cd:;
			{
				if ((_1ad42d4b2_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt == nullptr)) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1ad429d4e_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1b0a78555:;
			{
				if ((_1ad42d4b2_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt_eq == nullptr)) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1ad429d4e_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0a785cc:;
			{
				if ((!(_1ad41c429_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				}
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		_match_end_1b0a7839b:;
	}
	if ((!(_1ad41c759_check_struct_common_operator_compatibility(&(*_self_))))) {
		return nullptr;
	}
	return (*_self_)._field_l;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41e2e9_eval_trait(_1ad41b604_BinaryEval* _self_) {
	if ((!(_1ad41c429_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0a870e1:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else {
			_case_begin_1b0a85397:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1ad429d4e_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b0a85760:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41e5c4_eval_any(_1ad41b604_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0a8928b:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else {
			_case_begin_1b0a87487:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1b0a88103:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41e89e_eval_bool(_1ad41b604_BinaryEval* _self_) {
	if ((!(_1ad41c429_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1b0a8c58b:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1b0a8a8ca:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1ad429d4e_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1b0a8abe9:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad41eb79_eval_str(_1ad41b604_BinaryEval* _self_) {
	jule::Str _365617_rk = _1ad429d4e_to_str((*_self_)._field_r.get()._field_kind.ptr());
	if ((_365617_rk != jule::Str("str", 3))) {
		_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_365617_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b0a90d0e:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b0a8ec64:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		else {
			_case_begin_1b0a8d867:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1b0a8eb87:;
	}
}



inline void _1ad41edbb_set_type_to_greater(_1ad41b604_BinaryEval* _self_) {
	if (_1ad3e747b_is_const((*_self_)._field_l.ptr())) {
		if ((!(_1ad3e747b_is_const((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			return;
		}
		goto _julec_label_set;
	}
	if (_1ad3e747b_is_const((*_self_)._field_r.ptr())) {
		return;
	}
	_julec_label_set:;
	if (_1ad352c77_is_greater(_1ad42bec7_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind,_1ad42bec7_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind)) {
		(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
	}
}



inline void _1ad4201a7_check_mod_data(_1ad41b604_BinaryEval* _self_,jule::Ptr<_1ad3e6975_Data>& _369938_d) {
	if ((!(_1ad3e747b_is_const(_369938_d.ptr())))) {
		if ((_1ad42bec7_prim(_369938_d.get()._field_kind.ptr()) == nullptr) || (!(_1ad354916_is_int(_1ad42bec7_prim(_369938_d.get()._field_kind.ptr()).get()._field_kind)))) {
			_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		}
		return;
	}
	{
		
		if (_1ad3bcbe3_sig_assignable(jule::Str("i64", 3),_369938_d)) {
			_case_begin_1b0a98bb3:;
			{
				_1ad2c4952_set_i64(_369938_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1ad2c407d_as_i64(_369938_d.get()._field_constant.ptr())));
			}
		}
		else if (_1ad3ccd9b_unsig_assignable(jule::Str("u64", 3),_369938_d)) {
			_case_begin_1b0a988d8:;
			{
				_1ad2c4c71_set_u64(_369938_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1ad2c4358_as_u64(_369938_d.get()._field_constant.ptr())));
			}
		}
		else {
			_case_begin_1b0a98872:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1b0a9881c:;
	}
}



inline void _1ad4203e9_mod(_1ad41b604_BinaryEval* _self_) {
	_1ad4201a7_check_mod_data(&(*_self_), (*_self_)._field_l);
	_1ad4201a7_check_mod_data(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1ad4208c2_numbers_are_compatibile(_1ad41b604_BinaryEval* _self_,jule::Str& _372139_lk,jule::Str& _372149_rk) {
	if ((!(_1ad355076_is_num(_372149_rk)))) {
		return false;
	}
	if (_1ad3e747b_is_const((*_self_)._field_l.ptr())) {
		return true;
	}
	if ((_372139_lk == jule::Str("f32", 3))) {
		if (_1ad3e747b_is_const((*_self_)._field_r.ptr())) {
			return true;
		}
		return (_372149_rk == jule::Str("f32", 3));
	}
	if ((_372139_lk == jule::Str("f64", 3))) {
		if (_1ad3e747b_is_const((*_self_)._field_r.ptr())) {
			return true;
		}
		return (_372149_rk == jule::Str("f64", 3));
	}
	if (_1ad3e747b_is_const((*_self_)._field_r.ptr())) {
		return true;
	}
	return _372139_lk == _372149_rk;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad420b8b_eval_float(_1ad41b604_BinaryEval* _self_) {
	jule::Str _375113_lk = _1ad42bec7_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;
	jule::Str _375213_rk = _1ad42bec7_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;
	if ((!(_1ad4208c2_numbers_are_compatibile(&(*_self_), _375113_lk,_375213_rk)))) {
		_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_375113_lk),jule::Any(_375213_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1b0aa34c5:;
			{
				if ((!(_1ad3e747b_is_const((*_self_)._field_l.ptr()))) || (!(_1ad3cd220_int_assignable(jule::Str("i64", 3),(*_self_)._field_l)))) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_375113_lk),jule::Any(_375213_rk)}));
					return nullptr;
				}
				if ((!(_1ad3e747b_is_const((*_self_)._field_r.ptr()))) || (!(_1ad3cd220_int_assignable(jule::Str("u64", 3),(*_self_)._field_r)))) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_375113_lk),jule::Any(_375213_rk)}));
					return nullptr;
				}
				_1ad2c4952_set_i64((*_self_)._field_l.get()._field_constant.ptr(), static_cast<jule::I64>(_1ad2c407d_as_i64((*_self_)._field_l.get()._field_constant.ptr())));
				_1ad2c4c71_set_u64((*_self_)._field_r.get()._field_constant.ptr(), static_cast<jule::U64>(_1ad2c4358_as_u64((*_self_)._field_r.get()._field_constant.ptr())));
				if ((!(_1ad4248e8_is_ok_for_shifting((*_self_)._field_r)))) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				}
				return (*_self_)._field_l;
			}
		}
		_match_end_1b0aa388d:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b0aa3926:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		_match_end_1b0aa9c7e:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1b0aac457:;
			{
				_1ad41edbb_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b0aac4bd:;
			{
				if ((!(_1ad354916_is_int(_375213_rk)))) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_375113_lk),jule::Any(_375213_rk)}));
					return nullptr;
				}
				_1ad4203e9_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1b0aa3d33:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b0aaa81d:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad420e66_eval_int(_1ad41b604_BinaryEval* _self_) {
	jule::Str _381513_lk = _1ad42bec7_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;
	jule::Str _381613_rk = _1ad42bec7_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1b0ab0669:;
			{
				if ((!(_1ad354916_is_int(_381513_lk))) || (!(_1ad354916_is_int(_381613_rk)))) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_381513_lk),jule::Any(_381613_rk)}));
					return nullptr;
				}
				if ((!(_1ad4248e8_is_ok_for_shifting((*_self_)._field_r)))) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				}
				return (*_self_)._field_l;
			}
		}
		_match_end_1b0ab1181:;
	}
	if ((!(_1ad4208c2_numbers_are_compatibile(&(*_self_), _381513_lk,_381613_rk)))) {
		_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_381513_lk),jule::Any(_381613_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b0ab4063:;
			{
				return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
			}
		}
		_match_end_1b0ab530b:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1b0ab79d4:;
			{
				_1ad41edbb_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b0ab7a4a:;
			{
				_1ad4203e9_mod(&(*_self_));
				_1ad41edbb_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1b0ab53d8:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1b0ab5dab:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad421241_eval_prim(_1ad41b604_BinaryEval* _self_) {
	jule::Ptr<_1ad42ec99_Prim> _387413_prim = _1ad42bec7_prim((*_self_)._field_l.get()._field_kind.ptr());
	{
		
		if (_1ad4331ed_is_bool(_387413_prim.ptr())) {
			_case_begin_1b0aba1bd:;
			{
				return _1ad41e89e_eval_bool(&(*_self_));
			}
		}
		else if (_1ad4334c8_is_str(_387413_prim.ptr())) {
			_case_begin_1b0aba245:;
			{
				return _1ad41eb79_eval_str(&(*_self_));
			}
		}
		_match_end_1b0aba135:;
	}
	if ((_1ad42bec7_prim((*_self_)._field_r.get()._field_kind.ptr()) == nullptr)) {
		_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1ad430173_to_str(_387413_prim.ptr())),jule::Any(_1ad429d4e_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	}
	{
		
		if (_1ad354c68_is_float(_387413_prim.get()._field_kind)) {
			_case_begin_1b0abd4e0:;
			{
				return _1ad420b8b_eval_float(&(*_self_));
			}
		}
		else if (_1ad354916_is_int(_387413_prim.get()._field_kind)) {
			_case_begin_1b0abd5ab:;
			{
				return _1ad420e66_eval_int(&(*_self_));
			}
		}
		else {
			_case_begin_1b0abcc92:;
			{
				return nullptr;
			}
		}
		_match_end_1b0abcab6:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad42151b_eval_op(_1ad41b604_BinaryEval* _self_) {
	{
		
		if (_1ad42acb7_void((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1b0ac02a0:;
			{
				_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if ((_1ad42bec7_prim((*_self_)._field_r.get()._field_kind.ptr()) != nullptr) && _1ad4337a3_is_any(_1ad42bec7_prim((*_self_)._field_r.get()._field_kind.ptr()).ptr())) {
			_case_begin_1b0ac0316:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b0ac039e;
			}
		}
		else if ((_1ad42bec7_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr) && _1ad4337a3_is_any(_1ad42bec7_prim((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
			_case_begin_1b0ac039e:;
			{
				return _1ad41e5c4_eval_any(&(*_self_));
			}
		}
		else if (_1ad42a9dc_is_nil((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1b0ac0415:;
			{
				return _1ad41ca34_eval_nil(&(*_self_));
			}
		}
		else if ((_1ad42c857_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0abec0b:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b0abec72;
			}
		}
		else if ((_1ad42c857_enm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0abec72:;
			{
				return _1ad41cd0e_eval_enum(&(*_self_));
			}
		}
		else if ((_1ad42c2a2_sptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0abecd8:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b0abed4e;
			}
		}
		else if ((_1ad42c2a2_sptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0abed4e:;
			{
				return _1ad41d0d9_eval_sptr(&(*_self_));
			}
		}
		else if ((_1ad42c57c_ptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0ac04ae:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b0ac0525;
			}
		}
		else if ((_1ad42c57c_ptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0ac0525:;
			{
				return _1ad41d3b4_eval_ptr(&(*_self_));
			}
		}
		else if ((_1ad42cb32_arr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0ac059c:;
			{
				return _1ad41d68e_eval_arr(&(*_self_));
			}
		}
		else if ((_1ad42ce0c_slc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0ac0624:;
			{
				return _1ad41d969_eval_slc(&(*_self_));
			}
		}
		else if ((_1ad42d1d7_fnc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0ac069b:;
			{
				return _1ad41dc44_eval_fn(&(*_self_));
			}
		}
		else if ((_1ad42d78c_trt((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0ac0723:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1b0ac079a;
			}
		}
		else if ((_1ad42d78c_trt((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0ac079a:;
			{
				return _1ad41e2e9_eval_trait(&(*_self_));
			}
		}
		else if ((_1ad42d4b2_strct((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0ac0822:;
			{
				return _1ad41e01e_eval_struct(&(*_self_));
			}
		}
		else if ((_1ad42bec7_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0ac0899:;
			{
				return _1ad421241_eval_prim(&(*_self_));
			}
		}
		else {
			_case_begin_1b0abeb95:;
			{
				return nullptr;
			}
		}
		_match_end_1b0abeac9:;
	}
}



inline void _1ad42183a_eval_const(_1ad41b604_BinaryEval* _self_,jule::Ptr<_1ad3e6975_Data>& _394434_d) {
	{
		
		if ((_394434_d == nullptr)) {
			_case_begin_1b0ad1e0a:;
			{
				return;
			}
		}
		else if ((!(_1ad3e747b_is_const((*_self_)._field_l.ptr()))) || (!(_1ad3e747b_is_const((*_self_)._field_r.ptr())))) {
			_case_begin_1b0ad1e82:;
			{
				_394434_d.get()._field_constant=nullptr;
				return;
			}
		}
		_match_end_1b0ad1d1c:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1b0ad203c:;
			{
				_394434_d.get()._field_constant=static__1ad2c2411_new_bool((*((*_self_)._field_l.get()._field_constant)) == (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1b0ad311a:;
			{
				_394434_d.get()._field_constant=static__1ad2c2411_new_bool((*((*_self_)._field_l.get()._field_constant)) != (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1b0ad3181:;
			{
				_394434_d.get()._field_constant=static__1ad2c2411_new_bool(_1ad2c7746_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1b0ad39ab:;
			{
				_394434_d.get()._field_constant=static__1ad2c2411_new_bool(_1ad2c738e_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1b0ad3a22:;
			{
				_394434_d.get()._field_constant=static__1ad2c2411_new_bool((*((*_self_)._field_l.get()._field_constant)) > (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1b0ad3a88:;
			{
				_394434_d.get()._field_constant=static__1ad2c2411_new_bool((*((*_self_)._field_l.get()._field_constant)) < (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1b0ad3aee:;
			{
				_394434_d.get()._field_constant=static__1ad2c2411_new_bool((*((*_self_)._field_l.get()._field_constant)) >= (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1b0ad3b65:;
			{
				_394434_d.get()._field_constant=static__1ad2c2411_new_bool((*((*_self_)._field_l.get()._field_constant)) <= (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b0ad3bcb:;
			{
				_1ad2c8e73_add((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_394434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1b0ad3c42:;
			{
				_1ad2c932a_sub((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_394434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b0ad3ca8:;
			{
				_1ad2c96d2_mul((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_394434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1b0ad3d1e:;
			{
				jule::Bool _398117_ok = _1ad2c9a89_div((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				if ((!(_398117_ok)) && (_1ad2c4633_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL)) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				}
				_394434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
				jule::Ptr<_1ad42ec99_Prim> _398621_prim = _1ad42bec7_prim(_394434_d.get()._field_kind.ptr());
				{
					
					if (_1ad3542a6_is_sig_int(_398621_prim.get()._field_kind)) {
						_case_begin_1b07c9e88:;
						{
							_1ad2c4952_set_i64(_394434_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1ad2c407d_as_i64(_394434_d.get()._field_constant.ptr())));
						}
					}
					else if (_1ad354608_is_unsig_int(_398621_prim.get()._field_kind)) {
						_case_begin_1b07ad862:;
						{
							_1ad2c4c71_set_u64(_394434_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1ad2c4358_as_u64(_394434_d.get()._field_constant.ptr())));
						}
					}
					_match_end_1adc6b915:;
				}
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b0ad3d85:;
			{
				jule::Bool _399417_ok = _1ad2c9e41_mod((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				if ((!(_399417_ok)) && (_1ad2c4633_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL)) {
					_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				}
				_394434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1b0ad3deb:;
			{
				_1ad2ca6a0_bitwise_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_394434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b0ad3e62:;
			{
				_1ad2ca2e8_bitwise_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_394434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b0ad3ed9:;
			{
				_1ad2caa57_xor((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_394434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1b0ad4061:;
			{
				_1ad2cae0e_lshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_394434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1b0ad40d8:;
			{
				_1ad2cb2b6_rshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_394434_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		_match_end_1b0ad30b5:;
	}
	_1ad425ee3_apply_cast_model_by_enum(_394434_d,_1ad42c857_enm(_394434_d.get()._field_kind.ptr()));
	jule::Ptr<_1ad42ec99_Prim> _401817_prim = _1ad42bec7_prim(_394434_d.get()._field_kind.ptr());
	if ((_401817_prim == nullptr) || (!(_1ad355076_is_num(_1ad430173_to_str(_401817_prim.ptr()))))) {
		_394434_d.get()._field_model=jule::Any(_394434_d.get()._field_constant);
		return;
	}
	if (((*_self_)._field_op._field_kind != jule::Str("<<", 2)) && ((*_self_)._field_op._field_kind != jule::Str(">>", 2))) {
		if (((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model != (*_self_)._field_r.get()._field_constant)) {
			_394434_d.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			_401817_prim=_1ad42bec7_prim(_394434_d.get()._field_kind.ptr());
		}
	}
	_1ad42396e_fit_bitsize(_394434_d);
	_1ad426334_cast_const_by_type(_401817_prim.get()._field_kind,_394434_d);
}



inline void _1ad421b59_check_data(_1ad41b604_BinaryEval* _self_,jule::Ptr<_1ad3e6975_Data>& _403434_d) {
	jule::Ptr<_1ac67a501_FnIns> _403513_f = _1ad42d1d7_fnc(_403434_d.get()._field_kind.ptr());
	if (((_403513_f != nullptr) && (_403513_f.get()._field_decl != nullptr)) && _1ac67729a_is_method(_403513_f.get()._field_decl.ptr())) {
		_1ad3e90b5_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	}
}



inline void _1ad421d9b_check_datas(_1ad41b604_BinaryEval* _self_) {
	_1ad421b59_check_data(&(*_self_), (*_self_)._field_l);
	_1ad421b59_check_data(&(*_self_), (*_self_)._field_r);
}



inline void _1ad4221ba_set_model(_1ad41b604_BinaryEval* _self_,jule::Ptr<_1ad3e6975_Data>& _404633_d) {
	if (_1ad3e747b_is_const(_404633_d.ptr())) {
		if (((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model == (*_self_)._field_r.get()._field_constant)) {
			return;
		}
	}
	jule::Ptr<_1ad3e6975_Data> _405418_l = (*_self_)._field_l;
	jule::Ptr<_1ad3e6975_Data> _405425_r = (*_self_)._field_r;
	std::tie(_405418_l,_405425_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1ad3e7833_good_operand(_405418_l.ptr(), _405425_r)))) {
		std::tie(_405418_l,_405425_r) = std::make_tuple(_405425_r,_405418_l);
	}
	_404633_d.get()._field_model=jule::Any(jule::new_ptr<_1ac666c07_BinopExprModel>(_1ac666c07_BinopExprModel(jule::new_ptr<_1ac666663_OperandExprModel>(_1ac666663_OperandExprModel(_405418_l.get()._field_kind,_405418_l.get()._field_model)),jule::new_ptr<_1ac666663_OperandExprModel>(_1ac666663_OperandExprModel(_405425_r.get()._field_kind,_405425_r.get()._field_model)),(*_self_)._field_op)));
}



inline void _1ad4224d9_post_eval(_1ad41b604_BinaryEval* _self_,jule::Ptr<_1ad3e6975_Data>& _407233_d) {
	_407233_d.get()._field_lvalue=false;
	_1ad4221ba_set_model(&(*_self_), _407233_d);
}



inline jule::Ptr<_1ad3e6975_Data> _1ad42296d_solve_explicit(_1ad41b604_BinaryEval* _self_,jule::Ptr<_1ad3e6975_Data>& _407738_l,jule::Ptr<_1ad3e6975_Data>& _407753_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_407738_l,_407753_r);
	_1ad421d9b_check_datas(&(*_self_));
	jule::Ptr<_1ad3e6975_Data> _408217_d = _1ad42151b_eval_op(&(*_self_));
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_407738_l,_407753_r);
	_1ad42183a_eval_const(&(*_self_), _408217_d);
	if ((_408217_d != nullptr)) {
		_408217_d.get()._field_mutable=true;
		_1ad4224d9_post_eval(&(*_self_), _408217_d);
	}
	return _408217_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad422d25_eval(_1ad41b604_BinaryEval* _self_,jule::Ptr<_1ab01b1b2_BinopExpr>& _409728_op) {
	if ((_409728_op.get()._field_op._field_kind == jule::Str("=", 1))) {
		_1ad3e90b5_push_err((*_self_)._field_e.ptr(), _409728_op.get()._field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1ad3e94b1_push_suggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ad3e6975_Data> _410417_l = _1ad418524_eval_expr_kind((*_self_)._field_e, jule::Any(_409728_op.get()._field_left));
	if ((_410417_l == nullptr) || (_410417_l.get()._field_kind == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1ad429931_TypeKind> _410917_prefix = (*_self_)._field_e.get()._field_prefix;
	(*_self_)._field_e.get()._field_prefix=_410417_l.get()._field_kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_410917_prefix;
	});
	jule::Ptr<_1ad3e6975_Data> _411217_r = _1ad418524_eval_expr_kind((*_self_)._field_e, jule::Any(_409728_op.get()._field_right));
	if ((_411217_r == nullptr) || (_411217_r.get()._field_kind == nullptr)) {
		return nullptr;
	}
	(*_self_)._field_op=_409728_op.get()._field_op;
	jule::Ptr<_1ad3e6975_Data> _411917_d = _1ad42296d_solve_explicit(&(*_self_), _410417_l,_411217_r);
	if (((_411917_d != nullptr) && _410417_l.get()._field_is_rune) && _411217_r.get()._field_is_rune) {
		_411917_d.get()._field_is_rune=true;
	}
	return _411917_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad41b604_BinaryEval _Src) {
	_Stream << "BinaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad428996_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac66904a_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01c845_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac6699eb_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01ca65_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01cc85_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01cea5_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac66b04c_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac66b69b_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "trt:" << _Src._field_trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac66c0a3_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01d1c5_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline void _1ad43be0a_push_err(_1ad43b635_TypeChecker* _self_,_1ab005531_Token _70127_token,jule::Str _70141_fmt,jule::Slice<jule::Any> _70154_args) {
	_1ad3810c4_push_err((*_self_)._field_s.ptr(), _70127_token,_70141_fmt,_70154_args);
}



inline void _1ad43c14c_allow_builtin(_1ad43b635_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1ad43c38e_disallow_builtin(_1ad43b635_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Ptr<_1ad42ec99_Prim> _1ad43c746_build_prim(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1aaec9b87_IdentTypeDecl>& _71330_decl) {
	if ((!(_1ad43a249_is_prim(_71330_decl.get()._field_ident)))) {
		_1ad43be0a_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((_71330_decl.get()._field_generics.len() > 0LL)) {
		_1ad43be0a_push_err(&(*_self_), _71330_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_71330_decl.get()._field_ident)}));
		return nullptr;
	}
	return _1ad439a95_build_prim_type(_71330_decl.get()._field_ident);
}



inline void _1ad43cc1e_push_cycle_error(_1ad43b635_TypeChecker* _self_,jule::Any _72731_def1,jule::Any _72742_def2,jule::Str& _72758_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _73013_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _73029_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _73029_def };
			
			if (_match_expr.type_is<jule::Ptr<_1ad428996_TypeAlias>>()) {
				_case_begin_1b08d1006:;
				{
					return _73029_def.operator jule::Ptr<_1ad428996_TypeAlias>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ac661075_Struct>>()) {
				_case_begin_1b08d1842:;
				{
					return _73029_def.operator jule::Ptr<_1ac661075_Struct>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ac724545_Enum>>()) {
				_case_begin_1b08d18a8:;
				{
					return _73029_def.operator jule::Ptr<_1ac724545_Enum>().get()._field_ident;
				}
			}
			else {
				_case_begin_1b08d11b0:;
				{
					return jule::Str();
				}
			}
			_match_end_1b08d10e4:;
		}
	});
	jule::Str _74313_def1_ident = _73013_get_ident(_72731_def1);
	jule::Str _74413_def2_ident = _73013_get_ident(_72742_def2);
	jule::Str _74513_refers_to = _1a92a36b0_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_74313_def1_ident),jule::Any(_74413_def2_ident)}));
	(_72758_message).buffer.insert(0, (((_1a902da23_repeat(jule::Str(" ", 1),4LL) + _74513_refers_to) + jule::Str("\n", 1))));
}



inline jule::Bool _1ad43d1a3_check_cross_cycle(_1ad43b635_TypeChecker* _self_,jule::Any _74932_decl,jule::Str& _74948_message) {
	{
		auto &_match_expr{ _74932_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1ad428996_TypeAlias>>()) {
			_case_begin_1b08d4d62:;
			{
				jule::Ptr<_1ad428996_TypeAlias> _75217_ta = _74932_decl.operator jule::Ptr<_1ad428996_TypeAlias>();
				{
					auto &expr = _75217_ta.get()._field_refers;
					auto it = expr.begin();
					_iter_begin_1b08d5bba:;
					if (it != expr.end()) {
						jule::Any &_1b08d5c0e_d = *it;
						{
							{
								
								if (_1b08d5c0e_d == (*_self_)._field_referencer.get()._field_owner) {
									_case_begin_1b08d63c4:;
									{
										_1ad43cc1e_push_cycle_error(&(*_self_), jule::Any(_75217_ta),_1b08d5c0e_d,_74948_message);
										return false;
									}
								}
								else if ((!(_1ad43d1a3_check_cross_cycle(&(*_self_), _1b08d5c0e_d,_74948_message)))) {
									_case_begin_1b08d644b:;
									{
										_1ad43cc1e_push_cycle_error(&(*_self_), jule::Any(_75217_ta),_1b08d5c0e_d,_74948_message);
										return false;
									}
								}
								_match_end_1b08d62b4:;
							}
						}
						_iter_next_1b08d5bba:;
						++it;
						goto _iter_begin_1b08d5bba;
					}
					_iter_end_1b08d5bba:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac661075_Struct>>()) {
			_case_begin_1b08d4dc8:;
			{
				jule::Ptr<_1ac661075_Struct> _76417_s = _74932_decl.operator jule::Ptr<_1ac661075_Struct>();
				{
					auto &expr = _76417_s.get()._field_depends;
					auto it = expr.begin();
					_iter_begin_1b08d60a5:;
					if (it != expr.end()) {
						jule::Ptr<_1ac661075_Struct> &_1b08d8849_d = *it;
						{
							{
								
								if ((*_self_)._field_referencer.get()._field_owner == jule::Any(jule::Any(_1b08d8849_d))) {
									_case_begin_1b08d8e87:;
									{
										_1ad43cc1e_push_cycle_error(&(*_self_), jule::Any(_76417_s),jule::Any(_1b08d8849_d),_74948_message);
										return false;
									}
								}
								else if ((!(_1ad43d1a3_check_cross_cycle(&(*_self_), jule::Any(_1b08d8849_d),_74948_message)))) {
									_case_begin_1b08d900e:;
									{
										_1ad43cc1e_push_cycle_error(&(*_self_), jule::Any(_76417_s),jule::Any(_1b08d8849_d),_74948_message);
										return false;
									}
								}
								_match_end_1b08d8d77:;
							}
						}
						_iter_next_1b08d60a5:;
						++it;
						goto _iter_begin_1b08d60a5;
					}
					_iter_end_1b08d60a5:;
				}
			}
		}
		_match_end_1b08d4c52:;
	}
	return true;
}



inline jule::Bool _1ad43d637_check_illegal_cycles(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1aaec9b87_IdentTypeDecl>& _78340_ident,jule::Any _78367_decl) {
	jule::Bool _78380_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_78380_ok = true;
		return _78380_ok;
	}
	{
		auto &_match_expr{ _78367_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1ac661075_Struct>>()) {
			_case_begin_1b0ba7d38:;
			{
				if ((*_self_)._field_not_plain || _78367_decl.operator jule::Ptr<_1ac661075_Struct>().get()._field_cpp_linked) {
					_78380_ok = true;
					return _78380_ok;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad428996_TypeAlias>>()) {
			_case_begin_1b0ba7d9e:;
			{
				if (_78367_decl.operator jule::Ptr<_1ad428996_TypeAlias>().get()._field_cpp_linked) {
					_78380_ok = true;
					return _78380_ok;
				}
			}
		}
		_match_end_1b0ba8036:;
	}
	if (_78367_decl == (*_self_)._field_referencer.get()._field_owner) {
		_1ad43be0a_push_err(&(*_self_), _78340_ident.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_78380_ok = false;
		return _78380_ok;
	}
	jule::Str _80617_message = jule::Str();
	if ((!(_1ad43d1a3_check_cross_cycle(&(*_self_), _78367_decl,_80617_message)))) {
		jule::Str _80921_err_msg = _80617_message;
		_80617_message=jule::Str();
		_1ad43cc1e_push_cycle_error(&(*_self_), (*_self_)._field_referencer.get()._field_owner,_78367_decl,_80617_message);
		_80921_err_msg=_80921_err_msg + _80617_message;
		_1ad43be0a_push_err(&(*_self_), _78340_ident.get()._field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_80921_err_msg)}));
		_78380_ok = false;
		return _78380_ok;
	}
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1ad428996_TypeAlias>>()) {
			_case_begin_1b0bad3e3:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>({_78367_decl}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac661075_Struct>>()) {
			_case_begin_1b0bad48c:;
			{
				{
					auto &_match_expr{ _78367_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1ac661075_Struct>>()) {
						_case_begin_1b0badb74:;
						{
							jule::Ptr<_1ac661075_Struct> _82525_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1ac661075_Struct>();
							_82525_s.get()._field_depends = jule::alloc_for_append(_82525_s.get()._field_depends,1);_82525_s.get()._field_depends.__push(_78367_decl.operator jule::Ptr<_1ac661075_Struct>());
						}
					}
					_match_end_1b0badb1e:;
				}
			}
		}
		_match_end_1b0bad38d:;
	}
	_78380_ok = true;
	return _78380_ok;
}



inline jule::Trait<_1ad4293e2_Kind> _1ad43dabb_from_type_alias(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1aaec9b87_IdentTypeDecl>& _83335_decl,jule::Ptr<_1ad428996_TypeAlias>& _83362_ta) {
	if ((!(_1ad381954_is_accessible_define((*_self_)._field_s.ptr(), _83362_ta.get()._field_public,_83362_ta.get()._field_token)))) {
		_1ad43be0a_push_err(&(*_self_), _83335_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_83335_decl.get()._field_ident)}));
		return nullptr;
	}
	_83362_ta.get()._field_used=true;
	if ((_83335_decl.get()._field_generics.len() > 0LL)) {
		_1ad43be0a_push_err(&(*_self_), _83335_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_83335_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((!((*_self_)._field_inscatch)) && ((*_self_)._field_banned_generics != nullptr)) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1b0bb4471:;
			if (it != expr.end()) {
				jule::Ptr<_1ad428996_TypeAlias> _1b0bb4a04_bg = *it;
				{
					if ((_1b0bb4a04_bg == _83362_ta) || ((_83362_ta.get()._field_kind.get()._field_kind != nullptr) && _1ad42a206_equals(_83362_ta.get()._field_kind.get()._field_kind, _1b0bb4a04_bg.get()._field_kind.get()._field_kind))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1b0bb4471;
					}
				}
				_iter_next_1b0bb4471:;
				++it;
				goto _iter_begin_1b0bb4471;
			}
			_iter_end_1b0bb4471:;
		}
	}
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1b0bb6a5b:;
			if (it != expr.end()) {
				jule::Ptr<_1ad428996_TypeAlias> _1b0bb6d8b_bg = *it;
				{
					if (_1b0bb6d8b_bg == _83362_ta) {
						_1ad43be0a_push_err(&(*_self_), _83335_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>({jule::Any(_83335_decl.get()._field_ident)}));
						return nullptr;
					}
					{
						auto &expr = _83362_ta.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1b0bb8453:;
						if (it != expr.end()) {
							jule::Ptr<_1ad428996_TypeAlias> _1b0bb7485_dg = *it;
							{
								if (_1b0bb6d8b_bg == _1b0bb7485_dg) {
									_1ad43be0a_push_err(&(*_self_), _83335_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>({jule::Any(_83335_decl.get()._field_ident)}));
									return nullptr;
								}
							}
							_iter_next_1b0bb8453:;
							++it;
							goto _iter_begin_1b0bb8453;
						}
						_iter_end_1b0bb8453:;
					}
				}
				_iter_next_1b0bb6a5b:;
				++it;
				goto _iter_begin_1b0bb6a5b;
			}
			_iter_end_1b0bb6a5b:;
		}
	}
	jule::Bool _87517_ok = _1ad43d637_check_illegal_cycles(&(*_self_), _83335_decl,jule::Any(_83362_ta));
	if ((!(_87517_ok))) {
		return nullptr;
	}
	_87517_ok=_1ad38a034_check_type_alias_decl_kind((*_self_)._field_s, _83362_ta,(*_self_)._field_lookup);
	if ((!(_87517_ok))) {
		return nullptr;
	}
	if (_83362_ta.get()._field_generic && ((*_self_)._field_owner_alias != nullptr)) {
		(*_self_)._field_owner_alias.get()._field_generics = jule::alloc_for_append((*_self_)._field_owner_alias.get()._field_generics,1);(*_self_)._field_owner_alias.get()._field_generics.__push(_83362_ta);
	}
	jule::Ptr<_1ad429931_TypeKind> _89217_tk = jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),_83362_ta.get()._field_generic,jule::Bool(),_83362_ta.get()._field_kind.get()._field_kind.get()._field_kind));
	if (_83362_ta.get()._field_cpp_linked) {
		_89217_tk.get()._field_cpp_ident=_83362_ta.get()._field_ident;
	} else {
		_89217_tk.get()._field_cpp_ident=_83362_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
	}
	return jule::Trait<_1ad4293e2_Kind>(_89217_tk, 4);
}



inline jule::Ptr<_1ac724545_Enum> _1ad43e050_from_enum(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1aaec9b87_IdentTypeDecl>& _90429_decl,jule::Ptr<_1ac724545_Enum>& _90456_e) {
	if ((!(_1ad381954_is_accessible_define((*_self_)._field_s.ptr(), _90456_e.get()._field_public,_90456_e.get()._field_token)))) {
		_1ad43be0a_push_err(&(*_self_), _90429_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_90429_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((_90429_decl.get()._field_generics.len() > 0LL)) {
		_1ad43be0a_push_err(&(*_self_), _90429_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_90429_decl.get()._field_ident)}));
		return nullptr;
	}
	return _90456_e;
}



inline jule::Ptr<_1ac85d096_Trait> _1ad43e4d4_from_trait(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1aaec9b87_IdentTypeDecl>& _91630_decl,jule::Ptr<_1ac85d096_Trait>& _91657_t) {
	if ((!(_1ad381954_is_accessible_define((*_self_)._field_s.ptr(), _91657_t.get()._field_public,_91657_t.get()._field_token)))) {
		_1ad43be0a_push_err(&(*_self_), _91630_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_91630_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((_91630_decl.get()._field_generics.len() > 0LL)) {
		_1ad43be0a_push_err(&(*_self_), _91630_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_91630_decl.get()._field_ident)}));
		return nullptr;
	}
	return _91657_t;
}



inline jule::Bool _1ad43e968_check_struct_ins(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1ac664551_StructIns>& _92840_ins,_1ab005531_Token& _92858_error_token) {
	jule::Bool _92880_ok = jule::Bool();
	if (_92840_ins.get()._field_checked) {
		_92880_ok = true;
		return _92880_ok;
	}
	_92840_ins.get()._field_checked=true;
	if (((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == jule::Any(jule::Any(_92840_ins.get()._field_decl)))) {
		_92880_ok = true;
		return _92880_ok;
	}
	jule::Ptr<_1ad3e062d_SymbolTable> _93917_old_file = (*_self_)._field_s.get()._field_file;
	__JULE_DEFER({
		_1ad380aeb_set_current_file((*_self_)._field_s.ptr(), _93917_old_file);
	});
	jule::Ptr<_1ad3e062d_SymbolTable> _94217_file = _1ad37c301_find_file((*_self_)._field_s.get()._field_files,_92840_ins.get()._field_decl.get()._field_token._field_file);
	if ((_94217_file != nullptr)) {
		_1ad380aeb_set_current_file((*_self_)._field_s.ptr(), _94217_file);
	}
	jule::Ptr<_1ad43a6de_Referencer> _94717_referencer = jule::new_ptr<_1ad43a6de_Referencer>(_1ad43a6de_Referencer(_92840_ins.get()._field_decl.get()._field_ident,jule::Any(jule::Any(_92840_ins.get()._field_decl)),nullptr));
	jule::Slice<jule::Ptr<_1ad428996_TypeAlias>> _95217_generics = jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>::alloc(0LL,static_cast<jule::I64>(_92840_ins.get()._field_generics.len()));
	{
		auto &expr = _92840_ins.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1b0bca71d:;
		if (it != expr.end()) {
			jule::I64 _1b0bcad17_i = it - expr.begin();
			jule::Ptr<_1ad429931_TypeKind> _1b0bcae49_g = *it;
			{
				_95217_generics = jule::alloc_for_append(_95217_generics,1);_95217_generics.__push(jule::new_ptr<_1ad428996_TypeAlias>(_1ad428996_TypeAlias(jule::Ptr<_1ab01d615_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1ab005531_Token(),_92840_ins.get()._field_decl.get()._field_generics[_1b0bcad17_i].get()._field_ident,jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),_1b0bcae49_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>())));
			}
			_iter_next_1b0bca71d:;
			++it;
			_1b0bcad17_i++;
			goto _iter_begin_1b0bca71d;
		}
		_iter_end_1b0bca71d:;
	}
	jule::Ptr<_1ad3e062d_SymbolTable> _96217_old_sema_file = _92840_ins.get()._field_decl.get()._field_sema.get()._field_file;
	__JULE_DEFER({
		_1ad380aeb_set_current_file(_92840_ins.get()._field_decl.get()._field_sema.ptr(), _96217_old_sema_file);
	});
	_1ad43b635_TypeChecker _96717_tc = _1ad43b635_TypeChecker(_92840_ins.get()._field_decl.get()._field_sema,jule::Trait<_1ad447256_Lookup>(_92840_ins.get()._field_decl.get()._field_sema, 3),_94717_referencer,_1ab005531_Token(),jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>(),_95217_generics,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1ad428996_TypeAlias>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>(),jule::Bool());
	{
		auto &expr = _92840_ins.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1b0bcd842:;
		if (it != expr.end()) {
			jule::Ptr<_1ac663a06_FieldIns> _1b0bcda62_field = *it;
			{
				jule::Ptr<_1ad429931_TypeKind> _97621_kind = _1ad444330_check_decl(&_96717_tc, _1b0bcda62_field.get()._field_decl.get()._field_kind.get()._field_decl);
				_92880_ok=(_97621_kind != nullptr);
				if (((_92840_ins.get()._field_decl.get()._field_sema != nullptr) && ((*_self_)._field_s != _92840_ins.get()._field_decl.get()._field_sema)) && (_92840_ins.get()._field_decl.get()._field_sema.get()._field_errors.len() > 0LL)) {
					(*_self_)._field_s.get()._field_errors=jule::append((*_self_)._field_s.get()._field_errors,_92840_ins.get()._field_decl.get()._field_sema.get()._field_errors);
					_92840_ins.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
				}
				if (_92880_ok) {
					_1b0bcda62_field.get()._field_kind=_97621_kind;
					_92840_ins.get()._field_mutable=_92840_ins.get()._field_mutable || ((!(_1b0bcda62_field.get()._field_decl.get()._field_mutable)) && _1ad42b092_mutable(_1b0bcda62_field.get()._field_kind.ptr()));
					_1ad393cc9_check_struct_ins_derive_clone((*_self_)._field_s.ptr(), _92840_ins);
				}
			}
			_iter_next_1b0bcd842:;
			++it;
			goto _iter_begin_1b0bcd842;
		}
		_iter_end_1b0bcd842:;
	}
	if ((_92840_ins.get()._field_generics.len() > 0LL)) {
		_1ad3976a1_check_struct_ins_operators((*_self_)._field_s, _92840_ins);
		_1ad396ccc_check_struct_ins((*_self_)._field_s, _92840_ins);
	}
	_92880_ok = true;
	return _92880_ok;
}



inline void _1ad43eccb_append_used_struct_reference(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1ac661075_Struct>& _99852_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1ac661075_Struct>>()) {
			_case_begin_1b0bd5ad0:;
			{
				jule::Ptr<_1ac661075_Struct> _100521_ref_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1ac661075_Struct>();
				if ((!(_1ac6631cb_is_uses(_100521_ref_s.ptr(), _99852_s)))) {
					_100521_ref_s.get()._field_uses = jule::alloc_for_append(_100521_ref_s.get()._field_uses,1);_100521_ref_s.get()._field_uses.__push(_99852_s);
				}
			}
		}
		_match_end_1b0bd5a7a:;
	}
}



inline jule::Ptr<_1ac664551_StructIns> _1ad44024e_build_struct_instance(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1aaec9b87_IdentTypeDecl>& _101245_decl,jule::Ptr<_1ac661075_Struct>& _101272_s) {
	jule::Ptr<_1ad43a6de_Referencer> _101417_referencer = (*_self_)._field_referencer;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1ad428996_TypeAlias>> _101617_banned_generics = (*_self_)._field_banned_generics;
	if (((*_self_)._field_banned_generics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1ad35872d_ScopeChecker>>()) {
				_case_begin_1b0bd9089:;
				{
					jule::Ptr<_1ad35872d_ScopeChecker> _102325_sc = (*_self_)._field_lookup.operator jule::Ptr<_1ad35872d_ScopeChecker>();
					jule::Ptr<_1ad35872d_ScopeChecker> _102425_hard = _1ad35ae5b_get_hard_root(_102325_sc);
					if ((_102425_hard.get()._field_owner.get()._field_owner == nullptr) || (_102425_hard.get()._field_owner.get()._field_owner.get()._field_decl != _101272_s)) {
						goto _match_end_1b0bd8d47;
					}
					jule::I64 _102821_n = _102425_hard.get()._field_owner.get()._field_generics.len() + static_cast<jule::I64>(static_cast<jule::I64>(_102425_hard.get()._field_owner.get()._field_owner.get()._field_generics.len()));
					(*_self_)._field_banned_generics=_102425_hard.get()._field_table.get()._field_type_aliases.slice(0LL,_102821_n);
				}
			}
			_match_end_1b0bd8d47:;
		}
	} else {
		(*_self_)._field_inscatch=true;
	}
	jule::Ptr<_1ac664551_StructIns> _103817_ins = _1ac66151a_instance(_101272_s);
	_103817_ins.get()._field_generics=jule::Slice<jule::Ptr<_1ad429931_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_101245_decl.get()._field_generics.len()));
	{
		auto &expr = _101245_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1b0bdccb3:;
		if (it != expr.end()) {
			jule::Ptr<_1aae075dc_TypeDecl> _1b0bdd676_g = *it;
			{
				jule::Ptr<_1ad429931_TypeKind> _104121_kind = _1ad443e78_build(&(*_self_), _1b0bdd676_g.get()._field_kind);
				if ((_104121_kind == nullptr)) {
					return nullptr;
				}
				_103817_ins.get()._field_generics = jule::alloc_for_append(_103817_ins.get()._field_generics,1);_103817_ins.get()._field_generics.__push(_104121_kind);
			}
			_iter_next_1b0bdccb3:;
			++it;
			goto _iter_begin_1b0bdccb3;
		}
		_iter_end_1b0bdccb3:;
	}
	(*_self_)._field_banned_generics=_101617_banned_generics;
	(*_self_)._field_referencer=_101417_referencer;
	return _103817_ins;
}



inline jule::Ptr<_1ac664551_StructIns> _1ad4406d3_from_struct(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1aaec9b87_IdentTypeDecl>& _105535_decl,jule::Ptr<_1ac661075_Struct>& _105562_s) {
	if ((!(_1ad381954_is_accessible_define((*_self_)._field_s.ptr(), _105562_s.get()._field_public,_105562_s.get()._field_token)))) {
		_1ad43be0a_push_err(&(*_self_), _105535_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_105535_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((*_self_)._field_selection) {
		if ((_105535_decl.get()._field_generics.len() > 0LL)) {
			_1ad43be0a_push_err(&(*_self_), _105535_decl.get()._field_token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		}
		return jule::new_ptr<_1ac664551_StructIns>(_1ac664551_StructIns(jule::Bool(),_105562_s,jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac663a06_FieldIns>>(),jule::Slice<jule::Ptr<_1ac676a08_Fn>>(),jule::Bool(),jule::Ptr<_1ac67de2d_ReferenceStack>(),_1ac65ee31_Operators()));
	}
	if ((_105562_s.get()._field_generics.len() > 0LL) && ((*_self_)._field_ignore_generics.len() > 0LL)) {
		return nullptr;
	}
	jule::Bool _107817_ok = (*_self_)._field_not_plain || _1ad43d637_check_illegal_cycles(&(*_self_), _105535_decl,jule::Any(_105562_s));
	if ((!(_107817_ok))) {
		return nullptr;
	}
	_1ad43eccb_append_used_struct_reference(&(*_self_), _105562_s);
	jule::Ptr<_1ac664551_StructIns> _108417_ins = _1ad44024e_build_struct_instance(&(*_self_), _105535_decl,_105562_s);
	if ((_108417_ins == nullptr)) {
		return nullptr;
	}
	_107817_ok=_1ad382922_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_108417_ins.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_108417_ins.get()._field_generics.len()),_105535_decl.get()._field_token);
	if ((!(_107817_ok))) {
		return nullptr;
	}
	jule::Ptr<_1ac664551_StructIns> _109417_exist_instance = _1ac6618c2_append_instance(_105562_s.ptr(), _108417_ins);
	if ((_109417_exist_instance != nullptr)) {
		return _109417_exist_instance;
	}
	_107817_ok=_1ad43e968_check_struct_ins(&(*_self_), _108417_ins,_105535_decl.get()._field_token);
	if ((!(_107817_ok))) {
		return nullptr;
	}
	return _108417_ins;
}



inline jule::Trait<_1ad4293e2_Kind> _1ad440b67_get_def(_1ad43b635_TypeChecker* _self_,jule::Trait<_1ad447256_Lookup> _111626_l,jule::Ptr<_1aaec9b87_IdentTypeDecl>& _111642_decl) {
	{
		auto &expr = (*_self_)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_1b0bea254:;
		if (it != expr.end()) {
			jule::Ptr<_1ab01c845_GenericDecl> _1b0bea364_g = *it;
			{
				if (_1b0bea364_g.get()._field_ident == _111642_decl.get()._field_ident) {
					return jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(_1b0bea364_g.get()._field_ident), 5);
				}
			}
			_iter_next_1b0bea254:;
			++it;
			goto _iter_begin_1b0bea254;
		}
		_iter_end_1b0bea254:;
	}
	{
		auto &expr = (*_self_)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_1b0bea9b3:;
		if (it != expr.end()) {
			jule::Ptr<_1ad428996_TypeAlias> _1b0bea5c8_g = *it;
			{
				if (_1b0bea5c8_g.get()._field_ident == _111642_decl.get()._field_ident) {
					jule::Ptr<_1ac664551_StructIns> _112525_st = _1ad42d4b2_strct(_1b0bea5c8_g.get()._field_kind.get()._field_kind.ptr());
					if ((_112525_st != nullptr)) {
						jule::Bool _112725_ok = _1ad43d637_check_illegal_cycles(&(*_self_), _111642_decl,jule::Any(_112525_st.get()._field_decl));
						if ((!(_112725_ok))) {
							return nullptr;
						}
					}
					return _1b0bea5c8_g.get()._field_kind.get()._field_kind.get()._field_kind;
				}
			}
			_iter_next_1b0bea9b3:;
			++it;
			goto _iter_begin_1b0bea9b3;
		}
		_iter_end_1b0bea9b3:;
	}
	if ((!(_111642_decl.get()._field_cpp_linked))) {
		jule::Ptr<_1ac724545_Enum> _113721_e = _1ad447256_Lookup_mptr_data[(_111626_l).type_offset]._1ad4470d0_find_enum(_111626_l, _111642_decl.get()._field_ident);
		if ((_113721_e != nullptr)) {
			return jule::Trait<_1ad4293e2_Kind>(_1ad43e050_from_enum(&(*_self_), _111642_decl,_113721_e), 3);
		}
		jule::Ptr<_1ac85d096_Trait> _114221_t = _1ad447256_Lookup_mptr_data[(_111626_l).type_offset]._1ad446c28_find_trait(_111626_l, _111642_decl.get()._field_ident);
		if ((_114221_t == nullptr) && (!((*_self_)._field_dis_builtin))) {
			_114221_t=_1ad4a1755_find_builtin_trait(_111642_decl.get()._field_ident);
		}
		if ((_114221_t != nullptr)) {
			return jule::Trait<_1ad4293e2_Kind>(_1ad43e4d4_from_trait(&(*_self_), _111642_decl,_114221_t), 2);
		}
	} else if ((*_self_)._field_selection) {
		_1ad43be0a_push_err(&(*_self_), _111642_decl.get()._field_token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ac661075_Struct> _115417_s = _1ad447256_Lookup_mptr_data[(_111626_l).type_offset]._1ad4463dc_find_struct(_111626_l, _111642_decl.get()._field_ident,_111642_decl.get()._field_cpp_linked);
	if ((_115417_s != nullptr)) {
		return jule::Trait<_1ad4293e2_Kind>(_1ad4406d3_from_struct(&(*_self_), _111642_decl,_115417_s), 0);
	}
	jule::Ptr<_1ad428996_TypeAlias> _115917_ta = _1ad447256_Lookup_mptr_data[(_111626_l).type_offset]._1ad445e58_find_type_alias(_111626_l, _111642_decl.get()._field_ident,_111642_decl.get()._field_cpp_linked);
	if ((_115917_ta == nullptr) && (!((*_self_)._field_dis_builtin))) {
		_115917_ta=_1ad4760a9_find_builtin_type_alias(_111642_decl.get()._field_ident);
	}
	if ((_115917_ta != nullptr)) {
		return _1ad43dabb_from_type_alias(&(*_self_), _111642_decl,_115917_ta);
	}
	_1ad43be0a_push_err(&(*_self_), _111642_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_111642_decl.get()._field_ident)}));
	return nullptr;
}



inline jule::Trait<_1ad4293e2_Kind> _1ad44101e_build_ident(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1aaec9b87_IdentTypeDecl> _117134_decl) {
	{
		
		if (_1ad43a249_is_prim(_117134_decl.get()._field_ident)) {
			_case_begin_1b0c06ea8:;
			{
				return jule::Trait<_1ad4293e2_Kind>(_1ad43c746_build_prim(&(*_self_), _117134_decl), 5);
			}
		}
		else {
			_case_begin_1b0c0689d:;
			{
				return _1ad440b67_get_def(&(*_self_), (*_self_)._field_lookup,_117134_decl);
			}
		}
		_match_end_1b0c06804:;
	}
}



inline jule::Ptr<_1ad433b05_Sptr> _1ad4413c6_build_sptr_from_type(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1ad429931_TypeKind>& _118044_elem) {
	{
		
		if ((_118044_elem == nullptr)) {
			_case_begin_1b0c0822e:;
			{
				return nullptr;
			}
		}
		else if ((_1ad42d4b2_strct(_118044_elem.ptr()) != nullptr)) {
			_case_begin_1b0c082a6:;
			{
				jule::Ptr<_1ac664551_StructIns> _118617_s = _1ad42d4b2_strct(_118044_elem.ptr());
				if ((_118617_s.get()._field_decl != nullptr) && _118617_s.get()._field_decl.get()._field_cpp_linked) {
					_1ad43be0a_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
		}
		else if ((_1ad42cb32_arr(_118044_elem.ptr()) != nullptr) && _1ad42cb32_arr(_118044_elem.ptr()).get()._field_auto) {
			_case_begin_1b0c0832d:;
			{
				_1ad43be0a_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b0c07b13:;
	}
	return jule::new_ptr<_1ad433b05_Sptr>(_1ad433b05_Sptr(_118044_elem));
}



inline jule::Ptr<_1ad433b05_Sptr> _1ad44177d_build_sptr(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1aada98ad_SptrTypeDecl> _120033_decl) {
	jule::Bool _120113_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_120113_not_plain;
	});
	jule::Ptr<_1ad429931_TypeKind> _120517_elem = _1ad444330_check_decl(&(*_self_), _120033_decl.get()._field_elem);
	return _1ad4413c6_build_sptr_from_type(&(*_self_), _120517_elem);
}



inline jule::Ptr<_1ad437983_Ptr> _1ad441b35_build_ptr_from_type(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1ad429931_TypeKind>& _120943_elem) {
	{
		
		if ((_120943_elem == nullptr)) {
			_case_begin_1b0c0e400:;
			{
				return nullptr;
			}
		}
		else if ((_1ad42cb32_arr(_120943_elem.ptr()) != nullptr) && _1ad42cb32_arr(_120943_elem.ptr()).get()._field_auto) {
			_case_begin_1b0c0e477:;
			{
				_1ad43be0a_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1ad437983_Ptr>();
			}
		}
		_match_end_1b0c0e312:;
	}
	return jule::new_ptr<_1ad437983_Ptr>(_1ad437983_Ptr(_120943_elem));
}



inline jule::Ptr<_1ad437983_Ptr> _1ad441edc_build_ptr(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1aae087db_PtrTypeDecl> _122532_decl) {
	jule::Bool _122613_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_122613_not_plain;
	});
	jule::Ptr<_1ad429931_TypeKind> _123017_elem = nullptr;
	if ((!(_1aaecbc55_is_unsafe(_122532_decl.ptr())))) {
		_123017_elem=_1ad444330_check_decl(&(*_self_), _122532_decl.get()._field_elem);
		return _1ad441b35_build_ptr_from_type(&(*_self_), _123017_elem);
	}
	return jule::new_ptr<_1ad437983_Ptr>(_1ad437983_Ptr(_123017_elem));
}



inline jule::Ptr<_1ad4346d8_Slc> _1ad442394_build_slc(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1aae7e367_SlcTypeDecl> _124232_decl) {
	jule::Bool _124313_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_124313_not_plain;
	});
	jule::Ptr<_1ad429931_TypeKind> _124717_elem = _1ad444330_check_decl(&(*_self_), _124232_decl.get()._field_elem);
	{
		
		if ((_124717_elem == nullptr)) {
			_case_begin_1b0c15ba9:;
			{
				return nullptr;
			}
		}
		else if ((_1ad42cb32_arr(_124717_elem.ptr()) != nullptr) && _1ad42cb32_arr(_124717_elem.ptr()).get()._field_auto) {
			_case_begin_1b0c15c31:;
			{
				_1ad43be0a_push_err(&(*_self_), _124232_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b0c15b54:;
	}
	return jule::new_ptr<_1ad4346d8_Slc>(_1ad4346d8_Slc(_124717_elem));
}



inline jule::Ptr<_1ad436da0_Arr> _1ad44274b_build_arr(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1b4ae977b_ArrTypeDecl> _126432_decl) {
	jule::Bool _126513_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_126513_not_plain;
	});
	jule::I64 _126917_n = 0LL;
	if ((!(_1aaece3ea_auto_sized(_126432_decl.ptr())))) {
		jule::Ptr<_1ad3e6975_Data> _127221_size = _1ad418c83_eval_expr(_1ad386ecb_eval((*_self_)._field_s, (*_self_)._field_lookup), _126432_decl.get()._field_size);
		if ((_127221_size == nullptr)) {
			return nullptr;
		}
		if ((!(_1ad3e747b_is_const(_127221_size.ptr())))) {
			_1ad43be0a_push_err(&(*_self_), _126432_decl.get()._field_size.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if ((_1ad42bec7_prim(_127221_size.get()._field_kind.ptr()) == nullptr) || (!(_1ad354916_is_int(_1ad42bec7_prim(_127221_size.get()._field_kind.ptr()).get()._field_kind)))) {
			_1ad43be0a_push_err(&(*_self_), _126432_decl.get()._field_size.get()._field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		}
		_126917_n=static_cast<jule::I64>(static_cast<jule::I64>(_1ad2c407d_as_i64(_127221_size.get()._field_constant.ptr())));
		if ((_126917_n < 0LL)) {
			_1ad43be0a_push_err(&(*_self_), _126432_decl.get()._field_elem.get()._field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if ((_1ad347b18_BIT_SIZE != 64LL) && (static_cast<jule::F64>(_126917_n) > static_cast<jule::F64>(static_cast<jule::F64>(_1ad34d58b_max(jule::Str("int", 3)))))) {
			_1ad43be0a_push_err(&(*_self_), _126432_decl.get()._field_size.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	jule::Ptr<_1ad429931_TypeKind> _129517_elem = _1ad444330_check_decl(&(*_self_), _126432_decl.get()._field_elem);
	{
		
		if ((_129517_elem == nullptr)) {
			_case_begin_1b0c21830:;
			{
				return nullptr;
			}
		}
		else if ((_1ad42cb32_arr(_129517_elem.ptr()) != nullptr) && _1ad42cb32_arr(_129517_elem.ptr()).get()._field_auto) {
			_case_begin_1b0c21896:;
			{
				_1ad43be0a_push_err(&(*_self_), _126432_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b0c216a9:;
	}
	return jule::new_ptr<_1ad436da0_Arr>(_1ad436da0_Arr(_1aaece3ea_auto_sized(_126432_decl.ptr()),_126917_n,_129517_elem));
}



inline jule::Ptr<_1ad4360be_Map> _1ad442b03_build_map(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1aadb4d4c_MapTypeDecl> _131332_decl) {
	jule::Bool _131413_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_131413_not_plain;
	});
	jule::Ptr<_1ad429931_TypeKind> _131817_key = _1ad444330_check_decl(&(*_self_), _131332_decl.get()._field_key);
	if ((_131817_key == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1ad429931_TypeKind> _132317_val = _1ad444330_check_decl(&(*_self_), _131332_decl.get()._field_val);
	if ((_132317_val == nullptr)) {
		return nullptr;
	}
	if ((_1ad42c857_enm(_132317_val.ptr()) != nullptr)) {
		_1ad43be0a_push_err(&(*_self_), _131332_decl.get()._field_val.get()._field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	}
	return jule::new_ptr<_1ad4360be_Map>(_1ad4360be_Map(_131817_key,_132317_val));
}



inline jule::Ptr<_1ad435354_Tuple> _1ad442eaa_build_tuple(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1aade33db_TupleTypeDecl> _133734_decl) {
	jule::Slice<jule::Ptr<_1ad429931_TypeKind>> _133817_types = jule::Slice<jule::Ptr<_1ad429931_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_133734_decl.get()._field_types.len()));
	{
		auto &expr = _133734_decl.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1b0c2879e:;
		if (it != expr.end()) {
			jule::Ptr<_1aae075dc_TypeDecl> _1b0c28ccc_t = *it;
			{
				jule::Ptr<_1ad429931_TypeKind> _134021_kind = _1ad444330_check_decl(&(*_self_), _1b0c28ccc_t);
				if ((_134021_kind == nullptr)) {
					return nullptr;
				}
				_133817_types = jule::alloc_for_append(_133817_types,1);_133817_types.__push(_134021_kind);
			}
			_iter_next_1b0c2879e:;
			++it;
			goto _iter_begin_1b0c2879e;
		}
		_iter_end_1b0c2879e:;
	}
	return jule::new_ptr<_1ad435354_Tuple>(_1ad435354_Tuple(_133817_types));
}



inline jule::Bool _1ad443362_check_fn_types(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1ac67a501_FnIns>& _135038_f) {
	jule::Bool _135051_ok = jule::Bool();
	{
		auto &expr = _135038_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1b0c2ae11:;
		if (it != expr.end()) {
			jule::Ptr<_1ac67939b_ParamIns> _1b0c2aecc_p = *it;
			{
				_1b0c2aecc_p.get()._field_kind=_1ad443e78_build(&(*_self_), _1b0c2aecc_p.get()._field_decl.get()._field_kind.get()._field_decl.get()._field_kind);
				_135051_ok=(_1b0c2aecc_p.get()._field_kind != nullptr);
				if ((!(_135051_ok))) {
					_135051_ok = false;
					return _135051_ok;
				}
			}
			_iter_next_1b0c2ae11:;
			++it;
			goto _iter_begin_1b0c2ae11;
		}
		_iter_end_1b0c2ae11:;
	}
	if ((!(_1ac676ec0_is_void(_135038_f.get()._field_decl.ptr())))) {
		_135038_f.get()._field_result=_1ad443e78_build(&(*_self_), _135038_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl.get()._field_kind);
		_135051_ok = (_135038_f.get()._field_result != nullptr);
		return _135051_ok;
	}
	_135051_ok = true;
	return _135051_ok;
}



inline jule::Ptr<_1ac67a501_FnIns> _1ad443719_build_fn(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1ab01da55_FnDecl> _136731_decl) {
	if ((_136731_decl.get()._field_generics.len() > 0LL)) {
		_1ad43be0a_push_err(&(*_self_), _136731_decl.get()._field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ac676a08_Fn> _137317_f = _1ac6827c2_build_fn(_136731_decl);
	jule::Ptr<_1ac67a501_FnIns> _137417_ins = _1ac6787b8_instance_force(_137317_f);
	_137417_ins.get()._field_anon=true;
	jule::Bool _137713_ok = _1ad443362_check_fn_types(&(*_self_), _137417_ins);
	if ((!(_137713_ok))) {
		return nullptr;
	}
	return _137417_ins;
}



inline jule::Trait<_1ad4293e2_Kind> _1ad443ac1_build_by_namespace(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1aaea458a_NamespaceTypeDecl> _138541_decl) {
	jule::Str _138613_path = _1ad439798_build_link_path_by_tokens(_138541_decl.get()._field_idents);
	jule::Ptr<_1ad3736b0_ImportInfo> _138717_imp = _1ad447256_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ad445540_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1ad3736b0_ImportInfo>)>([=](jule::Ptr<_1ad3736b0_ImportInfo> _138753_imp) mutable -> jule::Bool {
		if ((_138541_decl.get()._field_idents.len() == 1LL) && (_138753_imp.get()._field_alias == _138613_path)) {
			return true;
		}
		return (_138753_imp.get()._field_link_path == _138613_path) && _1ad37684a_is_accessible_via_selection(_138753_imp.ptr());
	}));
	if ((_138717_imp == nullptr) || (!(_1ad376174_is_lookupable(_138717_imp.ptr(), jule::Str("self", 4))))) {
		_1ad43be0a_push_err(&(*_self_), _138541_decl.get()._field_idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>({jule::Any(_138613_path)}));
		return nullptr;
	}
	_1ad43c38e_disallow_builtin(&(*_self_));
	jule::Trait<_1ad4293e2_Kind> _140017_kind = _1ad440b67_get_def(&(*_self_), jule::Trait<_1ad447256_Lookup>(_138717_imp, 1),_138541_decl.get()._field_kind);
	_1ad43c14c_allow_builtin(&(*_self_));
	return _140017_kind;
}



inline jule::Ptr<_1ad429931_TypeKind> _1ad443e78_build(_1ad43b635_TypeChecker* _self_,jule::Any& _140629_decl_kind) {
	jule::Trait<_1ad4293e2_Kind> _140717_kind = nullptr;
	{
		auto &_match_expr{ _140629_decl_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad429931_TypeKind>>()) {
			_case_begin_1b0c3856c:;
			{
				_140717_kind=jule::Trait<_1ad4293e2_Kind>(_140629_decl_kind.operator jule::Ptr<_1ad429931_TypeKind>(), 4);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aaec9b87_IdentTypeDecl>>()) {
			_case_begin_1b0c385d3:;
			{
				jule::Trait<_1ad4293e2_Kind> _141221_t = _1ad44101e_build_ident(&(*_self_), _140629_decl_kind.operator jule::Ptr<_1aaec9b87_IdentTypeDecl>());
				if ((_141221_t != nullptr)) {
					_140717_kind=_141221_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aada98ad_SptrTypeDecl>>()) {
			_case_begin_1b0c38649:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ad433b05_Sptr> _141821_t = _1ad44177d_build_sptr(&(*_self_), _140629_decl_kind.operator jule::Ptr<_1aada98ad_SptrTypeDecl>());
				if ((_141821_t != nullptr)) {
					_140717_kind=jule::Trait<_1ad4293e2_Kind>(_141821_t, 6);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aae087db_PtrTypeDecl>>()) {
			_case_begin_1b0c386b0:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ad437983_Ptr> _142421_t = _1ad441edc_build_ptr(&(*_self_), _140629_decl_kind.operator jule::Ptr<_1aae087db_PtrTypeDecl>());
				if ((_142421_t != nullptr)) {
					_140717_kind=jule::Trait<_1ad4293e2_Kind>(_142421_t, 11);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aae7e367_SlcTypeDecl>>()) {
			_case_begin_1b0c39194:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ad4346d8_Slc> _143021_t = _1ad442394_build_slc(&(*_self_), _140629_decl_kind.operator jule::Ptr<_1aae7e367_SlcTypeDecl>());
				if ((_143021_t != nullptr)) {
					_140717_kind=jule::Trait<_1ad4293e2_Kind>(_143021_t, 7);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b4ae977b_ArrTypeDecl>>()) {
			_case_begin_1b0c3920a:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ad436da0_Arr> _143621_t = _1ad44274b_build_arr(&(*_self_), _140629_decl_kind.operator jule::Ptr<_1b4ae977b_ArrTypeDecl>());
				if ((_143621_t != nullptr)) {
					_140717_kind=jule::Trait<_1ad4293e2_Kind>(_143621_t, 10);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aadb4d4c_MapTypeDecl>>()) {
			_case_begin_1b0c39271:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ad4360be_Map> _144221_t = _1ad442b03_build_map(&(*_self_), _140629_decl_kind.operator jule::Ptr<_1aadb4d4c_MapTypeDecl>());
				if ((_144221_t != nullptr)) {
					_140717_kind=jule::Trait<_1ad4293e2_Kind>(_144221_t, 9);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aade33db_TupleTypeDecl>>()) {
			_case_begin_1b0c392d7:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ad435354_Tuple> _144821_t = _1ad442eaa_build_tuple(&(*_self_), _140629_decl_kind.operator jule::Ptr<_1aade33db_TupleTypeDecl>());
				if ((_144821_t != nullptr)) {
					_140717_kind=jule::Trait<_1ad4293e2_Kind>(_144821_t, 8);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01da55_FnDecl>>()) {
			_case_begin_1b0c394b3:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ac67a501_FnIns> _145421_t = _1ad443719_build_fn(&(*_self_), _140629_decl_kind.operator jule::Ptr<_1ab01da55_FnDecl>());
				if ((_145421_t != nullptr)) {
					_140717_kind=jule::Trait<_1ad4293e2_Kind>(_145421_t, 1);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aaea458a_NamespaceTypeDecl>>()) {
			_case_begin_1b0c39529:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1ad4293e2_Kind> _146021_t = _1ad443ac1_build_by_namespace(&(*_self_), _140629_decl_kind.operator jule::Ptr<_1aaea458a_NamespaceTypeDecl>());
				if ((_146021_t != nullptr)) {
					_140717_kind=_146021_t;
				}
			}
		}
		else {
			_case_begin_1b0c38418:;
			{
				_1ad43be0a_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1b0c3834c:;
	}
	if ((_140717_kind == nullptr)) {
		return nullptr;
	}
	{
		auto &_match_expr{ _140717_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ad429931_TypeKind>>()) {
			_case_begin_1b0c4669b:;
			{
				return _140717_kind.operator jule::Ptr<_1ad429931_TypeKind>();
			}
		}
		else {
			_case_begin_1b0c458cb:;
			{
				return jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_140717_kind));
			}
		}
		_match_end_1b0c444ce:;
	}
}



inline jule::Ptr<_1ad429931_TypeKind> _1ad444330_check_decl(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1aae075dc_TypeDecl>& _148134_decl) {
	_1ab005531_Token _148317_error_token = (*_self_)._field_error_token;
	(*_self_)._field_error_token=_148134_decl.get()._field_token;
	jule::Ptr<_1ad429931_TypeKind> _148617_kind = _1ad443e78_build(&(*_self_), _148134_decl.get()._field_kind);
	(*_self_)._field_error_token=_148317_error_token;
	return _148617_kind;
}



inline void _1ad44464e_check(_1ad43b635_TypeChecker* _self_,jule::Ptr<_1ad42e293_TypeSymbol>& _149229_t) {
	if ((_149229_t.get()._field_decl == nullptr)) {
		return;
	}
	jule::Ptr<_1ad429931_TypeKind> _149617_kind = _1ad444330_check_decl(&(*_self_), _149229_t.get()._field_decl);
	if ((_149617_kind == nullptr)) {
		_1ad42e947_remove_kind(_149229_t.ptr());
		return;
	}
	_149229_t.get()._field_kind=_149617_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad43b635_TypeChecker _Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "owner_alias:" << _Src._field_owner_alias << ", ";
	_Stream << "banned_generics:" << _Src._field_banned_generics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01d3e5_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01d615_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac66d5d2_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1e6be526d_IR>,jule::Slice<_1a92a31c6_Log>> static__1abaed5bd_build(jule::Str _2825_path,jule::I64 _2836_flags) {
	jule::Ptr<_1e6bde1ac_JuleImporter> _2917_importer = static__1e6be0c19_new(_1abbaa12a_build_compile_info());
	jule::Slice<jule::Ptr<_1aae013a5_Ast>> _3018_files;
	jule::Slice<_1a92a31c6_Log> _3029_logs;
	std::tie(_3018_files,_3029_logs) = _1e6c3b935_import_package(_2917_importer.ptr(), _2825_path,true);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	}
	jule::Str _3413_root = _2825_path;
	if ((_3018_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_1ad376b8b_Package> _4018_pkg;
	std::tie(_4018_pkg,_3029_logs) = _1ad448ab5_analyze_package(_3018_files,jule::Trait<_1ad370aca_Importer>(_2917_importer, 0),_2836_flags);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	}
	jule::Ptr<_1e6be526d_IR> _4517_ir = jule::new_ptr<_1e6be526d_IR>(_1e6be526d_IR(_3413_root,jule::Slice<jule::Str>(),_4018_pkg,_1e6be40c4_all_packages(_2917_importer.ptr()),_1e6c44d4a_OrderedDefines()));
	_4517_ir.get()._field_passes=_1abba8843_get_all_unique_passes(_4517_ir.get()._field_main,_4517_ir.get()._field_used);
	return std::make_tuple(_4517_ir,nullptr);
}



inline void _1abb01291_append_structs(_1e6be526d_IR* _self_,jule::Ptr<_1ad376b8b_Package>& _5734_p,jule::Slice<jule::Ptr<_1ac661075_Struct>>& _5758_buffer) {
	{
		auto &expr = _5734_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ae9cb047:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1ae9cb113_f = *it;
			{
				{
					auto &expr = _1ae9cb113_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1ae9cb83e:;
					if (it != expr.end()) {
						jule::Ptr<_1ac661075_Struct> _1ae9cb883_s = *it;
						{
							if ((!(_1ae9cb883_s.get()._field_cpp_linked))) {
								_5758_buffer = jule::alloc_for_append(_5758_buffer,1);_5758_buffer.__push(_1ae9cb883_s);
							}
						}
						_iter_next_1ae9cb83e:;
						++it;
						goto _iter_begin_1ae9cb83e;
					}
					_iter_end_1ae9cb83e:;
				}
			}
			_iter_next_1ae9cb047:;
			++it;
			goto _iter_begin_1ae9cb047;
		}
		_iter_end_1ae9cb047:;
	}
}



inline jule::Slice<jule::Ptr<_1ac661075_Struct>> _1abb1c60e_get_all_structures(_1e6be526d_IR* _self_) {
	jule::Slice<jule::Ptr<_1ac661075_Struct>> _7017_buffer = nullptr;
	_1abb01291_append_structs(&(*_self_), (*_self_)._field_main,_7017_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1ae9cd258:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1ae9cd335_u = *it;
			{
				if ((!(_1ae9cd335_u.get()._field_cpp_linked))) {
					_1abb01291_append_structs(&(*_self_), _1ae9cd335_u.get()._field_package,_7017_buffer);
				}
			}
			_iter_next_1ae9cd258:;
			++it;
			goto _iter_begin_1ae9cd258;
		}
		_iter_end_1ae9cd258:;
	}
	return _7017_buffer;
}



inline void _1abb322c2_order(_1e6be526d_IR* _self_) {
	(*_self_)._field_ordered._field_structs=_1abb1c60e_get_all_structures(&(*_self_));
	static__1abc6c2ec_order_structures((*_self_)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, _1e6be526d_IR _Src) {
	_Stream << "IR{";
	_Stream << "root:" << _Src._field_root << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aadda36c_is_self(_1ab01d835_ParamDecl* _self_) {
	return _1a9092823_has_suffix((*_self_)._field_ident,jule::Str("self", 4));
}



inline jule::Bool _1aade42ee_is_ref(_1ab01d835_ParamDecl* _self_) {
	return (!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01d835_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab01dc75_is_anon(_1ab01da55_FnDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01da55_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01e6d2_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab01ea45_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab020260_is_inf(_1ab020040_Iter* _self_) {
	return (*_self_)._field_kind == jule::Any(jule::Any(nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1ab020040_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac67020a_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac6707c1_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "log:" << _Src._field_log;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab0207d2_is_while_next(_1ab0205b2_WhileKind* _self_) {
	return (*_self_)._field_next != jule::Any(jule::Any(nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0205b2_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ada6a67b_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab020bcd_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab021041_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0213a4_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0217b1_If _Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab021b24_Else _Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aae075dc_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab02262a_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab022a37_Case _Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab023131_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac67939b_ParamIns> _1ac675111_instance(jule::Ptr<_1ac674bd2_Param> _self_) {
	return jule::new_ptr<_1ac67939b_ParamIns>(_1ac67939b_ParamIns(_self_,jule::Ptr<_1ad429931_TypeKind>()));
}



inline jule::Bool _1ac6753db_is_self(_1ac674bd2_Param* _self_) {
	return ((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _1ac6756b6_is_ref(_1ac674bd2_Param* _self_) {
	return (!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, _1ac674bd2_Param _Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac676ec0_is_void(_1ac676a08_Fn* _self_) {
	return ((*_self_)._field_result == nullptr);
}



inline jule::Bool _1ac67729a_is_method(_1ac676a08_Fn* _self_) {
	return ((*_self_)._field_owner != nullptr);
}



inline jule::Bool _1ac677575_is_entry_point(_1ac676a08_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("main", 4));
}



inline jule::Bool _1ac677850_is_init(_1ac676a08_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("init", 4));
}



inline jule::Bool _1ac677b2a_is_anon(_1ac676a08_Fn* _self_) {
	return _1ab008622_is_anon_ident((*_self_)._field_ident);
}



inline jule::Bool _1ac677e05_any_var(_1ac676a08_Fn* _self_) {
	return ((*_self_)._field_result != nullptr) && ((*_self_)._field_result.get()._field_idents.len() > 0LL);
}



inline jule::Bool _1ac678224_parameters_uses_generics(_1ac676a08_Fn* _self_) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_params;
		auto it = expr.begin();
		_iter_begin_1adb7b704:;
		if (it != expr.end()) {
			jule::Ptr<_1ac674bd2_Param> &_1adb7b847_p = *it;
			{
				if (_1ac67c5d0_parameter_uses_generics(_1adb7b847_p,(*_self_)._field_generics)) {
					return true;
				}
			}
			_iter_next_1adb7b704:;
			++it;
			goto _iter_begin_1adb7b704;
		}
		_iter_end_1adb7b704:;
	}
	return false;
}



inline jule::Bool _1ac6784dd_result_uses_generics(_1ac676a08_Fn* _self_) {
	if (_1ac676ec0_is_void(&(*_self_))) {
		return false;
	} else if (((*_self_)._field_result.get()._field_kind == nullptr) || ((*_self_)._field_result.get()._field_kind.get()._field_kind == nullptr)) {
		return false;
	}
	return _1ac67c15c_kind_uses_generics((*_self_)._field_result.get()._field_kind.get()._field_kind,(*_self_)._field_generics);
}



inline jule::Ptr<_1ac67a501_FnIns> _1ac6787b8_instance_force(jule::Ptr<_1ac676a08_Fn> _self_) {
	jule::Ptr<_1ac67a501_FnIns> _12717_ins = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),_self_,jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::new_ptr<_1ad33ce0a_Scope>(_1ad33ce0a_Scope()),static__1ac67e181_new(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(),jule::Bool()));
	_12717_ins.get()._field_params=jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>::alloc(0LL,static_cast<jule::I64>(_self_.get()._field_params.len()));
	{
		auto &expr = _self_.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1adb80692:;
		if (it != expr.end()) {
			jule::Ptr<_1ac674bd2_Param> _1adb811ba_p = *it;
			{
				_12717_ins.get()._field_params = jule::alloc_for_append(_12717_ins.get()._field_params,1);_12717_ins.get()._field_params.__push(_1ac675111_instance(_1adb811ba_p));
			}
			_iter_next_1adb80692:;
			++it;
			goto _iter_begin_1adb80692;
		}
		_iter_end_1adb80692:;
	}
	if ((_12717_ins.get()._field_decl.get()._field_result != nullptr)) {
		_12717_ins.get()._field_result=_12717_ins.get()._field_decl.get()._field_result.get()._field_kind.get()._field_kind;
	}
	return _12717_ins;
}



inline jule::Ptr<_1ac67a501_FnIns> _1ac678a93_instance(jule::Ptr<_1ac676a08_Fn> _self_) {
	if ((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL)) {
		return _self_.get()._field_instances[0LL];
	}
	return _1ac6787b8_instance_force(_self_);
}



inline std::tuple<jule::Bool,jule::I64> _1ac678e4a_append_instance(_1ac676a08_Fn* _self_,jule::Ptr<_1ac67a501_FnIns>& _15439_ins) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		if (((*_self_)._field_instances.len() == 1LL)) {
			return std::make_tuple(false,0LL);
		}
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15439_ins);
		return std::make_tuple(true,-1LL);
	}
	if (((*_self_)._field_instances.len() == 0LL)) {
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15439_ins);
		return std::make_tuple(true,-1LL);
	}
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1adb87347:;
		if (it != expr.end()) {
			jule::I64 _1adb87e5d_j = it - expr.begin();
			jule::Ptr<_1ac67a501_FnIns> _1adb88090_ains = *it;
			{
				if (_1ac67b810_same(_1adb88090_ains.ptr(), _15439_ins)) {
					return std::make_tuple(false,_1adb87e5d_j);
				}
			}
			_iter_next_1adb87347:;
			++it;
			_1adb87e5d_j++;
			goto _iter_begin_1adb87347;
		}
		_iter_end_1adb87347:;
	}
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15439_ins);
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac676a08_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0237c4_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab024132_auto_expr(_1ab023bd1_EnumItemDecl* _self_) {
	return ((*_self_)._field_expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ab023bd1_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab0247e7_default_typed(_1ab0245c7_EnumDecl* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ab0245c7_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1adaa65b8_ObjectCoder> static__1adaa4781_new(jule::Ptr<_1e6be526d_IR>& _7628_ir,_1adac2abd_SerializationInfo _7637_info) {
	jule::Ptr<_1adaa65b8_ObjectCoder> _7717_oc = jule::new_ptr<_1adaa65b8_ObjectCoder>(_1adaa65b8_ObjectCoder(_7628_ir,_7637_info,jule::Str(),jule::Str(),jule::Str(),jule::Str(),jule::Str(),jule::Slice<jule::Ptr<_1adaa29c1_TraitHash>>(),jule::Ptr<_1ada27627_ExprCoder>(),jule::Ptr<_1ad978c1b_ScopeCoder>()));
	_7717_oc.get()._field_ec=static__1ad96e00d_new(_7717_oc);
	_7717_oc.get()._field_sc=static__1ad9c0207_new(_7717_oc);
	return _7717_oc;
}



inline void _1ada98533_add_indent(_1adaa65b8_ObjectCoder* _self_) {
	
	(*_self_)._field_indent_buffer+=jule::Str("\t", 1);
}



inline void _1ada9b646_done_indent(_1adaa65b8_ObjectCoder* _self_) {
	(*_self_)._field_indent_buffer=(*_self_)._field_indent_buffer.slice(0LL,((*_self_)._field_indent_buffer.len() - 1LL));
}



inline jule::Str _1ada9aea3_indent(_1adaa65b8_ObjectCoder* _self_) {
	return (*_self_)._field_indent_buffer;
}



inline jule::I64 _1adac5681_find_type_offset(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac85d096_Trait> _10231_t,jule::Ptr<_1ad429931_TypeKind> _10246_k) {
	jule::Ptr<_1ac664551_StructIns> _10317_s = nullptr;
	if ((_1ad42c2a2_sptr(_10246_k.ptr()) != nullptr)) {
		_10246_k=_1ad42c2a2_sptr(_10246_k.ptr()).get()._field_elem;
	}
	if ((_1ad42d4b2_strct(_10246_k.ptr()) == nullptr)) {
		return -1LL;
	}
	_10317_s=_1ad42d4b2_strct(_10246_k.ptr());
	{
		auto &expr = (*_self_)._field_trait_map;
		auto it = expr.begin();
		_iter_begin_1b0e587c0:;
		if (it != expr.end()) {
			jule::Ptr<_1adaa29c1_TraitHash> &_1b0e589ce_hash = *it;
			{
				if ((_1b0e589ce_hash.get()._field_t == _10231_t) && (_1b0e589ce_hash.get()._field_s == _10317_s)) {
					return _1b0e589ce_hash.get()._field_i;
				}
			}
			_iter_next_1b0e587c0:;
			++it;
			goto _iter_begin_1b0e587c0;
		}
		_iter_end_1b0e587c0:;
	}
	return -1LL;
}



inline jule::Str _1adac5dac_loc_info(_1adaa65b8_ObjectCoder* _self_,_1ab005531_Token& _12024_t) {
	jule::Str _12117_loc = _12024_t._field_file.get()._field_path;
	if (_1e6ae3d5e_PRODUCTION) {
		{
			
			if (_1a904e0b5_has_prefix(_12117_loc,_1a92b37be_PATH_STDLIB)) {
				_case_begin_1b0e5a6e5:;
				{
					(_12117_loc).mut_slice(_1a90c6b10_dir(_1a92b37be_PATH_STDLIB).len() + 1LL);
				}
			}
			else if (_1a904e0b5_has_prefix(_12117_loc,(*_self_)._field_ir.get()._field_root)) {
				_case_begin_1b0e5a76c:;
				{
					(_12117_loc).mut_slice(_1a90c6b10_dir((*_self_)._field_ir.get()._field_root).len() + 1LL);
				}
			}
			_match_end_1b0e5a5d5:;
		}
	}
	_12117_loc+=jule::Str(":", 1);
	_12117_loc+=_1ad258364_itoa(_12024_t._field_row);
	_12117_loc+=jule::Str(":", 1);
	_12117_loc+=_1ad258364_itoa(_12024_t._field_column);
	return _1ada88b1c_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12117_loc));
}



inline jule::Str _1adaa90d2_links(_1adaa65b8_ObjectCoder* _self_) {
	jule::Str _14517_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1b0e5e221:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b0e5e2ba_pkg = *it;
			{
				{
					
					if ((!(_1b0e5e2ba_pkg.get()._field_cpp_linked))) {
						_case_begin_1b0e5e96e:;
						{
							goto _iter_next_1b0e5e221;
						}
					}
					else if (_1a92922d6_is_std_header_path(_1b0e5e2ba_pkg.get()._field_path)) {
						_case_begin_1b0e5e9e6:;
						{
							_14517_obj+=jule::Str("#include ", 9);
							_14517_obj+=_1b0e5e2ba_pkg.get()._field_path;
							_14517_obj+=jule::Str("\n", 1);
						}
					}
					_match_end_1b0e5e85e:;
				}
			}
			_iter_next_1b0e5e221:;
			++it;
			goto _iter_begin_1b0e5e221;
		}
		_iter_end_1b0e5e221:;
	}
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1b0e61047:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b0e5e51d_pkg = *it;
			{
				{
					
					if ((!(_1b0e5e51d_pkg.get()._field_cpp_linked))) {
						_case_begin_1b0e613dd:;
						{
							goto _iter_next_1b0e61047;
						}
					}
					else if (_1adaee204_is_cpp_header_file(_1b0e5e51d_pkg.get()._field_path)) {
						_case_begin_1b0e61465:;
						{
							_14517_obj+=jule::Str("#include \"", 10);
							_14517_obj+=_1b0e5e51d_pkg.get()._field_path;
							_14517_obj+=jule::Str("\"\n", 2);
						}
					}
					_match_end_1b0e612cd:;
				}
			}
			_iter_next_1b0e61047:;
			++it;
			goto _iter_begin_1b0e61047;
		}
		_iter_end_1b0e61047:;
	}
	return _14517_obj;
}



inline jule::Str _1adae5e43_param_ins(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac67939b_ParamIns>& _17129_p) {
	jule::Str _17217_obj = static__1adb0511c_param_ins(_17129_p);
	_17217_obj+=jule::Str(" ", 1);
	_17217_obj+=static__1ada8e4e6_param(_17129_p.get()._field_decl);
	return _17217_obj;
}



inline jule::Str _1adae60a8_param(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac674bd2_Param>& _17929_p) {
	jule::Str _18017_obj = static__1adb04d0e_param(_17929_p);
	if (((!(_17929_p.get()._field_ident.empty())) && (!(_1ab008314_is_ignore_ident(_17929_p.get()._field_ident)))) && (!(_1ab008622_is_anon_ident(_17929_p.get()._field_ident)))) {
		_18017_obj+=jule::Str(" ", 1);
		_18017_obj+=static__1ada8e4e6_param(_17929_p);
	}
	return _18017_obj;
}



inline jule::Str _1adae621d_params(_1adaa65b8_ObjectCoder* _self_,jule::Slice<jule::Ptr<_1ac674bd2_Param>>& _18930_params) {
	if ((_18930_params.len() == 0LL)) {
		return jule::Str("(void)", 6);
	}
	jule::Str _19317_obj = jule::Str("(", 1);
	{
		auto &expr = _18930_params;
		auto it = expr.begin();
		_iter_begin_1b138ea5d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac674bd2_Param> _1b138eaa2_p = *it;
			{
				if (_1ac6753db_is_self(_1b138eaa2_p.ptr())) {
					if (_1ac6756b6_is_ref(_1b138eaa2_p.ptr())) {
						_19317_obj+=_1adae60a8_param(&(*_self_), _1b138eaa2_p);
					}
				} else {
					_19317_obj+=_1adae60a8_param(&(*_self_), _1b138eaa2_p);
				}
				_19317_obj+=jule::Str(",", 1);
			}
			_iter_next_1b138ea5d:;
			++it;
			goto _iter_begin_1b138ea5d;
		}
		_iter_end_1b138ea5d:;
	}
	(_19317_obj).mut_slice(0LL,_19317_obj.len() - 1LL);
	return (_19317_obj + jule::Str(")", 1));
}



inline jule::Str _1adae6383_params_ins(_1adaa65b8_ObjectCoder* _self_,jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>& _21034_params) {
	{
		
		if ((_21034_params.len() == 0LL)) {
			_case_begin_1b1392522:;
			{
				return jule::Str("(void)", 6);
			}
		}
		_match_end_1b1392445:;
	}
	jule::Str _21617_obj = jule::Str("(", 1);
	{
		auto &expr = _21034_params;
		auto it = expr.begin();
		_iter_begin_1b1392dd5:;
		if (it != expr.end()) {
			jule::Ptr<_1ac67939b_ParamIns> _1b1392e29_p = *it;
			{
				_21617_obj+=_1adae5e43_param_ins(&(*_self_), _1b1392e29_p);
				_21617_obj+=jule::Str(",", 1);
			}
			_iter_next_1b1392dd5:;
			++it;
			goto _iter_begin_1b1392dd5;
		}
		_iter_end_1b1392dd5:;
	}
	(_21617_obj).mut_slice(0LL,_21617_obj.len() - 1LL);
	return (_21617_obj + jule::Str(")", 1));
}



inline jule::Str _1adae64e8_params_decls(_1adaa65b8_ObjectCoder* _self_,jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>& _22836_params) {
	if ((_22836_params.len() == 0LL)) {
		return jule::Str("(void)", 6);
	}
	jule::Str _23317_obj = jule::Str("(", 1);
	{
		auto &expr = _22836_params;
		auto it = expr.begin();
		_iter_begin_1b1395910:;
		if (it != expr.end()) {
			jule::Ptr<_1ac67939b_ParamIns> _1b1395954_p = *it;
			{
				_23317_obj+=static__1adb0511c_param_ins(_1b1395954_p);
				_23317_obj+=jule::Str(",", 1);
			}
			_iter_next_1b1395910:;
			++it;
			goto _iter_begin_1b1395910;
		}
		_iter_end_1b1395910:;
	}
	(_23317_obj).mut_slice(0LL,_23317_obj.len() - 1LL);
	return (_23317_obj + jule::Str(")", 1));
}



inline void _1adae665d_prepare_structure(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac661075_Struct>& _24441_s) {
	{
		auto &expr = _24441_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1b13973a1:;
		if (it != expr.end()) {
			jule::Ptr<_1ac664551_StructIns> _1b13974c2_ins = *it;
			{
				{
					auto &expr = _1b13974c2_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1b1397b76:;
					if (it != expr.end()) {
						jule::Ptr<_1ac676a08_Fn> _1b1397c0e_m = *it;
						{
							if (_1b1397c0e_m.get()._field_statically) {
								goto _iter_next_1b1397b76;
							}
							{
								auto &expr = _1b1397c0e_m.get()._field_instances;
								auto it = expr.begin();
								_iter_begin_1b139833b:;
								if (it != expr.end()) {
									jule::Ptr<_1ac67a501_FnIns> _1b13988be_ins = *it;
									{
										jule::Ptr<_1ac67939b_ParamIns> _25129_p = _1b13988be_ins.get()._field_params[0LL];
										if ((!(_1ac6756b6_is_ref(_25129_p.get()._field_decl.ptr())))) {
											_25129_p.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1adb00821_CustomType>(_1adb00821_CustomType(static__1adb02658_as_ptr(static__1adb06162_kind(_25129_p.get()._field_kind)))), 12)));
										} else {
											_25129_p.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1adb00821_CustomType>(_1adb00821_CustomType(static__1adb06162_kind(_25129_p.get()._field_kind))), 12)));
										}
									}
									_iter_next_1b139833b:;
									++it;
									goto _iter_begin_1b139833b;
								}
								_iter_end_1b139833b:;
							}
						}
						_iter_next_1b1397b76:;
						++it;
						goto _iter_begin_1b1397b76;
					}
					_iter_end_1b1397b76:;
				}
			}
			_iter_next_1b13973a1:;
			++it;
			goto _iter_begin_1b13973a1;
		}
		_iter_end_1b13973a1:;
	}
}



inline void _1adae67c3_prepare_structures(_1adaa65b8_ObjectCoder* _self_) {
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1b139811b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac661075_Struct> _1b139ae65_s = *it;
			{
				if ((!(_1b139ae65_s.get()._field_cpp_linked)) && (_1b139ae65_s.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
					_1adae665d_prepare_structure(&(*_self_), _1b139ae65_s);
				}
			}
			_iter_next_1b139811b:;
			++it;
			goto _iter_begin_1b139811b;
		}
		_iter_end_1b139811b:;
	}
}



inline void _1adae6938_build_trait_wrapper(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1adaa29c1_TraitHash>& _27843_hash) {
	{
		auto &expr = _27843_hash.get()._field_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1b139d5d8:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1b139d682_m = *it;
			{
				jule::Str _28017_ident = _1b139d682_m.get()._field_ident;
				_1b139d682_m.get()._field_instances[0LL].get()._field_scope=nullptr;
				jule::Bool _28217_ptr = (!(_1ac6756b6_is_ref(_1b139d682_m.get()._field_params[0LL].ptr())));
				jule::Ptr<_1ac676a08_Fn> _28421_sm = _1ac665772_find_method(_27843_hash.get()._field_s.ptr(), _1b139d682_m.get()._field_ident,false);
				if ((_28421_sm == nullptr) || (_28421_sm.get()._field_instances.len() == 0LL)) {
					goto _iter_next_1b139d5d8;
				}
				_1b139d682_m.get()._field_ident=(_28017_ident + jule::Str("_", 1)) + _1ad258364_itoa(_27843_hash.get()._field_i);
				(*_self_)._field_trait_wrappers+=_1adaeb1ac_func(&(*_self_), _1b139d682_m);
				_1b139d682_m.get()._field_ident=_28017_ident;
				_1ada98533_add_indent(&(*_self_));
				(*_self_)._field_trait_wrappers+=jule::Str("{\n", 2);
				(*_self_)._field_trait_wrappers+=_1ada9aea3_indent(&(*_self_));
				if ((!(_1ac676ec0_is_void(_28421_sm.ptr())))) {
					(*_self_)._field_trait_wrappers+=jule::Str("return ", 7);
				}
				(*_self_)._field_trait_wrappers+=static__1ada8dabc_func(_28421_sm);
				(*_self_)._field_trait_wrappers+=jule::Str("(", 1);
				if (_28217_ptr) {
					(*_self_)._field_trait_wrappers+=jule::Str("_self_.safe_ptr<", 16);
					(*_self_)._field_trait_wrappers+=static__1adb046e3_structure_ins(_27843_hash.get()._field_s);
					(*_self_)._field_trait_wrappers+=jule::Str(">(", 2);
					if ((!(_1e6ae3d5e_PRODUCTION))) {
						(*_self_)._field_trait_wrappers+=jule::Str("_00___file", 10);
					}
					(*_self_)._field_trait_wrappers+=jule::Str(")", 1);
				} else {
					(*_self_)._field_trait_wrappers+=jule::Str("_self_.data.as<", 15);
					(*_self_)._field_trait_wrappers+=static__1adb043d5_structure(_28421_sm.get()._field_owner);
					(*_self_)._field_trait_wrappers+=jule::Str(">()", 3);
				}
				{
					auto expr = _1b139d682_m.get()._field_params.slice(1LL);
					auto it = expr.begin();
					_iter_begin_1b13a2c08:;
					if (it != expr.end()) {
						jule::Ptr<_1ac674bd2_Param> _1b13a77ac_mp = *it;
						{
							(*_self_)._field_trait_wrappers+=jule::Str(", ", 2);
							(*_self_)._field_trait_wrappers+=static__1ada8e4e6_param(_1b13a77ac_mp);
						}
						_iter_next_1b13a2c08:;
						++it;
						goto _iter_begin_1b13a2c08;
					}
					_iter_end_1b13a2c08:;
				}
				(*_self_)._field_trait_wrappers+=jule::Str(");\n}\n", 5);
				_1ada9b646_done_indent(&(*_self_));
			}
			_iter_next_1b139d5d8:;
			++it;
			goto _iter_begin_1b139d5d8;
		}
		_iter_end_1b139d5d8:;
	}
}



inline void _1adae6a9d_trait_decl(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac85d096_Trait>& _32234_t) {
	jule::Str _32313_ident = static__1ada8e1d8_trait_decl(_32234_t);
	jule::Str _32513_type_data = (_32313_ident + jule::Str("MptrData", 8));
	(*_self_)._field_trait_data_t+=jule::Str("struct ", 7);
	(*_self_)._field_trait_data_t+=_32513_type_data;
	(*_self_)._field_trait_data_t+=jule::Str(" {\n", 3);
	{
		auto &expr = _32234_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1b13aa44c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1b13aa5d4_m = *it;
			{
				jule::Ptr<_1ac67a501_FnIns> _33121_ins = _1b13aa5d4_m.get()._field_instances[0LL];
				jule::Ptr<_1ac67939b_ParamIns> _33221_p = _33121_ins.get()._field_params[0LL];
				_33221_p.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_32234_t, 2)));
				{
					auto expr = _33121_ins.get()._field_params.slice(1LL);
					auto it = expr.begin();
					_iter_begin_1b13ac0db:;
					if (it != expr.end()) {
						jule::I64 _1b13ac2b7_i = it - expr.begin();
						jule::Ptr<_1ac67939b_ParamIns> _1b13ac43d_ip = *it;
						{
							if (_1ab008622_is_anon_ident(_1b13ac43d_ip.get()._field_decl.get()._field_ident)) {
								_1b13ac43d_ip.get()._field_decl.get()._field_ident=jule::Str("_", 1) + _1ad258364_itoa(_1b13ac2b7_i);
							}
						}
						_iter_next_1b13ac0db:;
						++it;
						_1b13ac2b7_i++;
						goto _iter_begin_1b13ac0db;
					}
					_iter_end_1b13ac0db:;
				}
				if ((!(_1e6ae3d5e_PRODUCTION))) {
					_33121_ins.get()._field_params = jule::alloc_for_append(_33121_ins.get()._field_params,1);_33121_ins.get()._field_params.__push(jule::new_ptr<_1ac67939b_ParamIns>(_1ac67939b_ParamIns(jule::new_ptr<_1ac674bd2_Param>(_1ac674bd2_Param(_1ab005531_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1ad42e293_TypeSymbol>(),jule::Str("__file", 6))),jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1adb00821_CustomType>(_1adb00821_CustomType(jule::Str("const char*", 11))), 12))))));
				}
				_1ada98533_add_indent(&(*_self_));
				(*_self_)._field_trait_data_t+=_1adae98a3_func_decl(&(*_self_), _1b13aa5d4_m,true);
				_1ada9b646_done_indent(&(*_self_));
			}
			_iter_next_1b13aa44c:;
			++it;
			goto _iter_begin_1b13aa44c;
		}
		_iter_end_1b13aa44c:;
	}
	(*_self_)._field_trait_data_t+=_1ada9aea3_indent(&(*_self_));
	(*_self_)._field_trait_data_t+=jule::Str("};", 2);
	(*_self_)._field_trait_data_t+=jule::Str("\n\n", 2);
	jule::I64 _36213_n = (*_self_)._field_trait_map.len();
	jule::I64 _36317_i = 0LL;
	{
		auto &expr = _32234_t.get()._field_implemented;
		auto it = expr.begin();
		_iter_begin_1b13b1e7b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac661075_Struct> _1b13b20be_s = *it;
			{
				{
					auto &expr = _1b13b20be_s.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1b13b2740:;
					if (it != expr.end()) {
						jule::Ptr<_1ac664551_StructIns> _1b13b27c8_ins = *it;
						{
							jule::Ptr<_1adaa29c1_TraitHash> _36625_hash = jule::new_ptr<_1adaa29c1_TraitHash>(_1adaa29c1_TraitHash(_32234_t,_1b13b27c8_ins,_36317_i));
							(_36317_i)++;
							_1adae6938_build_trait_wrapper(&(*_self_), _36625_hash);
							(*_self_)._field_trait_map = jule::alloc_for_append((*_self_)._field_trait_map,1);(*_self_)._field_trait_map.__push(_36625_hash);
						}
						_iter_next_1b13b2740:;
						++it;
						goto _iter_begin_1b13b2740;
					}
					_iter_end_1b13b2740:;
				}
			}
			_iter_next_1b13b1e7b:;
			++it;
			goto _iter_begin_1b13b1e7b;
		}
		_iter_end_1b13b1e7b:;
	}
	(*_self_)._field_trait_declarations+=jule::Str("struct ", 7);
	(*_self_)._field_trait_declarations+=_32313_ident;
	(*_self_)._field_trait_declarations+=jule::Str(" {};\n", 5);
	_1ada98533_add_indent(&(*_self_));
	(*_self_)._field_trait_data+=jule::Str("static ", 7);
	(*_self_)._field_trait_data+=_32513_type_data;
	(*_self_)._field_trait_data+=jule::Str(" ", 1);
	(*_self_)._field_trait_data+=_32313_ident;
	(*_self_)._field_trait_data+=jule::Str("_mptr_data[] = {\n", 17);
	{
		auto expr = (*_self_)._field_trait_map.slice(_36213_n);
		auto it = expr.begin();
		_iter_begin_1b13b58b9:;
		if (it != expr.end()) {
			jule::Ptr<_1adaa29c1_TraitHash> _1b13b59da_hash = *it;
			{
				(*_self_)._field_trait_data+=_1ada9aea3_indent(&(*_self_));
				(*_self_)._field_trait_data+=jule::Str("{\n", 2);
				_1ada98533_add_indent(&(*_self_));
				{
					auto &expr = _1b13b59da_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1b13b6ea3:;
					if (it != expr.end()) {
						jule::Ptr<_1ac676a08_Fn> _1b13b703b_m = *it;
						{
							jule::Str _39321_m_ident = static__1ada8dabc_func(_1b13b703b_m);
							(*_self_)._field_trait_data+=_1ada9aea3_indent(&(*_self_));
							(*_self_)._field_trait_data+=jule::Str(".", 1);
							(*_self_)._field_trait_data+=_39321_m_ident;
							(*_self_)._field_trait_data+=jule::Str("=", 1);
							(*_self_)._field_trait_data+=_39321_m_ident;
							(*_self_)._field_trait_data+=jule::Str("_", 1);
							(*_self_)._field_trait_data+=_1ad258364_itoa(_1b13b59da_hash.get()._field_i);
							(*_self_)._field_trait_data+=jule::Str(",\n", 2);
						}
						_iter_next_1b13b6ea3:;
						++it;
						goto _iter_begin_1b13b6ea3;
					}
					_iter_end_1b13b6ea3:;
				}
				_1ada9b646_done_indent(&(*_self_));
				(*_self_)._field_trait_data+=_1ada9aea3_indent(&(*_self_));
				(*_self_)._field_trait_data+=jule::Str("},\n", 3);
			}
			_iter_next_1b13b58b9:;
			++it;
			goto _iter_begin_1b13b58b9;
		}
		_iter_end_1b13b58b9:;
	}
	_1ada9b646_done_indent(&(*_self_));
	(*_self_)._field_trait_data+=_1ada9aea3_indent(&(*_self_));
	(*_self_)._field_trait_data+=jule::Str("};", 2);
}



inline void _1adae6c13_trait_decls(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ad376b8b_Package>& _41335_p) {
	{
		auto &expr = _41335_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b13bb5b2:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b13bb6d3_f = *it;
			{
				{
					auto &expr = _1b13bb6d3_f.get()._field_traits;
					auto it = expr.begin();
					_iter_begin_1b13bbd87:;
					if (it != expr.end()) {
						jule::Ptr<_1ac85d096_Trait> _1b13bbe20_t = *it;
						{
							if (_1b13bbe20_t.get()._field_token._field_id != static_cast<jule::U64>(0LLU)) {
								_1adae6a9d_trait_decl(&(*_self_), _1b13bbe20_t);
							}
						}
						_iter_next_1b13bbd87:;
						++it;
						goto _iter_begin_1b13bbd87;
					}
					_iter_end_1b13bbd87:;
				}
			}
			_iter_next_1b13bb5b2:;
			++it;
			goto _iter_begin_1b13bb5b2;
		}
		_iter_end_1b13bb5b2:;
	}
}



inline jule::Str _1adae6d78_structure_plain_decl(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac661075_Struct>& _42444_s) {
	jule::Str _42517_obj = jule::Str();
	{
		auto &expr = _42444_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1b13bd927:;
		if (it != expr.end()) {
			jule::Ptr<_1ac664551_StructIns> _1b13bda48_ins = *it;
			{
				_42517_obj+=jule::Str("\nstruct ", 8);
				_42517_obj+=static__1ada8eb12_structure_ins(_1b13bda48_ins);
				_42517_obj+=jule::Str(";\n", 2);
			}
			_iter_next_1b13bd927:;
			++it;
			goto _iter_begin_1b13bd927;
		}
		_iter_end_1b13bd927:;
	}
	return _42517_obj;
}



inline jule::Str _1adae6edd_structure_plain_decls(_1adaa65b8_ObjectCoder* _self_) {
	jule::Str _43617_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1b13c030d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac661075_Struct> _1b13c0385_s = *it;
			{
				if ((!(_1b13c0385_s.get()._field_cpp_linked)) && (_1b13c0385_s.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
					_43617_obj+=_1adae6d78_structure_plain_decl(&(*_self_), _1b13c0385_s);
					_43617_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_1b13c030d:;
			++it;
			goto _iter_begin_1b13c030d;
		}
		_iter_end_1b13c030d:;
	}
	return _43617_obj;
}



inline jule::Str _1adae7153_var_init_expr(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ad39e037_Var>& _44737_v,jule::Str _44746_init) {
	jule::Str _44817_obj = jule::Str();
	if (_44737_v.get()._field_statically) {
		_44817_obj+=jule::Str("static ", 7);
	}
	_44817_obj+=static__1adb06162_kind(_44737_v.get()._field_kind.get()._field_kind);
	_44817_obj+=jule::Str(" ", 1);
	if (_44737_v.get()._field_reference) {
		_44817_obj+=jule::Str("&", 1);
	}
	_44817_obj+=static__1ada9022d_var(_44737_v);
	if ((!(_44746_init.empty()))) {
		_44817_obj+=jule::Str(" = ", 3);
		_44817_obj+=_44746_init;
	}
	_44817_obj+=jule::Str(";", 1);
	return _44817_obj;
}



inline jule::Str _1adae72b8_var(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ad39e037_Var> _46826_v) {
	if (_1ab008314_is_ignore_ident(_46826_v.get()._field_ident)) {
		return jule::Str();
	}
	if ((_46826_v.get()._field_value != nullptr) && (_46826_v.get()._field_value.get()._field_expr != nullptr)) {
		if (_46826_v.get()._field_value.get()._field_data.get()._field_model != jule::Any(jule::Any(nullptr))) {
			return _1adae7153_var_init_expr(&(*_self_), _46826_v,_1ada878da_val((*_self_)._field_ec.ptr(), _46826_v.get()._field_value));
		}
		return _1adae7153_var_init_expr(&(*_self_), _46826_v,jule::Str());
	}
	return _1adae7153_var_init_expr(&(*_self_), _46826_v,_1ada87c92_init_expr((*_self_)._field_ec.ptr(), _46826_v.get()._field_kind.get()._field_kind));
}



inline jule::Str _1adae742d_field_decl(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac663a06_FieldIns>& _48234_f) {
	jule::Str _48317_obj = static__1adb06162_kind(_48234_f.get()._field_kind);
	_48317_obj+=jule::Str(" ", 1);
	_48317_obj+=static__1ada8ee20_field(_48234_f.get()._field_decl);
	_48317_obj+=jule::Str(" = ", 3);
	if ((_48234_f.get()._field_default == nullptr)) {
		_48317_obj+=_1ada87c92_init_expr((*_self_)._field_ec.ptr(), _48234_f.get()._field_kind);
	} else {
		_48317_obj+=_1ada87533_expr((*_self_)._field_ec.ptr(), _48234_f.get()._field_default.get()._field_model);
	}
	_48317_obj+=jule::Str(";", 1);
	return _48317_obj;
}



inline jule::Str _1adae7593_structure_constructor(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac664551_StructIns>& _49845_s) {
	jule::Str _49917_obj = static__1ada8eb12_structure_ins(_49845_s);
	_49917_obj+=jule::Str("(", 1);
	if ((_49845_s.get()._field_fields.len() > 0LL)) {
		{
			auto &expr = _49845_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1b13cc914:;
			if (it != expr.end()) {
				jule::Ptr<_1ac663a06_FieldIns> _1b13cca35_f = *it;
				{
					_49917_obj+=static__1adb06162_kind(_1b13cca35_f.get()._field_kind);
					_49917_obj+=jule::Str(" __param_", 9);
					_49917_obj+=_1b13cca35_f.get()._field_decl.get()._field_ident;
					_49917_obj+=jule::Str(", ", 2);
				}
				_iter_next_1b13cc914:;
				++it;
				goto _iter_begin_1b13cc914;
			}
			_iter_end_1b13cc914:;
		}
		(_49917_obj).mut_slice(0LL,_49917_obj.len() - 2LL);
	} else {
		_49917_obj+=jule::Str("void", 4);
	}
	_49917_obj+=jule::Str(")", 1);
	if ((_49845_s.get()._field_fields.len() > 0LL)) {
		_49917_obj+=jule::Str(": ", 2);
		{
			auto &expr = _49845_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1b13d0065:;
			if (it != expr.end()) {
				jule::Ptr<_1ac663a06_FieldIns> _1b13d01ec_f = *it;
				{
					_49917_obj+=static__1ada8ee20_field(_1b13d01ec_f.get()._field_decl);
					_49917_obj+=jule::Str("(", 1);
					_49917_obj+=jule::Str("__param_", 8);
					_49917_obj+=_1b13d01ec_f.get()._field_decl.get()._field_ident;
					_49917_obj+=jule::Str("), ", 3);
				}
				_iter_next_1b13d0065:;
				++it;
				goto _iter_begin_1b13d0065;
			}
			_iter_end_1b13d0065:;
		}
		(_49917_obj).mut_slice(0LL,_49917_obj.len() - 2LL);
	}
	_49917_obj+=jule::Str(" {}", 3);
	return _49917_obj;
}



inline jule::Str _1adae7708_structure_destructor(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac664551_StructIns>& _53144_s) {
	
	jule::Ptr<_1ac676a08_Fn> _53313_dispose_method = _1ac665772_find_method(_53144_s.ptr(), jule::Str("dispose", 7),false);
	jule::Bool _53417_disposed = static__1ad3a0335_dispose(_53313_dispose_method);
	if ((!(_53417_disposed))) {
		return jule::Str();
	}
	jule::Str _53917_obj = jule::Str("~", 1);
	_53917_obj+=static__1ada8eb12_structure_ins(_53144_s);
	_53917_obj+=jule::Str("(void) { ", 9);
	_53917_obj+=static__1ada8dabc_func(_53313_dispose_method);
	_53917_obj+=jule::Str("(this); }", 9);
	return _53917_obj;
}



inline void _1adae786d_structure_operator_eq(_1adaa65b8_ObjectCoder* _self_,jule::Str& _54745_obj,jule::Str& _54756_ident,jule::Ptr<_1ac664551_StructIns>& _54773_s) {
	if ((_54773_s.get()._field_operators._field_eq != nullptr)) {
		_1adae7bc0_structure_operator(&(*_self_), _54745_obj,_54756_ident,_54773_s.get()._field_operators._field_eq,jule::Str("==", 2));
		return;
	}
	_54745_obj+=_1ada9aea3_indent(&(*_self_));
	if (_1e6ae45ac_OPT_INLINE) {
		_54745_obj+=jule::Str("inline ", 7);
	}
	_54745_obj+=jule::Str("bool operator==(", 16);
	_54745_obj+=_54756_ident;
	_54745_obj+=jule::Str(" _other) {", 10);
	if ((_54773_s.get()._field_fields.len() > 0LL)) {
		_1ada98533_add_indent(&(*_self_));
		_54745_obj+=jule::Str("\n", 1);
		_54745_obj+=_1ada9aea3_indent(&(*_self_));
		_54745_obj+=jule::Str("return ", 7);
		_1ada98533_add_indent(&(*_self_));
		jule::I64 _56721_n = 0LL;
		{
			auto &expr = _54773_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1b13d9b52:;
			if (it != expr.end()) {
				jule::Ptr<_1ac663a06_FieldIns> _1b13d9c73_f = *it;
				{
					jule::Ptr<_1ac664551_StructIns> _57021_strct = _1ad42d4b2_strct(_1b13d9c73_f.get()._field_kind.ptr());
					if (((_57021_strct != nullptr) && (_57021_strct.get()._field_decl != nullptr)) && _57021_strct.get()._field_decl.get()._field_cpp_linked) {
						goto _iter_next_1b13d9b52;
					}
					(_56721_n)++;
					_54745_obj+=jule::Str("\n", 1);
					_54745_obj+=_1ada9aea3_indent(&(*_self_));
					_54745_obj+=jule::Str("this->", 6);
					jule::Str _57921_f_ident = static__1ada8ee20_field(_1b13d9c73_f.get()._field_decl);
					_54745_obj+=_57921_f_ident;
					_54745_obj+=jule::Str(" == _other.", 11);
					_54745_obj+=_57921_f_ident;
					_54745_obj+=jule::Str(" &&", 3);
				}
				_iter_next_1b13d9b52:;
				++it;
				goto _iter_begin_1b13d9b52;
			}
			_iter_end_1b13d9b52:;
		}
		_1ada9b646_done_indent(&(*_self_));
		if ((_56721_n > 0LL)) {
			(_54745_obj).mut_slice(0LL,_54745_obj.len() - 3LL);
		} else {
			_54745_obj+=jule::Str("true", 4);
		}
		_54745_obj+=jule::Str(";\n", 2);
		_1ada9b646_done_indent(&(*_self_));
		_54745_obj+=_1ada9aea3_indent(&(*_self_));
		_54745_obj+=jule::Str("}", 1);
	} else {
		_54745_obj+=jule::Str(" return true; }", 15);
	}
	_54745_obj+=jule::Str("\n\n", 2);
}



inline void _1adae79d3_structure_operator_not_eq(_1adaa65b8_ObjectCoder* _self_,jule::Str& _60149_obj,jule::Str& _60160_ident,jule::Ptr<_1ac664551_StructIns>& _60177_s) {
	_60149_obj+=_1ada9aea3_indent(&(*_self_));
	if (_1e6ae45ac_OPT_INLINE) {
		_60149_obj+=jule::Str("inline ", 7);
	}
	_60149_obj+=jule::Str("bool operator!=(", 16);
	_60149_obj+=_60160_ident;
	_60149_obj+=jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48);
}



inline void _1adae7bc0_structure_operator(_1adaa65b8_ObjectCoder* _self_,jule::Str& _61242_obj,jule::Str& _61253_ident,jule::Ptr<_1ac67a501_FnIns>& _61270_f,jule::Str _61281_op) {
	if ((_61270_f == nullptr)) {
		return;
	}
	jule::Bool _61713_unary = (_61270_f.get()._field_params.len() == 1LL);
	jule::Bool _61813_assignment = _1ac676ec0_is_void(_61270_f.get()._field_decl.ptr());
	_61242_obj+=_1ada9aea3_indent(&(*_self_));
	if (_1e6ae45ac_OPT_INLINE) {
		_61242_obj+=jule::Str("inline ", 7);
	}
	if (_61813_assignment) {
		_61242_obj+=_61253_ident;
		_61242_obj+=jule::Str("&", 1);
	} else {
		if ((_1ad42bec7_prim(_61270_f.get()._field_result.ptr()) == nullptr)) {
			_61242_obj+=_61253_ident;
		} else {
			_61242_obj+=jule::Str("jule::Bool", 10);
		}
	}
	_61242_obj+=jule::Str(" operator", 9);
	_61242_obj+=_61281_op;
	_61242_obj+=jule::Str("(", 1);
	if ((!(_61713_unary))) {
		jule::Ptr<_1ac67939b_ParamIns> _64021_p = _61270_f.get()._field_params[1LL];
		_61242_obj+=static__1adb0511c_param_ins(_64021_p);
		_61242_obj+=jule::Str(" _other", 7);
	}
	_61242_obj+=jule::Str(") { ", 4);
	if ((!(_61813_assignment))) {
		_61242_obj+=jule::Str("return ", 7);
	}
	_61242_obj+=static__1ada8ddca_func_ins(_61270_f);
	if ((!(_61713_unary))) {
		_61242_obj+=jule::Str("(this, _other); ", 16);
		if (_61813_assignment) {
			_61242_obj+=jule::Str("return *this; ", 14);
		}
		_61242_obj+=jule::Str("}", 1);
	} else {
		_61242_obj+=jule::Str("(this); }", 9);
	}
	_61242_obj+=jule::Str("\n\n", 2);
}



inline jule::Str _1adae8066_structure_operators(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac664551_StructIns>& _66143_s) {
	jule::Str _66213_ident = static__1ada8eb12_structure_ins(_66143_s);
	jule::Str _66317_obj = jule::Str();
	_1adae786d_structure_operator_eq(&(*_self_), _66317_obj,_66213_ident,_66143_s);
	_1adae79d3_structure_operator_not_eq(&(*_self_), _66317_obj,_66213_ident,_66143_s);
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_gt,jule::Str(">", 1));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_gt_eq,jule::Str(">=", 2));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_lt,jule::Str("<", 1));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_lt_eq,jule::Str("<=", 2));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_shl,jule::Str("<<", 2));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_shr,jule::Str(">>", 2));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_add,jule::Str("+", 1));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_sub,jule::Str("-", 1));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_div,jule::Str("/", 1));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_mul,jule::Str("*", 1));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_mod,jule::Str("%", 1));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_and,jule::Str("&", 1));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_or,jule::Str("|", 1));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_xor,jule::Str("^", 1));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_neg,jule::Str("-", 1));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_pos,jule::Str("+", 1));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_not,jule::Str("~", 1));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_add_assign,jule::Str("+=", 2));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_sub_assign,jule::Str("-=", 2));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_div_assign,jule::Str("/=", 2));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_mul_assign,jule::Str("*=", 2));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_mod_assign,jule::Str("%=", 2));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_shl_assign,jule::Str("<<=", 3));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_shr_assign,jule::Str(">>=", 3));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_or_assign,jule::Str("|=", 2));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_and_assign,jule::Str("&=", 2));
	_1adae7bc0_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_xor_assign,jule::Str("^=", 2));
	return _66317_obj;
}



inline jule::Str _1adae8462_structure_derive_defs_decls(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac664551_StructIns>& _70247_s) {
	jule::Str _70317_obj = jule::Str();
	if (_1ac662d24_is_derives(_70247_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_70317_obj+=_1ada9aea3_indent(&(*_self_));
		_70317_obj+=static__1ada8abc9_clone_func_decl(_70247_s.get()._field_decl);
		_70317_obj+=jule::Str(";\n\n", 3);
	}
	return _70317_obj;
}



inline jule::Str _1adae8808_structure_ins_decl(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac664551_StructIns>& _71242_s) {
	jule::Str _71317_obj = jule::Str();
	if ((_71242_s.get()._field_methods.len() > 0LL)) {
		{
			auto &expr = _71242_s.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1b1410804:;
			if (it != expr.end()) {
				jule::Ptr<_1ac676a08_Fn> _1b1410925_m = *it;
				{
					_71317_obj+=_1adae98a3_func_decl(&(*_self_), _1b1410925_m,false);
				}
				_iter_next_1b1410804:;
				++it;
				goto _iter_begin_1b1410804;
			}
			_iter_end_1b1410804:;
		}
	}
	_71317_obj+=jule::Str("struct ", 7);
	jule::Str _72213_out_ident = static__1ada8eb12_structure_ins(_71242_s);
	_71317_obj+=_72213_out_ident;
	_71317_obj+=jule::Str(" {\n", 3);
	_1ada98533_add_indent(&(*_self_));
	if ((_71242_s.get()._field_fields.len() > 0LL)) {
		{
			auto &expr = _71242_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1b141299e:;
			if (it != expr.end()) {
				jule::Ptr<_1ac663a06_FieldIns> _1b1412a8c_f = *it;
				{
					_71317_obj+=_1ada9aea3_indent(&(*_self_));
					_71317_obj+=_1adae742d_field_decl(&(*_self_), _1b1412a8c_f);
					_71317_obj+=jule::Str("\n", 1);
				}
				_iter_next_1b141299e:;
				++it;
				goto _iter_begin_1b141299e;
			}
			_iter_end_1b141299e:;
		}
		_71317_obj+=jule::Str("\n\n", 2);
		_71317_obj+=_1ada9aea3_indent(&(*_self_));
		_71317_obj+=_1adae7593_structure_constructor(&(*_self_), _71242_s);
		_71317_obj+=jule::Str("\n\n", 2);
	}
	_71317_obj+=_1ada9aea3_indent(&(*_self_));
	_71317_obj+=_1adae7708_structure_destructor(&(*_self_), _71242_s);
	_71317_obj+=jule::Str("\n\n", 2);
	_71317_obj+=_1ada9aea3_indent(&(*_self_));
	_71317_obj+=_72213_out_ident;
	_71317_obj+=jule::Str("(void) = default;\n\n", 19);
	_71317_obj+=_1adae8462_structure_derive_defs_decls(&(*_self_), _71242_s);
	_71317_obj+=_1adae8066_structure_operators(&(*_self_), _71242_s);
	_71317_obj+=jule::Str("\n", 1);
	_1ada9b646_done_indent(&(*_self_));
	_71317_obj+=(_1ada9aea3_indent(&(*_self_)) + jule::Str("};", 2));
	return _71317_obj;
}



inline jule::Str _1adae8bb0_structure_decl(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac661075_Struct>& _76238_s) {
	jule::Str _76317_obj = jule::Str();
	{
		auto &expr = _76238_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1b1417e5a:;
		if (it != expr.end()) {
			jule::Ptr<_1ac664551_StructIns> _1b141807b_ins = *it;
			{
				_76317_obj+=_1adae8808_structure_ins_decl(&(*_self_), _1b141807b_ins);
			}
			_iter_next_1b1417e5a:;
			++it;
			goto _iter_begin_1b1417e5a;
		}
		_iter_end_1b1417e5a:;
	}
	return _76317_obj;
}



inline jule::Str _1adae8e8a_structure_decls(_1adaa65b8_ObjectCoder* _self_) {
	jule::Str _77217_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1b14196ba:;
		if (it != expr.end()) {
			jule::Ptr<_1ac661075_Struct> _1b1419742_s = *it;
			{
				if ((!(_1b1419742_s.get()._field_cpp_linked)) && (_1b1419742_s.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
					_77217_obj+=_1adae8bb0_structure_decl(&(*_self_), _1b1419742_s);
					_77217_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_1b14196ba:;
			++it;
			goto _iter_begin_1b14196ba;
		}
		_iter_end_1b14196ba:;
	}
	return _77217_obj;
}



inline jule::Str _1adae941e_func_head(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac67a501_FnIns>& _78233_f,jule::Bool _78244_ptr) {
	jule::Str _78317_obj = jule::Str();
	if (((!(_78244_ptr)) && _1e6ae45ac_OPT_INLINE) && (!(_1ac677575_is_entry_point(_78233_f.get()._field_decl.ptr())))) {
		_78317_obj+=jule::Str("inline ", 7);
	}
	_78317_obj+=static__1adb05738_func_ins_result(_78233_f);
	if (_78244_ptr) {
		_78317_obj+=jule::Str("(*", 2);
		_78317_obj+=static__1ada8ddca_func_ins(_78233_f);
		_78317_obj+=jule::Str(")", 1);
	} else {
		_78317_obj+=jule::Str(" ", 1);
		_78317_obj+=static__1ada8ddca_func_ins(_78233_f);
	}
	return _78317_obj;
}



inline jule::Str _1adae98a3_func_decl(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac676a08_Fn>& _80033_f,jule::Bool _80041_ptr) {
	jule::Str _80117_obj = jule::Str();
	{
		auto &expr = _80033_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1b141e956:;
		if (it != expr.end()) {
			jule::Ptr<_1ac67a501_FnIns> _1b141ea77_c = *it;
			{
				_80117_obj+=_1ada9aea3_indent(&(*_self_));
				_80117_obj+=_1adae941e_func_head(&(*_self_), _1b141ea77_c,_80041_ptr);
				_80117_obj+=_1adae64e8_params_decls(&(*_self_), _1b141ea77_c.get()._field_params);
				_80117_obj+=jule::Str(";\n", 2);
			}
			_iter_next_1b141e956:;
			++it;
			goto _iter_begin_1b141e956;
		}
		_iter_end_1b141e956:;
	}
	return _80117_obj;
}



inline jule::Str _1adae9c5a_func_decls(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ad376b8b_Package>& _81234_pkg) {
	jule::Str _81317_obj = jule::Str();
	{
		auto &expr = _81234_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b1421e97:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b14220b8_file = *it;
			{
				{
					auto &expr = _1b14220b8_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1b142275b:;
					if (it != expr.end()) {
						jule::Ptr<_1ac676a08_Fn> _1b1422805_f = *it;
						{
							if ((!(_1b1422805_f.get()._field_cpp_linked)) && (_1b1422805_f.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
								_81317_obj+=_1adae98a3_func_decl(&(*_self_), _1b1422805_f,false);
							}
						}
						_iter_next_1b142275b:;
						++it;
						goto _iter_begin_1b142275b;
					}
					_iter_end_1b142275b:;
				}
			}
			_iter_next_1b1421e97:;
			++it;
			goto _iter_begin_1b1421e97;
		}
		_iter_end_1b1421e97:;
	}
	return _81317_obj;
}



inline void _1adae9e9c_build_trait_map(_1adaa65b8_ObjectCoder* _self_) {
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1b1424274:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b142430c_u = *it;
			{
				if ((!(_1b142430c_u.get()._field_cpp_linked))) {
					_1adae6c13_trait_decls(&(*_self_), _1b142430c_u.get()._field_package);
				}
			}
			_iter_next_1b1424274:;
			++it;
			goto _iter_begin_1b1424274;
		}
		_iter_end_1b1424274:;
	}
	_1adae6c13_trait_decls(&(*_self_), (*_self_)._field_ir.get()._field_main);
}



inline void _1adaea1de_process_traits(_1adaa65b8_ObjectCoder* _self_) {
	_1adae9e9c_build_trait_map(&(*_self_));
}



inline jule::Str _1adaea4b9_decls(_1adaa65b8_ObjectCoder* _self_) {
	jule::Str _83917_obj = jule::Str();
	_83917_obj+=(*_self_)._field_trait_declarations;
	_83917_obj+=_1adae6edd_structure_plain_decls(&(*_self_));
	_83917_obj+=_1adae8e8a_structure_decls(&(*_self_));
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1b14278c6:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b1427970_u = *it;
			{
				if ((!(_1b1427970_u.get()._field_cpp_linked))) {
					_83917_obj+=_1adae9c5a_func_decls(&(*_self_), _1b1427970_u.get()._field_package);
				}
			}
			_iter_next_1b14278c6:;
			++it;
			goto _iter_begin_1b14278c6;
		}
		_iter_end_1b14278c6:;
	}
	_83917_obj+=_1adae9c5a_func_decls(&(*_self_), (*_self_)._field_ir.get()._field_main);
	if (((*_self_)._field_trait_map.len() > 0LL)) {
		_83917_obj+=jule::Str("\n\n", 2);
		_83917_obj+=(*_self_)._field_trait_data_t;
		_83917_obj+=jule::Str("\n\n", 2);
		_83917_obj+=(*_self_)._field_trait_wrappers;
		_83917_obj+=jule::Str("\n\n", 2);
		_83917_obj+=(*_self_)._field_trait_data;
	}
	return _83917_obj;
}



inline jule::Str _1adaea94d_pkg_globals(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ad376b8b_Package>& _86535_p,jule::Str& _86553_global_initializers) {
	jule::Str _86617_obj = jule::Str();
	{
		auto &expr = _86535_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b142b5ab:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b142b6cc_f = *it;
			{
				{
					auto &expr = _1b142b6cc_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1b142bd70:;
					if (it != expr.end()) {
						jule::Ptr<_1ad39e037_Var> _1b142be19_v = *it;
						{
							if (((_1b142be19_v.get()._field_token._field_id != static_cast<jule::U64>(0LLU)) && (!(_1b142be19_v.get()._field_cpp_linked))) && (!(_1b142be19_v.get()._field_constant))) {
								_86617_obj+=static__1adb06162_kind(_1b142be19_v.get()._field_kind.get()._field_kind);
								_86617_obj+=jule::Str(" ", 1);
								if (_1b142be19_v.get()._field_reference) {
									_86617_obj+=jule::Str("&", 1);
								}
								_86617_obj+=static__1ada9022d_var(_1b142be19_v);
								_86617_obj+=jule::Str(";\n", 2);
								_86553_global_initializers+=_1ada9aea3_indent(&(*_self_));
								_86553_global_initializers+=static__1ada9022d_var(_1b142be19_v);
								if ((_1b142be19_v.get()._field_value != nullptr) && (_1b142be19_v.get()._field_value.get()._field_expr != nullptr)) {
									if (_1b142be19_v.get()._field_value.get()._field_data.get()._field_model != jule::Any(jule::Any(nullptr))) {
										_86553_global_initializers+=jule::Str(" = ", 3);
										_86553_global_initializers+=_1ada878da_val((*_self_)._field_ec.ptr(), _1b142be19_v.get()._field_value);
									}
								} else {
									_86553_global_initializers+=jule::Str(" = ", 3);
									_86553_global_initializers+=_1ada87c92_init_expr((*_self_)._field_ec.ptr(), _1b142be19_v.get()._field_kind.get()._field_kind);
								}
								_86553_global_initializers+=jule::Str(";\n", 2);
							}
						}
						_iter_next_1b142bd70:;
						++it;
						goto _iter_begin_1b142bd70;
					}
					_iter_end_1b142bd70:;
				}
			}
			_iter_next_1b142b5ab:;
			++it;
			goto _iter_begin_1b142b5ab;
		}
		_iter_end_1b142b5ab:;
	}
	return _86617_obj;
}



inline jule::Str _1adaead05_globals(_1adaa65b8_ObjectCoder* _self_,jule::Str& _89731_global_initializers) {
	jule::Str _89817_obj = jule::Str();
	_1ada98533_add_indent(&(*_self_));
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1b14337b1:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b1433849_u = *it;
			{
				if ((!(_1b1433849_u.get()._field_cpp_linked))) {
					_89817_obj+=_1adaea94d_pkg_globals(&(*_self_), _1b1433849_u.get()._field_package,_89731_global_initializers);
				}
			}
			_iter_next_1b14337b1:;
			++it;
			goto _iter_begin_1b14337b1;
		}
		_iter_end_1b14337b1:;
	}
	_89817_obj+=_1adaea94d_pkg_globals(&(*_self_), (*_self_)._field_ir.get()._field_main,_89731_global_initializers);
	_1ada9b646_done_indent(&(*_self_));
	return _89817_obj;
}



inline jule::Str _1adaeb1ac_func(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac676a08_Fn>& _91128_f) {
	jule::Str _91217_obj = jule::Str();
	{
		auto &expr = _91128_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1b1435c14:;
		if (it != expr.end()) {
			jule::Ptr<_1ac67a501_FnIns> _1b1435d35_ins = *it;
			{
				_91217_obj+=_1adae941e_func_head(&(*_self_), _1b1435d35_ins,false);
				_91217_obj+=_1adae6383_params_ins(&(*_self_), _1b1435d35_ins.get()._field_params);
				_91217_obj+=jule::Str(" ", 1);
				_91217_obj+=_1ada21786_func_scope((*_self_)._field_sc.ptr(), _1b1435d35_ins);
				if ((_1b1435d35_ins.get()._field_scope != nullptr)) {
					_91217_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_1b1435c14:;
			++it;
			goto _iter_begin_1b1435c14;
		}
		_iter_end_1b1435c14:;
	}
	return _91217_obj;
}



inline jule::Str _1adaeb564_pkg_funcs(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ad376b8b_Package>& _92633_p) {
	jule::Str _92717_obj = jule::Str();
	{
		auto &expr = _92633_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b1438b29:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b1438c4a_f = *it;
			{
				{
					auto &expr = _1b1438c4a_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1b14393dd:;
					if (it != expr.end()) {
						jule::Ptr<_1ac676a08_Fn> _1b1439487_f = *it;
						{
							if ((!(_1e6ae5998_TEST)) && _1adb0059b_has_directive(_1b1439487_f.get()._field_directives,jule::Str("test", 4))) {
								goto _iter_next_1b14393dd;
							}
							if ((!(_1b1439487_f.get()._field_cpp_linked)) && (_1b1439487_f.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
								_92717_obj+=_1adaeb1ac_func(&(*_self_), _1b1439487_f);
								_92717_obj+=jule::Str("\n\n", 2);
							}
						}
						_iter_next_1b14393dd:;
						++it;
						goto _iter_begin_1b14393dd;
					}
					_iter_end_1b14393dd:;
				}
			}
			_iter_next_1b1438b29:;
			++it;
			goto _iter_begin_1b1438b29;
		}
		_iter_end_1b1438b29:;
	}
	return _92717_obj;
}



inline jule::Str _1adaeb91b_structure_methods(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac664551_StructIns>& _94341_s) {
	jule::Str _94417_obj = jule::Str();
	{
		auto &expr = _94341_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1b143bed4:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1b143c105_f = *it;
			{
				_94417_obj+=_1ada9aea3_indent(&(*_self_));
				_94417_obj+=_1adaeb1ac_func(&(*_self_), _1b143c105_f);
				_94417_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_1b143bed4:;
			++it;
			goto _iter_begin_1b143bed4;
		}
		_iter_end_1b143bed4:;
	}
	return _94417_obj;
}



inline jule::Str _1adaebcc3_structure_ostream(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac664551_StructIns>& _95441_s) {
	jule::Str _95517_obj = jule::Str();
	_95517_obj+=_1ada9aea3_indent(&(*_self_));
	_95517_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48);
	_95517_obj+=static__1ada8eb12_structure_ins(_95441_s);
	_95517_obj+=jule::Str(" _Src) {\n", 9);
	_1ada98533_add_indent(&(*_self_));
	_95517_obj+=_1ada9aea3_indent(&(*_self_));
	jule::Ptr<_1ac676a08_Fn> _96317_fts = _1ac665772_find_method(_95441_s.ptr(), jule::Str("to_str", 6),false);
	if (static__1ad3a0643_to_str(_96317_fts)) {
		_95517_obj+=jule::Str("_Stream << ", 11);
		_95517_obj+=static__1ada8dabc_func(_96317_fts);
		_95517_obj+=jule::Str("(&_Src);\n", 9);
	} else {
		_95517_obj+=jule::Str("_Stream << \"", 12);
		_95517_obj+=_95441_s.get()._field_decl.get()._field_ident;
		_95517_obj+=jule::Str("{\";\n", 4);
		{
			auto &expr = _95441_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1b144255b:;
			if (it != expr.end()) {
				jule::I64 _1b1442803_i = it - expr.begin();
				jule::Ptr<_1ac663a06_FieldIns> _1b144299b_f = *it;
				{
					_95517_obj+=_1ada9aea3_indent(&(*_self_));
					_95517_obj+=jule::Str("_Stream << \"", 12);
					_95517_obj+=_1b144299b_f.get()._field_decl.get()._field_ident;
					_95517_obj+=jule::Str(":", 1);
					jule::Ptr<_1ac664551_StructIns> _98021_strct = _1ad42d4b2_strct(_1b144299b_f.get()._field_kind.ptr());
					if (((_98021_strct != nullptr) && (_98021_strct.get()._field_decl != nullptr)) && _98021_strct.get()._field_decl.get()._field_cpp_linked) {
						_95517_obj+=jule::Str(" cpp.", 5);
						_95517_obj+=static__1ada8ee20_field(_1b144299b_f.get()._field_decl);
						_95517_obj+=jule::Str("\"", 1);
					} else {
						_95517_obj+=jule::Str("\" << _Src.", 10);
						_95517_obj+=static__1ada8ee20_field(_1b144299b_f.get()._field_decl);
					}
					if ((_1b1442803_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_95441_s.get()._field_fields.len()))) {
						_95517_obj+=jule::Str(" << \", \"", 8);
					}
					_95517_obj+=jule::Str(";\n", 2);
				}
				_iter_next_1b144255b:;
				++it;
				_1b1442803_i++;
				goto _iter_begin_1b144255b;
			}
			_iter_end_1b144255b:;
		}
		_95517_obj+=_1ada9aea3_indent(&(*_self_));
		_95517_obj+=jule::Str("_Stream << \"}\";\n", 16);
	}
	_95517_obj+=_1ada9aea3_indent(&(*_self_));
	_95517_obj+=jule::Str("return _Stream;\n", 16);
	_1ada9b646_done_indent(&(*_self_));
	_95517_obj+=_1ada9aea3_indent(&(*_self_));
	_95517_obj+=jule::Str("}", 1);
	return _95517_obj;
}



inline jule::Str _1adaec17a_structure_derive_defs(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac664551_StructIns>& _100845_s) {
	jule::Str _100917_obj = jule::Str();
	if (_1ac662d24_is_derives(_100845_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_100917_obj+=_1ada9aea3_indent(&(*_self_));
		_100917_obj+=static__1ada8aed7_clone_func_def(_100845_s.get()._field_decl);
		_100917_obj+=jule::Str("{\n", 2);
		_1ada98533_add_indent(&(*_self_));
		_100917_obj+=_1ada9aea3_indent(&(*_self_));
		_100917_obj+=static__1adb046e3_structure_ins(_100845_s);
		_100917_obj+=jule::Str(" clone;\n", 8);
		{
			auto &expr = _100845_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1b1449eae:;
			if (it != expr.end()) {
				jule::Ptr<_1ac663a06_FieldIns> _1b144aec1_f = *it;
				{
					jule::Str _101921_ident = static__1ada8ee20_field(_1b144aec1_f.get()._field_decl);
					_100917_obj+=_1ada9aea3_indent(&(*_self_));
					_100917_obj+=jule::Str("clone.", 6);
					_100917_obj+=_101921_ident;
					_100917_obj+=jule::Str(" = jule::clone(this->", 21);
					_100917_obj+=_101921_ident;
					_100917_obj+=jule::Str(");\n", 3);
				}
				_iter_next_1b1449eae:;
				++it;
				goto _iter_begin_1b1449eae;
			}
			_iter_end_1b1449eae:;
		}
		_100917_obj+=_1ada9aea3_indent(&(*_self_));
		_100917_obj+=jule::Str("return clone;\n", 14);
		_1ada9b646_done_indent(&(*_self_));
		_100917_obj+=_1ada9aea3_indent(&(*_self_));
		_100917_obj+=jule::Str("}", 1);
	}
	return _100917_obj;
}



inline jule::Str _1adaec532_structure_ins(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac664551_StructIns>& _103737_s) {
	jule::Str _103817_obj = _1adaeb91b_structure_methods(&(*_self_), _103737_s);
	_103817_obj+=jule::Str("\n\n", 2);
	_103817_obj+=_1adaec17a_structure_derive_defs(&(*_self_), _103737_s);
	_103817_obj+=jule::Str("\n\n", 2);
	_103817_obj+=_1adaebcc3_structure_ostream(&(*_self_), _103737_s);
	return _103817_obj;
}



inline jule::Str _1adaec8d9_structure(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ac661075_Struct>& _104733_s) {
	jule::Str _104817_obj = jule::Str();
	{
		auto &expr = _104733_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1b1451735:;
		if (it != expr.end()) {
			jule::Ptr<_1ac664551_StructIns> _1b1451856_ins = *it;
			{
				_104817_obj+=_1adaec532_structure_ins(&(*_self_), _1b1451856_ins);
				_104817_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_1b1451735:;
			++it;
			goto _iter_begin_1b1451735;
		}
		_iter_end_1b1451735:;
	}
	return _104817_obj;
}



inline jule::Str _1adaecbb4_structures(_1adaa65b8_ObjectCoder* _self_) {
	jule::Str _105817_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1b14531a4:;
		if (it != expr.end()) {
			jule::Ptr<_1ac661075_Struct> _1b145322b_s = *it;
			{
				if ((!(_1b145322b_s.get()._field_cpp_linked)) && (_1b145322b_s.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
					_105817_obj+=_1adaec8d9_structure(&(*_self_), _1b145322b_s);
					_105817_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_1b14531a4:;
			++it;
			goto _iter_begin_1b14531a4;
		}
		_iter_end_1b14531a4:;
	}
	return _105817_obj;
}



inline jule::Str _1adaece8e_funcs(_1adaa65b8_ObjectCoder* _self_) {
	jule::Str _107017_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1b14554e7:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b1455591_u = *it;
			{
				if ((!(_1b1455591_u.get()._field_cpp_linked))) {
					_107017_obj+=_1adaeb564_pkg_funcs(&(*_self_), _1b1455591_u.get()._field_package);
				}
			}
			_iter_next_1b14554e7:;
			++it;
			goto _iter_begin_1b14554e7;
		}
		_iter_end_1b14554e7:;
	}
	_107017_obj+=_1adaeb564_pkg_funcs(&(*_self_), (*_self_)._field_ir.get()._field_main);
	return _107017_obj;
}



inline void _1adaed38a_push_init(_1adaa65b8_ObjectCoder* _self_,jule::Ptr<_1ad376b8b_Package>& _108029_pkg,jule::Str& _108049_obj) {
	
	{
		auto &expr = _108029_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b1457c36:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b1457d57_file = *it;
			{
				{
					auto &expr = _1b1457d57_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1b14584ea:;
					if (it != expr.end()) {
						jule::Ptr<_1ac676a08_Fn> &_1b1458594_f = *it;
						{
							if ((_1b1458594_f.get()._field_ident == jule::Str("init", 4))) {
								_108049_obj+=jule::Str("\n\t", 2);
								_108049_obj+=static__1ada8dabc_func(_1b1458594_f);
								_108049_obj+=jule::Str("();", 3);
							}
						}
						_iter_next_1b14584ea:;
						++it;
						goto _iter_begin_1b14584ea;
					}
					_iter_end_1b14584ea:;
				}
			}
			_iter_next_1b1457c36:;
			++it;
			goto _iter_begin_1b1457c36;
		}
		_iter_end_1b1457c36:;
	}
}



inline jule::Str _1adaed742_init_caller(_1adaa65b8_ObjectCoder* _self_,jule::Str& _109431_global_initializers) {
	jule::Str _109517_obj = jule::Str("void ", 5);
	_109517_obj+=jule::Str("__jule_call_initializers", 24);
	_109517_obj+=jule::Str("(void) {\n", 9);
	_109517_obj+=_109431_global_initializers;
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1b145a5da:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1b145a695_u = *it;
			{
				if ((!(_1b145a695_u.get()._field_cpp_linked))) {
					_1adaed38a_push_init(&(*_self_), _1b145a695_u.get()._field_package,_109517_obj);
				}
			}
			_iter_next_1b145a5da:;
			++it;
			goto _iter_begin_1b145a5da;
		}
		_iter_end_1b145a5da:;
	}
	_1adaed38a_push_init(&(*_self_), (*_self_)._field_ir.get()._field_main,_109517_obj);
	_109517_obj+=jule::Str("\n}", 2);
	return _109517_obj;
}



inline void _1adaeda61_append_standard(_1adaa65b8_ObjectCoder* _self_,jule::Str& _111339_obj_code) {
	_1adae069b_Time _111413_time = static__1adae0cd9_now();
	_1adadede8_AbsTime _111513_abs = _1adae278b_abs(&_111413_time);
	jule::Str _111717_time_str = jule::Str();
	_111717_time_str+=_1ad258089_fmt_uint(_111513_abs._field_day,10LL);
	_111717_time_str+=jule::Str("/", 1);
	_111717_time_str+=_1ad258089_fmt_uint(_111513_abs._field_month,10LL);
	_111717_time_str+=jule::Str("/", 1);
	_111717_time_str+=_1ad258089_fmt_uint(_111513_abs._field_year,10LL);
	_111717_time_str+=jule::Str(" ", 1);
	_111717_time_str+=_1ad258089_fmt_uint(_111513_abs._field_hour,10LL);
	_111717_time_str+=jule::Str(".", 1);
	_111717_time_str+=_1ad258089_fmt_uint(_111513_abs._field_minute,10LL);
	_111717_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM) UTC", 25);
	jule::Str _112917_s = jule::Str();
	_112917_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_112917_s+=jule::Str("// JuleC version: ", 18);
	_112917_s+=jule::Str("jule0.0.10 @master", 18);
	_112917_s+=jule::Str("\n", 1);
	_112917_s+=jule::Str("// Date: ", 9);
	_112917_s+=_111717_time_str;
	_112917_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_112917_s+=(*_self_)._field_info._field_compiler;
	_112917_s+=jule::Str(" ", 1);
	_112917_s+=(*_self_)._field_info._field_compiler_command;
	_112917_s+=jule::Str("\n\n", 2);
	if (_1e6ae3d5e_PRODUCTION) {
		_112917_s+=jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34);
	}
	if ((!(_1e6ae5b52_RC))) {
		_112917_s+=jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43);
	}
	if ((!(_1e6ae5d94_SAFETY))) {
		_112917_s+=jule::Str("#define __JULE_DISABLE__SAFETY\n", 31);
	}
	_112917_s+=jule::Str("\n\n#include \"", 12);
	_112917_s+=_1a92b4a9a_PATH_API;
	_112917_s+=jule::Str("\"\n\n", 3);
	_112917_s+=_111339_obj_code;
	_112917_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 149);
	if (_1e6ae5998_TEST) {
		_112917_s+=jule::Str("test_point();", 13);
	} else {
		_112917_s+=jule::Str("entry_point();", 14);
	}
	_112917_s+=jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28);
	_111339_obj_code=_112917_s;
}



inline jule::Str _1adaedd3b_serialize(_1adaa65b8_ObjectCoder* _self_) {
	_1adae67c3_prepare_structures(&(*_self_));
	_1adaea1de_process_traits(&(*_self_));
	jule::Str _118217_global_initializers = jule::Str();
	jule::Str _118317_obj = jule::Str();
	_118317_obj+=_1adaa90d2_links(&(*_self_));
	_118317_obj+=jule::Str("\n", 1);
	_118317_obj+=_1adaea4b9_decls(&(*_self_));
	_118317_obj+=jule::Str("\n\n", 2);
	_118317_obj+=_1adaead05_globals(&(*_self_), _118217_global_initializers);
	_118317_obj+=jule::Str("\n", 1);
	_118317_obj+=_1adaecbb4_structures(&(*_self_));
	_118317_obj+=_1adaece8e_funcs(&(*_self_));
	_118317_obj+=jule::Str("\n", 1);
	_118317_obj+=_1adaed742_init_caller(&(*_self_), _118217_global_initializers);
	_118317_obj+=jule::Str("\n", 1);
	return _118317_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1adaa65b8_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "indent_buffer:" << _Src._field_indent_buffer << ", ";
	_Stream << "trait_declarations:" << _Src._field_trait_declarations << ", ";
	_Stream << "trait_wrappers:" << _Src._field_trait_wrappers << ", ";
	_Stream << "trait_data:" << _Src._field_trait_data << ", ";
	_Stream << "trait_data_t:" << _Src._field_trait_data_t << ", ";
	_Stream << "trait_map:" << _Src._field_trait_map << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac68055b_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab024d36_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac696187_to_str(_1ac85d096_Trait* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1ac6987c7_equals(jule::Ptr<_1ac85d096_Trait> _self_,jule::Ptr<_1ad429931_TypeKind> _2626_other) {
	jule::Ptr<_1ac85d096_Trait> _2713_trt = _1ad42d78c_trt(_2626_other.ptr());
	return _self_ == _2713_trt;
}



inline jule::Bool _1ac6d2866_is_builtin(_1ac85d096_Trait* _self_) {
	return (*_self_)._field_token._field_id == static_cast<jule::U64>(0LLU);
}



inline jule::Ptr<_1ac676a08_Fn> _1ac702842_find_method(_1ac85d096_Trait* _self_,jule::Str _4034_ident) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1adc2a352:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1adc2a41d_f = *it;
			{
				if (_1adc2a41d_f.get()._field_ident == _4034_ident) {
					return _1adc2a41d_f;
				}
			}
			_iter_next_1adc2a352:;
			++it;
			goto _iter_begin_1adc2a352;
		}
		_iter_end_1adc2a352:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac85d096_Trait _Src) {
	_Stream << _1ac696187_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1ac746985_auto_expr(_1ac692a57_EnumItem* _self_) {
	return ((*_self_)._field_value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac692a57_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1adb43842_parse_integer_0(_1adb43215_ArgParser* _self_,jule::Str& _18632_s,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _18640_parser) {
	jule::I64 _18684_x = jule::I64();
	jule::Bool _18690_ok = jule::Bool();
	{
		
		if (_18632_s.empty()) {
			_case_begin_1b14da02c:;
			{
				_18684_x = 0LL;
				_18690_ok = false;
				return std::make_tuple(_18684_x,_18690_ok);
			}
		}
		else if (_1a904e0b5_has_prefix(_18632_s,jule::Str("0x", 2))) {
			_case_begin_1b14da68c:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),16LL);
			}
		}
		else if (_1a904e0b5_has_prefix(_18632_s,jule::Str("0b", 2))) {
			_case_begin_1b14da703:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),2LL);
			}
		}
		else if (_1a904e0b5_has_prefix(_18632_s,jule::Str("0o", 2))) {
			_case_begin_1b14da769:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),8LL);
			}
		}
		else if (_18632_s[0LL] == '0') {
			_case_begin_1b14d9c1e:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1b14d9ba8:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s,10LL);
			}
		}
		_match_end_1b14d9adc:;
	}
	return std::make_tuple(_18684_x,_18690_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1adb43842_parse_integer_1(_1adb43215_ArgParser* _self_,jule::Str& _18632_s,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _18640_parser) {
	jule::U64 _18684_x = jule::U64();
	jule::Bool _18690_ok = jule::Bool();
	{
		
		if (_18632_s.empty()) {
			_case_begin_1b14e4575:;
			{
				_18684_x = 0LLU;
				_18690_ok = false;
				return std::make_tuple(_18684_x,_18690_ok);
			}
		}
		else if (_1a904e0b5_has_prefix(_18632_s,jule::Str("0x", 2))) {
			_case_begin_1b14e9a42:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),16LL);
			}
		}
		else if (_1a904e0b5_has_prefix(_18632_s,jule::Str("0b", 2))) {
			_case_begin_1b14e9aa8:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),2LL);
			}
		}
		else if (_1a904e0b5_has_prefix(_18632_s,jule::Str("0o", 2))) {
			_case_begin_1b14e9b1e:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),8LL);
			}
		}
		else if (_18632_s[0LL] == '0') {
			_case_begin_1b14e4267:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1b14e4201:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s,10LL);
			}
		}
		_match_end_1b14e4135:;
	}
	return std::make_tuple(_18684_x,_18690_ok);
}



inline jule::Str _1adb43b1c_get_data(_1adb43215_ArgParser* _self_) {
	if (((*_self_)._field_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len()))) {
		return jule::Str();
	}
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1adb43e3b_process_flag(_1adb43215_ArgParser* _self_,jule::Trait<_1adb3d8d6_CommonFlag>& _21236_flag) {
	{
		auto &_match_expr{ _21236_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1adb3dcd2_Flag_3>>()) {
			_case_begin_1b14d2365:;
			{
				jule::Ptr<_1adb3dcd2_Flag_3> _21521_bf = _21236_flag.operator jule::Ptr<_1adb3dcd2_Flag_3>();
				(*(_21521_bf.get()._field__data))=(!(_21521_bf.get()._field__default));
				return jule::VoidExceptional();
			}
		}
		_match_end_1b14d2277:;
	}
	jule::Str _22013_data = _1adb43b1c_get_data(&(*_self_));
	if (_22013_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1adb3d8d6_CommonFlag_mptr_data[(_21236_flag).type_offset]._1adb3d232_name(_21236_flag)) + jule::Str(": expression missing", 20)));
	}
	{
		auto &_match_expr{ _21236_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1adb3dcd2_Flag_0>>()) {
			_case_begin_1b14d39a4:;
			{
				jule::Ptr<_1adb3dcd2_Flag_0> _22721_intf = _21236_flag.operator jule::Ptr<_1adb3dcd2_Flag_0>();
				jule::Bool _22833_ok;
				std::tie((*(_22721_intf.get()._field__data)),_22833_ok) = _1adb43842_parse_integer_0(&(*_self_), _22013_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _22872_s,jule::I64 _22880_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1ad0739ed_parse_int(_22872_s,_22880_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_22833_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1adb3d8d6_CommonFlag_mptr_data[(_21236_flag).type_offset]._1adb3d232_name(_21236_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1adb3dcd2_Flag_1>>()) {
			_case_begin_1b14d4521:;
			{
				jule::Ptr<_1adb3dcd2_Flag_1> _23521_uintf = _21236_flag.operator jule::Ptr<_1adb3dcd2_Flag_1>();
				jule::Bool _23634_ok;
				std::tie((*(_23521_uintf.get()._field__data)),_23634_ok) = _1adb43842_parse_integer_1(&(*_self_), _22013_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23673_s,jule::I64 _23681_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1aceeeaab_parse_uint(_23673_s,_23681_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_23634_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1adb3d8d6_CommonFlag_mptr_data[(_21236_flag).type_offset]._1adb3d232_name(_21236_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1adb3dcd2_Flag_2>>()) {
			_case_begin_1b14d4587:;
			{
				jule::Ptr<_1adb3dcd2_Flag_2> _24321_ff = _21236_flag.operator jule::Ptr<_1adb3dcd2_Flag_2>();
				(*(_24321_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _1ace68041_parse_float(_22013_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1adb3d8d6_CommonFlag_mptr_data[(_21236_flag).type_offset]._1adb3d232_name(_21236_flag)) + jule::Str(": expression must be valid floating-point", 41)));
						return jule::VoidExceptional(((jule::Str("--", 2) + _1adb3d8d6_CommonFlag_mptr_data[(_21236_flag).type_offset]._1adb3d232_name(_21236_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1adb3dcd2_Flag_4>>()) {
			_case_begin_1b14d45ed:;
			{
				(*(_21236_flag.operator jule::Ptr<_1adb3dcd2_Flag_4>().get()._field__data))=_22013_data;
			}
		}
		_match_end_1b14d37b7:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _1adb4425a_single_dash(_1adb43215_ArgParser* _self_,jule::Str& _25231_arg) {
	jule::Slice<jule::I32> _25313_rarg = static_cast<jule::Slice<jule::I32>>(_25231_arg).slice(1LL);
	{
		auto &expr = _25313_rarg;
		auto it = expr.begin();
		_iter_begin_1b150163c:;
		if (it != expr.end()) {
			jule::I32 &_1b1501719_r = *it;
			{
				jule::Trait<_1adb3d8d6_CommonFlag> _25521_flag = _1adb40e8d_find_flag_short(&(*_self_)._field_set, _1b1501719_r);
				if ((_25521_flag == nullptr)) {
					return jule::VoidExceptional((_25231_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_1b1501719_r));
				}
				({
					auto except = _1adb43e3b_process_flag(&(*_self_), _25521_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1b150163c:;
			++it;
			goto _iter_begin_1b150163c;
		}
		_iter_end_1b150163c:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _1adb44579_double_dash(_1adb43215_ArgParser* _self_,jule::Str& _26431_arg) {
	jule::Trait<_1adb3d8d6_CommonFlag> _26517_flag = _1adb40ad6_find_flag(&(*_self_)._field_set, _26431_arg.slice(2LL));
	if ((_26517_flag == nullptr)) {
		return jule::VoidExceptional((_26431_arg + jule::Str(": flag is not exist", 19)));
	}
	({
		auto except = _1adb43e3b_process_flag(&(*_self_), _26517_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	}); return jule::VoidExceptional(); }



inline jule::VoidExceptional _1adb447bb_try_arg(_1adb43215_ArgParser* _self_) {
	jule::Str _27413_arg = (*_self_)._field_args[(*_self_)._field_i];
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();
	}
	if (_27413_arg[0LL] == '-') {
		if (((*_self_)._field_args.len() > 1LL) && (_27413_arg[1LL] == '-')) {
			({
				auto except = _1adb44579_double_dash(&(*_self_), _27413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();
		}
		({
			auto except = _1adb4425a_single_dash(&(*_self_), _27413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();
	}
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_27413_arg); return jule::VoidExceptional(); }



inline jule::VoidExceptional _1adb44a0d_parse(_1adb43215_ArgParser* _self_) {
	for (; (*_self_)._field_i < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len())); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1adb447bb_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1b150363e:;
	}
	_iter_end_1b150363e:; return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, _1adb43215_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1e6ae4b2e_push_opt_level(jule::I64 _3323_level) {
	_1e6ae3e80_OPT_COPY=_3323_level >= static_cast<jule::I64>(1LL);
	_1e6ae40a1_OPT_DEADCODE=_3323_level >= static_cast<jule::I64>(1LL);
	_1e6ae4249_OPT_APPEND=_3323_level >= static_cast<jule::I64>(1LL);
	_1e6ae436a_OPT_MATH=_3323_level >= static_cast<jule::I64>(1LL);
	_1e6ae448b_OPT_ACCESS=_3323_level >= static_cast<jule::I64>(1LL);
	_1e6ae45ac_OPT_INLINE=_3323_level >= static_cast<jule::I64>(1LL);
	_1e6ae47dd_OPT_PTR=_3323_level >= static_cast<jule::I64>(1LL);
	_1e6ae490e_OPT_COND=_3323_level >= static_cast<jule::I64>(1LL);
}



inline void _1e7a824e4_free(void* _4524_ptr) {
	free(_4524_ptr);
}



inline jule::Str _1e7aa97b3_byte_ptr_to_str(jule::U8* _6931_s) {
	if ((_6931_s == nullptr)) {
		return jule::Str();
	}
	{
		return static_cast<jule::Str>(_6931_s);
	}
}



inline jule::I64 _1e6bb3e0c_get_last_errno(void) {
	return errno;
}



inline jule::I64 _1e7aabe03_stat(jule::U8* _4020_path,struct stat* _4037_stat) {
	return static_cast<jule::I64>(stat(((char*)(_4020_path)), _4037_stat));
}



inline jule::I64 _1e7aac3ba_open(jule::U8* _4520_path,jule::I64 _4533_flag,jule::I64 _4544_mode) {
	return static_cast<jule::I64>(open(((char*)(_4520_path)),_4533_flag,_4544_mode));
}



inline jule::U8* _1e7aac7a5_getcwd(jule::U8* _5122_buff,jule::U64 _5135_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5122_buff)),_5135_bufflen)));
}



inline DIR* _1e7aacab3_opendir(jule::U8* _5623_path) {
	return opendir(((char*)(_5623_path)));
}



inline struct dirent* _1e7aacdc1_readdir(DIR* _5927_dir) {
	return readdir(_5927_dir);
}



inline jule::I64 _1e7aad300_closedir(DIR* _6228_dir) {
	return static_cast<jule::I64>(closedir(_6228_dir));
}



inline jule::I64 _1e7aadd06_mkdir(jule::U8* _7121_path,jule::I64 _7134_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7121_path)),_7134_mode));
}



inline jule::I64 _1e7aae114_rmdir(jule::U8* _7621_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_7621_path))));
}



inline jule::I64 _1e7aae422_unlink(jule::U8* _7922_path) {
	return static_cast<jule::I64>(unlink(((char*)(_7922_path))));
}



inline jule::I64 _1e7ac842a_seek(jule::I64 _2613_handle,jule::I64 _2626_offset,jule::I64 _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I64 _1e7ac88e2_read(jule::I64 _3120_handle,void* _3137_buff,jule::U64 _3152_n) {
	return static_cast<jule::I64>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I64 _1e7ac8c88_close(jule::I64 _3614_handle) {
	return static_cast<jule::I64>(close(_3614_handle));
}



inline jule::I64 _1e7ac9250_write(jule::I64 _3921_handle,void* _3934_buff,jule::U64 _3949_n) {
	return static_cast<jule::I64>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _1e7ac94c5_exit(jule::I64 _4413_code) {
	exit(_4413_code);
}



inline jule::I64 _1e7b649a0_get_last_os_error(void) {
	jule::I64 _309_err = _1e6bb3e0c_get_last_errno();
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ab712204:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ab71226a:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1ab7122d1:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1ab712347:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ab712501:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ab712567:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ab7125cd:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else {
			_case_begin_1ab71218d:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1ab712138:;
	}
}



inline jule::Slice<jule::Str> _1e7b65484_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _1e7b657d6_working_dir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _1e7b6660b___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _1e7b6660b___getwd(void) {
	jule::U8* _1113_buff = _1e7aac7a5_getcwd(nullptr,0LLU);
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(_1e7b649a0_get_last_os_error());
	}
	jule::Str _159_pwd = _1e7aa97b3_byte_ptr_to_str(_1113_buff);
	{
		_1e7a824e4_free(_1113_buff);
	}
	return jule::Exceptional<jule::Str>(jule::Any(),_159_pwd);
}



inline jule::Slice<jule::U8> _1cd1c7c75_stobs(jule::Str& _915_s) {
	{
		jule::Slice<jule::U8> slice;;
		slice.data.alloc = _915_s.begin();;
		slice.data.ref = nullptr;;
		slice._slice = slice.data.alloc;;
		slice._len = slice._cap = _915_s.len();;
		return slice;
	}
}



inline jule::Bool _1a8eb4327_is_letter(jule::I32 _7618_r) {
	if ((static_cast<jule::U32>(_7618_r) <= 255LLU)) {
		return ((_1a90004a6__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7618_r))] & 96LLU) != 0LLU);
	}
	return _1a9007722_is_excluding_latin(_1a8eba4c6_LETTER,_7618_r);
}



inline jule::Bool _1a90069c9_is16(jule::Slice<_1a90048d9_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU)) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1ae17ca90:;
			if (it != expr.end()) {
				jule::I64 _1ae17d7d8_i = it - expr.begin();
				{
					_1a90048d9_Range16* _19417_range = (&(_1919_ranges[_1ae17d7d8_i]));
					{
						if (_19128_r < _19417_range->_field_lo) {
							return false;
						}
						if (_19128_r <= _19417_range->_field_hi) {
							return (_19417_range->_field_stride == 1LLU) || (jule::mod(_19128_r - _19417_range->_field_lo,_19417_range->_field_stride) == 0LLU);
						}
					}
				}
				_iter_next_1ae17ca90:;
				++it;
				_1ae17d7d8_i++;
				goto _iter_begin_1ae17ca90;
			}
			_iter_end_1ae17ca90:;
		}
		return false;
	}
	jule::I64 _20813_lo = 0LL;
	jule::I64 _20913_hi = _1919_ranges.len();
	while (_20813_lo < _20913_hi) {
		{
			jule::I64 _21113_m = _20813_lo + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_20913_hi - _20813_lo))) >> 1LLU));
			_1a90048d9_Range16* _21213_range = (&(_1919_ranges[_21113_m]));
			{
				if ((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi)) {
					return (_21213_range->_field_stride == 1LLU) || (jule::mod(_19128_r - _21213_range->_field_lo,_21213_range->_field_stride) == 0LLU);
				}
				if (_19128_r < _21213_range->_field_lo) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				}
			}
		}
	_iter_next_1ae17bee0:;
	}
	_iter_end_1ae17bee0:;
	return false;
}



inline jule::Bool _1a9006db4_is32(jule::Slice<_1a9004e7d_Range32> _2289_ranges,jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1ae1853d3:;
			if (it != expr.end()) {
				jule::I64 _1ae185603_i = it - expr.begin();
				{
					_1a9004e7d_Range32* _23117_range = (&(_2289_ranges[_1ae185603_i]));
					{
						if (_22828_r < _23117_range->_field_lo) {
							return false;
						}
						if (_22828_r <= _23117_range->_field_hi) {
							return (_23117_range->_field_stride == 1LLU) || (jule::mod(_22828_r - _23117_range->_field_lo,_23117_range->_field_stride) == 0LLU);
						}
					}
				}
				_iter_next_1ae1853d3:;
				++it;
				_1ae185603_i++;
				goto _iter_begin_1ae1853d3;
			}
			_iter_end_1ae1853d3:;
		}
		return false;
	}
	jule::I64 _24513_lo = 0LL;
	jule::I64 _24613_hi = _2289_ranges.len();
	while (_24513_lo < _24613_hi) {
		{
			jule::I64 _24813_m = _24513_lo + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_24613_hi - _24513_lo))) >> 1LLU));
			_1a9004e7d_Range32* _24913_range = (&(_2289_ranges[_24813_m]));
			{
				if ((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi)) {
					return (_24913_range->_field_stride == 1LLU) || (jule::mod(_22828_r - _24913_range->_field_lo,_24913_range->_field_stride) == 0LLU);
				}
				if (_22828_r < _24913_range->_field_lo) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				}
			}
		}
	_iter_next_1ae182545:;
	}
	_iter_end_1ae182545:;
	return false;
}



inline jule::Bool _1a9007722_is_excluding_latin(jule::Ptr<_1a90054cd_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_1a90048d9_Range16> &_28014_r16 = _27823_range_tab.get()._field_r16;
		jule::I64 _28213_off = _27823_range_tab.get()._field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(_28014_r16[(_28014_r16.len() - 1LL)]._field_hi))))) {
			return _1a90069c9_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27847_r)));
		}
	}
	jule::Slice<_1a9004e7d_Range32> &_28710_r32 = _27823_range_tab.get()._field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_28710_r32[0LL]._field_lo))))) {
		return _1a9006db4_is32(_28710_r32,static_cast<jule::U32>(static_cast<jule::U32>(_27847_r)));
	}
	return false;
}



inline std::tuple<jule::I32,jule::I64> _1a90ba61a_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::I64 _18242_size = jule::I64();
	if ((_18220_p.len() < 1LL)) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _1a90b9570_FIRST[static_cast<jule::I64>(_1869_p0)];
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>((_1879_x << 31LLU))) >> 31LLU));
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_18220_p[0LL]))) & static_cast<jule::I32>(static_cast<jule::I32>((~(_19213_mask)))))) | static_cast<jule::I32>(static_cast<jule::I32>(65533LL & _19213_mask)));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));
	_1a90b812e_accept_range _1969_accept = _1a90b9be1_ACCEPT_RANGES[static_cast<jule::I64>((_1879_x >> 4LLU))];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if ((_1959_sz <= 2LL)) {
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_1869_p0 & 31LLU)))) << 6LL))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2009_b1 & 63LLU)))));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LLU) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if ((_1959_sz <= 3LL)) {
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_1869_p0 & 15LLU)))) << 12LL))) | static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2009_b1 & 63LLU)))) << 6LL))))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2079_b2 & 63LLU)))));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LLU) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_1869_p0 & 7LLU)))) << 18LL))) | static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2009_b1 & 63LLU)))) << 12LL))))) | static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2079_b2 & 63LLU)))) << 6LL))))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2149_b3 & 63LLU)))));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::I64> _1a90bac7a_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::I64 _27647_size = jule::I64();
	if ((_27625_p.len() == 0LL)) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _2809_end = _27625_p.len();
	jule::I64 _28113_start = (_2809_end - 1LL);
	_27638_r=static_cast<jule::I32>(static_cast<jule::I32>(_27625_p[_28113_start]));
	if ((_27638_r < 128LL)) {
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _28913_lim = (_2809_end - 4LL);
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	}
	(_28113_start)--;
	for (; _28113_start >= _28913_lim; (_28113_start)--) {
		{
			if (_1a90bca18_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_1ae1d82c1;
			}
		}
	_iter_next_1ae1d82c1:;
	}
	_iter_end_1ae1d82c1:;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	}
	std::tie(_27638_r,_27647_size) = _1a90ba61a_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if ((_28113_start + _27647_size) != _2809_end) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	return std::make_tuple(_27638_r,_27647_size);
}



inline jule::Slice<jule::U8> _1a90bbc04_append_rune(jule::Slice<jule::U8> _39824_p,jule::I32 _39835_r) {
	if ((_39835_r <= 127LL)) {
		return jule::append(_39824_p,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(_39835_r))}));
	}
	return _1a90bc0de_append_rune_non_ascii(_39824_p,_39835_r);
}



inline jule::Slice<jule::U8> _1a90bc0de_append_rune_non_ascii(jule::Slice<jule::U8> _40530_p,jule::I32 _40545_r) {
	jule::U32 _4079_i = static_cast<jule::U32>(_40545_r);
	{
		
		if ((_4079_i <= 2047LLU)) {
			_case_begin_1ae2024e9:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 6LL))))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_40545_r))) & 63LLU))))}));
			}
		}
		else if ((_4079_i > 1114111LLU) || (55296LL <= _4079_i) && (_4079_i <= 57343LLU)) {
			_case_begin_1ae202560:;
			{
				_40545_r=65533LL;
				goto _case_begin_1ae2025c6;
			}
		}
		else if ((_4079_i <= 65535LLU)) {
			_case_begin_1ae2025c6:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 12LL))))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 6LL)))) & 63LLU)))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_40545_r))) & 63LLU))))}));
			}
		}
		else {
			_case_begin_1ae1ee3b4:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 18LL))))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 12LL)))) & 63LLU)))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 6LL)))) & 63LLU)))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_40545_r))) & 63LLU))))}));
			}
		}
		_match_end_1ae1ee2e8:;
	}
}



inline jule::I64 _1a90bc70a_rune_count_str(jule::Str _46623_s) {
	jule::I64 _46633_n = jule::I64();
	jule::I64 _46713_i = 0LL;
	for (; _46713_i < static_cast<jule::I64>(static_cast<jule::I64>(_46623_s.len())); (_46633_n)++) {
		{
			jule::U8 _46917_c = _46623_s[_46713_i];
			if ((_46917_c < 128LLU)) {
				(_46713_i)++;
				goto _iter_next_1ae20c768;
			}
			jule::U8 _47513_x = _1a90b9570_FIRST[static_cast<jule::I64>(_46917_c)];
			if ((_47513_x == 241LLU)) {
				(_46713_i)++;
				goto _iter_next_1ae20c768;
			}
			jule::I64 _48017_size = static_cast<jule::I64>((_47513_x & 7LLU));
			if ((_46713_i + _48017_size) > static_cast<jule::I64>(static_cast<jule::I64>(_46623_s.len()))) {
				(_46713_i)++;
				goto _iter_next_1ae20c768;
			}
			_1a90b812e_accept_range _48513_accept = _1a90b9be1_ACCEPT_RANGES[static_cast<jule::I64>((_47513_x >> 4LLU))];
			_46917_c=_46623_s[(_46713_i + 1LL)];
			if ((_46917_c < _48513_accept._field_lo) || (_48513_accept._field_hi < _46917_c)) {
				_48017_size=1LL;
			} else if ((_48017_size == 2LL)) {
			} else {
				_46917_c=_46623_s[(_46713_i + 2LL)];
				if ((_46917_c < 128LLU) || (191LL < _46917_c)) {
					_48017_size=1LL;
				} else if ((_48017_size == 3LL)) {
				} else {
					_46917_c=_46623_s[(_46713_i + 3LL)];
					if ((_46917_c < 128LLU) || (191LL < _46917_c)) {
						_48017_size=1LL;
					}
				}
			}
			_46713_i+=_48017_size;
		}
	_iter_next_1ae20c768:;
	}
	_iter_end_1ae20c768:;
	return _46633_n;
}



inline jule::Bool _1a90bca18_rune_start(jule::U8 _51019_b) {
	return ((_51019_b & 192LLU) != 128LLU);
}



inline jule::Str _1a902da23_repeat(jule::Str _1415_s,jule::I64 _1427_n) {
	if ((_1427_n <= 0LL)) {
		return jule::Str();
	}
	jule::Str _1913_ss = _1415_s;
	for (; (_1427_n > 1LL); (_1427_n)--) {
		{
			_1913_ss+=_1415_s;
		}
	_iter_next_1ae247c48:;
	}
	_iter_end_1ae247c48:;
	return _1913_ss;
}



inline jule::Bool _1a903dc42__has_prefix(jule::Str& _2617_s,jule::Str& _2626_sub,jule::I64 _2640_start) {
	if ((_2626_sub.len() == 0LL) || ((_2617_s.len() - _2640_start) < static_cast<jule::I64>(static_cast<jule::I64>(_2626_sub.len())))) {
		return false;
	}
	jule::I64 _3113_i = 0LL;
	for (; _3113_i < static_cast<jule::I64>(static_cast<jule::I64>(_2626_sub.len())); std::tie(_3113_i,_2640_start) = std::make_tuple(static_cast<jule::I64>((_3113_i + 1LL)),static_cast<jule::I64>((_2640_start + 1LL)))) {
		{
			if (_2617_s[_2640_start] != _2626_sub[_3113_i]) {
				return false;
			}
		}
	_iter_next_1ae249d38:;
	}
	_iter_end_1ae249d38:;
	return true;
}



inline jule::Bool _1a904e0b5_has_prefix(jule::Str _4119_s,jule::Str _4127_sub) {
	return _1a903dc42__has_prefix(_4119_s,_4127_sub,0LL);
}



inline jule::Bool _1a90567e8__has_suffix(jule::Str& _4517_s,jule::Str& _4526_sub,jule::I64 _4540_start) {
	if ((_4526_sub.len() == 0LL) || ((_4517_s.len() - _4540_start) < static_cast<jule::I64>(static_cast<jule::I64>(_4526_sub.len())))) {
		return false;
	}
	_4540_start=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_4517_s.len())) - _4540_start);
	jule::I64 _5113_i = 0LL;
	for (; _5113_i < static_cast<jule::I64>(static_cast<jule::I64>(_4526_sub.len())); (_5113_i)++) {
		{
			if (_4517_s[((_4540_start - _5113_i) - 1LL)] != _4526_sub[((_4526_sub.len() - _5113_i) - 1LL)]) {
				return false;
			}
		}
	_iter_next_1ae24ba93:;
	}
	_iter_end_1ae24ba93:;
	return true;
}



inline jule::Bool _1a9092823_has_suffix(jule::Str _6119_s,jule::Str _6127_sub) {
	return _1a90567e8__has_suffix(_6119_s,_6127_sub,0LL);
}



inline jule::I64 _1a901e580_find_at(jule::Str _6916_s,jule::Str _6924_sub,jule::I64 _6938_i) {
	if (((_6938_i < 0LL) || (_6916_s.len() < static_cast<jule::I64>(static_cast<jule::I64>(_6924_sub.len())))) || (_6924_sub.len() == 0LL)) {
		return -1LL;
	}
	for (; _6938_i < static_cast<jule::I64>(static_cast<jule::I64>(_6916_s.len())); (_6938_i)++) {
		{
			if (_1a903dc42__has_prefix(_6916_s,_6924_sub,_6938_i)) {
				return _6938_i;
			}
		}
	_iter_next_1ae251856:;
	}
	_iter_end_1ae251856:;
	return -1LL;
}



inline jule::I64 _1a90bd70b_find_last_at(jule::Str _9221_s,jule::Str _9229_sub,jule::I64 _9239_i) {
	jule::I64 _9313_j = ((_9239_i - static_cast<jule::I64>(static_cast<jule::I64>(_9229_sub.len()))) + 1LL);
	if ((((_9229_sub.len() == 0LL) || (_9239_i < 0LL)) || (_9239_i >= static_cast<jule::I64>(static_cast<jule::I64>(_9221_s.len())))) || (_9313_j < 0LL)) {
		return -1LL;
	}
	_julec_label_loop:;
	for (; (_9313_j >= 0LL); (_9313_j)--) {
		{
			jule::I64 _9917_k = _9313_j;
			jule::I64 _10017_z = 0LL;
			for (; _10017_z < static_cast<jule::I64>(static_cast<jule::I64>(_9229_sub.len())); std::tie(_9917_k,_10017_z) = std::make_tuple(static_cast<jule::I64>((_9917_k + 1LL)),static_cast<jule::I64>((_10017_z + 1LL)))) {
				{
					if (_9221_s[_9917_k] != _9229_sub[_10017_z]) {
						goto _iter_next_1ae254727;
					}
				}
			_iter_next_1ae256b03:;
			}
			_iter_end_1ae256b03:;
			return _9313_j;
		}
	_iter_next_1ae254727:;
	}
	_iter_end_1ae254727:;
	return -1LL;
}



inline jule::I64 _1a90bd871_find_last(jule::Str _11418_s,jule::Str _11426_sub) {
	return static_cast<jule::I64>(_1a90bd70b_find_last_at(_11418_s,_11426_sub,static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_11418_s.len())) - 1LL))));
}



inline jule::I64 _1a90be08b__find_rune(jule::Slice<jule::U8>& _17016_s,jule::I32 _17027_r) {
	jule::I64 _17113_i = 0LL;
	while (_17113_i < static_cast<jule::I64>(static_cast<jule::I64>(_17016_s.len()))) {
		{
			jule::I32 _17314_br;
			jule::I64 _17318_n;
			std::tie(_17314_br,_17318_n) = _1a90ba61a_decode_rune(_17016_s.slice(_17113_i));
			if (_17027_r == _17314_br) {
				return _17113_i;
			}
			_17113_i+=_17318_n;
		}
	_iter_next_1ae2615d0:;
	}
	_iter_end_1ae2615d0:;
	return -1LL;
}



inline jule::I64 _1a90be597_find_last_byte(jule::Str _19723_s,jule::U8 _19731_b) {
	jule::I64 _19813_i = (_19723_s.len() - 1LL);
	for (; (_19813_i >= 0LL); (_19813_i)--) {
		{
			if (_19723_s[_19813_i] == _19731_b) {
				return _19813_i;
			}
		}
	_iter_next_1ae26421a:;
	}
	_iter_end_1ae26421a:;
	return -1LL;
}



inline jule::I64 _1a90beb4c_find_any(jule::Str _23817_s,jule::Str _23825_runes) {
	jule::Slice<jule::U8> _2399_sb = _1cd1c7c75_stobs(_23817_s);
	jule::Slice<jule::U8> _24013_rb = _1cd1c7c75_stobs(_23825_runes);
	jule::I64 _24113_i = 0LL;
	while (_24113_i < static_cast<jule::I64>(static_cast<jule::I64>(_2399_sb.len()))) {
		{
			jule::I32 _24314_r;
			jule::I64 _24317_n;
			std::tie(_24314_r,_24317_n) = _1a90ba61a_decode_rune(_2399_sb.slice(_24113_i));
			if ((_1a90be08b__find_rune(_24013_rb,_24314_r) != -1LL)) {
				return _24113_i;
			}
			_24113_i+=_24317_n;
		}
	_iter_next_1ae269198:;
	}
	_iter_end_1ae269198:;
	return -1LL;
}



inline jule::Slice<jule::Str> _1a90bee27_split(jule::Str _27214_s,jule::Str _27222_sub,jule::I64 _27236_n) {
	jule::I64 _27313_cap = _27236_n;
	if ((_27236_n < 0LL)) {
		_27313_cap=16LL;
	}
	jule::Slice<jule::Str> _27713_parts = jule::Slice<jule::Str>::alloc(0LL,_27313_cap);
	if ((_27236_n == 0LL)) {
		return _27713_parts;
	}
	if ((_27236_n < 0LL)) {
		_27236_n=static_cast<jule::I64>(_27214_s.len());
	}
	jule::I64 _28413_i = 0LL;
	for (; (_27236_n > 0LL); (_27236_n)--) {
		{
			jule::I64 _28613_j = _1a901e580_find_at(_27214_s,_27222_sub,_28413_i);
			if ((_28613_j == -1LL)) {
				goto _iter_end_1ae270633;
			}
			_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27214_s.slice(_28413_i,_28613_j));
			_28413_i=static_cast<jule::I64>(_28613_j + static_cast<jule::I64>(static_cast<jule::I64>(_27222_sub.len())));
		}
	_iter_next_1ae270633:;
	}
	_iter_end_1ae270633:;
	if ((_27236_n > 0LL) && (_28413_i < static_cast<jule::I64>(static_cast<jule::I64>(_27214_s.len())))) {
		_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27214_s.slice(_28413_i));
	}
	return _27713_parts;
}



inline jule::Bool _1a90c008c_contains(jule::Str _30017_s,jule::Str _30025_sub) {
	return (_1a901e580_find_at(_30017_s,_30025_sub,0LL) != -1LL);
}



inline jule::Bool _1a90c0a1b_contains_any(jule::Str _31621_s,jule::Str _31629_runes) {
	return (_1a90beb4c_find_any(_31621_s,_31629_runes) != -1LL);
}



inline jule::Str _1a90c149a_replace(jule::Str _34216_s,jule::Str _34224_sub,jule::Str _34234_new,jule::I64 _34248_n) {
	if ((_34248_n == 0LL) || (_34224_sub == _34234_new)) {
		return _34216_s;
	}
	if ((_34248_n < 0LL)) {
		_34248_n=static_cast<jule::I64>(_34216_s.len());
	}
	jule::Str _35113_ss = jule::Str();
	jule::I64 _35213_i = 0LL;
	for (; (_34248_n > 0LL); (_34248_n)--) {
		{
			jule::I64 _35413_j = _1a901e580_find_at(_34216_s,_34224_sub,_35213_i);
			if ((_35413_j == -1LL)) {
				goto _iter_end_1ae27ad58;
			}
			_35113_ss+=_34216_s.slice(_35213_i,_35413_j);
			_35113_ss+=_34234_new;
			_35213_i=static_cast<jule::I64>(_35413_j + static_cast<jule::I64>(static_cast<jule::I64>(_34224_sub.len())));
		}
	_iter_next_1ae27ad58:;
	}
	_iter_end_1ae27ad58:;
	_35113_ss+=_34216_s.slice(_35213_i);
	return _35113_ss;
}



inline void _1a90c259a__trim_left(jule::Slice<jule::U8>& _39420_s,jule::Slice<jule::U8>& _39432_cutset) {
	jule::I64 _39513_i = 0LL;
	while (_39513_i < static_cast<jule::I64>(static_cast<jule::I64>(_39420_s.len()))) {
		{
			jule::I32 _39714_r;
			jule::I64 _39717_n;
			std::tie(_39714_r,_39717_n) = _1a90ba61a_decode_rune(_39420_s.slice(_39513_i));
			if ((_1a90be08b__find_rune(_39432_cutset,_39714_r) == -1LL)) {
				_39420_s=_39420_s.slice(_39513_i);
				return;
			}
			_39513_i+=_39717_n;
		}
	_iter_next_1ae2819da:;
	}
	_iter_end_1ae2819da:;
	_39420_s=nullptr;
}



inline jule::Str _1a90c2930_trim_left(jule::Str _40918_s,jule::Str _40926_cutset) {
	jule::Slice<jule::U8> _41013_bytes = _1cd1c7c75_stobs(_40918_s);
	jule::Slice<jule::U8> _4119_bcutset = _1cd1c7c75_stobs(_40926_cutset);
	_1a90c259a__trim_left(_41013_bytes,_4119_bcutset);
	return static_cast<jule::Str>(_41013_bytes);
}



inline void _1a90c2c82__trim_right(jule::Slice<jule::U8>& _41621_s,jule::Slice<jule::U8>& _41633_cutset) {
	jule::I64 _41713_i = _41621_s.len();
	while ((_41713_i > 0LL)) {
		{
			jule::I32 _41914_r;
			jule::I64 _41917_n;
			std::tie(_41914_r,_41917_n) = _1a90bac7a_decode_last_rune(_41621_s.slice(0LL,_41713_i));
			if ((_1a90be08b__find_rune(_41633_cutset,_41914_r) == -1LL)) {
				_41621_s=_41621_s.slice(0LL,_41713_i);
				return;
			}
			_41713_i-=_41917_n;
		}
	_iter_next_1ae2851c5:;
	}
	_iter_end_1ae2851c5:;
	_41621_s=nullptr;
}



inline jule::Str _1a90c3557_trim(jule::Str _44013_s,jule::Str _44021_cutset) {
	jule::Slice<jule::U8> _44113_bytes = _1cd1c7c75_stobs(_44013_s);
	jule::Slice<jule::U8> _4429_bcutset = _1cd1c7c75_stobs(_44021_cutset);
	_1a90c259a__trim_left(_44113_bytes,_4429_bcutset);
	_1a90c2c82__trim_right(_44113_bytes,_4429_bcutset);
	return static_cast<jule::Str>(_44113_bytes);
}



inline jule::Str _1a90c537d_clean(jule::Str _10818_path) {
	jule::Str _1099_original_path = _10818_path;
	jule::I64 _1109_vol_len = _1a90c83a3_volume_name_len(_10818_path);
	(_10818_path).mut_slice(_1109_vol_len);
	if (_10818_path.empty()) {
		if (((_1109_vol_len > 1LL) && _1a90c7c43_is_path_sep(_1099_original_path[0LL])) && _1a90c7c43_is_path_sep(_1099_original_path[1LL])) {
			return _1a90c59dd_from_slash(_1099_original_path);
		}
		return (_1099_original_path + jule::Str(".", 1));
	}
	jule::Bool _1199_rooted = _1a90c7c43_is_path_sep(_10818_path[0LL]);
	jule::I64 _1269_n = _10818_path.len();
	_1a90c439e_LazyBuff _12713_out = _1a90c439e_LazyBuff(_10818_path,jule::Slice<jule::U8>(),jule::I64(),_1099_original_path,_1109_vol_len);
	jule::I64 _13214_r = 0LL;
	jule::I64 _13221_dotdot = 0LL;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_1a90c4bda_append(&_12713_out, 47LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	}
	while (_13214_r < _1269_n) {
		{
			{
				
				if (_1a90c7c43_is_path_sep(_10818_path[_13214_r])) {
					_case_begin_1ae2a47cc:;
					{
						(_13214_r)++;
					}
				}
				else if ((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _1a90c7c43_is_path_sep(_10818_path[(_13214_r + 1LL)]))) {
					_case_begin_1ae2a559c:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _1a90c7c43_is_path_sep(_10818_path[(_13214_r + 2LL)]))) {
					_case_begin_1ae2a5613:;
					{
						_13214_r+=2LL;
						{
							
							if (_12713_out._field_w > _13221_dotdot) {
								_case_begin_1ae2a8d86:;
								{
									(_12713_out._field_w)--;
									while ((_12713_out._field_w > _13221_dotdot) && (!(_1a90c7c43_is_path_sep(static_cast<jule::U8>(_1a90c48bb_index(&_12713_out, _12713_out._field_w)))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1ae2a9837:;
									}
									_iter_end_1ae2a9837:;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1ae2a8e52:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1a90c4bda_append(&_12713_out, 47LLU);
									}
									_1a90c4bda_append(&_12713_out, '.');
									_1a90c4bda_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1ae2a8ced:;
						}
					}
				}
				else {
					_case_begin_1ae29ed5a:;
					{
						if ((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL))) {
							_1a90c4bda_append(&_12713_out, 47LLU);
						}
						
						for (; (_13214_r < _1269_n) && (!(_1a90c7c43_is_path_sep(_10818_path[_13214_r]))); (_13214_r)++) {
							{
								_1a90c4bda_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_1ae2a180c:;
						}
						_iter_end_1ae2a180c:;
					}
				}
				_match_end_1ae29e893:;
			}
		}
	_iter_next_1ae29ebc3:;
	}
	_iter_end_1ae29ebc3:;
	if ((_12713_out._field_w == 0LL)) {
		_1a90c4bda_append(&_12713_out, '.');
	}
	return _1a90c59dd_from_slash(_1a90c4eb5_string(&_12713_out));
}



inline jule::Str _1a90c59dd_from_slash(jule::Str _21119_path) {
	if (47LL == '/') {
		return _21119_path;
	}
	return _1a90c149a_replace(_21119_path,jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _1a90c5d40_join(jule::Slice<jule::Str> _22513_elem) {
	return _1a90c8ded___join(_22513_elem);
}



inline jule::Str _1a90c614d_ext(jule::Str _23012_path) {
	jule::I64 _23113_i = (_23012_path.len() - 1LL);
	for (; (_23113_i >= 0LL) && (!(_1a90c7c43_is_path_sep(_23012_path[_23113_i]))); (_23113_i)--) {
		{
			if (_23012_path[_23113_i] == '.') {
				return _23012_path.slice(_23113_i);
			}
		}
	_iter_next_1ae2aead4:;
	}
	_iter_end_1ae2aead4:;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _1a90c645b_abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;
	jule::Bool _24620_ok;
	std::tie(_24610_abs_path,_24620_ok) = _1a90c8705___abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _1a90c6769_base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	}
	while ((_25417_path.len() > 0LL) && _1a90c7c43_is_path_sep(_25417_path[(_25417_path.len() - 1LL)])) {
		{
			(_25417_path).mut_slice(0LL,_25417_path.len() - 1LL);
		}
	_iter_next_1ae2b30b0:;
	}
	_iter_end_1ae2b30b0:;
	(_25417_path).mut_slice(_1a90c6e1d_volume_name(_25417_path).len());
	jule::I64 _26513_i = (_25417_path.len() - 1LL);
	while ((_26513_i >= 0LL) && (!(_1a90c7c43_is_path_sep(_25417_path[_26513_i])))) {
		{
			(_26513_i)--;
		}
	_iter_next_1ae2b3a61:;
	}
	_iter_end_1ae2b3a61:;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice(_26513_i + 1LL);
	}
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(47LL);
	}
	return _25417_path;
}



inline jule::Str _1a90c6b10_dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _1a90c6e1d_volume_name(_28512_path);
	jule::I64 _28713_i = (_28512_path.len() - 1LL);
	while ((_28713_i >= static_cast<jule::I64>(static_cast<jule::I64>(_2869_vol.len()))) && (!(_1a90c7c43_is_path_sep(_28512_path[_28713_i])))) {
		{
			(_28713_i)--;
		}
	_iter_next_1ae2b6558:;
	}
	_iter_end_1ae2b6558:;
	jule::Str _2919_dir = _1a90c537d_clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));
	if ((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL)) {
		return _2869_vol;
	}
	return _2869_vol + _2919_dir;
}



inline jule::Str _1a90c6e1d_volume_name(jule::Str _30320_path) {
	return _1a90c59dd_from_slash(_30320_path.slice(0LL,_1a90c83a3_volume_name_len(_30320_path)));
}



inline jule::Bool _1a90c7c43_is_path_sep(jule::U8 _4820_c) {
	return 47LL == _4820_c;
}



inline jule::Bool _1a90c8095_is_abs(jule::Str _5315_path) {
	return _1a904e0b5_has_prefix(_5315_path,jule::Str("/", 1));
}



inline jule::I64 _1a90c83a3_volume_name_len(jule::Str _5920_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _1a90c8705___abs(jule::Str _6310_path) {
	jule::Bool _6328_ok = jule::Bool();
	if (_1a90c8095_is_abs(_6310_path)) {
		_6328_ok = true;
		return std::make_tuple(_1a90c537d_clean(_6310_path),_6328_ok);
	}
	jule::Str _679_wd = ({
		auto except = _1e7b657d6_working_dir();
		(except.ok()) ? (except.result) : ({{
			_6328_ok = false;
			return std::make_tuple(jule::Str(),_6328_ok);
			_6328_ok = false;
			return std::make_tuple(jule::Str(),_6328_ok);
		} jule::Str();});
	});
	_6328_ok = true;
	return std::make_tuple(_1a90c8ded___join(jule::Slice<jule::Str>({_679_wd,_6310_path})),_6328_ok);
}



inline jule::Str _1a90c8ae0_str_join(jule::Slice<jule::Str> _7313_elems,jule::Str _7327_sep) {
	{
		auto _match_expr{ _7313_elems.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ae2bda8d:;
			{
				return jule::Str();
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ae2bdb04:;
			{
				return _7313_elems[0LL];
			}
		}
		_match_end_1ae2bd85c:;
	}
	jule::Str _7913_s = _7313_elems[0LL];
	{
		auto expr = _7313_elems.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1ae2bdebc:;
		if (it != expr.end()) {
			jule::Str &_1ae2bec7b_elem = *it;
			{
				_7913_s+=_7327_sep + _1ae2bec7b_elem;
			}
			_iter_next_1ae2bdebc:;
			++it;
			goto _iter_begin_1ae2bdebc;
		}
		_iter_end_1ae2bdebc:;
	}
	return _7913_s;
}



inline jule::Str _1a90c8ded___join(jule::Slice<jule::Str> _8611_elem) {
	{
		auto &expr = _8611_elem;
		auto it = expr.begin();
		_iter_begin_1ae2c009a:;
		if (it != expr.end()) {
			jule::I64 _1ae2c07a4_i = it - expr.begin();
			jule::Str &_1ae2c0919_e = *it;
			{
				if ((!(_1ae2c0919_e.empty()))) {
					return _1a90c537d_clean(_1a90c8ae0_str_join(_8611_elem.slice(_1ae2c07a4_i),static_cast<jule::Str>(47LL)));
				}
			}
			_iter_next_1ae2c009a:;
			++it;
			_1ae2c07a4_i++;
			goto _iter_begin_1ae2c009a;
		}
		_iter_end_1ae2c009a:;
	}
	return jule::Str();
}



inline jule::I64 _1e7acaad1_get_last_fs_error(void) {
	jule::I64 _729_err = _1e6bb3e0c_get_last_errno();
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ae2eb47d:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ae2eb538:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1ae2eb59e:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1ae2eae72:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ae2eaed8:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ae2eb04e:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1ae2eb0b5:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1ae2eb7be:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1ae2eb835:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1ae2eb89b:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ae2eb912:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1ae2eb978:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ae2eba00:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1ae2eba77:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1ae2ebaee:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1ae2ebb76:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1ae2ebbed:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1ae2ebc75:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1ae2ebcec:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1ae2ebd74:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1ae2ebdeb:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1ae2ebe73:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ae2ebeea:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1ae2ec072:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1ae2ec0e9:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1ae2ec171:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1ae2ec1e8:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1ae2ec270:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1ae2eae0b:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1ae2eada6:;
	}
}



inline jule::I64 _1a92de7a6_get_last_process_error(void) {
	jule::I64 _429_err = _1e6bb3e0c_get_last_errno();
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ae314881:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1ae3148e7:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1ae3142cb:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ae314342:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ae3143a8:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ae31441e:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1ae3145b7:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1ae31462d:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1ae314694:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 67LL) {
			_case_begin_1ae31470a:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1ae314771:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1ae31177e:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1ae3141bb:;
	}
}



inline jule::Slice<char*> _1a92e2b2d_str_slice_to_cstr_slice(jule::Slice<jule::Str> _2128_s) {
	jule::Slice<char*> _2213_cs = jule::Slice<char*>::alloc(0LL,static_cast<jule::I64>((_2128_s.len() + 1LL)));
	{
		auto &expr = _2128_s;
		auto it = expr.begin();
		_iter_begin_1ae3180c1:;
		if (it != expr.end()) {
			jule::I64 _1ae318621_i = it - expr.begin();
			{
				_2213_cs = jule::alloc_for_append(_2213_cs,1);_2213_cs.__push(((char*)((&(_2128_s[_1ae318621_i][0LL])))));
			}
			_iter_next_1ae3180c1:;
			++it;
			_1ae318621_i++;
			goto _iter_begin_1ae3180c1;
		}
		_iter_end_1ae3180c1:;
	}
	_2213_cs = jule::alloc_for_append(_2213_cs,1);_2213_cs.__push(nullptr);
	return _2213_cs;
}



inline jule::I64 _1a92e3090_execvp(jule::Str _3011_file,jule::Slice<jule::Str> _3022_argv) {
	jule::Slice<char*> _319_cargv = _1a92e2b2d_str_slice_to_cstr_slice(_3022_argv);
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_3011_file[0LL])))), (char*const*)(&(_319_cargv[0LL]))));
	}
}



inline jule::I64 _1a92e3557_execve(jule::Str _3711_file,jule::Slice<jule::Str> _3722_argv,jule::Slice<jule::Str> _3735_env) {
	jule::Slice<char*> _389_cargv = _1a92e2b2d_str_slice_to_cstr_slice(_3722_argv);
	jule::Slice<char*> _399_cenv = _1a92e2b2d_str_slice_to_cstr_slice(_3735_env);
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3711_file[0LL])))), (char*const*)(&(_389_cargv[0LL])), (char*const*)((&(_399_cenv[0LL])))));
	}
}



inline void _1a92e4316_exit(jule::I64 _1213_code) {
	_1e7ac94c5_exit(_1213_code);
}



inline jule::Str _1a92e4547_executable(void) {
	return jule::executable();
}



inline jule::Bool _1a92922d6_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[(_2627_p.len() - 1LL)] == '>');
}



inline jule::Bool _1a92925c2_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _1a9291e73_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_1ae34e756:;
		if (it != expr.end()) {
			jule::Str &_1ae350dc8_valid_ext = *it;
			{
				if (_3128_ext == _1ae350dc8_valid_ext) {
					return true;
				}
			}
			_iter_next_1ae34e756:;
			++it;
			goto _iter_begin_1ae34e756;
		}
		_iter_end_1ae34e756:;
	}
	return false;
}



inline jule::Bool _1a92928d0_is_valid_cpp_ext(jule::Str _4225_ext) {
	if ((_4225_ext == jule::Str(".c", 2))) {
		return true;
	}
	{
		auto &expr = _1a9292094_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1ae351c97:;
		if (it != expr.end()) {
			jule::Str &_1ae3511d6_e = *it;
			{
				if (_4225_ext == _1ae3511d6_e) {
					return true;
				}
			}
			_iter_next_1ae351c97:;
			++it;
			goto _iter_begin_1ae351c97;
		}
		_iter_end_1ae351c97:;
	}
	{
		auto &expr = _1a92921b5_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1ae352a23:;
		if (it != expr.end()) {
			jule::Str &_1ae3524d4_e = *it;
			{
				if (_4225_ext == _1ae3524d4_e) {
					return true;
				}
			}
			_iter_next_1ae352a23:;
			++it;
			goto _iter_begin_1ae352a23;
		}
		_iter_end_1ae352a23:;
	}
	return false;
}



inline jule::Str _1a92a36b0_logf(jule::Str _28713_fmt,jule::Slice<jule::Any> _28726_args) {
	return _1a92a424e_apply_fmt(_28713_fmt,_28726_args);
}



inline jule::Str _1a92a3a12_arg_to_str(jule::Any _29115_arg) {
	{
		auto &_match_expr{ _29115_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1ae353738:;
			{
				return _29115_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1ae354272:;
			{
				return static_cast<jule::Str>(_29115_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1ae3542d8:;
			{
				return static_cast<jule::Str>(_29115_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1ae34e4d1:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1ae34e47b:;
	}
}



inline jule::I64 _1a92a3d20_find_next_fmt(jule::Str _30018_fmt) {
	{
		auto &expr = _30018_fmt;
		auto it = expr.begin();
		_iter_begin_1ae354d55:;
		if (it != expr.end()) {
			jule::I64 _1ae354959_i = it - expr.begin();
			jule::U8 &_1ae35553c_b = *it;
			{
				if (_1ae35553c_b == '@') {
					return _1ae354959_i;
				}
			}
			_iter_next_1ae354d55:;
			++it;
			_1ae354959_i++;
			goto _iter_begin_1ae354d55;
		}
		_iter_end_1ae354d55:;
	}
	return -1LL;
}



inline jule::Str _1a92a424e_apply_fmt(jule::Str _30918_fmt,jule::Slice<jule::Any> _30928_args) {
	jule::Str _31013_s = jule::Str();
	{
		auto &expr = _30928_args;
		auto it = expr.begin();
		_iter_begin_1ae3566a3:;
		if (it != expr.end()) {
			jule::Any &_1ae35674c_arg = *it;
			{
				jule::I64 _31313_i = _1a92a3d20_find_next_fmt(_30918_fmt);
				if ((_31313_i == -1LL)) {
					goto _iter_end_1ae3566a3;
				}
				_31013_s+=_30918_fmt.slice(0LL,_31313_i);
				_31013_s+=_1a92a3a12_arg_to_str(_1ae35674c_arg);
				(_30918_fmt).mut_slice(_31313_i + 1LL);
			}
			_iter_next_1ae3566a3:;
			++it;
			goto _iter_begin_1ae3566a3;
		}
		_iter_end_1ae3566a3:;
	}
	_31013_s+=_30918_fmt;
	return _31013_s;
}



inline jule::Bool _1a92a545e_is_top_directive(jule::Str _2825_directive) {
	return (_2825_directive == jule::Str("pass", 4)) || (_2825_directive == jule::Str("build", 5));
}



inline jule::Bool _1a92a71ca_is_windows(jule::Str _5119_os) {
	return (_5119_os == jule::Str("windows", 7));
}



inline jule::Bool _1a92a752c_is_darwin(jule::Str _5318_os) {
	return (_5318_os == jule::Str("darwin", 6));
}



inline jule::Bool _1a92a783a_is_linux(jule::Str _5517_os) {
	return (_5517_os == jule::Str("linux", 5));
}



inline jule::Bool _1a92a7b8c_is_i386(jule::Str _5716_arch) {
	return (_5716_arch == jule::Str("i386", 4));
}



inline jule::Bool _1a92a7e9a_is_amd64(jule::Str _5917_arch) {
	return (_5917_arch == jule::Str("amd64", 5));
}



inline jule::Bool _1a92a82a8_is_arm64(jule::Str _6117_arch) {
	return (_6117_arch == jule::Str("arm64", 5));
}



inline jule::Bool _1a92a85b6_is_unix(jule::Str _6316_os) {
	return _1a92a752c_is_darwin(_6316_os) || _1a92a783a_is_linux(_6316_os);
}



inline jule::Bool _1a92a895c_is_32bit(jule::Str _6517_arch) {
	return _1a92a7b8c_is_i386(_6517_arch);
}



inline jule::Bool _1a92a8c6a_is_64bit(jule::Str _6717_arch) {
	return _1a92a7e9a_is_amd64(_6717_arch) || _1a92a82a8_is_arm64(_6717_arch);
}



inline void _1a92d0731_init(void) {
	jule::Str _2513_path = _1a92e4547_executable();
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	}
	jule::Str _309_pwd = ({
		auto except = _1e7b657d6_working_dir();
		(except.ok()) ? (except.result) : ({{
			jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:31:9"));;
			return;
			return;
		} jule::Str();});
	});
	jule::Str _359_path_exec = _1a90c6b10_dir(_2513_path);
	_2513_path=_1a90c5d40_join(jule::Slice<jule::Str>({_359_path_exec,jule::Str("..", 2)}));
	{
		_1a92bc465_PATH_WD=_309_pwd;
		_1a92b785b_PATH_EXEC=_359_path_exec;
		_1a92b37be_PATH_STDLIB=_1a90c5d40_join(jule::Slice<jule::Str>({_2513_path,jule::Str("std", 3)}));
		_1a92b4a9a_PATH_API=_1a90c5d40_join(jule::Slice<jule::Str>({_1a92b785b_PATH_EXEC,jule::Str("..", 2)}));
		_1a92b4a9a_PATH_API=_1a90c5d40_join(jule::Slice<jule::Str>({_1a92b4a9a_PATH_API,jule::Str("api", 3)}));
		_1a92b4a9a_PATH_API=_1a90c5d40_join(jule::Slice<jule::Str>({_1a92b4a9a_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Bool _1ab005d4a_is_unary_op(jule::Str _31820_kind) {
	{
		auto &expr = _1aae0792d_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_1ae406bd7:;
		if (it != expr.end()) {
			jule::Str &_1ae406c2b_op = *it;
			{
				if (_31820_kind == _1ae406c2b_op) {
					return true;
				}
			}
			_iter_next_1ae406bd7:;
			++it;
			goto _iter_begin_1ae406bd7;
		}
		_iter_end_1ae406bd7:;
	}
	return false;
}



inline jule::Bool _1ab00619c_is_bin_op(jule::Str _32918_kind) {
	{
		auto &expr = _1aae07a4e_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_1ae407721:;
		if (it != expr.end()) {
			jule::Str &_1ae406e18_op = *it;
			{
				if (_32918_kind == _1ae406e18_op) {
					return true;
				}
			}
			_iter_next_1ae407721:;
			++it;
			goto _iter_begin_1ae407721;
		}
		_iter_end_1ae407721:;
	}
	return false;
}



inline jule::Bool _1ab00680c_is_str(jule::Str _35115_k) {
	return (!(_35115_k.empty())) && ((_35115_k[0LL] == '\"') || _1ab006b1a_is_raw_str(_35115_k));
}



inline jule::Bool _1ab006b1a_is_raw_str(jule::Str _35319_k) {
	return (!(_35319_k.empty())) && (_35319_k[0LL] == '`');
}



inline jule::Bool _1ab006e28_is_rune(jule::Str _35616_k) {
	return (!(_35616_k.empty())) && (_35616_k[0LL] == '\'');
}



inline jule::Bool _1ab0075cc_is_bool(jule::Str _36016_k) {
	return (_36016_k == jule::Str("true", 4)) || (_36016_k == jule::Str("false", 5));
}



inline jule::Bool _1ab0078da_is_float(jule::Str _36317_k) {
	if (_1a904e0b5_has_prefix(_36317_k,jule::Str("0x", 2))) {
		return _1a90c0a1b_contains_any(_36317_k,jule::Str(".pP", 3));
	}
	return _1a90c0a1b_contains_any(_36317_k,jule::Str(".eE", 3));
}



inline jule::Bool _1ab007be8_is_num(jule::Str _37115_k) {
	if (_37115_k.empty()) {
		return false;
	}
	jule::U8 _3769_b = _37115_k[0LL];
	return (_3769_b == '.') || (('0' <= _3769_b) && (_3769_b <= '9'));
}



inline jule::Bool _1ab008314_is_ignore_ident(jule::Str _38624_ident) {
	return (_38624_ident == jule::Str("_", 1));
}



inline jule::Bool _1ab008622_is_anon_ident(jule::Str _38822_ident) {
	return (_38822_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _1ab008c3d_is_space(jule::I32 _40217_r) {
	{
		auto &expr = _1aae085ee_SPACES;
		auto it = expr.begin();
		_iter_begin_1ae41282a:;
		if (it != expr.end()) {
			jule::I32 &_1ae412022_cr = *it;
			{
				if (_40217_r == _1ae412022_cr) {
					return true;
				}
			}
			_iter_next_1ae41282a:;
			++it;
			goto _iter_begin_1ae41282a;
		}
		_iter_end_1ae41282a:;
	}
	return false;
}



inline jule::Bool _1ab00916c_is_letter(jule::I32 _41318_r) {
	return _1a8eb4327_is_letter(_41318_r);
}



inline jule::Bool _1ab009788_is_decimal(jule::U8 _43519_b) {
	return ('0' <= _43519_b) && (_43519_b <= '9');
}



inline jule::Bool _1ab009a96_is_binary(jule::U8 _43718_b) {
	return (_43718_b == '0') || (_43718_b == '1');
}



inline jule::Bool _1ab009da4_is_octal(jule::U8 _43917_b) {
	return ('0' <= _43917_b) && (_43917_b <= '7');
}



inline jule::Bool _1ab00a1b2_is_hex(jule::U8 _44215_b) {
	{
		
		if (('0' <= _44215_b) && (_44215_b <= '9')) {
			_case_begin_1ae417720:;
			{
				return true;
			}
		}
		else if (('a' <= _44215_b) && (_44215_b <= 'f')) {
			_case_begin_1ae41780d:;
			{
				return true;
			}
		}
		else if (('A' <= _44215_b) && (_44215_b <= 'F')) {
			_case_begin_1ae417874:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ae4170c1:;
			{
				return false;
			}
		}
		_match_end_1ae415487:;
	}
}



inline jule::Bool _1ab00a4c0_is_assign(jule::U64 _45418_id) {
	return ((((((_45418_id == static_cast<jule::U64>(2LLU)) || (_45418_id == static_cast<jule::U64>(31LLU))) || (_45418_id == static_cast<jule::U64>(34LLU))) || (_45418_id == static_cast<jule::U64>(20LLU))) || (_45418_id == static_cast<jule::U64>(28LLU))) || (_45418_id == static_cast<jule::U64>(3LLU))) || (_45418_id == static_cast<jule::U64>(7LLU));
}



inline jule::Bool _1ab00a7cd_is_postfix_op(jule::Str _46722_kind) {
	{
		auto &expr = _1aae07c91_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_1ae4191a0:;
		if (it != expr.end()) {
			jule::Str &_1ae41b3a0_op = *it;
			{
				if (_46722_kind == _1ae41b3a0_op) {
					return true;
				}
			}
			_iter_next_1ae4191a0:;
			++it;
			goto _iter_begin_1ae4191a0;
		}
		_iter_end_1ae4191a0:;
	}
	return false;
}



inline jule::Bool _1ab00aadb_is_assign_op(jule::Str _47821_kind) {
	if (_1ab00a7cd_is_postfix_op(_47821_kind)) {
		return true;
	}
	{
		auto &expr = _1aaeecd53_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_1ae41b5c0:;
		if (it != expr.end()) {
			jule::Str &_1ae41b614_op = *it;
			{
				if (_47821_kind == _1ae41b614_op) {
					return true;
				}
			}
			_iter_next_1ae41b5c0:;
			++it;
			goto _iter_begin_1ae41b5c0;
		}
		_iter_end_1ae41b5c0:;
	}
	return false;
}



inline jule::Ptr<_1ab00b67a_File> _1ab00d01c_new_file_set(jule::Str _6321_path) {
	return jule::new_ptr<_1ab00b67a_File>(_1ab00b67a_File(_6321_path,jule::Slice<jule::U8>(),jule::Slice<_1ab005531_Token>()));
}



inline _1a92a31c6_Log _1ab00ea46_make_err(jule::I64 _11113_row,jule::I64 _11123_col,jule::Ptr<_1ab00b67a_File>& _11134_f,jule::Str _11144_fmt,jule::Slice<jule::Any> _11157_args) {
	return _1a92a31c6_Log(static_cast<jule::I64>(1LL),_11113_row,_11123_col,_11134_f.get()._field_path,_1a92a36b0_logf(_11144_fmt,_11157_args),jule::Str(),jule::Str());
}



inline jule::Bool _1ab00ee75_bytes_has_prefix(jule::Slice<jule::U8>& _12122_bytes,jule::Str _12137_prefix) {
	if (_12122_bytes.len() < static_cast<jule::I64>(static_cast<jule::I64>(_12137_prefix.len()))) {
		return false;
	}
	{
		auto &expr = _12137_prefix;
		auto it = expr.begin();
		_iter_begin_1ae420140:;
		if (it != expr.end()) {
			jule::I64 _1ae4205a2_i = it - expr.begin();
			{
				if (_12122_bytes[_1ae4205a2_i] != _12137_prefix[_1ae4205a2_i]) {
					return false;
				}
			}
			_iter_next_1ae420140:;
			++it;
			_1ae4205a2_i++;
			goto _iter_begin_1ae420140;
		}
		_iter_end_1ae420140:;
	}
	return true;
}



inline jule::Str _1ab010360_float_fmt_e(jule::Slice<jule::U8>& _13317_txt,jule::I64 _13334_i) {
	jule::Str _13344_lit = jule::Str();
	(_13334_i)++;
	if (_13334_i >= static_cast<jule::I64>(static_cast<jule::I64>(_13317_txt.len()))) {
		return _13344_lit;
	}
	jule::U8 _13913_b = _13317_txt[_13334_i];
	if (_13913_b == '_') {
		return _13344_lit;
	}
	if ((_13913_b == '+') || (_13913_b == '-')) {
		(_13334_i)++;
		if (_13334_i >= static_cast<jule::I64>(static_cast<jule::I64>(_13317_txt.len()))) {
			return _13344_lit;
		}
		if (_13317_txt[_13334_i] == '_') {
			return _13344_lit;
		}
	}
	jule::I64 _1539_first = _13334_i;
	for (; _13334_i < static_cast<jule::I64>(static_cast<jule::I64>(_13317_txt.len())); (_13334_i)++) {
		{
			_13913_b=_13317_txt[_13334_i];
			if ((_13913_b != '_') && (!(_1ab009788_is_decimal(_13913_b)))) {
				goto _iter_end_1ae423671;
			}
		}
	_iter_next_1ae423671:;
	}
	_iter_end_1ae423671:;
	if (_13334_i == _1539_first) {
		_13344_lit = jule::Str();
		return _13344_lit;
	}
	_13344_lit = static_cast<jule::Str>(_13317_txt.slice(0LL,_13334_i));
	return _13344_lit;
}



inline jule::Str _1ab01078e_float_fmt_p(jule::Slice<jule::U8>& _16717_txt,jule::I64 _16730_i) {
	return _1ab010360_float_fmt_e(_16717_txt,_16730_i);
}



inline jule::Str _1ab010b79_float_fmt_dotnp(jule::Slice<jule::U8>& _17121_txt,jule::I64 _17138_i) {
	if (_17121_txt[_17138_i] != '.') {
		return jule::Str();
	}
	(_17138_i)++;
	_julec_label_loop:;
	for (; _17138_i < static_cast<jule::I64>(static_cast<jule::I64>(_17121_txt.len())); (_17138_i)++) {
		{
			jule::U8 _17913_b = _17121_txt[_17138_i];
			{
				
				if (_17913_b == '_' || _1ab009788_is_decimal(_17913_b)) {
					_case_begin_1ae427774:;
					{
						goto _iter_next_1ae4268c7;
					}
				}
				else if (_1ab0127b3_is_float_fmt_p(_17913_b,_17138_i)) {
					_case_begin_1ae4277da:;
					{
						return _1ab01078e_float_fmt_p(_17121_txt,_17138_i);
					}
				}
				else {
					_case_begin_1ae4276ca:;
					{
						goto _iter_end_1ae4268c7;
					}
				}
				_match_end_1ae427675:;
			}
		}
	_iter_next_1ae4268c7:;
	}
	_iter_end_1ae4268c7:;
	return jule::Str();
}



inline jule::Str _1ab011064_float_fmt_dotfp(jule::Slice<jule::U8>& _19421_txt,jule::I64 _19438_i) {
	_19438_i+=2LL;
	return _1ab010360_float_fmt_e(_19421_txt,_19438_i);
}



inline jule::Str _1ab01144e_float_fmt_dotp(jule::Slice<jule::U8>& _19920_txt,jule::I64 _19937_i) {
	(_19937_i)++;
	return _1ab010360_float_fmt_e(_19920_txt,_19937_i);
}



inline jule::Str _1ab0118c2_float_num(jule::Slice<jule::U8>& _20415_txt,jule::I64 _20432_i) {
	jule::Str _20442_lit = jule::Str();
	(_20432_i)++;
	if (_20432_i >= static_cast<jule::I64>(static_cast<jule::I64>(_20415_txt.len()))) {
		_20442_lit = static_cast<jule::Str>(_20415_txt);
		return _20442_lit;
	}
	if (_20415_txt[_20432_i] == '_') {
		(_20432_i)--;
		_20442_lit = static_cast<jule::Str>(_20415_txt.slice(0LL,_20432_i));
		return _20442_lit;
	}
	for (; _20432_i < static_cast<jule::I64>(static_cast<jule::I64>(_20415_txt.len())); (_20432_i)++) {
		{
			jule::U8 _21413_b = _20415_txt[_20432_i];
			if ((_20432_i > 1LL) && ((_21413_b == 'e') || (_21413_b == 'E'))) {
				_20442_lit = _1ab010360_float_fmt_e(_20415_txt,_20432_i);
				return _20442_lit;
			}
			if ((_21413_b != '_') && (!(_1ab009788_is_decimal(_21413_b)))) {
				goto _iter_end_1ae42bb52;
			}
		}
	_iter_next_1ae42bb52:;
	}
	_iter_end_1ae42bb52:;
	if ((_20432_i == 1LL)) {
		return _20442_lit;
	}
	_20442_lit = static_cast<jule::Str>(_20415_txt.slice(0LL,_20432_i));
	return _20442_lit;
}



inline jule::Str _1ab011bd0_common_num(jule::Slice<jule::U8>& _22916_txt) {
	jule::Str _22931_lit = jule::Str();
	jule::I64 _23013_i = 0LL;
	_julec_label_loop:;
	for (; _23013_i < static_cast<jule::I64>(static_cast<jule::I64>(_22916_txt.len())); (_23013_i)++) {
		{
			jule::U8 _23313_b = _22916_txt[_23013_i];
			{
				
				if (_23313_b == '.') {
					_case_begin_1ae43098b:;
					{
						_22931_lit = _1ab0118c2_float_num(_22916_txt,_23013_i);
						return _22931_lit;
					}
				}
				else if (_23313_b == '_') {
					_case_begin_1ae430a13:;
					{
						goto _iter_next_1ae42edb9;
					}
				}
				else if (_1ab0123c8_is_float_fmt_e(_23313_b,_23013_i)) {
					_case_begin_1ae430a8a:;
					{
						_22931_lit = _1ab010360_float_fmt_e(_22916_txt,_23013_i);
						return _22931_lit;
					}
				}
				else if ((!(_1ab009788_is_decimal(_23313_b)))) {
					_case_begin_1ae430b12:;
					{
						goto _iter_end_1ae42edb9;
					}
				}
				_match_end_1ae43089d:;
			}
		}
	_iter_next_1ae42edb9:;
	}
	_iter_end_1ae42edb9:;
	if ((_23013_i == 0LL)) {
		return _22931_lit;
	}
	_22931_lit = static_cast<jule::Str>(_22916_txt.slice(0LL,_23013_i));
	return _22931_lit;
}



inline jule::Str _1ab011edd_binary_num(jule::Slice<jule::U8>& _25216_txt) {
	jule::Str _25231_lit = jule::Str();
	if ((!(_1ab00ee75_bytes_has_prefix(_25216_txt,jule::Str("0b", 2))))) {
		_25231_lit = jule::Str();
		return _25231_lit;
	}
	if ((_25216_txt.len() < 2LL)) {
		return _25231_lit;
	}
	
	jule::I64 _26113_i = 2LL;
	for (; _26113_i < static_cast<jule::I64>(static_cast<jule::I64>(_25216_txt.len())); (_26113_i)++) {
		{
			if ((_25216_txt[_26113_i] != '_') && (!(_1ab009a96_is_binary(_25216_txt[_26113_i])))) {
				goto _iter_end_1ae43497e;
			}
		}
	_iter_next_1ae43497e:;
	}
	_iter_end_1ae43497e:;
	if ((_26113_i == 2LL)) {
		return _25231_lit;
	}
	_25231_lit = static_cast<jule::Str>(_25216_txt.slice(0LL,_26113_i));
	return _25231_lit;
}



inline jule::Bool _1ab0123c8_is_float_fmt_e(jule::U8 _27419_b,jule::I64 _27428_i) {
	return (_27428_i > 0LL) && ((_27419_b == 'e') || (_27419_b == 'E'));
}



inline jule::Bool _1ab0127b3_is_float_fmt_p(jule::U8 _27819_b,jule::I64 _27828_i) {
	return (_27828_i > 0LL) && ((_27819_b == 'p') || (_27819_b == 'P'));
}



inline jule::Bool _1ab012b9d_is_float_fmt_dotnp(jule::Slice<jule::U8>& _28224_txt,jule::I64 _28241_i) {
	if (_28224_txt[_28241_i] != '.') {
		return false;
	}
	(_28241_i)++;
	_julec_label_loop:;
	for (; _28241_i < static_cast<jule::I64>(static_cast<jule::I64>(_28224_txt.len())); (_28241_i)++) {
		{
			jule::U8 _28913_b = _28224_txt[_28241_i];
			{
				
				if (_28913_b == '_' || _1ab009788_is_decimal(_28913_b)) {
					_case_begin_1ae439b2c:;
					{
						goto _iter_next_1ae438da1;
					}
				}
				else if (_1ab0127b3_is_float_fmt_p(_28913_b,_28241_i)) {
					_case_begin_1ae439b93:;
					{
						return true;
					}
				}
				else {
					_case_begin_1ae439a83:;
					{
						goto _iter_end_1ae438da1;
					}
				}
				_match_end_1ae439a2d:;
			}
		}
	_iter_next_1ae438da1:;
	}
	_iter_end_1ae438da1:;
	return false;
}



inline jule::Bool _1ab013088_is_float_fmt_dotp(jule::Slice<jule::U8>& _30323_txt,jule::I64 _30336_i) {
	{
		
		if ((_30323_txt.len() < 3LL)) {
			_case_begin_1ae43bca5:;
			{
				goto _case_begin_1ae43bd93;
			}
		}
		else if (_30323_txt[_30336_i] != '.') {
			_case_begin_1ae43bd93:;
			{
				goto _case_begin_1ae43be09;
			}
		}
		else if ((_30323_txt[(_30336_i + 1LL)] != 'p') && (_30323_txt[(_30336_i + 1LL)] != 'P')) {
			_case_begin_1ae43be09:;
			{
				return false;
			}
		}
		else {
			_case_begin_1ae43b656:;
			{
				return true;
			}
		}
		_match_end_1ae43b5ac:;
	}
}



inline jule::Bool _1ab013473_is_float_fmt_dotfp(jule::Slice<jule::U8>& _31624_txt,jule::I64 _31637_i) {
	{
		
		if ((_31624_txt.len() < 4LL)) {
			_case_begin_1ae43e329:;
			{
				goto _case_begin_1ae43e406;
			}
		}
		else if (_31624_txt[_31637_i] != '.') {
			_case_begin_1ae43e406:;
			{
				goto _case_begin_1ae43e46c;
			}
		}
		else if ((_31624_txt[(_31637_i + 1LL)] != 'f') && (_31624_txt[(_31637_i + 1LL)] != 'F')) {
			_case_begin_1ae43e46c:;
			{
				goto _case_begin_1ae43e12b;
			}
		}
		else if ((_31624_txt[(_31637_i + 2LL)] != 'p') && (_31624_txt[(_31637_i + 1LL)] != 'P')) {
			_case_begin_1ae43e12b:;
			{
				return false;
			}
		}
		else {
			_case_begin_1ae43d955:;
			{
				return true;
			}
		}
		_match_end_1ae43d8ab:;
	}
}



inline jule::Str _1ab0138a2_octal_num(jule::Slice<jule::U8>& _33115_txt) {
	jule::Str _33130_lit = jule::Str();
	if (_33115_txt[0LL] != '0') {
		_33130_lit = jule::Str();
		return _33130_lit;
	}
	if ((_33115_txt.len() < 2LL)) {
		return _33130_lit;
	}
	jule::I64 _33913_octal_start = 1LL;
	jule::Bool _34113_o = false;
	if (_33115_txt[1LL] == 'o') {
		if ((_33115_txt.len() < 3LL)) {
			return _33130_lit;
		}
		(_33913_octal_start)++;
		_34113_o=true;
	}
	jule::I64 _35013_i = _33913_octal_start;
	for (; _35013_i < static_cast<jule::I64>(static_cast<jule::I64>(_33115_txt.len())); (_35013_i)++) {
		{
			jule::U8 _35213_b = _33115_txt[_35013_i];
			if (_35213_b == '.') {
				if (_34113_o) {
					_33130_lit = jule::Str();
					return _33130_lit;
				}
				_33130_lit = _1ab0118c2_float_num(_33115_txt,_35013_i);
				return _33130_lit;
			}
			if (_1ab0123c8_is_float_fmt_e(_35213_b,_35013_i)) {
				_33130_lit = _1ab010360_float_fmt_e(_33115_txt,_35013_i);
				return _33130_lit;
			}
			if ((_35213_b != '_') && (!(_1ab009da4_is_octal(_35213_b)))) {
				goto _iter_end_1ae443b14;
			}
		}
	_iter_next_1ae443b14:;
	}
	_iter_end_1ae443b14:;
	if (_35013_i == _33913_octal_start) {
		return _33130_lit;
	}
	_33130_lit = static_cast<jule::Str>(_33115_txt.slice(0LL,_35013_i));
	return _33130_lit;
}



inline jule::Str _1ab013bb0_hex_num(jule::Slice<jule::U8>& _37313_txt) {
	jule::Str _37328_lit = jule::Str();
	if ((_37313_txt.len() < 3LL)) {
		return _37328_lit;
	}
	if ((_37313_txt[0LL] != '0') || ((_37313_txt[1LL] != 'x') && (_37313_txt[1LL] != 'X'))) {
		return _37328_lit;
	}
	
	jule::I64 _38213_i = 2LL;
	_julec_label_loop:;
	for (; _38213_i < static_cast<jule::I64>(static_cast<jule::I64>(_37313_txt.len())); (_38213_i)++) {
		{
			jule::U8 _38513_b = _37313_txt[_38213_i];
			{
				
				if (_1ab013088_is_float_fmt_dotp(_37313_txt,_38213_i)) {
					_case_begin_1ae44a588:;
					{
						_37328_lit = _1ab01144e_float_fmt_dotp(_37313_txt,_38213_i);
						return _37328_lit;
					}
				}
				else if (_1ab013473_is_float_fmt_dotfp(_37313_txt,_38213_i)) {
					_case_begin_1ae44a610:;
					{
						_37328_lit = _1ab011064_float_fmt_dotfp(_37313_txt,_38213_i);
						return _37328_lit;
					}
				}
				else if (_1ab0127b3_is_float_fmt_p(_38513_b,_38213_i)) {
					_case_begin_1ae44a687:;
					{
						_37328_lit = _1ab01078e_float_fmt_p(_37313_txt,_38213_i);
						return _37328_lit;
					}
				}
				else if (_1ab012b9d_is_float_fmt_dotnp(_37313_txt,_38213_i)) {
					_case_begin_1ae44a70e:;
					{
						_37328_lit = _1ab010b79_float_fmt_dotnp(_37313_txt,_38213_i);
						return _37328_lit;
					}
				}
				else if ((_38513_b != '_') && (!(_1ab00a1b2_is_hex(_38513_b)))) {
					_case_begin_1ae44a786:;
					{
						goto _iter_end_1ae4499e9;
					}
				}
				_match_end_1ae44a489:;
			}
		}
	_iter_next_1ae4499e9:;
	}
	_iter_end_1ae4499e9:;
	if ((_38213_i == 2LL)) {
		return _37328_lit;
	}
	_37328_lit = static_cast<jule::Str>(_37313_txt.slice(0LL,_38213_i));
	return _37328_lit;
}



inline jule::Str _1ab01409a_hex_escape(jule::Slice<jule::U8>& _40616_txt,jule::I64 _40629_n) {
	jule::Str _40639_seq = jule::Str();
	if (_40616_txt.len() < _40629_n) {
		return _40639_seq;
	}
	
	jule::I64 _41213_i = 2LL;
	for (; _41213_i < _40629_n; (_41213_i)++) {
		{
			if ((!(_1ab00a1b2_is_hex(_40616_txt[_41213_i])))) {
				return _40639_seq;
			}
		}
	_iter_next_1ae44d723:;
	}
	_iter_end_1ae44d723:;
	_40639_seq=static_cast<jule::Str>(_40616_txt.slice(0LL,_40629_n));
	return _40639_seq;
}



inline jule::Str _1ab0143ec_big_unicode_point_escape(jule::Slice<jule::U8>& _42430_txt) {
	return _1ab01409a_hex_escape(_42430_txt,10LL);
}



inline jule::Str _1ab01473d_little_unicode_point_escape(jule::Slice<jule::U8>& _42933_txt) {
	return _1ab01409a_hex_escape(_42933_txt,6LL);
}



inline jule::Str _1ab014a3a_hex_byte_escape(jule::Slice<jule::U8>& _43421_txt) {
	return _1ab01409a_hex_escape(_43421_txt,4LL);
}



inline jule::Str _1ab014d48_byte_escape(jule::Slice<jule::U8>& _43917_txt) {
	jule::Str _43932_seq = jule::Str();
	if ((_43917_txt.len() < 4LL)) {
		return _43932_seq;
	}
	if (((!(_1ab009da4_is_octal(_43917_txt[1LL]))) || (!(_1ab009da4_is_octal(_43917_txt[2LL])))) || (!(_1ab009da4_is_octal(_43917_txt[3LL])))) {
		return _43932_seq;
	}
	_43932_seq = static_cast<jule::Str>(_43917_txt.slice(0LL,4LL));
	return _43932_seq;
}



inline jule::Slice<_1a92a31c6_Log> _1ab01a865_lex(jule::Ptr<_1ab00b67a_File> _83216_f,jule::I64 _83226_mode) {
	if ((_83216_f == nullptr)) {
		return nullptr;
	}
	_1ab0156d9_Lex _83713_lex = _1ab0156d9_Lex(_83226_mode,jule::Slice<_1ab005531_Token>(),_83216_f,0LL,jule::I64(),-1LL,jule::Slice<_1a92a31c6_Log>());
	_1ab018b0a_new_line(&_83713_lex);
	_1ab016498_lex(&_83713_lex);
	if ((_83713_lex._field_errors.len() > 0LL)) {
		return _83713_lex._field_errors;
	}
	_83216_f.get()._field_tokens=_83713_lex._field_tokens;
	return nullptr;
}



inline jule::Bool _1b4b05138_find_module_file(jule::Slice<jule::Ptr<_1e7acc7c5_DirEntry>>& _1226_dirents) {
	{
		auto &expr = _1226_dirents;
		auto it = expr.begin();
		_iter_begin_1ae49b254:;
		if (it != expr.end()) {
			jule::Ptr<_1e7acc7c5_DirEntry> &_1ae49b298_d = *it;
			{
				if ((!(_1e7ad206b_is_dir(_1ae49b298_d.get()._field_stat.ptr()))) && (_1ae49b298_d.get()._field_name == jule::Str("jule.mod", 8))) {
					return true;
				}
			}
			_iter_next_1ae49b254:;
			++it;
			goto _iter_begin_1ae49b254;
		}
		_iter_end_1ae49b254:;
	}
	return false;
}



inline jule::Str _1b4b06e4d_find_module_file_deep(jule::Str _2434_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1e7acc7c5_DirEntry>> _2617_dirents = ({
				auto except = static__1a90c955d_read(_2434_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1ae49b72c;
					goto _iter_end_1ae49b72c;
				} jule::Slice<jule::Ptr<_1e7acc7c5_DirEntry>>();});
			});
			jule::Bool _3013_exist = _1b4b05138_find_module_file(_2617_dirents);
			if (_3013_exist) {
				return _2434_path;
			}
			jule::I64 _3513_n = _2434_path.len();
			_2434_path=_1a90c6b10_dir(_2434_path);
			if (_2434_path.len() == _3513_n) {
				goto _iter_end_1ae49b72c;
			}
		}
	_iter_next_1ae49b72c:;
	}
	_iter_end_1ae49b72c:;
	return jule::Str();
}



inline jule::Slice<_1a92a31c6_Log> _1b4b0826d_check_module_file(jule::Str _4626_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__1e7ad0465_read(_1a90c5d40_join(jule::Slice<jule::Str>({_4626_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1a92a31c6_Log>({_1a92a31c6_Log(static_cast<jule::I64>(0LL),jule::I64(),jule::I64(),jule::Str(),jule::Str("module file could not checked because of a problem", 50),jule::Str(),jule::Str())});
			return jule::Slice<_1a92a31c6_Log>({_1a92a31c6_Log(static_cast<jule::I64>(0LL),jule::I64(),jule::I64(),jule::Str(),jule::Str("module file could not checked because of a problem", 50),jule::Str(),jule::Str())});
		} jule::Slice<jule::U8>();});
	});
	jule::Str _549_s = _1a90c3557_trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));
	if ((_549_s.len() != 0LL)) {
		return jule::Slice<_1a92a31c6_Log>({_1a92a31c6_Log(static_cast<jule::I64>(0LL),jule::I64(),jule::I64(),jule::Str(),jule::Str("module file has syntax error(s)", 31),jule::Str(),jule::Str())});
	}
	return nullptr;
}



inline jule::Ptr<_1ab5554ba_FileInfo> _1ab55590a_parse_file(jule::Ptr<_1ab00b67a_File> _2323_f) {
	if ((_2323_f == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1ab5554ba_FileInfo> _2813_finf = jule::new_ptr<_1ab5554ba_FileInfo>(_1ab5554ba_FileInfo());
	std::tie(_2813_finf.get()._field_ast,_2813_finf.get()._field_errors) = _1ab555cd4_parse_fileset(_2323_f);
	if ((_2813_finf.get()._field_errors.len() > 0LL)) {
		_2813_finf.get()._field_ast=nullptr;
	}
	return _2813_finf;
}



inline std::tuple<jule::Ptr<_1aae013a5_Ast>,jule::Slice<_1a92a31c6_Log>> _1ab555cd4_parse_fileset(jule::Ptr<_1ab00b67a_File> _6022_f) {
	jule::Ptr<_1ab5804c3_Parser> _6113_p = jule::new_ptr<_1ab5804c3_Parser>(_1ab5804c3_Parser());
	_1ab592b56_parse(_6113_p, _6022_f);
	return std::make_tuple(_6113_p.get()._field_ast,_6113_p.get()._field_errors);
}



inline jule::Ptr<_1ab01d615_ScopeTree> _1ab556972_new_scope(void) {
	return jule::new_ptr<_1ab01d615_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1ab556bd6_is_st(_1ab005531_Token _4710_current,_1ab005531_Token _4726_prev) {
	jule::Bool _4741_ok = jule::Bool();
	jule::Bool _4751_terminated = jule::Bool();
	_4741_ok=(_4710_current._field_id == static_cast<jule::U64>(5LLU)) || (_4726_prev._field_row < _4710_current._field_row);
	_4751_terminated=_4710_current._field_id == static_cast<jule::U64>(5LLU);
	return std::make_tuple(_4741_ok,_4751_terminated);
}



inline jule::Bool _1ab5570e3_prev_is_incomplete_expr(jule::Slice<_1ab005531_Token>& _5329_tokens,jule::I64& _5347_i) {
	if ((_5347_i > 1LL) && (_5329_tokens[(_5347_i - 2LL)]._field_id == static_cast<jule::U64>(23LLU))) {
		return false;
	}
	{
		_1ab005531_Token* _5913_prev = (&(_5329_tokens[(_5347_i - 1LL)]));
		return (_5913_prev->_field_id == static_cast<jule::U64>(20LLU)) || (((_5913_prev->_field_id == static_cast<jule::U64>(7LLU)) && _1ab00619c_is_bin_op(_5913_prev->_field_kind)) && (_5913_prev->_field_row < _5329_tokens[_5347_i]._field_row));
	}
}



inline std::tuple<jule::I64,jule::Bool> _1ab557511_next_st_pos(jule::Slice<_1ab005531_Token>& _6817_tokens,jule::I64 _6834_start) {
	jule::I64 _6913_brace_n = 0LL;
	jule::I64 _7013_i = _6834_start;
	for (; _7013_i < static_cast<jule::I64>(static_cast<jule::I64>(_6817_tokens.len())); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;
			jule::Bool _7317_terminated = false;
			_1ab005531_Token _7413_tok = _6817_tokens[_7013_i];
			{
				auto &_match_expr{ _7413_tok._field_id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1ae8ba71c:;
					{
						{
							auto &_match_expr{ _7413_tok._field_kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1ae8bcbd6:;
								{
									if ((_6913_brace_n == 0LL) && (_7013_i > _6834_start)) {
										if ((!(_1ab5570e3_prev_is_incomplete_expr(_6817_tokens,_7013_i)))) {
											std::tie(_7217_ok,_7317_terminated) = _1ab556bd6_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
											if (_7217_ok) {
												goto _julec_label_return;
											}
										}
									}
									(_6913_brace_n)++;
								}
							}
							else {
								_case_begin_1ae8bb058:;
								{
									(_6913_brace_n)--;
									if ((_6913_brace_n == 0LL) && ((_7013_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_6817_tokens.len())))) {
										std::tie(_7217_ok,_7317_terminated) = _1ab556bd6_is_st(_6817_tokens[(_7013_i + 1LL)],_7413_tok);
										if (_7217_ok) {
											(_7013_i)++;
											goto _julec_label_return;
										}
									}
								}
							}
							_match_end_1ae8bb29a:;
						}
						goto _iter_next_1ae8b9474;
					}
				}
				_match_end_1ae8ba93c:;
			}
			if ((_6913_brace_n != 0LL)) {
				goto _iter_next_1ae8b9474;
			}
			if (_7013_i > _6834_start) {
				if (_1ab5570e3_prev_is_incomplete_expr(_6817_tokens,_7013_i)) {
					goto _iter_next_1ae8b9474;
				}
				std::tie(_7217_ok,_7317_terminated) = _1ab556bd6_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
			} else {
				std::tie(_7217_ok,_7317_terminated) = _1ab556bd6_is_st(_7413_tok,_7413_tok);
			}
			if ((!(_7217_ok))) {
				goto _iter_next_1ae8b9474;
			}
			_julec_label_return:;
			if (_7317_terminated) {
				(_7013_i)++;
			}
			return std::make_tuple(_7013_i,_7317_terminated);
		}
	_iter_next_1ae8b9474:;
	}
	_iter_end_1ae8b9474:;
	return std::make_tuple(_7013_i,false);
}



inline std::tuple<jule::Slice<_1ab005531_Token>,jule::Bool> _1ab5578eb_skip_st(jule::I64& _13017_i,jule::Slice<_1ab005531_Token> _13029_tokens) {
	jule::I64 _1319_start = _13017_i;
	jule::Bool _13213_terminated = false;
	std::tie(_13017_i,_13213_terminated) = _1ab557511_next_st_pos(_13029_tokens,_1319_start);
	jule::Slice<_1ab005531_Token> _13413_st_tokens = _13029_tokens.slice(_1319_start,_13017_i);
	if (_13213_terminated) {
		if ((_13413_st_tokens.len() == 1LL)) {
			std::tie(_13413_st_tokens,_13213_terminated) = _1ab5578eb_skip_st(_13017_i,_13029_tokens);
			return std::make_tuple(_13413_st_tokens,_13213_terminated);
		}
		_13413_st_tokens=_13413_st_tokens.slice(0LL,(_13413_st_tokens.len() - 1LL));
	}
	return std::make_tuple(_13413_st_tokens,_13213_terminated);
}



inline jule::Slice<jule::Ptr<_1ab557c92_Stmt>> _1ab55819e_split_stmts(jule::Slice<_1ab005531_Token>& _15221_tokens) {
	jule::Slice<jule::Ptr<_1ab557c92_Stmt>> _15313_stmts = nullptr;
	jule::I64 _15413_pos = 0LL;
	while (_15413_pos < static_cast<jule::I64>(static_cast<jule::I64>(_15221_tokens.len()))) {
		{
			jule::Slice<_1ab005531_Token> _15618_stmt;
			jule::Bool _15624_terminated;
			std::tie(_15618_stmt,_15624_terminated) = _1ab5578eb_skip_st(_15413_pos,_15221_tokens);
			_15313_stmts = jule::alloc_for_append(_15313_stmts,1);_15313_stmts.__push(jule::new_ptr<_1ab557c92_Stmt>(_1ab557c92_Stmt(_15618_stmt,_15624_terminated)));
		}
	_iter_next_1ae8c4c21:;
	}
	_iter_end_1ae8c4c21:;
	return _15313_stmts;
}



inline jule::Ptr<_1ab56c4c1_CallData> _1ab56c89a_get_call_data(jule::Slice<_1ab005531_Token>& _4423_tokens) {
	jule::Ptr<_1ab56c4c1_CallData> _4513_data = jule::new_ptr<_1ab56c4c1_CallData>(_1ab56c4c1_CallData());
	std::tie(_4513_data.get()._field_expr_tokens,_4513_data.get()._field_args_tokens) = _1ab57d944_range_last(_4423_tokens);
	if ((_4513_data.get()._field_expr_tokens.len() == 0LL)) {
		return _4513_data;
	}
	_1ab005531_Token _529_token = _4513_data.get()._field_expr_tokens[(_4513_data.get()._field_expr_tokens.len() - 1LL)];
	if ((_529_token._field_id == static_cast<jule::U64>(3LLU)) && (_529_token._field_kind == jule::Str("]", 1))) {
		std::tie(_4513_data.get()._field_expr_tokens,_4513_data.get()._field_generics_tokens) = _1ab57d944_range_last(_4513_data.get()._field_expr_tokens);
	}
	return _4513_data;
}



inline jule::Slice<_1ab005531_Token> _1ab56cbec_get_block_expr(jule::Slice<_1ab005531_Token>& _6024_tokens) {
	jule::I64 _6113_brace_n = 0LL;
	jule::I64 _6213_skip_to_next_brace_close = 0LL;
	{
		auto &expr = _6024_tokens;
		auto it = expr.begin();
		_iter_begin_1ae8cbaa2:;
		if (it != expr.end()) {
			jule::I64 _1ae8cbb4b_i = it - expr.begin();
			_1ab005531_Token _1ae8cbdc1_tok = *it;
			{
				{
					auto &_match_expr{ _1ae8cbdc1_tok._field_id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1ae8cc377:;
						{
							(_6213_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1ae8cc6eb:;
						{
							{
								auto &_match_expr{ _1ae8cbdc1_tok._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1ae8cdb3c:;
									{
										if ((_6113_brace_n > 0LL) || (_6213_skip_to_next_brace_close > 0LL)) {
											if ((_6213_skip_to_next_brace_close > 0LL)) {
												(_6213_skip_to_next_brace_close)--;
											}
											(_6113_brace_n)++;
											goto _match_end_1ae8cd796;
										}
										return _6024_tokens.slice(0LL,_1ae8cbb4b_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1ae8cdda1:;
									{
										(_6113_brace_n)++;
									}
								}
								else {
									_case_begin_1ae8cd5cb:;
									{
										(_6113_brace_n)--;
									}
								}
								_match_end_1ae8cd796:;
							}
						}
					}
					_match_end_1ae8cc696:;
				}
			}
			_iter_next_1ae8cbaa2:;
			++it;
			_1ae8cbb4b_i++;
			goto _iter_begin_1ae8cbaa2;
		}
		_iter_end_1ae8cbaa2:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_1ab005531_Token>,jule::Slice<_1ab005531_Token>> _1ab56d00a_split_colon(jule::Slice<_1ab005531_Token>& _9421_tokens) {
	jule::I64 _9513_range_n = 0LL;
	{
		auto &expr = _9421_tokens;
		auto it = expr.begin();
		_iter_begin_1ae8d0028:;
		if (it != expr.end()) {
			jule::I64 _1ae8d00c2_i = it - expr.begin();
			_1ab005531_Token _1ae8cc135_token = *it;
			{
				{
					auto &_match_expr{ _1ae8cc135_token._field_id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1ae8d0941:;
						{
							{
								auto &_match_expr{ _1ae8cc135_token._field_kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1ae8d19a8:;
									{
										(_9513_range_n)++;
										goto _iter_next_1ae8d0028;
									}
								}
								else {
									_case_begin_1ae8d139d:;
									{
										(_9513_range_n)--;
									}
								}
								_match_end_1ae8d15e0:;
							}
						}
					}
					else if (_match_expr == static_cast<jule::U64>(11LLU)) {
						_case_begin_1ae8d0c60:;
						{
							if ((_9513_range_n < 1LL)) {
								jule::Slice<_1ab005531_Token> _11225_l = _9421_tokens.slice(0LL,_1ae8d00c2_i);
								jule::Slice<_1ab005531_Token> _11325_r = _9421_tokens.slice((_1ae8d00c2_i + 1LL));
								return std::make_tuple(_11225_l,_11325_r);
							}
						}
					}
					_match_end_1ae8d0c0a:;
				}
			}
			_iter_next_1ae8d0028:;
			++it;
			_1ae8d00c2_i++;
			goto _iter_begin_1ae8d0028;
		}
		_iter_end_1ae8d0028:;
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _1ab56d35c_find_lowest_prec_op(jule::Slice<_1ab005531_Token>& _12325_tokens) {
	jule::U8 _12813_prec = 255LLU;
	jule::I64 _12913_prec_pos = -1LL;
	jule::I64 _13113_brace_n = 0LL;
	jule::Bool _13213_skip_to_next_brace_open = false;
	{
		auto &expr = _12325_tokens;
		auto it = expr.begin();
		_iter_begin_1ae8d41c5:;
		if (it != expr.end()) {
			jule::I64 _1ae8d426e_i = it - expr.begin();
			_1ab005531_Token &_1ae8d44e4_token = *it;
			{
				{
					
					if (_1ae8d44e4_token._field_id == static_cast<jule::U64>(3LLU)) {
						_case_begin_1ae8d4bed:;
						{
							{
								auto &_match_expr{ _1ae8d44e4_token._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1ae8d601d:;
									{
										_13213_skip_to_next_brace_open=false;
										goto _case_begin_1ae8d623d;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1ae8d623d:;
									{
										(_13113_brace_n)++;
									}
								}
								else {
									_case_begin_1ae8d59ac:;
									{
										(_13113_brace_n)--;
									}
								}
								_match_end_1ae8d5b88:;
							}
							goto _iter_next_1ae8d41c5;
						}
					}
					else if (_13213_skip_to_next_brace_open) {
						_case_begin_1ae8d4c75:;
						{
							goto _iter_next_1ae8d41c5;
						}
					}
					else if (_1ae8d44e4_token._field_id == static_cast<jule::U64>(16LLU)) {
						_case_begin_1ae8d4cec:;
						{
							_13213_skip_to_next_brace_open=true;
							goto _iter_next_1ae8d41c5;
						}
					}
					else if ((_1ae8d426e_i == 0LL)) {
						_case_begin_1ae8d4d74:;
						{
							goto _iter_next_1ae8d41c5;
						}
					}
					else if (_1ae8d44e4_token._field_id != static_cast<jule::U64>(7LLU)) {
						_case_begin_1ae8d4deb:;
						{
							goto _iter_next_1ae8d41c5;
						}
					}
					else if ((_13113_brace_n > 0LL)) {
						_case_begin_1ae8d4e73:;
						{
							goto _iter_next_1ae8d41c5;
						}
					}
					_match_end_1ae8d4a99:;
				}
				_1ab005531_Token _16013_left = _12325_tokens[(_1ae8d426e_i - 1LL)];
				if ((_16013_left._field_id == static_cast<jule::U64>(7LLU)) || (_16013_left._field_id == static_cast<jule::U64>(11LLU))) {
					goto _iter_next_1ae8d41c5;
				}
				if (((_1ae8d426e_i > 1LL) && (_16013_left._field_id == static_cast<jule::U64>(3LLU))) && (_16013_left._field_kind == jule::Str("]", 1))) {
					_1ab005531_Token _16817_lleft = _12325_tokens[(_1ae8d426e_i - 2LL)];
					if ((_16817_lleft._field_id == static_cast<jule::U64>(3LLU)) && (_16817_lleft._field_kind == jule::Str("[", 1))) {
						if ((_1ae8d44e4_token._field_kind == jule::Str("&", 1)) || (_1ae8d44e4_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_1ae8d41c5;
						}
					}
				}
				jule::U8 _17713_p = _1ab005982_prec(&_1ae8d44e4_token);
				if ((_17713_p != 0LLU) && (_17713_p <= _12813_prec)) {
					_12813_prec=_17713_p;
					_12913_prec_pos=_1ae8d426e_i;
				}
			}
			_iter_next_1ae8d41c5:;
			++it;
			_1ae8d426e_i++;
			goto _iter_begin_1ae8d41c5;
		}
		_iter_end_1ae8d41c5:;
	}
	return _12913_prec_pos;
}



inline jule::Ptr<_1aadb628d_IdentExpr> _1ab56d66a_build_ident_expr(_1ab005531_Token& _18726_token) {
	return jule::new_ptr<_1aadb628d_IdentExpr>(_1aadb628d_IdentExpr(_18726_token,_18726_token._field_kind,false));
}



inline std::tuple<jule::Slice<_1ab005531_Token>,jule::I64> _1ab56d978_get_range_expr_tokens(jule::Slice<_1ab005531_Token>& _19531_tokens) {
	jule::I64 _19613_range_n = 0LL;
	jule::I64 _19713_i = (_19531_tokens.len() - 1LL);
	for (; (_19713_i >= 0LL); (_19713_i)--) {
		{
			_1ab005531_Token _19913_tok = _19531_tokens[_19713_i];
			if (_19913_tok._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _19913_tok._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1ae8deea0:;
						{
							(_19613_range_n)++;
						}
					}
					else {
						_case_begin_1ae8de840:;
						{
							(_19613_range_n)--;
						}
					}
					_match_end_1ae8deb70:;
				}
			}
			if ((_19613_range_n == 0LL)) {
				return std::make_tuple(_19531_tokens.slice(0LL,_19713_i),_19613_range_n);
			}
		}
	_iter_next_1ae8d4912:;
	}
	_iter_end_1ae8d4912:;
	return std::make_tuple(nullptr,_19613_range_n);
}



inline jule::Bool _1ab57b799_check_assign_tokens(jule::Slice<_1ab005531_Token>& _1625_tokens) {
	if ((_1625_tokens.len() == 0LL) || (!(_1ab00a4c0_is_assign(_1625_tokens[0LL]._field_id)))) {
		return false;
	}
	jule::I64 _2013_brace_n = 0LL;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_1ae8e237b:;
		if (it != expr.end()) {
			_1ab005531_Token &_1ae8e2425_t = *it;
			{
				if (_1ae8e2425_t._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1ae8e2425_t._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ae8e3437:;
							{
								(_2013_brace_n)++;
							}
						}
						else {
							_case_begin_1ae8e2cc7:;
							{
								(_2013_brace_n)--;
							}
						}
						_match_end_1ae8e3107:;
					}
				}
				if ((_2013_brace_n < 0LL)) {
					return false;
				} else if ((_2013_brace_n > 0LL)) {
					goto _iter_next_1ae8e237b;
				} else if ((_1ae8e2425_t._field_id == static_cast<jule::U64>(7LLU)) && _1ab00aadb_is_assign_op(_1ae8e2425_t._field_kind)) {
					return true;
				}
			}
			_iter_next_1ae8e237b:;
			++it;
			goto _iter_begin_1ae8e237b;
		}
		_iter_end_1ae8e237b:;
	}
	return false;
}



inline _1a92a31c6_Log _1ab57d081_make_err(jule::I64 _4913_row,jule::I64 _4923_col,jule::Ptr<_1ab00b67a_File>& _4934_f,jule::Str _4944_fmt,jule::Slice<jule::Any> _4957_args) {
	return _1a92a31c6_Log(static_cast<jule::I64>(1LL),_4913_row,_4923_col,_4934_f.get()._field_path,_1a92a36b0_logf(_4944_fmt,_4957_args),jule::Str(),jule::Str());
}



inline jule::Slice<_1ab005531_Token> _1ab57d636_range(jule::I64& _6815_i,jule::Str _6823_open,jule::Str _6840_close,jule::Slice<_1ab005531_Token>& _6863_tokens) {
	if (_6815_i >= static_cast<jule::I64>(static_cast<jule::I64>(_6863_tokens.len()))) {
		return nullptr;
	}
	_1ab005531_Token _739_tok = _6863_tokens[_6815_i];
	if ((_739_tok._field_id != static_cast<jule::U64>(3LLU)) || (_739_tok._field_kind != _6823_open)) {
		return nullptr;
	}
	(_6815_i)++;
	jule::I64 _7913_range_n = 1LL;
	jule::I64 _809_start = _6815_i;
	for (; (_7913_range_n != 0LL) && (_6815_i < static_cast<jule::I64>(static_cast<jule::I64>(_6863_tokens.len()))); (_6815_i)++) {
		{
			_1ab005531_Token _8213_token = _6863_tokens[_6815_i];
			if (_8213_token._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _8213_token._field_kind };
					
					if (_match_expr == _6823_open) {
						_case_begin_1ae7d723d:;
						{
							(_7913_range_n)++;
						}
					}
					else if (_match_expr == _6840_close) {
						_case_begin_1ae7d75b2:;
						{
							(_7913_range_n)--;
						}
					}
					_match_end_1ae7d755c:;
				}
			}
		}
	_iter_next_1ae7d647e:;
	}
	_iter_end_1ae7d647e:;
	return _6863_tokens.slice(_809_start,(_6815_i - 1LL));
}



inline std::tuple<jule::Slice<_1ab005531_Token>,jule::Slice<_1ab005531_Token>> _1ab57d944_range_last(jule::Slice<_1ab005531_Token>& _10120_tokens) {
	jule::Slice<_1ab005531_Token> _10139_cutted = jule::Slice<_1ab005531_Token>();
	jule::Slice<_1ab005531_Token> _10156_cut = jule::Slice<_1ab005531_Token>();
	if ((_10120_tokens.len() == 0LL)) {
		_10139_cutted = _10120_tokens;
		_10156_cut = nullptr;
		return std::make_tuple(_10139_cutted,_10156_cut);
	} else if (_10120_tokens[(_10120_tokens.len() - 1LL)]._field_id != static_cast<jule::U64>(3LLU)) {
		_10139_cutted = _10120_tokens;
		_10156_cut = nullptr;
		return std::make_tuple(_10139_cutted,_10156_cut);
	}
	jule::I64 _10813_brace_n = 0LL;
	jule::I64 _10913_i = (_10120_tokens.len() - 1LL);
	for (; (_10913_i >= 0LL); (_10913_i)--) {
		{
			_1ab005531_Token _11113_token = _10120_tokens[_10913_i];
			if (_11113_token._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _11113_token._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1ae7dbe02:;
						{
							(_10813_brace_n)++;
							goto _iter_next_1ae7d85d5;
						}
					}
					else {
						_case_begin_1ae7db792:;
						{
							(_10813_brace_n)--;
						}
					}
					_match_end_1ae7dbac2:;
				}
			}
			if ((_10813_brace_n == 0LL)) {
				_10139_cutted = _10120_tokens.slice(0LL,_10913_i);
				_10156_cut = _10120_tokens.slice(_10913_i);
				return std::make_tuple(_10139_cutted,_10156_cut);
			}
		}
	_iter_next_1ae7d85d5:;
	}
	_iter_end_1ae7d85d5:;
	_10139_cutted = _10120_tokens;
	_10156_cut = nullptr;
	return std::make_tuple(_10139_cutted,_10156_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_1ab005531_Token>>,jule::Slice<_1a92a31c6_Log>> _1ab57de50_parts(jule::Slice<_1ab005531_Token>& _13915_tokens,jule::U64 _13932_id,jule::Bool _13945_expr_must) {
	if ((_13915_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_1ab005531_Token>> _14413_parts = nullptr;
	jule::Slice<_1a92a31c6_Log> _14513_errors = nullptr;
	jule::I64 _14713_range_n = 0LL;
	jule::I64 _14813_last = 0LL;
	{
		auto &expr = _13915_tokens;
		auto it = expr.begin();
		_iter_begin_1ae7dee9e:;
		if (it != expr.end()) {
			jule::I64 _1ae7e017a_i = it - expr.begin();
			_1ab005531_Token _1ae7e03bc_token = *it;
			{
				if (_1ae7e03bc_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1ae7e03bc_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ae7e138a:;
							{
								(_14713_range_n)++;
								goto _iter_next_1ae7dee9e;
							}
						}
						else {
							_case_begin_1ae7e0c2a:;
							{
								(_14713_range_n)--;
							}
						}
						_match_end_1ae7e105a:;
					}
				}
				if ((_14713_range_n > 0LL)) {
					goto _iter_next_1ae7dee9e;
				}
				if (_1ae7e03bc_token._field_id == _13932_id) {
					if (_13945_expr_must && ((_1ae7e017a_i - _14813_last) <= 0LL)) {
						_1a92a31c6_Log _16821_err = _1ab57d081_make_err(_1ae7e03bc_token._field_row,_1ae7e03bc_token._field_column,_1ae7e03bc_token._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
						_14513_errors = jule::alloc_for_append(_14513_errors,1);_14513_errors.__push(_16821_err);
					}
					_14413_parts = jule::alloc_for_append(_14413_parts,1);_14413_parts.__push(_13915_tokens.slice(_14813_last,_1ae7e017a_i));
					_14813_last=static_cast<jule::I64>((_1ae7e017a_i + 1LL));
				}
			}
			_iter_next_1ae7dee9e:;
			++it;
			_1ae7e017a_i++;
			goto _iter_begin_1ae7dee9e;
		}
		_iter_end_1ae7dee9e:;
	}
	if (_14813_last < static_cast<jule::I64>(static_cast<jule::I64>(_13915_tokens.len()))) {
		_14413_parts = jule::alloc_for_append(_14413_parts,1);_14413_parts.__push(_13915_tokens.slice(_14813_last));
	} else if ((!(_13945_expr_must))) {
		_14413_parts = jule::alloc_for_append(_14413_parts,1);_14413_parts.__push(jule::Slice<_1ab005531_Token>());
	}
	return std::make_tuple(_14413_parts,_14513_errors);
}



inline jule::Str _1ab57e2a2_get_close_kind_of_brace(jule::Str _18528_left) {
	{
		auto &_match_expr{ _18528_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1ae7e5768:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1ae7e57ce:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1ae7e58cd:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1ae7e006a:;
			{
				return jule::Str();
			}
		}
		_match_end_1ae7e458b:;
	}
}



inline _1a92a31c6_Log _1ab57e758_compiler_err(_1ab005531_Token& _19418_token,jule::Str& _19433_fmt,jule::Slice<jule::Any> _19446_args) {
	return _1a92a31c6_Log(static_cast<jule::I64>(1LL),_19418_token._field_row,_19418_token._field_column,_19418_token._field_file.get()._field_path,_1a92a36b0_logf(_19433_fmt,_19446_args),_1ab00cb54_get_row(_19418_token._field_file.ptr(), _19418_token._field_row),jule::Str());
}



inline void _1ab57eb87_push_suggestion(_1a92a31c6_Log* _20531_log,jule::Str _20542_fmt,jule::Slice<jule::Any> _20555_args) {
	_20531_log->_field_suggestion=_1a92a36b0_logf(_20542_fmt,_20555_args);
}



inline jule::Str _1ab58002d_tokstoa(jule::Slice<_1ab005531_Token>& _20913_tokens) {
	jule::Str _21013_s = jule::Str();
	{
		auto &expr = _20913_tokens;
		auto it = expr.begin();
		_iter_begin_1ae7e8dba:;
		if (it != expr.end()) {
			_1ab005531_Token &_1ae7e8e64_token = *it;
			{
				_21013_s+=_1ae7e8e64_token._field_kind;
			}
			_iter_next_1ae7e8dba:;
			++it;
			goto _iter_begin_1ae7e8dba;
		}
		_iter_end_1ae7e8dba:;
	}
	return _21013_s;
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab593d66_build_void_type(void) {
	return jule::new_ptr<_1aae075dc_TypeDecl>();
}



inline jule::Ptr<_1aae075dc_TypeDecl> _1ab5940b9_build_prim_type(_1ab005531_Token _2224_t) {
	return jule::new_ptr<_1aae075dc_TypeDecl>(_1aae075dc_TypeDecl(_2224_t,jule::Any(jule::Any(jule::new_ptr<_1aaec9b87_IdentTypeDecl>(_1aaec9b87_IdentTypeDecl(_2224_t,_2224_t._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1aae075dc_TypeDecl>>()))))));
}



inline std::tuple<jule::Slice<_1ab005531_Token>,jule::I64> _1ab5944a4_split_map_range(jule::Slice<_1ab005531_Token>& _3525_tokens,jule::I64& _3547_i) {
	jule::Slice<_1ab005531_Token> _3557_range_tokens = jule::Slice<_1ab005531_Token>();
	jule::I64 _3580_colon = jule::I64();
	_3580_colon=-1LL;
	jule::I64 _3713_range_n = 0LL;
	jule::I64 _389_start = _3547_i;
	for (; _3547_i < static_cast<jule::I64>(static_cast<jule::I64>(_3525_tokens.len())); (_3547_i)++) {
		{
			_1ab005531_Token _4013_token = _3525_tokens[_3547_i];
			if (_4013_token._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _4013_token._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1ae7ec693:;
						{
							(_3713_range_n)++;
							goto _iter_next_1ae7eacce;
						}
					}
					else {
						_case_begin_1ae7ec033:;
						{
							(_3713_range_n)--;
						}
					}
					_match_end_1ae7ec363:;
				}
			}
			if ((_3713_range_n == 0LL)) {
				if ((_389_start + 1LL) > _3547_i) {
					return std::make_tuple(_3557_range_tokens,_3580_colon);
				}
				_3557_range_tokens=_3525_tokens.slice((_389_start + 1LL),_3547_i);
				goto _iter_end_1ae7eacce;
			} else if ((_3713_range_n != 1LL)) {
				goto _iter_next_1ae7eacce;
			}
			if ((_3580_colon == -1LL) && (_4013_token._field_id == static_cast<jule::U64>(11LLU))) {
				_3580_colon=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_3547_i - _389_start)) - 1LL));
			}
		}
	_iter_next_1ae7eacce:;
	}
	_iter_end_1ae7eacce:;
	return std::make_tuple(_3557_range_tokens,_3580_colon);
}



inline jule::I64 _1ad2272ab_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::I64>(64LL - static_cast<jule::I64>(static_cast<jule::I64>(_1ad22eb43_len64(_6124_x))));
}



inline jule::I64 _1ad227d4a_trailing_zeros(jule::U64 _8323_x) {
	
	return static_cast<jule::I64>(_1ad228b1a_trailing_zeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8323_x))));
}



inline jule::I64 _1ad22880c_trailing_zeros32(jule::U32 _10525_x) {
	if ((_10525_x == 0LLU)) {
		return 32LL;
	}
	return static_cast<jule::I64>(static_cast<jule::I64>(_1ad2276da_DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10525_x & static_cast<jule::U32>(static_cast<jule::U32>((-(_10525_x))))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1ad228b1a_trailing_zeros64(jule::U64 _11425_x) {
	if ((_11425_x == 0LLU)) {
		return 64LL;
	}
	return static_cast<jule::I64>(static_cast<jule::I64>(_1ad227a81_DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11425_x & static_cast<jule::U64>(static_cast<jule::U64>((-(_11425_x))))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1ad22e835_len32(jule::U32 _35218_x) {
	jule::I64 _35228_n = jule::I64();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	}
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::I64>(_35228_n + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35218_x)]))));
	return _35228_n;
}



inline jule::I64 _1ad22eb43_len64(jule::U64 _36618_x) {
	jule::I64 _36628_n = jule::I64();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	}
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	}
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::I64>(_36628_n + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36618_x)]))));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1ad230a89_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41514_x + _41522_y)) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41514_x & _41522_y))) | static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41514_x | _41522_y))) & static_cast<jule::U64>(static_cast<jule::U64>((~(_41544_sum)))))))))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1ad232690_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + static_cast<jule::U64>(static_cast<jule::U64>((_5059_w0 >> 32LLU)));
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_5029_x1 * _5049_y1)) + _5089_w2)) + static_cast<jule::U64>(static_cast<jule::U64>((_50713_w1 >> 32LLU))));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1ad159056_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1ad159298_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1ad1595a6_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1ad159908_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1ad15bba2_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I64 _4739_exp = jule::I64();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_1aea77654:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_1ad17c244_is_inf(_4718_f,0LL) || _1ad175418_is_nan(_4718_f)) {
			_case_begin_1aea776cb:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_1aea77544:;
	}
	std::tie(_4718_f,_4739_exp) = _1ad17eb2b_normalize(_4718_f);
	jule::U64 _5613_x = _1ad1595a6_f64_bits(_4718_f);
	_4739_exp+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)))) - 1023LL))) + 1LL));
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1ad159908_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _1ad170de7_nan(void) {
	return static_cast<jule::F64>(_1ad159908_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1ad175418_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _1ad17aa6c_inf(jule::I64 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_1ad159908_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_1ad159908_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1ad17c244_is_inf(jule::F64 _7215_f,jule::I64 _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline std::tuple<jule::F64,jule::I64> _1ad17eb2b_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	
	if ((_1ad235a28_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	}
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1ad1a97c1_log(jule::F64 _11112_x) {
	
	
	
	
	
	
	
	
	
	{
		
		if (_1ad175418_is_nan(_11112_x) || _1ad17c244_is_inf(_11112_x,1LL)) {
			_case_begin_1aeacaab4:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_1aeacab3b:;
			{
				return static_cast<jule::F64>(_1ad170de7_nan());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_1aeacabb3:;
			{
				return static_cast<jule::F64>(_1ad17aa6c_inf(-1LL));
			}
		}
		_match_end_1aeacaa1a:;
	}
	jule::F64 _13314_f1;
	jule::I64 _13322_ki;
	std::tie(_13314_f1,_13322_ki) = _1ad15bba2_frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	}
	jule::F64 _1389_f = (_13314_f1 - 1LL);
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);
	jule::F64 _1429_s = jule::div(_1389_f,static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(2LL + _1389_f))));
	jule::F64 _1439_s2 = _1429_s * _1429_s;
	jule::F64 _1449_s4 = _1439_s2 * _1439_s2;
	jule::F64 _1459_t1 = _1439_s2 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.6666666666666735 + static_cast<jule::F64>(static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.2857142874366239 + static_cast<jule::F64>(static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.1818357216161805 + static_cast<jule::F64>(static_cast<jule::F64>((_1449_s4 * 0.14798198605116586))))))))))))))));
	jule::F64 _1469_t2 = _1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.3999999999940942 + static_cast<jule::F64>(static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.22222198432149784 + static_cast<jule::F64>(static_cast<jule::F64>((_1449_s4 * 0.15313837699209373)))))))))));
	jule::F64 _1479_R = _1459_t1 + _1469_t2;
	jule::F64 _1489_hfsq = (0.5 * _1389_f) * _1389_f;
	return static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>((_1399_k * 0.6931471803691238))) - static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1489_hfsq - static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1429_s * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1489_hfsq + _1479_R))))) + static_cast<jule::F64>(static_cast<jule::F64>((_1399_k * 0.00000000019082149292705877))))))))) - _1389_f))));
}



inline jule::F64 _1ad235a28_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1ad159908_f64_from_bits(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_1ad1595a6_f64_bits(_4312_x))) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1ad2375eb_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _1ad235a28_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if ((_469_abs_f > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_abs_f + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while (_4713_i > _469_abs_f) {
			{
				(_4713_i)--;
			}
		_iter_next_1aeb65434:;
		}
		_iter_end_1aeb65434:;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1ad237a80_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;
	jule::I64 _4516_exp;
	std::tie(_4510_frac,_4516_exp) = _1ad15bba2_frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	}
	return static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>((static_cast<jule::F64>(static_cast<jule::F64>(_1ad1a97c1_log(_4510_frac))) * 1.4426950408889634))) + static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_4516_exp))));
}



inline jule::Str _1acac8a5e_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::I64 _7837_prec,jule::I64 _7848_bit_size) {
	return static_cast<jule::Str>(_1acaecd2a_generic_ftoa(jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_1acc71454_max(static_cast<jule::I64>((_7837_prec + 4LL)),24LL))),_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1acaecd2a_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::I64 _8259_prec,jule::I64 _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	jule::Ptr<_1acee76b9_FloatInfo> _8413_flt = nullptr;
	{
		auto &_match_expr{ _8270_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1aee28b48:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1ad159056_f32_bits(static_cast<jule::F32>(static_cast<jule::F32>(_8234_val)))));
				_8413_flt=((jule::Ptr<_1acee76b9_FloatInfo>)((&(_1aca6417b_F32_INFO))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aee2886d:;
			{
				_8313_bits=static_cast<jule::U64>(_1ad1595a6_f64_bits(_8234_val));
				_8413_flt=((jule::Ptr<_1acee76b9_FloatInfo>)((&(_1aca6a8d0_F64_INFO))));
			}
		}
		else {
			_case_begin_1aee28241:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1aee28461:;
	}
	jule::Bool _969_neg = ((_8313_bits >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)))) != 0LLU);
	jule::I64 _9713_exp = static_cast<jule::I64>(_8313_bits >> _8413_flt.get()._field_mantbits) & static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL))));
	jule::U64 _9813_mant = _8313_bits & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits)) - 1LLU))));
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL))) {
			_case_begin_1aee2898e:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1aee30842:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1aee30952:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1aee2e5bb:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'+','i','n','f'}));
						}
					}
					_match_end_1aee2e500:;
				}
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1aee2db3c:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1aee284b6:;
			{
				_9813_mant|=static_cast<jule::U64>(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1aee2ce38:;
	}
	_9713_exp+=_8413_flt.get()._field_bias;
	if (_8244_fmt == 'b') {
		return _1ad04b7a6_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _1acb3988e_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	
	_1aca822a9_DecimalSlice _13213_digs = _1aca822a9_DecimalSlice();
	jule::Bool _13313_ok = false;
	jule::Bool _1359_shortest = (_8259_prec < 0LL);
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1accb4e15_ryu_ftoa_shortest(_13213_digs,_9813_mant,static_cast<jule::I64>(_9713_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_8413_flt.get()._field_mantbits)))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aee34318:;
				{
					_8259_prec=static_cast<jule::I64>(_1acc71454_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aee35847:;
				{
					_8259_prec=static_cast<jule::I64>(_1acc71454_max(static_cast<jule::I64>(_13213_digs._field_nd - _13213_digs._field_dp),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aee358d0:;
				{
					_8259_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1aee357e2:;
		}
	} else if (_8244_fmt != 'f') {
		jule::I64 _15217_digits = _8259_prec;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aee38394:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aee38042:;
				{
					if ((_8259_prec == 0LL)) {
						_8259_prec=1LL;
					}
					_15217_digits=_8259_prec;
				}
			}
			else {
				_case_begin_1aee3786b:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1aee35e63:;
		}
		if ((_8270_bit_size == 32LL) && (_15217_digits <= 9LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1ad0a0e9d_ryu_ftoa_fixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>(_9713_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_8413_flt.get()._field_mantbits)))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1ad138a4c_ryu_ftoa_fixed64(_13213_digs,_9813_mant,static_cast<jule::I64>(_9713_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_8413_flt.get()._field_mantbits)))),_15217_digits);
			_13313_ok=true;
		}
	}
	if ((!(_13313_ok))) {
		return _1acb4bc9c_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _1acc84ab6_fmt_digits(_8221_dst,_1359_shortest,_969_neg,_13213_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1acb4bc9c_big_ftoa(jule::Slice<jule::U8> _18217_dst,jule::I64 _18234_prec,jule::U8 _18245_fmt,jule::Bool _18256_neg,jule::U64 _18313_mant,jule::I64 _18324_exp,_1acee76b9_FloatInfo& _18335_flt) {
	_1ad2569a0_Decimal _18413_d = _1ad2569a0_Decimal();
	_1ad256bc0_assign(&_18413_d, _18313_mant);
	_1ad256d35_shift(&_18413_d, static_cast<jule::I64>(_18324_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_18335_flt._field_mantbits)))));
	_1aca822a9_DecimalSlice _18713_digs = _1aca822a9_DecimalSlice();
	jule::Bool _1889_shortest = (_18234_prec < 0LL);
	if (_1889_shortest) {
		_1accc650e_round_shortest(_18413_d,_18313_mant,_18324_exp,_18335_flt);
		_18713_digs=_1aca822a9_DecimalSlice(_18413_d._field_d.slice(0LL),_18413_d._field_nd,_18413_d._field_dp,jule::Bool());
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aee472c6:;
				{
					_18234_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aee47370:;
				{
					_18234_prec=static_cast<jule::I64>(_1acc71454_max(static_cast<jule::I64>(_18713_digs._field_nd - _18713_digs._field_dp),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aee473d6:;
				{
					_18234_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1aee463a2:;
		}
	} else {
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aee4600b:;
				{
					_1ad257275_round(&_18413_d, static_cast<jule::I64>((_18234_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aee46072:;
				{
					_1ad257275_round(&_18413_d, static_cast<jule::I64>(_18413_d._field_dp + _18234_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aee460d8:;
				{
					if ((_18234_prec == 0LL)) {
						_18234_prec=1LL;
					}
					_1ad257275_round(&_18413_d, _18234_prec);
				}
			}
			_match_end_1aee490db:;
		}
		_18713_digs=_1aca822a9_DecimalSlice(_18413_d._field_d.slice(0LL),_18413_d._field_nd,_18413_d._field_dp,jule::Bool());
	}
	return _1acc84ab6_fmt_digits(_18217_dst,_1889_shortest,_18256_neg,_18713_digs,_18234_prec,_18245_fmt);
}



inline jule::Slice<jule::U8> _1acc84ab6_fmt_digits(jule::Slice<jule::U8> _21919_dst,jule::Bool _21932_shortest,jule::Bool _21948_neg,_1aca822a9_DecimalSlice _22013_digs,jule::I64 _22037_prec,jule::U8 _22048_fmt) {
	{
		auto &_match_expr{ _22048_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1aee4d299:;
			{
				return _1ace60346_fmt_e(_21919_dst,_21948_neg,_22013_digs,_22037_prec,_22048_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aee4d365:;
			{
				return _1acaed138_fmt_f(_21919_dst,_21948_neg,_22013_digs,_22037_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1aee4d3cb:;
			{
				jule::I64 _22817_eprec = _22037_prec;
				if ((_22817_eprec > _22013_digs._field_nd) && (_22013_digs._field_nd >= _22013_digs._field_dp)) {
					_22817_eprec=_22013_digs._field_nd;
				}
				if (_21932_shortest) {
					_22817_eprec=6LL;
				}
				jule::I64 _23813_exp = (_22013_digs._field_dp - 1LL);
				if ((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec)) {
					if (_22037_prec > _22013_digs._field_nd) {
						_22037_prec=_22013_digs._field_nd;
					}
					return _1ace60346_fmt_e(_21919_dst,_21948_neg,_22013_digs,static_cast<jule::I64>((_22037_prec - 1LL)),static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_22048_fmt + 'e')) - 'g'));
				}
				if (_22037_prec > _22013_digs._field_dp) {
					_22037_prec=_22013_digs._field_nd;
				}
				return _1acaed138_fmt_f(_21919_dst,_21948_neg,_22013_digs,static_cast<jule::I64>(_1acc71454_max(static_cast<jule::I64>(_22037_prec - _22013_digs._field_dp),0LL)));
			}
		}
		_match_end_1aee4d244:;
	}
	return jule::append(_21919_dst,jule::Slice<jule::U8>({'%',_22048_fmt}));
}



inline void _1accc650e_round_shortest(_1ad2569a0_Decimal& _25724_d,jule::U64 _25736_mant,jule::I64 _25747_exp,_1acee76b9_FloatInfo& _25758_flt) {
	if ((_25736_mant == 0LLU)) {
		_25724_d._field_nd=0LL;
		return;
	}
	jule::I64 _2789_minexp = (_25758_flt._field_bias + 1LL);
	if ((_25747_exp > _2789_minexp) && ((332LL * static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25724_d._field_dp - _25724_d._field_nd)))) >= static_cast<jule::I64>(static_cast<jule::I64>(100LL * static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25747_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25758_flt._field_mantbits)))))))))) {
		return;
	}
	_1ad2569a0_Decimal _28713_upper = _1ad2569a0_Decimal();
	_1ad256bc0_assign(&_28713_upper, static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_25736_mant << 1LLU)) + 1LLU)));
	_1ad256d35_shift(&_28713_upper, static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_25747_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25758_flt._field_mantbits))))) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;
	jule::I64 _29813_explo = 0LL;
	if ((_25736_mant > static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _25758_flt._field_mantbits))) || (_25747_exp == _2789_minexp)) {
		_29713_mantlo=static_cast<jule::U64>((_25736_mant - 1LLU));
		_29813_explo=_25747_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_25736_mant << 1LLU)) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25747_exp - 1LL));
	}
	_1ad2569a0_Decimal _30613_lower = _1ad2569a0_Decimal();
	_1ad256bc0_assign(&_30613_lower, static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_29713_mantlo << 1LLU)) + 1LLU)));
	_1ad256d35_shift(&_30613_lower, static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_29813_explo - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25758_flt._field_mantbits))))) - 1LL)));
	jule::Bool _3139_inclusive = ((_25736_mant & 1LL) == 0LLU);
	jule::U8 _32613_upperdelta = 0LLU;
	jule::I64 _33013_ui = 0LL;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = (_33013_ui - _28713_upper._field_dp) + _25724_d._field_dp;
			if (_33513_mi >= _25724_d._field_nd) {
				goto _iter_end_1aee591c8;
			}
			jule::I64 _33913_li = (_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);
			if ((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd)) {
				_34017_l=_30613_lower._field_d[_33913_li];
			}
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25724_d._field_d[_33513_mi];
			}
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);
			if (_33013_ui < _28713_upper._field_nd) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			}
			jule::Bool _35613_okdown = (_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd));
			{
				
				if ((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u)) {
					_case_begin_1aee64139:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if ((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u)) {
					_case_begin_1aee641b1:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if ((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0'))) {
					_case_begin_1aee64238:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1aee640c3:;
			}
			jule::Bool _37713_okup = (_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd));
			{
				
				if (_35613_okdown && _37713_okup) {
					_case_begin_1aee67703:;
					{
						_1ad257275_round(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1aee67769:;
					{
						_1ad256e9a_round_down(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;
					}
				}
				else if (_37713_okup) {
					_case_begin_1aee677d0:;
					{
						_1ad257110_round_up(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;
					}
				}
				_match_end_1aee66625:;
			}
		}
	_iter_next_1aee591c8:;
	}
	_iter_end_1aee591c8:;
}



inline jule::Slice<jule::U8> _1ace60346_fmt_e(jule::Slice<jule::U8> _39614_dst,jule::Bool _39627_neg,_1aca822a9_DecimalSlice _39638_d,jule::I64 _39655_prec,jule::U8 _39666_fmt) {
	if (_39627_neg) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('-');
	}
	jule::U8 _40313_ch = '0';
	if ((_39638_d._field_nd != 0LL)) {
		_40313_ch=_39638_d._field_d[0LL];
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);
	if ((_39655_prec > 0LL)) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('.');
		jule::I64 _41217_i = 1LL;
		jule::I64 _41313_m = _1acc6bb14_min(_39638_d._field_nd,static_cast<jule::I64>((_39655_prec + 1LL)));
		if (_41217_i < _41313_m) {
			_39614_dst=jule::append(_39614_dst,_39638_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		}
		for (; _41217_i <= _39655_prec; (_41217_i)++) {
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('0');
			}
		_iter_next_1aee6d2b9:;
		}
		_iter_end_1aee6d2b9:;
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_39666_fmt);
	jule::I64 _42513_exp = (_39638_d._field_dp - 1LL);
	if ((_39638_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	}
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1aee705eb:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push('0');_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_42513_exp))) + '0'));
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1aee70662:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp / 10LL)))) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp % 10LL)))) + '0'));
			}
		}
		else {
			_case_begin_1aee70992:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,3);_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp / 100LL)))) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp / 10LL)))) % 10LL))) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp % 10LL)))) + '0'));
			}
		}
		_match_end_1aee7093c:;
	}
	return _39614_dst;
}



inline jule::Slice<jule::U8> _1acaed138_fmt_f(jule::Slice<jule::U8> _45114_dst,jule::Bool _45127_neg,_1aca822a9_DecimalSlice _45138_d,jule::I64 _45155_prec) {
	if (_45127_neg) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('-');
	}
	if ((_45138_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1acc6bb14_min(_45138_d._field_nd,_45138_d._field_dp);
		_45114_dst=jule::append(_45114_dst,_45138_d._field_d.slice(0LL,_45917_m));
		for (; _45917_m < _45138_d._field_dp; (_45917_m)++) {
			{
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');
			}
		_iter_next_1aee75d0a:;
		}
		_iter_end_1aee75d0a:;
	} else {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');
	}
	if ((_45155_prec > 0LL)) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('.');
		jule::I64 _47017_i = 0LL;
		for (; _47017_i < _45155_prec; (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);
				jule::I64 _47317_j = _45138_d._field_dp + _47017_i;
				if ((0LL <= _47317_j) && (_47317_j < _45138_d._field_nd)) {
					_47221_ch=_45138_d._field_d[_47317_j];
				}
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push(_47221_ch);
			}
		_iter_next_1aee77a76:;
		}
		_iter_end_1aee77a76:;
	}
	return _45114_dst;
}



inline jule::Slice<jule::U8> _1ad04b7a6_fmt_b(jule::Slice<jule::U8> _48414_dst,jule::Bool _48427_neg,jule::U64 _48438_mant,jule::I64 _48453_exp,_1acee76b9_FloatInfo& _48464_flt) {
	if (_48427_neg) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('-');
	}
	std::tie(_48414_dst,std::ignore) = _1ad2587a4_fmt_bits(_48414_dst,_48438_mant,10LL,false,true);
	_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('p');
	_48453_exp-=static_cast<jule::I64>(static_cast<jule::I64>(_48464_flt._field_mantbits));
	if ((_48453_exp >= 0LL)) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('+');
	}
	std::tie(_48414_dst,std::ignore) = _1ad2587a4_fmt_bits(_48414_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48453_exp)),10LL,(_48453_exp < 0LL),true);
	return _48414_dst;
}



inline jule::Slice<jule::U8> _1acb3988e_fmt_x(jule::Slice<jule::U8> _50614_dst,jule::I64 _50627_prec,jule::U8 _50638_fmt,jule::Bool _50649_neg,jule::U64 _50713_mant,jule::I64 _50728_exp,_1acee76b9_FloatInfo& _50739_flt) {
	if ((_50713_mant == 0LLU)) {
		_50728_exp=0LL;
	}
	_50713_mant<<=static_cast<jule::U64>(60LLU - _50739_flt._field_mantbits);
	while ((_50713_mant != 0LLU) && ((_50713_mant & 1152921504606846976LLU) == 0LLU)) {
		{
			_50713_mant<<=1LLU;
			(_50728_exp)--;
		}
	_iter_next_1aee7e2ec:;
	}
	_iter_end_1aee7e2ec:;
	if ((_50627_prec >= 0LL) && (_50627_prec < 15LL)) {
		jule::U64 _52113_shift = static_cast<jule::U64>(_50627_prec << 2LLU);
		jule::U64 _52213_extra = ((_50713_mant << _52113_shift) & 1152921504606846975LLU);
		_50713_mant>>=static_cast<jule::U64>(60LLU - _52113_shift);
		if (((_52213_extra | static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_50713_mant & 1LLU))))) > 576460752303423488LLU)) {
			(_50713_mant)++;
		}
		_50713_mant<<=static_cast<jule::U64>(60LLU - _52113_shift);
		if (((_50713_mant & 2305843009213693952LLU) != 0LLU)) {
			_50713_mant>>=1LLU;
			(_50728_exp)++;
		}
	}
	jule::Str _53513_hex = jule::Str();
	if (_50638_fmt == 'X') {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	}
	if (_50649_neg) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('-');
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push('0');_50614_dst.__push(_50638_fmt);_50614_dst.__push(static_cast<jule::U8>('0' + static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(((_50713_mant >> 60LLU) & 1LLU))))));
	_50713_mant<<=4LLU;
	if ((_50627_prec < 0LL) && (_50713_mant != 0LLU)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');
		while ((_50713_mant != 0LLU)) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_50713_mant >> 60LLU) & 15LLU))]);
				_50713_mant<<=4LLU;
			}
		_iter_next_1aee85358:;
		}
		_iter_end_1aee85358:;
	} else if ((_50627_prec > 0LL)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');
		jule::I64 _55817_i = 0LL;
		for (; _55817_i < _50627_prec; (_55817_i)++) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_50713_mant >> 60LLU) & 15LLU))]);
				_50713_mant<<=4LLU;
			}
		_iter_next_1aee835cb:;
		}
		_iter_end_1aee835cb:;
	}
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);
	if (_50638_fmt == static_cast<jule::U8>(static_cast<jule::U8>(_1acde8433_lower(_50638_fmt)))) {
		_56613_ch='p';
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);
	if ((_50728_exp < 0LL)) {
		_56613_ch='-';
		_50728_exp=static_cast<jule::I64>((-(_50728_exp)));
	} else {
		_56613_ch='+';
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);
	{
		
		if ((_50728_exp < 100LL)) {
			_case_begin_1aee8ce65:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,2);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp / 10LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp % 10LL)))) + '0'));
			}
		}
		else if ((_50728_exp < 1000LL)) {
			_case_begin_1aee89ec8:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp / 100LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(((_50728_exp / 10LL) % 10LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp % 10LL)))) + '0'));
			}
		}
		else {
			_case_begin_1aee8a36e:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,4);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp / 1000LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp / 100LL)))) % 10LL))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(((_50728_exp / 10LL) % 10LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp % 10LL)))) + '0'));
			}
		}
		_match_end_1aee8a319:;
	}
	return _50614_dst;
}



inline jule::I64 _1acc6bb14_min(jule::I64 _5918_a,jule::I64 _59116_b) {
	if (_5918_a < _59116_b) {
		return _5918_a;
	}
	return _59116_b;
}



inline jule::I64 _1acc71454_max(jule::I64 _5988_a,jule::I64 _59816_b) {
	if (_5988_a > _59816_b) {
		return _5988_a;
	}
	return _59816_b;
}



inline jule::U8 _1acde8433_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>(_4710_c | ('x' - 'X'));
}



inline std::tuple<jule::U64,jule::I64> _1ace4b695___parse_uint(jule::Str _5121_s,jule::I64 _5133_base,jule::I64 _5148_bit_size) {
	if (_5121_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	}
	{
		
		if ((2LL <= _5133_base) && (_5133_base <= 36LL)) {
			_case_begin_1aee93a4d:;
		}
		else if ((_5133_base == 0LL)) {
			_case_begin_1aee938d8:;
			{
				_5133_base=10LL;
				if (_5121_s[0LL] == '0') {
					{
						
						if ((_5121_s.len() >= 3LL) && (_1acde8433_lower(_5121_s[1LL]) == 'b')) {
							_case_begin_1aee95a3e:;
							{
								_5133_base=2LL;
								(_5121_s).mut_slice(2LL);
							}
						}
						else if ((_5121_s.len() >= 3LL) && (_1acde8433_lower(_5121_s[1LL]) == 'o')) {
							_case_begin_1aee95643:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(2LL);
							}
						}
						else if ((_5121_s.len() >= 3LL) && (_1acde8433_lower(_5121_s[1LL]) == 'x')) {
							_case_begin_1aee95335:;
							{
								_5133_base=16LL;
								(_5121_s).mut_slice(2LL);
							}
						}
						else {
							_case_begin_1aee952be:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(1LL);
							}
						}
						_match_end_1aee95203:;
					}
				}
			}
		}
		else {
			_case_begin_1aee92ae6:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1aee92a91:;
	}
	if ((_5148_bit_size == 0LL)) {
		_5148_bit_size=64LL;
	} else if ((_5148_bit_size < 0LL) || (_5148_bit_size > 64LL)) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	}
	jule::U64 _9013_cutoff = 0LLU;
	{
		auto &_match_expr{ _5133_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1aee9ae51:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1aee9aa99:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1aee9a4e4:;
			{
				_9013_cutoff=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_5133_base)))))) + 1LLU));
			}
		}
		_match_end_1aee9a736:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto &_match_expr{ _5148_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1aee9a89b:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aee9c23d:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_1aee9b77b:;
	}
	jule::U64 _10813_n = 0LLU;
	{
		auto &expr = _5121_s;
		auto it = expr.begin();
		_iter_begin_1aee9c6d3:;
		if (it != expr.end()) {
			jule::U8 _1aee9d360_c = *it;
			{
				jule::U8 _11017_d = 0LLU;
				{
					
					if (('0' <= _1aee9d360_c) && (_1aee9d360_c <= '9')) {
						_case_begin_1aee9e3d8:;
						{
							_11017_d=static_cast<jule::U8>(_1aee9d360_c - '0');
						}
					}
					else if (('a' <= static_cast<jule::U8>(static_cast<jule::U8>(_1acde8433_lower(_1aee9d360_c)))) && (_1acde8433_lower(_1aee9d360_c) <= 'z')) {
						_case_begin_1aee9e273:;
						{
							_11017_d=static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_1acde8433_lower(_1aee9d360_c))) - 'a')) + 10LLU));
						}
					}
					else if (_1aee9d360_c == '_') {
						_case_begin_1aee9e2d9:;
						{
							goto _iter_next_1aee9c6d3;
						}
					}
					else {
						_case_begin_1aee9dd11:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1aee9dc89:;
				}
				if (_11017_d >= static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_5133_base)))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				}
				if (_10813_n >= _9013_cutoff) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				}
				_10813_n*=static_cast<jule::U64>(static_cast<jule::U64>(_5133_base));
				jule::U64 _13213_n1 = _10813_n + static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_11017_d)));
				if ((_13213_n1 < _10813_n) || (_13213_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				}
				_10813_n=_13213_n1;
			}
			_iter_next_1aee9c6d3:;
			++it;
			goto _iter_begin_1aee9c6d3;
		}
		_iter_end_1aee9c6d3:;
	}
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1aceeeaab_parse_uint(jule::Str _14623_s,jule::I64 _14635_base,jule::I64 _14650_bit_size) {
	jule::U64 _14710_un;
	jule::I64 _14714_err;
	std::tie(_14710_un,_14714_err) = _1ace4b695___parse_uint(_14623_s,_14635_base,_14650_bit_size);
	if (_14714_err != static_cast<jule::I64>(0LL)) {
		return jule::Exceptional<jule::U64>(_14714_err);
	}
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1ad0739ed_parse_int(jule::Str _17222_s,jule::I64 _17230_base,jule::I64 _17245_bit_size) {
	if (_17222_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	}
	jule::Bool _17813_neg = false;
	if (_17222_s[0LL] == '+') {
		(_17222_s).mut_slice(1LL);
	} else if (_17222_s[0LL] == '-') {
		_17813_neg=true;
		(_17222_s).mut_slice(1LL);
	}
	jule::U64 _18714_un;
	jule::I64 _18718_err;
	std::tie(_18714_un,_18718_err) = _1ace4b695___parse_uint(_17222_s,_17230_base,_17245_bit_size);
	if ((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	}
	if ((_17245_bit_size == 0LL)) {
		_17245_bit_size=64LL;
	}
	jule::U64 _1969_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_17245_bit_size - 1LL)))));
	if ((!(_17813_neg)) && (_18714_un >= _1969_cutoff)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	}
	if (_17813_neg && (_18714_un > _1969_cutoff)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	}
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1acb4d133_eisel_lemire64(jule::U64 _4123_man,jule::I64 _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if ((_4123_man == 0LLU)) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1ad159908_f64_from_bits(9223372036854775808LLU));
		}
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::I64 _579_clz = _1ad2272ab_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::U64>(static_cast<jule::U64>(_579_clz));
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>(((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_579_clz)));
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _1ad232690_mul64(_4123_man,_1acae9640_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][1LL]);
	if (((_6314_x_hi & 511LLU) == 511LLU) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _1ad232690_mul64(_4123_man,_1acae9640_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LLU) == 511LLU) && ((_6829_merged_lo + 1LLU) == 0LLU)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = (_6314_x_hi >> 63LLU);
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_799_msb + 9LLU))));
	_6013_ret_exp2-=static_cast<jule::U64>(1LLU ^ _799_msb);
	if (((_6324_x_lo == 0LLU) && ((_6314_x_hi & 511LLU) == 0LLU)) && ((_8013_ret_mantissa & 3LLU) == 1LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>((_8013_ret_mantissa & 1LLU));
	_8013_ret_mantissa>>=1LLU;
	if (((_8013_ret_mantissa >> 53LLU) > 0LLU)) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	}
	if (((_6013_ret_exp2 - 1LLU) >= 2046LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LLU) | static_cast<jule::U64>(static_cast<jule::U64>((_8013_ret_mantissa & 4503599627370495LLU)));
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_1ad159908_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1acb51554_eisel_lemire32(jule::U64 _11023_man,jule::I64 _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if ((_11023_man == 0LLU)) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1ad159298_f32_from_bits(2147483648LLU));
		}
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::I64 _1329_clz = _1ad2272ab_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::U64>(static_cast<jule::U64>(_1329_clz));
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>(((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1329_clz)));
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _1ad232690_mul64(_11023_man,_1acae9640_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][1LL]);
	if (((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _1ad232690_mul64(_11023_man,_1acae9640_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1549_msb + 38LLU))));
	_13513_ret_exp2-=static_cast<jule::U64>(1LLU ^ _1549_msb);
	if (((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_ret_mantissa & 3LLU) == 1LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>((_15513_ret_mantissa & 1LLU));
	_15513_ret_mantissa>>=1LLU;
	if (((_15513_ret_mantissa >> 24LLU) > 0LLU)) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	}
	if (((_13513_ret_exp2 - 1LLU) >= 254LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LLU) | static_cast<jule::U64>(static_cast<jule::U64>((_15513_ret_mantissa & 8388607LLU)));
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	}
	_11058_f = static_cast<jule::F32>(_1ad159298_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_ret_bits))));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::I64 _1acaa7e17_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > static_cast<jule::I64>(static_cast<jule::I64>(_4534_s.len()))) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::I64 _5013_i = 0LL;
	for (; _5013_i < _4613_n; (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];
			if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
				_5217_c+='a' - 'A';
			}
			if (_5217_c != _4542_prefix[_5013_i]) {
				return _5013_i;
			}
		}
	_iter_next_1aeeca9db:;
	}
	_iter_end_1aeeca9db:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1acba5d8e_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::I64 _7213_sign = 1LL;
	jule::I64 _7313_nsign = 0LL;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1aeed0408:;
			{
				if (_6816_s[0LL] == '-') {
					_7213_sign=-1LL;
				}
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);
				goto _case_begin_1aeed046e;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1aeed046e:;
			{
				jule::I64 _8317_case_n = _1acaa7e17_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
				if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
					_8317_case_n=3LL;
				}
				if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
					_6826_f = static_cast<jule::F64>(_1ad17aa6c_inf(_7213_sign));
					_6834_n = static_cast<jule::I64>(_7313_nsign + _6834_n);
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				}
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1aeed04d5:;
			{
				if ((_1acaa7e17_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1ad170de7_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				}
			}
		}
		_match_end_1aeed03a3:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1ad145a15_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::I64 _10340_exp = jule::I64();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10438_hex = jule::Bool();
	jule::I64 _10449_i = jule::I64();
	jule::Bool _10457_ok = jule::Bool();
	if (_10449_i >= static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		
		if (_10315_s[_10449_i] == '+') {
			_case_begin_1aeed6d5a:;
			{
				(_10449_i)++;
			}
		}
		else if (_10315_s[_10449_i] == '-') {
			_case_begin_1aeed72ab:;
			{
				_10350_neg=true;
				(_10449_i)++;
			}
		}
		_match_end_1aeed6d05:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::I64 _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) && (_10315_s[_10449_i] == '0')) && (_1acde8433_lower(_10315_s[(_10449_i + 1LL)]) == 'x')) {
		_11813_base=16LLU;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::I64 _13013_nd = 0LL;
	jule::I64 _13113_nd_mant = 0LL;
	jule::I64 _13213_dp = 0LL;
	for (; _10449_i < static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len())); (_10449_i)++) {
		{
			jule::U8 _13413_c = _10315_s[_10449_i];
			{
				
				if (_13413_c == '_') {
					_case_begin_1aeedd0e7:;
					{
						goto _iter_next_1aeedc58b;
					}
				}
				else if (_13413_c == '.') {
					_case_begin_1aeedd16e:;
					{
						if (_12813_sawdot) {
							goto _julec_label_loop_end;
						}
						_12813_sawdot=true;
						_13213_dp=_13013_nd;
						goto _iter_next_1aeedc58b;
					}
				}
				else if (('0' <= _13413_c) && (_13413_c <= '9')) {
					_case_begin_1aeedd1e6:;
					{
						_12913_sawdigits=true;
						if ((_13413_c == '0') && (_13013_nd == 0LL)) {
							(_13213_dp)--;
							goto _iter_next_1aeedc58b;
						}
						(_13013_nd)++;
						if (_13113_nd_mant < _11913_max_mant_digits) {
							_10325_mantissa*=_11813_base;
							_10325_mantissa+=static_cast<jule::U64>(static_cast<jule::U64>(_13413_c - '0'));
							(_13113_nd_mant)++;
						} else if (_13413_c != '0') {
							_10425_trunc=true;
						}
						goto _iter_next_1aeedc58b;
					}
				}
				else if (((_11813_base == 16LLU) && ('a' <= static_cast<jule::U8>(static_cast<jule::U8>(_1acde8433_lower(_13413_c))))) && (_1acde8433_lower(_13413_c) <= 'f')) {
					_case_begin_1aeedd26d:;
					{
						_12913_sawdigits=true;
						(_13013_nd)++;
						if (_13113_nd_mant < _11913_max_mant_digits) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>(static_cast<jule::U64>(((_1acde8433_lower(_13413_c) - 'a') + 10LLU)));
							(_13113_nd_mant)++;
						} else {
							_10425_trunc=true;
						}
						goto _iter_next_1aeedc58b;
					}
				}
				_match_end_1aeedd009:;
			}
			goto _iter_end_1aeedc58b;
		}
	_iter_next_1aeedc58b:;
	}
	_iter_end_1aeedc58b:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if ((_11813_base == 16LLU)) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) && (_1acde8433_lower(_10315_s[_10449_i]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::I64 _19717_esign = 1LL;
		if (_10315_s[_10449_i] == '+') {
			(_10449_i)++;
		} else if (_10315_s[_10449_i] == '-') {
			(_10449_i)++;
			_19717_esign=-1LL;
		}
		if (((_10449_i >= static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) || (_10315_s[_10449_i] < '0')) || (_10315_s[_10449_i] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::I64 _20717_e = 0LL;
		for (; (_10449_i < static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) && ((('0' <= _10315_s[_10449_i]) && (_10315_s[_10449_i] <= '9')) || (_10315_s[_10449_i] == '_')); (_10449_i)++) {
			{
				if (_10315_s[_10449_i] == '_') {
					goto _iter_next_1aeee8d8e;
				}
				if ((_20717_e < 10000LL)) {
					_20717_e=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_20717_e * 10LL))) + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_10315_s[_10449_i]))))) - '0');
				}
			}
		_iter_next_1aeee8d8e:;
		}
		_iter_end_1aeee8d8e:;
		_13213_dp+=static_cast<jule::I64>(_20717_e * _19717_esign);
	} else if ((_11813_base == 16LLU)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((_10325_mantissa != 0LLU)) {
		_10340_exp=static_cast<jule::I64>(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1ace1486c_atof64exact(jule::U64 _48216_mantissa,jule::I64 _48235_exp,jule::Bool _48245_neg) {
	jule::F64 _48258_f = jule::F64();
	jule::Bool _48266_ok = jule::Bool();
	if (((_48216_mantissa >> _1aca6a8d0_F64_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48258_f,_48266_ok);
	}
	_48258_f=static_cast<jule::F64>(static_cast<jule::F64>(_48216_mantissa));
	if (_48245_neg) {
		_48258_f=static_cast<jule::F64>((-(_48258_f)));
	}
	{
		
		if ((_48235_exp == 0LL)) {
			_case_begin_1b0005d24:;
			{
				_48266_ok = true;
				return std::make_tuple(_48258_f,_48266_ok);
			}
		}
		else if ((_48235_exp > 0LL) && (_48235_exp <= 37LL)) {
			_case_begin_1b0005d9b:;
			{
				if ((_48235_exp > 22LL)) {
					_48258_f*=_1acb54667_F64_POW10[(_48235_exp - 22LL)];
					_48235_exp=22LL;
				}
				if ((_48258_f > 1000000000000000LL) || (_48258_f < -1000000000000000LL)) {
					return std::make_tuple(_48258_f,_48266_ok);
				}
				_48258_f = static_cast<jule::F64>(_48258_f * _1acb54667_F64_POW10[_48235_exp]);
				_48266_ok = true;
				return std::make_tuple(_48258_f,_48266_ok);
			}
		}
		else if ((_48235_exp < 0LL) && (_48235_exp >= -22LL)) {
			_case_begin_1b0005e23:;
			{
				_48258_f = static_cast<jule::F64>(jule::div(_48258_f,_1acb54667_F64_POW10[(-(_48235_exp))]));
				_48266_ok = true;
				return std::make_tuple(_48258_f,_48266_ok);
			}
		}
		_match_end_1b0005c47:;
	}
	return std::make_tuple(_48258_f,_48266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1acc012b3_atof32exact(jule::U64 _51616_mantissa,jule::I64 _51635_exp,jule::Bool _51649_neg) {
	jule::F32 _51662_f = jule::F32();
	jule::Bool _51670_ok = jule::Bool();
	if (((_51616_mantissa >> _1aca6417b_F32_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51662_f,_51670_ok);
	}
	_51662_f=static_cast<jule::F32>(static_cast<jule::F32>(_51616_mantissa));
	if (_51649_neg) {
		_51662_f=static_cast<jule::F32>((-(_51662_f)));
	}
	{
		
		if ((_51635_exp == 0LL)) {
			_case_begin_1b000b665:;
			{
				_51670_ok = true;
				return std::make_tuple(_51662_f,_51670_ok);
			}
		}
		else if ((_51635_exp > 0LL) && (_51635_exp <= 17LL)) {
			_case_begin_1b000b6dc:;
			{
				if ((_51635_exp > 10LL)) {
					_51662_f*=_1acb8bc76_F32_POW10[(_51635_exp - 10LL)];
					_51635_exp=10LL;
				}
				if ((_51662_f > 10000000LL) || (_51662_f < -10000000LL)) {
					return std::make_tuple(_51662_f,_51670_ok);
				}
				_51662_f = static_cast<jule::F32>(_51662_f * _1acb8bc76_F32_POW10[_51635_exp]);
				_51670_ok = true;
				return std::make_tuple(_51662_f,_51670_ok);
			}
		}
		else if ((_51635_exp < 0LL) && (_51635_exp >= -10LL)) {
			_case_begin_1b000b764:;
			{
				_51662_f = static_cast<jule::F32>(jule::div(_51662_f,_1acb8bc76_F32_POW10[(-(_51635_exp))]));
				_51670_ok = true;
				return std::make_tuple(_51662_f,_51670_ok);
			}
		}
		_match_end_1b000b588:;
	}
	return std::make_tuple(_51662_f,_51670_ok);
}



inline std::tuple<jule::F64,jule::I64> _1acaa9ec4_atof_hex(jule::Str _55213_s,_1acee76b9_FloatInfo& _55222_flt,jule::U64 _55242_mantissa,jule::I64 _55261_exp,jule::Bool _55271_neg,jule::Bool _55282_trunc) {
	jule::I64 _5539_max_exp = ((static_cast<jule::I64>(1LL << _55222_flt._field_expbits) + _55222_flt._field_bias) - 2LL);
	jule::I64 _5549_min_exp = (_55222_flt._field_bias + 1LL);
	_55261_exp+=static_cast<jule::I64>(static_cast<jule::I64>(_55222_flt._field_mantbits));
	while ((_55242_mantissa != 0LLU) && ((_55242_mantissa >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55222_flt._field_mantbits + 2LLU))))) == 0LLU)) {
		{
			_55242_mantissa<<=1LLU;
			(_55261_exp)--;
		}
	_iter_next_1b00126c1:;
	}
	_iter_end_1b00126c1:;
	if (_55282_trunc) {
		_55242_mantissa|=1LLU;
	}
	while (((_55242_mantissa >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(1LLU + _55222_flt._field_mantbits)) + 2LLU))))) != 0LLU)) {
		{
			_55242_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55242_mantissa >> 1LLU))) | static_cast<jule::U64>(static_cast<jule::U64>((_55242_mantissa & 1LLU))));
			(_55261_exp)++;
		}
	_iter_next_1b0013dcb:;
	}
	_iter_end_1b0013dcb:;
	while ((_55242_mantissa > 1LLU) && (_55261_exp < static_cast<jule::I64>(static_cast<jule::I64>((_5549_min_exp - 2LL))))) {
		{
			_55242_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55242_mantissa >> 1LLU))) | static_cast<jule::U64>(static_cast<jule::U64>((_55242_mantissa & 1LLU))));
			(_55261_exp)++;
		}
	_iter_next_1b0014140:;
	}
	_iter_end_1b0014140:;
	jule::U64 _58413_round = (_55242_mantissa & 3LLU);
	_55242_mantissa>>=2LLU;
	_58413_round|=static_cast<jule::U64>((_55242_mantissa & 1LLU));
	_55261_exp+=2LL;
	if ((_58413_round == 3LLU)) {
		(_55242_mantissa)++;
		if (_55242_mantissa == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU + _55222_flt._field_mantbits)))))) {
			_55242_mantissa>>=1LLU;
			(_55261_exp)++;
		}
	}
	if (((_55242_mantissa >> _55222_flt._field_mantbits) == 0LLU)) {
		_55261_exp=_55222_flt._field_bias;
	}
	jule::I64 _59913_err = static_cast<jule::I64>(0LL);
	if (_55261_exp > _5539_max_exp) {
		_55242_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(1LL << _55222_flt._field_mantbits));
		_55261_exp=static_cast<jule::I64>((_5539_max_exp + 1LL));
		_59913_err=static_cast<jule::I64>(1LL);
	}
	jule::U64 _60613_bits = _55242_mantissa & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _55222_flt._field_mantbits)) - 1LLU))));
	_60613_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55261_exp - _55222_flt._field_bias) & static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _55222_flt._field_expbits) - 1LL))))))) << _55222_flt._field_mantbits);
	if (_55271_neg) {
		_60613_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _55222_flt._field_mantbits)) << _55222_flt._field_expbits);
	}
	if (_55222_flt == _1aca6417b_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1ad159298_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_60613_bits))))),_59913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_1ad159908_f64_from_bits(_60613_bits)),_59913_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1acb3cc49_atof32(jule::Str _61711_s) {
	jule::F32 _61721_f = jule::F32();
	jule::I64 _61729_n = jule::I64();
	jule::I64 _61737_err = 0LL;
	{
		jule::F64 _61914_val;
		jule::I64 _61919__n;
		jule::Bool _61923_ok;
		std::tie(_61914_val,_61919__n,_61923_ok) = _1acba5d8e_special(_61711_s);
		if (_61923_ok) {
			_61721_f = static_cast<jule::F32>(static_cast<jule::F32>(_61914_val));
			_61729_n = _61919__n;
			_61737_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61721_f,_61729_n,_61737_err);
		}
	}
	jule::U64 _62510_mantissa;
	jule::I64 _62520_exp;
	jule::Bool _62525_neg;
	jule::Bool _62530_trunc;
	jule::Bool _62537_hex;
	jule::I64 _62542__n;
	jule::Bool _62550_ok;
	std::tie(_62510_mantissa,_62520_exp,_62525_neg,_62530_trunc,_62537_hex,_62542__n,_62550_ok) = _1ad145a15_read_float(_61711_s);
	_61729_n=_62542__n;
	if ((!(_62550_ok))) {
		_61721_f = 0LL;
		_61737_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61721_f,_61729_n,_61737_err);
	}
	if (_62537_hex) {
		jule::F64 _63217_ff = 0LL;
		std::tie(_63217_ff,_61737_err) = _1acaa9ec4_atof_hex(_61711_s.slice(0LL,_61729_n),_1aca6417b_F32_INFO,_62510_mantissa,_62520_exp,_62525_neg,_62530_trunc);
		_61721_f = static_cast<jule::F32>(static_cast<jule::F32>(_63217_ff));
		return std::make_tuple(_61721_f,_61729_n,_61737_err);
	}
	{
		if ((!(_62530_trunc))) {
			std::tie(_61721_f,_62550_ok) = _1acc012b3_atof32exact(_62510_mantissa,_62520_exp,_62525_neg);
			if (_62550_ok) {
				_61737_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61721_f,_61729_n,_61737_err);
			}
		}
		std::tie(_61721_f,_62550_ok) = _1acb51554_eisel_lemire32(_62510_mantissa,_62520_exp,_62525_neg);
		if (_62550_ok) {
			if ((!(_62530_trunc))) {
				_61737_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61721_f,_61729_n,_61737_err);
			}
			jule::F32 _65421_f_up = 0LL;
			std::tie(_65421_f_up,_62550_ok) = _1acb51554_eisel_lemire32(static_cast<jule::U64>((_62510_mantissa + 1LLU)),_62520_exp,_62525_neg);
			if (_62550_ok && (_61721_f == _65421_f_up)) {
				_61737_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61721_f,_61729_n,_61737_err);
			}
		}
	}
	_1ad2569a0_Decimal _66313_d = _1ad2569a0_Decimal();
	if ((!(_1acc8a13d_set(&_66313_d, _61711_s.slice(0LL,_61729_n))))) {
		_61721_f = 0LL;
		_61737_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61721_f,_61729_n,_61737_err);
	}
	jule::U64 _66710_b;
	jule::Bool _66713_ovf;
	std::tie(_66710_b,_66713_ovf) = _1aca81e8a_float_bits(&_66313_d, _1aca6417b_F32_INFO);
	_61721_f=static_cast<jule::F32>(_1ad159298_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_66710_b))));
	if (_66713_ovf) {
		_61737_err=static_cast<jule::I64>(1LL);
	}
	return std::make_tuple(_61721_f,_61729_n,_61737_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1acb8b87a_atof64(jule::Str _67511_s) {
	jule::F64 _67521_f = jule::F64();
	jule::I64 _67529_n = jule::I64();
	jule::I64 _67537_err = 0LL;
	{
		jule::F64 _67714_val;
		jule::I64 _67719__n;
		jule::Bool _67723_ok;
		std::tie(_67714_val,_67719__n,_67723_ok) = _1acba5d8e_special(_67511_s);
		if (_67723_ok) {
			_67521_f = _67714_val;
			_67529_n = _67719__n;
			_67537_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67521_f,_67529_n,_67537_err);
		}
	}
	jule::U64 _68310_mantissa;
	jule::I64 _68320_exp;
	jule::Bool _68325_neg;
	jule::Bool _68330_trunc;
	jule::Bool _68337_hex;
	jule::I64 _68342__n;
	jule::Bool _68350_ok;
	std::tie(_68310_mantissa,_68320_exp,_68325_neg,_68330_trunc,_68337_hex,_68342__n,_68350_ok) = _1ad145a15_read_float(_67511_s);
	_67529_n=_68342__n;
	if ((!(_68350_ok))) {
		_67521_f = 0LL;
		_67537_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67521_f,_67529_n,_67537_err);
	}
	if (_68337_hex) {
		std::tie(_67521_f,_67537_err) = _1acaa9ec4_atof_hex(_67511_s.slice(0LL,_67529_n),_1aca6a8d0_F64_INFO,_68310_mantissa,_68320_exp,_68325_neg,_68330_trunc);
		return std::make_tuple(_67521_f,_67529_n,_67537_err);
	}
	{
		if ((!(_68330_trunc))) {
			std::tie(_67521_f,_68350_ok) = _1ace1486c_atof64exact(_68310_mantissa,_68320_exp,_68325_neg);
			if (_68350_ok) {
				_67537_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67521_f,_67529_n,_67537_err);
			}
		}
		std::tie(_67521_f,_68350_ok) = _1acb4d133_eisel_lemire64(_68310_mantissa,_68320_exp,_68325_neg);
		if (_68350_ok) {
			if ((!(_68330_trunc))) {
				_67537_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67521_f,_67529_n,_67537_err);
			}
			jule::F64 _71121_f_up = 0LL;
			std::tie(_71121_f_up,_68350_ok) = _1acb4d133_eisel_lemire64(static_cast<jule::U64>((_68310_mantissa + 1LLU)),_68320_exp,_68325_neg);
			if (_68350_ok && (_67521_f == _71121_f_up)) {
				_67537_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67521_f,_67529_n,_67537_err);
			}
		}
	}
	_1ad2569a0_Decimal _72013_d = _1ad2569a0_Decimal();
	if ((!(_1acc8a13d_set(&_72013_d, _67511_s.slice(0LL,_67529_n))))) {
		_67521_f = 0LL;
		_67537_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67521_f,_67529_n,_67537_err);
	}
	jule::U64 _72410_b;
	jule::Bool _72413_ovf;
	std::tie(_72410_b,_72413_ovf) = _1aca81e8a_float_bits(&_72013_d, _1aca6a8d0_F64_INFO);
	_67521_f=static_cast<jule::F64>(_1ad159908_f64_from_bits(_72410_b));
	if (_72413_ovf) {
		_67537_err=static_cast<jule::I64>(1LL);
	}
	return std::make_tuple(_67521_f,_67529_n,_67537_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1acde7762_parse_float_prefix(jule::Str _73223_s,jule::I64 _73231_bit_size) {
	if ((_73231_bit_size == 32LL)) {
		jule::F32 _73414_f;
		jule::I64 _73417_n;
		jule::I64 _73420_err;
		std::tie(_73414_f,_73417_n,_73420_err) = _1acb3cc49_atof32(_73223_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73414_f)),_73417_n,_73420_err);
	}
	jule::F64 _73810_f;
	jule::I64 _73813_n;
	jule::I64 _73816_err;
	std::tie(_73810_f,_73813_n,_73816_err) = _1acb8b87a_atof64(_73223_s);
	return std::make_tuple(_73810_f,_73813_n,_73816_err);
}



inline jule::Exceptional<jule::F64> _1ace68041_parse_float(jule::Str _76620_s,jule::I64 _76628_bit_size) {
	jule::F64 _76710_f;
	jule::I64 _76713_n;
	jule::I64 _76716_err;
	std::tie(_76710_f,_76713_n,_76716_err) = _1acde7762_parse_float_prefix(_76620_s,_76628_bit_size);
	if ((_76713_n != static_cast<jule::I64>(static_cast<jule::I64>(_76620_s.len()))) && ((_76716_err == static_cast<jule::I64>(0LL)) || (_76716_err != static_cast<jule::I64>(2LL)))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	}
	if (_76716_err != static_cast<jule::I64>(0LL)) {
		return jule::Exceptional<jule::F64>(_76716_err);
	}
	return jule::Exceptional<jule::F64>(jule::Any(),_76710_f);
}



inline void _1ad0a0e9d_ryu_ftoa_fixed32(_1aca822a9_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::I64 _4958_exp,jule::I64 _4968_prec) {
	if ((_4968_prec < 0LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	}
	if ((_4968_prec > 9LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	}
	if ((_4947_mant == 0LLU)) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::I64 _6213_e2 = _4958_exp;
	jule::I64 _639_b = _1ad22e835_len32(_4947_mant);
	if ((_639_b < 25LL)) {
		_4947_mant<<=static_cast<jule::U64>(static_cast<jule::U64>(25LL - _639_b));
		_6213_e2+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_639_b))) - 25LL));
	}
	jule::I64 _749_q = (((-(_1accb6048_mul_by_log2_log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4968_prec) - 1LL);
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::I64 _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1aca7cd54_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _1aca63ae8_divisible_by_pow5(static_cast<jule::U64>(static_cast<jule::U64>(_4947_mant)),static_cast<jule::I64>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > static_cast<jule::U32>(static_cast<jule::U32>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_949_extra - 1LLU))))))) || ((_9713_dfrac == static_cast<jule::U32>(static_cast<jule::U32>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_949_extra - 1LLU))))))) && (!(_8129_d0)))) || (((_9713_dfrac == static_cast<jule::U32>(static_cast<jule::U32>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_949_extra - 1LLU))))))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU));
	} else {
		_9913_round_up=((_9713_dfrac >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_949_extra - 1LLU))))) == 1LLU);
	}
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	}
	_1ad01c9b9_format_decimal(_4926_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1ad138a4c_ryu_ftoa_fixed64(_1aca822a9_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::I64 _12358_exp,jule::I64 _12368_prec) {
	if ((_12368_prec > 18LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: std/conv/ftoaryu.jule:125:9"));;
	}
	if ((_12347_mant == 0LLU)) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::I64 _13313_e2 = _12358_exp;
	jule::I64 _1349_b = _1ad22eb43_len64(_12347_mant);
	if ((_1349_b < 55LL)) {
		_12347_mant=static_cast<jule::U64>(_12347_mant << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(55LL - _1349_b))));
		_13313_e2+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1349_b))) - 55LL));
	}
	jule::I64 _1489_q = (((-(_1accb6048_mul_by_log2_log10(static_cast<jule::I64>((_13313_e2 + 54LL))))) + _12368_prec) - 1LL);
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::I64 _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _1aca63983_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if ((_15518_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:157:9"));;
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _1aca63ae8_divisible_by_pow5(_12347_mant,static_cast<jule::I64>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::U64 _1689_extra = static_cast<jule::U64>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>(((1LL << _1689_extra) - 1LL));
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(static_cast<jule::U64>(_15514_di >> _1689_extra),static_cast<jule::U64>(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1689_extra - 1LLU))))))) || ((_17113_dfrac == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1689_extra - 1LLU))))))) && (!(_15529_d0)))) || (((_17113_dfrac == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1689_extra - 1LLU))))))) && _15529_d0) && ((_15514_di & 1LLU) == 1LLU));
	} else {
		_17313_round_up=((_17113_dfrac >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1689_extra - 1LLU))))) == 1LLU);
	}
	if ((_17113_dfrac != 0LLU)) {
		_15529_d0=false;
	}
	_1ad01c9b9_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



inline void _1ad01c9b9_format_decimal(_1aca822a9_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::I64 _20490_prec) {
	jule::U64 _2059_max = _1acc70a91_U64_POW10[_20490_prec];
	jule::I64 _20613_trimmed = 0LL;
	while (_20445_m >= _2059_max) {
		{
			jule::U64 _20814_a = (_20445_m / 10LLU);
			jule::U64 _20817_b = (_20445_m % 10LL);
			std::tie(_20814_a,_20817_b) = std::make_tuple((_20445_m / 10LLU),(_20445_m % 10LL));
			_20445_m=_20814_a;
			(_20613_trimmed)++;
			if ((_20817_b > 5LLU)) {
				_20474_round_up=true;
			} else if ((_20817_b < 5LLU)) {
				_20474_round_up=false;
			} else {
				_20474_round_up=_20457_trunc || ((_20445_m & 1LLU) == 1LLU);
			}
			if ((_20817_b != 0LLU)) {
				_20457_trunc=true;
			}
		}
	_iter_next_1b0056391:;
	}
	_iter_end_1b0056391:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m/=10LLU;
		(_20613_trimmed)++;
	}
	jule::U64 _23313_n = static_cast<jule::U64>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20490_prec));
	jule::U64 _23513_v = _20445_m;
	while ((_23513_v >= 100LLU)) {
		{
			jule::U64 _23717_v1 = 0LLU;
			jule::U64 _23817_v2 = 0LLU;
			if (((_23513_v >> 32LLU) == 0LLU)) {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23513_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23513_v) % 100LL))));
			} else {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>((_23513_v / 100LLU)),static_cast<jule::U64>((_23513_v % 100LL)));
			}
			_23313_n-=2LLU;
			_20424_d._field_d[static_cast<jule::I64>((_23313_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23817_v2) + 1LLU))]);
			_20424_d._field_d[static_cast<jule::I64>((_23313_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23817_v2) + 0LLU))]);
			_23513_v=_23717_v1;
		}
	_iter_next_1b0059a04:;
	}
	_iter_end_1b0059a04:;
	if ((_23513_v > 0LLU)) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::I64>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23513_v) + 1LLU))]);
	}
	if ((_23513_v >= 10LLU)) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::I64>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(2LL * _23513_v)]);
	}
	while (_20424_d._field_d[(_20424_d._field_nd - 1LL)] == '0') {
		{
			(_20424_d._field_nd)--;
			(_20613_trimmed)++;
		}
	_iter_next_1b0061027:;
	}
	_iter_end_1b0061027:;
	_20424_d._field_dp=static_cast<jule::I64>(_20424_d._field_nd + _20613_trimmed);
}



inline void _1accb4e15_ryu_ftoa_shortest(_1aca822a9_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::I64 _26559_exp,_1acee76b9_FloatInfo& _26570_flt) {
	if ((_26548_mant == 0LLU)) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_1ad228b1a_trailing_zeros64(_26548_mant) >= static_cast<jule::I64>(static_cast<jule::I64>((-(_26559_exp)))))) {
		_26548_mant>>=static_cast<jule::U64>(static_cast<jule::U64>((-(_26559_exp))));
		_1aceb7777_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::I64 _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _1accc7686_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if ((_27726_e2 == 0LL)) {
		_1aceb7777_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::I64 _2839_q = (_1accb6048_mul_by_log2_log10(static_cast<jule::I64>((-(_27726_e2)))) + 1LL);
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _1aca6417b_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _1aca7cd54_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27710_ml)),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _1aca7cd54_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27714_mc)),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _1aca7cd54_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27718_mu)),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29417_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29517_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29617_du32)));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _1aca63983_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _1aca63983_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _1aca63983_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if ((_27726_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:307:9"));;
	}
	if ((_2839_q > 55LL)) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_1aca63ae8_divisible_by_pow5(_27710_ml,static_cast<jule::I64>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_1aca63ae8_divisible_by_pow5(_27714_mc,static_cast<jule::I64>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_1aca63ae8_divisible_by_pow5(_27718_mu,static_cast<jule::I64>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::U64 _3299_extra = static_cast<jule::U64>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>(((1LL << _3299_extra) - 1LL));
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(static_cast<jule::U64>(_28713_dl >> _3299_extra),static_cast<jule::U64>(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(static_cast<jule::U64>(_28813_dc >> _3299_extra),static_cast<jule::U64>(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(static_cast<jule::U64>(_28913_du >> _3299_extra),static_cast<jule::U64>(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LLU);
	if (_29213_du0 && (_33613_fracu == 0LLU)) {
		_34213_uok=((_26548_mant & 1LLU) == 0LLU);
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_3299_extra - 1LLU))))))) || ((_33413_fracc == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_3299_extra - 1LLU))))))) && ((_28813_dc & 1LLU) == 1LLU));
	} else {
		_35113_cup=((_33413_fracc >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_3299_extra - 1LLU))))) == 1LLU);
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LLU)) && ((_26548_mant & 1LLU) == 0LLU);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LLU);
	_1aceb7777_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



inline jule::I64 _1accb6048_mul_by_log2_log10(jule::I64 _38322_x) {
	return static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_38322_x * 78913LL)))) >> 18LL));
}



inline jule::I64 _1ad123927_mul_by_log10_log2(jule::I64 _39322_x) {
	return static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_39322_x * 108853LL)))) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1accc7686_compute_bounds(jule::U64 _40119_mant,jule::I64 _40130_exp,_1acee76b9_FloatInfo& _40218_flt) {
	jule::U64 _40236_lower = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40262_upper = jule::U64();
	jule::I64 _40274_e2 = jule::I64();
	if ((_40119_mant != static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _40218_flt._field_mantbits))) || (_40130_exp == static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_40218_flt._field_bias + 1LL))) - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_40218_flt._field_mantbits))))))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(2LLU * _40119_mant)) - 1LLU)),static_cast<jule::U64>(2LLU * _40119_mant),static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(2LLU * _40119_mant)) + 1LLU)));
		_40274_e2=static_cast<jule::I64>((_40130_exp - 1LL));
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _40119_mant)) - 1LLU)),static_cast<jule::U64>(4LLU * _40119_mant),static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _40119_mant)) + 2LLU)));
		_40274_e2=static_cast<jule::I64>((_40130_exp - 2LL));
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



inline void _1aceb7777_ryu_digits(_1aca822a9_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _1acb141a4_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _1acb141a4_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _1acb141a4_divmod1e9(_41563_upper);
	if ((_41810_uhi == 0LLU)) {
		_1aca7cbde_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if ((_41619_llo != 0LLU)) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LLU);
		_41593_cup=(_41715_clo > 500000000LL) || ((_41715_clo == 500000000LL) && _41593_cup);
		_1aca7cbde_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::U64 _43417_n = static_cast<jule::U64>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		while ((_43517_v > 0LLU)) {
			{
				jule::U32 _43718_v1 = (_43517_v / 10LLU);
				jule::U32 _43722_v2 = (_43517_v % 10LL);
				std::tie(_43718_v1,_43722_v2) = std::make_tuple((_43517_v / 10LLU),(_43517_v % 10LL));
				_43517_v=_43718_v1;
				(_43417_n)--;
				_41520_d._field_d[static_cast<jule::I64>(_43417_n)]=static_cast<jule::U8>(static_cast<jule::U8>(_43722_v2 + '0'));
			}
		_iter_next_1b008713b:;
		}
		_iter_end_1b008713b:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::I64>(_43417_n));
		_41520_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(9LL - _43417_n));
		_1aca7cbde_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,static_cast<jule::I64>((_41520_d._field_nd + 8LL)));
	}
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[(_41520_d._field_nd - 1LL)] == '0')) {
		{
			(_41520_d._field_nd)--;
		}
	_iter_next_1b00873e4:;
	}
	_iter_end_1b00873e4:;
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[0LL] == '0')) {
		{
			(_41520_d._field_nd)--;
			(_41520_d._field_dp)--;
			_41520_d._field_d=_41520_d._field_d.slice(1LL);
		}
	_iter_next_1b008ac88:;
	}
	_iter_end_1b008ac88:;
}



inline void _1aca7cbde_ryu_digits32(_1aca822a9_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::I64 _46166_endindex) {
	if ((_46121_upper == 0LLU)) {
		_46022_d._field_dp=static_cast<jule::I64>((_46166_endindex + 1LL));
		return;
	}
	jule::I64 _46613_trimmed = 0LL;
	jule::I64 _46913_c_next_digit = 0LL;
	while ((_46121_upper > 0LLU)) {
		{
			jule::U32 _47613_l = ((_46043_lower + 9LLU) / 10LLU);
			jule::U32 _47718_c = (_46059_central / 10LLU);
			jule::U32 _47725_cdigit = (_46059_central % 10LL);
			std::tie(_47718_c,_47725_cdigit) = std::make_tuple((_46059_central / 10LLU),(_46059_central % 10LL));
			jule::U32 _47813_u = (_46121_upper / 10LLU);
			if (_47613_l > _47813_u) {
				goto _iter_end_1b008da7c;
			}
			if ((_47613_l == static_cast<jule::U32>(static_cast<jule::U32>((_47718_c + 1LLU)))) && (_47718_c < _47813_u)) {
				(_47718_c)++;
				_47725_cdigit=0LLU;
				_46151_cup=false;
			}
			(_46613_trimmed)++;
			_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
			_46913_c_next_digit=static_cast<jule::I64>(static_cast<jule::I64>(_47725_cdigit));
			std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
		}
	_iter_next_1b008da7c:;
	}
	_iter_end_1b008da7c:;
	if ((_46613_trimmed > 0LL)) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LLU) == 1LLU));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::I64 _51813_n = _46166_endindex;
	while (_51813_n > _46022_d._field_nd) {
		{
			jule::U32 _52014_v1 = (_51713_v / 100LLU);
			jule::U32 _52018_v2 = (_51713_v % 100LL);
			std::tie(_52014_v1,_52018_v2) = std::make_tuple((_51713_v / 100LLU),(_51713_v % 100LL));
			_46022_d._field_d[_51813_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _52018_v2) + 1LLU))]);
			_46022_d._field_d[(_51813_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _52018_v2) + 0LLU))]);
			_51813_n-=2LL;
			_51713_v=_52014_v1;
		}
	_iter_next_1b009a3b3:;
	}
	_iter_end_1b009a3b3:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[_51813_n]=static_cast<jule::U8>(static_cast<jule::U8>(_51713_v + '0'));
	}
	_46022_d._field_nd=static_cast<jule::I64>((_46166_endindex + 1LL));
	_46022_d._field_dp=static_cast<jule::I64>(_46022_d._field_nd + _46613_trimmed);
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1aca7cd54_mult64bit_pow10(jule::U32 _54220_m,jule::I64 _54232_e2,jule::I64 _54241_q) {
	jule::U32 _54251_resM = jule::U32();
	jule::I64 _54262_resE = jule::I64();
	jule::Bool _54273_exact = jule::Bool();
	if ((_54241_q == 0LL)) {
		_54251_resM = static_cast<jule::U32>((_54220_m << 6LLU));
		_54262_resE = static_cast<jule::I64>((_54232_e2 - 6LL));
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:549:9"));;
	}
	jule::U64 _55113_pow = _1acae9640_DETAILED_POWS_OF_TEN[(_54241_q - -348LL)][1LL];
	if ((_54241_q < 0LL)) {
		_55113_pow+=1LLU;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _1ad232690_mul64(static_cast<jule::U64>(static_cast<jule::U64>(_54220_m)),_55113_pow);
	_54232_e2+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_1ad123927_mul_by_log10_log2(_54241_q))) - 63LL))) + 57LL));
	_54251_resM = static_cast<jule::U32>(static_cast<jule::U32>((_55610_hi << 7LLU) | static_cast<jule::U64>(static_cast<jule::U64>((_55614_lo >> 57LLU)))));
	_54262_resE = _54232_e2;
	_54273_exact = ((_55614_lo << 7LLU) == 0LLU);
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1aca63983_mult128bit_pow10(jule::U64 _57021_m,jule::I64 _57033_e2,jule::I64 _57042_q) {
	jule::U64 _57052_resM = jule::U64();
	jule::I64 _57063_resE = jule::I64();
	jule::Bool _57074_exact = jule::Bool();
	if ((_57042_q == 0LL)) {
		_57052_resM = static_cast<jule::U64>((_57021_m << 8LLU));
		_57063_resE = static_cast<jule::I64>((_57033_e2 - 8LL));
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: std/conv/ftoaryu.jule:577:9"));;
	}
	jule::Array<jule::U64,2> _57913_pow = _1acae9640_DETAILED_POWS_OF_TEN[(_57042_q - -348LL)];
	if ((_57042_q < 0LL)) {
		_57913_pow[0LL]+=1LLU;
	}
	_57033_e2+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_1ad123927_mul_by_log10_log2(_57042_q))) - 127LL))) + 119LL));
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _1ad232690_mul64(_57021_m,_57913_pow[0LL]);
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _1ad232690_mul64(_57021_m,_57913_pow[1LL]);
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _1ad230a89_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_58814_h1 << 9LLU))) | static_cast<jule::U64>(static_cast<jule::U64>((_58910_mid >> 55LLU))));
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LLU) == 0LLU) && (_58714_l0 == 0LLU);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _1aca63ae8_divisible_by_pow5(jule::U64 _59426_m,jule::I64 _59434_k) {
	if ((_59426_m == 0LLU)) {
		return true;
	}
	jule::I64 _59813_i = 0LL;
	for (; _59813_i < _59434_k; (_59813_i)++) {
		{
			if (((_59426_m % 5LL) != 0LLU)) {
				return false;
			}
			_59426_m/=5LLU;
		}
	_iter_next_1b00acb45:;
	}
	_iter_end_1b00acb45:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1acb141a4_divmod1e9(jule::U64 _61014_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_61014_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_61014_x % 1000000000LL))));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _1ad232690_mul64(static_cast<jule::U64>((_61014_x >> 1LLU)),9903520314283042200LLU);
	jule::U64 _6169_q = (_61510_hi >> 28LLU);
	return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>(_6169_q)),static_cast<jule::U32>(static_cast<jule::U32>(_61014_x - static_cast<jule::U64>(static_cast<jule::U64>((_6169_q * 1000000000LL))))));
}



inline void _1ad2576b5_trim(_1ad2569a0_Decimal& _27514_a) {
	while ((_27514_a._field_nd > 0LL) && (_27514_a._field_d[(_27514_a._field_nd - 1LL)] == '0')) {
		{
			(_27514_a._field_nd)--;
		}
	_iter_next_1b00b1e13:;
	}
	_iter_end_1b00b1e13:;
	if ((_27514_a._field_nd == 0LL)) {
		_27514_a._field_dp=0LL;
	}
}



inline void _1ad25782a_right_shift(_1ad2569a0_Decimal& _28521_a,jule::U64 _28533_k) {
	jule::I64 _28613_r = 0LL;
	jule::I64 _28713_w = 0LL;
	jule::U64 _29013_n = 0LLU;
	for (; ((_29013_n >> _28533_k) == 0LLU); (_28613_r)++) {
		{
			if (_28613_r >= _28521_a._field_nd) {
				if ((_29013_n == 0LLU)) {
					_28521_a._field_nd=0LL;
					return;
				}
				while (((_29013_n >> _28533_k) == 0LLU)) {
					{
						_29013_n=static_cast<jule::U64>((_29013_n * 10LLU));
						(_28613_r)++;
					}
				_iter_next_1b00b5e6c:;
				}
				_iter_end_1b00b5e6c:;
				goto _iter_end_1b00b4498;
			}
			jule::U64 _30413_c = static_cast<jule::U64>(_28521_a._field_d[_28613_r]);
			_29013_n=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_29013_n * 10LLU))) + _30413_c)) - '0');
		}
	_iter_next_1b00b4498:;
	}
	_iter_end_1b00b4498:;
	_28521_a._field_dp-=static_cast<jule::I64>((_28613_r - 1LL));
	jule::U64 _3099_mask = static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LL << _28533_k))) - 1LLU));
	for (; _28613_r < _28521_a._field_nd; (_28613_r)++) {
		{
			jule::U64 _31313_c = static_cast<jule::U64>(_28521_a._field_d[_28613_r]);
			jule::U64 _31413_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			_28521_a._field_d[_28713_w]=static_cast<jule::U8>(static_cast<jule::U8>(_31413_dig + '0'));
			(_28713_w)++;
			_29013_n=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_29013_n * 10LLU))) + _31313_c)) - '0');
		}
	_iter_next_1b00b8359:;
	}
	_iter_end_1b00b8359:;
	while ((_29013_n > 0LLU)) {
		{
			jule::U64 _32313_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			if ((_28713_w < 800LL)) {
				_28521_a._field_d[_28713_w]=static_cast<jule::U8>(static_cast<jule::U8>(_32313_dig + '0'));
				(_28713_w)++;
			} else if ((_32313_dig > 0LLU)) {
				_28521_a._field_trunc=true;
			}
			_29013_n=static_cast<jule::U64>((_29013_n * 10LLU));
		}
	_iter_next_1b00b9998:;
	}
	_iter_end_1b00b9998:;
	_28521_a._field_nd=_28713_w;
	_1ad2576b5_trim(_28521_a);
}



inline jule::Bool _1ad257990_prefix_is_less_than(jule::Array<jule::U8,800> _33924_b,jule::I64 _33938_end,jule::Str _33948_s) {
	jule::I64 _34013_i = 0LL;
	for (; _34013_i < static_cast<jule::I64>(static_cast<jule::I64>(_33948_s.len())); (_34013_i)++) {
		{
			if (_34013_i >= _33938_end) {
				return true;
			}
			if (_33924_b[_34013_i] != _33948_s[_34013_i]) {
				return _33924_b[_34013_i] < _33948_s[_34013_i];
			}
		}
	_iter_next_1b00bd98b:;
	}
	_iter_end_1b00bd98b:;
	return false;
}



inline void _1ad257b05_left_shift(_1ad2569a0_Decimal& _35320_a,jule::U64 _35332_k) {
	jule::I64 _35413_delta = _1acc84951_LEFTCHEATS[static_cast<jule::I64>(_35332_k)]._field_delta;
	if (_1ad257990_prefix_is_less_than(_35320_a._field_d,_35320_a._field_nd,_1acc84951_LEFTCHEATS[static_cast<jule::I64>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::I64 _35913_r = _35320_a._field_nd;
	jule::I64 _36013_w = _35320_a._field_nd + _35413_delta;
	jule::U64 _36313_n = 0LLU;
	(_35913_r)--;
	for (; (_35913_r >= 0LL); (_35913_r)--) {
		{
			_36313_n+=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_35320_a._field_d[_35913_r]))) - '0'))) << _35332_k);
			jule::U64 _36713_quo = (_36313_n / 10LLU);
			jule::U64 _36813_rem = _36313_n - static_cast<jule::U64>(static_cast<jule::U64>(10LLU * _36713_quo));
			(_36013_w)--;
			if ((_36013_w < 800LL)) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(static_cast<jule::U8>(_36813_rem + '0'));
			} else if ((_36813_rem != 0LLU)) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_36713_quo;
		}
	_iter_next_1b00c2594:;
	}
	_iter_end_1b00c2594:;
	while ((_36313_n > 0LLU)) {
		{
			jule::U64 _38013_quo = (_36313_n / 10LLU);
			jule::U64 _38113_rem = _36313_n - static_cast<jule::U64>(static_cast<jule::U64>(10LLU * _38013_quo));
			(_36013_w)--;
			if ((_36013_w < 800LL)) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(static_cast<jule::U8>(_38113_rem + '0'));
			} else if ((_38113_rem != 0LLU)) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_38013_quo;
		}
	_iter_next_1b00c5ab4:;
	}
	_iter_end_1b00c5ab4:;
	_35320_a._field_nd+=_35413_delta;
	if ((_35320_a._field_nd >= 800LL)) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_1ad2576b5_trim(_35320_a);
}



inline jule::Bool _1ad257c6a_should_round_up(_1ad2569a0_Decimal& _40021_a,jule::I64 _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[_40033_nd] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (((_40021_a._field_d[(_40033_nd - 1LL)] - '0') & 1LL) != 0LLU);
	}
	return _40021_a._field_d[_40033_nd] >= '5';
}



inline jule::Str _1ad258089_fmt_uint(jule::U64 _6217_i,jule::I64 _6225_base) {
	if ((true && (_6217_i < 100LLU)) && (_6225_base == 10LL)) {
		return _1ad2584c9_small(static_cast<jule::I64>(static_cast<jule::I64>(_6217_i)));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _1ad2587a4_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _1ad2581ee_fmt_int(jule::I64 _7316_i,jule::I64 _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _1ad2584c9_small(static_cast<jule::I64>(static_cast<jule::I64>(_7316_i)));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _1ad2587a4_fmt_bits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7316_i)),_7324_base,(_7316_i < 0LL),false);
	return _7713_s;
}



inline jule::Str _1ad258364_itoa(jule::I64 _8213_i) {
	return _1ad2581ee_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_8213_i)),10LL);
}



inline jule::Str _1ad2584c9_small(jule::I64 _8710_i) {
	if ((_8710_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8710_i,(_8710_i + 1LL));
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(_8710_i << 1LLU,((_8710_i << 1LLU) + 2LL));
}



inline jule::Bool _1ad25863e_is_power_of_two(jule::I64 _9420_x) {
	return ((_9420_x & static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_9420_x - 1LL))))) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1ad2587a4_fmt_bits(jule::Slice<jule::U8> _10317_dst,jule::U64 _10334_u,jule::I64 _10342_base,jule::Bool _10353_neg,jule::Bool _10364_append_) {
	jule::Slice<jule::U8> _10381_d = jule::Slice<jule::U8>();
	jule::Str _10392_s = jule::Str();
	if ((_10342_base < 2LL) || (_10342_base > 36LL)) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:105:9"));;
	}
	jule::Slice<jule::U8> _10913_a = jule::Slice<jule::U8>::alloc(65LL);
	jule::I64 _11013_i = _10913_a.len();
	if (_10353_neg) {
		_10334_u=static_cast<jule::U64>((-(_10334_u)));
	}
	if ((_10342_base == 10LL)) {
		
		jule::U64 _15117_us = static_cast<jule::U64>(_10334_u);
		while ((_15117_us >= 100LLU)) {
			{
				jule::U64 _15317_is = (_15117_us % 100LL) << 1LLU;
				_15117_us/=100LLU;
				_11013_i-=2LL;
				_10913_a[(_11013_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15317_is + 1LLU))]);
				_10913_a[(_11013_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15317_is + 0LLU))]);
			}
		_iter_next_1b00d6c5c:;
		}
		_iter_end_1b00d6c5c:;
		jule::U64 _16113_is = _15117_us << 1LLU;
		(_11013_i)--;
		_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_16113_is + 1LLU))]);
		if ((_15117_us >= 10LLU)) {
			(_11013_i)--;
			_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_16113_is)]);
		}
	} else if (_1ad25863e_is_power_of_two(_10342_base)) {
		jule::U64 _17613_shift = (static_cast<jule::U64>(_1ad227d4a_trailing_zeros(static_cast<jule::U64>(static_cast<jule::U64>(_10342_base)))) & 7LLU);
		jule::U64 _17713_b = static_cast<jule::U64>(_10342_base);
		jule::U64 _17813_m = (static_cast<jule::U64>(_10342_base) - 1LLU);
		while (_10334_u >= _17713_b) {
			{
				(_11013_i)--;
				_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10334_u) & _17813_m)]);
				_10334_u>>=_17613_shift;
			}
		_iter_next_1b00e174a:;
		}
		_iter_end_1b00e174a:;
		(_11013_i)--;
		_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10334_u))]);
	} else {
		jule::U64 _18913_b = static_cast<jule::U64>(_10342_base);
		while (_10334_u >= _18913_b) {
			{
				(_11013_i)--;
				jule::U64 _19517_q = jule::div(_10334_u,_18913_b);
				_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10334_u - static_cast<jule::U64>(static_cast<jule::U64>(_19517_q * _18913_b))))]);
				_10334_u=_19517_q;
			}
		_iter_next_1b00e3e78:;
		}
		_iter_end_1b00e3e78:;
		(_11013_i)--;
		_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10334_u))]);
	}
	if (_10353_neg) {
		(_11013_i)--;
		_10913_a[_11013_i]='-';
	}
	if (_10364_append_) {
		_10381_d=jule::append(_10317_dst,_10913_a.slice(_11013_i));
		return std::make_tuple(_10381_d,_10392_s);
	}
	_10392_s=static_cast<jule::Str>(_10913_a.slice(_11013_i));
	return std::make_tuple(_10381_d,_10392_s);
}



inline void _1ad2cb6c3_lshift_unsig(_1ad2c1d8e_Const& _56722_c,_1ad2c1d8e_Const& _56733_x) {
	jule::U64 _5689_l = _1ad2c4358_as_u64(&_56722_c);
	jule::U64 _5699_r = _1ad2c4358_as_u64(&_56733_x);
	_1ad2c4c71_set_u64(&_56722_c, static_cast<jule::U64>(_5689_l << _5699_r));
}



inline void _1ad2cba69_rshift_unsig(_1ad2c1d8e_Const& _57322_c,_1ad2c1d8e_Const& _57333_x) {
	jule::U64 _5749_l = _1ad2c4358_as_u64(&_57322_c);
	jule::U64 _5759_r = _1ad2c4358_as_u64(&_57333_x);
	_1ad2c4c71_set_u64(&_57322_c, static_cast<jule::U64>(_5749_l >> _5759_r));
}



inline jule::Str _1ad348267_real_kind_of(jule::Str _4521_kind) {
	{
		auto &_match_expr{ _4521_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ae027b38:;
			{
				return _1ad347c39_SYS_INT;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ae027b9e:;
			{
				return _1ad347d5a_SYS_UINT;
			}
		}
		else {
			_case_begin_1ae0238e2:;
			{
				return _4521_kind;
			}
		}
		_match_end_1ae023bcd:;
	}
}



inline jule::I64 _1ad34850e_bitsize_of(jule::Str _5919_k) {
	{
		auto &_match_expr{ _5919_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1ae02995e:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1ae0299c5:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1ae029585:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1ae0295eb:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1ae029673:;
			{
				return _1ad347b18_BIT_SIZE;
			}
		}
		else {
			_case_begin_1ae0231b6:;
			{
				return -1LL;
			}
		}
		_match_end_1ae029310:;
	}
}



inline jule::Str _1ad34883e_int_from_bits(jule::I64 _8622_bits) {
	{
		auto &_match_expr{ _8622_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1ae02b91c:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ae02ba2c:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ae02ba93:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ae02b71e:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1ae02a278:;
			{
				return jule::Str();
			}
		}
		_match_end_1ae02b202:;
	}
}



inline jule::Str _1ad348b4c_uint_from_bits(jule::I64 _10423_bits) {
	{
		auto &_match_expr{ _10423_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1ae02ce18:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ae02d028:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ae02d08e:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ae02cc1a:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1ae02c412:;
			{
				return jule::Str();
			}
		}
		_match_end_1ae02c9a6:;
	}
}



inline jule::Str _1ad348e5a_float_from_bits(jule::I64 _12224_bits) {
	{
		auto &_match_expr{ _12224_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1ae02e3ae:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ae02e425:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1ae02d90d:;
			{
				return jule::Str();
			}
		}
		_match_end_1ae02dea2:;
	}
}



inline jule::Bool _1ad349ba3_check_bit_float(jule::Str _15024_val,jule::I64 _15034_bit) {
	({
		auto except = _1ace68041_parse_float(_15024_val,_15034_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1ad349eb1_bitsize_of_float(jule::F64 _16025_x) {
	{
		
		if ((-340282346638528860000000000000000000000.0 <= _16025_x) && (_16025_x <= 340282346638528860000000000000000000000.0)) {
			_case_begin_1ae034480:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1ae034d32:;
			{
				return 64LL;
			}
		}
		_match_end_1ae034c66:;
	}
}



inline jule::I64 _1ad34a2be_bitsize_of_int(jule::I64 _17623_x) {
	{
		
		if ((-128LL <= _17623_x) && (_17623_x <= 127LL)) {
			_case_begin_1ae036240:;
			{
				return 8LL;
			}
		}
		else if ((-32768LL <= _17623_x) && (_17623_x <= 32767LL)) {
			_case_begin_1ae0362a6:;
			{
				return 16LL;
			}
		}
		else if ((-2147483648LL <= _17623_x) && (_17623_x <= 2147483647LL)) {
			_case_begin_1ae036383:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1ae0358d2:;
			{
				return 64LL;
			}
		}
		_match_end_1ae0360ca:;
	}
}



inline jule::I64 _1ad34a5cc_bitsize_of_uint(jule::U64 _19624_x) {
	{
		
		if ((_19624_x <= 255LLU)) {
			_case_begin_1ae0384b7:;
			{
				return 8LL;
			}
		}
		else if ((_19624_x <= 65535LLU)) {
			_case_begin_1ae03852d:;
			{
				return 16LL;
			}
		}
		else if ((_19624_x <= 4294967295LLU)) {
			_case_begin_1ae03860a:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1ae038286:;
			{
				return 64LL;
			}
		}
		_match_end_1ae038187:;
	}
}



inline void _1ad34a775_update_target(void) {
	{
		{
			auto &_match_expr{ _1a92b68e3_ARCH };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1ae038671:;
				{
					_1ad347b18_BIT_SIZE=64LL;
					_1ad347c39_SYS_INT=jule::Str("i64", 3);
					_1ad347d5a_SYS_UINT=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1ae039650:;
				{
					_1ad347b18_BIT_SIZE=32LL;
					_1ad347c39_SYS_INT=jule::Str("i32", 3);
					_1ad347d5a_SYS_UINT=jule::Str("u32", 3);
				}
			}
			_match_end_1ae039b28:;
		}
	}
}



inline void _1ad34a91d_init(void) {
	_1ad34a775_update_target();
}



inline jule::F64 _1ad34d239_min(jule::Str _4716_k) {
	_4716_k=_1ad348267_real_kind_of(_4716_k);
	{
		auto &_match_expr{ _4716_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ae03cc08:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ae03c9d8:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ae03ca4e:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ae03cab5:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ae03c840:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ae03c8a6:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1ae03930e:;
			{
				return 0LL;
			}
		}
		_match_end_1ae039e8b:;
	}
}



inline jule::F64 _1ad34d58b_max(jule::Str _6916_k) {
	_6916_k=_1ad348267_real_kind_of(_6916_k);
	{
		auto &_match_expr{ _6916_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ae03e9b8:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ae03ea2e:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ae03ea95:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ae03e820:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ae03e886:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ae03e8ec:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ae03e468:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ae03e4ce:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ae03e545:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ae03e5ab:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1ae03c4bb:;
			{
				return 0LL;
			}
		}
		_match_end_1ae03d489:;
	}
}



inline jule::Bool _1ad34da64_is_i8_compatible(jule::Str _629_k) {
	return (_629_k == jule::Str("i8", 2));
}



inline jule::Bool _1ad34ddb6_is_i16_compatible(jule::Str _1130_k) {
	return (_1130_k == jule::Str("i8", 2)) || (_1130_k == jule::Str("i16", 3));
}



inline jule::Bool _1ad34e1c4_is_i32_compatible(jule::Str _1730_k) {
	return (((_1730_k == jule::Str("i8", 2)) || (_1730_k == jule::Str("i16", 3))) || (_1730_k == jule::Str("i32", 3))) || (_1730_k == jule::Str("u8", 2));
}



inline jule::Bool _1ad34e526_is_i64_compatible(jule::Str _2530_k) {
	return (((_2530_k == jule::Str("i8", 2)) || (_2530_k == jule::Str("i16", 3))) || (_2530_k == jule::Str("i32", 3))) || (_2530_k == jule::Str("i64", 3));
}



inline jule::Bool _1ad34e834_is_u8_compatible(jule::Str _3329_k) {
	return (_3329_k == jule::Str("u8", 2));
}



inline jule::Bool _1ad34eb42_is_u16_compatible(jule::Str _3830_k) {
	return (_3830_k == jule::Str("u8", 2)) || (_3830_k == jule::Str("u16", 3));
}



inline jule::Bool _1ad34ee50_is_u32_compatible(jule::Str _4330_k) {
	return ((_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3))) || (_4330_k == jule::Str("u32", 3));
}



inline jule::Bool _1ad3502e6_is_u64_compatible(jule::Str _5030_k) {
	return (((_5030_k == jule::Str("u8", 2)) || (_5030_k == jule::Str("u16", 3))) || (_5030_k == jule::Str("u32", 3))) || (_5030_k == jule::Str("u64", 3));
}



inline jule::Bool _1ad350604_is_f32_compatible(jule::Str _5830_k) {
	return (_5830_k == jule::Str("f32", 3));
}



inline jule::Bool _1ad350912_is_f64_compatible(jule::Str _6330_k) {
	return (_6330_k == jule::Str("f64", 3));
}



inline jule::Bool _1ad350cec_types_are_compatible(jule::Str _7033_k1,jule::Str _7042_k2) {
	{
		auto &_match_expr{ _7033_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1ae048e23:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ae048e89:;
			{
				return (_7042_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ae049055:;
			{
				return (_7042_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ae0490bb:;
			{
				return (_7042_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ae048a38:;
			{
				return _1ad34da64_is_i8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ae048a9e:;
			{
				return _1ad34ddb6_is_i16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ae048b15:;
			{
				return _1ad34e1c4_is_i32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ae048b7b:;
			{
				return _1ad34e526_is_i64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ae049176:;
			{
				return _1ad34e834_is_u8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ae0491dc:;
			{
				return _1ad34eb42_is_u16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ae049253:;
			{
				return _1ad34ee50_is_u32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ae0492b9:;
			{
				return _1ad3502e6_is_u64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ae049330:;
			{
				return _1ad350604_is_f32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ae049396:;
			{
				return _1ad350912_is_f64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1ae04941d:;
			{
				return (_7042_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1ae049495:;
			{
				return (_7042_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1ae0426ad:;
			{
				return false;
			}
		}
		_match_end_1ae042625:;
	}
}



inline jule::Bool _1ad35110a_is_i16_greater(jule::Str _10927_k) {
	return (_10927_k == jule::Str("i8", 2));
}



inline jule::Bool _1ad351418_is_i32_greater(jule::Str _11427_k) {
	return (_11427_k == jule::Str("i8", 2)) || (_11427_k == jule::Str("i16", 3));
}



inline jule::Bool _1ad351726_is_i64_greater(jule::Str _11927_k) {
	return ((_11927_k == jule::Str("i8", 2)) || (_11927_k == jule::Str("i16", 3))) || (_11927_k == jule::Str("i32", 3));
}



inline jule::Bool _1ad351a34_is_u16_greater(jule::Str _12627_k) {
	return (_12627_k == jule::Str("u8", 2));
}



inline jule::Bool _1ad351e63_is_u32_greater(jule::Str _13127_k) {
	return (_13127_k == jule::Str("u8", 2)) || (_13127_k == jule::Str("u16", 3));
}



inline jule::Bool _1ad352271_is_u64_greater(jule::Str _13727_k) {
	return ((_13727_k == jule::Str("u8", 2)) || (_13727_k == jule::Str("u16", 3))) || (_13727_k == jule::Str("u32", 3));
}



inline jule::Bool _1ad35257e_is_f32_greater(jule::Str _14423_k) {
	return (_14423_k != jule::Str("f64", 3));
}



inline jule::Bool _1ad35288c_is_f64_greater(jule::Str _14923_k) {
	return true;
}



inline jule::Bool _1ad352c77_is_greater(jule::Str _15423_k1,jule::Str _15432_k2) {
	{
		auto &_match_expr{ _15423_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ae053d40:;
			{
				return _1ad3542a6_is_sig_int(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ae053da6:;
			{
				return _1ad354608_is_unsig_int(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ae053a65:;
			{
				return _1ad354608_is_unsig_int(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ae053acb:;
			{
				return _1ad35110a_is_i16_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ae053b42:;
			{
				return _1ad351418_is_i32_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ae053878:;
			{
				return _1ad351726_is_i64_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ae0538de:;
			{
				return _1ad351a34_is_u16_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ae053955:;
			{
				return _1ad351e63_is_u32_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ae0539bb:;
			{
				return _1ad352271_is_u64_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ae053e61:;
			{
				return _1ad35257e_is_f32_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ae053ec7:;
			{
				return _1ad35288c_is_f64_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1ae05403d:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ae053548:;
			{
				return false;
			}
		}
		_match_end_1ae0535d1:;
	}
}



inline jule::Bool _1ad3542a6_is_sig_int(jule::Str _2723_k) {
	return ((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3))) || (_2723_k == jule::Str("int", 3));
}



inline jule::Bool _1ad354608_is_unsig_int(jule::Str _3625_k) {
	return (((((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3))) || (_3625_k == jule::Str("uint", 4))) || (_3625_k == jule::Str("uintptr", 7));
}



inline jule::Bool _1ad354916_is_int(jule::Str _4615_k) {
	return _1ad3542a6_is_sig_int(_4615_k) || _1ad354608_is_unsig_int(_4615_k);
}



inline jule::Bool _1ad354c68_is_float(jule::Str _5117_k) {
	return (_5117_k == jule::Str("f32", 3)) || (_5117_k == jule::Str("f64", 3));
}



inline jule::Bool _1ad355076_is_num(jule::Str _5615_k) {
	return _1ad354916_is_int(_5615_k) || _1ad354c68_is_float(_5615_k);
}



inline jule::Bool _1ad3a887c_is_ascii(jule::I32 _1017_r) {
	
	return (_1017_r <= 127LL);
}



inline jule::I32 _1ad3a8d66_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if ((_1816_bytes.len() == 0LL)) {
		return 0LL;
	}
	jule::I32 _2313_r = 0LL;
	if ((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL)) {
		jule::I64 _2517_i = 0LL;
		_2313_r=static_cast<jule::I32>(_1ad3cc72a_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _1a90ba61a_decode_rune(_1816_bytes);
	}
	return _2313_r;
}



inline jule::Str _1ad3cbbd0_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1ad3cc032_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if ((_4215_bytes.len() == 0LL)) {
		return jule::Str();
	}
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_4215_bytes.len()));
	jule::I64 _4813_i = 0LL;
	while (_4813_i < static_cast<jule::I64>(static_cast<jule::I64>(_4215_bytes.len()))) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];
			if (_5013_b == '\\') {
				_4713_s=jule::append(_4713_s,_1ad3ccb15_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;
				jule::I64 _5421_size;
				std::tie(_5418_r,_5421_size) = _1a90ba61a_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_1a90bbc04_append_rune(_4713_s,_5418_r);
			}
		}
	_iter_next_1ae0641c4:;
	}
	_iter_end_1ae0641c4:;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1ad3cc340_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if ((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\')) {
		return std::make_tuple(_6241_seq,_6252_ok);
	}
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1b0206585:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b02072cd:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b0207344:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1b02073aa:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1b0207421:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1b0207498:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1b0207520:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1b0207597:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1b020761e:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1b0207696:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_1b02071ac:;
	}
	_6252_ok=(_6241_seq != 0LLU);
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1ad3cc72a_rune_from_esq_seq(jule::Slice<jule::U8> _8422_bytes,jule::I64& _8442_i) {
	jule::U8 _8510_b;
	jule::Bool _8513_ok;
	std::tie(_8510_b,_8513_ok) = _1ad3cc340_try_btoa_common_esq(_8422_bytes.slice(_8442_i));
	(_8442_i)++;
	if (_8513_ok) {
		(_8442_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_8510_b));
	}
	{
		auto &_match_expr{ _8422_bytes[_8442_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1b020c6bd:;
			{
				
				jule::I32 _9513_r = static_cast<jule::I32>(({
					auto except = _1aceeeaab_parse_uint(static_cast<jule::Str>(_8422_bytes.slice((_8442_i + 1LL),(_8442_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:95:22"));
					(except.result);
				}));
				_8442_i+=5LL;
				return _9513_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1b020daa9:;
			{
				
				jule::I32 _10013_r = static_cast<jule::I32>(({
					auto except = _1aceeeaab_parse_uint(static_cast<jule::Str>(_8422_bytes.slice((_8442_i + 1LL),(_8442_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:100:22"));
					(except.result);
				}));
				_8442_i+=9LL;
				return _10013_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1b020ca0e:;
			{
				
				jule::Slice<jule::U8> _10513_seq = _8422_bytes.slice((_8442_i + 1LL),(_8442_i + 3LL));
				_8442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1aceeeaab_parse_uint(static_cast<jule::Str>(_10513_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:107:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1b020c2b1:;
			{
				
				jule::Slice<jule::U8> _11013_seq = _8422_bytes.slice(_8442_i,(_8442_i + 3LL));
				_8442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1aceeeaab_parse_uint(static_cast<jule::Str>(_11013_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:112:18"));
					(except.result);
				})));
			}
		}
		_match_end_1b020b865:;
	}
}



inline jule::Slice<jule::U8> _1ad3ccb15_str_esq_seq(jule::Slice<jule::U8> _11616_bytes,jule::I64& _11636_i) {
	jule::I32 _1179_r = _1ad3cc72a_rune_from_esq_seq(_11616_bytes,_11636_i);
	if ((_1179_r <= 255LL)) {
		return jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_1179_r)))});
	}
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1179_r));
}



inline jule::I64 _1ad4a7be0_find_format_prefix(jule::Slice<jule::U8>& _924_bytes,jule::I64& _940_start) {
	jule::I64 _1013_i = _940_start;
	while (_1013_i < static_cast<jule::I64>(static_cast<jule::I64>(_924_bytes.len()))) {
		{
			jule::I32 _1214_r;
			jule::I64 _1217_size;
			std::tie(_1214_r,_1217_size) = _1a90ba61a_decode_rune(_924_bytes.slice(_1013_i));
			if (_1214_r == '{') {
				return _1013_i;
			}
			_1013_i+=_1217_size;
		}
	_iter_next_1b024037c:;
	}
	_iter_end_1b024037c:;
	return -1LL;
}



inline jule::Slice<jule::U8> _1ad486c68_get_format_range(jule::I64& _2630_i,jule::Slice<jule::U8>& _2643_bytes) {
	jule::I64 _279_start = _2630_i;
	jule::I64 _2813_braces = 0LL;
	while (_2630_i < static_cast<jule::I64>(static_cast<jule::I64>(_2643_bytes.len()))) {
		{
			jule::I32 _3014_r;
			jule::I64 _3017_size;
			std::tie(_3014_r,_3017_size) = _1a90ba61a_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1b024378c:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1b0243957:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2643_bytes.slice(_279_start,_2630_i);
						}
					}
				}
				_match_end_1b0243902:;
			}
		}
	_iter_next_1b0242967:;
	}
	_iter_end_1b0242967:;
	return nullptr;
}



inline jule::Slice<jule::U8> _1ad49344a_fmt_by_default(jule::Any& _4620_arg) {
	if (_4620_arg == jule::Any(jule::Any(nullptr))) {
		return jule::Slice<jule::U8>({'n','i','l'});
	}
	{
		auto &_match_expr{ _4620_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1b0245a69:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1acac8a5e_fmt_float(static_cast<jule::F64>(static_cast<jule::F64>(_4620_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1b024520b:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1acac8a5e_fmt_float(static_cast<jule::F64>(_4620_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1b02459c0:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ad2581ee_fmt_int(static_cast<jule::I8>(_4620_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1b0245d88:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ad2581ee_fmt_int(static_cast<jule::I16>(_4620_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1b02455a2:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ad2581ee_fmt_int(static_cast<jule::I32>(_4620_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1b0245618:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ad2581ee_fmt_int(static_cast<jule::I64>(_4620_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1b024567e:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ad258089_fmt_uint(static_cast<jule::U8>(_4620_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1b02456e5:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ad258089_fmt_uint(static_cast<jule::U16>(_4620_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1b024575b:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ad258089_fmt_uint(static_cast<jule::U32>(_4620_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1b02457c2:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ad258089_fmt_uint(static_cast<jule::U64>(_4620_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1b0245e32:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4620_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1b0245e98:;
			{
				if (_4620_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>({'t','r','u','e'});
				}
				return jule::Slice<jule::U8>({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1b0244ea8:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4620_arg));
			}
		}
		_match_end_1b0244914:;
	}
}



inline jule::Slice<jule::U8> _1ad4852b6_apply_fmt_by_default(jule::I64& _7530_j,jule::Slice<jule::Any>& _7539_args) {
	jule::Any _769_arg = _7539_args[_7530_j];
	(_7530_j)++;
	return _1ad49344a_fmt_by_default(_769_arg);
}



inline jule::Slice<jule::U8> _1ad49c2ab_apply_fmt(jule::Slice<jule::U8>& _8319_fmt,jule::I64& _8337_j,jule::Slice<jule::Any>& _8346_args) {
	if ((_8319_fmt.len() == 2LL)) {
		return _1ad4852b6_apply_fmt_by_default(_8337_j,_8346_args);
	}
	if ((_8319_fmt.len() == 4LL) && (_8319_fmt == jule::Slice<jule::U8>({'{','{','}','}'}))) {
		return jule::Slice<jule::U8>({'{','}'});
	}
	return _8319_fmt;
}



inline jule::Slice<jule::U8> _1ad4901e4_format_bytes(jule::Str _9717_fmt,jule::Slice<jule::Any> _9727_args) {
	jule::Slice<jule::U8> _9813_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_9717_fmt);
	if ((_9727_args.len() == 0LL)) {
		return _9813_fmt_bytes;
	}
	jule::Slice<jule::U8> _10413_bytes = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_9717_fmt.len()));
	jule::I64 _10613_j = 0LL;
	jule::I64 _10713_last = 0LL;
	jule::I64 _10813_i = _1ad4a7be0_find_format_prefix(_9813_fmt_bytes,_10713_last);
	for (; (_10813_i != -1LL); _10813_i=static_cast<jule::I64>(_1ad4a7be0_find_format_prefix(_9813_fmt_bytes,_10813_i))) {
		{
			_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10713_last,_10813_i));
			jule::Slice<jule::U8> _11117_format = _1ad486c68_get_format_range(_10813_i,_9813_fmt_bytes);
			if ((_11117_format == nullptr)) {
				goto _iter_next_1b02536e2;
			}
			_10413_bytes=jule::append(_10413_bytes,_1ad49c2ab_apply_fmt(_11117_format,_10613_j,_9727_args));
			if (_10613_j >= static_cast<jule::I64>(static_cast<jule::I64>(_9727_args.len()))) {
				_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10813_i));
				_10713_last=static_cast<jule::I64>(_9813_fmt_bytes.len());
				goto _iter_end_1b02536e2;
			}
			_10713_last=_10813_i;
		}
	_iter_next_1b02536e2:;
	}
	_iter_end_1b02536e2:;
	if (_10713_last < static_cast<jule::I64>(static_cast<jule::I64>(_9813_fmt_bytes.len()))) {
		_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10713_last));
	}
	return _10413_bytes;
}



inline jule::Str _1ad4a15e0_format(jule::Str _15715_fmt,jule::Slice<jule::Any> _15725_args) {
	return static_cast<jule::Str>(_1ad4901e4_format_bytes(_15715_fmt,_15725_args));
}



inline jule::Bool _1ac67c15c_kind_uses_generics(jule::Ptr<_1ad429931_TypeKind> _40523_k,jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>& _40538_generics) {
	jule::Str _4069_pk = _1ad429d4e_to_str(_40523_k.ptr());
	{
		auto &expr = _40538_generics;
		auto it = expr.begin();
		_iter_begin_1b0c4a606:;
		if (it != expr.end()) {
			jule::Ptr<_1ab01c845_GenericDecl> &_1b0c4a6e4_g = *it;
			{
				if (_1a90c008c_contains(_4069_pk,_1b0c4a6e4_g.get()._field_ident)) {
					return true;
				}
			}
			_iter_next_1b0c4a606:;
			++it;
			goto _iter_begin_1b0c4a606;
		}
		_iter_end_1b0c4a606:;
	}
	return false;
}



inline jule::Bool _1ac67c5d0_parameter_uses_generics(jule::Ptr<_1ac674bd2_Param>& _41529_p,jule::Slice<jule::Ptr<_1ab01c845_GenericDecl>>& _41541_generics) {
	if (_1ac6753db_is_self(_41529_p.ptr())) {
		return false;
	}
	return _1ac67c15c_kind_uses_generics(_41529_p.get()._field_kind.get()._field_kind,_41541_generics);
}



inline jule::Ptr<_1ad42e293_TypeSymbol> _1ac680924_build_type(jule::Ptr<_1aae075dc_TypeDecl> _8419_t) {
	if ((_8419_t == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(_8419_t,jule::Ptr<_1ad429931_TypeKind>()));
}



inline jule::Ptr<_1ad3e7c84_Value> _1ac680c76_build_expr(jule::Ptr<_1aadb528c_Expr> _9319_expr) {
	if ((_9319_expr == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1ad3e7c84_Value>(_1ad3e7c84_Value(_9319_expr,jule::Ptr<_1ad3e6975_Data>()));
}



inline jule::Ptr<_1ad428996_TypeAlias> _1ac681084_build_type_alias(jule::Ptr<_1ab02262a_TypeAliasDecl> _10225_decl) {
	return jule::new_ptr<_1ad428996_TypeAlias>(_1ad428996_TypeAlias(_10225_decl.get()._field_scope,_10225_decl.get()._field_public,_10225_decl.get()._field_cpp_linked,jule::Bool(),jule::Bool(),_10225_decl.get()._field_token,_10225_decl.get()._field_ident,_1ac680924_build_type(_10225_decl.get()._field_kind),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>()));
}



inline jule::Ptr<_1ac65ca77_Field> _1ac6813d6_build_field(jule::Ptr<_1ab024d36_FieldDecl> _11320_decl) {
	return jule::new_ptr<_1ac65ca77_Field>(_1ac65ca77_Field(jule::Ptr<_1ac661075_Struct>(),_11320_decl.get()._field_token,_11320_decl.get()._field_public,_11320_decl.get()._field_mutable,_11320_decl.get()._field_ident,_1ac680924_build_type(_11320_decl.get()._field_kind),_11320_decl.get()._field_default));
}



inline jule::Slice<jule::Ptr<_1ac65ca77_Field>> _1ac6816e4_build_fields(jule::Slice<jule::Ptr<_1ab024d36_FieldDecl>>& _12422_decls) {
	jule::Slice<jule::Ptr<_1ac65ca77_Field>> _12513_fields = jule::Slice<jule::Ptr<_1ac65ca77_Field>>::alloc(0LL,static_cast<jule::I64>(_12422_decls.len()));
	{
		auto &expr = _12422_decls;
		auto it = expr.begin();
		_iter_begin_1b0c50c16:;
		if (it != expr.end()) {
			jule::Ptr<_1ab024d36_FieldDecl> _1b0c5083c_decl = *it;
			{
				_12513_fields = jule::alloc_for_append(_12513_fields,1);_12513_fields.__push(_1ac6813d6_build_field(_1b0c5083c_decl));
			}
			_iter_next_1b0c50c16:;
			++it;
			goto _iter_begin_1b0c50c16;
		}
		_iter_end_1b0c50c16:;
	}
	return _12513_fields;
}



inline jule::Ptr<_1ac661075_Struct> _1ac681a02_build_struct(jule::Ptr<_1ab02561c_StructDecl> _13221_decl) {
	return jule::new_ptr<_1ac661075_Struct>(_1ac661075_Struct(jule::Ptr<_1ad37cd5c_Sema>(),jule::Slice<jule::Ptr<_1ac661075_Struct>>(),jule::Slice<jule::Ptr<_1ac661075_Struct>>(),_13221_decl.get()._field_token,_13221_decl.get()._field_ident,_1ac6816e4_build_fields(_13221_decl.get()._field_fields),jule::Slice<jule::Ptr<_1ac676a08_Fn>>(),jule::Slice<jule::Ptr<_1ad39e037_Var>>(),_13221_decl.get()._field_public,_13221_decl.get()._field_cpp_linked,_13221_decl.get()._field_directives,_13221_decl.get()._field_generics,jule::Slice<jule::Ptr<_1ac85d096_Trait>>(),jule::Slice<jule::Ptr<_1ac664551_StructIns>>()));
}



inline jule::Ptr<_1ac674bd2_Param> _1ac681d10_build_param(jule::Ptr<_1ab01d835_ParamDecl> _14420_decl) {
	return jule::new_ptr<_1ac674bd2_Param>(_1ac674bd2_Param(_14420_decl.get()._field_token,_14420_decl.get()._field_mutable,_14420_decl.get()._field_variadic,_14420_decl.get()._field_reference,_1ac680924_build_type(_14420_decl.get()._field_kind),_14420_decl.get()._field_ident));
}



inline jule::Slice<jule::Ptr<_1ac674bd2_Param>> _1ac6821a6_build_params(jule::Slice<jule::Ptr<_1ab01d835_ParamDecl>>& _15522_decls) {
	jule::Slice<jule::Ptr<_1ac674bd2_Param>> _15613_params = jule::Slice<jule::Ptr<_1ac674bd2_Param>>::alloc(0LL,static_cast<jule::I64>(_15522_decls.len()));
	{
		auto &expr = _15522_decls;
		auto it = expr.begin();
		_iter_begin_1b0c54412:;
		if (it != expr.end()) {
			jule::Ptr<_1ab01d835_ParamDecl> _1b0c54049_decl = *it;
			{
				_15613_params = jule::alloc_for_append(_15613_params,1);_15613_params.__push(_1ac681d10_build_param(_1b0c54049_decl));
			}
			_iter_next_1b0c54412:;
			++it;
			goto _iter_begin_1b0c54412;
		}
		_iter_end_1b0c54412:;
	}
	return _15613_params;
}



inline jule::Ptr<_1ac674385_RetType> _1ac6824b4_build_ret_type(jule::Ptr<_1aadb506c_RetTypeDecl> _16323_decl) {
	if ((_16323_decl.get()._field_idents == nullptr) && (_16323_decl.get()._field_kind == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1ac674385_RetType>(_1ac674385_RetType(_1ac680924_build_type(_16323_decl.get()._field_kind),_16323_decl.get()._field_idents));
}



inline jule::Ptr<_1ac676a08_Fn> _1ac6827c2_build_fn(jule::Ptr<_1ab01da55_FnDecl> _17317_decl) {
	return jule::new_ptr<_1ac676a08_Fn>(_1ac676a08_Fn(jule::Ptr<_1ad37cd5c_Sema>(),_17317_decl.get()._field_token,_17317_decl.get()._field_global,_17317_decl.get()._field_unsafety,_17317_decl.get()._field_public,_17317_decl.get()._field_cpp_linked,_17317_decl.get()._field_statically,_17317_decl.get()._field_exceptional,_17317_decl.get()._field_ident,_17317_decl.get()._field_directives,_17317_decl.get()._field_scope,_17317_decl.get()._field_generics,_1ac6824b4_build_ret_type(_17317_decl.get()._field_result),_1ac6821a6_build_params(_17317_decl.get()._field_params),jule::Ptr<_1ac661075_Struct>(),jule::Slice<jule::Ptr<_1ac67a501_FnIns>>()));
}



inline jule::Slice<jule::Ptr<_1ac676a08_Fn>> _1ac682ad0_build_methods(jule::Slice<jule::Ptr<_1ab01da55_FnDecl>>& _19123_decls) {
	jule::Slice<jule::Ptr<_1ac676a08_Fn>> _19213_methods = jule::Slice<jule::Ptr<_1ac676a08_Fn>>::alloc(0LL,static_cast<jule::I64>(_19123_decls.len()));
	{
		auto &expr = _19123_decls;
		auto it = expr.begin();
		_iter_begin_1b0c58a10:;
		if (it != expr.end()) {
			jule::Ptr<_1ab01da55_FnDecl> _1b0c58636_decl = *it;
			{
				_19213_methods = jule::alloc_for_append(_19213_methods,1);_19213_methods.__push(_1ac6827c2_build_fn(_1b0c58636_decl));
			}
			_iter_next_1b0c58a10:;
			++it;
			goto _iter_begin_1b0c58a10;
		}
		_iter_end_1b0c58a10:;
	}
	return _19213_methods;
}



inline jule::Ptr<_1ac85d096_Trait> _1ac682ddd_build_trait(jule::Ptr<_1ab025b6c_TraitDecl> _19920_decl) {
	return jule::new_ptr<_1ac85d096_Trait>(_1ac85d096_Trait(_19920_decl.get()._field_token,_19920_decl.get()._field_ident,_19920_decl.get()._field_public,jule::Bool(),_1ac682ad0_build_methods(_19920_decl.get()._field_methods),jule::Slice<jule::Ptr<_1ac661075_Struct>>()));
}



inline jule::Ptr<_1ac692a57_EnumItem> _1ac6831eb_build_enum_item(jule::Ptr<_1ab023bd1_EnumItemDecl> _20824_decl) {
	return jule::new_ptr<_1ac692a57_EnumItem>(_1ac692a57_EnumItem(_20824_decl.get()._field_token,_20824_decl.get()._field_ident,_1ac680c76_build_expr(_20824_decl.get()._field_expr)));
}



inline jule::Slice<jule::Ptr<_1ac692a57_EnumItem>> _1ac683509_build_enum_items(jule::Slice<jule::Ptr<_1ab023bd1_EnumItemDecl>>& _21626_decls) {
	jule::Slice<jule::Ptr<_1ac692a57_EnumItem>> _21713_items = jule::Slice<jule::Ptr<_1ac692a57_EnumItem>>::alloc(0LL,static_cast<jule::I64>(_21626_decls.len()));
	{
		auto &expr = _21626_decls;
		auto it = expr.begin();
		_iter_begin_1b0c5b6a0:;
		if (it != expr.end()) {
			jule::Ptr<_1ab023bd1_EnumItemDecl> _1b0c5b2d7_decl = *it;
			{
				_21713_items = jule::alloc_for_append(_21713_items,1);_21713_items.__push(_1ac6831eb_build_enum_item(_1b0c5b2d7_decl));
			}
			_iter_next_1b0c5b6a0:;
			++it;
			goto _iter_begin_1b0c5b6a0;
		}
		_iter_end_1b0c5b6a0:;
	}
	return _21713_items;
}



inline jule::Ptr<_1ac724545_Enum> _1ac683817_build_enum(jule::Ptr<_1ab0245c7_EnumDecl> _22419_decl) {
	return jule::new_ptr<_1ac724545_Enum>(_1ac724545_Enum(_22419_decl.get()._field_token,_22419_decl.get()._field_public,_22419_decl.get()._field_ident,_1ac680924_build_type(_22419_decl.get()._field_kind),_1ac683509_build_enum_items(_22419_decl.get()._field_items)));
}



inline jule::Ptr<_1ad39e037_Var> _1ac683c46_build_var(jule::Ptr<_1ab01e6d2_VarDecl> _23418_decl) {
	return jule::new_ptr<_1ad39e037_Var>(_1ad39e037_Var(jule::Ptr<_1ad33ce0a_Scope>(),_23418_decl.get()._field_token,_23418_decl.get()._field_ident,_23418_decl.get()._field_cpp_linked,_23418_decl.get()._field_constant,_23418_decl.get()._field_mutable,_23418_decl.get()._field_public,jule::Bool(),_23418_decl.get()._field_statically,_23418_decl.get()._field_reference,_1ac680924_build_type(_23418_decl.get()._field_kind),_1ac680c76_build_expr(_23418_decl.get()._field_expr),static__1ac67e181_new(),_23418_decl.get()._field_directives,jule::Ptr<_1ad39cc28_IterRelation>(),jule::Slice<jule::Ptr<_1ad39e037_Var>>()));
}



inline jule::Slice<jule::Ptr<_1ad39e037_Var>> _1ac684054_build_vars(jule::Slice<jule::Ptr<_1ab01e6d2_VarDecl>> _25119_decls) {
	jule::Slice<jule::Ptr<_1ad39e037_Var>> _25213_vars = jule::Slice<jule::Ptr<_1ad39e037_Var>>::alloc(0LL,static_cast<jule::I64>(_25119_decls.len()));
	{
		auto &expr = _25119_decls;
		auto it = expr.begin();
		_iter_begin_1b0c60819:;
		if (it != expr.end()) {
			jule::Ptr<_1ab01e6d2_VarDecl> _1b0c60440_decl = *it;
			{
				_25213_vars = jule::alloc_for_append(_25213_vars,1);_25213_vars.__push(_1ac683c46_build_var(_1b0c60440_decl));
			}
			_iter_next_1b0c60819:;
			++it;
			goto _iter_begin_1b0c60819;
		}
		_iter_end_1b0c60819:;
	}
	return _25213_vars;
}



inline jule::Ptr<_1ac76d3b3_Impl> _1ac684362_build_impl(jule::Ptr<_1ab0261bc_Impl> _25919_decl) {
	return jule::new_ptr<_1ac76d3b3_Impl>(_1ac76d3b3_Impl(_25919_decl.get()._field_base,_25919_decl.get()._field_dest,_1ac682ad0_build_methods(_25919_decl.get()._field_methods),_1ac684054_build_vars(_25919_decl.get()._field_statics)));
}



inline jule::Ptr<_1ad35872d_ScopeChecker> _1ad33057e_new_scope_checker_base(jule::Ptr<_1ad37cd5c_Sema>& _4032_s,jule::Ptr<_1ac67a501_FnIns> _4046_owner) {
	return jule::new_ptr<_1ad35872d_ScopeChecker>(_1ad35872d_ScopeChecker(jule::Ptr<_1ab005531_Token>(),_4032_s,_4046_owner,jule::Ptr<_1ad35872d_ScopeChecker>(),jule::I64(),jule::new_ptr<_1ad3e062d_SymbolTable>(_1ad3e062d_SymbolTable()),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ab01d615_ScopeTree>(),jule::Ptr<_1ad429931_TypeKind>(),jule::U64(),jule::U64(),jule::Ptr<jule::Slice<jule::Ptr<_1ad3582dd_ScopeLabel>>>(),jule::Ptr<jule::Slice<jule::Ptr<_1ad35850d_ScopeGoto>>>(),jule::I64()));
}



inline jule::Ptr<_1ad35872d_ScopeChecker> _1ad30a449_new_scope_checker(jule::Ptr<_1ad37cd5c_Sema>& _4827_s,jule::Ptr<_1ac67a501_FnIns> _4841_owner) {
	jule::Ptr<_1ad35872d_ScopeChecker> _4913_base = _1ad33057e_new_scope_checker_base(_4827_s,_4841_owner);
	_4913_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ad3582dd_ScopeLabel>>>(nullptr);
	_4913_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ad35850d_ScopeGoto>>>(nullptr);
	return _4913_base;
}



inline jule::Ptr<_1ad3582dd_ScopeLabel> _1ad2e8613_find_label_parent(jule::Str _5822_ident,jule::Ptr<_1ad35872d_ScopeChecker> _5838_scope) {
	jule::Ptr<_1ad3582dd_ScopeLabel> _5913_label = _1ad35b6ba_find_label_scope(_5838_scope, _5822_ident);
	while ((_5913_label == nullptr)) {
		{
			if ((_5838_scope.get()._field_parent == nullptr) || (_5838_scope.get()._field_owner != nullptr)) {
				return nullptr;
			}
			_5838_scope=_5838_scope.get()._field_parent;
			_5913_label=_1ad35b6ba_find_label_scope(_5838_scope, _5822_ident);
		}
	_iter_next_1b0c64433:;
	}
	_iter_end_1b0c64433:;
	return _5913_label;
}



inline jule::Bool _1ad315355_stmt_is_goto_scope(jule::Any& _7224_stmt,jule::Ptr<_1ad33ce0a_Scope>& _7236_sc) {
	{
		auto &_match_expr{ _7224_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1ad33ce0a_Scope>>()) {
			_case_begin_1b0c66b83:;
			{
				return _7224_stmt.operator jule::Ptr<_1ad33ce0a_Scope>() == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad3560cc_InfIter>>()) {
			_case_begin_1b0c66be9:;
			{
				return _7224_stmt.operator jule::Ptr<_1ad3560cc_InfIter>().get()._field_scope == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad35651c_RangeIter>>()) {
			_case_begin_1b0c66699:;
			{
				return _7224_stmt.operator jule::Ptr<_1ad35651c_RangeIter>().get()._field_scope == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad3562ec_WhileIter>>()) {
			_case_begin_1b0c66710:;
			{
				return _7224_stmt.operator jule::Ptr<_1ad3562ec_WhileIter>().get()._field_scope == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad35772c_Match>>()) {
			_case_begin_1b0c66776:;
			{
				jule::Ptr<_1ad35772c_Match> _8713_m = _7224_stmt.operator jule::Ptr<_1ad35772c_Match>();
				{
					auto &expr = _8713_m.get()._field_cases;
					auto it = expr.begin();
					_iter_begin_1b0c69427:;
					if (it != expr.end()) {
						jule::Ptr<_1ad357b7d_Case> &_1b0c6946b_c = *it;
						{
							if (_1b0c6946b_c.get()._field_scope == _7236_sc) {
								return true;
							}
						}
						_iter_next_1b0c69427:;
						++it;
						goto _iter_begin_1b0c69427;
					}
					_iter_end_1b0c69427:;
				}
				return (_8713_m.get()._field_default != nullptr) && (_8713_m.get()._field_default.get()._field_scope == _7236_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad355dac_Conditional>>()) {
			_case_begin_1b0c667dc:;
			{
				jule::Ptr<_1ad355dac_Conditional> _9613_c = _7224_stmt.operator jule::Ptr<_1ad355dac_Conditional>();
				{
					auto &expr = _9613_c.get()._field_elifs;
					auto it = expr.begin();
					_iter_begin_1b0c6ae95:;
					if (it != expr.end()) {
						jule::Ptr<_1ad35596c_If> &_1b0c6aed9_elif = *it;
						{
							if (_1b0c6aed9_elif.get()._field_scope == _7236_sc) {
								return true;
							}
						}
						_iter_next_1b0c6ae95:;
						++it;
						goto _iter_begin_1b0c6ae95;
					}
					_iter_end_1b0c6ae95:;
				}
				return (_9613_c.get()._field_default != nullptr) && (_9613_c.get()._field_default.get()._field_scope == _7236_sc);
			}
		}
		else {
			_case_begin_1b0c66545:;
			{
				return false;
			}
		}
		_match_end_1b0c66468:;
	}
}



inline jule::I64 _1ad33d845_count_match_type(jule::Ptr<_1ad35772c_Match>& _10922_m,jule::Ptr<_1ad429931_TypeKind>& _10934_t) {
	jule::I64 _11013_n = 0LL;
	jule::Str _1119_kind = _1ad429d4e_to_str(_10934_t.ptr());
	_julec_label_loop:;
	{
		auto &expr = _10922_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1b0c6cc55:;
		if (it != expr.end()) {
			jule::Ptr<_1ad357b7d_Case> &_1b0c6ce53_c = *it;
			{
				if ((_1b0c6ce53_c == nullptr)) {
					goto _iter_next_1b0c6cc55;
				}
				{
					auto &expr = _1b0c6ce53_c.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1b0c6d4b4:;
					if (it != expr.end()) {
						jule::Ptr<_1ad3e6975_Data> &_1b0c6db13_expr = *it;
						{
							if ((_1b0c6db13_expr == nullptr)) {
								goto _iter_end_1b0c6cc55;
							}
							if (_1119_kind == _1ad429d4e_to_str(_1b0c6db13_expr.get()._field_model.operator jule::Ptr<_1ad429931_TypeKind>().ptr())) {
								(_11013_n)++;
							}
						}
						_iter_next_1b0c6d4b4:;
						++it;
						goto _iter_begin_1b0c6d4b4;
					}
					_iter_end_1b0c6d4b4:;
				}
			}
			_iter_next_1b0c6cc55:;
			++it;
			goto _iter_begin_1b0c6cc55;
		}
		_iter_end_1b0c6cc55:;
	}
	return _11013_n;
}



inline jule::Slice<jule::Ptr<_1ad3e6975_Data>> _1ad316499_get_datas_from_tuple_data(jule::Ptr<_1ad3e6975_Data>& _13335_d) {
	if ((_1ad42dd42_tup(_13335_d.get()._field_kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _13335_d.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1ac66d912_TupleExprModel>>()) {
				_case_begin_1b0c70494:;
				{
					return _13335_d.get()._field_model.operator jule::Ptr<_1ac66d912_TupleExprModel>().get()._field_datas;
				}
			}
			else {
				_case_begin_1b0c7042d:;
				{
					jule::Ptr<_1ad435354_Tuple> _14021_t = _1ad42dd42_tup(_13335_d.get()._field_kind.ptr());
					jule::Slice<jule::Ptr<_1ad3e6975_Data>> _14121_r = jule::Slice<jule::Ptr<_1ad3e6975_Data>>::alloc(0LL,static_cast<jule::I64>(_14021_t.get()._field_types.len()));
					{
						auto &expr = _14021_t.get()._field_types;
						auto it = expr.begin();
						_iter_begin_1b0c71583:;
						if (it != expr.end()) {
							jule::Ptr<_1ad429931_TypeKind> _1b0c71bd2_kind = *it;
							{
								_14121_r = jule::alloc_for_append(_14121_r,1);_14121_r.__push(jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(_1b0c71bd2_kind,jule::Ptr<_1ad429931_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>())));
							}
							_iter_next_1b0c71583:;
							++it;
							goto _iter_begin_1b0c71583;
						}
						_iter_end_1b0c71583:;
					}
					return _14121_r;
				}
			}
			_match_end_1b0c703c8:;
		}
	} else {
		return jule::Slice<jule::Ptr<_1ad3e6975_Data>>({_13335_d});
	}
}



inline jule::Slice<jule::Any> _1ad319ec5_get_expr_models(jule::Any& _15525_m) {
	{
		auto &_match_expr{ _15525_m };
		
		if (_match_expr.type_is<jule::Ptr<_1aadb56cc_TupleExpr>>()) {
			_case_begin_1b0c71d03:;
			{
				jule::Ptr<_1aadb56cc_TupleExpr> _15817_tup = _15525_m.operator jule::Ptr<_1aadb56cc_TupleExpr>();
				jule::Slice<jule::Any> _15917_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_15817_tup.get()._field_expr.len()));
				{
					auto &expr = _15817_tup.get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1b0c74421:;
					if (it != expr.end()) {
						jule::Ptr<_1aadb528c_Expr> _1b0c74a70_expr = *it;
						{
							_15917_models = jule::alloc_for_append(_15917_models,1);_15917_models.__push(_1b0c74a70_expr.get()._field_kind);
						}
						_iter_next_1b0c74421:;
						++it;
						goto _iter_begin_1b0c74421;
					}
					_iter_end_1b0c74421:;
				}
				return _15917_models;
			}
		}
		else {
			_case_begin_1b0c73431:;
			{
				return jule::Slice<jule::Any>({_15525_m});
			}
		}
		_match_end_1b0c73343:;
	}
}



inline jule::Bool _1ad31aaa8_check_mut(jule::Ptr<_1ad37cd5c_Sema>& _17019_s,jule::Ptr<_1ad3e6975_Data>& _17030_left,jule::Ptr<_1ad3e6975_Data> _17047_right,_1ab005531_Token _17061_op) {
	jule::Bool _17074_ok = jule::Bool();
	{
		
		if ((!(_17030_left.get()._field_mutable))) {
			_case_begin_1b0c762d0:;
			{
				_1ad3810c4_push_err(_17019_s.ptr(), _17061_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_17074_ok = false;
				return _17074_ok;
			}
		}
		else if (((_17047_right != nullptr) && (!(_17047_right.get()._field_mutable))) && _1ad42b092_mutable(_17047_right.get()._field_kind.ptr())) {
			_case_begin_1b0c763ac:;
			{
				if ((_17061_op._field_kind != jule::Str("=", 1)) && (_1ad42d4b2_strct(_17047_right.get()._field_kind.ptr()) != nullptr)) {
					_17074_ok = true;
					return _17074_ok;
				}
				_1ad3810c4_push_err(_17019_s.ptr(), _17061_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_17047_right.get()._field_kind.ptr()))}));
				_17074_ok = false;
				return _17074_ok;
			}
		}
		else {
			_case_begin_1b0c75b3c:;
			{
				_17074_ok = true;
				return _17074_ok;
			}
		}
		_match_end_1b0c75a93:;
	}
}



inline jule::Bool _1ad31bbdb_check_assign(jule::Ptr<_1ad37cd5c_Sema>& _18922_s,jule::Ptr<_1ad3e6975_Data>& _18937_left,jule::Ptr<_1ad3e6975_Data> _18954_right,_1ab005531_Token _18968_op) {
	jule::Bool _18981_ok = jule::Bool();
	jule::Ptr<_1ac67a501_FnIns> _1909_f = _1ad42d1d7_fnc(_18937_left.get()._field_kind.ptr());
	if (((_1909_f != nullptr) && (_1909_f.get()._field_decl != nullptr)) && _1909_f.get()._field_decl.get()._field_global) {
		_1ad3810c4_push_err(_18922_s.ptr(), _18968_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_18981_ok = false;
		return _18981_ok;
	}
	{
		
		if (_1ad3e747b_is_const(_18937_left.ptr())) {
			_case_begin_1b0c7c10a:;
			{
				_1ad3810c4_push_err(_18922_s.ptr(), _18968_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1ad3814c0_push_suggestion(_18922_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_18981_ok = false;
				return _18981_ok;
			}
		}
		else if ((!(_18937_left.get()._field_lvalue))) {
			_case_begin_1b0c7c1c6:;
			{
				_1ad3810c4_push_err(_18922_s.ptr(), _18968_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_18981_ok = false;
				return _18981_ok;
			}
		}
		else if ((!(_1ad31aaa8_check_mut(_18922_s,_18937_left,_18954_right,_18968_op)))) {
			_case_begin_1b0c7c23c:;
			{
				_18981_ok = false;
				return _18981_ok;
			}
		}
		else {
			_case_begin_1b0c7b9bc:;
			{
				_18981_ok = true;
				return _18981_ok;
			}
		}
		_match_end_1b0c7b8e0:;
	}
}



inline jule::Bool _1ad31ed21_is_valid_ast_st_for_next_st(jule::Any& _21137_n) {
	{
		auto &_match_expr{ _21137_n };
		
		if (_match_expr.type_is<jule::Ptr<_1ab01d3e5_AssignSt>>()) {
			_case_begin_1b0c8044e:;
			{
				return (!(_21137_n.operator jule::Ptr<_1ab01d3e5_AssignSt>().get()._field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab01b3d2_FnCallExpr>>() || _match_expr.type_is<jule::Ptr<_1aadb528c_Expr>>()) {
			_case_begin_1b0c804b5:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b0c80042:;
			{
				return false;
			}
		}
		_match_end_1b0c7eedc:;
	}
}



inline jule::Bool _1ad320904_is_valid_st_for_next_st(jule::Any& _22329_st) {
	{
		auto &_match_expr{ _22329_st };
		
		if (_match_expr.type_is<jule::Ptr<_1ac66904a_FnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ad3570bc_Postfix>>() || _match_expr.type_is<jule::Ptr<_1ad3572dc_Assign>>() || _match_expr.type_is<jule::Ptr<_1ad35750c_MultiAssign>>()) {
			_case_begin_1b0c81791:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad3e6975_Data>>()) {
			_case_begin_1b0c81807:;
			{
				{
					auto &_match_expr{ _22329_st.operator jule::Ptr<_1ad3e6975_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ac66904a_FnCallExprModel>>()) {
						_case_begin_1b0c81ebc:;
						{
							return true;
						}
					}
					else {
						_case_begin_1b0c8271a:;
						{
							return false;
						}
					}
					_match_end_1b0c826b5:;
				}
			}
		}
		else {
			_case_begin_1b0c81032:;
			{
				return false;
			}
		}
		_match_end_1b0c80e77:;
	}
}



inline jule::Bool _1ad3214d7_st_is_def(jule::Any& _24015_st) {
	{
		auto &_match_expr{ _24015_st };
		
		if (_match_expr.type_is<jule::Ptr<_1ad39e037_Var>>()) {
			_case_begin_1b0c82792:;
			{
				return true;
			}
		}
		else {
			_case_begin_1b0c81b37:;
			{
				return false;
			}
		}
		_match_end_1b0c8283b:;
	}
}



inline jule::Ptr<_1ad39e037_Var> _1ad37103c_find_var_in_package(jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>& _4129_files,jule::Str _4152_ident,jule::Bool _4164_cpp_linked) {
	{
		auto &expr = _4129_files;
		auto it = expr.begin();
		_iter_begin_1b0c83a4b:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b0c83b28_f = *it;
			{
				jule::Ptr<_1ad39e037_Var> _4317_v = _1ad3e151e_find_var(_1b0c83b28_f.ptr(), _4152_ident,_4164_cpp_linked);
				if ((_4317_v != nullptr)) {
					return _4317_v;
				}
			}
			_iter_next_1b0c83a4b:;
			++it;
			goto _iter_begin_1b0c83a4b;
		}
		_iter_end_1b0c83a4b:;
	}
	return nullptr;
}



inline jule::Ptr<_1ad428996_TypeAlias> _1ad37158c_find_type_alias_in_package(jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>& _5336_files,jule::Str _5359_ident,jule::Bool _5371_cpp_linked) {
	{
		auto &expr = _5336_files;
		auto it = expr.begin();
		_iter_begin_1b0c84068:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b0c85289_f = *it;
			{
				jule::Ptr<_1ad428996_TypeAlias> _5517_ta = _1ad3e19a3_find_type_alias(_1b0c85289_f.ptr(), _5359_ident,_5371_cpp_linked);
				if ((_5517_ta != nullptr)) {
					return _5517_ta;
				}
			}
			_iter_next_1b0c84068:;
			++it;
			goto _iter_begin_1b0c84068;
		}
		_iter_end_1b0c84068:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac661075_Struct> _1ad371a43_find_struct_in_package(jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>& _6532_files,jule::Str _6555_ident,jule::Bool _6567_cpp_linked) {
	{
		auto &expr = _6532_files;
		auto it = expr.begin();
		_iter_begin_1b0c856c9:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b0c868ea_f = *it;
			{
				jule::Ptr<_1ac661075_Struct> _6717_s = _1ad3e1e37_find_struct(_1b0c868ea_f.ptr(), _6555_ident,_6567_cpp_linked);
				if ((_6717_s != nullptr)) {
					return _6717_s;
				}
			}
			_iter_next_1b0c856c9:;
			++it;
			goto _iter_begin_1b0c856c9;
		}
		_iter_end_1b0c856c9:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac676a08_Fn> _1ad37204e_find_fn_in_package(jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>& _7728_files,jule::Str _7751_ident,jule::Bool _7763_cpp_linked) {
	{
		auto &expr = _7728_files;
		auto it = expr.begin();
		_iter_begin_1b0c86d3a:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b0c8805b_file = *it;
			{
				jule::Ptr<_1ac676a08_Fn> _7917_f = _1ad3e23bb_find_fn(_1b0c8805b_file.ptr(), _7751_ident,_7763_cpp_linked);
				if ((_7917_f != nullptr)) {
					return _7917_f;
				}
			}
			_iter_next_1b0c86d3a:;
			++it;
			goto _iter_begin_1b0c86d3a;
		}
		_iter_end_1b0c86d3a:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac85d096_Trait> _1ad372439_find_trait_in_package(jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>& _8931_files,jule::Str _8954_ident) {
	{
		auto &expr = _8931_files;
		auto it = expr.begin();
		_iter_begin_1b0c89634:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b0c88369_f = *it;
			{
				jule::Ptr<_1ac85d096_Trait> _9117_t = _1ad3e2773_find_trait(_1b0c88369_f.ptr(), _8954_ident);
				if ((_9117_t != nullptr)) {
					return _9117_t;
				}
			}
			_iter_next_1b0c89634:;
			++it;
			goto _iter_begin_1b0c89634;
		}
		_iter_end_1b0c89634:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac724545_Enum> _1ad372824_find_enum_in_package(jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>& _10130_files,jule::Str _10153_ident) {
	{
		auto &expr = _10130_files;
		auto it = expr.begin();
		_iter_begin_1b0c8a206:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b0c8a2d3_f = *it;
			{
				jule::Ptr<_1ac724545_Enum> _10317_e = _1ad3e2b2a_find_enum(_1b0c8a2d3_f.ptr(), _10153_ident);
				if ((_10317_e != nullptr)) {
					return _10317_e;
				}
			}
			_iter_next_1b0c8a206:;
			++it;
			goto _iter_begin_1b0c8a206;
		}
		_iter_end_1b0c8a206:;
	}
	return nullptr;
}



inline jule::Bool _1ad3795d9_is_std_package(jule::Str _32219_f,jule::Str _32227_p) {
	return _1a904e0b5_has_prefix(_32219_f,_1a90c5d40_join(jule::Slice<jule::Str>({_1a92b37be_PATH_STDLIB,_32227_p})));
}



inline jule::Bool _1ad37aa2a_is_valid_model_for_ref(jule::Any& _1232_m) {
	{
		auto &_match_expr{ _1232_m };
		
		if (_match_expr.type_is<jule::Ptr<_1ad39e037_Var>>()) {
			_case_begin_1b0c8cc86:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>>()) {
			_case_begin_1b0c8ccec:;
			{
				jule::Ptr<_1ac66c0a3_StructSubIdentExprModel> _1717_model = _1232_m.operator jule::Ptr<_1ac66c0a3_StructSubIdentExprModel>();
				return _1ad37aa2a_is_valid_model_for_ref(_1717_model.get()._field_expr.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac66b69b_TraitSubIdentExprModel>>()) {
			_case_begin_1b0c8c7be:;
			{
				jule::Ptr<_1ac66b69b_TraitSubIdentExprModel> _2017_model = _1232_m.operator jule::Ptr<_1ac66b69b_TraitSubIdentExprModel>();
				return _1ad37aa2a_is_valid_model_for_ref(_2017_model.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac667158_UnaryExprModel>>()) {
			_case_begin_1b0c8c835:;
			{
				jule::Ptr<_1ac667158_UnaryExprModel> _2317_unary = _1232_m.operator jule::Ptr<_1ac667158_UnaryExprModel>();
				if ((_2317_unary.get()._field_op._field_kind != jule::Str("*", 1))) {
					return false;
				}
				if ((_1ad42c57c_ptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
					return true;
				}
				if ((_1ad42c2a2_sptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					return false;
				}
				return _1ad37aa2a_is_valid_model_for_ref(_2317_unary.get()._field_expr.get()._field_model);
			}
		}
		else {
			_case_begin_1b0c8c758:;
			{
				return false;
			}
		}
		_match_end_1b0c8c291:;
	}
}



inline _1a92a31c6_Log _1ad37b07a_compiler_err(_1ab005531_Token& _4118_token,jule::Bool _4132_line,jule::Str _4144_fmt,jule::Slice<jule::Any> _4157_args) {
	_1a92a31c6_Log _4213_log = _1a92a31c6_Log(static_cast<jule::I64>(1LL),_4118_token._field_row,_4118_token._field_column,_4118_token._field_file.get()._field_path,_1a92a36b0_logf(_4144_fmt,_4157_args),jule::Str(),jule::Str());
	if (_4132_line) {
		_4213_log._field_line=_1ab00cb54_get_row(_4118_token._field_file.ptr(), _4118_token._field_row);
	}
	return _4213_log;
}



inline jule::Bool _1ad37b465_imp_is_lookupable(jule::Ptr<_1ad3736b0_ImportInfo>& _5523_i,jule::Str _5539_ident) {
	if (_5523_i.get()._field_cpp_linked) {
		return false;
	}
	if ((!(_5523_i.get()._field_import_all))) {
		if ((_5523_i.get()._field_selected.len() > 0LL)) {
			return _1ad37652b_exist_ident(_5523_i.ptr(), _5539_ident);
		}
	}
	return _5523_i.get()._field_import_all;
}



inline jule::Slice<jule::Ptr<_1ad39e037_Var>> _1ad37b7b7_build_ret_vars(jule::Ptr<_1ac67a501_FnIns>& _6824_f) {
	if (_1ac676ec0_is_void(_6824_f.get()._field_decl.ptr()) || (_6824_f.get()._field_result == nullptr)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1ad39e037_Var>> _7313_vars = nullptr;
	jule::Slice<jule::Ptr<_1ad429931_TypeKind>> _7413_types = _1ad3a9350_get_result_types(_6824_f.get()._field_result);
	{
		auto &expr = _6824_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1b0c97653:;
		if (it != expr.end()) {
			jule::I64 _1b0c97697_i = it - expr.begin();
			_1ab005531_Token _1b0c978d9_ident = *it;
			{
				if (_1ab008314_is_ignore_ident(_1b0c978d9_ident._field_kind) || _1ab008622_is_anon_ident(_1b0c978d9_ident._field_kind)) {
					goto _iter_next_1b0c97653;
				}
				jule::Ptr<_1ad39e037_Var> _8017_v = jule::new_ptr<_1ad39e037_Var>(_1ad39e037_Var(_6824_f.get()._field_scope,_1b0c978d9_ident,_1b0c978d9_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),_7413_types[_1b0c97697_i])),jule::new_ptr<_1ad3e7c84_Value>(_1ad3e7c84_Value(jule::Ptr<_1aadb528c_Expr>(),jule::new_ptr<_1ad3e6975_Data>())),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>(),jule::Ptr<_1ad39cc28_IterRelation>(),jule::Slice<jule::Ptr<_1ad39e037_Var>>()));
				_7313_vars = jule::alloc_for_append(_7313_vars,1);_7313_vars.__push(_8017_v);
			}
			_iter_next_1b0c97653:;
			++it;
			_1b0c97697_i++;
			goto _iter_begin_1b0c97653;
		}
		_iter_end_1b0c97653:;
	}
	return _7313_vars;
}



inline jule::Slice<jule::Ptr<_1ad39e037_Var>> _1ad37bac5_build_param_vars(jule::Ptr<_1ac67a501_FnIns>& _9926_f) {
	if ((_9926_f.get()._field_params.len() == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1ad39e037_Var>> _10413_vars = jule::Slice<jule::Ptr<_1ad39e037_Var>>::alloc(0LL,static_cast<jule::I64>(_9926_f.get()._field_params.len()));
	{
		auto &expr = _9926_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1b0c9ae81:;
		if (it != expr.end()) {
			jule::Ptr<_1ac67939b_ParamIns> _1b0c9b0c4_p = *it;
			{
				if (_1ab008314_is_ignore_ident(_1b0c9b0c4_p.get()._field_decl.get()._field_ident) || _1ab008622_is_anon_ident(_1b0c9b0c4_p.get()._field_decl.get()._field_ident)) {
					goto _iter_next_1b0c9ae81;
				}
				jule::Ptr<_1ad39e037_Var> _11017_v = jule::new_ptr<_1ad39e037_Var>(_1ad39e037_Var(_9926_f.get()._field_scope,_1b0c9b0c4_p.get()._field_decl.get()._field_token,_1b0c9b0c4_p.get()._field_decl.get()._field_ident,jule::Bool(),jule::Bool(),_1b0c9b0c4_p.get()._field_decl.get()._field_mutable,jule::Bool(),true,jule::Bool(),_1b0c9b0c4_p.get()._field_decl.get()._field_reference,jule::new_ptr<_1ad42e293_TypeSymbol>(),jule::new_ptr<_1ad3e7c84_Value>(_1ad3e7c84_Value(jule::Ptr<_1aadb528c_Expr>(),jule::new_ptr<_1ad3e6975_Data>())),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>(),jule::Ptr<_1ad39cc28_IterRelation>(),jule::Slice<jule::Ptr<_1ad39e037_Var>>()));
				{
					
					if (_1ac6753db_is_self(_1b0c9b0c4_p.get()._field_decl.ptr())) {
						_case_begin_1b0c9e1a4:;
						{
							_11017_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),false,jule::Trait<_1ad4293e2_Kind>(_9926_f.get()._field_owner, 0)));
							_11017_v.get()._field_reference=(!(_1ac6756b6_is_ref(_1b0c9b0c4_p.get()._field_decl.ptr())));
							if (_1ac6756b6_is_ref(_1b0c9b0c4_p.get()._field_decl.ptr())) {
								_11017_v.get()._field_ident=_11017_v.get()._field_ident.slice(1LL);
								_11017_v.get()._field_kind.get()._field_kind.get()._field_kind=jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ad433b05_Sptr>(_1ad433b05_Sptr(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(_11017_v.get()._field_kind.get()._field_kind.get()._field_cpp_ident,jule::Bool(),jule::Bool(),_11017_v.get()._field_kind.get()._field_kind.get()._field_kind)))), 6);
							}
						}
					}
					else if (_1b0c9b0c4_p.get()._field_decl.get()._field_variadic) {
						_case_begin_1b0c9dc53:;
						{
							_11017_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),false,jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ad4346d8_Slc>(_1ad4346d8_Slc(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(_1b0c9b0c4_p.get()._field_kind.get()._field_cpp_ident,jule::Bool(),jule::Bool(),_1b0c9b0c4_p.get()._field_kind.get()._field_kind)))), 7)));
						}
					}
					else {
						_case_begin_1b0c9d912:;
						{
							_11017_v.get()._field_kind.get()._field_kind=_1b0c9b0c4_p.get()._field_kind;
						}
					}
					_match_end_1b0c9b569:;
				}
				_10413_vars = jule::alloc_for_append(_10413_vars,1);_10413_vars.__push(_11017_v);
			}
			_iter_next_1b0c9ae81:;
			++it;
			goto _iter_begin_1b0c9ae81;
		}
		_iter_end_1b0c9ae81:;
	}
	return _10413_vars;
}



inline jule::Slice<jule::Ptr<_1ad428996_TypeAlias>> _1ad37be27_build_generic_type_aliases(jule::Ptr<_1ac67a501_FnIns>& _16236_f) {
	jule::I64 _16313_size = _16236_f.get()._field_generics.len();
	if ((_16236_f.get()._field_decl.get()._field_owner != nullptr)) {
		_16313_size+=static_cast<jule::I64>(_16236_f.get()._field_decl.get()._field_owner.get()._field_generics.len());
	}
	if ((_16313_size == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1ad428996_TypeAlias>> _17213_aliases = jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>::alloc(0LL,_16313_size);
	{
		auto &expr = _16236_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1b0ca55a6:;
		if (it != expr.end()) {
			jule::I64 _1b0ca574e_i = it - expr.begin();
			jule::Ptr<_1ad429931_TypeKind> _1b0ca596e_g = *it;
			{
				jule::Ptr<_1ab01c845_GenericDecl> _17517_decl = _16236_f.get()._field_decl.get()._field_generics[_1b0ca574e_i];
				_17213_aliases = jule::alloc_for_append(_17213_aliases,1);_17213_aliases.__push(jule::new_ptr<_1ad428996_TypeAlias>(_1ad428996_TypeAlias(_16236_f.get()._field_decl.get()._field_scope,jule::Bool(),jule::Bool(),true,true,_17517_decl.get()._field_token,_17517_decl.get()._field_ident,jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),_1b0ca596e_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>())));
			}
			_iter_next_1b0ca55a6:;
			++it;
			_1b0ca574e_i++;
			goto _iter_begin_1b0ca55a6;
		}
		_iter_end_1b0ca55a6:;
	}
	if ((_16236_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1ac664551_StructIns> _18917_owner = _16236_f.get()._field_owner;
		{
			auto &expr = _18917_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1b0ca6a91:;
			if (it != expr.end()) {
				jule::I64 _1b0ca7bb3_i = it - expr.begin();
				jule::Ptr<_1ad429931_TypeKind> _1b0ca7dd3_g = *it;
				{
					jule::Ptr<_1ab01c845_GenericDecl> _19121_decl = _18917_owner.get()._field_decl.get()._field_generics[_1b0ca7bb3_i];
					_17213_aliases = jule::alloc_for_append(_17213_aliases,1);_17213_aliases.__push(jule::new_ptr<_1ad428996_TypeAlias>(_1ad428996_TypeAlias(_16236_f.get()._field_decl.get()._field_scope,jule::Bool(),jule::Bool(),true,true,_19121_decl.get()._field_token,_19121_decl.get()._field_ident,jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),_1b0ca7dd3_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>())));
				}
				_iter_next_1b0ca6a91:;
				++it;
				_1b0ca7bb3_i++;
				goto _iter_begin_1b0ca6a91;
			}
			_iter_end_1b0ca6a91:;
		}
	}
	return _17213_aliases;
}



inline jule::Ptr<_1ad3e062d_SymbolTable> _1ad37c301_find_file(jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>& _20819_files,jule::Ptr<_1ab00b67a_File>& _20843_handler) {
	{
		auto &expr = _20819_files;
		auto it = expr.begin();
		_iter_begin_1b0ca8301:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b0ca8e39_fl = *it;
			{
				if (_1b0ca8e39_fl.get()._field_file == _20843_handler) {
					return _1b0ca8e39_fl;
				}
			}
			_iter_next_1b0ca8301:;
			++it;
			goto _iter_begin_1b0ca8301;
		}
		_iter_end_1b0ca8301:;
	}
	return nullptr;
}



inline void _1ad37c7b8_push_suggestion(_1a92a31c6_Log* _21731_log,jule::Str _21742_fmt,jule::Slice<jule::Any> _21755_args) {
	_21731_log->_field_suggestion=_1a92a36b0_logf(_21742_fmt,_21755_args);
}



inline jule::Slice<jule::Ptr<_1ad429931_TypeKind>> _1ad3a9350_get_result_types(jule::Ptr<_1ad429931_TypeKind>& _2626_result) {
	{
		
		if ((_2626_result == nullptr)) {
			_case_begin_1b0cabe09:;
			{
				return nullptr;
			}
		}
		else if ((_1ad42dd42_tup(_2626_result.ptr()) == nullptr)) {
			_case_begin_1b0cabc2d:;
			{
				return jule::Slice<jule::Ptr<_1ad429931_TypeKind>>({_2626_result});
			}
		}
		else {
			_case_begin_1b0cab623:;
			{
				return _1ad42dd42_tup(_2626_result.ptr()).get()._field_types;
			}
		}
		_match_end_1b0caac2c:;
	}
}



inline jule::Bool _1ad3aa52c_trait_has_reference_receiver(jule::Ptr<_1ac85d096_Trait>& _3934_t) {
	{
		auto &expr = _3934_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1b0cacd50:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> &_1b0cac8bb_f = *it;
			{
				if (_1b0cac8bb_f.get()._field_statically) {
					goto _iter_next_1b0cacd50;
				}
				jule::Ptr<_1ac674bd2_Param> _4613_p = _1b0cac8bb_f.get()._field_params[0LL];
				if (_1ac6756b6_is_ref(_4613_p.ptr()) && _1ac6753db_is_self(_4613_p.ptr())) {
					return true;
				}
			}
			_iter_next_1b0cacd50:;
			++it;
			goto _iter_begin_1b0cacd50;
		}
		_iter_end_1b0cacd50:;
	}
	return false;
}



inline jule::Bool _1ad3b028a_float_assignable(jule::Str _5421_kind,jule::Ptr<_1ad3e6975_Data>& _5433_d) {
	jule::Str _559_value = _1acac8a5e_fmt_float(static_cast<jule::F64>(_1ad2c4633_as_f64(_5433_d.get()._field_constant.ptr())),'g',-1LL,64LL);
	return _1ad349ba3_check_bit_float(_559_value,static_cast<jule::I64>(_1ad34850e_bitsize_of(_5421_kind)));
}



inline jule::Bool _1ad3bcbe3_sig_assignable(jule::Str _5919_kind,jule::Ptr<_1ad3e6975_Data>& _5931_d) {
	jule::F64 _609_min = _1ad34d239_min(_5919_kind);
	jule::F64 _619_max = _1ad34d58b_max(_5919_kind);
	{
		
		if (_1ad2c6855_is_f64(_5931_d.get()._field_constant.ptr())) {
			_case_begin_1b0cb1d98:;
			{
				jule::F64 _6413_x = _1ad2c3ca3_read_f64(_5931_d.get()._field_constant.ptr());
				jule::F64 _6514_i;
				jule::F64 _6517_frac;
				std::tie(_6514_i,_6517_frac) = _1ad2375eb_modf(_6413_x);
				if ((_6517_frac != 0LL)) {
					return false;
				}
				return (_6514_i >= _609_min) && (_6514_i <= _619_max);
			}
		}
		else if (_1ad2c5ec5_is_u64(_5931_d.get()._field_constant.ptr())) {
			_case_begin_1b0cb1e0e:;
			{
				jule::F64 _7113_x = _1ad2c4633_as_f64(_5931_d.get()._field_constant.ptr());
				if (_7113_x <= _619_max) {
					return true;
				}
			}
		}
		else if (_1ad2c5bea_is_i64(_5931_d.get()._field_constant.ptr())) {
			_case_begin_1b0cb1e75:;
			{
				jule::F64 _7613_x = _1ad2c4633_as_f64(_5931_d.get()._field_constant.ptr());
				return (_609_min <= _7613_x) && (_7613_x <= _619_max);
			}
		}
		_match_end_1b0cb1c77:;
	}
	return false;
}



inline jule::Bool _1ad3ccd9b_unsig_assignable(jule::Str _8221_kind,jule::Ptr<_1ad3e6975_Data>& _8233_d) {
	jule::F64 _839_max = _1ad34d58b_max(_8221_kind);
	if (_8233_d.get()._field_is_rune && (_8221_kind == jule::Str("u8", 2))) {
		return _1ad3a887c_is_ascii(static_cast<jule::I32>(static_cast<jule::I32>(_1ad2c3148_read_i64(_8233_d.get()._field_constant.ptr()))));
	}
	{
		
		if (_1ad2c6855_is_f64(_8233_d.get()._field_constant.ptr())) {
			_case_begin_1b0cb795e:;
			{
				jule::F64 _9013_x = _1ad2c3ca3_read_f64(_8233_d.get()._field_constant.ptr());
				if ((_9013_x < 0LL)) {
					return false;
				}
				jule::F64 _9414_i;
				jule::F64 _9417_frac;
				std::tie(_9414_i,_9417_frac) = _1ad2375eb_modf(_9013_x);
				if ((_9417_frac != 0LL)) {
					return false;
				}
				return _9414_i <= _839_max;
			}
		}
		else if (_1ad2c5ec5_is_u64(_8233_d.get()._field_constant.ptr())) {
			_case_begin_1b0cb79c5:;
			{
				jule::F64 _10013_x = _1ad2c4633_as_f64(_8233_d.get()._field_constant.ptr());
				if (_10013_x <= _839_max) {
					return true;
				}
			}
		}
		else if (_1ad2c5bea_is_i64(_8233_d.get()._field_constant.ptr())) {
			_case_begin_1b0cb7a3b:;
			{
				jule::F64 _10513_x = _1ad2c4633_as_f64(_8233_d.get()._field_constant.ptr());
				return (0LL <= _10513_x) && (_10513_x <= _839_max);
			}
		}
		_match_end_1b0cb6d15:;
	}
	return false;
}



inline jule::Bool _1ad3cd220_int_assignable(jule::Str _11119_kind,jule::Ptr<_1ad3e6975_Data>& _11131_d) {
	{
		
		if (_1ad3542a6_is_sig_int(_11119_kind)) {
			_case_begin_1ae9a4064:;
			{
				return _1ad3bcbe3_sig_assignable(_11119_kind,_11131_d);
			}
		}
		else if (_1ad354608_is_unsig_int(_11119_kind)) {
			_case_begin_1ae9a4163:;
			{
				return _1ad3ccd9b_unsig_assignable(_11119_kind,_11131_d);
			}
		}
		else {
			_case_begin_1ae9a3926:;
			{
				return false;
			}
		}
		_match_end_1ae9a387c:;
	}
}



inline jule::Ptr<_1aaeaeb7d_Directive> _1ad4232ba_find_directive(jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>& _413124_directives,jule::Str _413166_d) {
	{
		auto &expr = _413124_directives;
		auto it = expr.begin();
		_iter_begin_1ae9a422e:;
		if (it != expr.end()) {
			jule::Ptr<_1aaeaeb7d_Directive> _1ae9a4c9b_dr = *it;
			{
				if (_1ae9a4c9b_dr.get()._field_tag._field_kind == _413166_d) {
					return _1ae9a4c9b_dr;
				}
			}
			_iter_next_1ae9a422e:;
			++it;
			goto _iter_begin_1ae9a422e;
		}
		_iter_end_1ae9a422e:;
	}
	return nullptr;
}



inline jule::Any _1ad4236e9_find_builtins_import(jule::Str _414025_ident,jule::Ptr<_1ad3736b0_ImportInfo> _414037_imp) {
	return _1ad474a58_find_package_builtin_def(_414037_imp.get()._field_link_path,_414025_ident);
}



inline void _1ad42396e_fit_bitsize(jule::Ptr<_1ad3e6975_Data>& _414721_d) {
	jule::Ptr<_1ad42ec99_Prim> _414813_prim = _1ad42bec7_prim(_414721_d.get()._field_kind.ptr());
	jule::I64 _41499_z = _1ad34850e_bitsize_of(_1ad430173_to_str(_414813_prim.ptr()));
	if ((_41499_z == 64LL)) {
		return;
	}
	jule::I64 _415413_k = 0LL;
	{
		
		if (_1ad2c5bea_is_i64(_414721_d.get()._field_constant.ptr())) {
			_case_begin_1ae9a8046:;
			{
				_415413_k=static_cast<jule::I64>(_1ad34a2be_bitsize_of_int(static_cast<jule::I64>(_1ad2c3148_read_i64(_414721_d.get()._field_constant.ptr()))));
				if (_415413_k > _41499_z) {
					_414813_prim.get()._field_kind=_1ad34883e_int_from_bits(_415413_k);
				}
			}
		}
		else if (_1ad2c5ec5_is_u64(_414721_d.get()._field_constant.ptr())) {
			_case_begin_1ae9a80bd:;
			{
				_415413_k=static_cast<jule::I64>(_1ad34a5cc_bitsize_of_uint(static_cast<jule::U64>(_1ad2c3423_read_u64(_414721_d.get()._field_constant.ptr()))));
				if (_415413_k > _41499_z) {
					_414813_prim.get()._field_kind=_1ad348b4c_uint_from_bits(_415413_k);
				}
			}
		}
		else if (_1ad2c6855_is_f64(_414721_d.get()._field_constant.ptr())) {
			_case_begin_1ae9a8145:;
			{
				_415413_k=static_cast<jule::I64>(_1ad349eb1_bitsize_of_float(static_cast<jule::F64>(_1ad2c3ca3_read_f64(_414721_d.get()._field_constant.ptr()))));
				if (_415413_k > _41499_z) {
					_414813_prim.get()._field_kind=_1ad348e5a_float_from_bits(_415413_k);
				}
			}
		}
		_match_end_1ae9a7e8b:;
	}
}



inline void _1ad423d15_make_struct_lit_alloc(jule::Ptr<_1ad3e6975_Data>& _417431_d,jule::Ptr<_1ac667a4e_StructLitExprModel>& _417446_lit) {
	_417431_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ad433b05_Sptr>(_1ad433b05_Sptr(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_417446_lit.get()._field_strct, 0))))), 6)));
	_417431_d.get()._field_model=jule::Any(jule::new_ptr<_1ac667e39_AllocStructLitExprModel>(_1ac667e39_AllocStructLitExprModel(_417446_lit)));
}



inline jule::Ptr<_1ad39e037_Var> _1ad424200_build_error_var(jule::Ptr<_1ad33ce0a_Scope>& _418525_s,jule::Ptr<_1ab01b3d2_FnCallExpr>& _418541_fc) {
	return jule::new_ptr<_1ad39e037_Var>(_1ad39e037_Var(_418525_s,_418541_fc.get()._field_token,jule::Str("error", 5),jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),false,jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("any", 3)), 5))))),jule::new_ptr<_1ad3e7c84_Value>(_1ad3e7c84_Value(jule::Ptr<_1aadb528c_Expr>(),jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data()))),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>(),jule::Ptr<_1ad39cc28_IterRelation>(),jule::Slice<jule::Ptr<_1ad39e037_Var>>()));
}



inline jule::Any _1ad4245da_find_builtins_sema(jule::Str _420423_ident,jule::Ptr<_1ad37cd5c_Sema> _420439_s) {
	{
		auto &expr = _420439_s.get()._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1ae9b0647:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1ae9b0911_imp = *it;
			{
				if (_1ae9b0911_imp.get()._field_import_all || _1ad37652b_exist_ident(_1ae9b0911_imp.ptr(), _420423_ident)) {
					jule::Any _420721_def = _1ad4236e9_find_builtins_import(_420423_ident,_1ae9b0911_imp);
					if (_420721_def != jule::Any(jule::Any(nullptr))) {
						return _420721_def;
					}
				}
			}
			_iter_next_1ae9b0647:;
			++it;
			goto _iter_begin_1ae9b0647;
		}
		_iter_end_1ae9b0647:;
	}
	jule::Str _421513_ppath = _1ab00c1e7_dir(_420439_s.get()._field_file.get()._field_file.ptr());
	if (_1a904e0b5_has_prefix(_421513_ppath,_1a92b37be_PATH_STDLIB)) {
		(_421513_ppath).mut_slice(_1a92b37be_PATH_STDLIB.len());
		_421513_ppath=jule::Str("std", 3) + _1a90c149a_replace(_421513_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
		return _1ad474a58_find_package_builtin_def(_421513_ppath,_420423_ident);
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1ad4248e8_is_ok_for_shifting(jule::Ptr<_1ad3e6975_Data>& _422928_d) {
	if (_1ad3e747b_is_const(_422928_d.ptr())) {
		{
			
			if (_1ad2c5bea_is_i64(_422928_d.get()._field_constant.ptr())) {
				_case_begin_1ae9b500e:;
				{
					return (_1ad2c3148_read_i64(_422928_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else if (_1ad2c5ec5_is_u64(_422928_d.get()._field_constant.ptr())) {
				_case_begin_1ae9b50ec:;
				{
					return true;
				}
			}
			else if (_1ad2c6855_is_f64(_422928_d.get()._field_constant.ptr())) {
				_case_begin_1ae9b5163:;
				{
					return (_1ad2c3ca3_read_f64(_422928_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1ae9b48b0:;
				{
					return false;
				}
			}
			_match_end_1ae9b47e4:;
		}
	}
	jule::Ptr<_1ad42ec99_Prim> _42429_prim = _1ad42bec7_prim(_422928_d.get()._field_kind.ptr());
	return (_42429_prim != nullptr) && _1ad354916_is_int(_1ad430173_to_str(_42429_prim.ptr()));
}



inline jule::Bool _1ad424c8e_is_instanced_struct(jule::Ptr<_1ac664551_StructIns> _424624_s) {
	return _424624_s.get()._field_decl.get()._field_generics.len() == static_cast<jule::I64>(static_cast<jule::I64>(_424624_s.get()._field_generics.len()));
}



inline jule::Bool _1ad425113_is_ptr_arithmetic_compatible_int(jule::Ptr<_1ad3e6975_Data>& _425042_d) {
	if (_1ad3e747b_is_const(_425042_d.ptr())) {
		return _1ad3cd220_int_assignable(jule::Str("int", 3),_425042_d);
	}
	_1ad3cd84c_TypeCompatibilityChecker _425413_tcc = _1ad3cd84c_TypeCompatibilityChecker(jule::Ptr<_1ad37cd5c_Sema>(),jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5))),_425042_d.get()._field_kind,_1ab005531_Token());
	return _1ad3cea4b_check(&_425413_tcc);
}



inline void _1ad425355_apply_cast_kind_model(jule::Ptr<_1ad3e6975_Data>& _426331_d) {
	_426331_d.get()._field_model=jule::Any(jule::new_ptr<_1ac668566_CastingExprModel>(_1ac668566_CastingExprModel(_1ab005531_Token(),_426331_d.get()._field_model,_426331_d.get()._field_cast_kind,_426331_d.get()._field_kind)));
}



inline void _1ad4255ca_apply_cast_kind(jule::Ptr<_1ad3e6975_Data>& _427125_d) {
	if ((_427125_d.get()._field_cast_kind == nullptr)) {
		return;
	}
	_1ad425355_apply_cast_kind_model(_427125_d);
	_427125_d.get()._field_kind=_427125_d.get()._field_cast_kind;
	_427125_d.get()._field_cast_kind=nullptr;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad42580b_build_void_data(void) {
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("void", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1ad2c1d8e_Const>()));
}



inline jule::Str _1ad425b5d_check_data_for_integer_indexing(jule::Ptr<_1ad3e6975_Data>& _429241_d) {
	jule::Str _429253_err_fmt = jule::Str();
	if ((_429241_d == nullptr)) {
		_429253_err_fmt = jule::Str();
		return _429253_err_fmt;
	}
	{
		
		if ((_1ad42bec7_prim(_429241_d.get()._field_kind.ptr()) == nullptr)) {
			_case_begin_1b01433c3:;
			{
				_429253_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _429253_err_fmt;
			}
		}
		else if ((!(_1ad354916_is_int(_1ad430173_to_str(_1ad42bec7_prim(_429241_d.get()._field_kind.ptr()).ptr()))))) {
			_case_begin_1b01e153c:;
			{
				_429253_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _429253_err_fmt;
			}
		}
		else if (_1ad3e747b_is_const(_429241_d.ptr())) {
			_case_begin_1b01e15a3:;
			{
				if ((_1ad2c4633_as_f64(_429241_d.get()._field_constant.ptr()) < 0LL)) {
					_429253_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _429253_err_fmt;
				}
			}
		}
		else if ((_1ad42bec7_prim(_429241_d.get()._field_kind.ptr()) == nullptr) || _1ad3e747b_is_const(_429241_d.ptr()) || _1ad348267_real_kind_of(_1ad430173_to_str(_1ad42bec7_prim(_429241_d.get()._field_kind.ptr()).ptr())) != _1ad348267_real_kind_of(jule::Str("int", 3))) {
			_case_begin_1b06eb88d:;
			{
				_429241_d.get()._field_cast_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5)));
				_1ad4255ca_apply_cast_kind(_429241_d);
			}
		}
		_match_end_1b06ed41c:;
	}
	_429253_err_fmt = jule::Str();
	return _429253_err_fmt;
}



inline void _1ad425ee3_apply_cast_model_by_enum(jule::Ptr<_1ad3e6975_Data>& _431834_d,jule::Ptr<_1ac724545_Enum> _431848_e) {
	if ((_431848_e == nullptr)) {
		return;
	}
	jule::Ptr<_1ad42ec99_Prim> _43229_p = _1ad42bec7_prim(_431848_e.get()._field_kind.get()._field_kind.ptr());
	if (_1ad4334c8_is_str(_43229_p.ptr())) {
		return;
	}
	_431834_d.get()._field_cast_kind=_431848_e.get()._field_kind.get()._field_kind;
	_1ad425355_apply_cast_kind_model(_431834_d);
	_431834_d.get()._field_cast_kind=nullptr;
}



inline void _1ad426334_cast_const_by_type(jule::Str& _433124_t,jule::Ptr<_1ad3e6975_Data>& _433137_d) {
	{
		
		if (_1ad3542a6_is_sig_int(_433124_t)) {
			_case_begin_1b070616c:;
			{
				{
					auto _match_expr{ _1ad34850e_bitsize_of(_1ad348267_real_kind_of(_433124_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1b070703b:;
						{
							_1ad2c4952_set_i64(_433137_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1ad2c407d_as_i64(_433137_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1b0707190:;
						{
							_1ad2c4952_set_i64(_433137_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1ad2c407d_as_i64(_433137_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1b0707206:;
						{
							_1ad2c4952_set_i64(_433137_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1ad2c407d_as_i64(_433137_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1b070726c:;
						{
							_1ad2c4952_set_i64(_433137_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1ad2c407d_as_i64(_433137_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1b0706c72:;
				}
			}
		}
		else if (_1ad354608_is_unsig_int(_433124_t)) {
			_case_begin_1b07061e4:;
			{
				{
					auto _match_expr{ _1ad34850e_bitsize_of(_1ad348267_real_kind_of(_433124_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1b070b3b4:;
						{
							_1ad2c4c71_set_u64(_433137_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1ad2c4358_as_u64(_433137_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1b070b518:;
						{
							_1ad2c4c71_set_u64(_433137_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1ad2c4358_as_u64(_433137_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1b070b57e:;
						{
							_1ad2c4c71_set_u64(_433137_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1ad2c4358_as_u64(_433137_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1b070b5e5:;
						{
							_1ad2c4c71_set_u64(_433137_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1ad2c4358_as_u64(_433137_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1b0706942:;
				}
			}
		}
		else if (_1ad354c68_is_float(_433124_t)) {
			_case_begin_1b070626b:;
			{
				{
					auto _match_expr{ _1ad34850e_bitsize_of(_1ad348267_real_kind_of(_433124_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1b071075e:;
						{
							_1ad2c56cd_set_f64(_433137_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1ad2c4633_as_f64(_433137_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1b07108b3:;
						{
							_1ad2c56cd_set_f64(_433137_d.get()._field_constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1ad2c4633_as_f64(_433137_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1b07076bd:;
				}
			}
		}
		_match_end_1b070606d:;
	}
}



inline jule::Bool _1ad427cb4_has_directive(jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>& _3323_directives,jule::Str _3354_tag) {
	{
		auto &expr = _3323_directives;
		auto it = expr.begin();
		_iter_begin_1b070bb01:;
		if (it != expr.end()) {
			jule::Ptr<_1aaeaeb7d_Directive> _1b0710b8d_dr = *it;
			{
				if (_1b0710b8d_dr.get()._field_tag._field_kind == _3354_tag) {
					return true;
				}
			}
			_iter_next_1b070bb01:;
			++it;
			goto _iter_begin_1b070bb01;
		}
		_iter_end_1b070bb01:;
	}
	return false;
}



inline jule::Bool _1ad438995_can_get_ptr(jule::Ptr<_1ad3e6975_Data>& _54621_d) {
	if ((!(_54621_d.get()._field_lvalue)) || _1ad3e747b_is_const(_54621_d.ptr())) {
		return false;
	}
	{
		
		if ((_1ad42d1d7_fnc(_54621_d.get()._field_kind.ptr()) != nullptr) || (_1ad42c857_enm(_54621_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1b0714312:;
			{
				return false;
			}
		}
		else {
			_case_begin_1b0713c3a:;
			{
				return true;
			}
		}
		_match_end_1b0713bd5:;
	}
}



inline jule::Bool _1ad438ca3_is_valid_for_sptr_type(jule::Ptr<_1ad429931_TypeKind>& _56132_t) {
	jule::Ptr<_1ac664551_StructIns> _56213_s = _1ad42d4b2_strct(_56132_t.ptr());
	if (((_56213_s != nullptr) && (_56213_s.get()._field_decl != nullptr)) && _56213_s.get()._field_decl.get()._field_cpp_linked) {
		return false;
	}
	return true;
}



inline jule::Bool _1ad439105_is_valid_for_ref(jule::Ptr<_1ad429931_TypeKind>& _57026_t) {
	return (_1ad42d1d7_fnc(_57026_t.ptr()) == nullptr);
}



inline jule::Bool _1ad439457_is_builtin_str_convertable(jule::Ptr<_1ad429931_TypeKind>& _57336_t) {
	return ((!(_1ad42acb7_void(_57336_t.ptr()))) && (_1ad42d1d7_fnc(_57336_t.ptr()) == nullptr)) && (_1ad42dd42_tup(_57336_t.ptr()) == nullptr);
}



inline jule::Str _1ad439798_build_link_path_by_tokens(jule::Slice<_1ab005531_Token>& _57731_tokens) {
	jule::Str _57813_s = _57731_tokens[0LL]._field_kind;
	{
		auto expr = _57731_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1b0718bc9:;
		if (it != expr.end()) {
			_1ab005531_Token &_1b0718e4e_token = *it;
			{
				_57813_s+=jule::Str("::", 2);
				_57813_s+=_1b0718e4e_token._field_kind;
			}
			_iter_next_1b0718bc9:;
			++it;
			goto _iter_begin_1b0718bc9;
		}
		_iter_end_1b0718bc9:;
	}
	return _57813_s;
}



inline jule::Ptr<_1ad42ec99_Prim> _1ad439a95_build_prim_type(jule::Str _58620_kind) {
	return jule::new_ptr<_1ad42ec99_Prim>(_1ad42ec99_Prim(_58620_kind));
}



inline jule::Ptr<_1ac661075_Struct> _1ad439e3b_get_struct_from_kind(jule::Ptr<_1ad429931_TypeKind> _59229_k) {
	{
		
		if ((_59229_k == nullptr)) {
			_case_begin_1b071a626:;
			{
				return nullptr;
			}
		}
		else if ((_1ad42d4b2_strct(_59229_k.ptr()) != nullptr)) {
			_case_begin_1b071a68c:;
			{
				return _1ad42d4b2_strct(_59229_k.ptr()).get()._field_decl;
			}
		}
		else if ((_1ad42c2a2_sptr(_59229_k.ptr()) != nullptr)) {
			_case_begin_1b071a37e:;
			{
				return _1ad439e3b_get_struct_from_kind(_1ad42c2a2_sptr(_59229_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1ad42ce0c_slc(_59229_k.ptr()) != nullptr)) {
			_case_begin_1b071a3e5:;
			{
				return _1ad439e3b_get_struct_from_kind(_1ad42ce0c_slc(_59229_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1ad42cb32_arr(_59229_k.ptr()) != nullptr)) {
			_case_begin_1b071a45b:;
			{
				return _1ad439e3b_get_struct_from_kind(_1ad42cb32_arr(_59229_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1ad42c57c_ptr(_59229_k.ptr()) != nullptr)) {
			_case_begin_1b0719e94:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1b0719dd9:;
			{
				return nullptr;
			}
		}
		_match_end_1b0719b0e:;
	}
}



inline jule::Bool _1ad43a249_is_prim(jule::Str _62112_kind) {
	return (((((((((((((((_62112_kind == jule::Str("i8", 2)) || (_62112_kind == jule::Str("i16", 3))) || (_62112_kind == jule::Str("i32", 3))) || (_62112_kind == jule::Str("i64", 3))) || (_62112_kind == jule::Str("u8", 2))) || (_62112_kind == jule::Str("u16", 3))) || (_62112_kind == jule::Str("u32", 3))) || (_62112_kind == jule::Str("u64", 3))) || (_62112_kind == jule::Str("f32", 3))) || (_62112_kind == jule::Str("f64", 3))) || (_62112_kind == jule::Str("int", 3))) || (_62112_kind == jule::Str("uint", 4))) || (_62112_kind == jule::Str("uintptr", 7))) || (_62112_kind == jule::Str("bool", 4))) || (_62112_kind == jule::Str("str", 3))) || (_62112_kind == jule::Str("any", 3));
}



inline void _1ad444a5b_apply_implicit_cast(jule::Ptr<_1ad429931_TypeKind>& _150529_dest,jule::Ptr<_1ad3e6975_Data>& _150551_d) {
	if (_1ad42a9dc_is_nil(_150551_d.get()._field_kind.ptr())) {
		return;
	}
	if ((_1ad42d78c_trt(_150529_dest.ptr()) != nullptr) && (_1ad42d78c_trt(_150551_d.get()._field_kind.ptr()) == nullptr)) {
		_150551_d.get()._field_cast_kind=_150529_dest;
		_1ad425355_apply_cast_kind_model(_150551_d);
		_150551_d.get()._field_cast_kind=nullptr;
	}
}



inline std::tuple<jule::Ptr<_1ad3e062d_SymbolTable>,jule::Slice<_1a92a31c6_Log>> _1ad4480e2_build_symbols(jule::Ptr<_1aae013a5_Ast>& _1523_ast,jule::Trait<_1ad370aca_Importer>& _1539_importer,jule::Ptr<_1ac684a05_SymbolBuilder> _1563_owner) {
	jule::Ptr<_1ac684a05_SymbolBuilder> _1613_sb = jule::new_ptr<_1ac684a05_SymbolBuilder>(_1ac684a05_SymbolBuilder(_1563_owner,_1539_importer,jule::Slice<_1a92a31c6_Log>(),_1523_ast,jule::Ptr<_1ad3e062d_SymbolTable>()));
	_1ac68ad08_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	}
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1ad376b8b_Package>,jule::Slice<_1a92a31c6_Log>> _1ad4485ed___analyze_package(jule::Slice<jule::Ptr<_1aae013a5_Ast>>& _2927_files,jule::Trait<_1ad370aca_Importer>& _2947_importer,jule::I64& _2968_flags) {
	jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>::alloc(0LL,static_cast<jule::I64>(_2927_files.len()));
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_1b0727de7:;
		if (it != expr.end()) {
			jule::Ptr<_1aae013a5_Ast> _1b0727a1d_f = *it;
			{
				jule::Ptr<_1ad3e062d_SymbolTable> _3318_table;
				jule::Slice<_1a92a31c6_Log> _3329_errors;
				std::tie(_3318_table,_3329_errors) = _1ad4480e2_build_symbols(_1b0727a1d_f,_2947_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				}
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);
			}
			_iter_next_1b0727de7:;
			++it;
			goto _iter_begin_1b0727de7;
		}
		_iter_end_1b0727de7:;
	}
	jule::Ptr<_1ad37cd5c_Sema> _4013_sema = jule::new_ptr<_1ad37cd5c_Sema>(_1ad37cd5c_Sema(jule::Slice<_1a92a31c6_Log>(),jule::Slice<jule::Ptr<_1ad3e062d_SymbolTable>>(),jule::Ptr<_1ad3e062d_SymbolTable>(),_2968_flags));
	_1ad39a583_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	}
	jule::Ptr<_1ad376b8b_Package> _4813_pkg = jule::new_ptr<_1ad376b8b_Package>(_1ad376b8b_Package(_4013_sema.get()._field_files));
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1ad376b8b_Package>,jule::Slice<_1a92a31c6_Log>> _1ad448ab5_analyze_package(jule::Slice<jule::Ptr<_1aae013a5_Ast>> _7228_files,jule::Trait<_1ad370aca_Importer> _7247_importer,jule::I64 _7267_flags) {
	if ((_7228_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_1ad376b8b_Package> _7714_package;
	jule::Slice<_1a92a31c6_Log> _7727_logs;
	std::tie(_7714_package,_7727_logs) = _1ad4485ed___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_1ac67a501_FnIns> _1ad44d515_find_builtin_fn(jule::Str _2120_ident) {
	{
		auto &_match_expr{ _2120_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1b07313ea:;
			{
				static jule::Ptr<_1ac67a501_FnIns> _2420_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad4904be_builtin_caller_out),jule::Bool()));
				return _2420_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1b0731461:;
			{
				static jule::Ptr<_1ac67a501_FnIns> _2720_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad490634_builtin_caller_outln),jule::Bool()));
				return _2720_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1b0731153:;
			{
				static jule::Ptr<_1ac67a501_FnIns> _3020_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad449de6_builtin_caller_new),jule::Bool()));
				return _3020_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1b07311b9:;
			{
				static jule::Ptr<_1ac67a501_FnIns> _3320_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad44a05b_builtin_caller_panic),jule::Bool()));
				return _3320_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1b0731230:;
			{
				static jule::Ptr<_1ac67a501_FnIns> _3620_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad491536_builtin_caller_make),jule::Bool()));
				return _3620_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1b0730e11:;
			{
				static jule::Ptr<_1ac67a501_FnIns> _3920_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad49169b_builtin_caller_append),jule::Bool()));
				return _3920_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1b0730e77:;
			{
				static jule::Ptr<_1ac67a501_FnIns> _4220_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad491811_builtin_caller_copy),jule::Bool()));
				return _4220_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1b0730edd:;
			{
				static jule::Ptr<_1ac67a501_FnIns> _4520_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad491976_builtin_caller_clone),jule::Bool()));
				return _4520_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1b0731054:;
			{
				static jule::Ptr<_1ac67a501_FnIns> _4820_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad4b3ab9_builtin_caller_assert),jule::Bool()));
				return _4820_f;
			}
		}
		else {
			_case_begin_1b073087d:;
			{
				return nullptr;
			}
		}
		_match_end_1b0730bbe:;
	}
}



inline jule::Ptr<_1ad428996_TypeAlias> _1ad4760a9_find_builtin_type_alias(jule::Str _5528_ident) {
	{
		auto &_match_expr{ _5528_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1b0736bc5:;
			{
				static jule::Ptr<_1ad428996_TypeAlias> _5820_t = jule::new_ptr<_1ad428996_TypeAlias>(_1ad428996_TypeAlias(jule::Ptr<_1ab01d615_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_1ab005531_Token(),jule::Str(),jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("u8", 2)), 5))))),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>()));
				return _5820_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1b0736c91:;
			{
				static jule::Ptr<_1ad428996_TypeAlias> _6820_t = jule::new_ptr<_1ad428996_TypeAlias>(_1ad428996_TypeAlias(jule::Ptr<_1ab01d615_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_1ab005531_Token(),jule::Str(),jule::new_ptr<_1ad42e293_TypeSymbol>(_1ad42e293_TypeSymbol(jule::Ptr<_1aae075dc_TypeDecl>(),jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("i32", 3)), 5))))),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1ad428996_TypeAlias>>()));
				return _6820_t;
			}
		}
		else {
			_case_begin_1b073671e:;
			{
				return nullptr;
			}
		}
		_match_end_1b07368c8:;
	}
}



inline jule::Ptr<_1ac85d096_Trait> _1ad4a1755_find_builtin_trait(jule::Str _8223_ident) {
	return nullptr;
}



inline jule::Any _1ad45124e_find_builtin_def(jule::Str _8621_ident) {
	jule::Ptr<_1ac67a501_FnIns> _8713_f = _1ad44d515_find_builtin_fn(_8621_ident);
	if ((_8713_f != nullptr)) {
		return jule::Any(_8713_f);
	}
	jule::Ptr<_1ad428996_TypeAlias> _9213_ta = _1ad4760a9_find_builtin_type_alias(_8621_ident);
	if ((_9213_ta != nullptr)) {
		return jule::Any(_9213_ta);
	}
	jule::Ptr<_1ac85d096_Trait> _9713_t = _1ad4a1755_find_builtin_trait(_8621_ident);
	if ((_9713_t != nullptr)) {
		return jule::Any(_9713_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _1ad452063_find_builtin_def_std_debug(jule::Str _10531_ident) {
	{
		auto &_match_expr{ _10531_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1b073b67a:;
			{
				static jule::Ptr<_1ac67a501_FnIns> _10820_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad4b5aaa_builtin_caller_std_debug_out),jule::Bool()));
				return jule::Any(_10820_f);
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1b073b4d2:;
			{
				static jule::Ptr<_1ac67a501_FnIns> _11120_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad4b60a5_builtin_caller_std_debug_outln),jule::Bool()));
				return jule::Any(_11120_f);
			}
		}
		else {
			_case_begin_1b073b0a3:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1b0739a30:;
	}
}



inline jule::Any _1ad452d77_find_builtin_def_std_mem(jule::Str _11829_ident) {
	{
		auto &_match_expr{ _11829_ident };
		
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_1b073d171:;
			{
				static jule::Ptr<_1ac67a501_FnIns> _12120_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad4b40c5_builtin_caller_std_mem_size_of),jule::Bool()));
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_1b073d1d7:;
			{
				static jule::Ptr<_1ac67a501_FnIns> _12420_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad4b45c0_builtin_caller_std_mem_align_of),jule::Bool()));
				return jule::Any(_12420_f);
			}
		}
		else if (_match_expr == jule::Str("free", 4)) {
			_case_begin_1b073cec8:;
			{
				static jule::Ptr<_1ac67a501_FnIns> _12720_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad4b4aba_builtin_caller_std_mem_free),jule::Bool()));
				return jule::Any(_12720_f);
			}
		}
		else {
			_case_begin_1b073c5c1:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1b073cdda:;
	}
}



inline jule::Any _1ad455352_find_builtin_def_std_jule_integrated(jule::Str _13441_ident) {
	{
		auto &_match_expr{ _13441_ident };
		
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_1b074077d:;
			{
				static jule::Ptr<_1ac67a501_FnIns> _13720_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad4b50d7_builtin_caller_std_jule_integrated_to_str),jule::Bool()));
				return jule::Any(_13720_f);
			}
		}
		else if (_match_expr == jule::Str("emit", 4)) {
			_case_begin_1b07405d5:;
			{
				static jule::Ptr<_1ac67a501_FnIns> _14020_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>(),jule::Ptr<_1ad429931_TypeKind>(),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad4b55d2_builtin_caller_std_jule_integrated_emit),jule::Bool()));
				return jule::Any(_14020_f);
			}
		}
		else {
			_case_begin_1b073d03e:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1b074034e:;
	}
}



inline jule::Any _1ad474a58_find_package_builtin_def(jule::Str _14729_link_path,jule::Str _14745_ident) {
	{
		auto &_match_expr{ _14729_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1b074232e:;
			{
				return _1ad452063_find_builtin_def_std_debug(_14745_ident);
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1b0742395:;
			{
				return _1ad452d77_find_builtin_def_std_mem(_14745_ident);
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1b0742186:;
			{
				return _1ad455352_find_builtin_def_std_jule_integrated(_14745_ident);
			}
		}
		else {
			_case_begin_1b0741b47:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1b0741ae2:;
	}
}



inline jule::Ptr<_1ad3e6975_Data> _1ad479871_builtin_caller_common_plain(jule::Ptr<_1ad3e89cc_Eval>& _16037_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _16052_fc,jule::Ptr<_1ad3e6975_Data>& _16074_d) {
	jule::Ptr<_1ac67a501_FnIns> _16113_f = _1ad42d1d7_fnc(_16074_d.get()._field_kind.ptr());
	_1ad3d55e0_FnCallArgChecker _16313_fcac = _1ad3d55e0_FnCallArgChecker(_16037_e,_16052_fc.get()._field_args,_16052_fc.get()._field_token,_16113_f,false,jule::Slice<jule::Any>());
	if ((!(_1ad3d81e7_check(&_16313_fcac)))) {
		return nullptr;
	}
	jule::Ptr<_1ac66904a_FnCallExprModel> _17413_model = jule::new_ptr<_1ac66904a_FnCallExprModel>(_1ac66904a_FnCallExprModel(_16052_fc.get()._field_token,_16113_f,jule::Bool(),_16074_d.get()._field_model,_16313_fcac._field_arg_models,jule::Ptr<_1ad33ce0a_Scope>(),jule::Bool()));
	if ((_16113_f.get()._field_result == nullptr)) {
		_16074_d=_1ad42580b_build_void_data();
	} else {
		_16074_d=jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(_16113_f.get()._field_result,jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
	}
	_16074_d.get()._field_model=jule::Any(_17413_model);
	return _16074_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad44c39e_builtin_caller_common(jule::Ptr<_1ad3e89cc_Eval>& _19331_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _19346_fc,jule::Ptr<_1ad3e6975_Data>& _19368_d) {
	if ((_19346_fc.get()._field_generics.len() > 0LL)) {
		_1ad3e90b5_push_err(_19331_e.ptr(), _19346_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	return _1ad479871_builtin_caller_common_plain(_19331_e,_19346_fc,_19368_d);
}



inline jule::Ptr<_1ad3e6975_Data> _1ad44a29d_builtin_caller_common_mut(jule::Ptr<_1ad3e89cc_Eval>& _20135_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _20150_fc,jule::Ptr<_1ad3e6975_Data>& _20172_d) {
	if ((!(_20172_d.get()._field_mutable))) {
		_1ad3e90b5_push_err(_20135_e.ptr(), _20150_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	}
	return _1ad44c39e_builtin_caller_common(_20135_e,_20150_fc,_20172_d);
}



inline jule::Ptr<_1ad3e6975_Data> _1ad44a413_builtin_caller_error(jule::Ptr<_1ad3e89cc_Eval>& _20830_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _20845_fc) {
	if ((_20845_fc.get()._field_generics.len() > 0LL)) {
		_1ad3e90b5_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_20845_fc.get()._field_args.len() < 1LL)) {
		_1ad3e90b5_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	}
	if ((_20845_fc.get()._field_args.len() > 1LL)) {
		_1ad3e90b5_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _21913_expr = _1ad418c83_eval_expr(_20830_e, _20845_fc.get()._field_args[0LL]);
	if ((_21913_expr == nullptr)) {
		return nullptr;
	}
	if (_1ad3e6dc6_is_nil(_21913_expr.ptr())) {
		_1ad3e90b5_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[0LL].get()._field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _22813_d = _1ad42580b_build_void_data();
	_22813_d.get()._field_model=jule::Any(jule::new_ptr<_1ac671816_BuiltinErrorCallExprModel>(_1ac671816_BuiltinErrorCallExprModel(jule::Ptr<_1ac67a501_FnIns>(),_21913_expr.get()._field_model)));
	return _22813_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4904be_builtin_caller_out(jule::Ptr<_1ad3e89cc_Eval>& _23628_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _23643_fc,jule::Ptr<_1ad3e6975_Data>& ) {
	if ((_23643_fc.get()._field_generics.len() > 0LL)) {
		_1ad3e90b5_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_23643_fc.get()._field_args.len() < 1LL)) {
		_1ad3e90b5_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	}
	if ((_23643_fc.get()._field_args.len() > 1LL)) {
		_1ad3e90b5_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _24813_expr = _1ad418c83_eval_expr(_23628_e, _23643_fc.get()._field_args[0LL]);
	if ((_24813_expr == nullptr)) {
		return nullptr;
	}
	if ((!(_1ad439457_is_builtin_str_convertable(_24813_expr.get()._field_kind)))) {
		_1ad3e90b5_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ad3e6975_Data> _25813_d = _1ad42580b_build_void_data();
	_25813_d.get()._field_model=jule::Any(jule::new_ptr<_1ac66ddeb_BuiltinOutCallExprModel>(_1ac66ddeb_BuiltinOutCallExprModel(_24813_expr.get()._field_model,jule::Bool())));
	return _25813_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad490634_builtin_caller_outln(jule::Ptr<_1ad3e89cc_Eval>& _26330_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _26345_fc,jule::Ptr<_1ad3e6975_Data>& _26367_d) {
	_26367_d=_1ad4904be_builtin_caller_out(_26330_e,_26345_fc,_26367_d);
	if ((_26367_d == nullptr)) {
		return nullptr;
	}
	_26367_d.get()._field_model=jule::Any(jule::new_ptr<_1ac66e3b3_BuiltinOutlnCallExprModel>(_1ac66e3b3_BuiltinOutlnCallExprModel(_26367_d.get()._field_model.operator jule::Ptr<_1ac66ddeb_BuiltinOutCallExprModel>().get()._field_expr,jule::Bool())));
	return _26367_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad449de6_builtin_caller_new(jule::Ptr<_1ad3e89cc_Eval>& _27528_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _27543_fc,jule::Ptr<_1ad3e6975_Data>& _27565_d) {
	if ((_27543_fc.get()._field_generics.len() > 0LL)) {
		_1ad3e90b5_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_27543_fc.get()._field_args.len() < 1LL)) {
		_1ad3e90b5_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	}
	if ((_27543_fc.get()._field_args.len() > 2LL)) {
		_1ad3e90b5_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _28713_t = _1ad418524_eval_expr_kind(_27528_e, _27543_fc.get()._field_args[0LL].get()._field_kind);
	if ((_28713_t == nullptr)) {
		return nullptr;
	}
	if ((!(_28713_t.get()._field_decl))) {
		_1ad3e90b5_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_1ad438ca3_is_valid_for_sptr_type(_28713_t.get()._field_kind)))) {
		jule::Ptr<_1ac664551_StructIns> _29817_s = _1ad42d4b2_strct(_28713_t.get()._field_kind.ptr());
		if (((_29817_s != nullptr) && (_29817_s.get()._field_decl != nullptr)) && _29817_s.get()._field_decl.get()._field_cpp_linked) {
			_1ad3e90b5_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	_27565_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(jule::new_ptr<_1ad433b05_Sptr>(_1ad433b05_Sptr(_28713_t.get()._field_kind)), 6)));
	if ((_27543_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1ad429931_TypeKind> _31217_old = _27528_e.get()._field_prefix;
		_27528_e.get()._field_prefix=_28713_t.get()._field_kind;
		jule::Ptr<_1ad3e6975_Data> _31517_init = _1ad418c83_eval_expr(_27528_e, _27543_fc.get()._field_args[1LL]);
		_27528_e.get()._field_prefix=_31217_old;
		if ((_31517_init != nullptr)) {
			_1ab005531_Token _32021_token = _27543_fc.get()._field_args[1LL].get()._field_token;
			
			_1ad389aa0_check_validity_for_init_expr(_27528_e.get()._field_s, (!(_27528_e.get()._field_immutable)),false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_1ad387619_check_assign_type(_27528_e.get()._field_s, false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1ac66ec43_BuiltinNewCallExprModel>(_1ac66ec43_BuiltinNewCallExprModel(_28713_t.get()._field_kind,_31517_init.get()._field_model)));
		}
	} else {
		_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1ac66ec43_BuiltinNewCallExprModel>(_1ac66ec43_BuiltinNewCallExprModel(_28713_t.get()._field_kind,jule::Any())));
	}
	return _27565_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad44a05b_builtin_caller_panic(jule::Ptr<_1ad3e89cc_Eval>& _34030_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _34045_fc,jule::Ptr<_1ad3e6975_Data>& ) {
	if ((_34045_fc.get()._field_generics.len() > 0LL)) {
		_1ad3e90b5_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_34045_fc.get()._field_args.len() < 1LL)) {
		_1ad3e90b5_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	}
	if ((_34045_fc.get()._field_args.len() > 1LL)) {
		_1ad3e90b5_push_err(_34030_e.ptr(), _34045_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _35213_expr = _1ad418c83_eval_expr(_34030_e, _34045_fc.get()._field_args[0LL]);
	if ((_35213_expr == nullptr)) {
		return nullptr;
	}
	if ((_1ad42bec7_prim(_35213_expr.get()._field_kind.ptr()) == nullptr) || (!(_1ad4334c8_is_str(_1ad42bec7_prim(_35213_expr.get()._field_kind.ptr()).ptr())))) {
		_1ad3e90b5_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _36113_d = _1ad42580b_build_void_data();
	_36113_d.get()._field_model=jule::Any(jule::new_ptr<_1ac67020a_BuiltinPanicCallExprModel>(_1ac67020a_BuiltinPanicCallExprModel(_34045_fc.get()._field_token,_35213_expr.get()._field_model)));
	return _36113_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad491536_builtin_caller_make(jule::Ptr<_1ad3e89cc_Eval>& _36929_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _36944_fc,jule::Ptr<_1ad3e6975_Data>& _36966_d) {
	if ((_36944_fc.get()._field_generics.len() > 0LL)) {
		_1ad3e90b5_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_36944_fc.get()._field_args.len() < 2LL)) {
		if ((_36944_fc.get()._field_args.len() == 1LL)) {
			_1ad3e90b5_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		}
		_1ad3e90b5_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	}
	if ((_36944_fc.get()._field_args.len() > 3LL)) {
		_1ad3e90b5_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[3LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _38513_t = _1ad418524_eval_expr_kind(_36929_e, _36944_fc.get()._field_args[0LL].get()._field_kind);
	if ((_38513_t == nullptr)) {
		return nullptr;
	}
	if ((!(_38513_t.get()._field_decl)) || (_1ad42ce0c_slc(_38513_t.get()._field_kind.ptr()) == nullptr)) {
		_1ad3e90b5_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	_36966_d.get()._field_kind=_38513_t.get()._field_kind;
	jule::Ptr<_1ad3e6975_Data> _39713_len = _1ad418c83_eval_expr(_1ad386b24_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38513_t.get()._field_kind), _36944_fc.get()._field_args[1LL]);
	if ((_39713_len == nullptr)) {
		return _36966_d;
	}
	_1ad4045dc_check_integer_indexing_by_data(_36929_e.ptr(), _39713_len,_36944_fc.get()._field_args[1LL].get()._field_token);
	if ((_36944_fc.get()._field_args.len() == 3LL)) {
		jule::Ptr<_1ad3e6975_Data> _40517_cap = _1ad418c83_eval_expr(_1ad386b24_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38513_t.get()._field_kind), _36944_fc.get()._field_args[2LL]);
		if ((_40517_cap == nullptr)) {
			return _36966_d;
		}
		_1ad4045dc_check_integer_indexing_by_data(_36929_e.ptr(), _40517_cap,_36944_fc.get()._field_args[2LL].get()._field_token);
		_36966_d.get()._field_model=jule::Any(jule::new_ptr<_1ac670d87_BuiltinMakeCallExprModel>(_1ac670d87_BuiltinMakeCallExprModel(_38513_t.get()._field_kind,_39713_len.get()._field_model,_40517_cap.get()._field_model)));
	} else {
		_36966_d.get()._field_model=jule::Any(jule::new_ptr<_1ac670d87_BuiltinMakeCallExprModel>(_1ac670d87_BuiltinMakeCallExprModel(_38513_t.get()._field_kind,_39713_len.get()._field_model,jule::Any())));
	}
	return _36966_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad49169b_builtin_caller_append(jule::Ptr<_1ad3e89cc_Eval>& _42631_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _42646_fc,jule::Ptr<_1ad3e6975_Data>& _42668_d) {
	if ((_42646_fc.get()._field_generics.len() > 0LL)) {
		_1ad3e90b5_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_42646_fc.get()._field_args.len() < 2LL)) {
		if ((_42646_fc.get()._field_args.len() == 1LL)) {
			_1ad3e90b5_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_1ad3e90b5_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	jule::Ptr<_1ad3e6975_Data> _43913_t = _1ad418c83_eval_expr(_42631_e, _42646_fc.get()._field_args[0LL]);
	if ((_43913_t == nullptr)) {
		return nullptr;
	}
	if ((_1ad42ce0c_slc(_43913_t.get()._field_kind.ptr()) == nullptr)) {
		_1ad3e90b5_push_err(_42631_e.ptr(), _42646_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ac67a501_FnIns> _44913_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>({jule::new_ptr<_1ac67939b_ParamIns>(_1ac67939b_ParamIns(jule::new_ptr<_1ac674bd2_Param>(_1ac674bd2_Param(_1ab005531_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_1ad42e293_TypeSymbol>(),jule::Str())),_43913_t.get()._field_kind)),jule::new_ptr<_1ac67939b_ParamIns>(_1ac67939b_ParamIns(jule::new_ptr<_1ac674bd2_Param>(_1ac674bd2_Param(_1ab005531_Token(),true,true,jule::Bool(),jule::Ptr<_1ad42e293_TypeSymbol>(),jule::Str())),_1ad42ce0c_slc(_43913_t.get()._field_kind.ptr()).get()._field_elem))}),_43913_t.get()._field_kind,jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad479871_builtin_caller_common_plain),jule::Bool()));
	_42668_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_44913_f, 1)));
	_42668_d.get()._field_model=jule::Any(jule::new_ptr<_1ac66cdea_CommonIdentExprModel>(_1ac66cdea_CommonIdentExprModel(jule::Str("append", 6))));
	_42668_d=_1ad479871_builtin_caller_common_plain(_42631_e,_42646_fc,_42668_d);
	if ((_42668_d != nullptr)) {
		jule::Ptr<_1ac66904a_FnCallExprModel> _47717_model = _42668_d.get()._field_model.operator jule::Ptr<_1ac66904a_FnCallExprModel>();
		_42668_d.get()._field_model=jule::Any(jule::new_ptr<_1ac67134e_BuiltinAppendCallExprModel>(_1ac67134e_BuiltinAppendCallExprModel(_47717_model.get()._field_args[0LL],_47717_model.get()._field_args[1LL])));
	}
	return _42668_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad491811_builtin_caller_copy(jule::Ptr<_1ad3e89cc_Eval>& _48629_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _48644_fc,jule::Ptr<_1ad3e6975_Data>& _48666_d) {
	if ((_48644_fc.get()._field_generics.len() > 0LL)) {
		_1ad3e90b5_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_48644_fc.get()._field_args.len() < 2LL)) {
		if ((_48644_fc.get()._field_args.len() == 1LL)) {
			_1ad3e90b5_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_1ad3e90b5_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	if ((_48644_fc.get()._field_args.len() > 2LL)) {
		_1ad3e90b5_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _50213_dest = _1ad418c83_eval_expr(_48629_e, _48644_fc.get()._field_args[0LL]);
	if ((_50213_dest == nullptr)) {
		return nullptr;
	}
	if ((_1ad42ce0c_slc(_50213_dest.get()._field_kind.ptr()) == nullptr)) {
		_1ad3e90b5_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_50213_dest.get()._field_mutable))) {
		_1ad3e90b5_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ac674bd2_Param> _51413_empty_param = jule::new_ptr<_1ac674bd2_Param>();
	jule::Ptr<_1ac67a501_FnIns> _51513_f = jule::new_ptr<_1ac67a501_FnIns>(_1ac67a501_FnIns(jule::Ptr<_1ac664551_StructIns>(),jule::Ptr<_1ac676a08_Fn>(),jule::Slice<jule::Ptr<_1ad429931_TypeKind>>(),jule::Slice<jule::Ptr<_1ac67939b_ParamIns>>({jule::new_ptr<_1ac67939b_ParamIns>(_1ac67939b_ParamIns(_51413_empty_param,_50213_dest.get()._field_kind)),jule::new_ptr<_1ac67939b_ParamIns>(_1ac67939b_ParamIns(_51413_empty_param,_50213_dest.get()._field_kind))}),jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1ad33ce0a_Scope>(),jule::Ptr<_1ac67de2d_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1ad3e6975_Data>(jule::Ptr<_1ad3e89cc_Eval>&,jule::Ptr<_1ab01b3d2_FnCallExpr>&,jule::Ptr<_1ad3e6975_Data>&)>(_1ad479871_builtin_caller_common_plain),jule::Bool()));
	_48666_d.get()._field_kind=jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_51513_f, 1)));
	_48666_d.get()._field_model=jule::Any(jule::new_ptr<_1ac66cdea_CommonIdentExprModel>(_1ac66cdea_CommonIdentExprModel(jule::Str("copy", 4))));
	_48666_d=_1ad479871_builtin_caller_common_plain(_48629_e,_48644_fc,_48666_d);
	if ((_48666_d != nullptr)) {
		jule::Ptr<_1ad3e6975_Data> _54017_src = _48666_d.get()._field_model.operator jule::Ptr<_1ac66904a_FnCallExprModel>().get()._field_args[1LL].operator jule::Ptr<_1ad3e6975_Data>();
		jule::Ptr<_1ad4346d8_Slc> _54117_slc = _1ad42ce0c_slc(_54017_src.get()._field_kind.ptr());
		if ((!(_54017_src.get()._field_mutable)) && _1ad42b092_mutable(_54117_slc.get()._field_elem.ptr())) {
			_1ad3e90b5_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[1LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		}
	}
	return _48666_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad491976_builtin_caller_clone(jule::Ptr<_1ad3e89cc_Eval>& _54930_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _54945_fc,jule::Ptr<_1ad3e6975_Data>& ) {
	if ((_54945_fc.get()._field_generics.len() > 0LL)) {
		_1ad3e90b5_push_err(_54930_e.ptr(), _54945_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_54945_fc.get()._field_args.len() < 1LL)) {
		_1ad3e90b5_push_err(_54930_e.ptr(), _54945_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((_54945_fc.get()._field_args.len() > 1LL)) {
		_1ad3e90b5_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _56213_d = _1ad418524_eval_expr_kind(_54930_e, _54945_fc.get()._field_args[0LL].get()._field_kind);
	if ((_56213_d == nullptr)) {
		return nullptr;
	}
	if ((!(_1ad42b922_supports_cloning(_56213_d.get()._field_kind.ptr())))) {
		{
			
			if ((_1ad42ce0c_slc(_56213_d.get()._field_kind.ptr()) != nullptr) || (_1ad42da67_map(_56213_d.get()._field_kind.ptr()) != nullptr) || (_1ad42cb32_arr(_56213_d.get()._field_kind.ptr()) != nullptr) || (_1ad42c2a2_sptr(_56213_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1b0d2b9c3:;
				{
					{
						_1ad3e90b5_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_56213_d.get()._field_kind.ptr()))}));
					}
				}
			}
			else if ((_1ad42d4b2_strct(_56213_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1b0d2b363:;
				{
					{
						_1ad3e90b5_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_56213_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					}
				}
			}
			else {
				_case_begin_1b0d2b2ec:;
				{
					{
						_1ad3e90b5_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>({jule::Any(_1ad429d4e_to_str(_56213_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					}
				}
			}
			_match_end_1b0d2ab7b:;
		}
	}
	_56213_d.get()._field_mutable=true;
	_56213_d.get()._field_model=jule::Any(jule::new_ptr<_1ac66e77b_BuiltinCloneCallExprModel>(_1ac66e77b_BuiltinCloneCallExprModel(_56213_d.get()._field_model)));
	return _56213_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4b3ab9_builtin_caller_assert(jule::Ptr<_1ad3e89cc_Eval>& _59531_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _59546_fc,jule::Ptr<_1ad3e6975_Data>& ) {
	if ((_59546_fc.get()._field_generics.len() > 0LL)) {
		_1ad3e90b5_push_err(_59531_e.ptr(), _59546_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_59546_fc.get()._field_args.len() < 1LL)) {
		_1ad3e90b5_push_err(_59531_e.ptr(), _59546_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((_59546_fc.get()._field_args.len() > 2LL)) {
		_1ad3e90b5_push_err(_59531_e.ptr(), _59546_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _60713_expr = _1ad418c83_eval_expr(_59531_e, _59546_fc.get()._field_args[0LL]);
	if ((_60713_expr == nullptr)) {
		return nullptr;
	}
	if ((_1ad42bec7_prim(_60713_expr.get()._field_kind.ptr()) == nullptr) || (!(_1ad4331ed_is_bool(_1ad42bec7_prim(_60713_expr.get()._field_kind.ptr()).ptr())))) {
		_1ad3e90b5_push_err(_59531_e.ptr(), _59546_fc.get()._field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ac6707c1_BuiltinAssertCallExprModel> _61613_model = jule::new_ptr<_1ac6707c1_BuiltinAssertCallExprModel>(_1ac6707c1_BuiltinAssertCallExprModel(_59546_fc.get()._field_token,_60713_expr.get()._field_model,jule::Str("assertion failed", 16)));
	if ((_59546_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1ad3e6975_Data> _62417_log = _1ad418c83_eval_expr(_59531_e, _59546_fc.get()._field_args[1LL]);
		if ((_62417_log == nullptr)) {
			return nullptr;
		}
		if (((!(_1ad3e747b_is_const(_62417_log.ptr()))) || (_1ad42bec7_prim(_62417_log.get()._field_kind.ptr()) == nullptr)) || (!(_1ad4334c8_is_str(_1ad42bec7_prim(_62417_log.get()._field_kind.ptr()).ptr())))) {
			_1ad3e90b5_push_err(_59531_e.ptr(), _59546_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("const str", 9)),jule::Any(_1ad429d4e_to_str(_62417_log.get()._field_kind.ptr()))}));
			return nullptr;
		}
		_61613_model.get()._field_log=_1ad2c39c8_read_str(_62417_log.get()._field_constant.ptr());
	}
	jule::Ptr<_1ad3e6975_Data> _63713_d = _1ad42580b_build_void_data();
	_63713_d.get()._field_model=jule::Any(_61613_model);
	return _63713_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4b40c5_builtin_caller_std_mem_size_of(jule::Ptr<_1ad3e89cc_Eval>& _64240_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _64255_fc,jule::Ptr<_1ad3e6975_Data>& ) {
	if ((_64255_fc.get()._field_generics.len() > 0LL)) {
		_1ad3e90b5_push_err(_64240_e.ptr(), _64255_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _64613_result = jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("uint", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
	if ((_64255_fc.get()._field_args.len() < 1LL)) {
		_1ad3e90b5_push_err(_64240_e.ptr(), _64255_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _64613_result;
	}
	if ((_64255_fc.get()._field_args.len() > 1LL)) {
		_1ad3e90b5_push_err(_64240_e.ptr(), _64255_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _65813_d = _1ad418524_eval_expr_kind(_64240_e, _64255_fc.get()._field_args[0LL].get()._field_kind);
	if ((_65813_d == nullptr)) {
		return _64613_result;
	}
	_64613_result.get()._field_model=jule::Any(jule::new_ptr<_1ac671b46_SizeofExprModel>(_1ac671b46_SizeofExprModel(_65813_d.get()._field_model)));
	return _64613_result;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4b45c0_builtin_caller_std_mem_align_of(jule::Ptr<_1ad3e89cc_Eval>& _66741_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _66756_fc,jule::Ptr<_1ad3e6975_Data>& ) {
	if ((_66756_fc.get()._field_generics.len() > 0LL)) {
		_1ad3e90b5_push_err(_66741_e.ptr(), _66756_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _67113_result = jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("uint", 4)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
	if ((_66756_fc.get()._field_args.len() < 1LL)) {
		_1ad3e90b5_push_err(_66741_e.ptr(), _66756_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _67113_result;
	}
	if ((_66756_fc.get()._field_args.len() > 1LL)) {
		_1ad3e90b5_push_err(_66741_e.ptr(), _66756_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _68313_d = _1ad418524_eval_expr_kind(_66741_e, _66756_fc.get()._field_args[0LL].get()._field_kind);
	if ((_68313_d == nullptr)) {
		return _67113_result;
	}
	_67113_result.get()._field_model=jule::Any(jule::new_ptr<_1ac6722ea_AlignofExprModel>(_1ac6722ea_AlignofExprModel(_68313_d.get()._field_model)));
	return _67113_result;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4b4aba_builtin_caller_std_mem_free(jule::Ptr<_1ad3e89cc_Eval>& _69237_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _69252_fc,jule::Ptr<_1ad3e6975_Data>& ) {
	if ((_69252_fc.get()._field_generics.len() > 0LL)) {
		_1ad3e90b5_push_err(_69237_e.ptr(), _69252_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_69252_fc.get()._field_args.len() < 1LL)) {
		_1ad3e90b5_push_err(_69237_e.ptr(), _69252_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	}
	if ((_69252_fc.get()._field_args.len() > 1LL)) {
		_1ad3e90b5_push_err(_69237_e.ptr(), _69252_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _70513_d = _1ad418524_eval_expr_kind(_69237_e, _69252_fc.get()._field_args[0LL].get()._field_kind);
	if ((_70513_d == nullptr)) {
		return nullptr;
	}
	if ((!(_1ad42b647_performs_rc(_70513_d.get()._field_kind.ptr())))) {
		_1ad3e90b5_push_err(_69237_e.ptr(), _69252_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _71413_result = _1ad42580b_build_void_data();
	_71413_result.get()._field_model=jule::Any(jule::new_ptr<_1ac6731a8_FreeExprModel>(_1ac6731a8_FreeExprModel(_70513_d.get()._field_model)));
	return _71413_result;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4b50d7_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1ad3e89cc_Eval>& _71951_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _71966_fc,jule::Ptr<_1ad3e6975_Data>& ) {
	if ((_71966_fc.get()._field_generics.len() > 0LL)) {
		_1ad3e90b5_push_err(_71951_e.ptr(), _71966_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_71966_fc.get()._field_args.len() < 1LL)) {
		_1ad3e90b5_push_err(_71951_e.ptr(), _71966_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((_71966_fc.get()._field_args.len() > 1LL)) {
		_1ad3e90b5_push_err(_71951_e.ptr(), _71966_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ad3e6975_Data> _73213_d = _1ad418524_eval_expr_kind(_71951_e, _71966_fc.get()._field_args[0LL].get()._field_kind);
	if ((_73213_d == nullptr)) {
		return nullptr;
	}
	if ((!(_1ad439457_is_builtin_str_convertable(_73213_d.get()._field_kind)))) {
		_1ad3e90b5_push_err(_71951_e.ptr(), _71966_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1ad3e6975_Data>(_1ad3e6975_Data(jule::new_ptr<_1ad429931_TypeKind>(_1ad429931_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1ad4293e2_Kind>(_1ad439a95_build_prim_type(jule::Str("str", 3)), 5))),jule::Ptr<_1ad429931_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ac672927_IntegratedToStrExprModel>(_1ac672927_IntegratedToStrExprModel(_73213_d.get()._field_model)))),jule::Bool(),jule::Ptr<_1ad2c1d8e_Const>()));
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4b55d2_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1ad3e89cc_Eval>& _75049_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _75064_fc,jule::Ptr<_1ad3e6975_Data>& ) {
	if ((!(_1ad3e9c20_is_unsafe(_75049_e.ptr())))) {
		_1ad3e90b5_push_err(_75049_e.ptr(), _75064_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	if ((_75064_fc.get()._field_args.len() < 1LL)) {
		_1ad3e90b5_push_err(_75049_e.ptr(), _75064_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	}
	jule::Ptr<_1ad3e6975_Data> _76013_d = _1ad418c83_eval_expr(_75049_e, _75064_fc.get()._field_args[0LL]);
	if ((_76013_d == nullptr)) {
		return nullptr;
	}
	if ((_1ad42bec7_prim(_76013_d.get()._field_kind.ptr()) == nullptr) || (!(_1ad4334c8_is_str(_1ad42bec7_prim(_76013_d.get()._field_kind.ptr()).ptr())))) {
		_1ad3e90b5_push_err(_75049_e.ptr(), _75064_fc.get()._field_args[0LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1ad429d4e_to_str(_76013_d.get()._field_kind.ptr()))}));
		return nullptr;
	}
	if ((!(_1ad3e747b_is_const(_76013_d.ptr()))) || (!(_1ad2c657a_is_str(_76013_d.get()._field_constant.ptr())))) {
		_1ad3e90b5_push_err(_75049_e.ptr(), _75064_fc.get()._field_args[0LL].get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ad3e6975_Data> _77513_r = _1ad42580b_build_void_data();
	if ((_75064_fc.get()._field_generics.len() != 0LL)) {
		if ((!(_1ad382922_check_generic_quantity(_75049_e.get()._field_s.ptr(), 1LL,static_cast<jule::I64>(_75064_fc.get()._field_generics.len()),_75064_fc.get()._field_token)))) {
			return nullptr;
		}
		jule::Ptr<_1ad42e293_TypeSymbol> _78117_k = _1ac680924_build_type(_75064_fc.get()._field_generics[0LL]);
		if ((!(_1ad385408_check_type(_75049_e.get()._field_s, _78117_k,_75049_e.get()._field_lookup)))) {
			return nullptr;
		}
		_77513_r.get()._field_kind=_78117_k.get()._field_kind;
	}
	jule::Ptr<_1ac672d56_BackendEmitExprModel> _78813_model = jule::new_ptr<_1ac672d56_BackendEmitExprModel>(_1ac672d56_BackendEmitExprModel(_1ad2c39c8_read_str(_76013_d.get()._field_constant.ptr()),jule::Slice<jule::Any>()));
	if ((_75064_fc.get()._field_args.len() > 1LL)) {
		_78813_model.get()._field_exprs=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>((_75064_fc.get()._field_args.len() - 1LL)));
		{
			auto expr = _75064_fc.get()._field_args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1b0d63b4d:;
			if (it != expr.end()) {
				jule::Ptr<_1aadb528c_Expr> _1b0d64555_arg = *it;
				{
					jule::Ptr<_1ad3e6975_Data> _79521_argd = _1ad418524_eval_expr_kind(_75049_e, _1b0d64555_arg.get()._field_kind);
					if ((_79521_argd == nullptr)) {
						return nullptr;
					}
					_78813_model.get()._field_exprs = jule::alloc_for_append(_78813_model.get()._field_exprs,1);_78813_model.get()._field_exprs.__push(_79521_argd.get()._field_model);
				}
				_iter_next_1b0d63b4d:;
				++it;
				goto _iter_begin_1b0d63b4d;
			}
			_iter_end_1b0d63b4d:;
		}
	}
	_77513_r.get()._field_model=jule::Any(_78813_model);
	return _77513_r;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4b5aaa_builtin_caller_std_debug_out(jule::Ptr<_1ad3e89cc_Eval>& _80738_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _80753_fc,jule::Ptr<_1ad3e6975_Data>& _80775_d) {
	_80775_d=_1ad4904be_builtin_caller_out(_80738_e,_80753_fc,_80775_d);
	if ((_80775_d == nullptr)) {
		return nullptr;
	}
	_80775_d.get()._field_model.operator jule::Ptr<_1ac66ddeb_BuiltinOutCallExprModel>().get()._field_debug=true;
	return _80775_d;
}



inline jule::Ptr<_1ad3e6975_Data> _1ad4b60a5_builtin_caller_std_debug_outln(jule::Ptr<_1ad3e89cc_Eval>& _81740_e,jule::Ptr<_1ab01b3d2_FnCallExpr>& _81755_fc,jule::Ptr<_1ad3e6975_Data>& _81777_d) {
	_81777_d=_1ad490634_builtin_caller_outln(_81740_e,_81755_fc,_81777_d);
	if ((_81777_d == nullptr)) {
		return nullptr;
	}
	_81777_d.get()._field_model.operator jule::Ptr<_1ac66e3b3_BuiltinOutlnCallExprModel>().get()._field_debug=true;
	return _81777_d;
}



inline std::tuple<jule::Bool,jule::Bool> _1b4ae4831_check_os(jule::Str _913_arg) {
	jule::Bool _925_ok = jule::Bool();
	jule::Bool _935_exist = jule::Bool();
	_925_ok=false;
	_935_exist=true;
	{
		auto &_match_expr{ _913_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1b0da485e:;
			{
				_925_ok=_1a92a71ca_is_windows(_1a92b60c9_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1b0da4298:;
			{
				_925_ok=_1a92a752c_is_darwin(_1a92b60c9_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1b0da430e:;
			{
				_925_ok=_1a92a783a_is_linux(_1a92b60c9_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1b0da4375:;
			{
				_925_ok=_1a92a85b6_is_unix(_1a92b60c9_OS);
			}
		}
		else {
			_case_begin_1b0da39d4:;
			{
				_925_ok=true;
				_935_exist=false;
			}
		}
		_match_end_1b0da3e46:;
	}
	return std::make_tuple(_925_ok,_935_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1b4ae4a1d_check_arch(jule::Str _3015_arg) {
	jule::Bool _3027_ok = jule::Bool();
	jule::Bool _3037_exist = jule::Bool();
	_3027_ok=false;
	_3037_exist=true;
	{
		auto &_match_expr{ _3015_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1b0da74ee:;
			{
				_3027_ok=_1a92a7b8c_is_i386(_1a92b68e3_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1b0da6e38:;
			{
				_3027_ok=_1a92a7e9a_is_amd64(_1a92b68e3_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1b0da6e9e:;
			{
				_3027_ok=_1a92a82a8_is_arm64(_1a92b68e3_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1b0da7015:;
			{
				_3027_ok=_1a92a8c6a_is_64bit(_1a92b68e3_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1b0da707b:;
			{
				_3027_ok=_1a92a895c_is_32bit(_1a92b68e3_ARCH);
			}
		}
		else {
			_case_begin_1b0da6674:;
			{
				_3027_ok=true;
				_3037_exist=false;
			}
		}
		_match_end_1b0da6ad6:;
	}
	return std::make_tuple(_3027_ok,_3037_exist);
}



inline jule::Bool _1b4ae4c3d_is_pass_file_annotation(jule::Str _5432_p) {
	_5432_p=_1a90c6769_base(_5432_p);
	jule::I64 _569_n = _5432_p.len();
	(_5432_p).mut_slice(0LL,_569_n - static_cast<jule::I64>(static_cast<jule::I64>(_1a90c614d_ext(_5432_p).len())));
	jule::Str _6213_a1 = jule::Str();
	jule::Str _6513_a2 = jule::Str();
	jule::I64 _6813_i = _1a90be597_find_last_byte(_5432_p,'_');
	if ((_6813_i == -1LL)) {
		jule::Bool _7118_ok;
		jule::Bool _7126_exist;
		std::tie(_7118_ok,_7126_exist) = _1b4ae4831_check_os(_5432_p);
		if (_7126_exist) {
			return _7118_ok;
		}
		std::tie(_7118_ok,_7126_exist) = _1b4ae4a1d_check_arch(_5432_p);
		return (!(_7126_exist)) || _7118_ok;
	}
	if ((_6813_i + 1LL) >= _569_n) {
		return true;
	}
	_6213_a1=_5432_p.slice((_6813_i + 1LL));
	(_5432_p).mut_slice(0LL,_6813_i);
	_6813_i=static_cast<jule::I64>(_1a90be597_find_last_byte(_5432_p,'_'));
	if ((_6813_i != -1LL)) {
		_6513_a2=_5432_p.slice((_6813_i + 1LL));
	}
	if (_6513_a2.empty()) {
		jule::Bool _9218_ok;
		jule::Bool _9226_exist;
		std::tie(_9218_ok,_9226_exist) = _1b4ae4831_check_os(_6213_a1);
		if (_9226_exist) {
			return _9218_ok;
		}
		std::tie(_9218_ok,_9226_exist) = _1b4ae4a1d_check_arch(_6213_a1);
		return (!(_9226_exist)) || _9218_ok;
	}
	jule::Bool _10014_ok;
	jule::Bool _10022_exist;
	std::tie(_10014_ok,_10022_exist) = _1b4ae4a1d_check_arch(_6213_a1);
	if (_10022_exist) {
		if ((!(_10014_ok))) {
			return false;
		}
		std::tie(_10014_ok,_10022_exist) = _1b4ae4831_check_os(_6513_a2);
		return (!(_10022_exist)) || _10014_ok;
	}
	std::tie(_10014_ok,_10022_exist) = _1b4ae4831_check_os(_6213_a1);
	return (!(_10022_exist)) || _10014_ok;
}



inline void _1b4ae6228_set_os_vars(jule::Slice<jule::Str>& _3321_vars) {
	_3321_vars = jule::alloc_for_append(_3321_vars,1);_3321_vars.__push(_1a92b60c9_OS);
	if (_1a92a85b6_is_unix(_1a92b60c9_OS)) {
		_3321_vars = jule::alloc_for_append(_3321_vars,1);_3321_vars.__push(jule::Str("unix", 4));
	}
}



inline void _1b4ae64e2_set_arch_vars(jule::Slice<jule::Str>& _4123_vars) {
	_4123_vars = jule::alloc_for_append(_4123_vars,1);_4123_vars.__push(_1a92b68e3_ARCH);
	if (_1a92a8c6a_is_64bit(_1a92b68e3_ARCH)) {
		_4123_vars = jule::alloc_for_append(_4123_vars,1);_4123_vars.__push(jule::Str("x64", 3));
	}
	if (_1a92a895c_is_32bit(_1a92b68e3_ARCH)) {
		_4123_vars = jule::alloc_for_append(_4123_vars,1);_4123_vars.__push(jule::Str("x32", 3));
	}
}



inline void _1b4ae6844_init_vars(jule::Slice<jule::Str>& _5219_vars,_1b4ae5da4_CompileInfo& _5233_info) {
	_1b4ae6228_set_os_vars(_5219_vars);
	_1b4ae64e2_set_arch_vars(_5219_vars);
	if (_5233_info._field_prod) {
		_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("production", 10));
	}
	if (_5233_info._field_test) {
		_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("test", 4));
	}
	{
		auto &_match_expr{ _5233_info._field_compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ae9a2c77:;
			{
				_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("clang", 5));
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ae9bb81d:;
			{
				_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("gcc", 3));
			}
		}
		_match_end_1ae9a2c22:;
	}
	{
		auto &_match_expr{ _5233_info._field_cpp_std };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ae9bb884:;
			{
				_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("cpp14", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ae9bbdc3:;
			{
				_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("cpp17", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ae9bbe39:;
			{
				_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("cpp20", 5));
			}
		}
		_match_end_1ae9bc9d9:;
	}
}



inline jule::Slice<jule::U8> _1e6bda1ca_read_buff(jule::Str _3014_path) {
	return ({
		auto except = static__1e7ad0465_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			
			_1a92e4316_exit(1LL);
			return nullptr;
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _1a92a31c6_Log _1e6bdb286_flat_compiler_err(jule::Str _4122_text) {
	return _1a92a31c6_Log(static_cast<jule::I64>(1LL),jule::I64(),jule::I64(),jule::Str(),_4122_text,jule::Str(),jule::Str());
}



inline void _1abb953ce_push_passes(jule::Ptr<_1ad376b8b_Package>& _9021_p,jule::Slice<jule::Str>& _9045_passes) {
	{
		auto &expr = _9021_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ae9d2669:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1ae9d1503_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _1ae9d1503_f.get()._field_passes;
					auto it = expr.begin();
					_iter_begin_1ae9da353:;
					if (it != expr.end()) {
						_1ac68055b_Pass _1ae9da397_pass = *it;
						{
							if (_1ae9da397_pass._field_text.empty()) {
								goto _iter_next_1ae9da353;
							}
							{
								auto &expr = _9045_passes;
								auto it = expr.begin();
								_iter_begin_1ae9db145:;
								if (it != expr.end()) {
									jule::Str _1ae9dad6a_cpass = *it;
									{
										if (_1ae9dad6a_cpass == _1ae9da397_pass._field_text) {
											goto _iter_next_1ae9da353;
										}
									}
									_iter_next_1ae9db145:;
									++it;
									goto _iter_begin_1ae9db145;
								}
								_iter_end_1ae9db145:;
							}
							_9045_passes = jule::alloc_for_append(_9045_passes,1);_9045_passes.__push(_1ae9da397_pass._field_text);
						}
						_iter_next_1ae9da353:;
						++it;
						goto _iter_begin_1ae9da353;
					}
					_iter_end_1ae9da353:;
				}
			}
			_iter_next_1ae9d2669:;
			++it;
			goto _iter_begin_1ae9d2669;
		}
		_iter_end_1ae9d2669:;
	}
}



inline jule::Slice<jule::Str> _1abba8843_get_all_unique_passes(jule::Ptr<_1ad376b8b_Package>& _10731_pkg,jule::Slice<jule::Ptr<_1ad3736b0_ImportInfo>> _10756_uses) {
	jule::Slice<jule::Str> _10813_passes = nullptr;
	_1abb953ce_push_passes(_10731_pkg,_10813_passes);
	{
		auto &expr = _10756_uses;
		auto it = expr.begin();
		_iter_begin_1ae9dc60d:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> _1ae9dcb08_u = *it;
			{
				if ((!(_1ae9dcb08_u.get()._field_cpp_linked))) {
					_1abb953ce_push_passes(_1ae9dcb08_u.get()._field_package,_10813_passes);
				}
			}
			_iter_next_1ae9dc60d:;
			++it;
			goto _iter_begin_1ae9dc60d;
		}
		_iter_end_1ae9dc60d:;
	}
	return _10813_passes;
}



inline _1b4ae5da4_CompileInfo _1abbaa12a_build_compile_info(void) {
	_1b4ae5da4_CompileInfo _12113_info = _1b4ae5da4_CompileInfo(_1e6ae3d5e_PRODUCTION,_1e6ae5998_TEST,jule::Str("clang", 5),jule::Str("cpp14", 5));
	{
		auto &_match_expr{ _1e6ae5080_COMPILER };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ae9dde4a:;
			{
				_12113_info._field_compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ae9ddeb1:;
			{
				_12113_info._field_compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1ae9ddde5:;
	}
	{
		auto &_match_expr{ _1e6ae5437_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ae9de027:;
			{
				_12113_info._field_compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ae9dea1c:;
			{
				_12113_info._field_compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ae9dea83:;
			{
				_12113_info._field_compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_1ae9de302:;
	}
	return _12113_info;
}



inline jule::Ptr<_1aaeaeb7d_Directive> _1abc7d9e5_find_directive(jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>& _3324_directives,jule::Str _3355_tag) {
	{
		auto &expr = _3324_directives;
		auto it = expr.begin();
		_iter_begin_1aea0644b:;
		if (it != expr.end()) {
			jule::Ptr<_1aaeaeb7d_Directive> _1aea064c3_dr = *it;
			{
				if (_1aea064c3_dr.get()._field_tag._field_kind == _3355_tag) {
					return _1aea064c3_dr;
				}
			}
			_iter_next_1aea0644b:;
			++it;
			goto _iter_begin_1aea0644b;
		}
		_iter_end_1aea0644b:;
	}
	return nullptr;
}



inline jule::Bool _1abc8ba7a_has_directive(jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>& _4319_directives,jule::Str _4350_tag) {
	return (_1abc7d9e5_find_directive(_4319_directives,_4350_tag) != nullptr);
}



inline jule::Bool _1abc9e4c7_is_exist(jule::Slice<jule::Any> _4813_arr,jule::Any _4825_t) {
	{
		auto &expr = _4813_arr;
		auto it = expr.begin();
		_iter_begin_1aea07507:;
		if (it != expr.end()) {
			jule::Any &_1aea080da_ref = *it;
			{
				if (_4825_t == _1aea080da_ref) {
					return true;
				}
			}
			_iter_next_1aea07507:;
			++it;
			goto _iter_begin_1aea07507;
		}
		_iter_end_1aea07507:;
	}
	return false;
}



inline jule::Bool _1abcb9987_is_dead(jule::Any _5816_ref) {
	jule::Bool _5828_dead = jule::Bool();
	if (_1abc9e4c7_is_exist(_1e6b19e73_deads,_5816_ref)) {
		_5828_dead = true;
		return _5828_dead;
	}
	{
		auto &_match_expr{ _5816_ref };
		
		if (_match_expr.type_is<jule::Ptr<_1ac67a501_FnIns>>()) {
			_case_begin_1aea0a681:;
			{
				if (_1ac677850_is_init(_5816_ref.operator jule::Ptr<_1ac67a501_FnIns>().get()._field_decl.ptr())) {
					goto _match_end_1aea091a7;
				}
				goto _case_begin_1aea0955e;
			}
		}
		else {
			_case_begin_1aea0955e:;
			{
				if ((_1e6b28976_current == _5816_ref) || (_1e6b2ad85_main_current == _5816_ref)) {
					_5828_dead = true;
					return _5828_dead;
				}
				if (_1abc9e4c7_is_exist(_1e6b1bccc_checking,_5816_ref)) {
					_5828_dead = true;
					return _5828_dead;
				}
			}
		}
		_match_end_1aea091a7:;
	}
	jule::Any _7913_old = _1e6b28976_current;
	_1e6b28976_current=_5816_ref;
	jule::I64 _819_len = _1e6b1bccc_checking.len();
	_1e6b1bccc_checking = jule::alloc_for_append(_1e6b1bccc_checking,1);_1e6b1bccc_checking.__push(_5816_ref);
	__JULE_DEFER({
		_1e6b28976_current=_7913_old;
		_1abd100e8_drop_ref(_1e6b1bccc_checking,_819_len);
	});
	{
		auto &_match_expr{ _5816_ref };
		
		if (_match_expr.type_is<jule::Ptr<_1ac67a501_FnIns>>()) {
			_case_begin_1aea0c892:;
			{
				_5828_dead = _1abd72db4_is_fn_dead(_5816_ref.operator jule::Ptr<_1ac67a501_FnIns>());
				return _5828_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ad39e037_Var>>()) {
			_case_begin_1aea0c908:;
			{
				_5828_dead = _1abd822ad_is_var_dead(_5816_ref.operator jule::Ptr<_1ad39e037_Var>());
				return _5828_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac664551_StructIns>>()) {
			_case_begin_1aea0c9a2:;
			{
				_5828_dead = _1abdb16a5_is_struct_dead(_5816_ref.operator jule::Ptr<_1ac664551_StructIns>());
				return _5828_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac85d096_Trait>>()) {
			_case_begin_1aea0ca18:;
			{
				_5828_dead = _1abdc2430_is_trait_dead(_5816_ref.operator jule::Ptr<_1ac85d096_Trait>());
				return _5828_dead;
			}
		}
		else {
			_case_begin_1aea0b95c:;
			{
				_5828_dead = false;
				return _5828_dead;
			}
		}
		_match_end_1aea0c353:;
	}
}



inline void _1abd100e8_drop_ref(jule::Slice<jule::Any>& _10618_refs,jule::I64 _10631_pos) {
	_10618_refs=_10618_refs.slice(0LL,_10631_pos);
}



inline jule::Bool _1abd36c13_is_all_references_are_dead(jule::Ptr<_1ac67de2d_ReferenceStack> _11435_references) {
	jule::I64 _11513_i = 0LL;
	for (; _11513_i < static_cast<jule::I64>(static_cast<jule::I64>(_1ac67e57c_len(_11435_references.ptr()))); (_11513_i)++) {
		{
			jule::Any _11717_ref = _1ac67e934_at(_11435_references.ptr(), _11513_i);
			if (_11717_ref == _1e6b28976_current) {
				goto _iter_next_1aea101e1;
			}
			if (_11717_ref == _1e6b2ad85_main_current) {
				goto _iter_next_1aea101e1;
			}
			if ((!(_1abcb9987_is_dead(_11717_ref)))) {
				return false;
			}
		}
	_iter_next_1aea101e1:;
	}
	_iter_end_1aea101e1:;
	return true;
}



inline jule::Bool _1abd72db4_is_fn_dead(jule::Ptr<_1ac67a501_FnIns> _13119_f) {
	if (_13119_f.get()._field_decl.get()._field_cpp_linked || _13119_f.get()._field_anon) {
		return false;
	}
	if (_1ac677575_is_entry_point(_13119_f.get()._field_decl.ptr()) || _1ac677850_is_init(_13119_f.get()._field_decl.ptr())) {
		return (!(_13119_f.get()._field_decl.get()._field_statically));
	}
	if (_1e6ae5998_TEST && _1abc8ba7a_has_directive(_13119_f.get()._field_decl.get()._field_directives,jule::Str("test", 4))) {
		return false;
	}
	if ((_13119_f.get()._field_owner != nullptr)) {
		if (_1abc9e4c7_is_exist(_1e6b1bccc_checking,jule::Any(_13119_f.get()._field_owner))) {
			return true;
		}
		return _1abcb9987_is_dead(jule::Any(_13119_f.get()._field_owner));
	}
	return _1abd36c13_is_all_references_are_dead(_13119_f.get()._field_references);
}



inline jule::Bool _1abd822ad_is_var_dead(jule::Ptr<_1ad39e037_Var> _16120_v) {
	if (_16120_v.get()._field_constant) {
		return true;
	}
	if (_16120_v.get()._field_cpp_linked) {
		return false;
	}
	return _1abd36c13_is_all_references_are_dead(_16120_v.get()._field_references);
}



inline jule::Bool _1abdb16a5_is_struct_dead(jule::Ptr<_1ac664551_StructIns> _20623_s) {
	return false;
}



inline jule::Bool _1abdc2430_is_trait_dead(jule::Ptr<_1ac85d096_Trait> _22322_t) {
	return false;
}



inline void _1abe35c9b_eliminate_dead_functions(jule::Slice<jule::Ptr<_1ac676a08_Fn>>& _24034_funcs) {
	jule::I64 _24113_i = 0LL;
	while (_24113_i < static_cast<jule::I64>(static_cast<jule::I64>(_24034_funcs.len()))) {
		{
			jule::Ptr<_1ac676a08_Fn> _24317_f = _24034_funcs[_24113_i];
			jule::I64 _24417_j = 0LL;
			while (_24417_j < static_cast<jule::I64>(static_cast<jule::I64>(_24317_f.get()._field_instances.len()))) {
				{
					jule::Ptr<_1ac67a501_FnIns> _24621_ins = _24317_f.get()._field_instances[_24417_j];
					_1e6b2ad85_main_current=jule::Any(_24621_ins);
					if (_1abd72db4_is_fn_dead(_24621_ins)) {
						_1e6b19e73_deads = jule::alloc_for_append(_1e6b19e73_deads,1);_1e6b19e73_deads.__push(jule::Any(_24621_ins));
						_24317_f.get()._field_instances=jule::append(_24317_f.get()._field_instances.slice(0LL,_24417_j),_24317_f.get()._field_instances.slice((_24417_j + 1LL)));
					} else {
						(_24417_j)++;
					}
				}
			_iter_next_1b0e76612:;
			}
			_iter_end_1b0e76612:;
			if ((_24317_f.get()._field_instances.len() == 0LL)) {
				_24034_funcs=jule::append(_24034_funcs.slice(0LL,_24113_i),_24034_funcs.slice((_24113_i + 1LL)));
				goto _iter_next_1b0e75952;
			}
			(_24113_i)++;
		}
	_iter_next_1b0e75952:;
	}
	_iter_end_1b0e75952:;
}



inline void _1abe3a168_eliminate_dead_globals(jule::Ptr<_1ad376b8b_Package>& _26532_pkg) {
	{
		auto &expr = _26532_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b0e792d5:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b0e79c42_f = *it;
			{
				jule::I64 _26717_i = 0LL;
				while (_26717_i < static_cast<jule::I64>(static_cast<jule::I64>(_1b0e79c42_f.get()._field_vars.len()))) {
					{
						jule::Ptr<_1ad39e037_Var> _26921_v = _1b0e79c42_f.get()._field_vars[_26717_i];
						_1e6b2ad85_main_current=jule::Any(_26921_v);
						if (_1abd822ad_is_var_dead(_26921_v)) {
							_1e6b19e73_deads = jule::alloc_for_append(_1e6b19e73_deads,1);_1e6b19e73_deads.__push(jule::Any(_26921_v));
							_1b0e79c42_f.get()._field_vars=jule::append(_1b0e79c42_f.get()._field_vars.slice(0LL,_26717_i),_1b0e79c42_f.get()._field_vars.slice((_26717_i + 1LL)));
						} else {
							(_26717_i)++;
						}
					}
				_iter_next_1b0e7a539:;
				}
				_iter_end_1b0e7a539:;
			}
			_iter_next_1b0e792d5:;
			++it;
			goto _iter_begin_1b0e792d5;
		}
		_iter_end_1b0e792d5:;
	}
}



inline void _1abe3cbc6_eliminate_dead_functions_package(jule::Ptr<_1ad376b8b_Package>& _28142_pkg) {
	{
		auto &expr = _28142_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b0e78526:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b0e7b8c0_f = *it;
			{
				_1abe35c9b_eliminate_dead_functions(_1b0e7b8c0_f.get()._field_funcs);
			}
			_iter_next_1b0e78526:;
			++it;
			goto _iter_begin_1b0e78526;
		}
		_iter_end_1b0e78526:;
	}
}



inline void _1abeaa01d_keep_alive_init(jule::Ptr<_1ad376b8b_Package>& _32925_pkg) {
	
	
	jule::Ptr<_1ac676a08_Fn> _33213_f = _1ad3788d5_find_fn(_32925_pkg.ptr(), jule::Str("init", 4),false);
	if ((_33213_f != nullptr)) {
		_33213_f.get()._field_statically=true;
	}
}



inline void _1abeb4e07_eliminate_package(jule::Ptr<_1ad376b8b_Package>& _33827_pkg) {
	_1e6b19e73_deads=jule::Slice<jule::Any>::alloc(0LL,1024LL);
	_1abeaa01d_keep_alive_init(_33827_pkg);
	_1abe3a168_eliminate_dead_globals(_33827_pkg);
	_1abe3cbc6_eliminate_dead_functions_package(_33827_pkg);
}



inline void _1abebc195_eliminate_defines(jule::Ptr<_1e6be526d_IR>& _35031_ir) {
	jule::I64 _35113_i = (_35031_ir.get()._field_used.len() - 1LL);
	for (; (_35113_i >= 0LL); (_35113_i)--) {
		{
			jule::Ptr<_1ad3736b0_ImportInfo> _35317_u = _35031_ir.get()._field_used[_35113_i];
			if ((!(_35317_u.get()._field_cpp_linked))) {
				_1abeb4e07_eliminate_package(_35317_u.get()._field_package);
			}
		}
	_iter_next_1b0e872b0:;
	}
	_iter_end_1b0e872b0:;
	_1abeb4e07_eliminate_package(_35031_ir.get()._field_main);
	_1e6b19e73_deads=nullptr;
	_1e6b1bccc_checking=nullptr;
	_1e6b28976_current=jule::Any(nullptr);
}



inline void _1abe47890_eliminate_dead_code_of_scope(jule::Ptr<_1ad33ce0a_Scope> _7937_s) {
	jule::Ptr<_1abb20799_ScopeDeadCode> _8013_sdc = jule::new_ptr<_1abb20799_ScopeDeadCode>(_1abb20799_ScopeDeadCode(jule::Ptr<_1abb20799_ScopeDeadCode>(),_7937_s,(&(_7937_s.get()._field_stmts)),jule::I64()));
	{
		_1ac0099da_optimize_stmts(_8013_sdc);
	}
}



inline void _1abdbdb79_eliminate_scope_functions(jule::Slice<jule::Ptr<_1ac676a08_Fn>>& _8835_funcs) {
	{
		auto &expr = _8835_funcs;
		auto it = expr.begin();
		_iter_begin_1b0e8b3d5:;
		if (it != expr.end()) {
			jule::Ptr<_1ac676a08_Fn> _1b0e8c2c6_func = *it;
			{
				{
					auto &expr = _1b0e8c2c6_func.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1b0e8ca35:;
					if (it != expr.end()) {
						jule::Ptr<_1ac67a501_FnIns> _1b0e8cabd_ins = *it;
						{
							_1abe47890_eliminate_dead_code_of_scope(_1b0e8cabd_ins.get()._field_scope);
						}
						_iter_next_1b0e8ca35:;
						++it;
						goto _iter_begin_1b0e8ca35;
					}
					_iter_end_1b0e8ca35:;
				}
			}
			_iter_next_1b0e8b3d5:;
			++it;
			goto _iter_begin_1b0e8b3d5;
		}
		_iter_end_1b0e8b3d5:;
	}
}



inline void _1abdb0e46_eliminate_functions_scope_package(jule::Ptr<_1ad376b8b_Package>& _9643_pkg) {
	{
		auto &expr = _9643_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1b0e8c727:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e062d_SymbolTable> _1b0e8cd10_f = *it;
			{
				_1abdbdb79_eliminate_scope_functions(_1b0e8cd10_f.get()._field_funcs);
			}
			_iter_next_1b0e8c727:;
			++it;
			goto _iter_begin_1b0e8c727;
		}
		_iter_end_1b0e8c727:;
	}
}



inline void _1abdb14eb_eliminate_scope_package(jule::Ptr<_1ad376b8b_Package>& _10233_pkg) {
	_1abdb0e46_eliminate_functions_scope_package(_10233_pkg);
}



inline void _1ac025462_eliminate_scopes(jule::Ptr<_1e6be526d_IR>& _10730_ir) {
	jule::I64 _10813_i = (_10730_ir.get()._field_used.len() - 1LL);
	for (; (_10813_i >= 0LL); (_10813_i)--) {
		{
			jule::Ptr<_1ad3736b0_ImportInfo> _11017_u = _10730_ir.get()._field_used[_10813_i];
			if ((!(_11017_u.get()._field_cpp_linked))) {
				_1abdb14eb_eliminate_scope_package(_11017_u.get()._field_package);
			}
		}
	_iter_next_1b0e8ce53:;
	}
	_iter_end_1b0e8ce53:;
	_1abdb14eb_eliminate_scope_package(_10730_ir.get()._field_main);
}



inline void _1ac0abe55_throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_1a92e4316_exit(1LL);
}



inline jule::Bool _1ada71264_is_std_package(jule::Str _37319_f,jule::Str _37327_p) {
	return _1a904e0b5_has_prefix(_37319_f,_1a90c5d40_join(jule::Slice<jule::Str>({_1a92b37be_PATH_STDLIB,_37327_p})));
}



inline jule::Bool _1ada7162c_is_constant_valid_conditional_case(jule::Ptr<_1ad35596c_If>& _37740_i) {
	{
		auto &_match_expr{ _37740_i.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1ad2c1d8e_Const>>()) {
			_case_begin_1b1062ce7:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _38013_c = _37740_i.get()._field_expr.operator jule::Ptr<_1ad2c1d8e_Const>();
				return _1ad2c62a0_is_bool(_38013_c.ptr()) && _1ad2c36ed_read_bool(_38013_c.ptr());
			}
		}
		_match_end_1b1062c92:;
	}
	return false;
}



inline jule::Bool _1ada71907_is_unreachable_expr(jule::Any& _38625_expr) {
	{
		auto &_match_expr{ _38625_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1ad2c1d8e_Const>>()) {
			_case_begin_1b1063875:;
			{
				jule::Ptr<_1ad2c1d8e_Const> _38913_c = _38625_expr.operator jule::Ptr<_1ad2c1d8e_Const>();
				return _1ad2c62a0_is_bool(_38913_c.ptr()) && (!(_1ad2c36ed_read_bool(_38913_c.ptr())));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac666c07_BinopExprModel>>()) {
			_case_begin_1b10638db:;
			{
				jule::Ptr<_1ac666c07_BinopExprModel> _39213_m = _38625_expr.operator jule::Ptr<_1ac666c07_BinopExprModel>();
				if ((_39213_m.get()._field_op._field_kind == jule::Str("&&", 2))) {
					return _1ada71907_is_unreachable_expr(_39213_m.get()._field_left.get()._field_model) || _1ada71907_is_unreachable_expr(_39213_m.get()._field_right.get()._field_model);
				}
			}
		}
		_match_end_1b1063820:;
	}
	return false;
}



inline jule::Bool _1ada71c9d_is_constant_valid_match_case(jule::Ptr<_1ad357b7d_Case>& _40034_case) {
	{
		auto &expr = _40034_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1b10650e6:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e6975_Data> &_1b1067978_expr = *it;
			{
				if ((_1ad3e747b_is_const(_1b1067978_expr.ptr()) && _1ad2c62a0_is_bool(_1b1067978_expr.get()._field_constant.ptr())) && _1ad2c36ed_read_bool(_1b1067978_expr.get()._field_constant.ptr())) {
					return true;
				}
			}
			_iter_next_1b10650e6:;
			++it;
			goto _iter_begin_1b10650e6;
		}
		_iter_end_1b10650e6:;
	}
	return false;
}



inline jule::Bool _1ada720de_is_unreachable_conditional_case(jule::Ptr<_1ad35596c_If>& _40937_i) {
	return _1ada71907_is_unreachable_expr(_40937_i.get()._field_expr);
}



inline jule::Bool _1ada72430_is_unreachable_match_case(jule::Ptr<_1ad357b7d_Case>& _41331_case) {
	{
		auto &expr = _41331_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1b1069716:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3e6975_Data> &_1b1069804_expr = *it;
			{
				if ((!(_1ada71907_is_unreachable_expr(_1b1069804_expr.get()._field_model)))) {
					return false;
				}
			}
			_iter_next_1b1069716:;
			++it;
			goto _iter_begin_1b1069716;
		}
		_iter_end_1b1069716:;
	}
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1ada7acb8_check_for_bit_shift_opt(jule::Ptr<_1ac666663_OperandExprModel>& _42429_l,jule::Ptr<_1ac666663_OperandExprModel>& _42452_r) {
	jule::Bool _42476_ok = jule::Bool();
	jule::U64 _42486_x = jule::U64();
	if ((!(_1ad354916_is_int(_1ad429d4e_to_str(_42429_l.get()._field_kind.ptr())))) || (!(_1ad354916_is_int(_1ad429d4e_to_str(_42452_r.get()._field_kind.ptr()))))) {
		_42476_ok = false;
		_42486_x = 0LLU;
		return std::make_tuple(_42476_ok,_42486_x);
	}
	{
		auto &_match_expr{ _42452_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ad2c1d8e_Const>>()) {
			_case_begin_1b106cae3:;
			{
				goto _match_end_1b106c5b5;
			}
		}
		else {
			_case_begin_1b106c64d:;
			{
				_42476_ok = false;
				_42486_x = 0LLU;
				return std::make_tuple(_42476_ok,_42486_x);
			}
		}
		_match_end_1b106c5b5:;
	}
	_42486_x=static_cast<jule::U64>(_1ad2c4358_as_u64(_42452_r.get()._field_model.operator jule::Ptr<_1ad2c1d8e_Const>().ptr()));
	if ((_42486_x == 0LLU) || ((_42486_x & 1LL) != 0LLU)) {
		_42476_ok = false;
		_42486_x = 0LLU;
		return std::make_tuple(_42476_ok,_42486_x);
	}
	jule::F64 _4389_j = _1ad237a80_log2(static_cast<jule::F64>(static_cast<jule::F64>(_42486_x)));
	jule::U64 _4399_z = static_cast<jule::U64>(_4389_j);
	if (static_cast<jule::F64>(_4399_z) != _4389_j) {
		_42476_ok = false;
		_42486_x = 0LLU;
		return std::make_tuple(_42476_ok,_42486_x);
	}
	_42476_ok = true;
	_42486_x = _4399_z;
	return std::make_tuple(_42476_ok,_42486_x);
}



inline jule::U64 _1adae50a7_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1adae5492_unix_year_to_seconds(jule::U64 _26025_y,jule::Bool& _26043_leap) {
	if (((_26025_y - 2LLU) <= 136LLU)) {
		jule::U64 _26217_leaps = ((_26025_y - 68LLU) >> 2LLU);
		_26043_leap=(((_26025_y - 68LLU) & 3LLU) == 0LLU);
		if (_26043_leap) {
			(_26217_leaps)--;
		}
		return static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(31536000LLU * static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_26025_y - 70LLU)))))) + static_cast<jule::U64>(static_cast<jule::U64>(86400LLU * _26217_leaps)));
	}
	jule::U64 _27013_leaps = 0LLU;
	jule::U64 _27113_centuries = 0LLU;
	jule::U64 _27213_cycles = ((_26025_y - 100LLU) / 400LLU);
	jule::U64 _27313_rem = ((_26025_y - 100LLU) % 400LL);
	if ((_27313_rem < 0LLU)) {
		(_27213_cycles)--;
		_27313_rem+=400LLU;
	}
	if ((_27313_rem == 0LLU)) {
		_26043_leap=true;
		_27113_centuries=0LLU;
		_27013_leaps=0LLU;
	} else {
		if ((_27313_rem >= 200LLU)) {
			if ((_27313_rem >= 300LLU)) {
				_27113_centuries=3LLU;
				_27313_rem-=300LLU;
			} else {
				_27113_centuries=2LLU;
				_27313_rem-=200LLU;
			}
		} else {
			if ((_27313_rem >= 100LLU)) {
				_27113_centuries=1LLU;
				_27313_rem-=100LLU;
			} else {
				_27113_centuries=0LLU;
			}
		}
		if ((_27313_rem == 0LLU)) {
			_26043_leap=false;
			_27013_leaps=0LLU;
		} else {
			_27013_leaps=static_cast<jule::U64>(_27313_rem >> 2LLU);
			_27313_rem%=4LL;
			_26043_leap=(_27313_rem == 0LLU);
		}
	}
	_27013_leaps+=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(97LLU * _27213_cycles)) + static_cast<jule::U64>(static_cast<jule::U64>(24LLU * _27113_centuries)));
	if (_26043_leap) {
		(_27013_leaps)++;
	}
	return static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_26025_y - 100LLU)))) * 31536000LLU))) + static_cast<jule::U64>(static_cast<jule::U64>((_27013_leaps * 86400LLU))))) + 946684800LLU))) + 86400LLU));
}



inline jule::U64 _1adae58c1_unix_month_to_seconds(jule::U64 _31726_m,jule::Bool _31739_leap) {
	jule::U64 _31913_t = 0LLU;
	{
		auto &_match_expr{ _31726_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1b109ddaa:;
			{
				_31913_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b10a0b15:;
			{
				_31913_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b10a0b7b:;
			{
				_31913_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1b10a0be2:;
			{
				_31913_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1b10a0c58:;
			{
				_31913_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1b10a0cbe:;
			{
				_31913_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1b10a0d35:;
			{
				_31913_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1b10a0d9b:;
			{
				_31913_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1b10a0e23:;
			{
				_31913_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1b10a0e9a:;
			{
				_31913_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1b10a1022:;
			{
				_31913_t=28857600LLU;
			}
		}
		_match_end_1b10a09a0:;
	}
	if (_31739_leap && (_31726_m >= 2LLU)) {
		_31913_t+=86400LLU;
	}
	return _31913_t;
}



inline jule::Bool _1ada22b72_is_copy_optimizable(jule::Ptr<_1ad3e6975_Data>& _75625_expr) {
	if ((!(_75625_expr.get()._field_lvalue))) {
		return false;
	}
	{
		auto &_match_expr{ _75625_expr.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac66b04c_SlicingExprModel>>()) {
			_case_begin_1b1498859:;
			{
				return false;
			}
		}
		_match_end_1b1498804:;
	}
	return true;
}



inline jule::Bool _1ada24cea_is_iter_copy_optimizable(jule::Ptr<_1ad3e6975_Data>& _76730_expr,jule::Ptr<_1ad39e037_Var>& _76744_v) {
	if ((!(_76730_expr.get()._field_lvalue)) && (!(_1ad42b092_mutable(_76730_expr.get()._field_kind.ptr())))) {
		return true;
	}
	return (!(_76744_v.get()._field_mutable)) && (!(_76730_expr.get()._field_mutable));
}



inline jule::Str _1ada8815a_concat_all_parts(jule::Slice<_1ab005531_Token> _114721_parts) {
	jule::Str _114813_s = jule::Str();
	{
		auto &expr = _114721_parts;
		auto it = expr.begin();
		_iter_begin_1b149ab14:;
		if (it != expr.end()) {
			_1ab005531_Token &_1b149abad_p = *it;
			{
				_114813_s+=_1b149abad_p._field_kind;
			}
			_iter_next_1b149ab14:;
			++it;
			goto _iter_begin_1b149ab14;
		}
		_iter_end_1b149ab14:;
	}
	return _114813_s;
}



inline jule::Str _1ada884ac_decompose_common_esq(jule::U8 _115525_b) {
	{
		auto &_match_expr{ _115525_b };
		
		if (_match_expr == '\\') {
			_case_begin_1b149bce1:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b149bd57:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b149b9d3:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1b149ba49:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1b149bab0:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1b149b791:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1b149b807:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1b149b86d:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1b149b8d4:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1b149bde0:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1b149b670:;
			{
				return jule::Str();
			}
		}
		_match_end_1b149aebb:;
	}
}



inline jule::Str _1ada887ba_sbtoa(jule::U8 _118210_b) {
	if ((_118210_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	}
	if ((_118210_b < 128LLU)) {
		jule::Str _118713_seq = _1ada884ac_decompose_common_esq(_118210_b);
		if ((!(_118713_seq.empty()))) {
			return _118713_seq;
		}
		if ((32LL <= _118210_b) && (_118210_b <= 126LLU)) {
			return static_cast<jule::Str>(_118210_b);
		}
	}
	jule::Str _11959_seq = _1ad258089_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_118210_b)),8LL);
	if ((_11959_seq.len() == 2LL)) {
		return jule::Str("\\0", 2) + _11959_seq;
	}
	return jule::Str("\\", 1) + _11959_seq;
}



inline jule::Str _1ada88b1c_cstr_bytes(jule::Slice<jule::U8> _120215_bytes) {
	jule::Str _120313_lit = jule::Str();
	{
		auto &expr = _120215_bytes;
		auto it = expr.begin();
		_iter_begin_1b14a28b8:;
		if (it != expr.end()) {
			jule::U8 &_1b14a29ea_b = *it;
			{
				_120313_lit+=_1ada887ba_sbtoa(_1b14a29ea_b);
			}
			_iter_next_1b14a28b8:;
			++it;
			goto _iter_begin_1b14a28b8;
		}
		_iter_end_1b14a28b8:;
	}
	return _120313_lit;
}



inline jule::Str _1ada88e2a_cstr_lit(jule::Slice<jule::U8> _121013_bytes) {
	return ((jule::Str("\"", 1) + _1ada88b1c_cstr_bytes(_121013_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1ada89315_ftoa(jule::F64 _12149_f,jule::I64 _121417_bitsize) {
	if ((_121417_bitsize != 32LL)) {
		if (_12149_f == static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::I64>(_12149_f))))) {
			return _1ada89623_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12149_f)));
		}
		if (_12149_f == static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::U64>(_12149_f))))) {
			return _1ada899b9_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12149_f)));
		}
	}
	jule::Str _122313_m = _1acac8a5e_fmt_float(_12149_f,'f',-1LL,_121417_bitsize);
	if ((!(_1a90c008c_contains(_122313_m,jule::Str(".", 1))))) {
		_122313_m+=jule::Str(".0", 2);
	}
	return _122313_m;
}



inline jule::Str _1ada89623_itoa(jule::I64 _12309_x) {
	{
		
		if ((_12309_x == jule::MAX_I64)) {
			_case_begin_1b14a7318:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12309_x == jule::MIN_I64)) {
			_case_begin_1b14a7390:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1b14a7208:;
	}
	jule::Str _12389_fmt = _1ad2581ee_fmt_int(_12309_x,10LL);
	if (_1a92a8c6a_is_64bit(jule::Str("amd64", 5))) {
		return (_12389_fmt + jule::Str("LL", 2));
	}
	return (_12389_fmt + jule::Str("L", 1));
}



inline jule::Str _1ada899b9_utoa(jule::U64 _12459_x) {
	{
		
		if ((_12459_x == jule::MAX_U64)) {
			_case_begin_1b14a88ad:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1b14a8825:;
	}
	jule::Str _12519_fmt = _1ad258089_fmt_uint(_12459_x,10LL);
	if (_1a92a8c6a_is_64bit(jule::Str("amd64", 5))) {
		return (_12519_fmt + jule::Str("LLU", 3));
	}
	return (_12519_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1ada89cc7_is_forwarded(jule::Ptr<_1ad33ce0a_Scope>& _125818_s) {
	jule::Any _12599_last = _125818_s.get()._field_stmts[(_125818_s.get()._field_stmts.len() - 1LL)];
	{
		auto &_match_expr{ _12599_last };
		
		if (_match_expr.type_is<jule::Ptr<_1ad3e6975_Data>>()) {
			_case_begin_1b14ac10e:;
			{
				{
					auto &_match_expr{ _12599_last.operator jule::Ptr<_1ad3e6975_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ac671816_BuiltinErrorCallExprModel>>()) {
						_case_begin_1b14abc57:;
						{
							return true;
						}
					}
					else {
						_case_begin_1b14ac6d6:;
						{
							return false;
						}
					}
					_match_end_1b14ac681:;
				}
			}
		}
		else {
			_case_begin_1b14ab9b0:;
			{
				return true;
			}
		}
		_match_end_1b14ab95a:;
	}
}



inline jule::Bool _1ada8a129_is_builtin_call_has_debuginf(jule::Ptr<_1ac66904a_FnCallExprModel>& _127334_m) {
	if ((!(_1ac67b17d_is_builtin(_127334_m.get()._field_func.ptr())))) {
		return false;
	}
	{
		auto &_match_expr{ _127334_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1ac66d5d2_CommonSubIdentExprModel>>()) {
			_case_begin_1b14adb8d:;
			{
				jule::Ptr<_1ac66d5d2_CommonSubIdentExprModel> _127913_csie = _127334_m.get()._field_expr.operator jule::Ptr<_1ac66d5d2_CommonSubIdentExprModel>();
				return (_127913_csie.get()._field_ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1b14ad4ea:;
			{
				return false;
			}
		}
		_match_end_1b14ad495:;
	}
}



inline jule::Bool _1adaee204_is_cpp_header_file(jule::Str _119923_path) {
	jule::I64 _12009_offset = _1a90be597_find_last_byte(_119923_path,'.');
	if ((_12009_offset == -1LL)) {
		return false;
	}
	return _1a92925c2_is_valid_header_ext(_119923_path.slice(_12009_offset));
}



inline jule::Ptr<_1aaeaeb7d_Directive> _1adb0015b_find_directive(jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>& _3024_directives,jule::Str _3055_tag) {
	{
		auto &expr = _3024_directives;
		auto it = expr.begin();
		_iter_begin_1b14b0a4c:;
		if (it != expr.end()) {
			jule::Ptr<_1aaeaeb7d_Directive> _1b14b0b3a_dr = *it;
			{
				if (_1b14b0b3a_dr.get()._field_tag._field_kind == _3055_tag) {
					return _1b14b0b3a_dr;
				}
			}
			_iter_next_1b14b0a4c:;
			++it;
			goto _iter_begin_1b14b0a4c;
		}
		_iter_end_1b14b0a4c:;
	}
	return nullptr;
}



inline jule::Bool _1adb0059b_has_directive(jule::Slice<jule::Ptr<_1aaeaeb7d_Directive>>& _4019_directives,jule::Str _4050_tag) {
	return (_1adb0015b_find_directive(_4019_directives,_4050_tag) != nullptr);
}



inline void _1a925dc64_print_error_message(jule::Str _3124_msg) {
	jule::outln(_3124_msg);
}



inline void _1a927b006_help(jule::Slice<jule::Str>& _3610_args) {
	if ((_3610_args.len() > 2LL)) {
		_1a925dc64_print_error_message(jule::Str("invalid command: ", 17) + _3610_args[2LL]);
		return;
	}
	jule::I64 _4213_max = _1a9268059_HELP_MAP[0LL][0LL].len();
	{
		auto &expr = _1a9268059_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1b15177c9:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_1b1518e6d_k = *it;
			{
				jule::I64 _4413_n = _1b1518e6d_k[0LL].len();
				if (_4413_n > _4213_max) {
					_4213_max=_4413_n;
				}
			}
			_iter_next_1b15177c9:;
			++it;
			goto _iter_begin_1b15177c9;
		}
		_iter_end_1b15177c9:;
	}
	jule::Str _5013_s = jule::Str();
	
	{
		auto &expr = _1a9268059_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1b151a4e1:;
		if (it != expr.end()) {
			jule::I64 _1b151a711_i = it - expr.begin();
			jule::Array<jule::Str,2> &_1b151a887_part = *it;
			{
				_5013_s+=_1b151a887_part[0LL];
				_5013_s+=_1a902da23_repeat(jule::Str(" ", 1),static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_4213_max - static_cast<jule::I64>(static_cast<jule::I64>(_1b151a887_part[0LL].len()))))) + 5LL)));
				_5013_s+=_1b151a887_part[1LL];
				if (((_1b151a711_i + 1LL) < 5LL)) {
					_5013_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_1b151a4e1:;
			++it;
			_1b151a711_i++;
			goto _iter_begin_1b151a4e1;
		}
		_iter_end_1b151a4e1:;
	}
	jule::outln(_5013_s);
}



inline void _1a92880ac_version(jule::Slice<jule::Str>& _6413_args) {
	if ((_6413_args.len() > 2LL)) {
		_1a925dc64_print_error_message(jule::Str("invalid command: ", 17) + _6413_args[2LL]);
		return;
	}
	jule::outln(jule::Str("jule0.0.10 @master", 18));
}



inline void _1a926e9bc_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _1a92a6bd0_DISTOS;
		auto it = expr.begin();
		_iter_begin_1b151e083:;
		if (it != expr.end()) {
			jule::Str &_1b151e407_os = *it;
			{
				jule::out(_1b151e407_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1b151e083:;
			++it;
			goto _iter_begin_1b151e083;
		}
		_iter_end_1b151e083:;
	}
	jule::outln(jule::Str());
}



inline void _1a9273ebb_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _1a92a6e11_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1b151e836:;
		if (it != expr.end()) {
			jule::Str &_1b15200c8_arch = *it;
			{
				jule::out(_1b15200c8_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1b151e836:;
			++it;
			goto _iter_begin_1b151e836;
		}
		_iter_end_1b151e836:;
	}
	jule::outln(jule::Str());
}



inline void _1a927d558_tool(jule::Slice<jule::Str>& _9310_args) {
	if ((_9310_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if ((_9310_args.len() > 3LL)) {
		_1a925dc64_print_error_message(jule::Str("invalid command: ", 17) + _9310_args[3LL]);
		return;
	}
	jule::Str _1049_cmd = _9310_args[2LL];
	{
		auto &_match_expr{ _1049_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1b1522d34:;
			{
				_1a926e9bc_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1b15229b0:;
			{
				_1a9273ebb_tool_distarch();
			}
		}
		else {
			_case_begin_1b152043b:;
			{
				_1a925dc64_print_error_message(jule::Str("undefined command: ", 19) + _1049_cmd);
			}
		}
		_match_end_1b152264c:;
	}
}



inline void _1a9285c14_julenv(jule::Slice<jule::Str>& _11312_args) {
	if ((_11312_args.len() > 2LL)) {
		_1a925dc64_print_error_message(jule::Str("invalid command: ", 17) + _11312_args[2LL]);
		return;
	}
	jule::outln(jule::Str("julec version: jule0.0.10 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: linux", 23));
	jule::outln(jule::Str("default compiler: ", 18) + _1e6ae5080_COMPILER);
	jule::outln(jule::Str("default C++ standard: ", 22) + _1e6ae5437_CPP_STD);
}



inline void _1a928124d_mod(jule::Slice<jule::Str>& _1269_args) {
	if ((_1269_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;
	}
	if ((_1269_args.len() > 3LL)) {
		_1a925dc64_print_error_message(jule::Str("invalid command: ", 17) + _1269_args[3LL]);
		return;
	}
	{
		auto &_match_expr{ _1269_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1b15277b7:;
			{
				({
					auto except = static__1e7ad0894_write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_1a925dc64_print_error_message(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1b1525a90:;
			{
				_1a925dc64_print_error_message(jule::Str("invalid command: ", 17) + _1269_args[2LL]);
			}
		}
		_match_end_1b15272de:;
	}
}



inline jule::Bool _1a9281d31_process_command(jule::Slice<jule::Str>& _15021_args) {
	{
		auto &_match_expr{ _15021_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1b1529896:;
			{
				_1a927b006_help(_15021_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1b1529962:;
			{
				_1a92880ac_version(_15021_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1b15299c8:;
			{
				_1a927d558_tool(_15021_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1b15290d2:;
			{
				_1a9285c14_julenv(_15021_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1b1529148:;
			{
				_1a928124d_mod(_15021_args);
			}
		}
		else {
			_case_begin_1b1529632:;
			{
				return false;
			}
		}
		_match_end_1b1528ba3:;
	}
	return true;
}



inline void _1a9282914_show_info(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18013_args = _1e7b65484_args();
	if ((_18013_args.len() < 2LL)) {
		_1a9282914_show_info();
		return;
	}
	if (_1a9281d31_process_command(_18013_args)) {
		return;
	}
	_1adb4c53d_compile_command(_18013_args);
}



inline void _1adb454e2_init(void) {
	_1e6ae5080_COMPILER=jule::Str("clang", 5);
}



inline void _1abaa5762_write_output(jule::Str _5017_path,jule::Str _5028_content) {
	jule::Str _519_dir = _1a90c6b10_dir(_5017_path);
	({
		auto except = static__1e7acd364_of(_519_dir);
		if (!except.ok()) {
			({
				auto except = static__1a90c97d3_create(_519_dir);
				if (!except.ok()) {
					_1ac0abe55_throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	({
		auto except = static__1e7ad0894_write(_5017_path,static_cast<jule::Slice<jule::U8>>(_5028_content),432LL);
		if (!except.ok()) {
			_1ac0abe55_throw(jule::Str("a problem occurs when code generation", 37));
		}
	});
}



inline void _1adb36813_clear_objects(void) {
	({
		auto except = static__1e7acb84b_remove(_1adb4b262_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;
		}
	});
	static__1a90c9a58_remove(_1aba96d6e_OUT_DIR);
}



inline void _1adb4a8d2_compile_ir(jule::Str _7815_compiler,jule::Str _7830_compiler_cmd) {
	jule::Ptr<_1a92dee05_Cmd> _7913_cmd = static__1a92e039a_new(_7815_compiler);
	_7913_cmd.get()._field_args=jule::Slice<jule::Str>({_7815_compiler});
	_7913_cmd.get()._field_args=jule::append(_7913_cmd.get()._field_args,_1a90bee27_split(_7830_compiler_cmd,jule::Str(" ", 1),-1LL));
	jule::I64 _829_status = ({
		auto except = _1a92e0675_spawn(_7913_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (_match_expr == static_cast<jule::I64>(12LL)) {
					_case_begin_1b1533dde:;
					{
						static__1ac030ba9_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (_match_expr == static_cast<jule::I64>(3LL)) {
					_case_begin_1b1534120:;
					{
						static__1ac030ba9_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (_match_expr == static_cast<jule::I64>(9LL)) {
					_case_begin_1b1534186:;
					{
						static__1ac030ba9_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (_match_expr == static_cast<jule::I64>(0LL)) {
					_case_begin_1b1533bd0:;
					{
						static__1ac030ba9_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1b1533927:;
					{
						static__1ac030ba9_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1b15339b0:;
			}
			_1ac0abe55_throw(jule::Str());
			0LL;
		});
	});
	if ((_829_status != 0LL)) {
		jule::Str _9913_error_message = ((jule::Str("\n>>> your backend compiler (", 28) + _1e6ae5080_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));
		static__1ac030ba9_print(jule::Str("\033[31m", 5),_9913_error_message);
		_1ac0abe55_throw(jule::Str());
	}
	_1adb36813_clear_objects();
}



inline void _1adb4aa47_do_spell(jule::Str _11013_obj,jule::Str _11023_compiler,jule::Str _11038_compiler_cmd) {
	jule::Str _1119_path = _1adb4b262_get_compile_path();
	_1abaa5762_write_output(_1119_path,_11013_obj);
	if ((!(_1e6ae57de_TRANSPILATION))) {
		_1adb4a8d2_compile_ir(_11023_compiler,_11038_compiler_cmd);
	}
}



inline jule::Bool _1adb4abac_is_cpp_source_file(jule::Str _11823_path) {
	jule::I64 _1199_offset = _1a90be597_find_last_byte(_11823_path,'.');
	if ((_1199_offset == -1LL)) {
		return false;
	}
	return _1a92928d0_is_valid_cpp_ext(_11823_path.slice(_1199_offset));
}



inline void _1adb4ad22_push_comp_cmd_clang(jule::Str& _12629_cmd) {
	_12629_cmd+=jule::Str("-Wno-everything ", 16);
	_12629_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1e6ae5437_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b153b38b:;
			{
				_12629_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b153b402:;
			{
				_12629_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b153b468:;
			{
				_12629_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1b153b2ae:;
	}
	_12629_cmd+=jule::Str(" ", 1);
	if (_1e6ae3d5e_PRODUCTION) {
		_12629_cmd+=jule::Str("-O3 ", 4);
		_12629_cmd+=jule::Str("-flto ", 6);
		_12629_cmd+=jule::Str("-DNDEBUG ", 9);
		_12629_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_12629_cmd+=jule::Str("-O0 ", 4);
	}
}



inline void _1adb4ae87_push_comp_cmd_gcc(jule::Str& _14927_cmd) {
	_14927_cmd+=jule::Str("-w ", 3);
	_14927_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1e6ae5437_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b153b4ce:;
			{
				_14927_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b153dbeb:;
			{
				_14927_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b153dc62:;
			{
				_14927_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1b153da97:;
	}
	_14927_cmd+=jule::Str(" ", 1);
	if (_1e6ae3d5e_PRODUCTION) {
		_14927_cmd+=jule::Str("-O3 ", 4);
		_14927_cmd+=jule::Str("-DNDEBUG ", 9);
		_14927_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_14927_cmd+=jule::Str("-O0 ", 4);
	}
}



inline std::tuple<jule::Str,jule::Str> _1adb4b0ec_gen_compile_cmd(jule::Str _17220_source_path,jule::Ptr<_1e6be526d_IR>& _17239_ir) {
	jule::Str &_17310_compiler = _1e6ae527d_COMPILER_PATH;
	jule::Str _17413_cmd = jule::Str();
	{
		auto &_match_expr{ _1e6ae5080_COMPILER };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b15412a3:;
			{
				_1adb4ae87_push_comp_cmd_gcc(_17413_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b154168d:;
			{
				_1adb4ad22_push_comp_cmd_clang(_17413_cmd);
			}
		}
		_match_end_1b15415b1:;
	}
	{
		auto &expr = _17239_ir.get()._field_passes;
		auto it = expr.begin();
		_iter_begin_1b154267d:;
		if (it != expr.end()) {
			jule::Str &_1b154199b_pass = *it;
			{
				_17413_cmd+=_1b154199b_pass;
				_17413_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1b154267d:;
			++it;
			goto _iter_begin_1b154267d;
		}
		_iter_end_1b154267d:;
	}
	{
		auto &expr = _17239_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1b1542ea8:;
		if (it != expr.end()) {
			jule::Ptr<_1ad3736b0_ImportInfo> &_1b1542914_u = *it;
			{
				if (_1b1542914_u.get()._field_cpp_linked && _1adb4abac_is_cpp_source_file(_1b1542914_u.get()._field_path)) {
					_17413_cmd+=_1b1542914_u.get()._field_path;
					_17413_cmd+=jule::Str(" ", 1);
				}
			}
			_iter_next_1b1542ea8:;
			++it;
			goto _iter_begin_1b1542ea8;
		}
		_iter_end_1b1542ea8:;
	}
	if ((!(_1ababe78c_OUT.empty()))) {
		_17413_cmd+=jule::Str("-o ", 3);
		_17413_cmd+=_1ababe78c_OUT;
		_17413_cmd+=jule::Str(" ", 1);
	}
	_17413_cmd+=_17220_source_path;
	return std::make_tuple(_17310_compiler,_17413_cmd);
}



inline jule::Str _1adb4b262_get_compile_path(void) {
	return _1a90c5d40_join(jule::Slice<jule::Str>({_1aba96d6e_OUT_DIR,_1aba9b912_OUT_NAME}));
}



inline void _1adb4b3c7_apply_target_independent_optimizations(jule::Ptr<_1e6be526d_IR>& _21548_ir) {
	if (_1e6ae40a1_OPT_DEADCODE) {
		_1abebc195_eliminate_defines(_21548_ir);
	}
	jule::Ptr<_1ada7bb65_Optimizer> _22213_opt = static__1ada7c02d_new(_21548_ir);
	_1ada7d958_optimize(_22213_opt.ptr());
	if (_1e6ae40a1_OPT_DEADCODE) {
		_1ac025462_eliminate_scopes(_21548_ir);
	}
}



inline void _1adb4b53c_check_compiler_flag(void) {
	{
		auto &_match_expr{ _1e6ae5080_COMPILER };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b1546bb0:;
			{
				_1ac0abe55_throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b1547265:;
			{
				if (_1e6ae527d_COMPILER_PATH.empty()) {
					_1e6ae527d_COMPILER_PATH=jule::Str("clang++", 7);
				}
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b154641d:;
			{
				if (_1e6ae527d_COMPILER_PATH.empty()) {
					_1e6ae527d_COMPILER_PATH=jule::Str("g++", 3);
				}
			}
		}
		else {
			_case_begin_1b1546352:;
			{
				_1ac0abe55_throw(jule::Str("invalid option value for --compiler: ", 37) + _1e6ae5080_COMPILER);
			}
		}
		_match_end_1b1546770:;
	}
}



inline void _1adb4b6a2_check_target_arch(jule::Str _24822_arch) {
	{
		auto &expr = _1a92a6e11_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1b1547ee1:;
		if (it != expr.end()) {
			jule::Str &_1b1547452_distarch = *it;
			{
				if (_24822_arch == _1b1547452_distarch) {
					return;
				}
			}
			_iter_next_1b1547ee1:;
			++it;
			goto _iter_begin_1b1547ee1;
		}
		_iter_end_1b1547ee1:;
	}
	_1ac0abe55_throw(jule::Str("--target: unsupported/undefined architecture: ", 46) + _24822_arch);
}



inline void _1adb4b817_check_target_os(jule::Str _25720_os) {
	{
		auto &expr = _1a92a6bd0_DISTOS;
		auto it = expr.begin();
		_iter_begin_1b1549c18:;
		if (it != expr.end()) {
			jule::Str &_1b1549c90_distos = *it;
			{
				if (_25720_os == _1b1549c90_distos) {
					return;
				}
			}
			_iter_next_1b1549c18:;
			++it;
			goto _iter_begin_1b1549c18;
		}
		_iter_end_1b1549c18:;
	}
	_1ac0abe55_throw(jule::Str("--target: unsupported/undefined operating system: ", 50) + _25720_os);
}



inline void _1adb4b97c_check_target_flag(jule::Str& _26623_target) {
	if (_26623_target.empty()) {
		_1ac0abe55_throw(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _2719_parts = _1a90bee27_split(_26623_target,jule::Str("-", 1),-1LL);
	if ((_2719_parts.len() != 2LL)) {
		_1ac0abe55_throw(jule::Str("--target: undefined platform target format: ", 44) + _26623_target);
	}
	jule::Str _27610_os = _2719_parts[0LL];
	jule::Str _27614_arch = _2719_parts[1LL];
	std::tie(_27610_os,_27614_arch) = std::make_tuple(_2719_parts[0LL],_2719_parts[1LL]);
	if ((_27610_os != jule::Str("native", 6))) {
		_1adb4b817_check_target_os(_27610_os);
		_1a92b60c9_OS=_27610_os;
	}
	if ((_27614_arch != jule::Str("native", 6))) {
		_1adb4b6a2_check_target_arch(_27614_arch);
		_1a92b68e3_ARCH=_27614_arch;
	}
	_1ad34a775_update_target();
}



inline void _1adb4bd23_check_opt_flag(jule::Str& _28920_opt) {
	if (_28920_opt.empty()) {
		_1ac0abe55_throw(jule::Str("missing option value: --opt", 27));
	}
	{
		auto &_match_expr{ _28920_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1b15507bd:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1b15504c1:;
			{
				_1e6ae4b2e_push_opt_level(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1b154ec0c:;
			{
				_1ac0abe55_throw(jule::Str("--opt: invalid optimization level: ", 35) + _28920_opt);
			}
		}
		_match_end_1b154e9dc:;
	}
}



inline void _1adb4be88_check_cpp_std_flag(void) {
	{
		auto &_match_expr{ _1e6ae5437_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b1551ea6:;
			{
				goto _match_end_1b1550548;
			}
		}
		else {
			_case_begin_1b15512b3:;
			{
				_1ac0abe55_throw(jule::Str("--cppstd: invalid optimization level: ", 38) + _1e6ae5437_CPP_STD);
			}
		}
		_match_end_1b1550548:;
	}
}



inline jule::Slice<jule::Str> _1adb4c0ed_check_flags(jule::Slice<jule::Str>& _31217_args) {
	jule::Str _31313_opt = jule::Str("L0", 2);
	jule::Str _31413_target = jule::Str("native-native", 13);
	jule::Ptr<_1adb40256_FlagSet> _31613_fs = static__1adb40575_new();
	_1adb42ab6_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_31313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1adb42ab6_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_31413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1adb42ab6_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1ababe78c_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1adb42ab6_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e6ae5635_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1adb42ab6_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e6ae57de_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1adb42ab6_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e6ae5080_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1adb42ab6_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e6ae527d_COMPILER_PATH)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1adb42ab6_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e6ae3d5e_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1adb42ab6_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e6ae5b52_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1adb42ab6_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e6ae5d94_SAFETY)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1adb42ab6_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e6ae5437_CPP_STD)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1adb42ab6_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e6ae3e80_OPT_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1adb42ab6_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e6ae40a1_OPT_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1adb42ab6_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e6ae4249_OPT_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1adb42ab6_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e6ae436a_OPT_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1adb42ab6_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e6ae448b_OPT_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1adb42ab6_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e6ae45ac_OPT_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1adb42ab6_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e6ae47dd_OPT_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1adb42ab6_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e6ae490e_OPT_COND)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _33813_content = ({
		auto except = _1adb41620_parse(_31613_fs.ptr(), _31217_args);
		(except.ok()) ? (except.result) : ({
			_1ac0abe55_throw(except.error.operator jule::Str());
			nullptr;
		});
	});
	_1adb4b53c_check_compiler_flag();
	_1adb4be88_check_cpp_std_flag();
	_1adb4b97c_check_target_flag(_31413_target);
	_1adb4bd23_check_opt_flag(_31313_opt);
	return _33813_content;
}



inline void _1adb4c263_setup_sema_flags(jule::I64& _35126_flags) {
	if (_1e6ae5635_SHADOWING) {
		_35126_flags|=static_cast<jule::I64>(1LL);
	}
}



inline jule::Ptr<_1e6be526d_IR> _1adb4c3c8_build_ir(jule::Slice<jule::Str>& _35714_args) {
	jule::Slice<jule::Str> _3589_content = _1adb4c0ed_check_flags(_35714_args);
	jule::I64 _36013_sema_flags = static_cast<jule::I64>(0LL);
	_1adb4c263_setup_sema_flags(_36013_sema_flags);
	if ((_3589_content.len() == 0LL)) {
		_1ac0abe55_throw(_1a92a36b0_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3589_content.len() > 1LL)) {
		_1ac0abe55_throw(jule::Str("undefined content: ", 19) + _3589_content[1LL]);
	}
	jule::Str _36814_path;
	jule::Bool _36820_ok;
	std::tie(_36814_path,_36820_ok) = _1a90c645b_abs(_3589_content[0LL]);
	if ((!(_36820_ok))) {
		_1ac0abe55_throw(jule::Str("compile path could not processed because of a problem", 53));
	}
	jule::Ptr<_1e7ad1b09_Status> _3749_inf = ({
		auto except = static__1e7acd364_of(_1a92b37be_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_1ac0abe55_throw(_1a92a36b0_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1e7ad1b09_Status>();});
	});
	if ((!(_1e7ad206b_is_dir(_3749_inf.ptr())))) {
		_1ac0abe55_throw(_1a92a36b0_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	}
	jule::Ptr<_1e6be526d_IR> _38214_ir;
	jule::Slice<_1a92a31c6_Log> _38218_logs;
	std::tie(_38214_ir,_38218_logs) = static__1abaed5bd_build(_36814_path,_36013_sema_flags);
	if ((_38214_ir == nullptr) && (_38218_logs == nullptr)) {
		_1ac0abe55_throw(_1a92a36b0_logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>({jule::Any(_36814_path)})));
	}
	if ((_38218_logs != nullptr)) {
		static__1ac067d67_print_logs(_38218_logs);
		_1ac0abe55_throw(jule::Str());
	}
	return _38214_ir;
}



inline void _1adb4c53d_compile_command(jule::Slice<jule::Str>& _39725_args) {
	_39725_args=_39725_args.slice(1LL);
	if ((_39725_args[0LL] == jule::Str("test", 4))) {
		_1e6ae5998_TEST=true;
		_39725_args=_39725_args.slice(1LL);
	}
	jule::Ptr<_1e6be526d_IR> _40313_ir = _1adb4c3c8_build_ir(_39725_args);
	
	if ((!(_1e6ae5998_TEST))) {
		jule::Ptr<_1ac676a08_Fn> _40817_f = _1ad3788d5_find_fn(_40313_ir.get()._field_main.ptr(), jule::Str("main", 4),false);
		if ((_40817_f == nullptr)) {
			_1ac0abe55_throw(_1a92a36b0_logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		}
		_40817_f.get()._field_statically=true;
	}
	jule::Ptr<_1ac676a08_Fn> _41413_f = _1ad3788d5_find_fn(_40313_ir.get()._field_main.ptr(), jule::Str("init", 4),false);
	if ((_41413_f != nullptr)) {
		_41413_f.get()._field_statically=true;
	}
	_1adb4b3c7_apply_target_independent_optimizations(_40313_ir);
	_1abb322c2_order(_40313_ir.ptr());
	jule::Str _42410_compiler;
	jule::Str _42420_compiler_cmd;
	std::tie(_42410_compiler,_42420_compiler_cmd) = _1adb4b0ec_gen_compile_cmd(_1adb4b262_get_compile_path(),_40313_ir);
	jule::Ptr<_1adaa65b8_ObjectCoder> _42613_oc = static__1adaa4781_new(_40313_ir,_1adac2abd_SerializationInfo(_42410_compiler,_42420_compiler_cmd));
	jule::Str _43013_obj = _1adaedd3b_serialize(_42613_oc.ptr());
	if (_1e6ae5998_TEST) {
		jule::Ptr<_1ad921b81_TestCoder> _43317_tc = static__1ad96a7ce_new(_42613_oc);
		_1ad96c2d6_serialize(_43317_tc.ptr(), _43013_obj);
	}
	_1adaeda61_append_standard(_42613_oc.ptr(), _43013_obj);
	_1adb4aa47_do_spell(_43013_obj,_42410_compiler,_42420_compiler_cmd);
}




void __jule_call_initializers(void) {
	_1e6ae3d5e_PRODUCTION = false;
	_1e6ae3e80_OPT_COPY = false;
	_1e6ae40a1_OPT_DEADCODE = false;
	_1e6ae4249_OPT_APPEND = false;
	_1e6ae436a_OPT_MATH = false;
	_1e6ae448b_OPT_ACCESS = false;
	_1e6ae45ac_OPT_INLINE = false;
	_1e6ae47dd_OPT_PTR = false;
	_1e6ae490e_OPT_COND = false;
	_1e6ae5080_COMPILER = jule::Str();
	_1e6ae527d_COMPILER_PATH = jule::Str();
	_1e6ae5437_CPP_STD = jule::Str("cpp17", 5);
	_1e6ae5635_SHADOWING = false;
	_1e6ae57de_TRANSPILATION = false;
	_1e6ae5998_TEST = false;
	_1e6ae5b52_RC = true;
	_1e6ae5d94_SAFETY = true;
	_1a8eb5ca7__L = jule::new_ptr<_1a90054cd_RangeTable>(_1a90054cd_RangeTable(jule::Slice<_1a90048d9_Range16>({_1a90048d9_Range16(65LLU,90LLU,1LLU),_1a90048d9_Range16(97LLU,122LLU,1LLU),_1a90048d9_Range16(170LLU,181LLU,11LLU),_1a90048d9_Range16(186LLU,192LLU,6LLU),_1a90048d9_Range16(193LLU,214LLU,1LLU),_1a90048d9_Range16(216LLU,246LLU,1LLU),_1a90048d9_Range16(248LLU,705LLU,1LLU),_1a90048d9_Range16(710LLU,721LLU,1LLU),_1a90048d9_Range16(736LLU,740LLU,1LLU),_1a90048d9_Range16(748LLU,750LLU,2LLU),_1a90048d9_Range16(880LLU,884LLU,1LLU),_1a90048d9_Range16(886LLU,887LLU,1LLU),_1a90048d9_Range16(890LLU,893LLU,1LLU),_1a90048d9_Range16(895LLU,902LLU,7LLU),_1a90048d9_Range16(904LLU,906LLU,1LLU),_1a90048d9_Range16(908LLU,910LLU,2LLU),_1a90048d9_Range16(911LLU,929LLU,1LLU),_1a90048d9_Range16(931LLU,1013LLU,1LLU),_1a90048d9_Range16(1015LLU,1153LLU,1LLU),_1a90048d9_Range16(1162LLU,1327LLU,1LLU),_1a90048d9_Range16(1329LLU,1366LLU,1LLU),_1a90048d9_Range16(1369LLU,1376LLU,7LLU),_1a90048d9_Range16(1377LLU,1416LLU,1LLU),_1a90048d9_Range16(1488LLU,1514LLU,1LLU),_1a90048d9_Range16(1519LLU,1522LLU,1LLU),_1a90048d9_Range16(1568LLU,1610LLU,1LLU),_1a90048d9_Range16(1646LLU,1647LLU,1LLU),_1a90048d9_Range16(1649LLU,1747LLU,1LLU),_1a90048d9_Range16(1749LLU,1765LLU,16LLU),_1a90048d9_Range16(1766LLU,1774LLU,8LLU),_1a90048d9_Range16(1775LLU,1786LLU,11LLU),_1a90048d9_Range16(1787LLU,1788LLU,1LLU),_1a90048d9_Range16(1791LLU,1808LLU,17LLU),_1a90048d9_Range16(1810LLU,1839LLU,1LLU),_1a90048d9_Range16(1869LLU,1957LLU,1LLU),_1a90048d9_Range16(1969LLU,1994LLU,25LLU),_1a90048d9_Range16(1995LLU,2026LLU,1LLU),_1a90048d9_Range16(2036LLU,2037LLU,1LLU),_1a90048d9_Range16(2042LLU,2048LLU,6LLU),_1a90048d9_Range16(2049LLU,2069LLU,1LLU),_1a90048d9_Range16(2074LLU,2084LLU,10LLU),_1a90048d9_Range16(2088LLU,2112LLU,24LLU),_1a90048d9_Range16(2113LLU,2136LLU,1LLU),_1a90048d9_Range16(2144LLU,2154LLU,1LLU),_1a90048d9_Range16(2160LLU,2183LLU,1LLU),_1a90048d9_Range16(2185LLU,2190LLU,1LLU),_1a90048d9_Range16(2208LLU,2249LLU,1LLU),_1a90048d9_Range16(2308LLU,2361LLU,1LLU),_1a90048d9_Range16(2365LLU,2384LLU,19LLU),_1a90048d9_Range16(2392LLU,2401LLU,1LLU),_1a90048d9_Range16(2417LLU,2432LLU,1LLU),_1a90048d9_Range16(2437LLU,2444LLU,1LLU),_1a90048d9_Range16(2447LLU,2448LLU,1LLU),_1a90048d9_Range16(2451LLU,2472LLU,1LLU),_1a90048d9_Range16(2474LLU,2480LLU,1LLU),_1a90048d9_Range16(2482LLU,2486LLU,4LLU),_1a90048d9_Range16(2487LLU,2489LLU,1LLU),_1a90048d9_Range16(2493LLU,2510LLU,17LLU),_1a90048d9_Range16(2524LLU,2525LLU,1LLU),_1a90048d9_Range16(2527LLU,2529LLU,1LLU),_1a90048d9_Range16(2544LLU,2545LLU,1LLU),_1a90048d9_Range16(2556LLU,2565LLU,9LLU),_1a90048d9_Range16(2566LLU,2570LLU,1LLU),_1a90048d9_Range16(2575LLU,2576LLU,1LLU),_1a90048d9_Range16(2579LLU,2600LLU,1LLU),_1a90048d9_Range16(2602LLU,2608LLU,1LLU),_1a90048d9_Range16(2610LLU,2611LLU,1LLU),_1a90048d9_Range16(2613LLU,2614LLU,1LLU),_1a90048d9_Range16(2616LLU,2617LLU,1LLU),_1a90048d9_Range16(2649LLU,2652LLU,1LLU),_1a90048d9_Range16(2654LLU,2674LLU,20LLU),_1a90048d9_Range16(2675LLU,2676LLU,1LLU),_1a90048d9_Range16(2693LLU,2701LLU,1LLU),_1a90048d9_Range16(2703LLU,2705LLU,1LLU),_1a90048d9_Range16(2707LLU,2728LLU,1LLU),_1a90048d9_Range16(2730LLU,2736LLU,1LLU),_1a90048d9_Range16(2738LLU,2739LLU,1LLU),_1a90048d9_Range16(2741LLU,2745LLU,1LLU),_1a90048d9_Range16(2749LLU,2768LLU,19LLU),_1a90048d9_Range16(2784LLU,2785LLU,1LLU),_1a90048d9_Range16(2809LLU,2821LLU,12LLU),_1a90048d9_Range16(2822LLU,2828LLU,1LLU),_1a90048d9_Range16(2831LLU,2832LLU,1LLU),_1a90048d9_Range16(2835LLU,2856LLU,1LLU),_1a90048d9_Range16(2858LLU,2864LLU,1LLU),_1a90048d9_Range16(2866LLU,2867LLU,1LLU),_1a90048d9_Range16(2869LLU,2873LLU,1LLU),_1a90048d9_Range16(2877LLU,2908LLU,31LLU),_1a90048d9_Range16(2909LLU,2911LLU,2LLU),_1a90048d9_Range16(2912LLU,2913LLU,1LLU),_1a90048d9_Range16(2929LLU,2947LLU,18LLU),_1a90048d9_Range16(2949LLU,2954LLU,1LLU),_1a90048d9_Range16(2958LLU,2960LLU,1LLU),_1a90048d9_Range16(2962LLU,2965LLU,1LLU),_1a90048d9_Range16(2969LLU,2970LLU,1LLU),_1a90048d9_Range16(2972LLU,2974LLU,2LLU),_1a90048d9_Range16(2975LLU,2979LLU,4LLU),_1a90048d9_Range16(2980LLU,2984LLU,4LLU),_1a90048d9_Range16(2985LLU,2986LLU,1LLU),_1a90048d9_Range16(2990LLU,3001LLU,1LLU),_1a90048d9_Range16(3024LLU,3077LLU,53LLU),_1a90048d9_Range16(3078LLU,3084LLU,1LLU),_1a90048d9_Range16(3086LLU,3088LLU,1LLU),_1a90048d9_Range16(3090LLU,3112LLU,1LLU),_1a90048d9_Range16(3114LLU,3129LLU,1LLU),_1a90048d9_Range16(3133LLU,3160LLU,27LLU),_1a90048d9_Range16(3161LLU,3162LLU,1LLU),_1a90048d9_Range16(3165LLU,3168LLU,3LLU),_1a90048d9_Range16(3169LLU,3200LLU,31LLU),_1a90048d9_Range16(3205LLU,3212LLU,1LLU),_1a90048d9_Range16(3214LLU,3216LLU,1LLU),_1a90048d9_Range16(3218LLU,3240LLU,1LLU),_1a90048d9_Range16(3242LLU,3251LLU,1LLU),_1a90048d9_Range16(3253LLU,3257LLU,1LLU),_1a90048d9_Range16(3261LLU,3293LLU,32LLU),_1a90048d9_Range16(3294LLU,3296LLU,2LLU),_1a90048d9_Range16(3297LLU,3313LLU,16LLU),_1a90048d9_Range16(3314LLU,3332LLU,18LLU),_1a90048d9_Range16(3333LLU,3340LLU,1LLU),_1a90048d9_Range16(3342LLU,3344LLU,1LLU),_1a90048d9_Range16(3346LLU,3386LLU,1LLU),_1a90048d9_Range16(3389LLU,3406LLU,17LLU),_1a90048d9_Range16(3412LLU,3414LLU,1LLU),_1a90048d9_Range16(3423LLU,3425LLU,1LLU),_1a90048d9_Range16(3450LLU,3455LLU,1LLU),_1a90048d9_Range16(3461LLU,3478LLU,1LLU),_1a90048d9_Range16(3482LLU,3505LLU,1LLU),_1a90048d9_Range16(3507LLU,3515LLU,1LLU),_1a90048d9_Range16(3517LLU,3520LLU,3LLU),_1a90048d9_Range16(3521LLU,3526LLU,1LLU),_1a90048d9_Range16(3585LLU,3632LLU,1LLU),_1a90048d9_Range16(3634LLU,3635LLU,1LLU),_1a90048d9_Range16(3648LLU,3654LLU,1LLU),_1a90048d9_Range16(3713LLU,3714LLU,1LLU),_1a90048d9_Range16(3716LLU,3718LLU,2LLU),_1a90048d9_Range16(3719LLU,3722LLU,1LLU),_1a90048d9_Range16(3724LLU,3747LLU,1LLU),_1a90048d9_Range16(3749LLU,3751LLU,2LLU),_1a90048d9_Range16(3752LLU,3760LLU,1LLU),_1a90048d9_Range16(3762LLU,3763LLU,1LLU),_1a90048d9_Range16(3773LLU,3776LLU,3LLU),_1a90048d9_Range16(3777LLU,3780LLU,1LLU),_1a90048d9_Range16(3782LLU,3804LLU,22LLU),_1a90048d9_Range16(3805LLU,3807LLU,1LLU),_1a90048d9_Range16(3840LLU,3904LLU,64LLU),_1a90048d9_Range16(3905LLU,3911LLU,1LLU),_1a90048d9_Range16(3913LLU,3948LLU,1LLU),_1a90048d9_Range16(3976LLU,3980LLU,1LLU),_1a90048d9_Range16(4096LLU,4138LLU,1LLU),_1a90048d9_Range16(4159LLU,4176LLU,17LLU),_1a90048d9_Range16(4177LLU,4181LLU,1LLU),_1a90048d9_Range16(4186LLU,4189LLU,1LLU),_1a90048d9_Range16(4193LLU,4197LLU,4LLU),_1a90048d9_Range16(4198LLU,4206LLU,8LLU),_1a90048d9_Range16(4207LLU,4208LLU,1LLU),_1a90048d9_Range16(4213LLU,4225LLU,1LLU),_1a90048d9_Range16(4238LLU,4256LLU,18LLU),_1a90048d9_Range16(4257LLU,4293LLU,1LLU),_1a90048d9_Range16(4295LLU,4301LLU,6LLU),_1a90048d9_Range16(4304LLU,4346LLU,1LLU),_1a90048d9_Range16(4348LLU,4680LLU,1LLU),_1a90048d9_Range16(4682LLU,4685LLU,1LLU),_1a90048d9_Range16(4688LLU,4694LLU,1LLU),_1a90048d9_Range16(4696LLU,4698LLU,2LLU),_1a90048d9_Range16(4699LLU,4701LLU,1LLU),_1a90048d9_Range16(4704LLU,4744LLU,1LLU),_1a90048d9_Range16(4746LLU,4749LLU,1LLU),_1a90048d9_Range16(4752LLU,4784LLU,1LLU),_1a90048d9_Range16(4786LLU,4789LLU,1LLU),_1a90048d9_Range16(4792LLU,4798LLU,1LLU),_1a90048d9_Range16(4800LLU,4802LLU,2LLU),_1a90048d9_Range16(4803LLU,4805LLU,1LLU),_1a90048d9_Range16(4808LLU,4822LLU,1LLU),_1a90048d9_Range16(4824LLU,4880LLU,1LLU),_1a90048d9_Range16(4882LLU,4885LLU,1LLU),_1a90048d9_Range16(4888LLU,4954LLU,1LLU),_1a90048d9_Range16(4992LLU,5007LLU,1LLU),_1a90048d9_Range16(5024LLU,5109LLU,1LLU),_1a90048d9_Range16(5112LLU,5117LLU,1LLU),_1a90048d9_Range16(5121LLU,5740LLU,1LLU),_1a90048d9_Range16(5743LLU,5759LLU,1LLU),_1a90048d9_Range16(5761LLU,5786LLU,1LLU),_1a90048d9_Range16(5792LLU,5866LLU,1LLU),_1a90048d9_Range16(5873LLU,5880LLU,1LLU),_1a90048d9_Range16(5888LLU,5905LLU,1LLU),_1a90048d9_Range16(5919LLU,5937LLU,1LLU),_1a90048d9_Range16(5952LLU,5969LLU,1LLU),_1a90048d9_Range16(5984LLU,5996LLU,1LLU),_1a90048d9_Range16(5998LLU,6000LLU,1LLU),_1a90048d9_Range16(6016LLU,6067LLU,1LLU),_1a90048d9_Range16(6103LLU,6108LLU,5LLU),_1a90048d9_Range16(6176LLU,6264LLU,1LLU),_1a90048d9_Range16(6272LLU,6276LLU,1LLU),_1a90048d9_Range16(6279LLU,6312LLU,1LLU),_1a90048d9_Range16(6314LLU,6320LLU,6LLU),_1a90048d9_Range16(6321LLU,6389LLU,1LLU),_1a90048d9_Range16(6400LLU,6430LLU,1LLU),_1a90048d9_Range16(6480LLU,6509LLU,1LLU),_1a90048d9_Range16(6512LLU,6516LLU,1LLU),_1a90048d9_Range16(6528LLU,6571LLU,1LLU),_1a90048d9_Range16(6576LLU,6601LLU,1LLU),_1a90048d9_Range16(6656LLU,6678LLU,1LLU),_1a90048d9_Range16(6688LLU,6740LLU,1LLU),_1a90048d9_Range16(6823LLU,6917LLU,94LLU),_1a90048d9_Range16(6918LLU,6963LLU,1LLU),_1a90048d9_Range16(6981LLU,6988LLU,1LLU),_1a90048d9_Range16(7043LLU,7072LLU,1LLU),_1a90048d9_Range16(7086LLU,7087LLU,1LLU),_1a90048d9_Range16(7098LLU,7141LLU,1LLU),_1a90048d9_Range16(7168LLU,7203LLU,1LLU),_1a90048d9_Range16(7245LLU,7247LLU,1LLU),_1a90048d9_Range16(7258LLU,7293LLU,1LLU),_1a90048d9_Range16(7296LLU,7304LLU,1LLU),_1a90048d9_Range16(7312LLU,7354LLU,1LLU),_1a90048d9_Range16(7357LLU,7359LLU,1LLU),_1a90048d9_Range16(7401LLU,7404LLU,1LLU),_1a90048d9_Range16(7406LLU,7411LLU,1LLU),_1a90048d9_Range16(7413LLU,7414LLU,1LLU),_1a90048d9_Range16(7418LLU,7424LLU,6LLU),_1a90048d9_Range16(7425LLU,7615LLU,1LLU),_1a90048d9_Range16(7680LLU,7957LLU,1LLU),_1a90048d9_Range16(7960LLU,7965LLU,1LLU),_1a90048d9_Range16(7968LLU,8005LLU,1LLU),_1a90048d9_Range16(8008LLU,8013LLU,1LLU),_1a90048d9_Range16(8016LLU,8023LLU,1LLU),_1a90048d9_Range16(8025LLU,8031LLU,2LLU),_1a90048d9_Range16(8032LLU,8061LLU,1LLU),_1a90048d9_Range16(8064LLU,8116LLU,1LLU),_1a90048d9_Range16(8118LLU,8124LLU,1LLU),_1a90048d9_Range16(8126LLU,8130LLU,4LLU),_1a90048d9_Range16(8131LLU,8132LLU,1LLU),_1a90048d9_Range16(8134LLU,8140LLU,1LLU),_1a90048d9_Range16(8144LLU,8147LLU,1LLU),_1a90048d9_Range16(8150LLU,8155LLU,1LLU),_1a90048d9_Range16(8160LLU,8172LLU,1LLU),_1a90048d9_Range16(8178LLU,8180LLU,1LLU),_1a90048d9_Range16(8182LLU,8188LLU,1LLU),_1a90048d9_Range16(8305LLU,8319LLU,14LLU),_1a90048d9_Range16(8336LLU,8348LLU,1LLU),_1a90048d9_Range16(8450LLU,8455LLU,5LLU),_1a90048d9_Range16(8458LLU,8467LLU,1LLU),_1a90048d9_Range16(8469LLU,8473LLU,4LLU),_1a90048d9_Range16(8474LLU,8477LLU,1LLU),_1a90048d9_Range16(8484LLU,8490LLU,2LLU),_1a90048d9_Range16(8491LLU,8493LLU,1LLU),_1a90048d9_Range16(8495LLU,8505LLU,1LLU),_1a90048d9_Range16(8508LLU,8511LLU,1LLU),_1a90048d9_Range16(8517LLU,8521LLU,1LLU),_1a90048d9_Range16(8526LLU,8579LLU,53LLU),_1a90048d9_Range16(8580LLU,11264LLU,2684LLU),_1a90048d9_Range16(11265LLU,11492LLU,1LLU),_1a90048d9_Range16(11499LLU,11502LLU,1LLU),_1a90048d9_Range16(11506LLU,11507LLU,1LLU),_1a90048d9_Range16(11520LLU,11557LLU,1LLU),_1a90048d9_Range16(11559LLU,11565LLU,6LLU),_1a90048d9_Range16(11568LLU,11623LLU,1LLU),_1a90048d9_Range16(11631LLU,11648LLU,17LLU),_1a90048d9_Range16(11649LLU,11670LLU,1LLU),_1a90048d9_Range16(11680LLU,11686LLU,1LLU),_1a90048d9_Range16(11688LLU,11694LLU,1LLU),_1a90048d9_Range16(11696LLU,11702LLU,1LLU),_1a90048d9_Range16(11704LLU,11710LLU,1LLU),_1a90048d9_Range16(11712LLU,11718LLU,1LLU),_1a90048d9_Range16(11720LLU,11726LLU,1LLU),_1a90048d9_Range16(11728LLU,11734LLU,1LLU),_1a90048d9_Range16(11736LLU,11742LLU,1LLU),_1a90048d9_Range16(11823LLU,12293LLU,470LLU),_1a90048d9_Range16(12294LLU,12337LLU,43LLU),_1a90048d9_Range16(12338LLU,12341LLU,1LLU),_1a90048d9_Range16(12347LLU,12348LLU,1LLU),_1a90048d9_Range16(12353LLU,12438LLU,1LLU),_1a90048d9_Range16(12445LLU,12447LLU,1LLU),_1a90048d9_Range16(12449LLU,12538LLU,1LLU),_1a90048d9_Range16(12540LLU,12543LLU,1LLU),_1a90048d9_Range16(12549LLU,12591LLU,1LLU),_1a90048d9_Range16(12593LLU,12686LLU,1LLU),_1a90048d9_Range16(12704LLU,12735LLU,1LLU),_1a90048d9_Range16(12784LLU,12799LLU,1LLU),_1a90048d9_Range16(13312LLU,19903LLU,1LLU),_1a90048d9_Range16(19968LLU,42124LLU,1LLU),_1a90048d9_Range16(42192LLU,42237LLU,1LLU),_1a90048d9_Range16(42240LLU,42508LLU,1LLU),_1a90048d9_Range16(42512LLU,42527LLU,1LLU),_1a90048d9_Range16(42538LLU,42539LLU,1LLU),_1a90048d9_Range16(42560LLU,42606LLU,1LLU),_1a90048d9_Range16(42623LLU,42653LLU,1LLU),_1a90048d9_Range16(42656LLU,42725LLU,1LLU),_1a90048d9_Range16(42775LLU,42783LLU,1LLU),_1a90048d9_Range16(42786LLU,42888LLU,1LLU),_1a90048d9_Range16(42891LLU,42954LLU,1LLU),_1a90048d9_Range16(42960LLU,42961LLU,1LLU),_1a90048d9_Range16(42963LLU,42965LLU,2LLU),_1a90048d9_Range16(42966LLU,42969LLU,1LLU),_1a90048d9_Range16(42994LLU,43009LLU,1LLU),_1a90048d9_Range16(43011LLU,43013LLU,1LLU),_1a90048d9_Range16(43015LLU,43018LLU,1LLU),_1a90048d9_Range16(43020LLU,43042LLU,1LLU),_1a90048d9_Range16(43072LLU,43123LLU,1LLU),_1a90048d9_Range16(43138LLU,43187LLU,1LLU),_1a90048d9_Range16(43250LLU,43255LLU,1LLU),_1a90048d9_Range16(43259LLU,43261LLU,2LLU),_1a90048d9_Range16(43262LLU,43274LLU,12LLU),_1a90048d9_Range16(43275LLU,43301LLU,1LLU),_1a90048d9_Range16(43312LLU,43334LLU,1LLU),_1a90048d9_Range16(43360LLU,43388LLU,1LLU),_1a90048d9_Range16(43396LLU,43442LLU,1LLU),_1a90048d9_Range16(43471LLU,43488LLU,17LLU),_1a90048d9_Range16(43489LLU,43492LLU,1LLU),_1a90048d9_Range16(43494LLU,43503LLU,1LLU),_1a90048d9_Range16(43514LLU,43518LLU,1LLU),_1a90048d9_Range16(43520LLU,43560LLU,1LLU),_1a90048d9_Range16(43584LLU,43586LLU,1LLU),_1a90048d9_Range16(43588LLU,43595LLU,1LLU),_1a90048d9_Range16(43616LLU,43638LLU,1LLU),_1a90048d9_Range16(43642LLU,43646LLU,4LLU),_1a90048d9_Range16(43647LLU,43695LLU,1LLU),_1a90048d9_Range16(43697LLU,43701LLU,4LLU),_1a90048d9_Range16(43702LLU,43705LLU,3LLU),_1a90048d9_Range16(43706LLU,43709LLU,1LLU),_1a90048d9_Range16(43712LLU,43714LLU,2LLU),_1a90048d9_Range16(43739LLU,43741LLU,1LLU),_1a90048d9_Range16(43744LLU,43754LLU,1LLU),_1a90048d9_Range16(43762LLU,43764LLU,1LLU),_1a90048d9_Range16(43777LLU,43782LLU,1LLU),_1a90048d9_Range16(43785LLU,43790LLU,1LLU),_1a90048d9_Range16(43793LLU,43798LLU,1LLU),_1a90048d9_Range16(43808LLU,43814LLU,1LLU),_1a90048d9_Range16(43816LLU,43822LLU,1LLU),_1a90048d9_Range16(43824LLU,43866LLU,1LLU),_1a90048d9_Range16(43868LLU,43881LLU,1LLU),_1a90048d9_Range16(43888LLU,44002LLU,1LLU),_1a90048d9_Range16(44032LLU,55203LLU,1LLU),_1a90048d9_Range16(55216LLU,55238LLU,1LLU),_1a90048d9_Range16(55243LLU,55291LLU,1LLU),_1a90048d9_Range16(63744LLU,64109LLU,1LLU),_1a90048d9_Range16(64112LLU,64217LLU,1LLU),_1a90048d9_Range16(64256LLU,64262LLU,1LLU),_1a90048d9_Range16(64275LLU,64279LLU,1LLU),_1a90048d9_Range16(64285LLU,64287LLU,2LLU),_1a90048d9_Range16(64288LLU,64296LLU,1LLU),_1a90048d9_Range16(64298LLU,64310LLU,1LLU),_1a90048d9_Range16(64312LLU,64316LLU,1LLU),_1a90048d9_Range16(64318LLU,64320LLU,2LLU),_1a90048d9_Range16(64321LLU,64323LLU,2LLU),_1a90048d9_Range16(64324LLU,64326LLU,2LLU),_1a90048d9_Range16(64327LLU,64433LLU,1LLU),_1a90048d9_Range16(64467LLU,64829LLU,1LLU),_1a90048d9_Range16(64848LLU,64911LLU,1LLU),_1a90048d9_Range16(64914LLU,64967LLU,1LLU),_1a90048d9_Range16(65008LLU,65019LLU,1LLU),_1a90048d9_Range16(65136LLU,65140LLU,1LLU),_1a90048d9_Range16(65142LLU,65276LLU,1LLU),_1a90048d9_Range16(65313LLU,65338LLU,1LLU),_1a90048d9_Range16(65345LLU,65370LLU,1LLU),_1a90048d9_Range16(65382LLU,65470LLU,1LLU),_1a90048d9_Range16(65474LLU,65479LLU,1LLU),_1a90048d9_Range16(65482LLU,65487LLU,1LLU),_1a90048d9_Range16(65490LLU,65495LLU,1LLU),_1a90048d9_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1a9004e7d_Range32>({_1a9004e7d_Range32(65536LLU,65547LLU,1LLU),_1a9004e7d_Range32(65549LLU,65574LLU,1LLU),_1a9004e7d_Range32(65576LLU,65594LLU,1LLU),_1a9004e7d_Range32(65596LLU,65597LLU,1LLU),_1a9004e7d_Range32(65599LLU,65613LLU,1LLU),_1a9004e7d_Range32(65616LLU,65629LLU,1LLU),_1a9004e7d_Range32(65664LLU,65786LLU,1LLU),_1a9004e7d_Range32(66176LLU,66204LLU,1LLU),_1a9004e7d_Range32(66208LLU,66256LLU,1LLU),_1a9004e7d_Range32(66304LLU,66335LLU,1LLU),_1a9004e7d_Range32(66349LLU,66368LLU,1LLU),_1a9004e7d_Range32(66370LLU,66377LLU,1LLU),_1a9004e7d_Range32(66384LLU,66421LLU,1LLU),_1a9004e7d_Range32(66432LLU,66461LLU,1LLU),_1a9004e7d_Range32(66464LLU,66499LLU,1LLU),_1a9004e7d_Range32(66504LLU,66511LLU,1LLU),_1a9004e7d_Range32(66560LLU,66717LLU,1LLU),_1a9004e7d_Range32(66736LLU,66771LLU,1LLU),_1a9004e7d_Range32(66776LLU,66811LLU,1LLU),_1a9004e7d_Range32(66816LLU,66855LLU,1LLU),_1a9004e7d_Range32(66864LLU,66915LLU,1LLU),_1a9004e7d_Range32(66928LLU,66938LLU,1LLU),_1a9004e7d_Range32(66940LLU,66954LLU,1LLU),_1a9004e7d_Range32(66956LLU,66962LLU,1LLU),_1a9004e7d_Range32(66964LLU,66965LLU,1LLU),_1a9004e7d_Range32(66967LLU,66977LLU,1LLU),_1a9004e7d_Range32(66979LLU,66993LLU,1LLU),_1a9004e7d_Range32(66995LLU,67001LLU,1LLU),_1a9004e7d_Range32(67003LLU,67004LLU,1LLU),_1a9004e7d_Range32(67072LLU,67382LLU,1LLU),_1a9004e7d_Range32(67392LLU,67413LLU,1LLU),_1a9004e7d_Range32(67424LLU,67431LLU,1LLU),_1a9004e7d_Range32(67456LLU,67461LLU,1LLU),_1a9004e7d_Range32(67463LLU,67504LLU,1LLU),_1a9004e7d_Range32(67506LLU,67514LLU,1LLU),_1a9004e7d_Range32(67584LLU,67589LLU,1LLU),_1a9004e7d_Range32(67592LLU,67594LLU,2LLU),_1a9004e7d_Range32(67595LLU,67637LLU,1LLU),_1a9004e7d_Range32(67639LLU,67640LLU,1LLU),_1a9004e7d_Range32(67644LLU,67647LLU,3LLU),_1a9004e7d_Range32(67648LLU,67669LLU,1LLU),_1a9004e7d_Range32(67680LLU,67702LLU,1LLU),_1a9004e7d_Range32(67712LLU,67742LLU,1LLU),_1a9004e7d_Range32(67808LLU,67826LLU,1LLU),_1a9004e7d_Range32(67828LLU,67829LLU,1LLU),_1a9004e7d_Range32(67840LLU,67861LLU,1LLU),_1a9004e7d_Range32(67872LLU,67897LLU,1LLU),_1a9004e7d_Range32(67968LLU,68023LLU,1LLU),_1a9004e7d_Range32(68030LLU,68031LLU,1LLU),_1a9004e7d_Range32(68096LLU,68112LLU,16LLU),_1a9004e7d_Range32(68113LLU,68115LLU,1LLU),_1a9004e7d_Range32(68117LLU,68119LLU,1LLU),_1a9004e7d_Range32(68121LLU,68149LLU,1LLU),_1a9004e7d_Range32(68192LLU,68220LLU,1LLU),_1a9004e7d_Range32(68224LLU,68252LLU,1LLU),_1a9004e7d_Range32(68288LLU,68295LLU,1LLU),_1a9004e7d_Range32(68297LLU,68324LLU,1LLU),_1a9004e7d_Range32(68352LLU,68405LLU,1LLU),_1a9004e7d_Range32(68416LLU,68437LLU,1LLU),_1a9004e7d_Range32(68448LLU,68466LLU,1LLU),_1a9004e7d_Range32(68480LLU,68497LLU,1LLU),_1a9004e7d_Range32(68608LLU,68680LLU,1LLU),_1a9004e7d_Range32(68736LLU,68786LLU,1LLU),_1a9004e7d_Range32(68800LLU,68850LLU,1LLU),_1a9004e7d_Range32(68864LLU,68899LLU,1LLU),_1a9004e7d_Range32(69248LLU,69289LLU,1LLU),_1a9004e7d_Range32(69296LLU,69297LLU,1LLU),_1a9004e7d_Range32(69376LLU,69404LLU,1LLU),_1a9004e7d_Range32(69415LLU,69424LLU,9LLU),_1a9004e7d_Range32(69425LLU,69445LLU,1LLU),_1a9004e7d_Range32(69488LLU,69505LLU,1LLU),_1a9004e7d_Range32(69552LLU,69572LLU,1LLU),_1a9004e7d_Range32(69600LLU,69622LLU,1LLU),_1a9004e7d_Range32(69635LLU,69687LLU,1LLU),_1a9004e7d_Range32(69745LLU,69746LLU,1LLU),_1a9004e7d_Range32(69749LLU,69763LLU,14LLU),_1a9004e7d_Range32(69764LLU,69807LLU,1LLU),_1a9004e7d_Range32(69840LLU,69864LLU,1LLU),_1a9004e7d_Range32(69891LLU,69926LLU,1LLU),_1a9004e7d_Range32(69956LLU,69959LLU,3LLU),_1a9004e7d_Range32(69968LLU,70002LLU,1LLU),_1a9004e7d_Range32(70006LLU,70019LLU,13LLU),_1a9004e7d_Range32(70020LLU,70066LLU,1LLU),_1a9004e7d_Range32(70081LLU,70084LLU,1LLU),_1a9004e7d_Range32(70106LLU,70108LLU,2LLU),_1a9004e7d_Range32(70144LLU,70161LLU,1LLU),_1a9004e7d_Range32(70163LLU,70187LLU,1LLU),_1a9004e7d_Range32(70207LLU,70208LLU,1LLU),_1a9004e7d_Range32(70272LLU,70278LLU,1LLU),_1a9004e7d_Range32(70280LLU,70282LLU,2LLU),_1a9004e7d_Range32(70283LLU,70285LLU,1LLU),_1a9004e7d_Range32(70287LLU,70301LLU,1LLU),_1a9004e7d_Range32(70303LLU,70312LLU,1LLU),_1a9004e7d_Range32(70320LLU,70366LLU,1LLU),_1a9004e7d_Range32(70405LLU,70412LLU,1LLU),_1a9004e7d_Range32(70415LLU,70416LLU,1LLU),_1a9004e7d_Range32(70419LLU,70440LLU,1LLU),_1a9004e7d_Range32(70442LLU,70448LLU,1LLU),_1a9004e7d_Range32(70450LLU,70451LLU,1LLU),_1a9004e7d_Range32(70453LLU,70457LLU,1LLU),_1a9004e7d_Range32(70461LLU,70480LLU,19LLU),_1a9004e7d_Range32(70493LLU,70497LLU,1LLU),_1a9004e7d_Range32(70656LLU,70708LLU,1LLU),_1a9004e7d_Range32(70727LLU,70730LLU,1LLU),_1a9004e7d_Range32(70751LLU,70753LLU,1LLU),_1a9004e7d_Range32(70784LLU,70831LLU,1LLU),_1a9004e7d_Range32(70852LLU,70853LLU,1LLU),_1a9004e7d_Range32(70855LLU,71040LLU,185LLU),_1a9004e7d_Range32(71041LLU,71086LLU,1LLU),_1a9004e7d_Range32(71128LLU,71131LLU,1LLU),_1a9004e7d_Range32(71168LLU,71215LLU,1LLU),_1a9004e7d_Range32(71236LLU,71296LLU,60LLU),_1a9004e7d_Range32(71297LLU,71338LLU,1LLU),_1a9004e7d_Range32(71352LLU,71424LLU,72LLU),_1a9004e7d_Range32(71425LLU,71450LLU,1LLU),_1a9004e7d_Range32(71488LLU,71494LLU,1LLU),_1a9004e7d_Range32(71680LLU,71723LLU,1LLU),_1a9004e7d_Range32(71840LLU,71903LLU,1LLU),_1a9004e7d_Range32(71935LLU,71942LLU,1LLU),_1a9004e7d_Range32(71945LLU,71948LLU,3LLU),_1a9004e7d_Range32(71949LLU,71955LLU,1LLU),_1a9004e7d_Range32(71957LLU,71958LLU,1LLU),_1a9004e7d_Range32(71960LLU,71983LLU,1LLU),_1a9004e7d_Range32(71999LLU,72001LLU,2LLU),_1a9004e7d_Range32(72096LLU,72103LLU,1LLU),_1a9004e7d_Range32(72106LLU,72144LLU,1LLU),_1a9004e7d_Range32(72161LLU,72163LLU,2LLU),_1a9004e7d_Range32(72192LLU,72203LLU,11LLU),_1a9004e7d_Range32(72204LLU,72242LLU,1LLU),_1a9004e7d_Range32(72250LLU,72272LLU,22LLU),_1a9004e7d_Range32(72284LLU,72329LLU,1LLU),_1a9004e7d_Range32(72349LLU,72368LLU,19LLU),_1a9004e7d_Range32(72369LLU,72440LLU,1LLU),_1a9004e7d_Range32(72704LLU,72712LLU,1LLU),_1a9004e7d_Range32(72714LLU,72750LLU,1LLU),_1a9004e7d_Range32(72768LLU,72818LLU,50LLU),_1a9004e7d_Range32(72819LLU,72847LLU,1LLU),_1a9004e7d_Range32(72960LLU,72966LLU,1LLU),_1a9004e7d_Range32(72968LLU,72969LLU,1LLU),_1a9004e7d_Range32(72971LLU,73008LLU,1LLU),_1a9004e7d_Range32(73030LLU,73056LLU,26LLU),_1a9004e7d_Range32(73057LLU,73061LLU,1LLU),_1a9004e7d_Range32(73063LLU,73064LLU,1LLU),_1a9004e7d_Range32(73066LLU,73097LLU,1LLU),_1a9004e7d_Range32(73112LLU,73440LLU,328LLU),_1a9004e7d_Range32(73441LLU,73458LLU,1LLU),_1a9004e7d_Range32(73474LLU,73476LLU,2LLU),_1a9004e7d_Range32(73477LLU,73488LLU,1LLU),_1a9004e7d_Range32(73490LLU,73523LLU,1LLU),_1a9004e7d_Range32(73648LLU,73728LLU,80LLU),_1a9004e7d_Range32(73729LLU,74649LLU,1LLU),_1a9004e7d_Range32(74880LLU,75075LLU,1LLU),_1a9004e7d_Range32(77712LLU,77808LLU,1LLU),_1a9004e7d_Range32(77824LLU,78895LLU,1LLU),_1a9004e7d_Range32(78913LLU,78918LLU,1LLU),_1a9004e7d_Range32(82944LLU,83526LLU,1LLU),_1a9004e7d_Range32(92160LLU,92728LLU,1LLU),_1a9004e7d_Range32(92736LLU,92766LLU,1LLU),_1a9004e7d_Range32(92784LLU,92862LLU,1LLU),_1a9004e7d_Range32(92880LLU,92909LLU,1LLU),_1a9004e7d_Range32(92928LLU,92975LLU,1LLU),_1a9004e7d_Range32(92992LLU,92995LLU,1LLU),_1a9004e7d_Range32(93027LLU,93047LLU,1LLU),_1a9004e7d_Range32(93053LLU,93071LLU,1LLU),_1a9004e7d_Range32(93760LLU,93823LLU,1LLU),_1a9004e7d_Range32(93952LLU,94026LLU,1LLU),_1a9004e7d_Range32(94032LLU,94099LLU,67LLU),_1a9004e7d_Range32(94100LLU,94111LLU,1LLU),_1a9004e7d_Range32(94176LLU,94177LLU,1LLU),_1a9004e7d_Range32(94179LLU,94208LLU,29LLU),_1a9004e7d_Range32(94209LLU,100343LLU,1LLU),_1a9004e7d_Range32(100352LLU,101589LLU,1LLU),_1a9004e7d_Range32(101632LLU,101640LLU,1LLU),_1a9004e7d_Range32(110576LLU,110579LLU,1LLU),_1a9004e7d_Range32(110581LLU,110587LLU,1LLU),_1a9004e7d_Range32(110589LLU,110590LLU,1LLU),_1a9004e7d_Range32(110592LLU,110882LLU,1LLU),_1a9004e7d_Range32(110898LLU,110928LLU,30LLU),_1a9004e7d_Range32(110929LLU,110930LLU,1LLU),_1a9004e7d_Range32(110933LLU,110948LLU,15LLU),_1a9004e7d_Range32(110949LLU,110951LLU,1LLU),_1a9004e7d_Range32(110960LLU,111355LLU,1LLU),_1a9004e7d_Range32(113664LLU,113770LLU,1LLU),_1a9004e7d_Range32(113776LLU,113788LLU,1LLU),_1a9004e7d_Range32(113792LLU,113800LLU,1LLU),_1a9004e7d_Range32(113808LLU,113817LLU,1LLU),_1a9004e7d_Range32(119808LLU,119892LLU,1LLU),_1a9004e7d_Range32(119894LLU,119964LLU,1LLU),_1a9004e7d_Range32(119966LLU,119967LLU,1LLU),_1a9004e7d_Range32(119970LLU,119973LLU,3LLU),_1a9004e7d_Range32(119974LLU,119977LLU,3LLU),_1a9004e7d_Range32(119978LLU,119980LLU,1LLU),_1a9004e7d_Range32(119982LLU,119993LLU,1LLU),_1a9004e7d_Range32(119995LLU,119997LLU,2LLU),_1a9004e7d_Range32(119998LLU,120003LLU,1LLU),_1a9004e7d_Range32(120005LLU,120069LLU,1LLU),_1a9004e7d_Range32(120071LLU,120074LLU,1LLU),_1a9004e7d_Range32(120077LLU,120084LLU,1LLU),_1a9004e7d_Range32(120086LLU,120092LLU,1LLU),_1a9004e7d_Range32(120094LLU,120121LLU,1LLU),_1a9004e7d_Range32(120123LLU,120126LLU,1LLU),_1a9004e7d_Range32(120128LLU,120132LLU,1LLU),_1a9004e7d_Range32(120134LLU,120138LLU,4LLU),_1a9004e7d_Range32(120139LLU,120144LLU,1LLU),_1a9004e7d_Range32(120146LLU,120485LLU,1LLU),_1a9004e7d_Range32(120488LLU,120512LLU,1LLU),_1a9004e7d_Range32(120514LLU,120538LLU,1LLU),_1a9004e7d_Range32(120540LLU,120570LLU,1LLU),_1a9004e7d_Range32(120572LLU,120596LLU,1LLU),_1a9004e7d_Range32(120598LLU,120628LLU,1LLU),_1a9004e7d_Range32(120630LLU,120654LLU,1LLU),_1a9004e7d_Range32(120656LLU,120686LLU,1LLU),_1a9004e7d_Range32(120688LLU,120712LLU,1LLU),_1a9004e7d_Range32(120714LLU,120744LLU,1LLU),_1a9004e7d_Range32(120746LLU,120770LLU,1LLU),_1a9004e7d_Range32(120772LLU,120779LLU,1LLU),_1a9004e7d_Range32(122624LLU,122654LLU,1LLU),_1a9004e7d_Range32(122661LLU,122666LLU,1LLU),_1a9004e7d_Range32(122928LLU,122989LLU,1LLU),_1a9004e7d_Range32(123136LLU,123180LLU,1LLU),_1a9004e7d_Range32(123191LLU,123197LLU,1LLU),_1a9004e7d_Range32(123214LLU,123536LLU,322LLU),_1a9004e7d_Range32(123537LLU,123565LLU,1LLU),_1a9004e7d_Range32(123584LLU,123627LLU,1LLU),_1a9004e7d_Range32(124112LLU,124139LLU,1LLU),_1a9004e7d_Range32(124896LLU,124902LLU,1LLU),_1a9004e7d_Range32(124904LLU,124907LLU,1LLU),_1a9004e7d_Range32(124909LLU,124910LLU,1LLU),_1a9004e7d_Range32(124912LLU,124926LLU,1LLU),_1a9004e7d_Range32(124928LLU,125124LLU,1LLU),_1a9004e7d_Range32(125184LLU,125251LLU,1LLU),_1a9004e7d_Range32(125259LLU,126464LLU,1205LLU),_1a9004e7d_Range32(126465LLU,126467LLU,1LLU),_1a9004e7d_Range32(126469LLU,126495LLU,1LLU),_1a9004e7d_Range32(126497LLU,126498LLU,1LLU),_1a9004e7d_Range32(126500LLU,126503LLU,3LLU),_1a9004e7d_Range32(126505LLU,126514LLU,1LLU),_1a9004e7d_Range32(126516LLU,126519LLU,1LLU),_1a9004e7d_Range32(126521LLU,126523LLU,2LLU),_1a9004e7d_Range32(126530LLU,126535LLU,5LLU),_1a9004e7d_Range32(126537LLU,126541LLU,2LLU),_1a9004e7d_Range32(126542LLU,126543LLU,1LLU),_1a9004e7d_Range32(126545LLU,126546LLU,1LLU),_1a9004e7d_Range32(126548LLU,126551LLU,3LLU),_1a9004e7d_Range32(126553LLU,126561LLU,2LLU),_1a9004e7d_Range32(126562LLU,126564LLU,2LLU),_1a9004e7d_Range32(126567LLU,126570LLU,1LLU),_1a9004e7d_Range32(126572LLU,126578LLU,1LLU),_1a9004e7d_Range32(126580LLU,126583LLU,1LLU),_1a9004e7d_Range32(126585LLU,126588LLU,1LLU),_1a9004e7d_Range32(126590LLU,126592LLU,2LLU),_1a9004e7d_Range32(126593LLU,126601LLU,1LLU),_1a9004e7d_Range32(126603LLU,126619LLU,1LLU),_1a9004e7d_Range32(126625LLU,126627LLU,1LLU),_1a9004e7d_Range32(126629LLU,126633LLU,1LLU),_1a9004e7d_Range32(126635LLU,126651LLU,1LLU),_1a9004e7d_Range32(131072LLU,173791LLU,1LLU),_1a9004e7d_Range32(173824LLU,177977LLU,1LLU),_1a9004e7d_Range32(177984LLU,178205LLU,1LLU),_1a9004e7d_Range32(178208LLU,183969LLU,1LLU),_1a9004e7d_Range32(183984LLU,191456LLU,1LLU),_1a9004e7d_Range32(194560LLU,195101LLU,1LLU),_1a9004e7d_Range32(196608LLU,201546LLU,1LLU),_1a9004e7d_Range32(201552LLU,205743LLU,1LLU)}),6LL));
	_1a8eba4c6_LETTER = _1a8eb5ca7__L;
	_1a90004a6__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
	_1a90b9570_FIRST = jule::Array<jule::U8,256>({});
	_1a90b9be1_ACCEPT_RANGES = jule::Array<_1a90b812e_accept_range,16>({_1a90b812e_accept_range(128LLU,191LLU),_1a90b812e_accept_range(160LLU,191LLU),_1a90b812e_accept_range(128LLU,159LLU),_1a90b812e_accept_range(144LLU,191LLU),_1a90b812e_accept_range(128LLU,143LLU)});
	_1a9291e73_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
	_1a9292094_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
	_1a92921b5_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
	_1a92a6bd0_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
	_1a92a6e11_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
	_1a92b37be_PATH_STDLIB = jule::Str();
	_1a92b785b_PATH_EXEC = jule::Str();
	_1a92bc465_PATH_WD = jule::Str();
	_1a92b4a9a_PATH_API = jule::Str();
	_1a92b60c9_OS = jule::Str("linux", 5);
	_1a92b68e3_ARCH = jule::Str("amd64", 5);
	_1aae085ee_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
	_1aae0792d_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
	_1aae07a4e_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
	_1aae07c91_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
	_1aaeecd53_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
	_1ab00e1d8_KEYWORDS = jule::Array<_1ab00dda8_KindPair,47>({_1ab00dda8_KindPair(jule::Str("i8", 2),static_cast<jule::U64>(1LLU)),_1ab00dda8_KindPair(jule::Str("i16", 3),static_cast<jule::U64>(1LLU)),_1ab00dda8_KindPair(jule::Str("i32", 3),static_cast<jule::U64>(1LLU)),_1ab00dda8_KindPair(jule::Str("i64", 3),static_cast<jule::U64>(1LLU)),_1ab00dda8_KindPair(jule::Str("u8", 2),static_cast<jule::U64>(1LLU)),_1ab00dda8_KindPair(jule::Str("u16", 3),static_cast<jule::U64>(1LLU)),_1ab00dda8_KindPair(jule::Str("u32", 3),static_cast<jule::U64>(1LLU)),_1ab00dda8_KindPair(jule::Str("u64", 3),static_cast<jule::U64>(1LLU)),_1ab00dda8_KindPair(jule::Str("f32", 3),static_cast<jule::U64>(1LLU)),_1ab00dda8_KindPair(jule::Str("f64", 3),static_cast<jule::U64>(1LLU)),_1ab00dda8_KindPair(jule::Str("uint", 4),static_cast<jule::U64>(1LLU)),_1ab00dda8_KindPair(jule::Str("int", 3),static_cast<jule::U64>(1LLU)),_1ab00dda8_KindPair(jule::Str("uintptr", 7),static_cast<jule::U64>(1LLU)),_1ab00dda8_KindPair(jule::Str("bool", 4),static_cast<jule::U64>(1LLU)),_1ab00dda8_KindPair(jule::Str("str", 3),static_cast<jule::U64>(1LLU)),_1ab00dda8_KindPair(jule::Str("any", 3),static_cast<jule::U64>(1LLU)),_1ab00dda8_KindPair(jule::Str("true", 4),static_cast<jule::U64>(6LLU)),_1ab00dda8_KindPair(jule::Str("false", 5),static_cast<jule::U64>(6LLU)),_1ab00dda8_KindPair(jule::Str("nil", 3),static_cast<jule::U64>(6LLU)),_1ab00dda8_KindPair(jule::Str("const", 5),static_cast<jule::U64>(9LLU)),_1ab00dda8_KindPair(jule::Str("ret", 3),static_cast<jule::U64>(4LLU)),_1ab00dda8_KindPair(jule::Str("type", 4),static_cast<jule::U64>(10LLU)),_1ab00dda8_KindPair(jule::Str("for", 3),static_cast<jule::U64>(12LLU)),_1ab00dda8_KindPair(jule::Str("break", 5),static_cast<jule::U64>(13LLU)),_1ab00dda8_KindPair(jule::Str("continue", 8),static_cast<jule::U64>(14LLU)),_1ab00dda8_KindPair(jule::Str("in", 2),static_cast<jule::U64>(15LLU)),_1ab00dda8_KindPair(jule::Str("if", 2),static_cast<jule::U64>(16LLU)),_1ab00dda8_KindPair(jule::Str("else", 4),static_cast<jule::U64>(17LLU)),_1ab00dda8_KindPair(jule::Str("use", 3),static_cast<jule::U64>(19LLU)),_1ab00dda8_KindPair(jule::Str("pub", 3),static_cast<jule::U64>(21LLU)),_1ab00dda8_KindPair(jule::Str("goto", 4),static_cast<jule::U64>(22LLU)),_1ab00dda8_KindPair(jule::Str("enum", 4),static_cast<jule::U64>(24LLU)),_1ab00dda8_KindPair(jule::Str("struct", 6),static_cast<jule::U64>(25LLU)),_1ab00dda8_KindPair(jule::Str("co", 2),static_cast<jule::U64>(26LLU)),_1ab00dda8_KindPair(jule::Str("match", 5),static_cast<jule::U64>(27LLU)),_1ab00dda8_KindPair(jule::Str("self", 4),static_cast<jule::U64>(28LLU)),_1ab00dda8_KindPair(jule::Str("trait", 5),static_cast<jule::U64>(29LLU)),_1ab00dda8_KindPair(jule::Str("impl", 4),static_cast<jule::U64>(30LLU)),_1ab00dda8_KindPair(jule::Str("cpp", 3),static_cast<jule::U64>(31LLU)),_1ab00dda8_KindPair(jule::Str("fall", 4),static_cast<jule::U64>(32LLU)),_1ab00dda8_KindPair(jule::Str("fn", 2),static_cast<jule::U64>(33LLU)),_1ab00dda8_KindPair(jule::Str("let", 3),static_cast<jule::U64>(34LLU)),_1ab00dda8_KindPair(jule::Str("unsafe", 6),static_cast<jule::U64>(35LLU)),_1ab00dda8_KindPair(jule::Str("mut", 3),static_cast<jule::U64>(36LLU)),_1ab00dda8_KindPair(jule::Str("defer", 5),static_cast<jule::U64>(37LLU)),_1ab00dda8_KindPair(jule::Str("static", 6),static_cast<jule::U64>(38LLU)),_1ab00dda8_KindPair(jule::Str("error", 5),static_cast<jule::U64>(40LLU))});
	_1ab00e419_BASIC_OPS = jule::Array<_1ab00dda8_KindPair,39>({_1ab00dda8_KindPair(jule::Str("::", 2),static_cast<jule::U64>(23LLU)),_1ab00dda8_KindPair(jule::Str(":", 1),static_cast<jule::U64>(11LLU)),_1ab00dda8_KindPair(jule::Str(";", 1),static_cast<jule::U64>(5LLU)),_1ab00dda8_KindPair(jule::Str(",", 1),static_cast<jule::U64>(8LLU)),_1ab00dda8_KindPair(jule::Str("...", 3),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str(".", 1),static_cast<jule::U64>(20LLU)),_1ab00dda8_KindPair(jule::Str("+=", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("-=", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("*=", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("/=", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("%=", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("<<=", 3),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str(">>=", 3),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("^=", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("&=", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("|=", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("==", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("!=", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str(">=", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("<=", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("&&", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("||", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("<<", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str(">>", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("++", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("--", 2),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("+", 1),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("-", 1),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("*", 1),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("/", 1),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("%", 1),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("&", 1),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("|", 1),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("^", 1),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("!", 1),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("<", 1),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str(">", 1),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("=", 1),static_cast<jule::U64>(7LLU)),_1ab00dda8_KindPair(jule::Str("#", 1),static_cast<jule::U64>(39LLU))});
	_1ad2276da_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
	_1ad227a81_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
	_1aca6417b_F32_INFO = _1acee76b9_FloatInfo(23LLU,8LLU,-127LL);
	_1aca6a8d0_F64_INFO = _1acee76b9_FloatInfo(52LLU,11LLU,-1023LL);
	_1acae9640_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
	_1acb802db_POWTAB = jule::Slice<jule::I64>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
	_1acb54667_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
	_1acb8bc76_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
	_1acc70a91_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
	_1acc84951_LEFTCHEATS = jule::Slice<_1ad256780_LeftCheat>({_1ad256780_LeftCheat(0LL,jule::Str()),_1ad256780_LeftCheat(1LL,jule::Str("5", 1)),_1ad256780_LeftCheat(1LL,jule::Str("25", 2)),_1ad256780_LeftCheat(1LL,jule::Str("125", 3)),_1ad256780_LeftCheat(2LL,jule::Str("625", 3)),_1ad256780_LeftCheat(2LL,jule::Str("3125", 4)),_1ad256780_LeftCheat(2LL,jule::Str("15625", 5)),_1ad256780_LeftCheat(3LL,jule::Str("78125", 5)),_1ad256780_LeftCheat(3LL,jule::Str("390625", 6)),_1ad256780_LeftCheat(3LL,jule::Str("1953125", 7)),_1ad256780_LeftCheat(4LL,jule::Str("9765625", 7)),_1ad256780_LeftCheat(4LL,jule::Str("48828125", 8)),_1ad256780_LeftCheat(4LL,jule::Str("244140625", 9)),_1ad256780_LeftCheat(4LL,jule::Str("1220703125", 10)),_1ad256780_LeftCheat(5LL,jule::Str("6103515625", 10)),_1ad256780_LeftCheat(5LL,jule::Str("30517578125", 11)),_1ad256780_LeftCheat(5LL,jule::Str("152587890625", 12)),_1ad256780_LeftCheat(6LL,jule::Str("762939453125", 12)),_1ad256780_LeftCheat(6LL,jule::Str("3814697265625", 13)),_1ad256780_LeftCheat(6LL,jule::Str("19073486328125", 14)),_1ad256780_LeftCheat(7LL,jule::Str("95367431640625", 14)),_1ad256780_LeftCheat(7LL,jule::Str("476837158203125", 15)),_1ad256780_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_1ad256780_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_1ad256780_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_1ad256780_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_1ad256780_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_1ad256780_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_1ad256780_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_1ad256780_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_1ad256780_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_1ad256780_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_1ad256780_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_1ad256780_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_1ad256780_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_1ad256780_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_1ad256780_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_1ad256780_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_1ad256780_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_1ad256780_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_1ad256780_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_1ad256780_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_1ad256780_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_1ad256780_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_1ad256780_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_1ad256780_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_1ad256780_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_1ad256780_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_1ad256780_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_1ad256780_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_1ad256780_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_1ad256780_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_1ad256780_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_1ad256780_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_1ad256780_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_1ad256780_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_1ad256780_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_1ad256780_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_1ad256780_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_1ad256780_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_1ad256780_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
	_1ad347b18_BIT_SIZE = 0LL;
	_1ad347c39_SYS_INT = jule::Str();
	_1ad347d5a_SYS_UINT = jule::Str();
	_1e6b19e73_deads = nullptr;
	_1e6b1bccc_checking = nullptr;
	_1e6b28976_current = jule::Any(nullptr);
	_1e6b2ad85_main_current = jule::Any(nullptr);
	_1adade1e4_MDAYS = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
	_1a9268059_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
	_1aba96d6e_OUT_DIR = jule::Str("dist", 4);
	_1aba9b912_OUT_NAME = jule::Str("ir.cpp", 6);
	_1ababe78c_OUT = jule::Str();

	_1a92d0731_init();
	_1ad34a91d_init();
	_1adb454e2_init();
}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}