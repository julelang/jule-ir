// Auto generated by JuleC.
// JuleC version: jule0.0.16 @master
// Date: 6/9/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1e7a8015c_Range16;
struct _1e7a8068a_Range32;
struct _1e7a80b0d_RangeTable;
struct _1e7b83e0e_acceptRange;
struct _1e7be2632_StrBuilder;
struct _1e7bed64e_lazyBuff;
struct _212303e27_DirEntry;
struct _2123041ad_Directory;
struct _212305ce7_File;
struct _212307dd7_Status;
struct _212124671_cmdAttrs;
struct _1e7c94ecb_Log;
struct _1b57220b7_floatInfo;
struct _1b5722a68_decimalSlice;
struct _1b5734bbd_leftCheat;
struct _1b57356d5_decimal;
struct _1b5747b9d_Const;
struct _1a3b27a62_Token;
struct _1a3b2d2e8_File;
struct _1a3b3044e_kindPair;
struct _1a3b36433_lex;
struct _1a3b3b180_Ast;
struct _1a3b3c13c_Node;
struct _1a3b3c55a_Directive;
struct _1a3b3d13d_TypeDecl;
struct _1a3b3d748_IdentTypeDecl;
struct _1a3b3da12_SubIdentTypeDecl;
struct _1a3b3dddb_NamespaceTypeDecl;
struct _1a3b3e1d8_SptrTypeDecl;
struct _1a3b3e56d_SlcTypeDecl;
struct _1a3b3e86a_TupleTypeDecl;
struct _1a3b3eb67_PtrTypeDecl;
struct _1a3b40409_ArrTypeDecl;
struct _1a3b40b57_MapTypeDecl;
struct _1a3b41031_RetTypeDecl;
struct _1a3b42472_Expr;
struct _1a3b4273b_RangeExpr;
struct _1a3b42d46_UseExpr;
struct _1a3b43066_TupleExpr;
struct _1a3b4340c_LitExpr;
struct _1a3b437d6_UnsafeExpr;
struct _1a3b43c8c_IdentExpr;
struct _1a3b4452e_UnaryExpr;
struct _1a3b44908_VariadicExpr;
struct _1a3b44cd2_CastExpr;
struct _1a3b451ab_NsSelectionExpr;
struct _1a3b45585_SubIdentExpr;
struct _1a3b45a3b_BinaryExpr;
struct _1a3b4619b_FnCallExpr;
struct _1a3b46b91_FieldExprPair;
struct _1a3b474bb_StructLit;
struct _1a3b47972_BraceLit;
struct _1a3b4829c_KeyValPair;
struct _1a3b489c8_SliceExpr;
struct _1a3b49435_IndexingExpr;
struct _1a3b49a95_SlicingExpr;
struct _1a3b49d92_Constraint;
struct _1a3b4a348_GenericDecl;
struct _1a3b4a722_LabelSt;
struct _1a3b4aaeb_GotoSt;
struct _1a3b4ade8_FallSt;
struct _1a3b4b558_AssignLeft;
struct _1a3b4badb_AssignSt;
struct _1a3b4c9ee_Stmt;
struct _1a3b4d15e_ScopeTree;
struct _1a3b4d89b_ParamDecl;
struct _1a3b4eced_FnDecl;
struct _1a3b50ea8_VarDecl;
struct _1a3b51382_RetSt;
struct _1a3b51b02_Iter;
struct _1a3b5242c_WhileKind;
struct _1a3b52d34_RangeKind;
struct _1a3b5320d_BreakSt;
struct _1a3b535d7_ContSt;
struct _1a3b53a8d_If;
struct _1a3b53e67_Else;
struct _1a3b5441d_Conditional;
struct _1a3b54b5a_TypeAliasDecl;
struct _1a3b55111_Case;
struct _1a3b5592a_MatchCase;
struct _1a3b56244_UseDecl;
struct _1a3b566ea_EnumItemDecl;
struct _1a3b572ab_EnumDecl;
struct _1a3b57ad6_TypeEnumItemDecl;
struct _1a3b58246_TypeEnumDecl;
struct _1a3b58510_FieldDecl;
struct _1a3b58e06_StructDecl;
struct _1a3b59643_TraitDecl;
struct _1a3b59ca3_Impl;
struct _1a3b5b117_Field;
struct _1a3b5d12a_Operators;
struct _1a3b5e03d_Struct;
struct _1a3b6121b_FieldIns;
struct _1a3b61cbb_StructIns;
struct _1a3b65c26_OperandExprModel;
struct _1a3b66221_BinaryExprModel;
struct _1a3b665ea_UnaryExprModel;
struct _1a3b66b28_StructArgExprModel;
struct _1a3b66ebe_StructLitExprModel;
struct _1a3b672bb_AllocStructLitExprModel;
struct _1a3b6784e_CastingExprModel;
struct _1a3b68201_FnCallExprModel;
struct _1a3b685ca_SliceExprModel;
struct _1a3b68a81_IndexingExprModel;
struct _1a3b69037_AnonFnExprModel;
struct _1a3b69411_KeyValPairExprModel;
struct _1a3b698b7_MapExprModel;
struct _1a3b69e4a_SlicingExprModel;
struct _1a3b6a4cd_TraitSubIdentExprModel;
struct _1a3b6ad6e_StructSubIdentExprModel;
struct _1a3b6b215_StructStaticIdentExprModel;
struct _1a3b6b5de_ArrayExprModel;
struct _1a3b6b8db_TupleExprModel;
struct _1a3b6bcb5_BuiltinOutCallExprModel;
struct _1a3b6c18e_BuiltinOutlnCallExprModel;
struct _1a3b6c568_BuiltinNewCallExprModel;
struct _1a3b6c942_BuiltinPanicCallExprModel;
struct _1a3b6cde8_BuiltinAssertCallExprModel;
struct _1a3b6d39e_BuiltinMakeCallExprModel;
struct _1a3b6d778_BuiltinAppendCallExprModel;
struct _1a3b6da75_BuiltinLenCallExprModel;
struct _1a3b6dd72_BuiltinCapCallExprModel;
struct _1a3b6e24b_BuiltinDeleteCallExprModel;
struct _1a3b6e625_BuiltinCopyCallExprModel;
struct _1a3b6e9ee_BuiltinErrorCallExprModel;
struct _1a3b701a3_SizeofExprModel;
struct _1a3b70390_AlignofExprModel;
struct _1a3b70637_RuneExprModel;
struct _1a3b70934_IntegratedToStrExprModel;
struct _1a3b70d0d_BackendEmitExprModel;
struct _1a3b7110a_FreeExprModel;
struct _1a3b71d97_RetType;
struct _1a3b72628_Param;
struct _1a3b740ec_Fn;
struct _1a3b76055_ParamIns;
struct _1a3b770cd_FnIns;
struct _1a3b7a257_ReferenceStack;
struct _1a3b7b775_Pass;
struct _1a3b8122a_symbolBuilder;
struct _1a3b87a7d_Trait;
struct _1a3b8971c_EnumItem;
struct _1a3b8a289_Enum;
struct _1a3b8b3bc_TypeEnumItem;
struct _1a3b8b994_TypeEnum;
struct _1a3b8eb84_comptimeRange;
struct _1a3b90657_comptimeStructField;
struct _1a3b92318_comptimeStructFields;
struct _1a3b93913_comptimeStatic;
struct _1a3b955c4_comptimeStatics;
struct _1a3b96bbe_comptimeEnumField;
struct _1a3b98066_comptimeEnumFields;
struct _1a3b99661_comptimeParam;
struct _1a3b9b7ea_comptimeParams;
struct _1a3b9cdb2_comptimeTypeInfos;
struct _1a3b9e4ac_comptimeTypeInfo;
struct _1a3ba59be_comptimeValue;
struct _1a3ba831d_comptimeFiles;
struct _1a3ba9918_comptimeFile;
struct _1a3badd90_constraintChecker;
struct _1a3bb11e4_Impl;
struct _1a3bb664a_Scope;
struct _1a3bb6a68_If;
struct _1a3bb6d65_Else;
struct _1a3bb7283_Conditional;
struct _1a3bb7580_InfIter;
struct _1a3bb7a36_WhileIter;
struct _1a3bb8482_RangeIter;
struct _1a3bb8817_ContSt;
struct _1a3bb8be1_BreakSt;
struct _1a3bb8edd_Label;
struct _1a3bb93b7_GotoSt;
struct _1a3bb9791_Postfix;
struct _1a3bb9c47_Assign;
struct _1a3bba1ed_MultiAssign;
struct _1a3bba85d_Match;
struct _1a3bbb386_Case;
struct _1a3bbba7e_FallSt;
struct _1a3bbbe25_RetSt;
struct _1a3bbc585_scopeLabel;
struct _1a3bbcb18_scopeGoto;
struct _1a3bbdb08_scopeChecker;
struct _1a3bd2237_directiveChecker;
struct _1a3bd86d3_ImportInfo;
struct _1a3bdb609_Package;
struct _1a3c0802c_commonSemaMeta;
struct _1a3c08b54_Sema;
struct _1a3c2da7a_missingRetChecker;
struct _1a3c31c26_Var;
struct _1a3c32cb0_FuncPattern;
struct _1a3c714e6_typeCompatibilityChecker;
struct _1a3c73295_assignTypeChecker;
struct _1a3c74b6a_dynamicTypeAnnotation;
struct _1a3c799c7_fnCallArgChecker;
struct _1a3c7c90e_structLitChecker;
struct _1a3c7e6e1_rangeChecker;
struct _1a3c81e52_retTypeChecker;
struct _1a3c844b5_SymbolTable;
struct _1a3c8982d_Data;
struct _1a3c8a9a5_Value;
struct _1a3c8b555_Eval;
struct _1a3ca9c7c_unaryEval;
struct _1a3cabc18_binaryEval;
struct _1a3cb9341_InsGeneric;
struct _1a3cb9e35_TypeAlias;
struct _1a3cbac27_TypeKind;
struct _1a3cc2de9_TypeSymbol;
struct _1a3cc3801_Prim;
struct _1a3cc732c_Sptr;
struct _1a3cc7d00_Slc;
struct _1a3cc88e4_Tuple;
struct _1a3cc9494_Map;
struct _1a3cca121_Arr;
struct _1a3ccaae4_Ptr;
struct _1a3ccbae5_referencer;
struct _1a3cccad5_typeChecker;
struct _1a3cd578b_identTypeLookup;
struct _1a55a639b_FileInfo;
struct _1a55ec106_stmt;
struct _1a55ec997_scopeParser;
struct _1a560a3bc_exprBuilder;
struct _1a5617b27_assignInfo;
struct _1a561b026_parser;
struct _1a562d148_typeBuilder;
struct _1a414da49_CompileInfo;
struct _1a4150023_directiveEval;
struct _1a563227e_JuleImporter;
struct _1a5638c8b_ExprInspector;
struct _1a5644eea_OrderedDefines;
struct _1a512ebe4_liveTable;
struct _1a5130112_ObjectDeadCode;
struct _1a5133c5e_scopeDeadCode;
struct _1a51383e5_exprDeadCode;
struct _1a3e45049_ExceptionalForwardingExprModel;
struct _1a3e453bd_SwapExprModel;
struct _1a3e45797_EmptyCompareExprModel;
struct _1a3e45b1b_RefExprModel;
struct _1a3e4608e_StrCompExprModel;
struct _1a3e46622_MutSlicingExprModel;
struct _1a3e4691e_UnsafeBinaryExprModel;
struct _1a3e46ca4_UnsafeIndexingExprModel;
struct _1a3e4717d_PushToSliceExprModel;
struct _1a3e47557_AppendToSliceExprModel;
struct _1a3e47931_StrRuneIter;
struct _1a3e47c2d_UnsafeDerefExprModel;
struct _1a3e4802a_UnsafeCastingExprModel;
struct _1a3e48c0c_nilVar;
struct _1a3e4904d_nils;
struct _1a564679e_scopeOptimizer;
struct _1a564d29a_exprOptimizer;
struct _1a565368a_dynamicVar;
struct _1a56539cb_dynamic;
struct _1a565665a_data;
struct _1a5657c99_boundaryVar;
struct _1a56580da_boundary;
struct _1a51395e4_Optimizer;
struct _1a5160a38_AnsiEscape;
struct _1a51620ab_Logger;
struct _1a5da9ab1_AbsTime;
struct _1a5daa287_Time;
struct _1a5cd7dc9_scopeCoder;
struct _1a5ce3e07_exprCoder;
struct _1a5d058db_TestCoder;
struct _1a5d08867_identCoder;
struct _1a5db3d1d_SerializationInfo;
struct _1a5db423b_traitCast;
struct _1a5db4615_anonHash;
struct _1a5db5abc_ObjectCoder;
struct _1a5dc4944_customType;
struct _1a5dc557c_typeCoder;
struct _1a5dcd167_resultCoder;
struct _1aa98371d_Flag;
struct _1aa9872c1_Flag;
struct _1aa98a934_Flag;
struct _1aa98e0db_Flag;
struct _1aa99274e_Flag;
struct _1a61031d3_FlagSet;
struct _1a6105b97_argParser;
struct _2120c08d6_Cmd;
struct _1a5656160_dataCheckpoint;
struct _1a5634c54_IR;
struct _1e7a8015c_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

};
inline jule::Bool _1e7a8015c_Range16_eq(_1e7a8015c_Range16 *_self_, _1e7a8015c_Range16 _other_);


struct _1e7a8068a_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

};
inline jule::Bool _1e7a8068a_Range32_eq(_1e7a8068a_Range32 *_self_, _1e7a8068a_Range32 _other_);


struct _1e7a80b0d_RangeTable {
	jule::Slice<_1e7a8015c_Range16> _field_R16;
	jule::Slice<_1e7a8068a_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	

};
struct _1e7b83e0e_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

};
inline jule::Bool _1e7b83e0e_acceptRange_eq(_1e7b83e0e_acceptRange *_self_, _1e7b83e0e_acceptRange _other_);


struct _1e7be2632_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	

};
struct _1e7bed64e_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	

};
struct _212303e27_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_212307dd7_Status> _field_Stat;
	

};
inline jule::Bool _212303e27_DirEntry_eq(_212303e27_DirEntry *_self_, _212303e27_DirEntry _other_);


struct _2123041ad_Directory {
	

};
inline jule::Bool _2123041ad_Directory_eq(_2123041ad_Directory *_self_, _2123041ad_Directory _other_);


struct _212305ce7_File {
	jule::Uintptr _field_handle = 0;
	

};
inline jule::Bool _212305ce7_File_eq(_212305ce7_File *_self_, _212305ce7_File _other_);


struct _212307dd7_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

};
inline jule::Bool _212307dd7_Status_eq(_212307dd7_Status *_self_, _212307dd7_Status _other_);


struct _212124671_cmdAttrs {
	jule::I64 _field_pid = -1LL;
	

};
inline jule::Bool _212124671_cmdAttrs_eq(_212124671_cmdAttrs *_self_, _212124671_cmdAttrs _other_);


struct _1e7c94ecb_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

};
inline jule::Bool _1e7c94ecb_Log_eq(_1e7c94ecb_Log *_self_, _1e7c94ecb_Log _other_);


struct _1b57220b7_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

};
inline jule::Bool _1b57220b7_floatInfo_eq(_1b57220b7_floatInfo *_self_, _1b57220b7_floatInfo _other_);


struct _1b5722a68_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	

};
struct _1b5734bbd_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

};
inline jule::Bool _1b5734bbd_leftCheat_eq(_1b5734bbd_leftCheat *_self_, _1b5734bbd_leftCheat _other_);


struct _1b57356d5_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

};
inline jule::Bool _1b57356d5_decimal_eq(_1b57356d5_decimal *_self_, _1b57356d5_decimal _other_);


inline jule::Bool _1b574d753_Eq(_1b5747b9d_Const* _self_, _1b5747b9d_Const _26014_x);
inline jule::Bool _1b574da94_Lt(_1b5747b9d_Const* _self_, _1b5747b9d_Const _28714_x);
inline jule::Bool _1b574ddd5_LtEq(_1b5747b9d_Const* _self_, _1b5747b9d_Const _31016_x);
inline jule::Bool _1b574e226_Gt(_1b5747b9d_Const* _self_, _1b5747b9d_Const _33314_x);
inline jule::Bool _1b574e567_GtEq(_1b5747b9d_Const* _self_, _1b5747b9d_Const _35616_x);
struct _1b5747b9d_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

};
struct _1a3b27a62_Token {
	jule::Ptr<_1a3b2d2e8_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

};
inline jule::Bool _1a3b27a62_Token_eq(_1a3b27a62_Token *_self_, _1a3b27a62_Token _other_);


struct _1a3b2d2e8_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _field_Tokens;
	

};
struct _1a3b3044e_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U64 _field_id = 0LLU;
	

};
inline jule::Bool _1a3b3044e_kindPair_eq(_1a3b3044e_kindPair *_self_, _1a3b3044e_kindPair _other_);


struct _1a3b36433_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _field_tokens;
	jule::Ptr<_1a3b2d2e8_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_1e7c94ecb_Log> _field_errors;
	

};
struct _1a3b3b180_Ast {
	jule::Ptr<_1a3b2d2e8_File> _field_File;
	jule::Slice<jule::Ptr<_1a3b3c55a_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1a3b56244_UseDecl>> _field_UseDecls;
	jule::Slice<_1a3b3c13c_Node> _field_Nodes;
	

};
struct _1a3b3c13c_Node {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

};
inline jule::Bool _1a3b3c13c_Node_eq(_1a3b3c13c_Node *_self_, _1a3b3c13c_Node _other_);


struct _1a3b3c55a_Directive {
	jule::Ptr<_1a3b27a62_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _field_Args;
	

};
struct _1a3b3d13d_TypeDecl {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

};
inline jule::Bool _1a3b3d13d_TypeDecl_eq(_1a3b3d13d_TypeDecl *_self_, _1a3b3d13d_TypeDecl _other_);


struct _1a3b3d748_IdentTypeDecl {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> _field_Generics;
	

};
struct _1a3b3da12_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1a3b3d748_IdentTypeDecl>> _field_Idents;
	

};
struct _1a3b3dddb_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _field_Idents;
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Kind;
	

};
struct _1a3b3e1d8_SptrTypeDecl {
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1a3b3e1d8_SptrTypeDecl_eq(_1a3b3e1d8_SptrTypeDecl *_self_, _1a3b3e1d8_SptrTypeDecl _other_);


struct _1a3b3e56d_SlcTypeDecl {
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1a3b3e56d_SlcTypeDecl_eq(_1a3b3e56d_SlcTypeDecl *_self_, _1a3b3e56d_SlcTypeDecl _other_);


struct _1a3b3e86a_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> _field_Types;
	

};
struct _1a3b3eb67_PtrTypeDecl {
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1a3b3eb67_PtrTypeDecl_eq(_1a3b3eb67_PtrTypeDecl *_self_, _1a3b3eb67_PtrTypeDecl _other_);


struct _1a3b40409_ArrTypeDecl {
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Elem;
	jule::Ptr<_1a3b42472_Expr> _field_Size;
	

};
inline jule::Bool _1a3b40409_ArrTypeDecl_eq(_1a3b40409_ArrTypeDecl *_self_, _1a3b40409_ArrTypeDecl _other_);


struct _1a3b40b57_MapTypeDecl {
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Key;
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Val;
	

};
inline jule::Bool _1a3b40b57_MapTypeDecl_eq(_1a3b40b57_MapTypeDecl *_self_, _1a3b40b57_MapTypeDecl _other_);


struct _1a3b41031_RetTypeDecl {
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _field_Idents;
	

};
struct _1a3b42472_Expr {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b27a62_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

};
inline jule::Bool _1a3b42472_Expr_eq(_1a3b42472_Expr *_self_, _1a3b42472_Expr _other_);


struct _1a3b4273b_RangeExpr {
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	

};
inline jule::Bool _1a3b4273b_RangeExpr_eq(_1a3b4273b_RangeExpr *_self_, _1a3b4273b_RangeExpr _other_);


struct _1a3b42d46_UseExpr {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	

};
inline jule::Bool _1a3b42d46_UseExpr_eq(_1a3b42d46_UseExpr *_self_, _1a3b42d46_UseExpr _other_);


struct _1a3b43066_TupleExpr {
	jule::Slice<jule::Ptr<_1a3b42472_Expr>> _field_Expr;
	

};
struct _1a3b4340c_LitExpr {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_Value;
	

};
inline jule::Bool _1a3b4340c_LitExpr_eq(_1a3b4340c_LitExpr *_self_, _1a3b4340c_LitExpr _other_);


struct _1a3b437d6_UnsafeExpr {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	

};
inline jule::Bool _1a3b437d6_UnsafeExpr_eq(_1a3b437d6_UnsafeExpr *_self_, _1a3b437d6_UnsafeExpr _other_);


struct _1a3b43c8c_IdentExpr {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

};
inline jule::Bool _1a3b43c8c_IdentExpr_eq(_1a3b43c8c_IdentExpr *_self_, _1a3b43c8c_IdentExpr _other_);


struct _1a3b4452e_UnaryExpr {
	jule::Ptr<_1a3b27a62_Token> _field_Op;
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	

};
inline jule::Bool _1a3b4452e_UnaryExpr_eq(_1a3b4452e_UnaryExpr *_self_, _1a3b4452e_UnaryExpr _other_);


struct _1a3b44908_VariadicExpr {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	

};
inline jule::Bool _1a3b44908_VariadicExpr_eq(_1a3b44908_VariadicExpr *_self_, _1a3b44908_VariadicExpr _other_);


struct _1a3b44cd2_CastExpr {
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Kind;
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	

};
inline jule::Bool _1a3b44cd2_CastExpr_eq(_1a3b44cd2_CastExpr *_self_, _1a3b44cd2_CastExpr _other_);


struct _1a3b451ab_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _field_Ns;
	jule::Ptr<_1a3b27a62_Token> _field_Ident;
	

};
struct _1a3b45585_SubIdentExpr {
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	jule::Ptr<_1a3b27a62_Token> _field_Ident;
	

};
inline jule::Bool _1a3b45585_SubIdentExpr_eq(_1a3b45585_SubIdentExpr *_self_, _1a3b45585_SubIdentExpr _other_);


struct _1a3b45a3b_BinaryExpr {
	jule::Ptr<_1a3b42472_Expr> _field_Left;
	jule::Ptr<_1a3b42472_Expr> _field_Right;
	jule::Ptr<_1a3b27a62_Token> _field_Op;
	

};
inline jule::Bool _1a3b45a3b_BinaryExpr_eq(_1a3b45a3b_BinaryExpr *_self_, _1a3b45a3b_BinaryExpr _other_);


struct _1a3b4619b_FnCallExpr {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a3b42472_Expr>> _field_Args;
	jule::Ptr<_1a3b4d15e_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	

};
struct _1a3b46b91_FieldExprPair {
	jule::Ptr<_1a3b27a62_Token> _field_Field;
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	

};
inline jule::Bool _1a3b46b91_FieldExprPair_eq(_1a3b46b91_FieldExprPair *_self_, _1a3b46b91_FieldExprPair _other_);


struct _1a3b474bb_StructLit {
	jule::Ptr<_1a3b27a62_Token> _field_End;
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a3b42472_Expr>> _field_Exprs;
	

};
struct _1a3b47972_BraceLit {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b27a62_Token> _field_End;
	jule::Slice<jule::Ptr<_1a3b42472_Expr>> _field_Exprs;
	

};
struct _1a3b4829c_KeyValPair {
	jule::Ptr<_1a3b42472_Expr> _field_Key;
	jule::Ptr<_1a3b42472_Expr> _field_Val;
	jule::Ptr<_1a3b27a62_Token> _field_Colon;
	

};
inline jule::Bool _1a3b4829c_KeyValPair_eq(_1a3b4829c_KeyValPair *_self_, _1a3b4829c_KeyValPair _other_);


struct _1a3b489c8_SliceExpr {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b27a62_Token> _field_End;
	jule::Slice<jule::Ptr<_1a3b42472_Expr>> _field_Exprs;
	

};
struct _1a3b49435_IndexingExpr {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b27a62_Token> _field_End;
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	jule::Ptr<_1a3b42472_Expr> _field_Index;
	

};
inline jule::Bool _1a3b49435_IndexingExpr_eq(_1a3b49435_IndexingExpr *_self_, _1a3b49435_IndexingExpr _other_);


struct _1a3b49a95_SlicingExpr {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b27a62_Token> _field_End;
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	jule::Ptr<_1a3b42472_Expr> _field_Start;
	jule::Ptr<_1a3b42472_Expr> _field_To;
	

};
inline jule::Bool _1a3b49a95_SlicingExpr_eq(_1a3b49a95_SlicingExpr *_self_, _1a3b49a95_SlicingExpr _other_);


struct _1a3b49d92_Constraint {
	jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> _field_Mask;
	

};
struct _1a3b4a348_GenericDecl {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a3b49d92_Constraint> _field_Constraint;
	

};
inline jule::Bool _1a3b4a348_GenericDecl_eq(_1a3b4a348_GenericDecl *_self_, _1a3b4a348_GenericDecl _other_);


struct _1a3b4a722_LabelSt {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1a3b4a722_LabelSt_eq(_1a3b4a722_LabelSt *_self_, _1a3b4a722_LabelSt _other_);


struct _1a3b4aaeb_GotoSt {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b27a62_Token> _field_Label;
	

};
inline jule::Bool _1a3b4aaeb_GotoSt_eq(_1a3b4aaeb_GotoSt *_self_, _1a3b4aaeb_GotoSt _other_);


struct _1a3b4ade8_FallSt {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	

};
inline jule::Bool _1a3b4ade8_FallSt_eq(_1a3b4ade8_FallSt *_self_, _1a3b4ade8_FallSt _other_);


struct _1a3b4b558_AssignLeft {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	

};
inline jule::Bool _1a3b4b558_AssignLeft_eq(_1a3b4b558_AssignLeft *_self_, _1a3b4b558_AssignLeft _other_);


struct _1a3b4badb_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1a3b27a62_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1a3b4b558_AssignLeft>> _field_Left;
	jule::Ptr<_1a3b42472_Expr> _field_Right;
	

};
struct _1a3b4c9ee_Stmt {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

};
inline jule::Bool _1a3b4c9ee_Stmt_eq(_1a3b4c9ee_Stmt *_self_, _1a3b4c9ee_Stmt _other_);


struct _1a3b4d15e_ScopeTree {
	jule::Ptr<_1a3b4d15e_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1a3b4c9ee_Stmt> _field_Stmts;
	jule::Ptr<_1a3b27a62_Token> _field_End;
	

};
struct _1a3b4d89b_ParamDecl {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1a3b4d89b_ParamDecl_eq(_1a3b4d89b_ParamDecl *_self_, _1a3b4d89b_ParamDecl _other_);


struct _1a3b4eced_FnDecl {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a3b3c55a_Directive>> _field_Directives;
	jule::Ptr<_1a3b4d15e_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>> _field_Generics;
	jule::Ptr<_1a3b41031_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1a3b4d89b_ParamDecl>> _field_Params;
	

};
struct _1a3b50ea8_VarDecl {
	jule::Ptr<_1a3b4d15e_ScopeTree> _field_Scope;
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b27a62_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1a3b3c55a_Directive>> _field_Directives;
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Kind;
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	

};
struct _1a3b51382_RetSt {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	

};
inline jule::Bool _1a3b51382_RetSt_eq(_1a3b51382_RetSt *_self_, _1a3b51382_RetSt _other_);


struct _1a3b51b02_Iter {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1a3b4d15e_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1a3b51b02_Iter_eq(_1a3b51b02_Iter *_self_, _1a3b51b02_Iter _other_);


struct _1a3b5242c_WhileKind {
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1a3b27a62_Token> _field_NextToken;
	

};
inline jule::Bool _1a3b5242c_WhileKind_eq(_1a3b5242c_WhileKind *_self_, _1a3b5242c_WhileKind _other_);


struct _1a3b52d34_RangeKind {
	jule::Ptr<_1a3b27a62_Token> _field_InToken;
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	jule::Ptr<_1a3b50ea8_VarDecl> _field_KeyA;
	jule::Ptr<_1a3b50ea8_VarDecl> _field_KeyB;
	

};
inline jule::Bool _1a3b52d34_RangeKind_eq(_1a3b52d34_RangeKind *_self_, _1a3b52d34_RangeKind _other_);


struct _1a3b5320d_BreakSt {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b27a62_Token> _field_Label;
	

};
inline jule::Bool _1a3b5320d_BreakSt_eq(_1a3b5320d_BreakSt *_self_, _1a3b5320d_BreakSt _other_);


struct _1a3b535d7_ContSt {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b27a62_Token> _field_Label;
	

};
inline jule::Bool _1a3b535d7_ContSt_eq(_1a3b535d7_ContSt *_self_, _1a3b535d7_ContSt _other_);


struct _1a3b53a8d_If {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	jule::Ptr<_1a3b4d15e_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1a3b53a8d_If_eq(_1a3b53a8d_If *_self_, _1a3b53a8d_If _other_);


struct _1a3b53e67_Else {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b4d15e_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1a3b53e67_Else_eq(_1a3b53e67_Else *_self_, _1a3b53e67_Else _other_);


struct _1a3b5441d_Conditional {
	jule::Ptr<_1a3b53a8d_If> _field_Head;
	jule::Slice<jule::Ptr<_1a3b53a8d_If>> _field_Tail;
	jule::Ptr<_1a3b53e67_Else> _field_Default;
	

};
struct _1a3b54b5a_TypeAliasDecl {
	jule::Ptr<_1a3b4d15e_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1a3b54b5a_TypeAliasDecl_eq(_1a3b54b5a_TypeAliasDecl *_self_, _1a3b54b5a_TypeAliasDecl _other_);


struct _1a3b55111_Case {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b4d15e_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a3b42472_Expr>> _field_Exprs;
	

};
struct _1a3b5592a_MatchCase {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b27a62_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a3b55111_Case>> _field_Cases;
	jule::Ptr<_1a3b53e67_Else> _field_Default;
	

};
struct _1a3b56244_UseDecl {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	

};
struct _1a3b566ea_EnumItemDecl {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	

};
inline jule::Bool _1a3b566ea_EnumItemDecl_eq(_1a3b566ea_EnumItemDecl *_self_, _1a3b566ea_EnumItemDecl _other_);


struct _1a3b572ab_EnumDecl {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a3b566ea_EnumItemDecl>> _field_Items;
	jule::Ptr<_1a3b27a62_Token> _field_End;
	

};
struct _1a3b57ad6_TypeEnumItemDecl {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1a3b57ad6_TypeEnumItemDecl_eq(_1a3b57ad6_TypeEnumItemDecl *_self_, _1a3b57ad6_TypeEnumItemDecl _other_);


struct _1a3b58246_TypeEnumDecl {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a3b57ad6_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1a3b27a62_Token> _field_End;
	

};
struct _1a3b58510_FieldDecl {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Kind;
	jule::Ptr<_1a3b42472_Expr> _field_Default;
	

};
inline jule::Bool _1a3b58510_FieldDecl_eq(_1a3b58510_FieldDecl *_self_, _1a3b58510_FieldDecl _other_);


struct _1a3b58e06_StructDecl {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b27a62_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a3b58510_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a3b3c55a_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>> _field_Generics;
	

};
struct _1a3b59643_TraitDecl {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b27a62_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a3b4eced_FnDecl>> _field_Methods;
	

};
struct _1a3b59ca3_Impl {
	jule::Ptr<_1a3b27a62_Token> _field_End;
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Base;
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a3b4eced_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1a3b50ea8_VarDecl>> _field_Statics;
	

};
struct _1a3b5b117_Field {
	jule::Ptr<_1a3b5e03d_Struct> _field_Owner;
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a3cc2de9_TypeSymbol> _field_Kind;
	jule::Ptr<_1a3b42472_Expr> _field_Default;
	

};
inline jule::Bool _1a3b5b117_Field_eq(_1a3b5b117_Field *_self_, _1a3b5b117_Field _other_);


struct _1a3b5d12a_Operators {
	jule::Ptr<_1a3b770cd_FnIns> _field_Eq;
	jule::Ptr<_1a3b770cd_FnIns> _field_Gt;
	jule::Ptr<_1a3b770cd_FnIns> _field_GtEq;
	jule::Ptr<_1a3b770cd_FnIns> _field_Lt;
	jule::Ptr<_1a3b770cd_FnIns> _field_LtEq;
	jule::Ptr<_1a3b770cd_FnIns> _field_Shl;
	jule::Ptr<_1a3b770cd_FnIns> _field_Shr;
	jule::Ptr<_1a3b770cd_FnIns> _field_Add;
	jule::Ptr<_1a3b770cd_FnIns> _field_Sub;
	jule::Ptr<_1a3b770cd_FnIns> _field_Div;
	jule::Ptr<_1a3b770cd_FnIns> _field_Mul;
	jule::Ptr<_1a3b770cd_FnIns> _field_Mod;
	jule::Ptr<_1a3b770cd_FnIns> _field_BitAnd;
	jule::Ptr<_1a3b770cd_FnIns> _field_BitOr;
	jule::Ptr<_1a3b770cd_FnIns> _field_BitXor;
	jule::Ptr<_1a3b770cd_FnIns> _field_Neg;
	jule::Ptr<_1a3b770cd_FnIns> _field_Pos;
	jule::Ptr<_1a3b770cd_FnIns> _field_BitNot;
	jule::Ptr<_1a3b770cd_FnIns> _field_AddAssign;
	jule::Ptr<_1a3b770cd_FnIns> _field_SubAssign;
	jule::Ptr<_1a3b770cd_FnIns> _field_DivAssign;
	jule::Ptr<_1a3b770cd_FnIns> _field_MulAssign;
	jule::Ptr<_1a3b770cd_FnIns> _field_ModAssign;
	jule::Ptr<_1a3b770cd_FnIns> _field_ShlAssign;
	jule::Ptr<_1a3b770cd_FnIns> _field_ShrAssign;
	jule::Ptr<_1a3b770cd_FnIns> _field_BitOrAssign;
	jule::Ptr<_1a3b770cd_FnIns> _field_BitAndAssign;
	jule::Ptr<_1a3b770cd_FnIns> _field_BitXorAssign;
	

};
inline jule::Bool _1a3b5d12a_Operators_eq(_1a3b5d12a_Operators *_self_, _1a3b5d12a_Operators _other_);


struct _1a3b5e03d_Struct {
	jule::Ptr<_1a3c08b54_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1a3b5e03d_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1a3b5e03d_Struct>> _field_Uses;
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a3b5b117_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1a3b740ec_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a3c31c26_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a3b3c55a_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1a3b87a7d_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1a3b61cbb_StructIns>> _field_Instances;
	

};
struct _1a3b6121b_FieldIns {
	jule::Ptr<_1a3b5b117_Field> _field_Decl;
	jule::Ptr<_1a3cbac27_TypeKind> _field_Kind;
	jule::Ptr<_1a3c8982d_Data> _field_Default;
	

};
inline jule::Bool _1a3b6121b_FieldIns_eq(_1a3b6121b_FieldIns *_self_, _1a3b6121b_FieldIns _other_);


struct _1a3b61cbb_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1a3b5e03d_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1a3cb9341_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a3b6121b_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1a3c31c26_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1a3b740ec_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1a3b7a257_ReferenceStack> _field_Refers;
	_1a3b5d12a_Operators _field_Operators;
	

};
struct _1a3b65c26_OperandExprModel {
	jule::Ptr<_1a3cbac27_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

};
inline jule::Bool _1a3b65c26_OperandExprModel_eq(_1a3b65c26_OperandExprModel *_self_, _1a3b65c26_OperandExprModel _other_);


struct _1a3b66221_BinaryExprModel {
	jule::Ptr<_1a3b65c26_OperandExprModel> _field_Left;
	jule::Ptr<_1a3b65c26_OperandExprModel> _field_Right;
	jule::Ptr<_1a3b27a62_Token> _field_Op;
	

};
inline jule::Bool _1a3b66221_BinaryExprModel_eq(_1a3b66221_BinaryExprModel *_self_, _1a3b66221_BinaryExprModel _other_);


struct _1a3b665ea_UnaryExprModel {
	jule::Ptr<_1a3c8982d_Data> _field_Expr;
	jule::Ptr<_1a3b27a62_Token> _field_Op;
	

};
inline jule::Bool _1a3b665ea_UnaryExprModel_eq(_1a3b665ea_UnaryExprModel *_self_, _1a3b665ea_UnaryExprModel _other_);


struct _1a3b66b28_StructArgExprModel {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b6121b_FieldIns> _field_Field;
	jule::Ptr<_1a3c8982d_Data> _field_Expr;
	

};
inline jule::Bool _1a3b66b28_StructArgExprModel_eq(_1a3b66b28_StructArgExprModel *_self_, _1a3b66b28_StructArgExprModel _other_);


struct _1a3b66ebe_StructLitExprModel {
	jule::Ptr<_1a3b61cbb_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1a3b66b28_StructArgExprModel>> _field_Args;
	

};
struct _1a3b672bb_AllocStructLitExprModel {
	jule::Ptr<_1a3b66ebe_StructLitExprModel> _field_Lit;
	

};
inline jule::Bool _1a3b672bb_AllocStructLitExprModel_eq(_1a3b672bb_AllocStructLitExprModel *_self_, _1a3b672bb_AllocStructLitExprModel _other_);


struct _1a3b6784e_CastingExprModel {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3c8982d_Data> _field_Expr;
	jule::Ptr<_1a3cbac27_TypeKind> _field_Kind;
	jule::Ptr<_1a3cbac27_TypeKind> _field_ExprKind;
	

};
inline jule::Bool _1a3b6784e_CastingExprModel_eq(_1a3b6784e_CastingExprModel *_self_, _1a3b6784e_CastingExprModel _other_);


struct _1a3b68201_FnCallExprModel {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3b770cd_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1a3bb664a_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	

};
struct _1a3b685ca_SliceExprModel {
	jule::Ptr<_1a3cbac27_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1a3b68a81_IndexingExprModel {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3c8982d_Data> _field_Expr;
	jule::Ptr<_1a3c8982d_Data> _field_Index;
	

};
inline jule::Bool _1a3b68a81_IndexingExprModel_eq(_1a3b68a81_IndexingExprModel *_self_, _1a3b68a81_IndexingExprModel _other_);


struct _1a3b69037_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1a3c31c26_Var>> _field_Captured;
	jule::Ptr<_1a3b770cd_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

};
struct _1a3b69411_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

};
inline jule::Bool _1a3b69411_KeyValPairExprModel_eq(_1a3b69411_KeyValPairExprModel *_self_, _1a3b69411_KeyValPairExprModel _other_);


struct _1a3b698b7_MapExprModel {
	jule::Ptr<_1a3cbac27_TypeKind> _field_KeyKind;
	jule::Ptr<_1a3cbac27_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1a3b69411_KeyValPairExprModel>> _field_Entries;
	

};
struct _1a3b69e4a_SlicingExprModel {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

};
inline jule::Bool _1a3b69e4a_SlicingExprModel_eq(_1a3b69e4a_SlicingExprModel *_self_, _1a3b69e4a_SlicingExprModel _other_);


struct _1a3b6a4cd_TraitSubIdentExprModel {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a3b740ec_Fn> _field_Method;
	jule::Ptr<_1a3b87a7d_Trait> _field_Trt;
	

};
inline jule::Bool _1a3b6a4cd_TraitSubIdentExprModel_eq(_1a3b6a4cd_TraitSubIdentExprModel *_self_, _1a3b6a4cd_TraitSubIdentExprModel _other_);


struct _1a3b6ad6e_StructSubIdentExprModel {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Ptr<_1a3c8982d_Data> _field_Expr;
	jule::Ptr<_1a3b770cd_FnIns> _field_Method;
	jule::Ptr<_1a3b6121b_FieldIns> _field_Field;
	jule::Ptr<_1a3b61cbb_StructIns> _field_Owner;
	

};
inline jule::Bool _1a3b6ad6e_StructSubIdentExprModel_eq(_1a3b6ad6e_StructSubIdentExprModel *_self_, _1a3b6ad6e_StructSubIdentExprModel _other_);


struct _1a3b6b215_StructStaticIdentExprModel {
	jule::Ptr<_1a3b61cbb_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a3b770cd_FnIns> _field_Method;
	

};
inline jule::Bool _1a3b6b215_StructStaticIdentExprModel_eq(_1a3b6b215_StructStaticIdentExprModel *_self_, _1a3b6b215_StructStaticIdentExprModel _other_);


struct _1a3b6b5de_ArrayExprModel {
	jule::Ptr<_1a3cca121_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1a3b6b8db_TupleExprModel {
	jule::Slice<jule::Ptr<_1a3c8982d_Data>> _field_Datas;
	

};
struct _1a3b6bcb5_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

};
inline jule::Bool _1a3b6bcb5_BuiltinOutCallExprModel_eq(_1a3b6bcb5_BuiltinOutCallExprModel *_self_, _1a3b6bcb5_BuiltinOutCallExprModel _other_);


struct _1a3b6c18e_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

};
inline jule::Bool _1a3b6c18e_BuiltinOutlnCallExprModel_eq(_1a3b6c18e_BuiltinOutlnCallExprModel *_self_, _1a3b6c18e_BuiltinOutlnCallExprModel _other_);


struct _1a3b6c568_BuiltinNewCallExprModel {
	jule::Ptr<_1a3cbac27_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

};
inline jule::Bool _1a3b6c568_BuiltinNewCallExprModel_eq(_1a3b6c568_BuiltinNewCallExprModel *_self_, _1a3b6c568_BuiltinNewCallExprModel _other_);


struct _1a3b6c942_BuiltinPanicCallExprModel {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

};
inline jule::Bool _1a3b6c942_BuiltinPanicCallExprModel_eq(_1a3b6c942_BuiltinPanicCallExprModel *_self_, _1a3b6c942_BuiltinPanicCallExprModel _other_);


struct _1a3b6cde8_BuiltinAssertCallExprModel {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

};
inline jule::Bool _1a3b6cde8_BuiltinAssertCallExprModel_eq(_1a3b6cde8_BuiltinAssertCallExprModel *_self_, _1a3b6cde8_BuiltinAssertCallExprModel _other_);


struct _1a3b6d39e_BuiltinMakeCallExprModel {
	jule::Ptr<_1a3cbac27_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

};
inline jule::Bool _1a3b6d39e_BuiltinMakeCallExprModel_eq(_1a3b6d39e_BuiltinMakeCallExprModel *_self_, _1a3b6d39e_BuiltinMakeCallExprModel _other_);


struct _1a3b6d778_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

};
inline jule::Bool _1a3b6d778_BuiltinAppendCallExprModel_eq(_1a3b6d778_BuiltinAppendCallExprModel *_self_, _1a3b6d778_BuiltinAppendCallExprModel _other_);


struct _1a3b6da75_BuiltinLenCallExprModel {
	jule::Ptr<_1a3c8982d_Data> _field_Expr;
	

};
inline jule::Bool _1a3b6da75_BuiltinLenCallExprModel_eq(_1a3b6da75_BuiltinLenCallExprModel *_self_, _1a3b6da75_BuiltinLenCallExprModel _other_);


struct _1a3b6dd72_BuiltinCapCallExprModel {
	jule::Ptr<_1a3c8982d_Data> _field_Expr;
	

};
inline jule::Bool _1a3b6dd72_BuiltinCapCallExprModel_eq(_1a3b6dd72_BuiltinCapCallExprModel *_self_, _1a3b6dd72_BuiltinCapCallExprModel _other_);


struct _1a3b6e24b_BuiltinDeleteCallExprModel {
	jule::Ptr<_1a3c8982d_Data> _field_Dest;
	jule::Ptr<_1a3c8982d_Data> _field_Key;
	

};
inline jule::Bool _1a3b6e24b_BuiltinDeleteCallExprModel_eq(_1a3b6e24b_BuiltinDeleteCallExprModel *_self_, _1a3b6e24b_BuiltinDeleteCallExprModel _other_);


struct _1a3b6e625_BuiltinCopyCallExprModel {
	jule::Ptr<_1a3c8982d_Data> _field_Dest;
	jule::Ptr<_1a3c8982d_Data> _field_Src;
	

};
inline jule::Bool _1a3b6e625_BuiltinCopyCallExprModel_eq(_1a3b6e625_BuiltinCopyCallExprModel *_self_, _1a3b6e625_BuiltinCopyCallExprModel _other_);


struct _1a3b6e9ee_BuiltinErrorCallExprModel {
	jule::Ptr<_1a3b770cd_FnIns> _field_Func;
	jule::Ptr<_1a3c8982d_Data> _field_Err;
	

};
inline jule::Bool _1a3b6e9ee_BuiltinErrorCallExprModel_eq(_1a3b6e9ee_BuiltinErrorCallExprModel *_self_, _1a3b6e9ee_BuiltinErrorCallExprModel _other_);


struct _1a3b701a3_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

};
inline jule::Bool _1a3b701a3_SizeofExprModel_eq(_1a3b701a3_SizeofExprModel *_self_, _1a3b701a3_SizeofExprModel _other_);


struct _1a3b70390_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

};
inline jule::Bool _1a3b70390_AlignofExprModel_eq(_1a3b70390_AlignofExprModel *_self_, _1a3b70390_AlignofExprModel _other_);


struct _1a3b70637_RuneExprModel {
	jule::I32 _field_Code = 0;
	

};
inline jule::Bool _1a3b70637_RuneExprModel_eq(_1a3b70637_RuneExprModel *_self_, _1a3b70637_RuneExprModel _other_);


struct _1a3b70934_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

};
inline jule::Bool _1a3b70934_IntegratedToStrExprModel_eq(_1a3b70934_IntegratedToStrExprModel *_self_, _1a3b70934_IntegratedToStrExprModel _other_);


struct _1a3b70d0d_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

};
struct _1a3b7110a_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

};
inline jule::Bool _1a3b7110a_FreeExprModel_eq(_1a3b7110a_FreeExprModel *_self_, _1a3b7110a_FreeExprModel _other_);


struct _1a3b71d97_RetType {
	jule::Ptr<_1a3cc2de9_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _field_Idents;
	

};
struct _1a3b72628_Param {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a3cc2de9_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1a3b72628_Param_eq(_1a3b72628_Param *_self_, _1a3b72628_Param _other_);


struct _1a3b740ec_Fn {
	jule::Ptr<_1a3c08b54_Sema> _field_sema;
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a3b3c55a_Directive>> _field_Directives;
	jule::Ptr<_1a3b4d15e_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>> _field_Generics;
	jule::Ptr<_1a3b71d97_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1a3b72628_Param>> _field_Params;
	jule::Ptr<_1a3b5e03d_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1a3b770cd_FnIns>> _field_Instances;
	

};
struct _1a3b76055_ParamIns {
	jule::Ptr<_1a3b72628_Param> _field_Decl;
	jule::Ptr<_1a3cbac27_TypeKind> _field_Kind;
	

};
inline jule::Bool _1a3b76055_ParamIns_eq(_1a3b76055_ParamIns *_self_, _1a3b76055_ParamIns _other_);


struct _1a3b770cd_FnIns {
	jule::Ptr<_1a3b61cbb_StructIns> _field_Owner;
	jule::Ptr<_1a3b740ec_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1a3cb9341_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a3b76055_ParamIns>> _field_Params;
	jule::Ptr<_1a3cbac27_TypeKind> _field_Result;
	jule::Ptr<_1a3bb664a_Scope> _field_Scope;
	jule::Ptr<_1a3b7a257_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Bool _field_AsAnon = false;
	jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*> _field_caller;
	jule::Bool _field_reloaded = false;
	

};
struct _1a3b7a257_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

};
struct _1a3b7b775_Pass {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_Text;
	

};
inline jule::Bool _1a3b7b775_Pass_eq(_1a3b7b775_Pass *_self_, _1a3b7b775_Pass _other_);


struct _1a3b8122a_symbolBuilder {
	jule::Ptr<_1a3b8122a_symbolBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_1e7c94ecb_Log> _field_errors;
	jule::Ptr<_1a3b3b180_Ast> _field_ast;
	jule::Ptr<_1a3c844b5_SymbolTable> _field_table;
	

};
struct _1a3b87a7d_Trait {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1a3cc2de9_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a3b740ec_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a3b5e03d_Struct>> _field_Implemented;
	

};
struct _1a3b8971c_EnumItem {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a3c8a9a5_Value> _field_Value;
	

};
inline jule::Bool _1a3b8971c_EnumItem_eq(_1a3b8971c_EnumItem *_self_, _1a3b8971c_EnumItem _other_);


struct _1a3b8a289_Enum {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a3cc2de9_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1a3b8971c_EnumItem>> _field_Items;
	

};
struct _1a3b8b3bc_TypeEnumItem {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a3cc2de9_TypeSymbol> _field_Kind;
	

};
inline jule::Bool _1a3b8b3bc_TypeEnumItem_eq(_1a3b8b3bc_TypeEnumItem *_self_, _1a3b8b3bc_TypeEnumItem _other_);


struct _1a3b8b994_TypeEnum {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a3b8b3bc_TypeEnumItem>> _field_Items;
	

};
struct _1a3b8eb84_comptimeRange {
	jule::Trait _field_kind;
	

};
inline jule::Bool _1a3b8eb84_comptimeRange_eq(_1a3b8eb84_comptimeRange *_self_, _1a3b8eb84_comptimeRange _other_);


struct _1a3b90657_comptimeStructField {
	jule::Ptr<_1a3b6121b_FieldIns> _field_field;
	

};
inline jule::Bool _1a3b90657_comptimeStructField_eq(_1a3b90657_comptimeStructField *_self_, _1a3b90657_comptimeStructField _other_);


struct _1a3b92318_comptimeStructFields {
	jule::Slice<jule::Ptr<_1a3b6121b_FieldIns>> _field_fields;
	

};
struct _1a3b93913_comptimeStatic {
	jule::Ptr<_1a3c31c26_Var> _field_field;
	

};
inline jule::Bool _1a3b93913_comptimeStatic_eq(_1a3b93913_comptimeStatic *_self_, _1a3b93913_comptimeStatic _other_);


struct _1a3b955c4_comptimeStatics {
	jule::Slice<jule::Ptr<_1a3c31c26_Var>> _field_fields;
	

};
struct _1a3b96bbe_comptimeEnumField {
	jule::Ptr<_1a3b8971c_EnumItem> _field_field;
	

};
inline jule::Bool _1a3b96bbe_comptimeEnumField_eq(_1a3b96bbe_comptimeEnumField *_self_, _1a3b96bbe_comptimeEnumField _other_);


struct _1a3b98066_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1a3b8971c_EnumItem>> _field_fields;
	

};
struct _1a3b99661_comptimeParam {
	jule::Ptr<_1a3b76055_ParamIns> _field_param;
	

};
inline jule::Bool _1a3b99661_comptimeParam_eq(_1a3b99661_comptimeParam *_self_, _1a3b99661_comptimeParam _other_);


struct _1a3b9b7ea_comptimeParams {
	jule::Slice<jule::Ptr<_1a3b76055_ParamIns>> _field_params;
	

};
struct _1a3b9cdb2_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1a3b9e4ac_comptimeTypeInfo>> _field_types;
	

};
struct _1a3b9e4ac_comptimeTypeInfo {
	jule::Ptr<_1a3cbac27_TypeKind> _field_base;
	

};
inline jule::Bool _1a3b9e4ac_comptimeTypeInfo_eq(_1a3b9e4ac_comptimeTypeInfo *_self_, _1a3b9e4ac_comptimeTypeInfo _other_);


struct _1a3ba59be_comptimeValue {
	jule::Ptr<_1a3c8982d_Data> _field_data;
	

};
inline jule::Bool _1a3ba59be_comptimeValue_eq(_1a3ba59be_comptimeValue *_self_, _1a3ba59be_comptimeValue _other_);


struct _1a3ba831d_comptimeFiles {
	jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>> _field_files;
	

};
struct _1a3ba9918_comptimeFile {
	jule::Ptr<_1a3c844b5_SymbolTable> _field_file;
	

};
inline jule::Bool _1a3ba9918_comptimeFile_eq(_1a3ba9918_comptimeFile *_self_, _1a3ba9918_comptimeFile _other_);


struct _1a3badd90_constraintChecker {
	jule::Ptr<_1a3c08b54_Sema> _field_s;
	jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1a3cb9341_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> _field_genericsA;
	jule::Ptr<_1a3b770cd_FnIns> _field_fi;
	jule::Ptr<_1a3b61cbb_StructIns> _field_si;
	jule::Ptr<_1a3b27a62_Token> _field_et;
	jule::Bool _field_uniq = false;
	

};
struct _1a3bb11e4_Impl {
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Base;
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a3b740ec_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a3c31c26_Var>> _field_Statics;
	

};
struct _1a3bb664a_Scope {
	jule::Ptr<_1a3bb664a_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	

};
struct _1a3bb6a68_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a3bb664a_Scope> _field_Scope;
	

};
inline jule::Bool _1a3bb6a68_If_eq(_1a3bb6a68_If *_self_, _1a3bb6a68_If _other_);


struct _1a3bb6d65_Else {
	jule::Ptr<_1a3bb664a_Scope> _field_Scope;
	

};
inline jule::Bool _1a3bb6d65_Else_eq(_1a3bb6d65_Else *_self_, _1a3bb6d65_Else _other_);


struct _1a3bb7283_Conditional {
	jule::Slice<jule::Ptr<_1a3bb6a68_If>> _field_Elifs;
	jule::Ptr<_1a3bb6d65_Else> _field_Default;
	

};
struct _1a3bb7580_InfIter {
	jule::Ptr<_1a3bb664a_Scope> _field_Scope;
	

};
inline jule::Bool _1a3bb7580_InfIter_eq(_1a3bb7580_InfIter *_self_, _1a3bb7580_InfIter _other_);


struct _1a3bb7a36_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1a3bb664a_Scope> _field_Scope;
	

};
inline jule::Bool _1a3bb7a36_WhileIter_eq(_1a3bb7a36_WhileIter *_self_, _1a3bb7a36_WhileIter _other_);


struct _1a3bb8482_RangeIter {
	jule::Ptr<_1a3c8982d_Data> _field_Expr;
	jule::Ptr<_1a3bb664a_Scope> _field_Scope;
	jule::Ptr<_1a3c31c26_Var> _field_KeyA;
	jule::Ptr<_1a3c31c26_Var> _field_KeyB;
	

};
inline jule::Bool _1a3bb8482_RangeIter_eq(_1a3bb8482_RangeIter *_self_, _1a3bb8482_RangeIter _other_);


struct _1a3bb8817_ContSt {
	jule::Uintptr _field_It = 0;
	

};
inline jule::Bool _1a3bb8817_ContSt_eq(_1a3bb8817_ContSt *_self_, _1a3bb8817_ContSt _other_);


struct _1a3bb8be1_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

};
inline jule::Bool _1a3bb8be1_BreakSt_eq(_1a3bb8be1_BreakSt *_self_, _1a3bb8be1_BreakSt _other_);


struct _1a3bb8edd_Label {
	jule::Str _field_Ident;
	

};
inline jule::Bool _1a3bb8edd_Label_eq(_1a3bb8edd_Label *_self_, _1a3bb8edd_Label _other_);


struct _1a3bb93b7_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1a3bb8edd_Label> _field_Label;
	

};
inline jule::Bool _1a3bb93b7_GotoSt_eq(_1a3bb93b7_GotoSt *_self_, _1a3bb93b7_GotoSt _other_);


struct _1a3bb9791_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

};
inline jule::Bool _1a3bb9791_Postfix_eq(_1a3bb9791_Postfix *_self_, _1a3bb9791_Postfix _other_);


struct _1a3bb9c47_Assign {
	jule::Ptr<_1a3b65c26_OperandExprModel> _field_Left;
	jule::Ptr<_1a3b65c26_OperandExprModel> _field_Right;
	jule::Ptr<_1a3b27a62_Token> _field_Op;
	

};
inline jule::Bool _1a3bb9c47_Assign_eq(_1a3bb9c47_Assign *_self_, _1a3bb9c47_Assign _other_);


struct _1a3bba1ed_MultiAssign {
	jule::Slice<jule::Ptr<_1a3c31c26_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1a3c8982d_Data>> _field_Left;
	jule::Any _field_Right = jule::Any(nullptr);
	

};
struct _1a3bba85d_Match {
	jule::Ptr<_1a3c8982d_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1a3bbb386_Case>> _field_Cases;
	jule::Ptr<_1a3bbb386_Case> _field_Default;
	

};
struct _1a3bbb386_Case {
	jule::Ptr<_1a3bba85d_Match> _field_Owner;
	jule::Ptr<_1a3bb664a_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1a3c8982d_Data>> _field_Exprs;
	jule::Ptr<_1a3bbb386_Case> _field_Next;
	

};
struct _1a3bbba7e_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

};
inline jule::Bool _1a3bbba7e_FallSt_eq(_1a3bbba7e_FallSt *_self_, _1a3bbba7e_FallSt _other_);


struct _1a3bbbe25_RetSt {
	jule::Ptr<_1a3b770cd_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

};
inline jule::Bool _1a3bbbe25_RetSt_eq(_1a3bbbe25_RetSt *_self_, _1a3bbbe25_RetSt _other_);


struct _1a3bbc585_scopeLabel {
	jule::Ptr<_1a3b27a62_Token> _field_token;
	jule::Ptr<_1a3bb8edd_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1a3bbdb08_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

};
inline jule::Bool _1a3bbc585_scopeLabel_eq(_1a3bbc585_scopeLabel *_self_, _1a3bbc585_scopeLabel _other_);


struct _1a3bbcb18_scopeGoto {
	jule::Ptr<_1a3bb93b7_GotoSt> _field_st;
	jule::Ptr<_1a3b4aaeb_GotoSt> _field_gt;
	jule::Ptr<_1a3bbdb08_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

};
inline jule::Bool _1a3bbcb18_scopeGoto_eq(_1a3bbcb18_scopeGoto *_self_, _1a3bbcb18_scopeGoto _other_);


struct _1a3bbdb08_scopeChecker {
	jule::Ptr<_1a3b27a62_Token> _field_calledFrom;
	jule::Ptr<_1a3c08b54_Sema> _field_s;
	jule::Ptr<_1a3b770cd_FnIns> _field_owner;
	jule::Ptr<_1a3bbdb08_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1a3c844b5_SymbolTable> _field_table;
	jule::Ptr<_1a3bb664a_Scope> _field_scope;
	jule::Ptr<_1a3b4d15e_ScopeTree> _field_tree;
	jule::Ptr<_1a3b770cd_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1a3c31c26_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1a3bbc585_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a3bbcb18_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

};
inline jule::Bool _1a3bbdb08_scopeChecker_eq(_1a3bbdb08_scopeChecker *_self_, _1a3bbdb08_scopeChecker _other_);


struct _1a3bd2237_directiveChecker {
	jule::Ptr<_1a3c08b54_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1a3b3c55a_Directive>>> _field_d;
	jule::Any _field_o;
	

};
inline jule::Bool _1a3bd2237_directiveChecker_eq(_1a3bd2237_directiveChecker *_self_, _1a3bd2237_directiveChecker _other_);


struct _1a3bd86d3_ImportInfo {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _field_Selected;
	jule::Ptr<_1a3bdb609_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	

};
struct _1a3bdb609_Package {
	jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>> _field_Files;
	

};
struct _1a3c0802c_commonSemaMeta {
	jule::Slice<jule::Ptr<_1a3b9e4ac_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_1a3bd86d3_ImportInfo> _field_runtime;
	

};
struct _1a3c08b54_Sema {
	jule::Slice<_1e7c94ecb_Log> _field_errors;
	jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>> _field_files;
	jule::Ptr<_1a3c844b5_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1a3c0802c_commonSemaMeta> _field_meta;
	

};
struct _1a3c2da7a_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	

};
struct _1a3c31c26_Var {
	jule::Ptr<_1a3bb664a_Scope> _field_Scope;
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a3cc2de9_TypeSymbol> _field_Kind;
	jule::Ptr<_1a3c8a9a5_Value> _field_Value;
	jule::Ptr<_1a3b7a257_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1a3b3c55a_Directive>> _field_Directives;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1a3c31c26_Var>> _field_Depends;
	

};
struct _1a3c32cb0_FuncPattern {
	

};
struct _1a3c714e6_typeCompatibilityChecker {
	jule::Ptr<_1a3c08b54_Sema> _field_s;
	jule::Ptr<_1a3cbac27_TypeKind> _field_dest;
	jule::Ptr<_1a3cbac27_TypeKind> _field_src;
	jule::Ptr<_1a3b27a62_Token> _field_errorToken;
	

};
inline jule::Bool _1a3c714e6_typeCompatibilityChecker_eq(_1a3c714e6_typeCompatibilityChecker *_self_, _1a3c714e6_typeCompatibilityChecker _other_);


struct _1a3c73295_assignTypeChecker {
	jule::Ptr<_1a3c08b54_Sema> _field_s;
	jule::Ptr<_1a3cbac27_TypeKind> _field_dest;
	jule::Ptr<_1a3c8982d_Data> _field_d;
	jule::Ptr<_1a3b27a62_Token> _field_errorToken;
	

};
inline jule::Bool _1a3c73295_assignTypeChecker_eq(_1a3c73295_assignTypeChecker *_self_, _1a3c73295_assignTypeChecker _other_);


struct _1a3c74b6a_dynamicTypeAnnotation {
	jule::Ptr<_1a3c8b555_Eval> _field_e;
	jule::Ptr<_1a3b770cd_FnIns> _field_f;
	jule::Ptr<_1a3b76055_ParamIns> _field_p;
	jule::Ptr<_1a3c8982d_Data> _field_a;
	jule::Ptr<_1a3b27a62_Token> _field_errorToken;
	jule::Ptr<_1a3cbac27_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>> _field_ignored;
	

};
struct _1a3c799c7_fnCallArgChecker {
	jule::Ptr<_1a3c8b555_Eval> _field_e;
	jule::Slice<jule::Ptr<_1a3b42472_Expr>> _field_args;
	jule::Ptr<_1a3b27a62_Token> _field_errorToken;
	jule::Ptr<_1a3b770cd_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>> _field_ignored;
	

};
struct _1a3c7c90e_structLitChecker {
	jule::Ptr<_1a3c8b555_Eval> _field_e;
	jule::Ptr<_1a3b27a62_Token> _field_errorToken;
	jule::Ptr<_1a3b61cbb_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1a3b66b28_StructArgExprModel>> _field_args;
	

};
struct _1a3c7e6e1_rangeChecker {
	jule::Ptr<_1a3bbdb08_scopeChecker> _field_sc;
	jule::Ptr<_1a3b52d34_RangeKind> _field_rang;
	jule::Ptr<_1a3bb8482_RangeIter> _field_Kind;
	jule::Ptr<_1a3c8982d_Data> _field_d;
	

};
inline jule::Bool _1a3c7e6e1_rangeChecker_eq(_1a3c7e6e1_rangeChecker *_self_, _1a3c7e6e1_rangeChecker _other_);


struct _1a3c81e52_retTypeChecker {
	jule::Ptr<_1a3bbdb08_scopeChecker> _field_sc;
	jule::Ptr<_1a3b770cd_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1a3b42472_Expr>> _field_exprs;
	jule::Ptr<_1a3b27a62_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	

};
struct _1a3c844b5_SymbolTable {
	jule::Ptr<_1a3b2d2e8_File> _field_File;
	jule::Slice<_1a3b7b775_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1a3bd86d3_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1a3c31c26_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1a3b5e03d_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a3b740ec_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1a3b87a7d_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1a3b8a289_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1a3b8b994_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1a3bb11e4_Impl>> _field_Impls;
	

};
struct _1a3c8982d_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1a3cbac27_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1b5747b9d_Const> _field_Constant;
	

};
inline jule::Bool _1a3c8982d_Data_eq(_1a3c8982d_Data *_self_, _1a3c8982d_Data _other_);


struct _1a3c8a9a5_Value {
	jule::Ptr<_1a3b42472_Expr> _field_Expr;
	jule::Ptr<_1a3c8982d_Data> _field_Data;
	

};
inline jule::Bool _1a3c8a9a5_Value_eq(_1a3c8a9a5_Value *_self_, _1a3c8a9a5_Value _other_);


struct _1a3c8b555_Eval {
	jule::Ptr<_1a3c08b54_Sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1a3cbac27_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1a3c31c26_Var> _field_owner;
	jule::Ptr<_1a3b6121b_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

};
inline jule::Bool _1a3c8b555_Eval_eq(_1a3c8b555_Eval *_self_, _1a3c8b555_Eval _other_);


struct _1a3ca9c7c_unaryEval {
	jule::Ptr<_1a3c8b555_Eval> _field_e;
	jule::Ptr<_1a3c8982d_Data> _field_d;
	jule::Ptr<_1a3b4452e_UnaryExpr> _field_u;
	

};
inline jule::Bool _1a3ca9c7c_unaryEval_eq(_1a3ca9c7c_unaryEval *_self_, _1a3ca9c7c_unaryEval _other_);


struct _1a3cabc18_binaryEval {
	jule::Ptr<_1a3c8b555_Eval> _field_e;
	jule::Ptr<_1a3c8982d_Data> _field_l;
	jule::Ptr<_1a3c8982d_Data> _field_r;
	jule::Ptr<_1a3b27a62_Token> _field_op;
	

};
inline jule::Bool _1a3cabc18_binaryEval_eq(_1a3cabc18_binaryEval *_self_, _1a3cabc18_binaryEval _other_);


struct _1a3cb9341_InsGeneric {
	jule::Ptr<_1a3cbac27_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>> _field_Constraint;
	

};
struct _1a3cb9e35_TypeAlias {
	jule::Ptr<_1a3b4d15e_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a3cc2de9_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> _field_Generics;
	

};
struct _1a3cbac27_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait _field_Kind;
	

};
inline jule::Bool _1a3cbac27_TypeKind_eq(_1a3cbac27_TypeKind *_self_, _1a3cbac27_TypeKind _other_);


struct _1a3cc2de9_TypeSymbol {
	jule::Ptr<_1a3b3d13d_TypeDecl> _field_Decl;
	jule::Ptr<_1a3cbac27_TypeKind> _field_Kind;
	

};
inline jule::Bool _1a3cc2de9_TypeSymbol_eq(_1a3cc2de9_TypeSymbol *_self_, _1a3cc2de9_TypeSymbol _other_);


struct _1a3cc3801_Prim {
	jule::Str _field_Kind;
	

};
inline jule::Bool _1a3cc3801_Prim_eq(_1a3cc3801_Prim *_self_, _1a3cc3801_Prim _other_);


struct _1a3cc732c_Sptr {
	jule::Ptr<_1a3cbac27_TypeKind> _field_Elem;
	

};
inline jule::Bool _1a3cc732c_Sptr_eq(_1a3cc732c_Sptr *_self_, _1a3cc732c_Sptr _other_);


struct _1a3cc7d00_Slc {
	jule::Ptr<_1a3cbac27_TypeKind> _field_Elem;
	

};
inline jule::Bool _1a3cc7d00_Slc_eq(_1a3cc7d00_Slc *_self_, _1a3cc7d00_Slc _other_);


struct _1a3cc88e4_Tuple {
	jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>> _field_Types;
	

};
struct _1a3cc9494_Map {
	jule::Ptr<_1a3cbac27_TypeKind> _field_Key;
	jule::Ptr<_1a3cbac27_TypeKind> _field_Val;
	

};
inline jule::Bool _1a3cc9494_Map_eq(_1a3cc9494_Map *_self_, _1a3cc9494_Map _other_);


struct _1a3cca121_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1a3cbac27_TypeKind> _field_Elem;
	

};
inline jule::Bool _1a3cca121_Arr_eq(_1a3cca121_Arr *_self_, _1a3cca121_Arr _other_);


struct _1a3ccaae4_Ptr {
	jule::Ptr<_1a3cbac27_TypeKind> _field_Elem;
	

};
inline jule::Bool _1a3ccaae4_Ptr_eq(_1a3ccaae4_Ptr *_self_, _1a3ccaae4_Ptr _other_);


struct _1a3ccbae5_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

};
inline jule::Bool _1a3ccbae5_referencer_eq(_1a3ccbae5_referencer *_self_, _1a3ccbae5_referencer _other_);


struct _1a3cccad5_typeChecker {
	jule::Ptr<_1a3c08b54_Sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1a3ccbae5_referencer> _field_referencer;
	jule::Ptr<_1a3b7a257_ReferenceStack> _field_refers;
	jule::Ptr<_1a3b27a62_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1a3cb9e35_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	

};
struct _1a3cd578b_identTypeLookup {
	

};
inline jule::Bool _1a3cd578b_identTypeLookup_eq(_1a3cd578b_identTypeLookup *_self_, _1a3cd578b_identTypeLookup _other_);


struct _1a55a639b_FileInfo {
	jule::Ptr<_1a3b3b180_Ast> _field_Ast;
	jule::Slice<_1e7c94ecb_Log> _field_Errors;
	

};
struct _1a55ec106_stmt {
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	

};
struct _1a55ec997_scopeParser {
	jule::Ptr<_1a561b026_parser> _field_p;
	jule::Ptr<_1a3b4d15e_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1a55ec106_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	

};
struct _1a560a3bc_exprBuilder {
	jule::Ptr<_1a561b026_parser> _field_p;
	

};
inline jule::Bool _1a560a3bc_exprBuilder_eq(_1a560a3bc_exprBuilder *_self_, _1a560a3bc_exprBuilder _other_);


struct _1a5617b27_assignInfo {
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _field_l;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _field_r;
	jule::Ptr<_1a3b27a62_Token> _field_setter;
	jule::Bool _field_ok = false;
	

};
struct _1a561b026_parser {
	jule::Ptr<_1a3b3b180_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1a3b3c55a_Directive>> _field_directives;
	jule::Slice<_1e7c94ecb_Log> _field_errors;
	jule::Ptr<_1a560a3bc_exprBuilder> _field_ep;
	

};
struct _1a562d148_typeBuilder {
	jule::Ptr<_1a561b026_parser> _field_p;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	

};
struct _1a414da49_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

};
inline jule::Bool _1a414da49_CompileInfo_eq(_1a414da49_CompileInfo *_self_, _1a414da49_CompileInfo _other_);


struct _1a4150023_directiveEval {
	jule::Slice<_1e7c94ecb_Log> _field_logs;
	jule::Ptr<_1a3b3c55a_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1a563227e_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1a3bd86d3_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1a5638c8b_ExprInspector {
	jule::Bool _field_SkipChild = false;
	jule::Fn<void,jule::Any*> _field_handler;
	

};
struct _1a5644eea_OrderedDefines {
	jule::Slice<jule::Ptr<_1a3b5e03d_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a3c31c26_Var>> _field_Globals;
	

};
struct _1a512ebe4_liveTable {
	jule::Slice<jule::Ptr<_1a3c31c26_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1a3b770cd_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1a3b61cbb_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1a3b87a7d_Trait>> _field_traits;
	

};
struct _1a5130112_ObjectDeadCode {
	_1a512ebe4_liveTable _field_live;
	jule::Ptr<_1a5634c54_IR> _field_ir;
	

};
struct _1a5133c5e_scopeDeadCode {
	jule::Ptr<_1a5133c5e_scopeDeadCode> _field_parent;
	jule::Ptr<_1a3bb664a_Scope> _field_s;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1a3bb8edd_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a3bb93b7_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

};
inline jule::Bool _1a5133c5e_scopeDeadCode_eq(_1a5133c5e_scopeDeadCode *_self_, _1a5133c5e_scopeDeadCode _other_);


struct _1a51383e5_exprDeadCode {
	jule::Ptr<_1a5133c5e_scopeDeadCode> _field_s;
	

};
inline jule::Bool _1a51383e5_exprDeadCode_eq(_1a51383e5_exprDeadCode *_self_, _1a51383e5_exprDeadCode _other_);


struct _1a3e45049_ExceptionalForwardingExprModel {
	jule::Ptr<_1a3b68201_FnCallExprModel> _field_Expr;
	

};
inline jule::Bool _1a3e45049_ExceptionalForwardingExprModel_eq(_1a3e45049_ExceptionalForwardingExprModel *_self_, _1a3e45049_ExceptionalForwardingExprModel _other_);


struct _1a3e453bd_SwapExprModel {
	jule::Ptr<_1a3c8982d_Data> _field_Left;
	jule::Ptr<_1a3c8982d_Data> _field_Right;
	

};
inline jule::Bool _1a3e453bd_SwapExprModel_eq(_1a3e453bd_SwapExprModel *_self_, _1a3e453bd_SwapExprModel _other_);


struct _1a3e45797_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

};
inline jule::Bool _1a3e45797_EmptyCompareExprModel_eq(_1a3e45797_EmptyCompareExprModel *_self_, _1a3e45797_EmptyCompareExprModel _other_);


struct _1a3e45b1b_RefExprModel {
	jule::Ptr<_1a3c31c26_Var> _field_Var;
	

};
inline jule::Bool _1a3e45b1b_RefExprModel_eq(_1a3e45b1b_RefExprModel *_self_, _1a3e45b1b_RefExprModel _other_);


struct _1a3e4608e_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1b5747b9d_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

};
inline jule::Bool _1a3e4608e_StrCompExprModel_eq(_1a3e4608e_StrCompExprModel *_self_, _1a3e4608e_StrCompExprModel _other_);


struct _1a3e46622_MutSlicingExprModel {
	jule::Ptr<_1a3b27a62_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

};
inline jule::Bool _1a3e46622_MutSlicingExprModel_eq(_1a3e46622_MutSlicingExprModel *_self_, _1a3e46622_MutSlicingExprModel _other_);


struct _1a3e4691e_UnsafeBinaryExprModel {
	jule::Ptr<_1a3b66221_BinaryExprModel> _field_Node;
	

};
inline jule::Bool _1a3e4691e_UnsafeBinaryExprModel_eq(_1a3e4691e_UnsafeBinaryExprModel *_self_, _1a3e4691e_UnsafeBinaryExprModel _other_);


struct _1a3e46ca4_UnsafeIndexingExprModel {
	jule::Ptr<_1a3b68a81_IndexingExprModel> _field_Node;
	

};
inline jule::Bool _1a3e46ca4_UnsafeIndexingExprModel_eq(_1a3e46ca4_UnsafeIndexingExprModel *_self_, _1a3e46ca4_UnsafeIndexingExprModel _other_);


struct _1a3e4717d_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1a3b685ca_SliceExprModel> _field_Elems;
	

};
inline jule::Bool _1a3e4717d_PushToSliceExprModel_eq(_1a3e4717d_PushToSliceExprModel *_self_, _1a3e4717d_PushToSliceExprModel _other_);


struct _1a3e47557_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

};
inline jule::Bool _1a3e47557_AppendToSliceExprModel_eq(_1a3e47557_AppendToSliceExprModel *_self_, _1a3e47557_AppendToSliceExprModel _other_);


struct _1a3e47931_StrRuneIter {
	jule::Ptr<_1a3c8982d_Data> _field_Expr;
	jule::Ptr<_1a3bb8482_RangeIter> _field_Base;
	

};
inline jule::Bool _1a3e47931_StrRuneIter_eq(_1a3e47931_StrRuneIter *_self_, _1a3e47931_StrRuneIter _other_);


struct _1a3e47c2d_UnsafeDerefExprModel {
	jule::Ptr<_1a3b665ea_UnaryExprModel> _field_Base;
	

};
inline jule::Bool _1a3e47c2d_UnsafeDerefExprModel_eq(_1a3e47c2d_UnsafeDerefExprModel *_self_, _1a3e47c2d_UnsafeDerefExprModel _other_);


struct _1a3e4802a_UnsafeCastingExprModel {
	jule::Ptr<_1a3b6784e_CastingExprModel> _field_Base;
	

};
inline jule::Bool _1a3e4802a_UnsafeCastingExprModel_eq(_1a3e4802a_UnsafeCastingExprModel *_self_, _1a3e4802a_UnsafeCastingExprModel _other_);


struct _1a3e48c0c_nilVar {
	jule::Uintptr _field_var = 0;
	jule::Bool _field_safe = false;
	

};
inline jule::Bool _1a3e48c0c_nilVar_eq(_1a3e48c0c_nilVar *_self_, _1a3e48c0c_nilVar _other_);


struct _1a3e4904d_nils {
	jule::Slice<_1a3e48c0c_nilVar> _field_vars;
	

};
struct _1a564679e_scopeOptimizer {
	jule::Ptr<_1a564679e_scopeOptimizer> _field_parent;
	jule::I64 _field_i = 0;
	jule::Ptr<_1a3bb664a_Scope> _field_scope;
	jule::Ptr<_1a565665a_data> _field_data;
	

};
inline jule::Bool _1a564679e_scopeOptimizer_eq(_1a564679e_scopeOptimizer *_self_, _1a564679e_scopeOptimizer _other_);


struct _1a564d29a_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1a565665a_data> _field_data;
	jule::Ptr<_1a5638c8b_ExprInspector> _field_inspector;
	

};
inline jule::Bool _1a564d29a_exprOptimizer_eq(_1a564d29a_exprOptimizer *_self_, _1a564d29a_exprOptimizer _other_);


struct _1a565368a_dynamicVar {
	jule::Uintptr _field_var = 0;
	jule::Ptr<_1a3cbac27_TypeKind> _field_kind;
	

};
inline jule::Bool _1a565368a_dynamicVar_eq(_1a565368a_dynamicVar *_self_, _1a565368a_dynamicVar _other_);


struct _1a56539cb_dynamic {
	jule::Slice<_1a565368a_dynamicVar> _field_vars;
	

};
struct _1a565665a_data {
	jule::Ptr<_1a56580da_boundary> _field_boundary;
	jule::Ptr<_1a3e4904d_nils> _field_nils;
	jule::Ptr<_1a56539cb_dynamic> _field_dynamic;
	

};
inline jule::Bool _1a565665a_data_eq(_1a565665a_data *_self_, _1a565665a_data _other_);


struct _1a5657c99_boundaryVar {
	jule::Uintptr _field_var = 0;
	jule::Slice<jule::Any> _field_maxSize;
	

};
struct _1a56580da_boundary {
	jule::Slice<_1a5657c99_boundaryVar> _field_vars;
	

};
struct _1a51395e4_Optimizer {
	jule::Ptr<_1a5634c54_IR> _field_ir;
	

};
inline jule::Bool _1a51395e4_Optimizer_eq(_1a51395e4_Optimizer *_self_, _1a51395e4_Optimizer _other_);


struct _1a5160a38_AnsiEscape {
	

};
inline jule::Bool _1a5160a38_AnsiEscape_eq(_1a5160a38_AnsiEscape *_self_, _1a5160a38_AnsiEscape _other_);


struct _1a51620ab_Logger {
	

};
inline jule::Bool _1a51620ab_Logger_eq(_1a51620ab_Logger *_self_, _1a51620ab_Logger _other_);


struct _1a5da9ab1_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

};
inline jule::Bool _1a5da9ab1_AbsTime_eq(_1a5da9ab1_AbsTime *_self_, _1a5da9ab1_AbsTime _other_);


struct _1a5daa287_Time {
	jule::U64 _field_sec = 0;
	

};
inline jule::Bool _1a5daa287_Time_eq(_1a5daa287_Time *_self_, _1a5daa287_Time _other_);


struct _1a5cd7dc9_scopeCoder {
	jule::Ptr<_1a5db5abc_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1a5cd7dc9_scopeCoder_eq(_1a5cd7dc9_scopeCoder *_self_, _1a5cd7dc9_scopeCoder _other_);


struct _1a5ce3e07_exprCoder {
	jule::Ptr<_1a5db5abc_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a3c31c26_Var>>> _field_varPrefixes;
	

};
struct _1a5d058db_TestCoder {
	jule::Ptr<_1a3b61cbb_StructIns> _field_t;
	jule::Ptr<_1a3b740ec_Fn> _field_tmReset;
	jule::Ptr<_1a3b740ec_Fn> _field_tmFailed;
	jule::Ptr<_1a3b740ec_Fn> _field_tmSkipped;
	jule::Ptr<_1a5db5abc_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1a5d058db_TestCoder_eq(_1a5d058db_TestCoder *_self_, _1a5d058db_TestCoder _other_);


struct _1a5d08867_identCoder {
	

};
inline jule::Bool _1a5d08867_identCoder_eq(_1a5d08867_identCoder *_self_, _1a5d08867_identCoder _other_);


struct _1a5db3d1d_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

};
inline jule::Bool _1a5db3d1d_SerializationInfo_eq(_1a5db3d1d_SerializationInfo *_self_, _1a5db3d1d_SerializationInfo _other_);


struct _1a5db423b_traitCast {
	jule::Ptr<_1a3b87a7d_Trait> _field_t1;
	jule::Ptr<_1a3b87a7d_Trait> _field_t2;
	

};
inline jule::Bool _1a5db423b_traitCast_eq(_1a5db423b_traitCast *_self_, _1a5db423b_traitCast _other_);


struct _1a5db4615_anonHash {
	jule::Ptr<_1a3b69037_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
	

};
inline jule::Bool _1a5db4615_anonHash_eq(_1a5db4615_anonHash *_self_, _1a5db4615_anonHash _other_);


struct _1a5db5abc_ObjectCoder {
	_1e7be2632_StrBuilder _field_Buf;
	_1e7be2632_StrBuilder _field_resultDecls;
	_1e7be2632_StrBuilder _field_anyObj;
	_1e7be2632_StrBuilder _field_anonObj;
	_1e7be2632_StrBuilder _field_deallocObj;
	jule::Ptr<_1a5634c54_IR> _field_ir;
	_1a5db3d1d_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1a5db4615_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1a5db423b_traitCast> _field_traitCastMap;
	jule::Map<jule::Ptr<_1a3b770cd_FnIns>,jule::Slice<jule::Uintptr>> _field_traitMetMap;
	jule::Ptr<_1a5ce3e07_exprCoder> _field_ec;
	jule::Ptr<_1a5cd7dc9_scopeCoder> _field_sc;
	jule::Ptr<_1a5dc557c_typeCoder> _field_tc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	jule::I64 _field_wrapPos = 0;
	

};
struct _1a5dc4944_customType {
	jule::Str _field_kind;
	

};
inline jule::Bool _1a5dc4944_customType_eq(_1a5dc4944_customType *_self_, _1a5dc4944_customType _other_);


struct _1a5dc557c_typeCoder {
	jule::Ptr<_1a5db5abc_ObjectCoder> _field_oc;
	jule::Ptr<_1a5dcd167_resultCoder> _field_rc;
	

};
inline jule::Bool _1a5dc557c_typeCoder_eq(_1a5dc557c_typeCoder *_self_, _1a5dc557c_typeCoder _other_);


struct _1a5dcd167_resultCoder {
	jule::Ptr<_1a5dc557c_typeCoder> _field_tc;
	

};
inline jule::Bool _1a5dcd167_resultCoder_eq(_1a5dcd167_resultCoder *_self_, _1a5dcd167_resultCoder _other_);


struct _1aa98371d_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

};
inline jule::Bool _1aa98371d_Flag_eq(_1aa98371d_Flag *_self_, _1aa98371d_Flag _other_);

struct _1aa9872c1_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

};
inline jule::Bool _1aa9872c1_Flag_eq(_1aa9872c1_Flag *_self_, _1aa9872c1_Flag _other_);

struct _1aa98a934_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

};
inline jule::Bool _1aa98a934_Flag_eq(_1aa98a934_Flag *_self_, _1aa98a934_Flag _other_);

struct _1aa98e0db_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

};
inline jule::Bool _1aa98e0db_Flag_eq(_1aa98e0db_Flag *_self_, _1aa98e0db_Flag _other_);

struct _1aa99274e_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

};
inline jule::Bool _1aa99274e_Flag_eq(_1aa99274e_Flag *_self_, _1aa99274e_Flag _other_);


struct _1a61031d3_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
	

};
struct _1a6105b97_argParser {
	_1a61031d3_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	

};
struct _2120c08d6_Cmd {
	_212124671_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

};
struct _1a5656160_dataCheckpoint {
	_1a56580da_boundary _field_boundary;
	_1a3e4904d_nils _field_nils;
	_1a56539cb_dynamic _field_dynamic;
	

};
struct _1a5634c54_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1a3bdb609_Package> _field_Main;
	jule::Ptr<_1a3bd86d3_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_1a3bd86d3_ImportInfo>> _field_Used;
	_1a5644eea_OrderedDefines _field_Ordered;
	

};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a3c8982d_Data__jule_tuple_x_1a3c8982d_Data {
	jule::Ptr<_1a3c8982d_Data> __jule_result_arg0;
	jule::Ptr<_1a3c8982d_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1a3c8982d_Data__jule_tuple_bool {
	jule::Ptr<_1a3c8982d_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a3b42472_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a3b42472_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a3b55111_Case__jule_tuple_bool {
	jule::Ptr<_1a3b55111_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a3b55111_Case__jule_tuple_x_1a3b53e67_Else {
	jule::Slice<jule::Ptr<_1a3b55111_Case>> __jule_result_arg0;
	jule::Ptr<_1a3b53e67_Else> __jule_result_arg1;
};
struct __jule_tuple__1a3b4c79b_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a3b4badb_AssignSt__jule_tuple_bool {
	jule::Ptr<_1a3b4badb_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1a3b3d13d_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a3b41031_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1a3b41031_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a3b3b180_Ast__jule_tuple_s_1e7c94ecb_Log {
	jule::Slice<jule::Ptr<_1a3b3b180_Ast>> __jule_result_arg0;
	jule::Slice<_1e7c94ecb_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1e7c94ecb_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1e7c94ecb_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a3b770cd_FnIns__jule_tuple_bool {
	jule::Ptr<_1a3b770cd_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a5634c54_IR__jule_tuple_s_1e7c94ecb_Log {
	jule::Ptr<_1a5634c54_IR> __jule_result_arg0;
	jule::Slice<_1e7c94ecb_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1b505c56d_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1b505c56d_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1b505c56d_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1b505c56d_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a3c844b5_SymbolTable__jule_tuple_s_1e7c94ecb_Log {
	jule::Ptr<_1a3c844b5_SymbolTable> __jule_result_arg0;
	jule::Slice<_1e7c94ecb_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a3bdb609_Package__jule_tuple_s_1e7c94ecb_Log {
	jule::Ptr<_1a3bdb609_Package> __jule_result_arg0;
	jule::Slice<_1e7c94ecb_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a3b3b180_Ast__jule_tuple_s_1e7c94ecb_Log {
	jule::Ptr<_1a3b3b180_Ast> __jule_result_arg0;
	jule::Slice<_1e7c94ecb_Log> __jule_result_arg1;
};
struct __jule_tuple_sx_1a3b27a62_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a3b27a62_Token__jule_tuple_sx_1a3b27a62_Token {
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1a3b27a62_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1a3b27a62_Token__jule_tuple_s_1e7c94ecb_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> __jule_result_arg0;
	jule::Slice<_1e7c94ecb_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _1e7be2632_StrBuilder static__1e7be28eb_New(jule::I64 _1516_cap);
inline void _1e7beaea9_Write(_1e7be2632_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b);
inline void _1e7beb262_WriteStr(_1e7be2632_StrBuilder* _self_, jule::Str _3024_s);
inline void _1e7beb51a_WriteByte(_1e7be2632_StrBuilder* _self_, jule::U8 _3525_b);
inline jule::Str _1e7beba59_Str(_1e7be2632_StrBuilder* _self_);
inline void _1e7bebc57_Clear(_1e7be2632_StrBuilder* _self_);
inline jule::I64 _1e7bebedd_Len(_1e7be2632_StrBuilder* _self_);
inline jule::Slice<jule::U8> _1e7bec50a_Buf(_1e7be2632_StrBuilder* _self_);
inline void _1e7bec7b3_SetBuf(_1e7be2632_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf);
inline jule::U8 _1e7bedad3_index(_1e7bed64e_lazyBuff* _self_, jule::I64 _5521_i);
inline void _1e7bedd8b_append(_1e7bed64e_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _1e7bee122_string(_1e7bed64e_lazyBuff* _self_);
inline jule::Exceptional<jule::Slice<jule::Ptr<_212303e27_DirEntry>>> static__1e7c03038_Read(jule::Str _1517_path);
inline jule::VoidExceptional static__1e7c03269_Create(jule::Str _4019_path);
inline jule::VoidExceptional static__1e7c0349a_Remove(jule::Str _5319_path);
inline jule::Exceptional<jule::Ptr<_212305ce7_File>> static__212302e59_Open(jule::Str _2017_path, jule::I64 _2028_flag, jule::I64 _2041_mode);
inline jule::VoidExceptional static__21230318a_Remove(jule::Str _3319_path);
inline jule::Exceptional<jule::I64> _21230350e_Write(_212305ce7_File* _self_, jule::Slice<jule::U8> _4821_buf);
inline jule::Exceptional<jule::I64> _212303850_Read(_212305ce7_File* _self_, jule::Slice<jule::U8> _6924_buf);
inline jule::Ptr<_212305ce7_File> static__212306215_New(jule::Uintptr _4516_handle);
inline jule::Exceptional<jule::Ptr<_212305ce7_File>> static__2123064ce_Create(jule::Str _5519_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__212306798_Read(jule::Str _6717_path);
inline jule::VoidExceptional static__212306b3e_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm);
inline jule::VoidExceptional _21230737b_Close(_212305ce7_File* _self_);
inline jule::Exceptional<jule::Ptr<_212307dd7_Status>> static__212304a71_Of(jule::Str _1215_path);
inline jule::Bool _2123082b1_IsDir(_212307dd7_Status* _self_);
inline jule::Bool _212308547_IsReg(_212307dd7_Status* _self_);
inline jule::U64 _2123087cd_Size(_212307dd7_Status* _self_);
inline jule::Bool _1b572c116_set(_1b57356d5_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1b572c457_floatBits(_1b57356d5_decimal* _self_, _1b57220b7_floatInfo* _33226_flt);
inline void _1b5735a8c_assign(_1b57356d5_decimal* _self_, jule::U64 _15126_v);
inline void _1b5735d45_shift(_1b57356d5_decimal* _self_, jule::I64 _17625_k);
inline void _1b57360ed_roundDown(_1b57356d5_decimal* _self_, jule::I64 _19625_nd);
inline void _1b57363a6_roundUp(_1b57356d5_decimal* _self_, jule::I64 _20523_nd);
inline void _1b573665e_round(_1b57356d5_decimal* _self_, jule::I64 _23221_nd);
inline jule::U64 _1b57368e5_roundedInteger(_1b57356d5_decimal* _self_);
inline jule::Ptr<_1b5747b9d_Const> static__1b57480dd_NewI64(jule::I64 _1619_x);
inline jule::Ptr<_1b5747b9d_Const> static__1b57483a7_NewU64(jule::U64 _1919_x);
inline jule::Ptr<_1b5747b9d_Const> static__1b5748671_NewBool(jule::Bool _2220_x);
inline jule::Ptr<_1b5747b9d_Const> static__1b574893a_NewStr(jule::Str _2519_x);
inline jule::Ptr<_1b5747b9d_Const> static__1b5748c04_NewF64(jule::F64 _2819_x);
inline jule::Ptr<_1b5747b9d_Const> static__1b5748e13_NewNil(void);
inline jule::I64 _1b5749573_ReadI64(_1b5747b9d_Const* _self_);
inline jule::U64 _1b5749809_ReadU64(_1b5747b9d_Const* _self_);
inline jule::Bool _1b5749a90_ReadBool(_1b5747b9d_Const* _self_);
inline jule::Str _1b5749d26_ReadStr(_1b5747b9d_Const* _self_);
inline jule::F64 _1b574a0ac_ReadF64(_1b5747b9d_Const* _self_);
inline jule::I64 _1b574a343_AsI64(_1b5747b9d_Const* _self_);
inline jule::U64 _1b574a5c9_AsU64(_1b5747b9d_Const* _self_);
inline jule::F64 _1b574a860_AsF64(_1b5747b9d_Const* _self_);
inline void _1b574ab18_SetI64(_1b5747b9d_Const* _self_, jule::I64 _13822_x);
inline void _1b574adc1_SetU64(_1b5747b9d_Const* _self_, jule::U64 _14122_x);
inline void _1b574b179_SetBool(_1b5747b9d_Const* _self_, jule::Bool _14423_x);
inline void _1b574b432_SetStr(_1b5747b9d_Const* _self_, jule::Str _14722_x);
inline void _1b574b6da_SetF64(_1b5747b9d_Const* _self_, jule::F64 _15022_x);
inline jule::Bool _1b574bb6e_IsI64(_1b5747b9d_Const* _self_);
inline jule::Bool _1b574be05_IsU64(_1b5747b9d_Const* _self_);
inline jule::Bool _1b574c18b_IsBool(_1b5747b9d_Const* _self_);
inline jule::Bool _1b574c422_IsStr(_1b5747b9d_Const* _self_);
inline jule::Bool _1b574c6a8_IsF64(_1b5747b9d_Const* _self_);
inline jule::Bool _1b574c93e_IsNil(_1b5747b9d_Const* _self_);
inline jule::Bool _1b574d0c1_And(_1b5747b9d_Const* _self_, _1b5747b9d_Const _23815_x);
inline jule::Bool _1b574d412_Or(_1b5747b9d_Const* _self_, _1b5747b9d_Const _24914_x);
inline jule::Bool _1b574e8a8_Add(_1b5747b9d_Const* _self_, _1b5747b9d_Const _37719_x);
inline jule::Bool _1b574ebe9_Sub(_1b5747b9d_Const* _self_, _1b5747b9d_Const _40619_x);
inline jule::Bool _1b575003a_Mul(_1b5747b9d_Const* _self_, _1b5747b9d_Const _43019_x);
inline jule::Bool _1b575037b_Div(_1b5747b9d_Const* _self_, _1b5747b9d_Const _45819_x);
inline jule::Bool _1b57506bc_Mod(_1b5747b9d_Const* _self_, _1b5747b9d_Const _48719_x);
inline jule::Bool _1b5750a0d_BitwiseAnd(_1b5747b9d_Const* _self_, _1b5747b9d_Const _50926_x);
inline jule::Bool _1b5750d4e_BitwiseOr(_1b5747b9d_Const* _self_, _1b5747b9d_Const _52325_x);
inline jule::Bool _1b5751190_Xor(_1b5747b9d_Const* _self_, _1b5747b9d_Const _53719_x);
inline jule::Bool _1b57514d1_Lshift(_1b5747b9d_Const* _self_, _1b5747b9d_Const _55122_x);
inline jule::Bool _1b5751822_Rshift(_1b5747b9d_Const* _self_, _1b5747b9d_Const _57122_x);
inline jule::U8 _1a3b27dd6_Prec(_1a3b27a62_Token* _self_);
inline void _1a3b2d716_Fill(_1a3b2d2e8_File* _self_, jule::Slice<jule::U8> _1724_data);
inline jule::Str _1a3b2d99c_Dir(_1a3b2d2e8_File* _self_);
inline jule::Str _1a3b2dc33_Name(_1a3b2d2e8_File* _self_);
inline jule::Str _1a3b2e30a_GetRow(_1a3b2d2e8_File* _self_, jule::I64 _3818_row);
inline void _1a3b369b6_pushErr(_1a3b36433_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args);
inline void _1a3b37027_lex(_1a3b36433_lex* _self_);
inline jule::Str _1a3b37368_id(_1a3b36433_lex* _self_, jule::Slice<jule::U8>* _47119_ln);
inline jule::Slice<jule::U8> _1a3b375ee_resume(_1a3b36433_lex* _self_);
inline void _1a3b378a7_lexLineComment(_1a3b36433_lex* _self_, jule::Ptr<_1a3b27a62_Token>* _52135_token);
inline void _1a3b37b60_lexRangeComment(_1a3b36433_lex* _self_, jule::Ptr<_1a3b27a62_Token>* _53636_token);
inline jule::Str _1a3b37ea1_num(_1a3b36433_lex* _self_, jule::Slice<jule::U8>* _56420_txt);
inline jule::Str _1a3b382e2_escapeSeq(_1a3b36433_lex* _self_, jule::Slice<jule::U8>* _58626_txt);
inline jule::Str _1a3b386dd_getRune(_1a3b36433_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw);
inline jule::Str _1a3b38a2e_lexRune(_1a3b36433_lex* _self_, jule::Slice<jule::U8>* _62524_txt);
inline jule::Str _1a3b38cb5_lexStr(_1a3b36433_lex* _self_);
inline void _1a3b39249_newLine(_1a3b36433_lex* _self_);
inline jule::Bool _1a3b397aa_isOp(_1a3b36433_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1a3b27a62_Token>* _70763_t);
inline jule::Bool _1a3b39ba6_lexBasicOps(_1a3b36433_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1a3b27a62_Token>* _71745_tok);
inline jule::Bool _1a3b3a0a2_lexId(_1a3b36433_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1a3b27a62_Token>* _72640_t);
inline jule::Bool _1a3b3a49d_lexNum(_1a3b36433_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1a3b27a62_Token>* _73641_t);
inline jule::Ptr<_1a3b27a62_Token> _1a3b3a734_token(_1a3b36433_lex* _self_);
inline jule::Bool _1a3b3eeca_IsUnsafe(_1a3b3eb67_PtrTypeDecl* _self_);
inline jule::Bool _1a3b4076c_AutoSized(_1a3b40409_ArrTypeDecl* _self_);
inline jule::Bool _1a3b46520_Unhandled(_1a3b4619b_FnCallExpr* _self_);
inline jule::Bool _1a3b467a6_Ignored(_1a3b4619b_FnCallExpr* _self_);
inline jule::Bool _1a3b4dc20_IsSelf(_1a3b4d89b_ParamDecl* _self_);
inline jule::Bool _1a3b50161_IsAnon(_1a3b4eced_FnDecl* _self_);
inline jule::Bool _1a3b51e65_IsInf(_1a3b51b02_Iter* _self_);
inline jule::Bool _1a3b52790_IsWhileNext(_1a3b5242c_WhileKind* _self_);
inline jule::Ptr<_1a3b6121b_FieldIns> _1a3b5b4be_instance(jule::Ptr<_1a3b5b117_Field> _self_);
inline jule::Ptr<_1a3b61cbb_StructIns> _1a3b5e4a0_instance(jule::Ptr<_1a3b5e03d_Struct> _self_);
inline jule::Ptr<_1a3b61cbb_StructIns> _1a3b5e7ad_appendInstance(_1a3b5e03d_Struct* _self_, jule::Ptr<_1a3b61cbb_StructIns>* _13435_ins);
inline jule::Ptr<_1a3b740ec_Fn> _1a3b5eba9_FindMethod(_1a3b5e03d_Struct* _self_, jule::Str _15226_ident, jule::Bool _15238_statically);
inline jule::Ptr<_1a3c31c26_Var> _1a3b5eeea_FindStatic(_1a3b5e03d_Struct* _self_, jule::Str _16326_ident);
inline jule::Ptr<_1a3b5b117_Field> _1a3b6033b_FindField(_1a3b5e03d_Struct* _self_, jule::Str _17425_ident);
inline jule::Bool _1a3b6067c_IsImplements(_1a3b5e03d_Struct* _self_, jule::Ptr<_1a3b87a7d_Trait> _18424_t);
inline jule::Bool _1a3b609bd_IsUses(_1a3b5e03d_Struct* _self_, jule::Ptr<_1a3b5e03d_Struct> _19418_s);
inline jule::Str _1a3b62140_Str(_1a3b61cbb_StructIns* _self_);
inline jule::Bool _1a3b62481_Equal(jule::Ptr<_1a3b61cbb_StructIns> _self_, jule::Ptr<_1a3cbac27_TypeKind> _25518_other);
inline jule::Bool _1a3b62937_Same(_1a3b61cbb_StructIns* _self_, jule::Ptr<_1a3b61cbb_StructIns> _28316_s);
inline jule::Ptr<_1a3b740ec_Fn> _1a3b62d33_FindMethod(_1a3b61cbb_StructIns* _self_, jule::Str _29826_ident, jule::Bool _29838_statically);
inline jule::Ptr<_1a3b6121b_FieldIns> _1a3b63174_FindField(_1a3b61cbb_StructIns* _self_, jule::Str _30925_ident);
inline jule::Ptr<_1a3c31c26_Var> _1a3b634b5_FindStatic(_1a3b61cbb_StructIns* _self_, jule::Str _32026_ident);
inline jule::Ptr<_1a3b76055_ParamIns> _1a3b729ad_instance(jule::Ptr<_1a3b72628_Param> _self_);
inline jule::Bool _1a3b72c44_IsSelf(_1a3b72628_Param* _self_);
inline jule::Bool _1a3b72eca_IsRef(_1a3b72628_Param* _self_);
inline jule::Bool _1a3b74570_IsVoid(_1a3b740ec_Fn* _self_);
inline jule::Bool _1a3b74806_IsMethod(_1a3b740ec_Fn* _self_);
inline jule::Bool _1a3b74a8c_IsEntryPoint(_1a3b740ec_Fn* _self_);
inline jule::Bool _1a3b74d23_IsInit(_1a3b740ec_Fn* _self_);
inline jule::Bool _1a3b750a9_IsAnon(_1a3b740ec_Fn* _self_);
inline jule::Bool _1a3b75340_AnyVar(_1a3b740ec_Fn* _self_);
inline jule::Ptr<_1a3b770cd_FnIns> _1a3b755c6_instanceForce(jule::Ptr<_1a3b740ec_Fn> _self_);
inline jule::Ptr<_1a3b770cd_FnIns> _1a3b7585c_instance(jule::Ptr<_1a3b740ec_Fn> _self_);
inline jule::Ptr<_1a3b770cd_FnIns> _1a3b75b6a_appendInstance(_1a3b740ec_Fn* _self_, jule::Ptr<_1a3b770cd_FnIns>* _12935_ins);
inline jule::Str _1a3b763b8_Str(_1a3b76055_ParamIns* _self_);
inline jule::Str _1a3b7741e_Str(_1a3b770cd_FnIns* _self_);
inline jule::Bool _1a3b77760_Equal(jule::Ptr<_1a3b770cd_FnIns> _self_, jule::Ptr<_1a3cbac27_TypeKind> _21918_other);
inline jule::Bool _1a3b77c05_EqualFn(jule::Ptr<_1a3b770cd_FnIns> _self_, jule::Ptr<_1a3b770cd_FnIns>* _23021_f);
inline jule::Bool _1a3b78046_equalTrait(jule::Ptr<_1a3b770cd_FnIns> _self_, jule::Ptr<_1a3b770cd_FnIns>* _28924_other);
inline jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>> _1a3b782cc_Types(_1a3b770cd_FnIns* _self_);
inline jule::Bool _1a3b78563_IsBuiltin(_1a3b770cd_FnIns* _self_);
inline jule::Bool _1a3b787e9_IsAnon(_1a3b770cd_FnIns* _self_);
inline jule::Bool _1a3b78b3a_Same(_1a3b770cd_FnIns* _self_, jule::Ptr<_1a3b770cd_FnIns> _33216_f);
inline jule::Str _1a3b78e7b_GetKindStr(_1a3b770cd_FnIns* _self_, jule::Bool _34922_ident);
inline jule::Ptr<_1a3b7a257_ReferenceStack> static__1a3b7a554_new(void);
inline jule::I64 _1a3b7a950_Len(_1a3b7a257_ReferenceStack* _self_);
inline jule::Any _1a3b7ac91_At(_1a3b7a257_ReferenceStack* _self_, jule::I64 _6818_i);
inline void _1a3b7b049_Push(_1a3b7a257_ReferenceStack* _self_, jule::Any _7324_ref);
inline jule::Bool _1a94a354c_Exist(_1a3b7a257_ReferenceStack* _self_, jule::Ptr<_1a3b770cd_FnIns> _7820_t);
inline jule::Bool _1a94b9453_Exist(_1a3b7a257_ReferenceStack* _self_, jule::Ptr<_1a3c31c26_Var> _7820_t);
inline jule::Bool _1a90be036_Exist(_1a3b7a257_ReferenceStack* _self_, jule::Ptr<_1a3b61cbb_StructIns> _7820_t);
inline jule::Bool _1a9ad3561_Exist(_1a3b7a257_ReferenceStack* _self_, jule::Ptr<_1a3b87a7d_Trait> _7820_t);
inline void _1a3b81bdc_pushErr(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3b27a62_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args);
inline void _1a3b8246d_pushSuggestion(_1a3b8122a_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args);
inline jule::Bool _1a3b82869_checkCppUseDeclPath(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3b56244_UseDecl>* _34536_decl, jule::Str* _34553_path);
inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3b82b77_buildCppHeaderImport(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3b56244_UseDecl>* _36541_decl);
inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3b82eb8_buildStdImport(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3b56244_UseDecl>* _39335_decl);
inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3b83309_buildIdentImport(jule::Ptr<_1a3b8122a_symbolBuilder> _self_, jule::Ptr<_1a3b56244_UseDecl>* _43338_decl);
inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3b8364a_buildImport(jule::Ptr<_1a3b8122a_symbolBuilder> _self_, jule::Ptr<_1a3b56244_UseDecl>* _48733_decl);
inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3b8398b_findUseDecl(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _49828_pkg);
inline __jule_tuple_bool__jule_tuple_bool _1a3b83ccc_checkDuplicateUseDecl(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _50542_pkg);
inline void _1a3b84140_implImportSelections(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _52441_imp, jule::Ptr<_1a3b56244_UseDecl>* _52464_decl);
inline jule::Str _1a3b84481_getAsLinkPath(jule::Ptr<_1a3b8122a_symbolBuilder> _self_, jule::Str _53934_path);
inline void _1a3b8489e_pushCycleError(jule::Ptr<_1a3b8122a_symbolBuilder> _self_, jule::Ptr<_1a3b8122a_symbolBuilder>* _55332_sb, jule::Str _55352_path, _1e7be2632_StrBuilder* _55368_message);
inline void _1a3b84cbc_pushCrossCycleError(jule::Ptr<_1a3b8122a_symbolBuilder> _self_, jule::Ptr<_1a3b8122a_symbolBuilder>* _56637_target, jule::Ptr<_1a3bd86d3_ImportInfo>* _56662_imp, jule::Ptr<_1a3b27a62_Token>* _56681_errorToken);
inline jule::Bool _1a3b851b8_checkImportCycles(jule::Ptr<_1a3b8122a_symbolBuilder> _self_, jule::Ptr<_1a3bd86d3_ImportInfo> _58934_imp, jule::Ptr<_1a3b56244_UseDecl>* _58953_decl);
inline void _1a3b855d6_checkPackageAccessibility(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3b56244_UseDecl>* _62042_decl, jule::Str* _62059_mod, jule::Str* _62070_path);
inline jule::Bool _1a3b859d2_importPackage(jule::Ptr<_1a3b8122a_symbolBuilder> _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _62635_imp, jule::Ptr<_1a3b56244_UseDecl>* _62658_decl);
inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3b85d23_importUseDecl(jule::Ptr<_1a3b8122a_symbolBuilder> _self_, jule::Ptr<_1a3b56244_UseDecl>* _67335_decl);
inline void _1a3b86021_importUseDecls(jule::Ptr<_1a3b8122a_symbolBuilder> _self_);
inline void _1a3b862c9_appendNode(_1a3b8122a_symbolBuilder* _self_, _1a3b3c13c_Node* _71031_node);
inline void _1a3b864c7_appendNodes(_1a3b8122a_symbolBuilder* _self_);
inline void _1a3b86780_pushDirectivePass(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3b3c55a_Directive>* _74638_d);
inline void _1a3b8697d_appendTopDirectives(_1a3b8122a_symbolBuilder* _self_);
inline void _1a3b86b7b_build(jule::Ptr<_1a3b8122a_symbolBuilder> _self_);
inline jule::Str _1a3b87e46_Str(_1a3b87a7d_Trait* _self_);
inline jule::Bool _1a3b88287_Equal(jule::Ptr<_1a3b87a7d_Trait> _self_, jule::Ptr<_1a3cbac27_TypeKind> _2518_other);
inline jule::Ptr<_1a3b740ec_Fn> _1a3b8872c_FindMethod(_1a3b87a7d_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1a3b740ec_Fn> _1a3b88dae_findMethodInherit(_1a3b87a7d_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1a3b89ac4_AutoExpr(_1a3b8971c_EnumItem* _self_);
inline jule::Str _1a3b8a60d_Str(_1a3b8a289_Enum* _self_);
inline jule::Bool _1a3b8a94e_Equal(jule::Ptr<_1a3b8a289_Enum> _self_, jule::Ptr<_1a3cbac27_TypeKind> _3818_other);
inline jule::Ptr<_1a3b8971c_EnumItem> _1a3b8ad7d_FindItem(_1a3b8a289_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1a3b8bcd5_Str(_1a3b8b994_TypeEnum* _self_);
inline jule::Bool _1a3b8c126_Equal(jule::Ptr<_1a3b8b994_TypeEnum> _self_, jule::Ptr<_1a3cbac27_TypeKind> _8018_other);
inline jule::Ptr<_1a3b8b3bc_TypeEnumItem> _1a3b8c555_FindItem(_1a3b8b994_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1a3b90008_Str(_1a3b8eb84_comptimeRange* _self_);
inline jule::Bool _1a3b90349_Equal(jule::Ptr<_1a3b8eb84_comptimeRange> _self_, jule::Ptr<_1a3cbac27_TypeKind> _3618_other);
inline jule::Str _1a3b90a20_Str(_1a3b90657_comptimeStructField* _self_);
inline jule::Bool _1a3b90d61_Equal(jule::Ptr<_1a3b90657_comptimeStructField> _self_, jule::Ptr<_1a3cbac27_TypeKind> _4618_other);
inline jule::Ptr<_1a3c8982d_Data> _1a3b91405__Name(jule::Ptr<_1a3b90657_comptimeStructField> _self_, jule::Ptr<_1a3c8b555_Eval>* _5023_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _5038_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3b91801__Type(jule::Ptr<_1a3b90657_comptimeStructField> _self_, jule::Ptr<_1a3c8b555_Eval>* _6327_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _6342_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3b91bec__Public(jule::Ptr<_1a3b90657_comptimeStructField> _self_, jule::Ptr<_1a3c8b555_Eval>* _7129_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _7144_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3b9200a_subIdent(jule::Ptr<_1a3b90657_comptimeStructField> _self_, jule::Str* _8426_ident);
inline jule::Str _1a3b9268c_Str(_1a3b92318_comptimeStructFields* _self_);
inline jule::Bool _1a3b929cd_Equal(jule::Ptr<_1a3b92318_comptimeStructFields> _self_, jule::Ptr<_1a3cbac27_TypeKind> _12018_other);
inline void _1a3b92e51_ready(_1a3b92318_comptimeStructFields* _self_, jule::Ptr<_1a3c31c26_Var>* _12426_keyA, jule::Ptr<_1a3c31c26_Var>* _12443_keyB);
inline void _1a3b9336e_step(_1a3b92318_comptimeStructFields* _self_, jule::I64 _14520_i, jule::Ptr<_1a3c31c26_Var>* _14533_keyA, jule::Ptr<_1a3c31c26_Var>* _14550_keyB);
inline jule::I64 _1a3b93605_len(_1a3b92318_comptimeStructFields* _self_);
inline jule::Str _1a3b93c87_Str(_1a3b93913_comptimeStatic* _self_);
inline jule::Bool _1a3b940c8_Equal(jule::Ptr<_1a3b93913_comptimeStatic> _self_, jule::Ptr<_1a3cbac27_TypeKind> _16918_other);
inline jule::Ptr<_1a3c8982d_Data> _1a3b94705__Name(jule::Ptr<_1a3b93913_comptimeStatic> _self_, jule::Ptr<_1a3c8b555_Eval>* _17323_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _17338_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3b94b01__Type(jule::Ptr<_1a3b93913_comptimeStatic> _self_, jule::Ptr<_1a3c8b555_Eval>* _18627_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _18642_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3b94eec__Public(jule::Ptr<_1a3b93913_comptimeStatic> _self_, jule::Ptr<_1a3c8b555_Eval>* _19429_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _19444_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3b9533d_subIdent(jule::Ptr<_1a3b93913_comptimeStatic> _self_, jule::Str* _20726_ident);
inline jule::Str _1a3b95948_Str(_1a3b955c4_comptimeStatics* _self_);
inline jule::Bool _1a3b95c89_Equal(jule::Ptr<_1a3b955c4_comptimeStatics> _self_, jule::Ptr<_1a3cbac27_TypeKind> _24318_other);
inline void _1a3b9620c_ready(_1a3b955c4_comptimeStatics* _self_, jule::Ptr<_1a3c31c26_Var>* _24726_keyA, jule::Ptr<_1a3c31c26_Var>* _24743_keyB);
inline void _1a3b9662a_step(_1a3b955c4_comptimeStatics* _self_, jule::I64 _26820_i, jule::Ptr<_1a3c31c26_Var>* _26833_keyA, jule::Ptr<_1a3c31c26_Var>* _26850_keyB);
inline jule::I64 _1a3b968b1_len(_1a3b955c4_comptimeStatics* _self_);
inline jule::Str _1a3b97153_Str(_1a3b96bbe_comptimeEnumField* _self_);
inline jule::Bool _1a3b97494_Equal(jule::Ptr<_1a3b96bbe_comptimeEnumField> _self_, jule::Ptr<_1a3cbac27_TypeKind> _29218_other);
inline jule::Ptr<_1a3c8982d_Data> _1a3b97917__Name(jule::Ptr<_1a3b96bbe_comptimeEnumField> _self_, jule::Ptr<_1a3c8b555_Eval>* _29623_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _29638_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3b97c58_subIdent(jule::Ptr<_1a3b96bbe_comptimeEnumField> _self_, jule::Str* _30926_ident);
inline jule::Str _1a3b983da_Str(_1a3b98066_comptimeEnumFields* _self_);
inline jule::Bool _1a3b9872b_Equal(jule::Ptr<_1a3b98066_comptimeEnumFields> _self_, jule::Ptr<_1a3cbac27_TypeKind> _33118_other);
inline void _1a3b98b9e_ready(_1a3b98066_comptimeEnumFields* _self_, jule::Ptr<_1a3c31c26_Var>* _33526_keyA, jule::Ptr<_1a3c31c26_Var>* _33543_keyB);
inline void _1a3b990bc_step(_1a3b98066_comptimeEnumFields* _self_, jule::I64 _35620_i, jule::Ptr<_1a3c31c26_Var>* _35633_keyA, jule::Ptr<_1a3c31c26_Var>* _35650_keyB);
inline jule::I64 _1a3b99353_len(_1a3b98066_comptimeEnumFields* _self_);
inline jule::Str _1a3b999d5_Str(_1a3b99661_comptimeParam* _self_);
inline jule::Bool _1a3b99d26_Equal(jule::Ptr<_1a3b99661_comptimeParam> _self_, jule::Ptr<_1a3cbac27_TypeKind> _38018_other);
inline jule::Ptr<_1a3c8982d_Data> _1a3b9a585__Name(jule::Ptr<_1a3b99661_comptimeParam> _self_, jule::Ptr<_1a3c8b555_Eval>* _38423_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _38438_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3b9a981__Type(jule::Ptr<_1a3b99661_comptimeParam> _self_, jule::Ptr<_1a3c8b555_Eval>* _39727_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _39742_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3b9ad7c__Variadic(jule::Ptr<_1a3b99661_comptimeParam> _self_, jule::Ptr<_1a3c8b555_Eval>* _40531_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _40546_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3b9b278__Reference(jule::Ptr<_1a3b99661_comptimeParam> _self_, jule::Ptr<_1a3c8b555_Eval>* _41832_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _41847_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3b9b5b9_subIdent(jule::Ptr<_1a3b99661_comptimeParam> _self_, jule::Str* _43126_ident);
inline jule::Str _1a3b9bb3b_Str(_1a3b9b7ea_comptimeParams* _self_);
inline jule::Bool _1a3b9be7c_Equal(jule::Ptr<_1a3b9b7ea_comptimeParams> _self_, jule::Ptr<_1a3cbac27_TypeKind> _47418_other);
inline void _1a3b9c400_ready(_1a3b9b7ea_comptimeParams* _self_, jule::Ptr<_1a3c31c26_Var>* _47826_keyA, jule::Ptr<_1a3c31c26_Var>* _47843_keyB);
inline void _1a3b9c81d_step(_1a3b9b7ea_comptimeParams* _self_, jule::I64 _49920_i, jule::Ptr<_1a3c31c26_Var>* _49933_keyA, jule::Ptr<_1a3c31c26_Var>* _49950_keyB);
inline jule::I64 _1a3b9caa4_len(_1a3b9b7ea_comptimeParams* _self_);
inline jule::Str _1a3b9d236_Str(_1a3b9cdb2_comptimeTypeInfos* _self_);
inline jule::Bool _1a3b9d577_Equal(jule::Ptr<_1a3b9cdb2_comptimeTypeInfos> _self_, jule::Ptr<_1a3cbac27_TypeKind> _52318_other);
inline void _1a3b9d9ea_ready(_1a3b9cdb2_comptimeTypeInfos* _self_, jule::Ptr<_1a3c31c26_Var>* _52726_keyA, jule::Ptr<_1a3c31c26_Var>* _52743_keyB);
inline void _1a3b9de18_step(_1a3b9cdb2_comptimeTypeInfos* _self_, jule::I64 _54820_i, jule::Ptr<_1a3c31c26_Var>* _54833_keyA, jule::Ptr<_1a3c31c26_Var>* _54850_keyB);
inline jule::I64 _1a3b9e19e_len(_1a3b9cdb2_comptimeTypeInfos* _self_);
inline jule::Str _1a3b9e831_Str(_1a3b9e4ac_comptimeTypeInfo* _self_);
inline jule::Bool _1a3b9eb72_Equal(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3cbac27_TypeKind> _57218_other);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba02c1__Str(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _57622_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _57637_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba06bc__Kind(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _58927_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _58942_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba0ab8__Bits(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _66727_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _66742_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba0eb4__Elem(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _69027_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _69042_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba13b0__Size(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _72327_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _72342_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba17ab__Key(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _74126_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _74141_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba1ba7__Value(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _75428_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _75443_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba20a3__Fields(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _76729_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _76744_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba249e__Statics(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _79630_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _79645_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba289a__Public(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _81529_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _81544_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba2c96__Binded(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _84229_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _84244_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba3192__Ordered(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _85526_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _85541_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba358d__Comparable(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _86829_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _86844_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba3989__Mutable(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _88126_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _88141_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba3d85__Types(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _89428_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _89443_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba4281__Exceptional(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _91734_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _91749_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba467c__CanNil(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _93529_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _93544_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba4a78__RC(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _94825_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _94840_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba4e74__Result(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _96129_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _96144_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba5370__Params(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _97729_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _97744_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba56b1_subIdent(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Str* _99426_ident);
inline jule::Str _1a3ba5d43_Str(_1a3ba59be_comptimeValue* _self_);
inline jule::Bool _1a3ba6184_Equal(jule::Ptr<_1a3ba59be_comptimeValue> _self_, jule::Ptr<_1a3cbac27_TypeKind> _114918_other);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba66d4__Unwrap(jule::Ptr<_1a3ba59be_comptimeValue> _self_, jule::Ptr<_1a3c8b555_Eval>* _115329_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _115344_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba6ad0__Type(jule::Ptr<_1a3ba59be_comptimeValue> _self_, jule::Ptr<_1a3c8b555_Eval>* _116127_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _116142_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba6ecb__Lvalue(jule::Ptr<_1a3ba59be_comptimeValue> _self_, jule::Ptr<_1a3c8b555_Eval>* _116929_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _116944_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba73c7__Mutable(jule::Ptr<_1a3ba59be_comptimeValue> _self_, jule::Ptr<_1a3c8b555_Eval>* _118230_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _118245_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba77c3__Const(jule::Ptr<_1a3ba59be_comptimeValue> _self_, jule::Ptr<_1a3c8b555_Eval>* _119528_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _119543_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba7bbe__Field(jule::Ptr<_1a3ba59be_comptimeValue> _self_, jule::Ptr<_1a3c8b555_Eval>* _120828_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _120843_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ba8010_subIdent(jule::Ptr<_1a3ba59be_comptimeValue> _self_, jule::Str* _124326_ident);
inline jule::Str _1a3ba8692_Str(_1a3ba831d_comptimeFiles* _self_);
inline jule::Bool _1a3ba89d3_Equal(jule::Ptr<_1a3ba831d_comptimeFiles> _self_, jule::Ptr<_1a3cbac27_TypeKind> _130018_other);
inline void _1a3ba8e56_ready(_1a3ba831d_comptimeFiles* _self_, jule::Ptr<_1a3c31c26_Var>* _130426_keyA, jule::Ptr<_1a3c31c26_Var>* _130443_keyB);
inline void _1a3ba9374_step(_1a3ba831d_comptimeFiles* _self_, jule::I64 _132520_i, jule::Ptr<_1a3c31c26_Var>* _132533_keyA, jule::Ptr<_1a3c31c26_Var>* _132550_keyB);
inline jule::I64 _1a3ba960a_len(_1a3ba831d_comptimeFiles* _self_);
inline jule::Str _1a3ba9ebd_Str(_1a3ba9918_comptimeFile* _self_);
inline jule::Bool _1a3baa30e_Equal(jule::Ptr<_1a3ba9918_comptimeFile> _self_, jule::Ptr<_1a3cbac27_TypeKind> _134918_other);
inline jule::Ptr<_1a3c8982d_Data> _1a3baa71b__Path(jule::Ptr<_1a3ba9918_comptimeFile> _self_, jule::Ptr<_1a3c8b555_Eval>* _135327_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _135342_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3baab17__Name(jule::Ptr<_1a3ba9918_comptimeFile> _self_, jule::Ptr<_1a3c8b555_Eval>* _136627_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _136642_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3bab013__Dir(jule::Ptr<_1a3ba9918_comptimeFile> _self_, jule::Ptr<_1a3c8b555_Eval>* _137926_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _137941_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3bab354_subIdent(jule::Ptr<_1a3ba9918_comptimeFile> _self_, jule::Str* _139226_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1a3c08b54_Sema>*,jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>*> _1a3bae28b_readyFn(jule::Ptr<_1a3badd90_constraintChecker> _self_);
inline jule::Bool _1a3bae522_readyFi(jule::Ptr<_1a3badd90_constraintChecker> _self_);
inline jule::Bool _1a3bae7a8_readySi(jule::Ptr<_1a3badd90_constraintChecker> _self_);
inline jule::Bool _1a3baea3e_ready(jule::Ptr<_1a3badd90_constraintChecker> _self_);
inline jule::Bool _1a3baecc5_check(jule::Ptr<_1a3badd90_constraintChecker> _self_);
inline jule::Bool _1a3bb15ac_IsTraitImpl(_1a3bb11e4_Impl* _self_);
inline jule::Bool _1a3bb1843_IsStructImpl(_1a3bb11e4_Impl* _self_);
inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3bbe09d_SelectPackage(_1a3bbdb08_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>> _46029_selector);
inline jule::Ptr<_1a3c31c26_Var> _1a3bbe499_FindVar(_1a3bbdb08_scopeChecker* _self_, jule::Str _47123_ident, jule::Bool _47135_binded);
inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3bbe895_FindTypeAlias(_1a3bbdb08_scopeChecker* _self_, jule::Str _48829_ident, jule::Bool _48841_binded);
inline jule::Ptr<_1a3b5e03d_Struct> _1a3bbec91_FindStruct(_1a3bbdb08_scopeChecker* _self_, jule::Str _51326_ident, jule::Bool _51338_binded);
inline jule::Ptr<_1a3b740ec_Fn> _1a3bc018c_FindFn(_1a3bbdb08_scopeChecker* _self_, jule::Str _52222_ident, jule::Bool _52234_binded);
inline jule::Ptr<_1a3b87a7d_Trait> _1a3bc04cd_FindTrait(_1a3bbdb08_scopeChecker* _self_, jule::Str _53125_ident);
inline jule::Ptr<_1a3b8a289_Enum> _1a3bc081e_FindEnum(_1a3bbdb08_scopeChecker* _self_, jule::Str _54024_ident);
inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3bc0b60_FindTypeEnum(_1a3bbdb08_scopeChecker* _self_, jule::Str _54928_ident);
inline jule::Bool _1a3bc0eb2_isUnsafe(jule::Ptr<_1a3bbdb08_scopeChecker> _self_);
inline jule::Bool _1a3bc1248_isRoot(_1a3bbdb08_scopeChecker* _self_);
inline void _1a3bc1446_stop(_1a3bbdb08_scopeChecker* _self_);
inline jule::Bool _1a3bc16cc_stopped(_1a3bbdb08_scopeChecker* _self_);
inline jule::Bool _1a3bc1963_isDeferred(jule::Ptr<_1a3bbdb08_scopeChecker> _self_);
inline void _1a3bc1c1b_pushCaptured(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3c31c26_Var>* _61134_v);
inline jule::Ptr<_1a3bbdb08_scopeChecker> _1a3bc1ea2_getRoot(jule::Ptr<_1a3bbdb08_scopeChecker> _self_);
inline jule::Ptr<_1a3bbdb08_scopeChecker> _1a3bc2238_getHardRoot(jule::Ptr<_1a3bbdb08_scopeChecker> _self_);
inline jule::Ptr<_1a3c31c26_Var> _1a3bc2579_findVar(_1a3bbdb08_scopeChecker* _self_, jule::Str _65423_ident);
inline jule::Ptr<_1a3bb8edd_Label> _1a3bc28ba_findLabel(_1a3bbdb08_scopeChecker* _self_, jule::Str* _67526_ident);
inline jule::Ptr<_1a3bbc585_scopeLabel> _1a3bc2c0b_findLabelScope(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Str* _69132_ident);
inline jule::Ptr<_1a3bbc585_scopeLabel> _1a3bc304c_findLabelAll(_1a3bbdb08_scopeChecker* _self_, jule::Str* _70329_ident);
inline jule::Bool _1a3bc3448_isDuplicatedIdent(_1a3bbdb08_scopeChecker* _self_, jule::Uintptr _71533_itself, jule::Str* _71551_ident);
inline void _1a3bc3701_checkVarDecl(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b50ea8_VarDecl> _73533_decl);
inline void _1a3bc39a9_checkTypeAlias(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3cb9e35_TypeAlias>* _76636_ta);
inline void _1a3bc3c62_checkTypeAliasDecl(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b54b5a_TypeAliasDecl> _78239_decl);
inline jule::Ptr<_1a3bb664a_Scope> _1a3bc3ee8_getChild(_1a3bbdb08_scopeChecker* _self_);
inline void _1a3bc4416_checkChildSsc(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4d15e_ScopeTree>* _79335_tree, jule::Ptr<_1a3bb664a_Scope>* _79358_s, jule::Ptr<_1a3bbdb08_scopeChecker>* _79374_ssc);
inline jule::Ptr<_1a3bb664a_Scope> _1a3bc4812_checkChildSc(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4d15e_ScopeTree>* _79834_tree, jule::Ptr<_1a3bbdb08_scopeChecker>* _79857_ssc);
inline jule::Ptr<_1a3bb664a_Scope> _1a3bc4b53_checkChild(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4d15e_ScopeTree>* _80432_tree);
inline void _1a3bc4e0b_checkAnonScope(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4d15e_ScopeTree> _80935_tree);
inline void _1a3bc526e_processErrorCall(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b6e9ee_BuiltinErrorCallExprModel>* _81438_m, jule::Ptr<_1a3b27a62_Token> _81469_err);
inline void _1a3bc5527_checkExpr(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b42472_Expr> _82730_expr);
inline jule::Ptr<_1a3bb6a68_If> _1a3bc5868_checkIf(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b53a8d_If> _85828_i);
inline jule::Ptr<_1a3bb6d65_Else> _1a3bc5ba9_checkElse(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b53e67_Else> _87830_e);
inline void _1a3bc5e62_checkConditional(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b5441d_Conditional> _88437_conditional);
inline void _1a3bc643a_checkIterScopeSsc(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Uintptr _90034_it, jule::Ptr<_1a3b4d15e_ScopeTree> _90051_tree, jule::Ptr<_1a3bb664a_Scope>* _90074_s, jule::Ptr<_1a3bbdb08_scopeChecker> _90089_ssc);
inline jule::Ptr<_1a3bb664a_Scope> _1a3bc68e1_checkIterScopeSc(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Uintptr _90533_it, jule::Ptr<_1a3b4d15e_ScopeTree> _90550_tree, jule::Ptr<_1a3bbdb08_scopeChecker> _90572_ssc);
inline jule::Ptr<_1a3bb664a_Scope> _1a3bc6cdc_checkIterScope(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Uintptr _91131_it, jule::Ptr<_1a3b4d15e_ScopeTree>* _91149_tree);
inline void _1a3bc7095_checkInfIter(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b51b02_Iter>* _91634_it);
inline void _1a3bc734d_checkWhileIter(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b51b02_Iter>* _92236_it);
inline void _1a3bc776b_checkComptimeRangeIter(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b51b02_Iter>* _97244_it, jule::Ptr<_1a3bb8482_RangeIter>* _97260_kind, jule::Ptr<_1a3c8982d_Data>* _97283_d);
inline void _1a3bc7a24_checkRangeIter(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b51b02_Iter>* _102936_it);
inline void _1a3bc7ccc_checkIter(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b51b02_Iter> _108930_it);
inline jule::Bool _1a3bc811d_checkValidContLabel(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Uintptr _111336_it);
inline jule::Bool _1a3bc845e_checkValidBreakLabel(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Uintptr _112937_ptr);
inline jule::Ptr<_1a3bb8817_ContSt> _1a3bc87a0_checkContValidScope(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b535d7_ContSt> _115236_c);
inline void _1a3bc8a58_checkCont(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b535d7_ContSt> _117626_c);
inline void _1a3bc8d11_checkLabel(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4a722_LabelSt> _122331_l);
inline void _1a3bc90b9_pushGoto(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4aaeb_GotoSt> _124229_gt);
inline void _1a3bc9372_checkPostfix(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4badb_AssignSt> _125633_a);
inline jule::Bool _1a3bc96b3_isNewAssignIdent(_1a3bbdb08_scopeChecker* _self_, jule::Str _128932_ident);
inline void _1a3bc996b_removeInteriorMutRisk(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3c8982d_Data>* _130243_d);
inline jule::Bool _1a3bc9e22_checkStructureAssignOp(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _131644_s, jule::Ptr<_1a3b4badb_AssignSt>* _131664_a, jule::Ptr<_1a3c8982d_Data>* _131683_r);
inline void _1a3bca1ca_checkSingleAssign(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4badb_AssignSt>* _135539_a);
inline void _1a3bca75d_processEndPartOfMultiAssign(_1a3bbdb08_scopeChecker* _self_, jule::Ptr<_1a3bba1ed_MultiAssign>* _143348_st, jule::Ptr<_1a3b4badb_AssignSt>* _14348_a, jule::Ptr<_1a3b4b558_AssignLeft>* _143427_lexpr, jule::Ptr<_1a3c8982d_Data>* _143452_l, jule::Ptr<_1a3c8982d_Data>* _143467_r);
inline void _1a3bcaa16_checkMultiAssign(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4badb_AssignSt>* _151438_a);
inline void _1a3bcacbe_checkAssignSt(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4badb_AssignSt> _157534_a);
inline jule::Ptr<_1a3bb664a_Scope> _1a3bcb1ba_checkCaseScope(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3bbb386_Case>* _158632_c, jule::Ptr<_1a3b4d15e_ScopeTree>* _158647_tree);
inline jule::Ptr<_1a3bbb386_Case> _1a3bcb72b_checkCase(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3bba85d_Match> _159230_m, jule::I64 _159241_i, jule::Ptr<_1a3b55111_Case> _159253_c, jule::Ptr<_1a3c8982d_Data> _159272_expr);
inline void _1a3bcbb49_checkCases(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b5592a_MatchCase>* _166732_m, jule::Ptr<_1a3bba85d_Match> _166751_rm, jule::Ptr<_1a3c8982d_Data> _166767_expr);
inline jule::Ptr<_1a3bbb386_Case> _1a3bcc045_checkDefault(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3bba85d_Match> _168833_m, jule::Ptr<_1a3b53e67_Else> _168848_d);
inline void _1a3bcc3a8_checkComptimePanic(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b27a62_Token> _169639_callToken, jule::Ptr<_1a3bb664a_Scope>* _169659_s);
inline void _1a3bcc71b_processConstMatch(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3bba85d_Match>* _172839_tm, jule::Ptr<_1a3b5592a_MatchCase>* _172856_m);
inline void _1a3bcc9c4_checkTypeMatch(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b5592a_MatchCase>* _175736_m);
inline void _1a3bccc7c_checkCommonMatch(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b5592a_MatchCase>* _179938_m);
inline void _1a3bcd035_checkMatch(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b5592a_MatchCase> _184931_m);
inline void _1a3bcd2dd_checkFall(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4ade8_FallSt> _185726_f);
inline jule::Ptr<_1a3bb8be1_BreakSt> _1a3bcd62e_checkBreakWithLabel(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b5320d_BreakSt> _188036_b);
inline jule::Ptr<_1a3bb8be1_BreakSt> _1a3bcd970_checkPlainBreak(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b5320d_BreakSt> _193832_b);
inline void _1a3bcdc28_checkBreak(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b5320d_BreakSt> _196027_b);
inline void _1a3bcded1_checkRet(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b51382_RetSt> _197129_r);
inline void _1a3bce289_checkUseExpr(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b42d46_UseExpr> _199629_ue);
inline void _1a3bce542_checkNode(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Any* _201231_node);
inline void _1a3bce740_checkResult(jule::Ptr<_1a3bbdb08_scopeChecker> _self_);
inline void _1a3bce93d_checkTree(jule::Ptr<_1a3bbdb08_scopeChecker> _self_);
inline void _1a3bceca1_checkGoto(_1a3bbdb08_scopeChecker* _self_, jule::Ptr<_1a3bbcb18_scopeGoto>* _211430_gt, jule::Ptr<_1a3bbc585_scopeLabel>* _211451_label);
inline void _1a3bcee9e_checkGotos(_1a3bbdb08_scopeChecker* _self_);
inline void _1a3bd019c_checkLabels(_1a3bbdb08_scopeChecker* _self_);
inline void _1a3bd039a_checkVars(_1a3bbdb08_scopeChecker* _self_);
inline void _1a3bd0598_checkAliases(_1a3bbdb08_scopeChecker* _self_);
inline void _1a3bd090b_check(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4d15e_ScopeTree>* _219227_tree, jule::Ptr<_1a3bb664a_Scope>* _219250_s);
inline jule::Ptr<_1a3bbdb08_scopeChecker> _1a3bd0b92_newChildChecker(jule::Ptr<_1a3bbdb08_scopeChecker> _self_);
inline void _1a3bd2644_checkCdef(_1a3bd2237_directiveChecker* _self_, jule::Ptr<_1a3b3c55a_Directive>* _1626_d);
inline void _1a3bd28ec_checkTypedef(_1a3bd2237_directiveChecker* _self_, jule::Ptr<_1a3b3c55a_Directive>* _3229_d);
inline void _1a3bd2ba5_checkNamespace(_1a3bd2237_directiveChecker* _self_, jule::Ptr<_1a3b3c55a_Directive>* _4835_d);
inline void _1a3bd2e5d_checkDeprecated(_1a3bd2237_directiveChecker* _self_, jule::Ptr<_1a3b3c55a_Directive>* _9936_d);
inline void _1a3bd3216_checkTest(_1a3bd2237_directiveChecker* _self_, jule::Ptr<_1a3b3c55a_Directive>* _13926_d);
inline void _1a3bd34be_checkDirective(_1a3bd2237_directiveChecker* _self_, jule::Ptr<_1a3b3c55a_Directive>* _16035_d);
inline void _1a3bd36bc_check(_1a3bd2237_directiveChecker* _self_);
inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3bd8bbc_SelectPackage(_1a3bd86d3_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>> );
inline jule::Ptr<_1a3c31c26_Var> _1a3bd90b8_FindVar(_1a3bd86d3_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool );
inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3bd94b4_FindTypeAlias(_1a3bd86d3_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool );
inline jule::Ptr<_1a3b5e03d_Struct> _1a3bd98b0_FindStruct(_1a3bd86d3_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool );
inline jule::Ptr<_1a3b740ec_Fn> _1a3bd9cab_FindFn(_1a3bd86d3_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool );
inline jule::Ptr<_1a3b87a7d_Trait> _1a3bda0ec_FindTrait(_1a3bd86d3_ImportInfo* _self_, jule::Str _23625_ident);
inline jule::Ptr<_1a3b8a289_Enum> _1a3bda43d_FindEnum(_1a3bd86d3_ImportInfo* _self_, jule::Str _24724_ident);
inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3bda77e_FindTypeEnum(_1a3bd86d3_ImportInfo* _self_, jule::Str _25828_ident);
inline jule::Bool _1a3bdac24_isLookupable(_1a3bd86d3_ImportInfo* _self_, jule::Str* _26725_ident);
inline jule::Bool _1a3bdb065_existIdent(_1a3bd86d3_ImportInfo* _self_, jule::Str _28722_ident);
inline jule::Bool _1a3bdb2eb_isAccessibleViaSelection(_1a3bd86d3_ImportInfo* _self_);
inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3bdba9e_SelectPackage(_1a3bdb609_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>> );
inline jule::Ptr<_1a3c31c26_Var> _1a3bdbe9a_FindVar(_1a3bdb609_Package* _self_, jule::Str _31423_ident, jule::Bool _31435_binded);
inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3bdc396_FindTypeAlias(_1a3bdb609_Package* _self_, jule::Str _32029_ident, jule::Bool _32041_binded);
inline jule::Ptr<_1a3b5e03d_Struct> _1a3bdc792_FindStruct(_1a3bdb609_Package* _self_, jule::Str _32626_ident, jule::Bool _32638_binded);
inline jule::Ptr<_1a3b740ec_Fn> _1a3bdcb8d_FindFn(_1a3bdb609_Package* _self_, jule::Str _33222_ident, jule::Bool _33234_binded);
inline jule::Ptr<_1a3b87a7d_Trait> _1a3bdcece_FindTrait(_1a3bdb609_Package* _self_, jule::Str _33825_ident);
inline jule::Ptr<_1a3b8a289_Enum> _1a3bdd320_FindEnum(_1a3bdb609_Package* _self_, jule::Str _34424_ident);
inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3bdd661_FindTypeEnum(_1a3bdb609_Package* _self_, jule::Str _35028_ident);
inline jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _1a3c0848e_pushComptimeTypeInfo(_1a3c0802c_commonSemaMeta* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _21541_t);
inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3c090e9_SelectPackage(_1a3c08b54_Sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>> _24429_selector);
inline jule::Ptr<_1a3c31c26_Var> _1a3c094e5_FindVar(_1a3c08b54_Sema* _self_, jule::Str _25423_ident, jule::Bool _25435_binded);
inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3c098e1_FindTypeAlias(_1a3c08b54_Sema* _self_, jule::Str _28629_ident, jule::Bool _28641_binded);
inline jule::Ptr<_1a3b5e03d_Struct> _1a3c09cdc_FindStruct(_1a3c08b54_Sema* _self_, jule::Str _31826_ident, jule::Bool _31838_binded);
inline jule::Ptr<_1a3b740ec_Fn> _1a3c0a1d8_FindFn(_1a3c08b54_Sema* _self_, jule::Str _34922_ident, jule::Bool _34934_binded);
inline jule::Ptr<_1a3b87a7d_Trait> _1a3c0a529_FindTrait(_1a3c08b54_Sema* _self_, jule::Str _38125_ident);
inline jule::Ptr<_1a3b8a289_Enum> _1a3c0a86a_FindEnum(_1a3c08b54_Sema* _self_, jule::Str _41324_ident);
inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3c0abab_FindTypeEnum(_1a3c08b54_Sema* _self_, jule::Str _44528_ident);
inline jule::Bool _1a3c0b0b8_isFlag(_1a3c08b54_Sema* _self_, jule::I64 _47418_flags);
inline void _1a3c0b371_setCurrentFile(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3c844b5_SymbolTable> _47634_f);
inline void _1a3c0b78e_pushErr(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b27a62_Token> _47823_token, jule::Str _47838_fmt, jule::Slice<jule::Any> _47851_args);
inline void _1a3c0bb02_pushSuggestion(_1a3c08b54_Sema* _self_, jule::Str _48330_fmt, jule::Slice<jule::Any> _48343_args);
inline jule::Bool _1a3c0beed_isAccessibleDefine(_1a3c08b54_Sema* _self_, jule::Bool _48830_public, jule::Ptr<_1a3b27a62_Token> _48844_token);
inline jule::Bool _1a3c0c4a4_isDuplicatedIdent(_1a3c08b54_Sema* _self_, jule::Uintptr _49529_itself, jule::Str* _49547_ident, jule::Bool _49559_binded);
inline void _1a3c0c817_checkDirectives(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Slice<jule::Ptr<_1a3b3c55a_Directive>>* _51237_d, jule::Any _51263_o);
inline jule::Bool _1a3c0ccbd_checkGenericQuantity(_1a3c08b54_Sema* _self_, jule::I64 _52136_required, jule::I64 _52151_given, jule::Ptr<_1a3b27a62_Token> _52163_token);
inline jule::Bool _1a3c0d1b9_isDuplicatedImportSelection(_1a3c08b54_Sema* _self_, jule::Uintptr _54039_itself, jule::Str* _54057_ident);
inline jule::Any _1a3c0d5b5_getImportDef(_1a3c08b54_Sema* _self_, jule::Str* _55325_ident, jule::Ptr<_1a3bd86d3_ImportInfo>* _55342_imp);
inline jule::Bool _1a9289454_checkImportSelection(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b27a62_Token>* _56840_ident, jule::Ptr<_1a3c31c26_Var>* _56856_s);
inline jule::Bool _1a928d744_checkImportSelection(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b27a62_Token>* _56840_ident, jule::Ptr<_1a3cb9e35_TypeAlias>* _56856_s);
inline jule::Bool _1a92929bd_checkImportSelection(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b27a62_Token>* _56840_ident, jule::Ptr<_1a3b5e03d_Struct>* _56856_s);
inline jule::Bool _1a9297033_checkImportSelection(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b27a62_Token>* _56840_ident, jule::Ptr<_1a3b87a7d_Trait>* _56856_s);
inline jule::Bool _1a929b2ce_checkImportSelection(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b27a62_Token>* _56840_ident, jule::Ptr<_1a3b8a289_Enum>* _56856_s);
inline jule::Bool _1a92a057a_checkImportSelection(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b27a62_Token>* _56840_ident, jule::Ptr<_1a3b8b994_TypeEnum>* _56856_s);
inline jule::Bool _1a92a4804_checkImportSelection(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b27a62_Token>* _56840_ident, jule::Ptr<_1a3b740ec_Fn>* _56856_s);
inline jule::Bool _1a3c0dd02_checkImportSelectedSelections(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _58250_imp);
inline jule::Bool _1a92a90bc_checkImportsAllSelectionsFromCollection(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3c31c26_Var>>* _63159_s, jule::Ptr<_1a3b27a62_Token>* _63168_et);
inline jule::Bool _1a92a9c5a_checkImportsAllSelectionsFromCollection(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>* _63159_s, jule::Ptr<_1a3b27a62_Token>* _63168_et);
inline jule::Bool _1a92ace4a_checkImportsAllSelectionsFromCollection(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3b5e03d_Struct>>* _63159_s, jule::Ptr<_1a3b27a62_Token>* _63168_et);
inline jule::Bool _1a92ae259_checkImportsAllSelectionsFromCollection(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3b740ec_Fn>>* _63159_s, jule::Ptr<_1a3b27a62_Token>* _63168_et);
inline jule::Bool _1a92b1943_checkImportsAllSelectionsFromCollection(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3b87a7d_Trait>>* _63159_s, jule::Ptr<_1a3b27a62_Token>* _63168_et);
inline jule::Bool _1a92b4eda_checkImportsAllSelectionsFromCollection(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3b8a289_Enum>>* _63159_s, jule::Ptr<_1a3b27a62_Token>* _63168_et);
inline jule::Bool _1a92b7680_checkImportsAllSelectionsFromCollection(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3b8b994_TypeEnum>>* _63159_s, jule::Ptr<_1a3b27a62_Token>* _63168_et);
inline jule::Bool _1a3c0e53e_checkImportAllSelections(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _64141_imp);
inline jule::Bool _1a3c0e880_checkImportSelections(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _65542_imp);
inline jule::Bool _1a3c0ebc1_isUseAliasDuplication(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _66438_imp);
inline jule::Bool _1a3c10012_checkImport(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _68032_imp);
inline void _1a3c10210_checkImports(_1a3c08b54_Sema* _self_);
inline void _1a3c1040d_implFileImpls(jule::Ptr<_1a3c08b54_Sema> _self_);
inline void _1a3c1060b_implImpls(jule::Ptr<_1a3c08b54_Sema> _self_);
inline void _1a3c10809_checkEnums(jule::Ptr<_1a3c08b54_Sema> _self_);
inline void _1a3c10a07_checkFileInherits(jule::Ptr<_1a3c08b54_Sema> _self_);
inline void _1a3c10c05_checkInherits(jule::Ptr<_1a3c08b54_Sema> _self_);
inline _1a3cccad5_typeChecker _1a3c111ab_typeChecker(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Trait _76932_l, jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> _76947_generics, jule::Ptr<_1a3ccbae5_referencer> _7707_referencer);
inline jule::Ptr<_1a3cbac27_TypeKind> _1a3c1171c_buildTypeWithRefers(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b3d13d_TypeDecl>* _79641_t, jule::Trait _79664_l, jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> _7977_generics, jule::Ptr<_1a3ccbae5_referencer> _79735_referencer);
inline jule::Bool _1a3c11c7d_checkTypeWithRefers(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cc2de9_TypeSymbol>* _80341_t, jule::Trait _80361_l, jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> _8047_generics, jule::Ptr<_1a3ccbae5_referencer> _80435_referencer);
inline jule::Ptr<_1a3badd90_constraintChecker> _1a3c12014_constraintChecker(jule::Ptr<_1a3c08b54_Sema> _self_);
inline jule::Bool _1a3c12410_checkType(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cc2de9_TypeSymbol>* _81831_t, jule::Trait _81851_l);
inline jule::Ptr<_1a3cbac27_TypeKind> _1a3c128b6_buildTypeWithGenerics(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b3d13d_TypeDecl>* _82443_t, jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> _8257_generics, jule::Ptr<_1a3b7a257_ReferenceStack> _82535_refers);
inline jule::Ptr<_1a3cbac27_TypeKind> _1a3c13048_selectType(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b3d13d_TypeDecl>* _84232_t);
inline jule::Ptr<_1a3c8b555_Eval> _1a3c134ee_evalpd(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Trait _85427_l, jule::Ptr<_1a3cbac27_TypeKind> _85442_p, jule::Ptr<_1a3c31c26_Var> _85460_owner);
inline jule::Ptr<_1a3c8b555_Eval> _1a3c138ea_evalp(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Trait _86926_l, jule::Ptr<_1a3cbac27_TypeKind> _86941_p);
inline jule::Ptr<_1a3c8b555_Eval> _1a3c13c3b_eval(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Trait _87425_l);
inline jule::Bool _1a3c1429c_checkAssignType(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Bool _87832_destIsRef, jule::Ptr<_1a3cbac27_TypeKind>* _87854_dest, jule::Ptr<_1a3c8982d_Data>* _8798_d, jule::Ptr<_1a3b27a62_Token> _87922_errorToken);
inline jule::Bool _1a3c14753__checkTypeCompatibility(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cbac27_TypeKind>* _92045_dest, jule::Ptr<_1a3cbac27_TypeKind>* _92067_src, jule::Ptr<_1a3b27a62_Token> _9217_errorToken);
inline jule::Bool _1a3c14c09_checkTypeCompatibility(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cbac27_TypeKind>* _93844_dest, jule::Ptr<_1a3cbac27_TypeKind>* _9398_src, jule::Ptr<_1a3b27a62_Token>* _93929_errorToken);
inline void _1a3c15127_pushCompatiblityError(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _94742_dest, jule::Ptr<_1a3c8982d_Data>* _94764_src, jule::Ptr<_1a3b27a62_Token>* _9488_errorToken);
inline jule::Bool _1a3c155cd_checkTypeCompatibility1(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cbac27_TypeKind>* _96545_dest, jule::Ptr<_1a3c8982d_Data>* _96567_src, jule::Ptr<_1a3b27a62_Token>* _9668_errorToken);
inline jule::Ptr<_1a3cbac27_TypeKind> _1a3c15a84_buildNonGenericTypeKind(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b3d13d_TypeDecl>* _98045_ast, jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>>* _9818_generics, jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>>* _98144_ignored);
inline jule::Bool _1a3c15e80_buildFnNonGenericTypeKinds(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b770cd_FnIns>* _99248_f, jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>>* _99264_ignored);
inline jule::Ptr<_1a3b770cd_FnIns> _1a3c162c1_getTraitCheckFnKind(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b740ec_Fn>* _101441_f);
inline jule::Bool _1a3c16777_checkConstraintsFn(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b770cd_FnIns>* _103740_f, jule::Ptr<_1a3b27a62_Token>* _103756_et, jule::Ptr<_1a3b770cd_FnIns> _103772_exist);
inline jule::Bool _1a3c16c2d_checkConstraintsStruct(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _105144_s, jule::Ptr<_1a3b27a62_Token>* _105164_et, jule::Ptr<_1a3b61cbb_StructIns> _105180_exist);
inline jule::Bool _1a3c17129_fnEnvironment(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b770cd_FnIns>* _106835_f, jule::Fn<jule::Bool,jule::Ptr<_1a3c08b54_Sema>*,jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>*> _106846_algo);
inline void _1a3c173d2_checkFnParamKind(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b76055_ParamIns>* _109538_p);
inline jule::Bool _1a3c17723_reloadFnInsTypes(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b770cd_FnIns> _110237_f);
inline jule::Bool _1a3c17bc9_checkRefValidityForInitExpr(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Bool _113844_leftMut, jule::Ptr<_1a3c8982d_Data>* _113864_d, jule::Ptr<_1a3b27a62_Token>* _113879_errorToken);
inline jule::Bool _1a3c1801a_isMutRiskyStruct(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b61cbb_StructIns>* _115529_s);
inline jule::Bool _1a3c18636_checkValidityForInitExpr(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Bool _118241_leftMut, jule::Bool _118256_leftRef, jule::Ptr<_1a3cbac27_TypeKind>* _11834_leftKind, jule::Ptr<_1a3c8982d_Data>* _118330_d, jule::Ptr<_1a3b27a62_Token>* _118345_errorToken);
inline jule::Bool _1a3c18a32_checkTypeAliasDeclKind(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cb9e35_TypeAlias>* _121044_ta, jule::Trait _121064_l);
inline void _1a3c18d95_checkTypeAliasDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cb9e35_TypeAlias>* _123340_ta, jule::Trait _123360_l);
inline void _1a3c1914d_checkTypeAliasDeclDup(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cb9e35_TypeAlias>* _124143_ta);
inline jule::Bool _1a3c193d4_checkTypeAliasDecls(jule::Ptr<_1a3c08b54_Sema> _self_);
inline void _1a935be83_checkEnumItemsDup(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3b8971c_EnumItem>> _126536_items);
inline void _1a936928c_checkEnumItemsDup(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3b8b3bc_TypeEnumItem>> _126536_items);
inline void _1a3c19945_checkEnumItemsStr(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b8a289_Enum>* _128539_e);
inline void _1a933c903_checkEnumItemInt(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3c8b555_Eval>* _131143_eval, jule::Ptr<_1a3b8a289_Enum>* _131161_e, jule::Ptr<_1a3cc3801_Prim>* _131172_prim, jule::Ptr<_1a3b8971c_EnumItem>* _131190_item, jule::U64* _1311112_n);
inline void _1a934c979_checkEnumItemInt(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3c8b555_Eval>* _131143_eval, jule::Ptr<_1a3b8a289_Enum>* _131161_e, jule::Ptr<_1a3cc3801_Prim>* _131172_prim, jule::Ptr<_1a3b8971c_EnumItem>* _131190_item, jule::I64* _1311112_n);
inline void _1a9338a97_checkEnumItemsInt1(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cc3801_Prim>* _134641_prim, jule::Ptr<_1a3b8a289_Enum>* _134659_e);
inline void _1a934917e_checkEnumItemsInt1(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cc3801_Prim>* _134641_prim, jule::Ptr<_1a3b8a289_Enum>* _134659_e);
inline void _1a3c1a5e4_checkEnumItemsInt(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b8a289_Enum>* _138139_e);
inline void _1a3c1a89c_checkEnumDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b8a289_Enum>* _139135_e);
inline void _1a3c1ab55_checkTypeEnumDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b8b994_TypeEnum>* _143239_e);
inline jule::Bool _1a3c1addb_checkEnumDecls(jule::Ptr<_1a3c08b54_Sema> _self_);
inline jule::Bool _1a3c1b172_checkTypeEnumDecls(jule::Ptr<_1a3c08b54_Sema> _self_);
inline jule::Bool _1a3c1b4b3_checkDeclGenerics(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>>* _149534_generics);
inline jule::Bool _1a3c1b804_checkFnDeclParamsDup(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b740ec_Fn>* _152237_f);
inline jule::Bool _1a3c1bb45_checkFnDeclResultDup(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b740ec_Fn>* _155937_f);
inline jule::Bool _1a3c1be86_checkFnVariadicParam(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b740ec_Fn>* _160442_f);
inline void _1a3c1c23e_checkFnDeclPrototype(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b740ec_Fn>* _161742_f);
inline jule::Bool _1a3c1c6e5_catchTraitInheritCycle(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b87a7d_Trait> _163939_t1, jule::Ptr<_1a3b87a7d_Trait> _163955_t2, _1e7be2632_StrBuilder* _163972_message);
inline jule::Bool _1a3c1ca36__checkTraitDeclInherits(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b87a7d_Trait>* _165845_t);
inline void _1a3c1ccde_checkTraitDeclInherits(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b87a7d_Trait>* _169944_t);
inline void _1a3c1d097_checkTraitDeclMethod(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b740ec_Fn>* _172442_f);
inline void _1a3c1d350_checkTraitDeclMethods(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b87a7d_Trait>* _173843_t);
inline void _1a3c1d608_checkTraitDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b87a7d_Trait>* _177436_t);
inline jule::Bool _1a3c1d88e_checkTraitDecls(jule::Ptr<_1a3c08b54_Sema> _self_);
inline jule::Bool _1a3c1dc8a_checkTraitImplMethods(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b87a7d_Trait>* _179842_base, jule::Ptr<_1a3bb11e4_Impl>* _179857_ipl);
inline jule::Bool _1a3c1e186_implToStruct(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b5e03d_Struct>* _180934_dest, jule::Ptr<_1a3bb11e4_Impl>* _180954_ipl);
inline void _1a3c1e43e_implTrait(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3bb11e4_Impl>* _185131_decl);
inline void _1a3c1e6e7_implStruct(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3bb11e4_Impl>* _189432_decl);
inline void _1a3c1e9a0_implImpl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3bb11e4_Impl>* _191830_decl);
inline void _1a3c1ed13_checkVarDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3c31c26_Var>* _192934_decl, jule::Trait _192950_l);
inline void _1a3c200bb_checkGlobalVarDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3c31c26_Var>* _196640_decl);
inline jule::Bool _1a3c20352_checkGlobalDecls(jule::Ptr<_1a3c08b54_Sema> _self_);
inline jule::Bool _1a3c2074d_checkStructTraitImpl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b5e03d_Struct>* _199442_strct, jule::Ptr<_1a3b87a7d_Trait>* _199463_trt);
inline jule::Bool _1a3c20a8e_checkStructImpls(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b5e03d_Struct>* _201838_s);
inline jule::Bool _1a3c20dd0_checkStructFields(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b5e03d_Struct>* _202639_st);
inline void _1a3c21188_checkStructDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b5e03d_Struct>* _204337_s);
inline jule::Bool _1a3c2141e_checkStructDecls(jule::Ptr<_1a3c08b54_Sema> _self_);
inline void _1a3c216c7_checkAnonFuncDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b740ec_Fn>* _207339_f);
inline void _1a3c21980_checkFuncDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b740ec_Fn>* _207835_f);
inline jule::Bool _1a3c21cc1_checkFuncDeclsBy(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Slice<jule::Ptr<_1a3b740ec_Fn>>* _210038_funcs);
inline jule::Bool _1a3c22057_checkFuncDecls(jule::Ptr<_1a3c08b54_Sema> _self_);
inline void _1a3c22475_pushCycleError(_1a3c08b54_Sema* _self_, jule::Str* _211627_st1, jule::Str* _211638_st2, _1e7be2632_StrBuilder* _211653_message);
inline void _1a3c22b29_checkPackageDecls(jule::Ptr<_1a3c08b54_Sema> _self_);
inline void _1a3c22e8c_checkDataForTypeInference(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3c8982d_Data>* _217642_d, jule::Ptr<_1a3b27a62_Token>* _217653_err_token);
inline void _1a3c23245_checkVarValue(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3c31c26_Var>* _218835_v);
inline void _1a3c235a8_evalVarValue(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3c31c26_Var>* _224134_decl, jule::Trait _224150_l);
inline void _1a3c2391b_checkVar(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3c31c26_Var>* _225830_decl, jule::Trait _225846_l);
inline void _1a3c23b19_checkGlobals(jule::Ptr<_1a3c08b54_Sema> _self_);
inline jule::Ptr<_1a3b770cd_FnIns> _1a3c24015_readyToCheckFn(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _228236_s, jule::Ptr<_1a3b740ec_Fn>* _228256_f);
inline __jule_tuple_bool__jule_tuple_bool _1a3c24411_checkGenericFn(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b770cd_FnIns>* _229836_f, jule::Ptr<_1a3b27a62_Token>* _229852_et);
inline void _1a3c24774_checkTypeMethod(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _232137_s, jule::Ptr<_1a3b740ec_Fn>* _232157_f);
inline jule::Ptr<_1a3b770cd_FnIns> _1a3c24c2a_checkStructInsOp(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _233438_s, jule::Ptr<_1a3b740ec_Fn>* _233458_f, jule::Fn<jule::Bool,jule::Ptr<_1a3b740ec_Fn>> _233466_p);
inline jule::Bool _1a3c25126_checkStructEnv(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _234436_s, jule::Ptr<_1a3b27a62_Token> _234455_errorToken);
inline jule::Bool _1a3c25522_precheckStructIns(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _244139_s, jule::Ptr<_1a3b27a62_Token> _244158_errorToken);
inline void _1a3c257ca_checkStructIns(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _247736_s);
inline void _1a3c25a83_checkTypeStruct(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b5e03d_Struct>* _248337_s);
inline void _1a3c25c81_checkStructTypes(jule::Ptr<_1a3c08b54_Sema> _self_);
inline void _1a3c2ada7_checkStructInsOperators(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b61cbb_StructIns> _250744_s);
inline void _1a3c2b14e_precheckStructType(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b5e03d_Struct>* _257140_s);
inline void _1a3c2b34c_precheckStructTypes(jule::Ptr<_1a3c08b54_Sema> _self_);
inline void _1a3c2b605_checkRets(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b770cd_FnIns>* _259730_f);
inline void _1a3c2b968_checkFnInsSc(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b770cd_FnIns>* _260833_f, jule::Ptr<_1a3bbdb08_scopeChecker>* _260849_sc);
inline void _1a3c2bccb_checkFnInsCaller(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b770cd_FnIns>* _262138_f, jule::Ptr<_1a3b27a62_Token> _262153_caller);
inline void _1a3c2c084_checkFnIns(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b770cd_FnIns>* _264332_f);
inline void _1a3c2c33c_checkFunc(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b740ec_Fn>* _264731_f);
inline void _1a3c2c5e5_checkTestFn(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b770cd_FnIns>* _266232_f);
inline void _1a3c2c89d_precheckFunc(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b740ec_Fn>* _269534_f);
inline void _1a3c2ca9b_precheckFuncs(jule::Ptr<_1a3c08b54_Sema> _self_);
inline void _1a3c2cc99_checkFuncs(jule::Ptr<_1a3c08b54_Sema> _self_);
inline void _1a3c2ce97_checkPackageTypes(jule::Ptr<_1a3c08b54_Sema> _self_);
inline void _1a3c2d195_setFileSemaFields(jule::Ptr<_1a3c08b54_Sema> _self_);
inline void _1a3c2d393_setSemaFields(jule::Ptr<_1a3c08b54_Sema> _self_);
inline void _1a3c2d64b_check(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _277327_files);
inline _1a3c2da7a_missingRetChecker static__1a3c2de43_new(void);
inline jule::Bool _1a3c2e251_checkConditional(_1a3c2da7a_missingRetChecker* _self_, jule::Ptr<_1a3bb7283_Conditional> _282132_c);
inline jule::Bool _1a3c2e592_checkMatch(_1a3c2da7a_missingRetChecker* _self_, jule::Ptr<_1a3bba85d_Match> _283326_m);
inline jule::Bool _1a3c2e8d3_checkInfIter(_1a3c2da7a_missingRetChecker* _self_, jule::Ptr<_1a3bb7580_InfIter> _285928_it);
inline jule::Bool _1a3c2ec24_checkScope(_1a3c2da7a_missingRetChecker* _self_, jule::Ptr<_1a3bb664a_Scope> _287826_s);
inline jule::Bool _1a3c30065_check(_1a3c2da7a_missingRetChecker* _self_, jule::Ptr<_1a3bb664a_Scope> _292421_s);
inline jule::Bool _1a3c32100_IsInitialized(_1a3c31c26_Var* _self_);
inline jule::Bool _1a3c32386_IsTypeInferred(_1a3c31c26_Var* _self_);
inline jule::Bool _1a3c3261c_untypedConstant(_1a3c31c26_Var* _self_);
inline jule::Bool static__1a3c332ee_Dispose(jule::Ptr<_1a3b740ec_Fn> _1020_f);
inline jule::Bool static__1a3c335a7_Str(jule::Ptr<_1a3b740ec_Fn> _2416_f);
inline jule::Bool static__1a3c3392b_logical(jule::Ptr<_1a3b740ec_Fn>* _4621_f, jule::Str _4629_ident);
inline jule::Bool static__1a3c33be5_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _7215_f);
inline jule::Bool static__1a3c33eae_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _7715_f);
inline jule::Bool static__1a3c34278_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _8217_f);
inline jule::Bool static__1a3c34542_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _8715_f);
inline jule::Bool static__1a3c3480b_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _9217_f);
inline jule::Bool static__1a3c34b80_result(jule::Ptr<_1a3b740ec_Fn>* _9620_f, jule::Str _9628_ident);
inline jule::Bool static__1a3c34e49_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _11816_f);
inline jule::Bool static__1a3c35213_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _12316_f);
inline jule::Bool static__1a3c354cc_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _12816_f);
inline jule::Bool static__1a3c35796_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _13316_f);
inline jule::Bool static__1a3c35a60_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _13816_f);
inline jule::Bool static__1a3c35d29_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _14316_f);
inline jule::Bool static__1a3c360e3_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _14816_f);
inline jule::Bool static__1a3c363ac_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _15319_f);
inline jule::Bool static__1a3c36676_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _15818_f);
inline jule::Bool static__1a3c36940_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _16319_f);
inline jule::Bool static__1a3c36cb4_unary(jule::Ptr<_1a3b740ec_Fn>* _16719_f, jule::Str _16727_ident);
inline jule::Bool static__1a3c3707d_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _18716_f);
inline jule::Bool static__1a3c37347_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _19216_f);
inline jule::Bool static__1a3c37611_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _19719_f);
inline jule::Bool static__1a3c37985_assign(jule::Ptr<_1a3b740ec_Fn>* _20120_f, jule::Str _20128_ident);
inline jule::Bool static__1a3c37c4e_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _22122_f);
inline jule::Bool static__1a3c38018_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _22622_f);
inline jule::Bool static__1a3c382d2_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _23122_f);
inline jule::Bool static__1a3c3859b_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _23622_f);
inline jule::Bool static__1a3c38865_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _24122_f);
inline jule::Bool static__1a3c38b2e_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _24622_f);
inline jule::Bool static__1a3c38de8_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _25122_f);
inline jule::Bool static__1a3c391b2_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _25624_f);
inline jule::Bool static__1a3c3947b_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _26125_f);
inline jule::Bool static__1a3c39745_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _26625_f);
inline void _1a3c719e1_pushErr(_1a3c714e6_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args);
inline jule::Bool _1a3c71c77_checkTrait(_1a3c714e6_typeCompatibilityChecker* _self_);
inline jule::Bool _1a3c7200d_checkPtr(_1a3c714e6_typeCompatibilityChecker* _self_);
inline jule::Bool _1a3c72294_checkPrim(_1a3c714e6_typeCompatibilityChecker* _self_);
inline jule::Bool _1a3c72690_typeEnum(_1a3c714e6_typeCompatibilityChecker* _self_, jule::Ptr<_1a3b8b994_TypeEnum>* _19925_e, jule::Ptr<_1a3cbac27_TypeKind>* _19944_t2);
inline jule::Bool _1a3c72926_checkTypeEnum(_1a3c714e6_typeCompatibilityChecker* _self_);
inline jule::Bool _1a3c72bac_check(_1a3c714e6_typeCompatibilityChecker* _self_);
inline void _1a3c73729_pushErr(_1a3c73295_assignTypeChecker* _self_, jule::Str _25523_fmt, jule::Slice<jule::Any> _25536_args);
inline jule::Bool _1a3c739b0_checkValidity(_1a3c73295_assignTypeChecker* _self_);
inline jule::Bool _1a3c73c46_checkConst(_1a3c73295_assignTypeChecker* _self_);
inline jule::Bool _1a3c73ecc_checkCompatibility(_1a3c73295_assignTypeChecker* _self_);
inline jule::Bool _1a3c74263_check(_1a3c73295_assignTypeChecker* _self_);
inline jule::Bool _1a913a3e3_annotateConstraintElem(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _35746_k);
inline jule::Bool _1a9076de0_annotateConstraintElem(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _35746_k);
inline jule::Bool _1a9077b7c_annotateConstraintElem(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _35746_k);
inline jule::Bool _1a907cd6e_annotateConstraintElem(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _35746_k);
inline jule::Bool _1a3c75561_annotateConstraintMap(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _37742_k);
inline jule::Bool _1a3c758a2_annotateConstraintTup(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _39242_k);
inline jule::Bool _1a3c75be3_annotateConstraintFn(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _40941_k);
inline jule::Bool _1a3c76034_annotateConstraintIdent(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _43044_k);
inline jule::Bool _1a3c76375_annotateConstraint(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _45939_k);
inline void _1a3c766d8_pushGeneric(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _48432_k, jule::I64 _48446_i);
inline jule::Bool _1a3c76a29_annotatePrim(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _49940_k);
inline jule::Bool _1a3c76d6a_annotateArr(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _50339_k);
inline jule::Bool _1a3c771ab_annotateSlc(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _51339_k);
inline jule::Bool _1a3c775a7_checkMapKey(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _52338_k, jule::Ptr<_1a3cbac27_TypeKind>* _52358_ck);
inline jule::Bool _1a3c778e8_annotateMap(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _53139_k);
inline jule::Bool _1a3c77c39_annotateFn(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _54138_k);
inline jule::Bool _1a3c7807a_annotatePtr(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _57039_k);
inline jule::Bool _1a3c783bb_annotateSptr(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _58040_k);
inline jule::Bool _1a3c7870c_annotateStruct(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _59042_k);
inline jule::Bool _1a3c78a4d_annotateAny(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _61239_k);
inline jule::Bool _1a3c78d8e_annotateKind(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _63340_k);
inline jule::Bool _1a3c79125_annotate(_1a3c74b6a_dynamicTypeAnnotation* _self_);
inline void _1a3c7a038_pushErrToken(_1a3c799c7_fnCallArgChecker* _self_, jule::Ptr<_1a3b27a62_Token> _67828_token, jule::Str _67843_fmt, jule::Slice<jule::Any> _67856_args);
inline void _1a3c7a39b_pushErr(_1a3c799c7_fnCallArgChecker* _self_, jule::Str _68223_fmt, jule::Slice<jule::Any> _68236_args);
inline jule::Slice<jule::Ptr<_1a3b76055_ParamIns>> _1a3c7a632_getParams(_1a3c799c7_fnCallArgChecker* _self_);
inline jule::Bool _1a3c7a973_checkCounts(_1a3c799c7_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a3b76055_ParamIns>>* _69528_params);
inline jule::Bool _1a3c7ae29_checkArg(_1a3c799c7_fnCallArgChecker* _self_, jule::Ptr<_1a3b76055_ParamIns>* _72729_p, jule::Ptr<_1a3c8982d_Data>* _72748_arg, jule::Ptr<_1a3b27a62_Token>* _72765_errorToken);
inline jule::Bool _1a3c7b325_push(_1a3c799c7_fnCallArgChecker* _self_, jule::Ptr<_1a3b76055_ParamIns>* _75625_p, jule::Ptr<_1a3b42472_Expr> _75643_arg);
inline jule::Bool _1a3c7b721_pushVariadic(_1a3c799c7_fnCallArgChecker* _self_, jule::Ptr<_1a3b76055_ParamIns>* _78033_p, jule::I64 _78051_i);
inline jule::Bool _1a3c7ba62_checkArgs(_1a3c799c7_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a3b76055_ParamIns>>* _86130_params);
inline jule::Bool _1a3c7bce8_checkDynamicTypeAnnotation(_1a3c799c7_fnCallArgChecker* _self_);
inline jule::Bool _1a3c7c07e_check(_1a3c799c7_fnCallArgChecker* _self_);
inline void _1a3c7ce5e_pushErr(_1a3c7c90e_structLitChecker* _self_, jule::Ptr<_1a3b27a62_Token> _94123_token, jule::Str _94138_fmt, jule::Slice<jule::Any> _94151_args);
inline void _1a3c7d2c2_pushSuggestion(_1a3c7c90e_structLitChecker* _self_, jule::Str _94630_fmt, jule::Slice<jule::Any> _94643_args);
inline void _1a3c7d6e0_pushMatch(_1a3c7c90e_structLitChecker* _self_, jule::Ptr<_1a3b6121b_FieldIns>* _95030_f, jule::Ptr<_1a3c8982d_Data>* _95049_d, jule::Ptr<_1a3b27a62_Token>* _95064_errorToken);
inline void _1a3c7da53_checkPair(_1a3c7c90e_structLitChecker* _self_, jule::Ptr<_1a3b46b91_FieldExprPair>* _96930_pair, jule::Slice<jule::Ptr<_1a3b42472_Expr>>* _96957_exprs);
inline jule::Bool _1a3c7dd94_readyExprs(_1a3c7c90e_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a3b42472_Expr>>* _100831_exprs);
inline void _1a3c7e14c_check(_1a3c7c90e_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a3b42472_Expr>>* _103226_exprs);
inline jule::Ptr<_1a3c31c26_Var> _1a3c7ebca_buildVar(_1a3c7e6e1_rangeChecker* _self_, jule::Ptr<_1a3b50ea8_VarDecl>* _110825_decl);
inline void _1a3c7edc8_setSizeKey(_1a3c7e6e1_rangeChecker* _self_);
inline void _1a3c802e6_checkRangeExprValidity(_1a3c7e6e1_rangeChecker* _self_, jule::Ptr<_1a3c8982d_Data>* _112743_d, jule::Ptr<_1a3c31c26_Var>* _112754_key, jule::Ptr<_1a3cbac27_TypeKind>* _112770_k);
inline void _1a3c804e4_checkSlice(_1a3c7e6e1_rangeChecker* _self_);
inline void _1a3c806e2_checkArray(_1a3c7e6e1_rangeChecker* _self_);
inline void _1a3c808e0_checkMapKeyA(_1a3c7e6e1_rangeChecker* _self_);
inline void _1a3c80add_checkMapKeyB(_1a3c7e6e1_rangeChecker* _self_);
inline void _1a3c80cdb_checkMap(_1a3c7e6e1_rangeChecker* _self_);
inline void _1a3c80ed9_checkStr(_1a3c7e6e1_rangeChecker* _self_);
inline void _1a3c811d7_checkComptime(_1a3c7e6e1_rangeChecker* _self_);
inline jule::Bool _1a3c8146d_checkComptimeRange(_1a3c7e6e1_rangeChecker* _self_);
inline jule::Bool _1a3c81704_check(_1a3c7e6e1_rangeChecker* _self_);
inline void _1a3c82381_prepareTypes(_1a3c81e52_retTypeChecker* _self_);
inline void _1a3c82639_prepareExprs(_1a3c81e52_retTypeChecker* _self_, jule::Ptr<_1a3b42472_Expr>* _128533_e);
inline void _1a3c82837_checkExprs(_1a3c81e52_retTypeChecker* _self_);
inline jule::Bool _1a3c82abd_tryFuncMultiRetForward(_1a3c81e52_retTypeChecker* _self_);
inline jule::Bool _1a3c82e0e_check(_1a3c81e52_retTypeChecker* _self_, jule::Ptr<_1a3b42472_Expr>* _138426_e);
inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3c8499e_SelectPackage(_1a3c844b5_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>> _2729_selector);
inline jule::Ptr<_1a3c31c26_Var> _1a3c84d9a_FindVar(_1a3c844b5_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3c85296_FindTypeAlias(_1a3c844b5_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1a3b5e03d_Struct> _1a3c85692_FindStruct(_1a3c844b5_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1a3b740ec_Fn> _1a3c85a8d_FindFn(_1a3c844b5_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1a3b87a7d_Trait> _1a3c85dce_FindTrait(_1a3c844b5_SymbolTable* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1a3b8a289_Enum> _1a3c86220_FindEnum(_1a3c844b5_SymbolTable* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3c86561_FindTypeEnum(_1a3c844b5_SymbolTable* _self_, jule::Str _9728_ident);
inline jule::Ptr<_1a3c31c26_Var> _1a3c86b7c_findVar(_1a3c844b5_SymbolTable* _self_, jule::Str* _10824_ident, jule::Bool _10836_binded, jule::Bool _10850_reverse);
inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3c87133_findTypeAlias(_1a3c844b5_SymbolTable* _self_, jule::Str* _12730_ident, jule::Bool _12742_binded, jule::Bool _12756_reverse);
inline jule::Any _1a3c8752e_defByIdent(_1a3c844b5_SymbolTable* _self_, jule::Str* _14827_ident, jule::Bool _14839_binded);
inline jule::Bool _1a3c879d5_isDuplicatedIdent(_1a3c844b5_SymbolTable* _self_, jule::Uintptr _20129_itself, jule::Str* _20147_ident, jule::Bool _20159_binded);
inline jule::Bool _1a3c89c18_IsNil(_1a3c8982d_Data* _self_);
inline jule::Bool _1a3c89e9e_IsVoid(_1a3c8982d_Data* _self_);
inline jule::Bool _1a3c8a235_IsConst(_1a3c8982d_Data* _self_);
inline jule::Bool _1a3c8a576_GoodOperand(_1a3c8982d_Data* _self_, jule::Ptr<_1a3c8982d_Data>* _10528_other);
inline void _1a3c8baa5_pushErr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _13623_token, jule::Str _13638_fmt, jule::Slice<jule::Any> _13651_args);
inline void _1a3c8be18_pushSuggestion(_1a3c8b555_Eval* _self_, jule::Str _14130_fmt, jule::Slice<jule::Any> _14143_args);
inline void _1a3c8c116_allowBuiltin(_1a3c8b555_Eval* _self_);
inline void _1a3c8c314_disallowBuiltin(_1a3c8b555_Eval* _self_);
inline jule::Bool _1a3c8c59a_isUnsafe(_1a3c8b555_Eval* _self_);
inline jule::Bool _1a3c8c831_isGlobal(_1a3c8b555_Eval* _self_);
inline jule::Bool _1a3c8cb3e_applyNumericPrefix(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _16839_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3c8ce80_litStr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b4340c_LitExpr>* _20319_l);
inline jule::Ptr<_1a3c8982d_Data> _1a3c8d2c1_litRune(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b4340c_LitExpr>* _22020_l);
inline jule::Ptr<_1a3c8982d_Data> _1a3c8d612_litFloat(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b4340c_LitExpr>* _23921_l);
inline jule::Ptr<_1a3c8982d_Data> _1a3c8d953_litInt(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b4340c_LitExpr>* _25123_l);
inline jule::Ptr<_1a3c8982d_Data> _1a3c8dc94_litNum(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b4340c_LitExpr>* _30623_l);
inline jule::Ptr<_1a3c8982d_Data> _1a3c8e0d5_evalLit(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b4340c_LitExpr> _31523_lit);
inline jule::Any _1a3c8e426_findBuiltins(_1a3c8b555_Eval* _self_, jule::Str* _32829_ident);
inline jule::Any _1a3c8e822_getDef(_1a3c8b555_Eval* _self_, jule::Str* _35523_ident, jule::Bool _35535_binded);
inline jule::Ptr<_1a3b7a257_ReferenceStack> _1a3c8eaa8_getOwnerRefers(_1a3c8b555_Eval* _self_);
inline void _1a94a11d7_pushReference(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b770cd_FnIns>* _41037_ref);
inline void _1a94b7165_pushReference(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c31c26_Var>* _41037_ref);
inline void _1a90bbb8d_pushReference(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b61cbb_StructIns>* _41037_ref);
inline jule::Ptr<_1a3c8982d_Data> _1a3c901a2__evalEnum(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b8a289_Enum> _41725_enm);
inline jule::Ptr<_1a3c8982d_Data> _1a3c9059d_evalEnum(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b8a289_Enum> _42628_enm, jule::Ptr<_1a3b27a62_Token> _42640_errorToken);
inline jule::Ptr<_1a3c8982d_Data> _1a3c908de__evalTypeEnum(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b8b994_TypeEnum> _43529_enm);
inline jule::Ptr<_1a3c8982d_Data> _1a3c90cda_evalTypeEnum(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b8b994_TypeEnum> _44432_enm, jule::Ptr<_1a3b27a62_Token> _44448_errorToken);
inline jule::Ptr<_1a3c8982d_Data> _1a3c9112b__evalStruct(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b61cbb_StructIns> _45327_s);
inline jule::Ptr<_1a3c8982d_Data> _1a3c91527_evalStruct(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b61cbb_StructIns> _46730_s, jule::Ptr<_1a3b27a62_Token> _46745_errorToken);
inline jule::Ptr<_1a3c8982d_Data> _1a3c91868_evalFnIns(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b770cd_FnIns> _47725_f);
inline void _1a3c91bcb_checkDeprecated(_1a3c8b555_Eval* _self_, jule::Slice<jule::Ptr<_1a3b3c55a_Directive>>* _48636_directives, jule::Ptr<_1a3b27a62_Token> _48667_tok);
inline jule::Ptr<_1a3c8982d_Data> _1a3c920c7_evalFn(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b740ec_Fn> _50226_f, jule::Ptr<_1a3b27a62_Token> _50234_errorToken);
inline void _1a3c924e5_pushIllegalCycleError(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c31c26_Var>* _51638_v1, jule::Ptr<_1a3c31c26_Var>* _51649_v2, _1e7be2632_StrBuilder* _51664_message);
inline jule::Bool _1a3c928e1_checkCrossCycle(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c31c26_Var>* _52632_v, _1e7be2632_StrBuilder* _52646_message);
inline jule::Bool _1a3c92cdc_checkIllegalCycles(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c31c26_Var>* _54339_v, jule::Ptr<_1a3b27a62_Token> _54348_declToken);
inline jule::Ptr<_1a3c8982d_Data> _1a3c931d8_evalVar(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c31c26_Var> _57127_v, jule::Ptr<_1a3b27a62_Token> _57136_errorToken);
inline jule::Ptr<_1a3c8982d_Data> _1a3c935d4_evalTypeAlias(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cb9e35_TypeAlias> _67033_ta, jule::Ptr<_1a3b27a62_Token> _67049_errorToken);
inline jule::Ptr<_1a3c8982d_Data> _1a3c939d0_evalDef(_1a3c8b555_Eval* _self_, jule::Any* _70628_def, jule::Ptr<_1a3b27a62_Token> _70638_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3c93d21_evalIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b43c8c_IdentExpr> _73025_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3c94162_evalUnary(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b4452e_UnaryExpr> _73530_u);
inline jule::Ptr<_1a3c8982d_Data> _1a3c944a3_evalVariadic(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b44908_VariadicExpr> _74033_v);
inline jule::Ptr<_1a3c8982d_Data> _1a3c947e4_evalUnsafe(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b437d6_UnsafeExpr> _76231_u);
inline jule::Ptr<_1a3c8982d_Data> _1a3c94b35_evalArr(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b489c8_SliceExpr> _77028_s);
inline jule::Ptr<_1a3c8982d_Data> _1a3c950db_evalExpSlc(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b489c8_SliceExpr> _84731_s, jule::Ptr<_1a3cbac27_TypeKind> _84750_t, jule::Any _84768_first);
inline jule::Ptr<_1a3c8982d_Data> _1a3c9542c_evalSliceExpr(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b489c8_SliceExpr> _88534_s);
inline void _1a3c95790_checkIntegerIndexingByData(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _92047_d, jule::Ptr<_1a3b27a62_Token> _92061_token);
inline void _1a3c95bad_indexingPtr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _93232_d, jule::Ptr<_1a3c8982d_Data>* _93247_index, jule::Ptr<_1a3b49435_IndexingExpr>* _93266_i);
inline void _1a3c960cb_indexingArr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _94832_d, jule::Ptr<_1a3c8982d_Data>* _94847_index, jule::Ptr<_1a3b49435_IndexingExpr>* _94866_i);
inline void _1a3c964e9_indexingSlc(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _95832_d, jule::Ptr<_1a3c8982d_Data>* _95847_index, jule::Ptr<_1a3b49435_IndexingExpr>* _95866_i);
inline void _1a3c96917_indexingMap(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _98132_d, jule::Ptr<_1a3c8982d_Data>* _98147_index, jule::Ptr<_1a3b49435_IndexingExpr>* _98166_i);
inline void _1a3c96d35_indexingStr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _99732_d, jule::Ptr<_1a3c8982d_Data>* _99747_index, jule::Ptr<_1a3b49435_IndexingExpr>* _99766_i);
inline void _1a3c97253_toIndexing(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _102631_d, jule::Ptr<_1a3c8982d_Data>* _102646_index, jule::Ptr<_1a3b49435_IndexingExpr>* _102665_i);
inline jule::Bool _1a3c97709_pushGenericsFromExprSubIdent(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b45585_SubIdentExpr>* _105150_sexpr, jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>>* _10528_generics, jule::Ptr<_1a3b42472_Expr>* _105236_expr);
inline jule::Bool _1a3c97b05_pushGenericsFromData(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>>* _106242_generics, jule::Ptr<_1a3b42472_Expr>* _106270_expr);
inline void _1a3c97e68_evalIdentDeclFromIndexing(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3c8982d_Data>* _113247_d, jule::Ptr<_1a3b49435_IndexingExpr>* _113262_i);
inline __jule_tuple_bool__jule_tuple_bool _1a3c9841e_checkGenericFn(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b770cd_FnIns>* _117536_f, jule::Ptr<_1a3b27a62_Token>* _117552_et, jule::Any* _117569_model);
inline void _1a3c98782_evalFnGenericFromIndexing(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3c8982d_Data>* _119147_d, jule::Ptr<_1a3b49435_IndexingExpr>* _119162_i);
inline jule::Ptr<_1a3c8982d_Data> _1a3c98ac3_evalIndexing(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b49435_IndexingExpr> _123133_i);
inline __jule_tuple_x_1a3c8982d_Data__jule_tuple_x_1a3c8982d_Data _1a3c98e14_evalSlicingExprs(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b49a95_SlicingExpr>* _128538_s);
inline void _1a3c991bc_slicingArr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _132127_d);
inline void _1a3c995da_slicingStr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _133627_d, jule::Ptr<_1a3c8982d_Data>* _133638_l, jule::Ptr<_1a3c8982d_Data>* _133649_r);
inline void _1a3c99ab3_checkSlicing(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _137433_d, jule::Ptr<_1a3c8982d_Data>* _137444_l, jule::Ptr<_1a3c8982d_Data>* _137455_r, jule::Ptr<_1a3b49a95_SlicingExpr>* _137466_s);
inline jule::Ptr<_1a3c8982d_Data> _1a3c99e04_evalSlicing(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b49a95_SlicingExpr> _139332_s);
inline void _1a3c9a322_castPtr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind> _143027_t, jule::Ptr<_1a3c8982d_Data> _143045_d, jule::Ptr<_1a3b27a62_Token> _143055_errorToken);
inline void _1a3c9a740_castStruct(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind> _145230_t, jule::Ptr<_1a3c8982d_Data> _145248_d, jule::Ptr<_1a3b27a62_Token> _145258_errorToken);
inline void _1a3c9ab5d_castRef(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind> _146927_t, jule::Ptr<_1a3c8982d_Data> _146945_d, jule::Ptr<_1a3b27a62_Token> _146955_errorToken);
inline void _1a3c9b07b_castSlc(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind> _149227_t, jule::Ptr<_1a3c8982d_Data> _149245_d, jule::Ptr<_1a3b27a62_Token> _149255_errorToken);
inline void _1a3c9b3de_castStr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data> _154727_d, jule::Ptr<_1a3b27a62_Token> _154737_errorToken);
inline void _1a3c9b80c_castInt(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind> _159427_t, jule::Ptr<_1a3c8982d_Data> _159445_d, jule::Ptr<_1a3b27a62_Token> _159455_errorToken);
inline void _1a3c9bc2a_castNum(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind> _164027_t, jule::Ptr<_1a3c8982d_Data> _164045_d, jule::Ptr<_1a3b27a62_Token> _164055_errorToken);
inline void _1a3c9c148_castPrim(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind> _167128_t, jule::Ptr<_1a3c8982d_Data> _167146_d, jule::Ptr<_1a3b27a62_Token> _167156_errorToken);
inline void _1a3c9c4ab_castConstant(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _168933_t, jule::Ptr<_1a3c8982d_Data>* _168952_d);
inline void _1a3c9c8c9_castTypeEnum(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _169833_t, jule::Ptr<_1a3c8982d_Data>* _169852_d, jule::Ptr<_1a3b27a62_Token>* _169867_errorToken);
inline void _1a3c9cce7_castTypeEnumT(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _170834_t, jule::Ptr<_1a3c8982d_Data>* _170853_d, jule::Ptr<_1a3b27a62_Token>* _170868_errorToken);
inline jule::Ptr<_1a3c8982d_Data> _1a3c9d29d_evalCastByTypeNData(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind> _171839_t, jule::Ptr<_1a3c8982d_Data> _171857_d, jule::Ptr<_1a3b27a62_Token> _171871_errorToken);
inline jule::Ptr<_1a3c8982d_Data> _1a3c9d754_evalCastT(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3cbac27_TypeKind>* _179131_t, jule::Ptr<_1a3b42472_Expr>* _179150_e, jule::Ptr<_1a3b27a62_Token>* _179165_et);
inline jule::Ptr<_1a3c8982d_Data> _1a3c9da95_evalCast(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b44cd2_CastExpr> _180829_c);
inline jule::Ptr<_1a3c8982d_Data> _1a3c9ddd6_evalNsSelection(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b451ab_NsSelectionExpr> _181731_s);
inline jule::Ptr<_1a3c8982d_Data> _1a3c9e38c_evalStructLitExplicit(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b61cbb_StructIns> _184342_s, jule::Slice<jule::Ptr<_1a3b42472_Expr>> _18447_exprs, jule::Ptr<_1a3b27a62_Token> _184427_errorToken);
inline jule::Ptr<_1a3c8982d_Data> _1a3c9e6cd_evalStructLit(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b474bb_StructLit> _188134_lit);
inline _1a3cccad5_typeChecker _1a3c9e964_typeChecker(_1a3c8b555_Eval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3c9eca5_evalType(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b3d13d_TypeDecl> _191328_t);
inline void _1a3ca0118_callTypeFn(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b4619b_FnCallExpr>* _192632_fc, jule::Ptr<_1a3c8982d_Data>* _192654_d);
inline void _1a3ca047b_callBuiltinFn(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b4619b_FnCallExpr>* _195235_fc, jule::Ptr<_1a3c8982d_Data>* _195257_d);
inline void _1a3ca07de_checkFnOfConcurrentCall(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b770cd_FnIns>* _196440_f, jule::Ptr<_1a3b27a62_Token> _196451_errorToken);
inline void _1a3ca0c0c_processExceptionalHandler(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b770cd_FnIns>* _198346_f, jule::Ptr<_1a3b4619b_FnCallExpr>* _198362_fc, jule::Ptr<_1a3c8982d_Data>* _198384_d);
inline void _1a3ca1070_callFn(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b4619b_FnCallExpr>* _201028_fc, jule::Ptr<_1a3c8982d_Data>* _201050_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca13b1_evalFnCall(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b4619b_FnCallExpr> _216331_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca17ac_evalEnumStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b8a289_Enum> _219634_enm, jule::Ptr<_1a3b27a62_Token> _219650_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca1ba8_evalTypeEnumStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b8b994_TypeEnum> _220438_enm, jule::Ptr<_1a3b27a62_Token> _220454_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca20a4_evalStructStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b61cbb_StructIns> _222736_s, jule::Ptr<_1a3b27a62_Token> _222751_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca255a_evalTraitSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data> _226237_d, jule::Ptr<_1a3b87a7d_Trait> _226251_trt, jule::Ptr<_1a3b27a62_Token> _226268_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca2abb_evalStructSubIdentField(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _228244_d, jule::Ptr<_1a3b61cbb_StructIns>* _228259_s, jule::Ptr<_1a3b27a62_Token>* _228279_tok, jule::Ptr<_1a3b6121b_FieldIns>* _228297_f);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca312c_evalStructSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data> _230538_d, jule::Ptr<_1a3b61cbb_StructIns> _230552_s, jule::Ptr<_1a3b45585_SubIdentExpr> _230571_si, jule::Bool _230590_ref);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca346d_evalIntTypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _234633_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca37ae_evalUintTypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _237334_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca3b00_evalI8TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _239132_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca3e41_evalI16TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _242033_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca4282_evalI32TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _244933_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca45c3_evalI64TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _247833_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca4914_evalU8TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _250732_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca4c55_evalU16TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _252633_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca5096_evalU32TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _254533_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca53d7_evalU64TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _256433_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca5728_evalF32TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _258333_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca5a69_evalF64TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _262233_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca5e65_evalPrimStatic(_1a3c8b555_Eval* _self_, jule::Str _266130_kind, jule::Ptr<_1a3b27a62_Token> _266141_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca6361_evalTypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data> _269334_d, jule::Ptr<_1a3b45585_SubIdentExpr> _269348_si);
inline jule::Ptr<_1a3c8982d_Data> _1a9773564_comptimeObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b9e4ac_comptimeTypeInfo>* _270954_ct, jule::Ptr<_1a3c8982d_Data>* _270974_d, jule::Ptr<_1a3b45585_SubIdentExpr>* _270985_si);
inline jule::Ptr<_1a3c8982d_Data> _1a9777bb7_comptimeObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b90657_comptimeStructField>* _270954_ct, jule::Ptr<_1a3c8982d_Data>* _270974_d, jule::Ptr<_1a3b45585_SubIdentExpr>* _270985_si);
inline jule::Ptr<_1a3c8982d_Data> _1a977c2c6_comptimeObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b96bbe_comptimeEnumField>* _270954_ct, jule::Ptr<_1a3c8982d_Data>* _270974_d, jule::Ptr<_1a3b45585_SubIdentExpr>* _270985_si);
inline jule::Ptr<_1a3c8982d_Data> _1a9781929_comptimeObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b99661_comptimeParam>* _270954_ct, jule::Ptr<_1a3c8982d_Data>* _270974_d, jule::Ptr<_1a3b45585_SubIdentExpr>* _270985_si);
inline jule::Ptr<_1a3c8982d_Data> _1a97862ad_comptimeObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b93913_comptimeStatic>* _270954_ct, jule::Ptr<_1a3c8982d_Data>* _270974_d, jule::Ptr<_1a3b45585_SubIdentExpr>* _270985_si);
inline jule::Ptr<_1a3c8982d_Data> _1a978a8bc_comptimeObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3ba59be_comptimeValue>* _270954_ct, jule::Ptr<_1a3c8982d_Data>* _270974_d, jule::Ptr<_1a3b45585_SubIdentExpr>* _270985_si);
inline jule::Ptr<_1a3c8982d_Data> _1a978eecb_comptimeObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3ba9918_comptimeFile>* _270954_ct, jule::Ptr<_1a3c8982d_Data>* _270974_d, jule::Ptr<_1a3b45585_SubIdentExpr>* _270985_si);
inline __jule_tuple_x_1a3c8982d_Data__jule_tuple_bool _1a3ca6c13_tryComptimeObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _271743_d, jule::Ptr<_1a3b45585_SubIdentExpr> _271757_si);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca710e_evalObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data> _274535_d, jule::Ptr<_1a3b45585_SubIdentExpr> _274549_si);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca7450_evalSubIdent(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b45585_SubIdentExpr> _278933_si);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca7791_evalTuple(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b43066_TupleExpr> _280330_tup);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca7b8c_evalMap(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3cc9494_Map> _283228_m, jule::Ptr<_1a3b47972_BraceLit> _283241_lit);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca7ecd_evalBraceLit(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b47972_BraceLit> _288133_lit);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca831e_evalAnonFunc(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b4eced_FnDecl> _289633_decl);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca8660_evalBinary(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b45a3b_BinaryExpr> _293431_op);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca89a1_evalExprKind(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Any _294933_kind);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca8ce2_eval1(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b42472_Expr> _299726_expr);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca9133_eval(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b42472_Expr> _302525_expr);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca9474_evalExpr1(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b42472_Expr> _304030_expr);
inline jule::Ptr<_1a3c8982d_Data> _1a3ca97b5_evalExpr(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b42472_Expr> _305629_expr);
inline _1a3ca9c7c_unaryEval static__1a3caa1bc_new(jule::Ptr<_1a3c8b555_Eval> _307720_e);
inline void _1a3caa3ba_minus(_1a3ca9c7c_unaryEval* _self_);
inline void _1a3caa5b8_plus(_1a3ca9c7c_unaryEval* _self_);
inline void _1a3caa7b6_caret(_1a3ca9c7c_unaryEval* _self_);
inline void _1a3caa9b4_excl(_1a3ca9c7c_unaryEval* _self_);
inline void _1a3caabb2_star(_1a3ca9c7c_unaryEval* _self_);
inline void _1a3caadb0_amper(_1a3ca9c7c_unaryEval* _self_);
inline void _1a3cab0ad_typeDecl(_1a3ca9c7c_unaryEval* _self_);
inline void _1a3cab2ab_evalData(_1a3ca9c7c_unaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3cab5ec_eval(_1a3ca9c7c_unaryEval* _self_, jule::Ptr<_1a3b4452e_UnaryExpr> _333724_u);
inline _1a3cabc18_binaryEval static__1a3cac2bd_newPlain(jule::Ptr<_1a3c8b555_Eval> _338525_e);
inline _1a3cabc18_binaryEval static__1a3cac642_new(jule::Ptr<_1a3c8b555_Eval> _339120_e, jule::Ptr<_1a3b27a62_Token> _339134_op);
inline jule::Bool _1a3cac8c8_checkTypeCompatibility(_1a3cabc18_binaryEval* _self_);
inline jule::Bool _1a3cacb5e_checkStructCommonOperatorCompatibility(_1a3cabc18_binaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3cacde5_evalComptimeTypeInfo(_1a3cabc18_binaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3cad17b_evalNil(_1a3cabc18_binaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3cad412_evalEnum(_1a3cabc18_binaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3cad698_evalTypeEnum(_1a3cabc18_binaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3cad92e_evalSptr(_1a3cabc18_binaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3cadbb5_evalPtr(_1a3cabc18_binaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3cade4b_evalArr(_1a3cabc18_binaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3cae1d2_evalSlc(_1a3cabc18_binaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3cae468_evalStruct(_1a3cabc18_binaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3cae6ee_evalTrait(_1a3cabc18_binaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3cae985_evalAny(_1a3cabc18_binaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3caec1b_evalBool(_1a3cabc18_binaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3caeea2_evalStr(_1a3cabc18_binaryEval* _self_);
inline void _1a3cb01a0_setTypeToGreater(_1a3cabc18_binaryEval* _self_);
inline void _1a3cb0458_checkModData(_1a3cabc18_binaryEval* _self_, jule::Ptr<_1a3c8982d_Data>* _382133_d);
inline void _1a3cb0656_mod(_1a3cabc18_binaryEval* _self_);
inline jule::Bool _1a3cb0a52_numbersAreCompatibile(_1a3cabc18_binaryEval* _self_, jule::Str* _384334_lk, jule::Str* _384344_rk);
inline jule::Ptr<_1a3c8982d_Data> _1a3cb0cd8_evalFloat(_1a3cabc18_binaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3cb106e_evalInt(_1a3cabc18_binaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3cb1305_evalPrim(_1a3cabc18_binaryEval* _self_);
inline void _1a3cb1503_checkSpecialCases(_1a3cabc18_binaryEval* _self_);
inline jule::Ptr<_1a3c8982d_Data> _1a3cb1789_evalOp(_1a3cabc18_binaryEval* _self_);
inline void _1a3cb1a42_evalConst(_1a3cabc18_binaryEval* _self_, jule::Ptr<_1a3c8982d_Data>* _408130_d);
inline void _1a3cb1cea_checkData(_1a3cabc18_binaryEval* _self_, jule::Ptr<_1a3c8982d_Data>* _415930_d);
inline void _1a3cb1ee8_checkDatas(_1a3cabc18_binaryEval* _self_);
inline void _1a3cb22a1_setModel(_1a3cabc18_binaryEval* _self_, jule::Ptr<_1a3c8982d_Data>* _417129_d);
inline void _1a3cb2559_postEval(_1a3cabc18_binaryEval* _self_, jule::Ptr<_1a3c8982d_Data>* _419829_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3cb2955_solveExplicit(_1a3cabc18_binaryEval* _self_, jule::Ptr<_1a3c8982d_Data>* _420334_l, jule::Ptr<_1a3c8982d_Data>* _420349_r);
inline jule::Ptr<_1a3c8982d_Data> _1a3cb2c96_eval(_1a3cabc18_binaryEval* _self_, jule::Ptr<_1a3b45a3b_BinaryExpr>* _422325_op);
inline jule::Str _1a3cbb0e0_Str(_1a3cbac27_TypeKind* _self_);
inline jule::Bool _1a3cbb431_Equal(jule::Ptr<_1a3cbac27_TypeKind> _self_, jule::Ptr<_1a3cbac27_TypeKind> _9018_other);
inline jule::Bool _1a3cbba6e_Binded(_1a3cbac27_TypeKind* _self_);
inline jule::Bool _1a3cbbd05_IsNil(_1a3cbac27_TypeKind* _self_);
inline jule::Bool _1a3cbc08b_Void(_1a3cbac27_TypeKind* _self_);
inline jule::Bool _1a3cbc322_Comparable(_1a3cbac27_TypeKind* _self_);
inline jule::Bool _1a3cbc5a8_Mutable(_1a3cbac27_TypeKind* _self_);
inline jule::Bool _1a3cbc83e_Ordered(_1a3cbac27_TypeKind* _self_);
inline jule::Bool _1a3cbcac5_NilCompatible(_1a3cbac27_TypeKind* _self_);
inline jule::Bool _1a3cbcd5b_PerformsRC(_1a3cbac27_TypeKind* _self_);
inline jule::Bool _1a3cbd0e2_Variadicable(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3cc3801_Prim> _1a3cbd378_Prim(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3cc732c_Sptr> _1a3cbd60e_Sptr(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3ccaae4_Ptr> _1a3cbd895_Ptr(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3b8a289_Enum> _1a3cbdb2b_Enum(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3cbddb2_TypeEnum(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3cca121_Arr> _1a3cbe148_Arr(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3cc7d00_Slc> _1a3cbe3ce_Slc(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3b770cd_FnIns> _1a3cbe665_Fn(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3b61cbb_StructIns> _1a3cbe8eb_Struct(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3b87a7d_Trait> _1a3cbeb82_Trait(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3cc9494_Map> _1a3cbee18_Map(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3cc88e4_Tuple> _1a3cc019e_Tup(_1a3cbac27_TypeKind* _self_);
inline jule::Bool _1a3cc0435_comptime(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3b92318_comptimeStructFields> _1a3cc06bb_comptimeStructFields(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3b90657_comptimeStructField> _1a3cc0952_comptimeStructField(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3b98066_comptimeEnumFields> _1a3cc0bd8_comptimeEnumFields(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3b96bbe_comptimeEnumField> _1a3cc0e6e_comptimeEnumField(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3b9b7ea_comptimeParams> _1a3cc1205_comptimeParams(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3b99661_comptimeParam> _1a3cc148b_comptimeParam(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3b8eb84_comptimeRange> _1a3cc1722_comptimeRange(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3b9cdb2_comptimeTypeInfos> _1a3cc19a8_comptimeTypeInfos(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _1a3cc1c3e_comptimeTypeInfo(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3b955c4_comptimeStatics> _1a3cc1ec5_comptimeStatics(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3b93913_comptimeStatic> _1a3cc225b_comptimeStatic(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3ba59be_comptimeValue> _1a3cc24e2_comptimeValue(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3ba9918_comptimeFile> _1a3cc2778_comptimeFile(_1a3cbac27_TypeKind* _self_);
inline jule::Ptr<_1a3ba831d_comptimeFiles> _1a3cc2a0e_comptimeFiles(_1a3cbac27_TypeKind* _self_);
inline jule::Bool _1a3cc326d_checked(_1a3cc2de9_TypeSymbol* _self_);
inline jule::Str _1a3cc3b42_Str(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc3e83_Equal(jule::Ptr<_1a3cc3801_Prim> _self_, jule::Ptr<_1a3cbac27_TypeKind> _50818_other);
inline jule::Bool _1a3cc4428_IsConstraint(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc46ae_IsI8(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc4945_IsI16(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc4bcb_IsI32(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc4e62_IsI64(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc51e8_IsU8(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc547e_IsU16(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc5715_IsU32(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc599b_IsU64(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc5c32_IsF32(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc5eb8_IsF64(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc624e_IsInt(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc64d5_IsUint(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc676b_IsUintptr(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc6a02_IsBool(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc6c88_IsStr(_1a3cc3801_Prim* _self_);
inline jule::Bool _1a3cc701e_IsAny(_1a3cc3801_Prim* _self_);
inline jule::Str _1a3cc76a1_Str(_1a3cc732c_Sptr* _self_);
inline jule::Bool _1a3cc79e2_Equal(jule::Ptr<_1a3cc732c_Sptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _58518_other);
inline jule::Str _1a3cc8284_Str(_1a3cc7d00_Slc* _self_);
inline jule::Bool _1a3cc85c5_Equal(jule::Ptr<_1a3cc7d00_Slc> _self_, jule::Ptr<_1a3cbac27_TypeKind> _60418_other);
inline jule::Str _1a3cc8c68_Str(_1a3cc88e4_Tuple* _self_);
inline jule::Bool _1a3cc90a9_Equal(jule::Ptr<_1a3cc88e4_Tuple> _self_, jule::Ptr<_1a3cbac27_TypeKind> _63318_other);
inline jule::Str _1a3cc9818_Str(_1a3cc9494_Map* _self_);
inline jule::Bool _1a3cc9b59_Equal(jule::Ptr<_1a3cc9494_Map> _self_, jule::Ptr<_1a3cbac27_TypeKind> _67018_other);
inline jule::Str _1a3cca495_Str(_1a3cca121_Arr* _self_);
inline jule::Bool _1a3cca7d6_Equal(jule::Ptr<_1a3cca121_Arr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _69818_other);
inline jule::Str _1a3ccae68_Str(_1a3ccaae4_Ptr* _self_);
inline jule::Bool _1a3ccb2a9_Equal(jule::Ptr<_1a3ccaae4_Ptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _72218_other);
inline jule::Bool _1a3ccb62d_IsUnsafe(_1a3ccaae4_Ptr* _self_);
inline void _1a3ccd322_pushErr(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b27a62_Token> _81223_token, jule::Str _81238_fmt, jule::Slice<jule::Any> _81251_args);
inline void _1a3ccd520_allowBuiltin(_1a3cccad5_typeChecker* _self_);
inline void _1a3ccd71d_disallowBuiltin(_1a3cccad5_typeChecker* _self_);
inline void _1a9acde30_pushReference(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b61cbb_StructIns>* _82437_t);
inline void _1a9ad1828_pushReference(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b87a7d_Trait>* _82437_t);
inline void _1a3ccdc7e_pushReferenceByKind(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _83440_k);
inline void _1a3cce19c_pushCycleError(_1a3cccad5_typeChecker* _self_, jule::Any _84526_def1, jule::Any _84537_def2, _1e7be2632_StrBuilder* _84553_message);
inline jule::Bool _1a3cce598_checkCrossCycle(_1a3cccad5_typeChecker* _self_, jule::Any _86727_decl, _1e7be2632_StrBuilder* _86743_message);
inline jule::Bool _1a3cce994_checkIllegalCycles(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl>* _90135_ident, jule::Any _90162_decl);
inline jule::Trait _1a3cced90_fromTypeAlias(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl>* _95130_decl, jule::Ptr<_1a3cb9e35_TypeAlias>* _95157_ta);
inline jule::Ptr<_1a3b8a289_Enum> _1a3cd028b_fromEnum(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl>* _102525_decl, jule::Ptr<_1a3b8a289_Enum>* _102552_e);
inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3cd0687_fromTypeEnum(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl>* _103729_decl, jule::Ptr<_1a3b8b994_TypeEnum>* _103756_e);
inline jule::Ptr<_1a3b87a7d_Trait> _1a3cd0a83_fromTrait(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl>* _104926_decl, jule::Ptr<_1a3b87a7d_Trait>* _104953_t);
inline jule::Bool _1a3cd0e7e_checkStructIns(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b61cbb_StructIns>* _106235_ins, jule::Ptr<_1a3b27a62_Token>* _106257_errorToken);
inline void _1a3cd1237_appendUsedStructReference(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b5e03d_Struct>* _108346_s);
inline jule::Ptr<_1a3b61cbb_StructIns> _1a3cd1633_buildStructInstance(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl>* _109640_decl, jule::Ptr<_1a3b5e03d_Struct>* _109667_s);
inline jule::Ptr<_1a3b61cbb_StructIns> _1a3cd1a2e_fromStruct(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl>* _114431_decl, jule::Ptr<_1a3b5e03d_Struct>* _114458_s);
inline jule::Trait _1a3cd1d70_getDef(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl>* _120227_decl);
inline jule::Trait _1a3cd21b1_buildIdent(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl> _126330_decl);
inline jule::Trait _1a3cd2502_buildSubIdent(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3da12_SubIdentTypeDecl> _126733_decl);
inline jule::Ptr<_1a3cc732c_Sptr> _1a3cd2843_buildSptrFromType(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _130138_elem);
inline jule::Ptr<_1a3cc732c_Sptr> _1a3cd2b84_buildSptr(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3e1d8_SptrTypeDecl> _132129_decl);
inline jule::Ptr<_1a3ccaae4_Ptr> _1a3cd2ec5_buildPtrFromType(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _133037_elem);
inline jule::Ptr<_1a3ccaae4_Ptr> _1a3cd3316_buildPtr(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3eb67_PtrTypeDecl> _134528_decl);
inline jule::Ptr<_1a3cc7d00_Slc> _1a3cd3657_buildSlc(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3e56d_SlcTypeDecl> _136228_decl);
inline jule::Ptr<_1a3cca121_Arr> _1a3cd3998_buildArr(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b40409_ArrTypeDecl> _138328_decl);
inline jule::Ptr<_1a3cc9494_Map> _1a3cd3cd9_buildMap(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b40b57_MapTypeDecl> _143228_decl);
inline jule::Ptr<_1a3cc88e4_Tuple> _1a3cd412a_buildTuple(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3e86a_TupleTypeDecl> _145630_decl);
inline jule::Bool _1a3cd446b_checkFuncTypes(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b770cd_FnIns>* _146935_f);
inline jule::Ptr<_1a3b770cd_FnIns> _1a3cd47ac_buildFunc(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b4eced_FnDecl> _148729_decl);
inline jule::Trait _1a3cd4aed_buildByNamespace(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3dddb_NamespaceTypeDecl> _151736_decl);
inline jule::Ptr<_1a3cbac27_TypeKind> _1a3cd4e3e_build(_1a3cccad5_typeChecker* _self_, jule::Any* _154126_declKind);
inline jule::Ptr<_1a3cbac27_TypeKind> _1a3cd5280_checkDecl(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d13d_TypeDecl>* _162930_decl);
inline jule::Bool static__1a3cd5bcb_prim(jule::Str* _165618_ident, jule::Ptr<_1a3cc3801_Prim> _165630_t);
inline jule::Bool static__1a3cd6050_exist(jule::Str* _166019_ident, jule::Ptr<_1a3cbac27_TypeKind>* _166036_k);
inline void _1a55ed118_stop(_1a55ec997_scopeParser* _self_);
inline jule::Bool _1a55ed39e_stopped(_1a55ec997_scopeParser* _self_);
inline jule::Bool _1a55ed635_finished(_1a55ec997_scopeParser* _self_);
inline jule::Bool _1a55ed8bb_isLastSt(_1a55ec997_scopeParser* _self_);
inline void _1a55edc2e_pushErr(_1a55ec997_scopeParser* _self_, jule::Ptr<_1a3b27a62_Token> _18823_token, jule::Str _18838_fmt);
inline void _1a55ee092_pushSuggestion(_1a55ec997_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args);
inline void _1a55ee34a_insertAsNext(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _19733_tokens);
inline jule::Ptr<_1a55ec106_stmt> _1a55ee5d1_next(_1a55ec997_scopeParser* _self_);
inline jule::Ptr<_1a3b4d15e_ScopeTree> _1a55ee9cc_buildScope(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _20731_tokens, jule::Ptr<_1a3b27a62_Token> _20753_end);
inline jule::Ptr<_1a3b50ea8_VarDecl> _1a55eed1d_buildVarSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _21831_tokens);
inline jule::Ptr<_1a3b51382_RetSt> _1a560015e_buildRetSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _22630_tokens);
inline jule::Ptr<_1a3b51b02_Iter> _1a56004a0_buildWhileNextIter(_1a55ec997_scopeParser* _self_, jule::Ptr<_1a55ec106_stmt>* _23739_s);
inline jule::Ptr<_1a3b5242c_WhileKind> _1a56007e1_buildWhileIterKind(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _28239_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _1a5600b32_getRangeKindKeysTokens(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _28843_toks);
inline jule::Ptr<_1a3b50ea8_VarDecl> _1a5600e73_buildRangeKindKey(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _29438_tokens);
inline jule::Slice<jule::Ptr<_1a3b50ea8_VarDecl>> _1a56012b4_buildRangeKindKeys(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>>* _32039_parts);
inline void _1a5601627_setupRangeKindKeysPlain(_1a55ec997_scopeParser* _self_, jule::Ptr<_1a3b52d34_RangeKind>* _32844_rng, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _32866_tokens);
inline void _1a560198a_setupRangeKindKeysExplicit(_1a55ec997_scopeParser* _self_, jule::Ptr<_1a3b52d34_RangeKind>* _34347_rng, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _34369_tokens);
inline void _1a5601ced_setupRangeKindKeys(_1a55ec997_scopeParser* _self_, jule::Ptr<_1a3b52d34_RangeKind>* _35239_rng, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _35261_tokens);
inline jule::Ptr<_1a3b52d34_RangeKind> _1a56022a4_buildRangeIterKind(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _36039_var_tokens, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _3618_exprTokens, jule::Ptr<_1a3b27a62_Token>* _36135_inToken);
inline jule::Any _1a56026a0_buildCommonIterKind(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _37640_tokens, jule::Ptr<_1a3b27a62_Token>* _37659_err_tok);
inline jule::Ptr<_1a3b51b02_Iter> _1a56029e1_buildCommonIter(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _40335_tokens);
inline jule::Ptr<_1a3b51b02_Iter> _1a5602d32_buildIterSt(_1a55ec997_scopeParser* _self_, jule::Ptr<_1a55ec106_stmt>* _43332_st);
inline jule::Ptr<_1a3b5320d_BreakSt> _1a5603173_buildBreakSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _44033_tokens);
inline jule::Ptr<_1a3b535d7_ContSt> _1a56034b4_buildContSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _45832_tokens);
inline jule::Ptr<_1a3b53a8d_If> _1a5603805_buildIf(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _47628_tokens);
inline jule::Ptr<_1a3b53e67_Else> _1a5603b46_buildElse(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _50930_tokens);
inline jule::Ptr<_1a3b5441d_Conditional> _1a5603e87_buildIfElseChain(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _53336_tokens);
inline jule::Ptr<_1a3b42472_Expr> _1a56042c8_buildCoCallSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _55633_tokens);
inline jule::Ptr<_1a3b4aaeb_GotoSt> _1a5604619_buildGotoSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _57232_tokens);
inline jule::Ptr<_1a3b4ade8_FallSt> _1a560495a_buildFallSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _59232_tokens);
inline jule::Ptr<_1a3b54b5a_TypeAliasDecl> _1a5604c9b_buildTypeAliasSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _60237_tokens);
inline void _1a5605274_pushCaseExpr(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _60832_tokens, jule::Ptr<_1a3b27a62_Token> _60854_token, jule::Bool _6093_typeMatch, jule::Slice<jule::Ptr<_1a3b42472_Expr>>* _60925_exprs);
inline __jule_tuple_sx_1a3b42472_Expr__jule_tuple_bool _1a560572a_buildCaseExprs(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _63135_tokens, jule::Ptr<_1a3b27a62_Token>* _63158_colon, jule::Bool _63173_typeMatch);
inline jule::Ptr<_1a3b4d15e_ScopeTree> _1a5605a6b_buildCaseScope(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _67335_tokens);
inline __jule_tuple_x_1a3b55111_Case__jule_tuple_bool _1a5605e67_buildCase(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _70030_tokens, jule::Bool _70048_typeMatch);
inline __jule_tuple_sx_1a3b55111_Case__jule_tuple_x_1a3b53e67_Else _1a5606363_buildCases(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _71530_tokens, jule::Bool _71548_typeMatch);
inline jule::Ptr<_1a3b5592a_MatchCase> _1a56066a4_buildMatchCase(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _74934_tokens);
inline jule::Ptr<_1a3b4d15e_ScopeTree> _1a56069e5_buildScopeSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _78232_tokens);
inline jule::Ptr<_1a3b4a722_LabelSt> _1a5606d36_buildLabelSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _82533_tokens);
inline __jule_tuple__1a3b4c79b_StmtData__jule_tuple_bool _1a5607177_buildIdSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _84030_tokens);
inline jule::Ptr<_1a5617b27_assignInfo> _1a56074b8_buildAssignInfo(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _85436_tokens);
inline jule::Ptr<_1a3b4b558_AssignLeft> _1a5607809_buildAssignL(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _89933_tokens);
inline jule::Slice<jule::Ptr<_1a3b4b558_AssignLeft>> _1a5607b4a_buildAssignLs(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>>* _91034_parts);
inline __jule_tuple__1a3b4c79b_StmtData__jule_tuple_bool _1a5607e8b_buildPlainAssign(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _91937_tokens);
inline jule::Bool _1a5608387_buildDeclAssign1(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _96937_lefts, jule::Ptr<_1a3b4badb_AssignSt>* _96959_assign);
inline __jule_tuple_x_1a3b4badb_AssignSt__jule_tuple_bool _1a56086c8_buildDeclAssign(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _101435_tokens);
inline __jule_tuple__1a3b4c79b_StmtData__jule_tuple_bool _1a5608a19_buildAssignSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _104834_tokens);
inline jule::Ptr<_1a3b42d46_UseExpr> _1a5608d5a_buildUseExpr(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _106133_tokens);
inline jule::Any _1a560919b_buildConstSt(_1a55ec997_scopeParser* _self_, jule::Ptr<_1a55ec106_stmt>* _107433_st);
inline jule::Any _1a56094dc_buildSt(_1a55ec997_scopeParser* _self_, jule::Ptr<_1a55ec106_stmt>* _109928_st);
inline void _1a5609850_build(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _116326_tokens, jule::Ptr<_1a3b4d15e_ScopeTree>* _116349_s);
inline void _1a560aba3_pushErr(_1a560a3bc_exprBuilder* _self_, jule::Ptr<_1a3b27a62_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args);
inline void _1a560b016_pushSuggestion(_1a560a3bc_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args);
inline jule::Ptr<_1a3b43066_TupleExpr> _1a560b357_buildTuple(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>>* _5431_parts);
inline jule::Ptr<_1a3b4340c_LitExpr> _1a560b698_buildLit(_1a560a3bc_exprBuilder* _self_, jule::Ptr<_1a3b27a62_Token> _6424_token);
inline jule::Any _1a560bd2a_buildSingle(_1a560a3bc_exprBuilder* _self_, jule::Ptr<_1a3b27a62_Token> _7531_token);
inline jule::Ptr<_1a3b43c8c_IdentExpr> _1a560c16b_buildBindIdent(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _9235_tokens);
inline jule::Ptr<_1a3b4452e_UnaryExpr> _1a560c4ac_buildUnary(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _11130_tokens);
inline jule::Ptr<_1a3b45585_SubIdentExpr> _1a560c7ed_buildObjSubIdent(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _13236_tokens);
inline jule::Ptr<_1a3b451ab_NsSelectionExpr> _1a560cb3e_buildNsSubIdent(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _14736_tokens);
inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a560ce80_buildType(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _17230_tokens);
inline jule::Any _1a560d2c1_buildSubIdent(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _18634_tokens);
inline jule::Ptr<_1a3b44908_VariadicExpr> _1a560d612_buildVariadic(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _20833_tokens);
inline jule::Ptr<_1a3b4273b_RangeExpr> _1a560d953_buildBetweenParentheses(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _21743_tokens);
inline jule::Ptr<_1a3b44cd2_CastExpr> _1a560dc94_tryBuildCast(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _22933_tokens);
inline void _1a560e1b2_pushArg(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b42472_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _30347_tokens, jule::Ptr<_1a3b27a62_Token> _30365_err_token);
inline jule::Slice<jule::Ptr<_1a3b42472_Expr>> _1a560e503_buildArgs(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _31229_tokens);
inline jule::Ptr<_1a3b4619b_FnCallExpr> _1a560ecea_buildFnCall(_1a560a3bc_exprBuilder* _self_, jule::Ptr<_1a3b27a62_Token>* _37832_token, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _37873_args);
inline jule::Any _1a561013b_buildParenthesesRange(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _38642_tokens);
inline jule::Ptr<_1a3b437d6_UnsafeExpr> _1a561047c_buildUnsafeExpr(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _40835_tokens);
inline jule::Ptr<_1a3b4eced_FnDecl> _1a56107bd_buildAnonFn(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _42332_tokens);
inline jule::Any _1a5610b0e_buildUnsafe(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _43232_tokens);
inline void _1a561102c_pushRangeLitPart(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _44236_part, jule::Ptr<_1a3b27a62_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>>* _44328_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _1a561136d_getBraceRangeLitExprParts(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _45345_tokens);
inline jule::Ptr<_1a3b46b91_FieldExprPair> _1a56116ae_buildFieldExprPair(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _49538_tokens);
inline jule::Ptr<_1a3b42472_Expr> _1a5611a00_buildStructLitExpr(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _50839_tokens);
inline jule::Slice<jule::Ptr<_1a3b42472_Expr>> _1a5611d41_buildStructLitExprs(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _52340_tokens);
inline jule::Ptr<_1a3b474bb_StructLit> _1a5612182_buildTypedStructLiteral(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _53643_tokens);
inline jule::Ptr<_1a3b42472_Expr> _1a56124c3_buildBraceLitPart(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _56038_tokens);
inline jule::Ptr<_1a3b47972_BraceLit> _1a5612814_buildBraceLit(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _57734_tokens);
inline jule::Any _1a5612b55_buildBraceRange(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _59636_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _1a5612e96_getEnumerableParts(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _64838_tokens);
inline jule::Ptr<_1a3b489c8_SliceExpr> _1a56132d7_buildSlice(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _65530_tokens);
inline jule::Ptr<_1a3b49435_IndexingExpr> _1a561378d_buildIndexing(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _6787_tokens, jule::Ptr<_1a3b27a62_Token> _67829_errorToken);
inline jule::Ptr<_1a3b49a95_SlicingExpr> _1a5613da9_buildSlicing(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _70160_start, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _7028_to, jule::Ptr<_1a3b27a62_Token>* _70227_errorToken, jule::Ptr<_1a3b27a62_Token> _70251_end);
inline jule::Any _1a56141ea_buildBracketRange(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _71737_tokens);
inline jule::Any _1a561453b_buildExclRight(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _74235_tokens);
inline jule::Any _1a561487c_buildData(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _76030_tokens);
inline jule::Any _1a5614c78_buildBinary(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _82932_tokens, jule::I64 _82950_i);
inline jule::Any _1a56150b9_build(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _85426_tokens);
inline jule::Any _1a561540a_buildKind(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _86530_tokens);
inline jule::Ptr<_1a3b42472_Expr> _1a561574b_buildFromTokens(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _87635_tokens);
inline void _1a561b323_stop(_1a561b026_parser* _self_);
inline jule::Bool _1a561b5a9_stopped(_1a561b026_parser* _self_);
inline void _1a561b9c7_pushErr(_1a561b026_parser* _self_, jule::Ptr<_1a3b27a62_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args);
inline void _1a561bd3a_pushSuggestion(_1a561b026_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args);
inline jule::Ptr<_1a3b42472_Expr> _1a561c17b_buildExpr(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _21731_tokens);
inline jule::Ptr<_1a3b3c55a_Directive> _1a561c4bc_buildDirective(_1a561b026_parser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _22134_tokens);
inline void _1a561c775_pushDirective(_1a561b026_parser* _self_, jule::Ptr<_1a3b3c55a_Directive> _23633_d);
inline jule::Ptr<_1a3b4d15e_ScopeTree> _1a561cb71_buildScope(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _24932_tokens, jule::Ptr<_1a3b27a62_Token> _24954_end);
inline __jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool _1a561d127__buildType(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _25939_tokens, jule::I64* _2607_i, jule::Bool _26016_err);
inline __jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool _1a561d5cd_buildType(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _27138_tokens, jule::I64* _2727_i, jule::Bool _27216_err);
inline jule::Ptr<_1a3b54b5a_TypeAliasDecl> _1a561d91e_buildTypeAliasDecl(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _28140_tokens);
inline void _1a561dc82_buildVarTypeAndExpr(jule::Ptr<_1a561b026_parser> _self_, jule::Ptr<_1a3b50ea8_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _32159_tokens);
inline void _1a561e0e5_buildVarCommon(jule::Ptr<_1a561b026_parser> _self_, jule::Ptr<_1a3b50ea8_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _35453_tokens);
inline void _1a561e458_buildVarBegin(_1a561b026_parser* _self_, jule::Ptr<_1a3b50ea8_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _37052_tokens);
inline jule::Ptr<_1a3b50ea8_VarDecl> _1a561e799_buildVar(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _39829_tokens);
inline jule::Ptr<_1a3b4a348_GenericDecl> _1a561eada_buildGeneric(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _41734_tokens);
inline jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>> _1a561eed6_buildGenerics(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _45435_tokens, jule::Ptr<_1a3b27a62_Token>* _45454_errorToken);
inline jule::Ptr<_1a3b4d89b_ParamDecl> _1a5620327_buildSelfParam(_1a561b026_parser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _47434_tokens);
inline void _1a5620745_paramTypeBegin(_1a561b026_parser* _self_, jule::Ptr<_1a3b4d89b_ParamDecl>* _51435_param, jule::I64* _51459_i, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _51468_tokens);
inline void _1a5620aa8_buildParamType(jule::Ptr<_1a561b026_parser> _self_, jule::Ptr<_1a3b4d89b_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _52960_tokens);
inline void _1a5620e1b_buildParamBody(jule::Ptr<_1a561b026_parser> _self_, jule::Ptr<_1a3b4d89b_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _54259_tokens);
inline jule::Ptr<_1a3b4d89b_ParamDecl> _1a562125c_buildParam(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _56231_tokens);
inline void _1a5621515_checkParams(_1a561b026_parser* _self_, jule::Slice<jule::Ptr<_1a3b4d89b_ParamDecl>>* _60532_params);
inline jule::Slice<jule::Ptr<_1a3b4d89b_ParamDecl>> _1a5621911_buildParams(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _62533_tokens, jule::Bool _62551_method);
inline __jule_tuple_x_1a3b41031_RetTypeDecl__jule_tuple_bool _1a5621d0c_buildMultiRetType(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _65539_tokens, jule::I64* _65562_i);
inline __jule_tuple_x_1a3b41031_RetTypeDecl__jule_tuple_bool _1a5622208_buildRetType(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _72634_tokens, jule::I64* _72657_i);
inline jule::Ptr<_1a3b4eced_FnDecl> _1a56226ae_buildFnPrototype(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _76538_tokens, jule::I64* _76561_i, jule::Bool _76569_method);
inline jule::Ptr<_1a3b4eced_FnDecl> _1a5622b65_buildFn(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype);
inline jule::Slice<jule::Ptr<_1a3b27a62_Token>> _1a5622ea6_getUseDeclSelectors(_1a561b026_parser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _87639_tokens);
inline void _1a5623319_buildBindUseDecl(_1a561b026_parser* _self_, jule::Ptr<_1a3b56244_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _90154_tokens);
inline jule::Str _1a562365a_useDeclTokstoa(_1a561b026_parser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _91431_tokens);
inline void _1a56239bd_buildStdUseDecl(_1a561b026_parser* _self_, jule::Ptr<_1a3b56244_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _92956_tokens);
inline void _1a5623d31_buildIdentUseDecl(_1a561b026_parser* _self_, jule::Ptr<_1a3b56244_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _98758_tokens);
inline void _1a5624194_parseUseDecl(_1a561b026_parser* _self_, jule::Ptr<_1a3b56244_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _103553_tokens);
inline jule::Ptr<_1a3b56244_UseDecl> _1a5624590_buildUseDecl(_1a561b026_parser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _106932_tokens, jule::Bool _106950_binded);
inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a562498b_buildTypeEnumItemKind(jule::Ptr<_1a561b026_parser> _self_, jule::I64* _108343_i, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _108356_tokens);
inline jule::Slice<jule::Ptr<_1a3b57ad6_TypeEnumItemDecl>> _1a5624ccc_buildTypeEnumItems(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _112040_tokens);
inline jule::Ptr<_1a3b58246_TypeEnumDecl> _1a562511d_buildTypeEnumDecl(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _114439_tokens);
inline jule::Ptr<_1a3b42472_Expr> _1a5625519_buildEnumItemExpr(jule::Ptr<_1a561b026_parser> _self_, jule::I64* _117139_i, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _117152_tokens);
inline jule::Slice<jule::Ptr<_1a3b566ea_EnumItemDecl>> _1a562585a_buildEnumItems(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _120336_tokens);
inline jule::Ptr<_1a3b572ab_EnumDecl> _1a5625b9b_buildEnumDecl(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _124035_tokens);
inline jule::Any _1a5625edc_buildNodeEnumDecl(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _128539_tokens);
inline jule::Ptr<_1a3b58510_FieldDecl> _1a562632d_buildField(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _129431_tokens);
inline jule::Slice<jule::Ptr<_1a3b58510_FieldDecl>> _1a562666e_buildStructDeclFields(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _134342_tokens);
inline jule::Ptr<_1a3b58e06_StructDecl> _1a56269b0_buildStructDecl(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _135437_tokens);
inline void _1a5626c68_checkMethodReceiver(_1a561b026_parser* _self_, jule::Ptr<_1a3b4eced_FnDecl>* _140236_f);
inline void _1a56270cb_buildTraitBody(jule::Ptr<_1a561b026_parser> _self_, jule::Ptr<_1a3b59643_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _142155_tokens);
inline jule::Ptr<_1a3b59643_TraitDecl> _1a562741c_buildTraitDecl(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _145336_tokens);
inline jule::Ptr<_1a3b4eced_FnDecl> _1a562775d_buildBindFn(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _148332_tokens);
inline jule::Ptr<_1a3b50ea8_VarDecl> _1a5627a9e_buildBindVar(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _149333_tokens);
inline jule::Ptr<_1a3b58e06_StructDecl> _1a5627de0_buildBindStruct(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _150636_tokens);
inline jule::Ptr<_1a3b54b5a_TypeAliasDecl> _1a5628231_buildBindTypeAlias(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _152039_tokens);
inline jule::Ptr<_1a3b56244_UseDecl> _1a5628572_buildBindUse(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _153033_tokens);
inline jule::Any _1a56288b3_buildBind(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _154131_tokens);
inline jule::Ptr<_1a3b4eced_FnDecl> _1a5628c04_getMethod(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _156531_tokens);
inline void _1a5629067_parseImplBody(jule::Ptr<_1a561b026_parser> _self_, jule::Ptr<_1a3b59ca3_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _159452_tokens);
inline jule::Ptr<_1a3b59ca3_Impl> _1a56293a8_buildImpl(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _162730_tokens);
inline jule::Any _1a56296e9_buildNodeData(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _169835_tokens);
inline void _1a56299a2_applyFnMeta(_1a561b026_parser* _self_, jule::Ptr<_1a3b4eced_FnDecl>* _173132_f);
inline void _1a5629c5a_applyMeta(_1a561b026_parser* _self_, _1a3b3c13c_Node* _173630_node);
inline void _1a562a013_pushUseDecl(jule::Ptr<_1a561b026_parser> _self_, jule::Ptr<_1a3b56244_UseDecl>* _176133_decl);
inline jule::Bool _1a562a354_pushMetaNodes(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _176935_tokens);
inline _1a3b3c13c_Node _1a562a695_parseNode(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _178931_st);
inline void _1a562a94d_appendNode(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _181332_st);
inline void _1a562ae26_removeRange(_1a561b026_parser* _self_, jule::I64 _182327_i, jule::U64 _182335_id, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _182349_tokens, jule::Slice<jule::I64>* _182372_ranges);
inline void _1a562b344_pushWrongOrderCloseErr(_1a561b026_parser* _self_, jule::Ptr<_1a3b27a62_Token>* _183539_t, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _183551_tokens, jule::Slice<jule::I64>* _183570_ranges);
inline void _1a562b81c_pushRangeClose(_1a561b026_parser* _self_, jule::Ptr<_1a3b27a62_Token> _184630_t, jule::U64 _184641_left, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _184657_tokens, jule::Slice<jule::I64>* _184680_ranges);
inline void _1a562bac5_checkRanges(_1a561b026_parser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _186428_tokens);
inline void _1a562bd7d_parse(jule::Ptr<_1a561b026_parser> _self_, jule::Ptr<_1a3b2d2e8_File>* _189527_f);
inline void _1a562d6dc_pushErr(_1a562d148_typeBuilder* _self_, jule::Ptr<_1a3b27a62_Token> _4123_token, jule::Str _4138_fmt);
inline void _1a562da50_pushSuggestion(_1a562d148_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args);
inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a562dcd6_buildNamespace(_1a562d148_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> _1a562e06c_buildGenerics(_1a562d148_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _1a562e303_identGenerics(_1a562d148_typeBuilder* _self_);
inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a562e589_buildIdent(_1a562d148_typeBuilder* _self_);
inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a562e820_buildCppLink(_1a562d148_typeBuilder* _self_);
inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a562eaa6_buildFn(_1a562d148_typeBuilder* _self_);
inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a562ed3c_buildPtr(_1a562d148_typeBuilder* _self_);
inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a56300c3_buildSptr(_1a562d148_typeBuilder* _self_);
inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a5630359_buildSlc(_1a562d148_typeBuilder* _self_);
inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a56305e0_buildArr(_1a562d148_typeBuilder* _self_);
inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a5630876_buildMap(_1a562d148_typeBuilder* _self_);
inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a5630b0c_buildEnumerable(_1a562d148_typeBuilder* _self_);
inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a5630d93_step(_1a562d148_typeBuilder* _self_);
inline __jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool _1a5631129_build(_1a562d148_typeBuilder* _self_);
inline void _1a4150573_pushErr(_1a4150023_directiveEval* _self_, jule::Ptr<_1a3b27a62_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _1a415096e_splitOperans(_1a4150023_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _3346_tokens);
inline jule::Bool _1a4150cb0_evalDirectiveIdent(_1a4150023_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1a4151101_evalDirectivePart(_1a4150023_directiveEval* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _7837_part);
inline jule::Bool _1a4151387_eval(_1a4150023_directiveEval* _self_);
inline jule::Ptr<_1a563227e_JuleImporter> static__1a563267a_New(_1a414da49_CompileInfo _5816_info);
inline jule::Slice<jule::Ptr<_1a3bd86d3_ImportInfo>> _1a5632911_AllPackages(_1a563227e_JuleImporter* _self_);
inline void _1a5632d51_SetModPath(_1a563227e_JuleImporter* _self_, jule::Str _7526_path);
inline jule::Str _1a56330d7_GetModPath(_1a563227e_JuleImporter* _self_);
inline jule::Str _1a5633428_ModById(_1a563227e_JuleImporter* _self_, jule::I64 _8319_id);
inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a5633769_GetImport(_1a563227e_JuleImporter* _self_, jule::Str _8725_path);
inline __jule_tuple_sx_1a3b3b180_Ast__jule_tuple_s_1e7c94ecb_Log _1a5633b65_ImportPackage(_1a563227e_JuleImporter* _self_, jule::Str _9629_path, jule::Bool _9640_updateMod);
inline void _1a5633e1d_Imported(_1a563227e_JuleImporter* _self_, jule::Ptr<_1a3bd86d3_ImportInfo> _15328_imp);
inline __jule_tuple_bool__jule_tuple_s_1e7c94ecb_Log _1a563434c_isPassBuildDirectives(_1a563227e_JuleImporter* _self_, jule::Ptr<_1a3b3b180_Ast>* _17942_file);
inline jule::Ptr<_1a5638c8b_ExprInspector> static__1a56390ee_New(void);
inline void _1a56393a7_args(_1a5638c8b_ExprInspector* _self_, jule::Slice<jule::Any> _5724_args);
inline void _1a5639660_inspect(_1a5638c8b_ExprInspector* _self_, jule::Any* _6328_m);
inline void _1a56399c3_Inspect(_1a5638c8b_ExprInspector* _self_, jule::Any* _19328_m, jule::Fn<void,jule::Any*> _19342_f);
inline jule::Ptr<_1a5130112_ObjectDeadCode> static__1a51305a7_new(jule::Ptr<_1a5634c54_IR>* _3521_ir);
inline jule::Bool _1aa2bb30e_isLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3b87a7d_Trait>* _4127_t);
inline jule::Bool _1aa2c1c60_isLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3b770cd_FnIns>* _4127_t);
inline jule::Bool _1aa2c7aac_isLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _4127_t);
inline jule::Bool _1aa2ced06_isLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3c31c26_Var>* _4127_t);
inline void _1aa2bb6a5_pushLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3b87a7d_Trait> _6132_t);
inline void _1aa2c2106_pushLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3b770cd_FnIns> _6132_t);
inline void _1aa2c8162_pushLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3b61cbb_StructIns> _6132_t);
inline void _1aa2d019c_pushLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3c31c26_Var> _6132_t);
inline void _1a5130e59_setReferencesAsLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3b7a257_ReferenceStack>* _7441_rs);
inline void _1a5131212_inits(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3bdb609_Package>* _15627_pkg);
inline void _1a51314ba_collectLivePackage(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3bdb609_Package>* _16840_pkg);
inline void _1a51316b8_collectLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_);
inline void _1a5131971_removeDeadGlobals(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a3c31c26_Var>>* _20139_vars);
inline void _1a5131c29_removeDeadFns(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a3b740ec_Fn>>* _21335_funcs);
inline void _1a5131ed2_removeDeadStructs(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a3b5e03d_Struct>>* _23439_structs);
inline void _1a513228a_removeDeadTraits(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a3b87a7d_Trait>>* _25638_traits);
inline void _1a5132543_removeDeadsFile(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3c844b5_SymbolTable>* _27737_file);
inline void _1a51327eb_removeDeadsPackage(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3bdb609_Package>* _28440_pkg);
inline void _1a51329e9_removeDeads(jule::Ptr<_1a5130112_ObjectDeadCode> _self_);
inline void _1a5132be7_elimanate(jule::Ptr<_1a5130112_ObjectDeadCode> _self_);
inline void _1a5134248_optimizeChild(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb664a_Scope>* _3935_s);
inline void _1a5134501_optimizeBodyChildExceptional(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb664a_Scope>* _4950_s);
inline void _1a51347a9_optimizeBodyChild(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb664a_Scope>* _5939_s);
inline void _1a5134a62_optimizeExprModel(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Any* _6839_model);
inline void _1a5134c60_eliminateFollowed(_1a5133c5e_scopeDeadCode* _self_);
inline void _1a5135018_pushGoto(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb93b7_GotoSt> _8929_gt);
inline void _1a51352c1_pushLabel(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb8edd_Label> _9930_l);
inline void _1a5135579_optimizeRangeIter(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb8482_RangeIter> _11238_it);
inline void _1a5135832_optimizeWhileIter(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb7a36_WhileIter> _11738_it);
inline void _1a5135ada_optimizeInfIter(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb7580_InfIter> _12536_it);
inline void _1a5135d93_optimizeConditional(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb7283_Conditional> _12940_c);
inline void _1a513614b_optimizeMatch(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bba85d_Match> _14734_m);
inline void _1a5136404_optimizeAssign(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb9c47_Assign> _16535_assign);
inline void _1a51366ac_optimizeMultiAssign(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bba1ed_MultiAssign> _17040_assign);
inline void _1a5136965_optimizeStmt(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Any _17933_st);
inline void _1a5136b63_optimizeStmts(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_);
inline _1a51383e5_exprDeadCode static__1a513878b_new(jule::Ptr<_1a5133c5e_scopeDeadCode>* _1821_s);
inline void _1a5138a44_optimize(_1a51383e5_exprDeadCode* _self_, jule::Any* _2425_model);
inline void _1a3e494b0_pushVar(_1a3e4904d_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe);
inline jule::Bool _1a3e49801_removeVar(_1a3e4904d_nils* _self_, jule::Uintptr _5225_var);
inline jule::Bool _1a3e49b42_isSafe(_1a3e4904d_nils* _self_, jule::Uintptr _6622_var);
inline jule::Ptr<_1a564679e_scopeOptimizer> static__1a5646d21_new(jule::Ptr<_1a3bb664a_Scope> _5120_scope);
inline void _1a56470c9_setCurrentStmt(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Any _6335_stmt);
inline void _1a56472c7_removeCurrent(jule::Ptr<_1a564679e_scopeOptimizer> _self_);
inline jule::Bool _1a564755d_isLastStmt(jule::Ptr<_1a564679e_scopeOptimizer> _self_);
inline jule::Bool _1a56477e4_isIter(jule::Ptr<_1a564679e_scopeOptimizer> _self_);
inline void _1a5647a9c_optimizeData(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3c8982d_Data> _9533_d);
inline void _1a5647d55_optimizeVar(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3c31c26_Var> _12132_v);
inline void _1a564810d_optimizeConditional(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb7283_Conditional> _14240_c);
inline void _1a564852b_buildDefaultConstantTrueCase(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bbb386_Case> _21649_case, jule::I64* _21667_i, jule::Ptr<_1a3bba85d_Match>* _21680_m);
inline void _1a56487d4_optimizeMatch(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bba85d_Match> _24234_m);
inline void _1a5648a8c_optimizeRangeIter(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb8482_RangeIter> _32438_it);
inline void _1a5648d45_optimizeWhileIter(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb7a36_WhileIter> _36938_it);
inline jule::Bool _1a5649186_substr(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb9c47_Assign> _37527_a);
inline jule::Bool _1a56494c7_strAssign(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb9c47_Assign> _39530_a);
inline jule::Bool _1a5649818_sliceAssign(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb9c47_Assign> _40632_a);
inline void _1a5649ac1_optimizePostfix(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb9791_Postfix> _41436_postfix);
inline void _1a5649d79_optimizeAssign(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb9c47_Assign> _42135_assign);
inline jule::Bool _1a564a1ba_tryOptimizeSwap(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bba1ed_MultiAssign>* _53037_assign);
inline void _1a564a473_optimizeMultiAssign(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bba1ed_MultiAssign> _56740_assign);
inline void _1a564a72b_optimizeRet(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bbbe25_RetSt> _61332_r);
inline void _1a564a9d4_optimizeStmt(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Any _63733_stmt);
inline void _1a564ac8c_optimizeChild(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb664a_Scope> _66634_child);
inline void _1a564ae8a_optimize(jule::Ptr<_1a564679e_scopeOptimizer> _self_);
inline void static__1a564d740_optimize(jule::Any* _3626_model);
inline void static__1a564da2b_optimizeData(jule::Any* _4030_model, jule::Ptr<_1a565665a_data>* _4053_d);
inline jule::Bool _1a564dd6c_selfCmpCond(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66221_BinaryExprModel>* _5228_m);
inline jule::Bool _1a564e1ad_boolCond(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66221_BinaryExprModel>* _7625_m);
inline jule::Bool _1a564e4ee_strCond(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66221_BinaryExprModel> _12923_m);
inline jule::Bool _1a564e9a5_tryNeutralElement1(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66221_BinaryExprModel>* _18635_m, jule::Ptr<_1b5747b9d_Const> _18660_c, jule::Ptr<_1a3b65c26_OperandExprModel>* _18672_nc);
inline jule::Bool _1a564ece6_tryNeutralElement(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66221_BinaryExprModel>* _23034_m);
inline void _1a565009e_checkBinaryForBoundary(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66221_BinaryExprModel>* _24539_m);
inline void _1a5650357_checkBinaryForNil(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66221_BinaryExprModel>* _29734_m);
inline void _1a5650610_binary(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66221_BinaryExprModel> _32922_m);
inline void _1a56508b8_unary(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b665ea_UnaryExprModel> _41421_m);
inline void _1a5650b71_structureLit(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66ebe_StructLitExprModel> _45728_m);
inline void _1a5650e29_casting(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b6784e_CastingExprModel> _47323_m);
inline void _1a565128c_args(_1a564d29a_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a3b76055_ParamIns>> _48720_params, jule::Slice<jule::Any>* _48746_args);
inline void _1a5651545_scope(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3bb664a_Scope>* _50922_s);
inline void _1a56517ed_funcCall(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b68201_FnCallExprModel> _51524_m);
inline void _1a5651aa6_indexing(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b68a81_IndexingExprModel> _52224_m);
inline void _1a5651d5e_anonFunc(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b69037_AnonFnExprModel> _54624_m);
inline void _1a565205c_do(_1a564d29a_exprOptimizer* _self_);
inline void _1a5653e3d_pushVar(jule::Ptr<_1a56539cb_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1a3cbac27_TypeKind> _3242_kind);
inline jule::Bool _1a565427e_removeVar(_1a56539cb_dynamic* _self_, jule::Uintptr _5525_var);
inline jule::Bool _1a565467a_isFits(_1a56539cb_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1a3cbac27_TypeKind> _6936_kind);
inline _1a5656160_dataCheckpoint _1a56569ce_getCheckpoint(_1a565665a_data* _self_);
inline void _1a5656c87_loadCheckpoint(_1a565665a_data* _self_, _1a5656160_dataCheckpoint* _3535_c);
inline void _1a565854c_pushVar(_1a56580da_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize);
inline jule::Bool _1a5658c89_fitsMaxSize(_1a56580da_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr);
inline jule::Ptr<_1a51395e4_Optimizer> static__1a5139a67_New(jule::Ptr<_1a5634c54_IR>* _2621_ir);
inline void _1a5139d20_optimizeGlobal(_1a51395e4_Optimizer* _self_, jule::Ptr<_1a3c31c26_Var>* _3235_v);
inline void _1a513a0c8_optimizeFunction(_1a51395e4_Optimizer* _self_, jule::Ptr<_1a3b740ec_Fn>* _3837_func);
inline void _1a513a381_optimizeStruct(_1a51395e4_Optimizer* _self_, jule::Ptr<_1a3b5e03d_Struct>* _4835_s);
inline void _1a513a639_optimizeGlobals(_1a51395e4_Optimizer* _self_, jule::Ptr<_1a3bdb609_Package>* _6436_p);
inline void _1a513a8e2_optimizeFunctions(_1a51395e4_Optimizer* _self_, jule::Ptr<_1a3bdb609_Package>* _7238_p);
inline void _1a513ab9a_optimizeStructs(_1a51395e4_Optimizer* _self_, jule::Ptr<_1a3bdb609_Package>* _8036_p);
inline void _1a513ae53_optimizePackage(_1a51395e4_Optimizer* _self_, jule::Ptr<_1a3bdb609_Package>* _8836_p);
inline void _1a513b151_Optimize(_1a51395e4_Optimizer* _self_);
inline void static__1a513b838_Reset(void);
inline void static__1a515e8b1_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1a5162386_LogFlat(_1e7c94ecb_Log* _1421_l);
inline void static__1a51625b7_LogError(_1e7c94ecb_Log* _1922_l);
inline void static__1a51627e8_Log(_1e7c94ecb_Log* _6417_l);
inline void static__1a5162a29_PrintLogs(jule::Slice<_1e7c94ecb_Log>* _7423_logs);
inline _1a5daa287_Time static__1a5daa63e_Unix(jule::U64 _9117_sec);
inline _1a5daa287_Time static__1a5daa84d_Now(void);
inline _1a5da9ab1_AbsTime _1a5dac036_Abs(_1a5daa287_Time* _self_);
inline jule::Ptr<_1a5cd7dc9_scopeCoder> static__1a5cd855b_new(jule::Ptr<_1a5db5abc_ObjectCoder>* _7321_oc);
inline void _1aa491182_iterHead(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb8482_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin);
inline void _1a5cd8c32_rangeIndexIter(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb8482_RangeIter>* _12936_it);
inline void _1a5cd8eda_rangeHashmapIter(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb8482_RangeIter>* _19638_it);
inline void _1a5cd9293_strRuneIter(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3e47931_StrRuneIter> _24332_it);
inline void _1a5cd954b_ifCase(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb6a68_If> _35127_i);
inline void _1a5cd9804_conditional(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb7283_Conditional> _36032_c);
inline void _1a5cd9aac_infIter(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb7580_InfIter> _38028_it);
inline void _1a5cd9d65_whileIter(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb7a36_WhileIter> _39730_it);
inline void _1a5cda11d_rangeIter(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb8482_RangeIter> _43630_it);
inline void _1a5cda3c6_cont(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb8817_ContSt> _44921_c);
inline void _1a5cda67e_label(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb8edd_Label> _45422_l);
inline void _1a5cda937_gotoSt(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb93b7_GotoSt> _45923_gt);
inline void _1a5cdabe0_postfix(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb9791_Postfix> _46428_p);
inline void _1a5cdae98_divByZeroAssign(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb9c47_Assign> _47136_a);
inline void _1a5cdb471_operatorOverloadingAssign(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _47747_s, jule::Ptr<_1a3b65c26_OperandExprModel>* _47773_l, jule::Ptr<_1a3b65c26_OperandExprModel>* _4788_r, jule::U64 _47836_op);
inline void _1a5cdb729_assign(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb9c47_Assign> _49227_a);
inline void _1a5cdb9d2_mapLookupAssign(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bba1ed_MultiAssign>* _51337_a);
inline void _1a5cdbc8a_multiAssignTup(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bba1ed_MultiAssign>* _53636_a);
inline void _1a5cdc043_multiAssignFn(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bba1ed_MultiAssign>* _58535_a);
inline void _1a5cdc2eb_multiAssign(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bba1ed_MultiAssign> _64332_a);
inline jule::Fn<void> _1a5cdc63c_matchExpr(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bba85d_Match> _66930_m);
inline void _1a5cdc9a0_case(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bba85d_Match> _67925_m, jule::Ptr<_1a3bbb386_Case> _67940_c);
inline void _1a5cdcc58_matchSt(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bba85d_Match> _74928_m);
inline void _1a5cdd011_fallSt(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bbba7e_FallSt> _80423_f);
inline void _1a5cdd2b9_breakSt(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb8be1_BreakSt> _80924_b);
inline void _1a5cdd572_setResult(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bbbe25_RetSt> _81830_r);
inline void _1a5cdd82a_retSt(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bbbe25_RetSt> _84626_r);
inline void _1a5cddad3_var(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3c31c26_Var> _88224_v);
inline void _1a5cddd8b_mutSlicing(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3e46622_MutSlicingExprModel> _88831_m);
inline void _1a5cde144_swap(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3e453bd_SwapExprModel> _90525_m);
inline void _1a5cde3ec_exceptionalForwarding(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3e45049_ExceptionalForwardingExprModel> _91342_m);
inline void _1a5cde6a5_st(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Any _91923_st);
inline void _1a5cde95d_scopeStmts(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb664a_Scope>* _97532_s);
inline void _1a5cdec16_scope(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb664a_Scope> _98426_s);
inline void _1a5cdeebe_commonFuncScope(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3b770cd_FnIns>* _99937_f);
inline void _1a5ce0332_anonFuncScope(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3b69037_AnonFnExprModel> _103934_m, jule::Str _103955_ident);
inline void _1a5ce05da_funcScope(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3b770cd_FnIns> _107130_f);
inline jule::Ptr<_1a5ce3e07_exprCoder> static__1a5ce42c0_new(jule::Ptr<_1a5db5abc_ObjectCoder>* _11521_oc);
inline void _1a5ce4578_string(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1b5747b9d_Const>* _12124_c);
inline void _1a5ce4831_boolean(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Bool _13624_b);
inline void _1a5ce4a2e_nilLit(jule::Ptr<_1a5ce3e07_exprCoder> _self_);
inline jule::Bool _1a5ce4d70_ftoaSpecialCases(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::F64* _14834_x);
inline void _1a5ce5128_float32(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1b5747b9d_Const>* _16225_c);
inline void _1a5ce53d1_float64(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1b5747b9d_Const>* _18125_c);
inline void _1a5ce5689_constant(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1b5747b9d_Const> _19929_c);
inline void _1a5ce5aa7_operatorOverloadingUnary(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _22346_s, jule::U64 _22361_op, jule::Any _22378_e);
inline void _1a5ce5ec5_divByZeroBinary(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b27a62_Token>* _23533_op, jule::Ptr<_1a3b65c26_OperandExprModel>* _23550_l, jule::Ptr<_1a3b65c26_OperandExprModel>* _23577_r);
inline void _1a5ce66bd__unsafeBinary(jule::Ptr<_1a5ce3e07_exprCoder> _self_, _1e7be2632_StrBuilder* _25735_buf, jule::Str* _25753_l, jule::Str* _25762_r, jule::Ptr<_1a3cbac27_TypeKind>* _2588_lk, jule::Ptr<_1a3cbac27_TypeKind>* _25828_rk, jule::U64 _25843_op, jule::Str _25856_kind);
inline void _1a5ce6976_unsafeBinary(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b66221_BinaryExprModel> _31633_m);
inline void _1a5ce6c2e_binary(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b66221_BinaryExprModel> _32827_m);
inline void _1a5ce6ed7_var(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3c31c26_Var> _34024_m);
inline void _1a5ce7290_structureIns(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns> _35633_m);
inline void _1a5ce7548_unary(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b665ea_UnaryExprModel> _36026_m);
inline void _1a5ce7801_structureLit(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b66ebe_StructLitExprModel> _39133_m);
inline void _1a5ce7aa9_allocStructure(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b672bb_AllocStructLitExprModel> _42235_m);
inline void _1a5ce7d62_possibleRefExpr(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Any _43032_expr);
inline void _1a5ce8280_castTraitFromTrait(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6784e_CastingExprModel>* _44440_m, jule::Ptr<_1a3b87a7d_Trait> _44466_t1, jule::Ptr<_1a3b87a7d_Trait> _44482_t2);
inline void _1a5ce8538_casting(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6784e_CastingExprModel> _45728_m);
inline void _1a5ce87e1_models(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Slice<jule::Any> _57327_args);
inline void _1a5ce8a99_args(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b68201_FnCallExprModel>* _58526_m);
inline void _1a5ce8d52_modelForCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Any _61633_expr);
inline void _1a5ce910a_pushCallInf(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b68201_FnCallExprModel>* _63129_m);
inline jule::Bool _1a5ce944b_isWrapped(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b68201_FnCallExprModel>* _65431_m);
inline jule::Bool _1a5ce978c_writeReceiver(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Any _67834_m);
inline void _1a5ce9a45_pureFuncCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b68201_FnCallExprModel>* _69134_m);
inline void _1a5ce9ced_coFuncCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b68201_FnCallExprModel>* _78132_m);
inline void _1a5cea161_writeUseExpr(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b770cd_FnIns>* _83234_f, jule::Ptr<_1a3c8982d_Data> _83249_d);
inline void _1a5cea419_funcCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b68201_FnCallExprModel> _85329_m);
inline void _1a5cea6c2_slice(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b685ca_SliceExprModel> _92626_m);
inline void _1a5cea97a_indexing(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b68a81_IndexingExprModel> _93829_m);
inline void _1a5ceac33_unsafeIndexing(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3e46ca4_UnsafeIndexingExprModel> _97835_m);
inline void _1a5ceaedb_anonFunc(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b69037_AnonFnExprModel> _99529_m);
inline void _1a5ceb294_mapExpr(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b698b7_MapExprModel> _102628_m);
inline void _1a5ceb54c_slicing(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b69e4a_SlicingExprModel> _104728_m);
inline void _1a5ceb805_traitSub(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6a4cd_TraitSubIdentExprModel> _106329_m);
inline void _1a5cebaad_structureSub(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6ad6e_StructSubIdentExprModel> _107933_m);
inline void _1a5cebd66_array(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6b5de_ArrayExprModel> _108826_m);
inline void _1a5cec11e_funcInsCommon(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b770cd_FnIns> _111134_m);
inline void _1a5cec3c7_funcIns(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b770cd_FnIns> _111828_m);
inline void _1a5cec680_tuple(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6b8db_TupleExprModel> _112926_m);
inline void _1a5cec938_newCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6c568_BuiltinNewCallExprModel> _114028_m);
inline void _1a5cecbe1_outCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6bcb5_BuiltinOutCallExprModel> _115028_m);
inline void _1a5cece99_outlnCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6c18e_BuiltinOutlnCallExprModel> _115930_m);
inline void _1a5ced252_panicCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6c942_BuiltinPanicCallExprModel> _116830_m);
inline void _1a5ced50a_assertCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6cde8_BuiltinAssertCallExprModel> _117631_m);
inline void _1a5ced7b3_errorCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6e9ee_BuiltinErrorCallExprModel> _118930_m);
inline void _1a5ceda6b_copyCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6e625_BuiltinCopyCallExprModel> _122129_m);
inline void _1a5cedd24_lenCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6da75_BuiltinLenCallExprModel> _122928_m);
inline void _1a5cee0cc_capCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6dd72_BuiltinCapCallExprModel> _123428_m);
inline void _1a5cee385_deleteCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6e24b_BuiltinDeleteCallExprModel> _123931_m);
inline void _1a5cee63d_makeCallSlice(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6d39e_BuiltinMakeCallExprModel>* _125035_m);
inline void _1a5cee8e6_makeCallStr(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6d39e_BuiltinMakeCallExprModel>* _126833_m);
inline void _1a5ceeb9e_makeCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6d39e_BuiltinMakeCallExprModel> _127929_m);
inline void _1a5ceee57_pushToSlice(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3e4717d_PushToSliceExprModel> _128732_m);
inline void _1a5d00210_appendToSlice(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3e47557_AppendToSliceExprModel> _134734_m);
inline void _1a5d004b8_appendCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6d778_BuiltinAppendCallExprModel> _135531_m);
inline void _1a5d00771_sizeof(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b701a3_SizeofExprModel> _136327_m);
inline void _1a5d00a29_alignof(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b70390_AlignofExprModel> _136928_m);
inline void _1a5d00cd2_runeLit(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b70637_RuneExprModel> _137524_m);
inline void _1a5d0108a_structureStatic(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6b215_StructStaticIdentExprModel> _138936_m);
inline void _1a5d01343_integratedToStr(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b70934_IntegratedToStrExprModel> _139336_m);
inline void _1a5d015eb_backendEmit(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b70d0d_BackendEmitExprModel> _139932_m);
inline void _1a5d018a4_free(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b7110a_FreeExprModel> _141525_m);
inline void _1a5d01b5c_strComp(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3e4608e_StrCompExprModel> _142428_m);
inline void _1a5d01e15_emptyCompare(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3e45797_EmptyCompareExprModel> _144033_m);
inline void _1a5d021bd_unsafeDeref(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3e47c2d_UnsafeDerefExprModel> _144932_m);
inline void _1a5d02476_unsafeCasting(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3e4802a_UnsafeCastingExprModel> _146034_m);
inline void _1a5d0272e_model(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Any _147726_m);
inline void _1a5d029d7_initExpr(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3cbac27_TypeKind> _158029_t);
inline jule::Ptr<_1a5d058db_TestCoder> static__1a5d05d5e_New(jule::Ptr<_1a5db5abc_ObjectCoder>* _2921_oc);
inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a5d060e5_findTestingPackage(jule::Ptr<_1a5d058db_TestCoder> _self_);
inline void _1a5d0639d_appendTest(jule::Ptr<_1a5d058db_TestCoder> _self_, jule::Ptr<_1a3b770cd_FnIns> _4431_f);
inline void _1a5d06656_appendPackageTests(jule::Ptr<_1a5d058db_TestCoder> _self_, jule::Ptr<_1a3bdb609_Package>* _5940_p);
inline jule::Bool _1a5d068dc_readyTestingPackage(jule::Ptr<_1a5d058db_TestCoder> _self_);
inline void _1a5d06ada_callTmReset(jule::Ptr<_1a5d058db_TestCoder> _self_);
inline void _1a5d06cd8_callTmFailed(jule::Ptr<_1a5d058db_TestCoder> _self_);
inline void _1a5d06ed6_callTmSkipped(jule::Ptr<_1a5d058db_TestCoder> _self_);
inline void _1a5d071d4_Serialize(jule::Ptr<_1a5d058db_TestCoder> _self_);
inline void static__1a5d08d73_writeIdentTo(_1e7be2632_StrBuilder* _3530_buf, jule::Str* _3548_ident);
inline void static__1a5d09219_toOut(_1e7be2632_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr);
inline void static__1a5d0966a_toLocal(_1e7be2632_StrBuilder* _7825_buf, jule::I64 _7842_row, jule::I64 _7852_col, jule::Str* _7863_ident);
inline void static__1a5d09956_func(_1e7be2632_StrBuilder* _8622_buf, jule::Ptr<_1a3b740ec_Fn>* _8640_f);
inline void static__1a5d09c42_funcIns(_1e7be2632_StrBuilder* _10225_buf, jule::Ptr<_1a3b770cd_FnIns>* _10243_f);
inline void static__1a5d0a02d_traitDecl(_1e7be2632_StrBuilder* _11727_buf, jule::Ptr<_1a3b87a7d_Trait> _11744_t);
inline void static__1a5d0a319_param(_1e7be2632_StrBuilder* _12123_buf, jule::Ptr<_1a3b72628_Param>* _12141_p);
inline void static__1a5d0a605_structure(_1e7be2632_StrBuilder* _13627_buf, jule::Ptr<_1a3b5e03d_Struct>* _13645_s);
inline void static__1a5d0a8e1_structureIns(_1e7be2632_StrBuilder* _14730_buf, jule::Ptr<_1a3b61cbb_StructIns>* _14748_s);
inline void static__1a5d0abcc_field(_1e7be2632_StrBuilder* _15523_buf, jule::Ptr<_1a3b5b117_Field>* _15541_f);
inline void static__1a5d0aeb8_var(_1e7be2632_StrBuilder* _16521_buf, jule::Ptr<_1a3c31c26_Var> _16542_v);
inline void static__1a5d0b2a4_iterBegin(_1e7be2632_StrBuilder* _18727_buf, jule::Uintptr _18744_it);
inline void static__1a5d0b590_iterEnd(_1e7be2632_StrBuilder* _19225_buf, jule::Uintptr _19242_it);
inline void static__1a5d0b87b_iterNext(_1e7be2632_StrBuilder* _19726_buf, jule::Uintptr _19743_it);
inline void static__1a5d0bb67_label(_1e7be2632_StrBuilder* _20223_buf, jule::Uintptr _20240_u);
inline void static__1a5d0be53_matchEnd(_1e7be2632_StrBuilder* _20726_buf, jule::Uintptr _20743_m);
inline void static__1a5d0c23e_caseBegin(_1e7be2632_StrBuilder* _21227_buf, jule::Uintptr _21244_c);
inline jule::Ptr<_1a5db5abc_ObjectCoder> static__1a5db5eb8_New(jule::Ptr<_1a5634c54_IR>* _11721_ir, _1a5db3d1d_SerializationInfo _11730_info);
inline void _1a5db6271_write(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Str _12822_s);
inline void _1a5db6529_writeBytes(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Slice<jule::U8> _13227_b);
inline void _1a5db6727_addIndent(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5db6925_doneIndent(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5db6b23_indent(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline jule::I64 _1a5db6e64_findAnyType(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3cbac27_TypeKind>* _15133_t);
inline jule::I64 _1a5db72a5_pushDealloc(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3cbac27_TypeKind> _16032_t);
inline jule::Str _1a5db75e6_pushAnonFn(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b69037_AnonFnExprModel>* _17632_m);
inline jule::I64 _1a5db7937_pushAnyType(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3cbac27_TypeKind> _21632_t);
inline void _1a5db7be0_pushResultIns(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b770cd_FnIns>* _32235_f);
inline void _1a5db7e98_pushResult(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b740ec_Fn>* _34332_f);
inline void _1a5db830b_pushAndWriteMaskMapper(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b87a7d_Trait> _35643_t1, jule::Ptr<_1a3b87a7d_Trait> _35659_t2);
inline void _1a5db85b4_locInfo(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b27a62_Token>* _40725_t);
inline void _1a5db87b2_head(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5db89b0_links(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5db8c68_prepareStructure(_1a5db5abc_ObjectCoder* _self_, jule::Ptr<_1a3b5e03d_Struct>* _48837_s);
inline void _1a5db8e66_prepareStructures(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5db921e_structurePlainDecl(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b5e03d_Struct>* _51940_s);
inline void _1a5db941c_structurePlainDecls(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5db96c5_fieldDecl(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b6121b_FieldIns>* _53531_f);
inline void _1a5db997d_structureDestructor(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _55341_s);
inline void _1a5db9d9b_structureOperatorEq(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Str _56936_ident, jule::Ptr<_1a3b61cbb_StructIns>* _56953_s, jule::Bool _56968_decl);
inline void _1a5dba20e_structureOperators(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _63740_s, jule::Bool _63755_decl);
inline void _1a5dba4b7_structureInsDecl(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _64638_s);
inline void _1a5dba770_structureDecl(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b5e03d_Struct>* _67635_s);
inline void _1a5dba96d_structureDecls(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5dbab6b_structureMethodDecls(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5dbb144_funcHead(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, _1e7be2632_StrBuilder* _71030_buf, jule::Ptr<_1a3b770cd_FnIns>* _71052_f, jule::Bool _71063_ptr, jule::Str _71074_ident);
inline void _1a5dbb4a7_funcDeclIns(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b770cd_FnIns>* _72933_f, jule::Bool _72944_ptr);
inline void _1a5dbb81a_funcDecl(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b740ec_Fn>* _73630_f, jule::Bool _73638_ptr);
inline void _1a5dbbac3_funcDeclTrait(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b740ec_Fn>* _74235_f);
inline void _1a5dbbcc1_funcDecls(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5dbc079_traitDataTypeMethods(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b87a7d_Trait>* _76442_t);
inline void _1a5dbc277_traitDataTypes(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5dbc5da_paramIns(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, _1e7be2632_StrBuilder* _80030_buf, jule::Ptr<_1a3b76055_ParamIns>* _80052_p);
inline void _1a5dbc94d_paramsIns(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, _1e7be2632_StrBuilder* _80631_buf, jule::Ptr<_1a3b770cd_FnIns>* _80653_f);
inline void _1a5dbccb1_varInitExpr(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3c31c26_Var>* _82733_v, jule::Fn<void> _82742_init);
inline void _1a5dbd069_var(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3c31c26_Var> _84524_v);
inline void _1a5dbd3cc_anonFuncInsDecl(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b69037_AnonFnExprModel>* _87637_m, jule::Str _87658_ident);
inline void _1a5dbd740_anonFuncIns(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b69037_AnonFnExprModel>* _88233_m, jule::Str _88254_ident);
inline void _1a5dbdaa3_funcIns(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b770cd_FnIns>* _89229_f, jule::Str _89240_ident);
inline void _1a5dbdd5b_func(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b740ec_Fn>* _90226_f);
inline void _1a5dbe1be_funcTrait(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _90827_s, jule::Ptr<_1a3b770cd_FnIns>* _90847_f);
inline __jule_tuple_x_1a3b770cd_FnIns__jule_tuple_bool _1a5dbe510_findTraitMetMap(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b740ec_Fn>* _92337_m);
inline void _1a5dbe873_traitWrapper(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b87a7d_Trait>* _93534_t, jule::Ptr<_1a3b740ec_Fn>* _93550_m);
inline void _1a5dbea71_traitWrappers(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5dbedd4_traitDataMethods(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b87a7d_Trait>* _100138_t, jule::Ptr<_1a3b61cbb_StructIns> _100149_s);
inline void _1a5dc0302_traitData(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b87a7d_Trait>* _101831_t, jule::I64 _101842_i, jule::Ptr<_1a3b61cbb_StructIns>* _101855_s);
inline void _1a5dc0500_traitDatas(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5dc06ed_globals(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5dc08eb_decls(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5dc0ba4_structureMethods(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _108338_s);
inline void _1a5dc0e5c_structureOstream(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _109038_s);
inline void _1a5dc1215_structureIns(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _114134_s);
inline void _1a5dc14bd_structure(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b5e03d_Struct>* _114931_s);
inline void _1a5dc16bb_structures(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5dc18b9_funcs(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5dc1b72_pushInit(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3bdb609_Package>* _118130_pkg);
inline void _1a5dc1d70_anonHashes(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5dc206d_initCaller(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5dc226b_end(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5dc25ce_insertBuf(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, _1e7be2632_StrBuilder* _123831_buf, jule::I64 _123848_pos);
inline void _1a5dc27cc_serializeHead(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline void _1a5dc29ca_Serialize(jule::Ptr<_1a5db5abc_ObjectCoder> _self_);
inline jule::Str _1a5dc4d0c_Str(_1a5dc4944_customType* _self_);
inline jule::Bool _1a5dc514d_Equal(jule::Ptr<_1a5dc4944_customType> _self_, jule::Ptr<_1a3cbac27_TypeKind> _4418_k);
inline jule::Ptr<_1a5dc557c_typeCoder> static__1a5dc5a99_new(jule::Ptr<_1a5db5abc_ObjectCoder>* _6921_oc);
inline void _1a5dc5e0c_toType(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _7627_buf, jule::Str _7648_id);
inline void _1a5dc6270_prim(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _9025_buf, jule::Ptr<_1a3cc3801_Prim> _9042_p);
inline void _1a5dc65d3_tuple(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _9526_buf, jule::Ptr<_1a3cc88e4_Tuple> _9547_t);
inline void _1a5dc6946_asSptr(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem);
inline void _1a5dc6ca9_sptr(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _11425_buf, jule::Ptr<_1a3cc732c_Sptr> _11446_sptr);
inline void _1a5dc711c_ptr(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _12124_buf, jule::Ptr<_1a3ccaae4_Ptr> _12145_p);
inline void _1a5dc7480_enumDecl(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _13229_buf, jule::Ptr<_1a3b8a289_Enum> _13250_e);
inline void _1a5dc77e3_typeEnumDecl(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _13733_buf, jule::Ptr<_1a3b8b994_TypeEnum> _13754_e);
inline void _1a5dc7b56_asSlice(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _14128_buf, jule::Ptr<_1a3cbac27_TypeKind> _14149_elem);
inline void _1a5dc7eb9_slice(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _14826_buf, jule::Ptr<_1a3cc7d00_Slc> _14847_s);
inline void _1a5dc832c_mapType(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _15328_buf, jule::Ptr<_1a3cc9494_Map> _15349_m);
inline void _1a5dc8a03_structureIns(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _16733_buf, jule::Ptr<_1a3b61cbb_StructIns> _16754_s);
inline void _1a5dc8d66_array(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _19126_buf, jule::Ptr<_1a3cca121_Arr> _19147_a);
inline void _1a5dc953c_paramIns(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _21429_buf, jule::Ptr<_1a3b76055_ParamIns>* _21451_p);
inline void _1a5dc9c13_funcInsResult(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _24634_s, jule::Ptr<_1a3b770cd_FnIns>* _24654_f);
inline void _1a5dca076_anonFunc(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _26429_buf, jule::Ptr<_1a3b770cd_FnIns> _26450_f);
inline void _1a5dca3d9_func(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _28525_buf, jule::Ptr<_1a3b770cd_FnIns> _28546_f);
inline void _1a5dca74c_kind(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _29225_buf, jule::Ptr<_1a3cbac27_TypeKind> _29246_k);
inline jule::Ptr<_1a5dcd167_resultCoder> static__1a5dcd640_new(jule::Ptr<_1a5dc557c_typeCoder>* _35921_tc);
inline void _1a5dcd9a3_ptr(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _36324_s, jule::Ptr<_1a3ccaae4_Ptr> _36343_p);
inline void _1a5dcdd16_sptr(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _36825_s, jule::Ptr<_1a3cc732c_Sptr> _36844_p);
inline void _1a5dce179_mapType(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _37328_s, jule::Ptr<_1a3cc9494_Map> _37347_p);
inline void _1a5dce4dc_slice(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _37926_s, jule::Ptr<_1a3cc7d00_Slc> _37945_slc);
inline void _1a5dce850_arr(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _38424_s, jule::Ptr<_1a3cca121_Arr> _38443_arr);
inline void _1a5dcebb3_func(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _39025_s, jule::Ptr<_1a3b770cd_FnIns> _39044_f);
inline void _1a5dd0026_tup(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _40324_s, jule::Ptr<_1a3cc88e4_Tuple> _40343_tup);
inline void _1a5dd0389_codeMut(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _41028_s, jule::Ptr<_1a3cbac27_TypeKind>* _41048_t);
inline void _1a5dd06ec_codeMut1(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _44529_s, jule::Ptr<_1a3cbac27_TypeKind>* _44549_t);
inline jule::Slice<jule::U8> _1a5dd0a0a_code(_1a5dcd167_resultCoder* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _45425_t);
inline jule::Str _1aa983b3b_Name(_1aa98371d_Flag* _self_);
inline jule::Str _1aa983c90_What(_1aa98371d_Flag* _self_);
inline void _1aa983de4_Reset(_1aa98371d_Flag* _self_);
inline jule::I32 _1aa984048_Short(_1aa98371d_Flag* _self_);
inline jule::Str _1aa986e4c_Name(_1aa9872c1_Flag* _self_);
inline jule::Str _1aa9875ac_What(_1aa9872c1_Flag* _self_);
inline void _1aa987700_Reset(_1aa9872c1_Flag* _self_);
inline jule::I32 _1aa987843_Short(_1aa9872c1_Flag* _self_);
inline jule::Str _1aa98a5b0_Name(_1aa98a934_Flag* _self_);
inline jule::Str _1aa98ac20_What(_1aa98a934_Flag* _self_);
inline void _1aa98ad63_Reset(_1aa98a934_Flag* _self_);
inline jule::I32 _1aa98aea6_Short(_1aa98a934_Flag* _self_);
inline jule::Str _1aa98dc67_Name(_1aa98e0db_Flag* _self_);
inline jule::Str _1aa98e3c7_What(_1aa98e0db_Flag* _self_);
inline void _1aa98e51a_Reset(_1aa98e0db_Flag* _self_);
inline jule::I32 _1aa98e65d_Short(_1aa98e0db_Flag* _self_);
inline jule::Str _1aa9923ca_Name(_1aa99274e_Flag* _self_);
inline jule::Str _1aa992a3a_What(_1aa99274e_Flag* _self_);
inline void _1aa992b7d_Reset(_1aa99274e_Flag* _self_);
inline jule::I32 _1aa992cc1_Short(_1aa99274e_Flag* _self_);
inline jule::Ptr<_1a61031d3_FlagSet> static__1a61034be_New(void);
inline jule::Trait _1a6103975_FindFlag(_1a61031d3_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1a6103cb6_FindFlagShort(_1a61031d3_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a610438d_Parse(_1a61031d3_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1aa99274e_Flag> _1aaa0ada0_addFlagCommon(_1a61031d3_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1aa98e0db_Flag> _1aa215753_addFlagCommon(_1a61031d3_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1aaa08672_AddVar(_1a61031d3_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1aa21262e_AddVar(_1a61031d3_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1aa9a5432_parseInteger(_1a6105b97_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1aa9acda7_parseInteger(_1a6105b97_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline jule::Str _1a61064b1_getData(_1a6105b97_argParser* _self_);
inline jule::VoidExceptional _1a6106736_processFlag(_1a6105b97_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1a61069de_singleDash(_1a6105b97_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1a6106c97_doubleDash(_1a6105b97_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1a6106e95_tryArg(_1a6105b97_argParser* _self_);
inline jule::VoidExceptional _1a6107193_parse(_1a6105b97_argParser* _self_);
inline jule::Ptr<_2120c08d6_Cmd> static__2120c0d04_New(jule::Str _2616_path);
inline jule::VoidExceptional _2120c1002_Spawn(_2120c08d6_Cmd* _self_);
inline jule::Exceptional<jule::I64> _2120c1486_Wait(_2120c08d6_Cmd* _self_);
inline jule::VoidExceptional _2121253db_spawn(_2120c08d6_Cmd* _self_);
inline jule::Exceptional<jule::I64> _212125870_wait(_2120c08d6_Cmd* _self_);
inline __jule_tuple_x_1a5634c54_IR__jule_tuple_s_1e7c94ecb_Log static__1a56351e9_Build(jule::Str _2918_path, jule::I64 _2929_flags);
inline void _1a56356d3_appendStructs(_1a5634c54_IR* _self_, jule::Ptr<_1a3bdb609_Package>* _6630_p, jule::Slice<jule::Ptr<_1a3b5e03d_Struct>>* _6654_buffer);
inline jule::Slice<jule::Ptr<_1a3b5e03d_Struct>> _1a5635969_GetAllStructures(_1a5634c54_IR* _self_);
inline void _1a5635ccc_appendGlobals(_1a5634c54_IR* _self_, jule::Ptr<_1a3bdb609_Package>* _8930_p, jule::Slice<jule::Ptr<_1a3c31c26_Var>>* _8954_buffer);
inline jule::Slice<jule::Ptr<_1a3c31c26_Var>> _1a5636063_GetAllGlobals(_1a5634c54_IR* _self_);
inline void _1a5636261_Order(_1a5634c54_IR* _self_);
inline jule::Bool _1a52548c9_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1a87857db_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n);
inline void _21227301c_Free(void* _4520_ptr);
inline jule::Str _2122a3811_BytePtrToStr(jule::U8* _6924_s);
inline jule::Slice<jule::U8> _2122a3a97_StrToBytes(jule::Str _9315_s);
inline jule::I64 _212230c99_GetLastErrno(void);
inline jule::I64 _2122b337b_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg);
inline jule::I64 _2122b3700_Stat(jule::U8* _5916_path, struct stat* _5933_stat);
inline jule::I64 _2122b3b2e_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode);
inline jule::U8* _2122b3ea3_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen);
inline DIR* _2122b449d_Opendir(jule::U8* _7519_path);
inline struct dirent* _2122b4679_Readdir(DIR* _7823_dir);
inline jule::I64 _2122b4921_Closedir(DIR* _8124_dir);
inline jule::I64 _2122b5328_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode);
inline jule::I64 _2122b55e2_Rmdir(jule::U8* _9517_path);
inline jule::I64 _2122b58ab_Unlink(jule::U8* _9818_path);
inline jule::I64 _2122e4654_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n);
inline jule::I64 _2122e4a2d_Close(jule::I64 _2510_handle);
inline jule::I64 _2122e4dd5_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n);
inline void _2122e5116_Exit(jule::I64 _339_code);
inline void _2123019a2_handleRW(jule::Slice<jule::U8>* _1414_b);
inline void _212302871_HandleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Str _2123a5eda_Str(jule::U8* _108_b, jule::I64 _1018_n);
inline jule::Slice<jule::U8> _1a5243478_Slice(jule::U8* _2316_e, jule::I64 _2326_n);
inline jule::Slice<jule::U8> _2123b1c82_StrBytes(jule::Str _4113_s);
inline jule::Str _2123b2018_BytesStr(jule::Slice<jule::U8> _5013_b);
inline jule::Str _2123b22d2_StrFromBytes(jule::Slice<jule::U8> _5817_b);
inline jule::I64 _2123d7a00_getLastOsError(void);
inline jule::Slice<jule::Str> _2123dbc13_Args(void);
inline jule::Exceptional<jule::Str> _2123dc175_WorkingDir(void);
inline jule::Exceptional<jule::Str> _2123dd0dd_getwd(void);
inline jule::Bool _1e7a16a50_IsLetter(jule::I32 _7613_r);
inline jule::Bool _1e7a81dea_is16(jule::Slice<_1e7a8015c_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _1e7a8226e_is32(jule::Slice<_1e7a8068a_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _1e7a82a77_isExcludingLatin(jule::Ptr<_1e7a80b0d_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _1e7a82cb9_IsUpper(jule::I32 _29512_r);
inline __jule_tuple_i32__jule_tuple_int _1e7b84ae1_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _1e7b84e32_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _1e7b85482_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::Slice<jule::U8> _1e7b85ecc_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _1e7b86351_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I64 _1e7b868d4_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _1e7b86b9d_RuneStart(jule::U8 _51714_b);
inline jule::I64 _1e7bc79be_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I64 _1e7bc80eb_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I64 _1e7bc8470_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _1e7bc876c_Repeat(jule::Str _1111_s, jule::I64 _1123_n);
inline jule::Bool _1e7bc8b35_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _1e7bc8ea9_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I64 _1e7bc9460_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i);
inline jule::I64 _1e7bc97a1_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I64 _1e7bc9bd0_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i);
inline jule::I64 _1e7bcedb1_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I64 _1e7bd1698_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I64 _1e7bd1a1c_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I64 _1e7bd2446_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _1e7bd2ad9_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n);
inline jule::Bool _1e7bd2e5d_Contains(jule::Str _24313_s, jule::Str _24321_sub);
inline jule::Bool _1e7bd39ca_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes);
inline jule::I64 _1e7bd3d4e_Count(jule::Str _26410_s, jule::Str _26418_sub);
inline jule::Str _1e7bd4338_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n);
inline jule::Str _1e7bd50b4_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset);
inline jule::Str _1e7bd5438_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset);
inline jule::Str _1e7bd57ac_Trim(jule::Str _3699_s, jule::Str _36917_cutset);
inline jule::Str _1e7bd5b31_Join(jule::Slice<jule::Str> _3759_parts, jule::Str _37523_sep);
inline jule::Str _1e7bee4da_Clean(jule::Str _10914_path);
inline jule::Str _1e7beeab2_FromSlash(jule::Str _21214_path);
inline jule::Str _1e7beee03_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _1e7c00189_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _1e7c00453_Abs(jule::Str _2468_path);
inline jule::Str _1e7c0071c_Base(jule::Str _25213_path);
inline jule::Str _1e7c00ae6_Dir(jule::Str _2838_path);
inline jule::Str _1e7c00d38_VolumeName(jule::Str _30115_path);
inline jule::Bool _1e7c01c7e_IsPathSep(jule::U8 _4814_c);
inline jule::Bool _1e7c0208c_IsAbs(jule::Str _5310_path);
inline jule::I64 _1e7c02356_volumeNameLen(jule::Str _5918_path);
inline __jule_tuple_str__jule_tuple_bool _1e7c02697_abs(jule::Str _638_path);
inline jule::Str _1e7c0292d_join(jule::Slice<jule::Str> _739_elem);
inline jule::I64 _2122ea0d8_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _212117873_AtoiBp(jule::U8* _722_b, jule::I64 _736_n);
inline jule::Str _212120e97_Itoa(jule::I64 _89_x);
inline jule::Str _2121212a5_Utoa(jule::U64 _1613_x);
inline void _2121214d6_rev(jule::Slice<jule::U8>* _3513_b);
inline jule::Slice<char*> _212124ad3_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s, jule::Slice<jule::Slice<jule::U8>>* _3540_bargs);
inline jule::I64 _212124e57_execvp(jule::Str* _4712_file, jule::Slice<jule::Str>* _4724_argv);
inline jule::VoidExceptional _212125188_setenv(jule::Slice<jule::Str>* _5612_envv);
inline jule::I64 _212126112_processErrorFromCode(jule::I64 _1125_code);
inline jule::I64 _212126365_getLastProcessError(void);
inline void _212126b7e_Exit(jule::I64 _129_code);
inline jule::Str _212126d8d_Executable(void);
inline jule::Bool _1e7c8794c_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _1e7c87b8e_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _1e7c87e58_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _1e7c9543d_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args);
inline jule::Str _1e7c9574b_argToStr(jule::Any _32713_arg);
inline jule::I64 _1e7c95a15_findNextFmt(jule::Str _34016_fmt);
inline jule::Str _1e7c95dcd_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args);
inline jule::Bool _1e7c96c36_IsTopDirective(jule::Str _2219_directive);
inline jule::Bool _1e7c98155_IsWindows(jule::Str _3714_os);
inline jule::Bool _1e7c98463_IsDarwin(jule::Str _4013_os);
inline jule::Bool _1e7c9872c_IsLinux(jule::Str _4312_os);
inline jule::Bool _1e7c98a6d_IsI386(jule::Str _4611_arch);
inline jule::Bool _1e7c98d04_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _1e7c990bd_IsArm64(jule::Str _5212_arch);
inline jule::Bool _1e7c99387_IsUnix(jule::Str _5511_os);
inline jule::Bool _1e7c99761_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _1e7c999a3_Is64Bit(jule::Str _6112_arch);
inline void _212128235_init(void);
inline jule::I64 _1b556b8b2_LeadingZeros64(jule::U64 _6119_x);
inline jule::I64 _1b556c808_TrailingZeros(jule::U64 _8318_x);
inline jule::I64 _1b556d1dd_TrailingZeros32(jule::U32 _10520_x);
inline jule::I64 _1b556d4a7_TrailingZeros64(jule::U64 _11420_x);
inline jule::I64 _1b5573e80_Len32(jule::U32 _35214_x);
inline jule::I64 _1b5574249_Len64(jule::U64 _36614_x);
inline __jule_tuple_u64__jule_tuple_u64 _1b5574ed6_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry);
inline __jule_tuple_u64__jule_tuple_u64 _1b55767e0_Mul64(jule::U64 _49910_x, jule::U64 _49918_y);
inline jule::U32 _1e7e83cbe_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1e7e840cc_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1e7e84396_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1e7e846d7_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1e7e86c4a_Frexp(jule::F64 _4714_f);
inline jule::F64 _1b557da4a_NaN(void);
inline jule::Bool _1b557dd58_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1b557e122_Inf(jule::I64 _618_sign);
inline jule::Bool _1b557e4da_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1b557e7a4_normalize(jule::F64 _8214_x);
inline jule::F64 _1b5581289_Log(jule::F64 _1118_x);
inline jule::F64 _1b5581c7e_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1b5588857_Modf(jule::F64 _449_f);
inline jule::F64 _1b5589160_Log2(jule::F64 _449_x);
inline jule::Str _1b57230eb_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize);
inline jule::Slice<jule::U8> _1b57236d4_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize);
inline jule::Slice<jule::U8> _1b5723ddd_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1b57220b7_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1b57245b4_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1b5722a68_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt);
inline void _1b57249d2_roundShortest(_1b57356d5_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1b57220b7_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1b5725076_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1b5722a68_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1b5725560_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1b5722a68_decimalSlice _45637_d, jule::I64 _45654_prec);
inline jule::Slice<jule::U8> _1b5725c14_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1b57220b7_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1b5726396_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1b57220b7_floatInfo* _51232_flt);
inline jule::I64 _1b572671a_min(jule::I64 _5968_a, jule::I64 _59616_b);
inline jule::I64 _1b5726a8e_max(jule::I64 _6038_a, jule::I64 _60316_b);
inline jule::U8 _1b572763e_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1b505c56d_ConvError _1b5727ab2_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1b5727ee1_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1b5728497_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1b5729157_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1b57295ca_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg);
inline jule::I64 _1b572b3ac_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1b572b6ba_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1b572b984_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1b572d4d0_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1b572d90e_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1b505c56d_ConvError _1b572dea3_atofHex(_1b57220b7_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1b505c56d_ConvError _1b572e37c_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b505c56d_ConvError _1b572e5be_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b505c56d_ConvError _1b572e943_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1b572ecb7_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize);
inline void _1b5730647_ryuFtoaFixed32(_1b5722a68_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec);
inline void _1b5730adc_ryuFtoaFixed64(_1b5722a68_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec);
inline void _1b5731428_formatDecimal(_1b5722a68_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec);
inline void _1b5731901_ryuFtoaShortest(_1b5722a68_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1b57220b7_floatInfo* _26168_flt);
inline jule::I64 _1b5731b87_mulByLog2Log10(jule::I64 _37719_x);
inline jule::I64 _1b5731e51_mulByLog10Log2(jule::I64 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1b5732380_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1b57220b7_floatInfo* _3963_flt);
inline void _1b57329ce_ryuDigits(_1b5722a68_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1b5733150_ryuDigits32(_1b5722a68_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1b573357e_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1b57339ad_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q);
inline jule::Bool _1b5733d32_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1b57340eb_divmod1e9(jule::U64 _60214_x);
inline void _1b5737033_trim(_1b57356d5_decimal* _27414_a);
inline void _1b573731e_rightShift(_1b57356d5_decimal* _28420_a, jule::U64 _28432_k);
inline jule::Bool _1b57377c5_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s);
inline void _1b5737a7d_leftShift(_1b57356d5_decimal* _35219_a, jule::U64 _35231_k);
inline jule::Bool _1b5737e02_shouldRoundUp(_1b57356d5_decimal* _39919_a, jule::I64 _39931_nd);
inline jule::Str _1b5739684_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base);
inline jule::Str _1b5739a4c_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base);
inline jule::Str _1b5739d16_Itoa(jule::I64 _819_i);
inline jule::Str _1b573a157_small(jule::I64 _8610_i);
inline jule::Bool _1b573a3dd_isPowerOfTwo(jule::I64 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1b573a982_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline jule::Str _1b573bd7e_RealKindOf(jule::Str _4515_kind);
inline jule::I64 _1b573c148_BitsizeOf(jule::Str _5914_k);
inline jule::Str _1b573c489_IntFromBits(jule::I64 _8716_bits);
inline jule::Str _1b573c720_UintFromBits(jule::I64 _10517_bits);
inline jule::Str _1b573c9d9_FloatFromBits(jule::I64 _12318_bits);
inline jule::Bool _1b573d5de_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit);
inline jule::I64 _1b573d8a8_BitsizeOfFloat(jule::F64 _16119_x);
inline jule::I64 _1b573db72_BitsizeOfInt(jule::I64 _17717_x);
inline jule::I64 _1b573de3b_BitsizeOfUint(jule::U64 _19718_x);
inline void _1b573e0d4_UpdateTarget(void);
inline void _1b573e25a_init(void);
inline jule::I64 _1b5742d1e_MinI(jule::Str _6113_k);
inline jule::I64 _1b574312c_MaxI(jule::Str _7913_k);
inline jule::U64 _1b57433e6_MaxU(jule::Str _9713_k);
inline jule::F64 _1b5743737_Min(jule::Str _11512_k);
inline jule::F64 _1b57439bd_Max(jule::Str _13312_k);
inline jule::Bool _1b5743e74_IsI16Greater(jule::Str _621_k);
inline jule::Bool _1b5744282_IsI32Greater(jule::Str _1121_k);
inline jule::Bool _1b574454b_IsI64Greater(jule::Str _1621_k);
inline jule::Bool _1b574488c_IsU16Greater(jule::Str _2321_k);
inline jule::Bool _1b5744b23_IsU32Greater(jule::Str _2821_k);
inline jule::Bool _1b5744ddc_IsU64Greater(jule::Str _3421_k);
inline jule::Bool _1b57451a6_IsF32Greater(jule::Str _4117_k);
inline jule::Bool _1b5745580_IsF64Greater(jule::Str _4617_k);
inline jule::Bool _1b574587c_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2);
inline jule::Bool _1b57469e3_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1b5746d01_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1b57470ba_IsInt(jule::Str _4610_k);
inline jule::Bool _1b574740b_IsFloat(jule::Str _5112_k);
inline jule::Bool _1b5747692_IsNum(jule::Str _5610_k);
inline jule::Bool _1b574795b_IsSigNum(jule::Str _6113_k);
inline void _1b5751bb8_lshiftUnsig(_1b5747b9d_Const* _59021_c, _1b5747b9d_Const* _59032_x);
inline void _1b5751ee8_rshiftUnsig(_1b5747b9d_Const* _59621_c, _1b5747b9d_Const* _59632_x);
inline jule::Bool _1a3b2829e_IsUnaryOp(jule::U64 _33414_id);
inline jule::Bool _1a3b285ac_IsBinOp(jule::U64 _34412_id);
inline jule::Bool _1a3b28bb7_IsStr(jule::Str _36410_k);
inline jule::Bool _1a3b28e4d_IsRawStr(jule::Str _36713_k);
inline jule::Bool _1a3b29217_IsRune(jule::Str _37111_k);
inline jule::Bool _1a3b29aec_IsFloat(jule::Str _38012_k);
inline jule::Bool _1a3b29db6_IsNum(jule::Str _38810_k);
inline jule::Bool _1a3b2a449_IsIgnoreIdent(jule::Str _40318_ident);
inline jule::Bool _1a3b2a713_IsAnonIdent(jule::Str _40616_ident);
inline jule::Bool _1a3b2ac96_IsSpace(jule::I32 _41912_r);
inline jule::Bool _1a3b2b291_IsLetter(jule::I32 _42913_r);
inline jule::Bool _1a3b2b714_IsDecimal(jule::U8 _44914_b);
inline jule::Bool _1a3b2b9cd_IsBinary(jule::U8 _45213_b);
inline jule::Bool _1a3b2bc97_IsOctal(jule::U8 _45512_b);
inline jule::Bool _1a3b2c061_IsHex(jule::U8 _45810_b);
inline jule::Bool _1a3b2c32a_IsAssign(jule::U64 _47313_id);
inline jule::Bool _1a3b2c5e4_IsPostfixOp(jule::U64 _48516_id);
inline jule::Bool _1a3b2c8ad_IsAssignOp(jule::U64 _49515_id);
inline jule::Ptr<_1a3b2d2e8_File> _1a3b2e6c3_NewFileSet(jule::Str _5715_path);
inline _1e7c94ecb_Log _1a3b311ec_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1a3b2d2e8_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args);
inline jule::Bool _1a3b315b5_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix);
inline jule::Str _1a3b31939_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i);
inline jule::Str _1a3b31d02_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i);
inline jule::Str _1a3b32176_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i);
inline jule::Str _1a3b324ea_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i);
inline jule::Str _1a3b3286e_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i);
inline jule::Str _1a3b32d03_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i);
inline jule::Str _1a3b33045_commonNum(jule::Slice<jule::U8>* _21615_txt);
inline jule::Str _1a3b3330e_binaryNum(jule::Slice<jule::U8>* _23915_txt);
inline jule::Bool _1a3b33683_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i);
inline jule::Bool _1a3b33a07_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i);
inline jule::Bool _1a3b33d7b_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i);
inline jule::Bool _1a3b34200_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i);
inline jule::Bool _1a3b34574_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i);
inline jule::Str _1a3b34a6e_octalNum(jule::Slice<jule::U8>* _31814_txt);
inline jule::Str _1a3b34c4a_hexNum(jule::Slice<jule::U8>* _36012_txt);
inline jule::Str _1a3b3509c_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n);
inline jule::Str _1a3b35366_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt);
inline jule::Str _1a3b35630_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt);
inline jule::Str _1a3b358e9_hexByteEscape(jule::Slice<jule::U8>* _42119_txt);
inline jule::Str _1a3b35bb3_byteEscape(jule::Slice<jule::U8>* _42616_txt);
inline jule::Slice<_1e7c94ecb_Log> _1a3b3aba7_Lex(jule::Ptr<_1a3b2d2e8_File> _80612_f, jule::I64 _80622_mode);
inline jule::Bool _1a3c04c71_FindModuleFile(jule::Slice<jule::Ptr<_212303e27_DirEntry>>* _1320_dirents);
inline jule::Str _1a3c05029_FindModuleFileDeep(jule::Str _2527_path);
inline jule::Slice<_1e7c94ecb_Log> _1a3c052e3_CheckModuleFile(jule::Str* _4721_path);
inline jule::Bool _1a3c05b40_IsPub(jule::Str _910_ident);
inline jule::Bool _1a3c537d6_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1a3c6d812_ToRune(jule::Str _2015_lit);
inline jule::Str _1a3c6da21_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1a3c6dd62_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1a3c6e0e8_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1a3c6e46c_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i);
inline void _1a3c6e813_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i);
inline jule::I64 _1a3e2e52d_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i);
inline jule::Slice<jule::U8> _1a3e2e85d_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes);
inline void _1a3e2eb49_FmtByDefault(_1e7be2632_StrBuilder* _4722_buf, jule::Any* _4740_arg);
inline void _1a3e30067_applyFmtByDefault(_1e7be2632_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args);
inline void _1a3e30485_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _1e7be2632_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args);
inline jule::Slice<jule::U8> _1a3e30809_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args);
inline jule::Str _1a3e3282d_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_1a3b740ec_Fn> _1b5707ec1_runtimeFindFn(jule::Ptr<_1a3bd86d3_ImportInfo>* _923_runtime, jule::Str _945_ident);
inline jule::Bool _1a3b793aa_parameterUsesGenerics(jule::Ptr<_1a3b76055_ParamIns>* _38531_p, jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>>* _38546_generics);
inline jule::Ptr<_1a3cc2de9_TypeSymbol> _1a3b7bad8_buildType(jule::Ptr<_1a3b3d13d_TypeDecl> _9418_t);
inline jule::Ptr<_1a3c8a9a5_Value> _1a3b7bde6_buildExpr(jule::Ptr<_1a3b42472_Expr> _10318_expr);
inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3b7c1b0_buildTypeAlias(jule::Ptr<_1a3b54b5a_TypeAliasDecl> _11223_decl);
inline jule::Ptr<_1a3b5b117_Field> _1a3b7c501_buildField(jule::Ptr<_1a3b58510_FieldDecl> _12319_decl);
inline jule::Slice<jule::Ptr<_1a3b5b117_Field>> _1a3b7c787_buildFields(jule::Slice<jule::Ptr<_1a3b58510_FieldDecl>>* _13421_decls);
inline jule::Ptr<_1a3b5e03d_Struct> _1a3b7ca51_buildStruct(jule::Ptr<_1a3b58e06_StructDecl> _14220_decl);
inline jule::Ptr<_1a3b72628_Param> _1a3b7cd1a_buildParam(jule::Ptr<_1a3b4d89b_ParamDecl> _15419_decl);
inline jule::Slice<jule::Ptr<_1a3b72628_Param>> _1a3b7d1e4_buildParams(jule::Slice<jule::Ptr<_1a3b4d89b_ParamDecl>>* _16521_decls);
inline jule::Ptr<_1a3b71d97_RetType> _1a3b7d436_buildRetType(jule::Ptr<_1a3b41031_RetTypeDecl> _17321_decl);
inline jule::Ptr<_1a3b740ec_Fn> _1a3b7d700_buildFunc(jule::Ptr<_1a3b4eced_FnDecl> _18318_decl);
inline jule::Slice<jule::Ptr<_1a3b740ec_Fn>> _1a3b7d9b9_buildMethods(jule::Slice<jule::Ptr<_1a3b4eced_FnDecl>>* _20122_decls);
inline jule::Slice<jule::Ptr<_1a3cc2de9_TypeSymbol>> _1a3b7dc83_buildTraitInherits(jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>>* _20928_inherits);
inline jule::Ptr<_1a3b87a7d_Trait> _1a3b7e04c_buildTrait(jule::Ptr<_1a3b59643_TraitDecl> _21719_decl);
inline jule::Ptr<_1a3b8971c_EnumItem> _1a3b7e316_buildEnumItem(jule::Ptr<_1a3b566ea_EnumItemDecl> _22722_decl);
inline jule::Slice<jule::Ptr<_1a3b8971c_EnumItem>> _1a3b7e5d0_buildEnumItems(jule::Slice<jule::Ptr<_1a3b566ea_EnumItemDecl>>* _23524_decls);
inline jule::Ptr<_1a3b8a289_Enum> _1a3b7eaca_buildEnum(jule::Ptr<_1a3b572ab_EnumDecl> _24318_decl);
inline jule::Ptr<_1a3b8b3bc_TypeEnumItem> _1a3b7eca6_buildTypeEnumItem(jule::Ptr<_1a3b57ad6_TypeEnumItemDecl> _25326_decl);
inline jule::Slice<jule::Ptr<_1a3b8b3bc_TypeEnumItem>> _1a3b8004d_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a3b57ad6_TypeEnumItemDecl>>* _26128_decls);
inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3b80317_buildTypeEnum(jule::Ptr<_1a3b58246_TypeEnumDecl> _26922_decl);
inline jule::Ptr<_1a3c31c26_Var> _1a3b805d1_buildVar(jule::Ptr<_1a3b50ea8_VarDecl> _27817_decl);
inline jule::Slice<jule::Ptr<_1a3c31c26_Var>> _1a3b8089a_buildVars(jule::Slice<jule::Ptr<_1a3b50ea8_VarDecl>> _29518_decls);
inline jule::Ptr<_1a3bb11e4_Impl> _1a3b80b64_buildImpl(jule::Ptr<_1a3b59ca3_Impl> _30318_decl);
inline jule::Bool _1a3b87077_isImplicitImport(jule::Ptr<_1a3bd86d3_ImportInfo> _80421_imp);
inline jule::Ptr<_1a3c8982d_Data> _1a3bab6c8_buildAsComptimeMethodData(jule::Ptr<_1a3b770cd_FnIns>* _142135_f);
inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3bab9d6_findComptimePackage(jule::Ptr<_1a3c08b54_Sema>* _142929_s);
inline jule::Ptr<_1a3c8982d_Data> _1a3babd5a_buildComptimeTypeInfoData(jule::Ptr<_1a3c08b54_Sema>* _143535_s, jule::Ptr<_1a3cbac27_TypeKind>* _143550_t);
inline jule::Ptr<_1a3c8982d_Data> _1a3bac19b_buildComptimeValue(jule::Ptr<_1a3c8982d_Data>* _144328_d);
inline jule::Str _1a3bb018d_toStrConstraints(jule::Ptr<_1a3cb9341_InsGeneric> _14321_g);
inline jule::Bool _1a3bb0556_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a3cbac27_TypeKind>* _15434_g);
inline jule::Bool _1a3bb0820_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1a3bbdb08_scopeChecker> _1a3bb3427_newScopeCheckerBase(jule::Ptr<_1a3c08b54_Sema>* _5829_s, jule::Ptr<_1a3b770cd_FnIns> _5843_owner);
inline jule::Ptr<_1a3bbdb08_scopeChecker> _1a3bb37e0_newScopeChecker(jule::Ptr<_1a3c08b54_Sema>* _6625_s, jule::Ptr<_1a3b770cd_FnIns> _6639_owner);
inline jule::Ptr<_1a3bbc585_scopeLabel> _1a3bb3b64_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1a3bbdb08_scopeChecker> _7637_scope);
inline jule::Bool _1a3bb402c_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1a3bb664a_Scope>* _9034_sc);
inline jule::Bool _1a3bb43a1_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1a3bb664a_Scope>* _10434_sc);
inline jule::I64 _1a3bb4725_countMatchType(jule::Ptr<_1a3bba85d_Match>* _14720_m, jule::Ptr<_1a3cbac27_TypeKind>* _14732_t);
inline jule::Slice<jule::Ptr<_1a3c8982d_Data>> _1a3bb49de_getDatasFromTupleData(jule::Ptr<_1a3c8982d_Data>* _17131_d);
inline jule::Bool _1a3bb532a_checkMut(jule::Ptr<_1a3c08b54_Sema>* _20618_s, jule::Ptr<_1a3c8982d_Data>* _20629_left, jule::Ptr<_1a3c8982d_Data> _20646_right, jule::Ptr<_1a3b27a62_Token> _20660_op);
inline jule::Bool _1a3bb5814_checkAssign(jule::Ptr<_1a3c08b54_Sema>* _22521_s, jule::Ptr<_1a3c8982d_Data>* _22536_left, jule::Ptr<_1a3c8982d_Data> _22553_right, jule::Ptr<_1a3b27a62_Token> _22567_op);
inline jule::Bool _1a3bb5acd_isValidAstStForNextSt(jule::Any* _24731_n);
inline jule::Bool _1a3bb5d97_isValidStForNextSt(jule::Any* _25824_st);
inline jule::Bool _1a3bb6161_stmtIsDef(jule::Any* _27615_st);
inline jule::U64 _1a3bd1016_removeEqFromOp(jule::U64 _222519_op);
inline void _1a3bd1247_makeComptimeRange(jule::Ptr<_1a3c8982d_Data>* _225427_d);
inline jule::Bool _1a3bd1742_canComptimeMatch(jule::Ptr<_1a3c8982d_Data>* _227526_d);
inline jule::Ptr<_1a3c31c26_Var> _1a3bd5bb9_findVarInPackage(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded);
inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3bd613c_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded);
inline jule::Ptr<_1a3b5e03d_Struct> _1a3bd656b_findStructInPackage(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded);
inline jule::Ptr<_1a3b740ec_Fn> _1a3bd6a22_findFnInPackage(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded);
inline jule::Ptr<_1a3b87a7d_Trait> _1a3bd6d63_findTraitInPackage(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _9428_files, jule::Str* _9452_ident);
inline jule::Ptr<_1a3b8a289_Enum> _1a3bd71d7_findEnumInPackage(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _10627_files, jule::Str* _10651_ident);
inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3bd755b_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _11831_files, jule::Str* _11855_ident);
inline jule::Any _1a3bd7a9a_defByIdentPackage(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded);
inline jule::Bool _1a3bddad4_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p);
inline jule::Bool _1a3c06217_isValidModelForRef(jule::Any* _1328_m);
inline _1e7c94ecb_Log _1a3c066bd_compilerErr(jule::Ptr<_1a3b27a62_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args);
inline jule::Bool _1a3c06a42_impIsLookupable(jule::Ptr<_1a3bd86d3_ImportInfo>* _5621_i, jule::Str* _5638_ident);
inline void _1a3c06d72_appendRetVars(jule::Slice<jule::Ptr<_1a3c31c26_Var>>* _6823_dest, jule::Ptr<_1a3b770cd_FnIns>* _6842_f);
inline void _1a3c0715d_appendParamVars(jule::Slice<jule::Ptr<_1a3c31c26_Var>>* _9825_dest, jule::Ptr<_1a3b770cd_FnIns>* _9844_f);
inline void _1a3c07449_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>* _15834_dest, jule::Ptr<_1a3b770cd_FnIns>* _15859_f);
inline jule::Ptr<_1a3c844b5_SymbolTable> _1a3c077bd_findFile(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _19618_files, jule::Ptr<_1a3b2d2e8_File>* _19642_handler);
inline void _1a3c07c74_pushSuggestion(_1e7c94ecb_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args);
inline void _1a3c3040b_pushImplemented(jule::Ptr<_1a3b87a7d_Trait> _292924_t, jule::Ptr<_1a3b5e03d_Struct>* _292940_d);
inline void _1a3c306e7_pushImplements(jule::Ptr<_1a3b5e03d_Struct>* _294724_s, jule::Ptr<_1a3b87a7d_Trait> _294740_t);
inline jule::Bool _1a3c70094_traitHasReferenceReceiver(jule::Ptr<_1a3b87a7d_Trait>* _2831_t);
inline jule::Bool _1a3c7044b_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1a3c8982d_Data>* _4333_d);
inline jule::Bool _1a3c707c0_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1a3c8982d_Data>* _4830_d);
inline jule::Bool _1a3c70b88_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1a3c8982d_Data>* _7132_d);
inline jule::Bool _1a3c7100c_intAssignable(jule::Str _10018_kind, jule::Ptr<_1a3c8982d_Data>* _10030_d);
inline void _1a3c7c425_checkMutRiskOfStructLit(jule::Ptr<_1a3c08b54_Sema>* _92033_s, jule::Ptr<_1a3b66ebe_StructLitExprModel>* _92044_m);
inline jule::Ptr<_1a3cbac27_TypeKind> _1a3c83261_lenKind(void);
inline jule::Bool _1a3c835b3_isGoodValueToInfer(jule::Ptr<_1a3c8982d_Data>* _142124_d);
inline jule::Ptr<_1a3b3c55a_Directive> _1a3cb31c5_findDirective(jule::Slice<jule::Ptr<_1a3b3c55a_Directive>>* _425723_directives, jule::Str _425754_d);
inline jule::Any _1a3cb358d_findBuiltinsImport(jule::Str* _426624_ident, jule::Ptr<_1a3bd86d3_ImportInfo> _426636_imp);
inline void _1a3cb37be_fitBitsize(jule::Ptr<_1a3c8982d_Data>* _427520_d);
inline void _1a3cb3aee_makeStructLitAlloc(jule::Ptr<_1a3c8982d_Data>* _430428_d, jule::Ptr<_1a3b66ebe_StructLitExprModel>* _430443_lit);
inline jule::Ptr<_1a3c31c26_Var> _1a3cb3e73_buildErrorVar(jule::Ptr<_1a3bb664a_Scope>* _431523_s, jule::Ptr<_1a3b4619b_FnCallExpr>* _431539_fc);
inline jule::Any _1a3cb42e7_findBuiltinsSema(jule::Str* _433022_ident, jule::Ptr<_1a3c08b54_Sema> _433038_s);
inline jule::Bool _1a3cb45b1_isOkForShifting(jule::Ptr<_1a3c8982d_Data>* _435525_d);
inline jule::Bool _1a3cb498a_isInstancedStruct(jule::Ptr<_1a3b61cbb_StructIns> _437222_s);
inline jule::Bool _1a3cb4c87_isPtrArithmeticCompatible(jule::Ptr<_1a3c8982d_Data>* _437635_l, jule::Ptr<_1a3c8982d_Data>* _437650_r);
inline void _1a3cb512d_applyCastKindModel(jule::Ptr<_1a3c8982d_Data>* _439728_d, jule::Ptr<_1a3cbac27_TypeKind>* _439743_t, jule::Ptr<_1a3b27a62_Token>* _439762_token);
inline void _1a3cb54c4_applyCastKind(jule::Ptr<_1a3c8982d_Data>* _440623_d, jule::Ptr<_1a3cbac27_TypeKind>* _440638_t, jule::Ptr<_1a3b27a62_Token>* _440657_token);
inline jule::Ptr<_1a3c8982d_Data> _1a3cb56d3_buildVoidData(void);
inline jule::Str _1a3cb5a57_checkDataForIntegerIndexing(jule::Ptr<_1a3c8982d_Data>* _441737_d, jule::Ptr<_1a3b27a62_Token>* _441752_token);
inline void _1a3cb5ded_applyCastModelByEnum(jule::Ptr<_1a3c8982d_Data>* _444230_d, jule::Ptr<_1a3b8a289_Enum> _444244_e, jule::Ptr<_1a3b27a62_Token>* _444259_token);
inline void _1a3cb61d9_castConstByType(jule::Str* _445321_t, jule::Ptr<_1a3c8982d_Data>* _445334_d);
inline void _1a3cb6706_updateModelToGenericIns(jule::Any* _448733_m, jule::Ptr<_1a3b770cd_FnIns>* _448752_f);
inline jule::Bool _1a3cb696a_pushSubIdentFromExpr(jule::Any _449829_expr, jule::Ptr<_1a3b3da12_SubIdentTypeDecl>* _449850_t);
inline jule::Str _1a3cb6c34_constoa(jule::Ptr<_1b5747b9d_Const>* _452113_c);
inline jule::Ptr<_1a3c8982d_Data> _1a3cb7163_evalEnumStatic(jule::Ptr<_1a3b8a289_Enum>* _453224_enm, jule::Ptr<_1a3b8971c_EnumItem>* _453241_item, jule::Ptr<_1a3b27a62_Token>* _453263_token);
inline jule::Ptr<_1a3b66ebe_StructLitExprModel> _1a3cb742c_isLitBased(jule::Any* _454920_m);
inline void _1a3cb7718_makeImplicitDeref(jule::Ptr<_1a3c8982d_Data>* _456627_d, jule::Ptr<_1a3b27a62_Token> _456641_baseToken);
inline void _1a908783a_updateRefer(jule::Ptr<_1a3b7a257_ReferenceStack> _457723_ref, jule::Ptr<_1a3b770cd_FnIns>* _457746_old, jule::Ptr<_1a3b770cd_FnIns>* _457759_new);
inline void _1a3cb7d9a_makeVariadic(jule::Ptr<_1a3c8982d_Data>* _458522_d, jule::Ptr<_1a3cbac27_TypeKind> _458536_elem);
inline jule::Bool _1a3cb82c9_isVarCaptured(jule::Ptr<_1a3bbdb08_scopeChecker> _459918_r, jule::Ptr<_1a3bbdb08_scopeChecker> _459940_s, jule::Ptr<_1a3c31c26_Var> _459958_v);
inline jule::Bool _1a3cd647e_kindUsesGenerics(jule::Ptr<_1a3cbac27_TypeKind>* _171626_k, jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>>* _171641_generics);
inline jule::Bool _1a3cd6847_hasDirective(jule::Slice<jule::Ptr<_1a3b3c55a_Directive>>* _172622_directives, jule::Str _172653_tag);
inline jule::Bool _1a3cd6b11_canGetPtr(jule::Ptr<_1a3c8982d_Data>* _173519_d);
inline jule::Bool _1a3cd6e52_isValidForSptrType(jule::Ptr<_1a3cbac27_TypeKind>* _174728_t);
inline jule::Bool _1a3cd71d8_isValidForRef(jule::Ptr<_1a3cbac27_TypeKind>* _175623_t);
inline jule::Bool _1a3cd74a2_isBuiltinStrConvertable(jule::Ptr<_1a3cbac27_TypeKind>* _175933_t);
inline jule::Str _1a3cd776b_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _176327_tokens);
inline jule::Ptr<_1a3cc3801_Prim> _1a3cd7b45_buildPrimType(jule::Str _178218_kind);
inline void _1a3cd822d_applyImplicitCast(jule::Ptr<_1a3cbac27_TypeKind>* _181027_dest, jule::Ptr<_1a3c8982d_Data>* _181049_d, jule::Ptr<_1a3b27a62_Token>* _181064_token);
inline jule::Bool _1a3cd84e7_validTypeForXof(jule::Ptr<_1a3cbac27_TypeKind>* _183825_t);
inline __jule_tuple_x_1a3c844b5_SymbolTable__jule_tuple_s_1e7c94ecb_Log _1a3cdb60a_buildSymbols(jule::Ptr<_1a3b3b180_Ast>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1a3b8122a_symbolBuilder> _1662_owner);
inline void _1a3cdb93a_collectImplicitImports(jule::Ptr<_1a3c08b54_Sema>* _3132_s, jule::Ptr<_1a3c844b5_SymbolTable>* _3147_file);
inline __jule_tuple_x_1a3bdb609_Package__jule_tuple_s_1e7c94ecb_Log _1a3cdbd69_analyzePackage(jule::Slice<jule::Ptr<_1a3b3b180_Ast>>* _4524_files, jule::Trait* _4544_importer, jule::I64* _4565_flags);
inline __jule_tuple_x_1a3bdb609_Package__jule_tuple_s_1e7c94ecb_Log _1a3cdc320_AnalyzePackage(jule::Slice<jule::Ptr<_1a3b3b180_Ast>> _9423_files, jule::Trait _9442_importer, jule::I64 _9462_flags);
inline jule::Ptr<_1a3b770cd_FnIns> _1a3e33334_findBuiltinFunc(jule::Str* _2621_ident);
inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3e33642_primTypeAlias(jule::Ptr<_1a3cbac27_TypeKind>* _6623_k);
inline jule::Ptr<_1a3c31c26_Var> _1a3e36ee7_findBuiltinVar(jule::Str* _9420_ident);
inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3e37338_findBuiltinTypeAlias(jule::Str _14225_ident);
inline jule::Any _1a3e375be_findBuiltinDef(jule::Str* _19720_ident);
inline jule::Any _1a3e37888_findBuiltinDefStdDebug(jule::Str* _21328_ident);
inline jule::Any _1a3e37b52_findBuiltinDefStdMem(jule::Str* _22626_ident);
inline jule::Any _1a3e3802b_findBuiltinDefStdComptime(jule::Str* _24231_ident);
inline jule::Any _1a3e3826d_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident);
inline jule::Any _1a3e385e2_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident);
inline jule::Ptr<_1a3c8982d_Data> _1a3e38966_builtinCallerError(jule::Ptr<_1a3c8b555_Eval>* _30028_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _30043_fc);
inline jule::Ptr<_1a3c8982d_Data> _1a3e38d95_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _32226_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _32241_fc, jule::Ptr<_1a3c8982d_Data>* );
inline jule::Ptr<_1a3c8982d_Data> _1a3e392c4_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _34628_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _34643_fc, jule::Ptr<_1a3c8982d_Data>* _34665_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e39703_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _35826_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _35841_fc, jule::Ptr<_1a3c8982d_Data>* _35863_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e39b32_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _42028_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _42043_fc, jule::Ptr<_1a3c8982d_Data>* );
inline jule::Ptr<_1a3c8982d_Data> _1a3e3a292_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _44627_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _44642_fc, jule::Ptr<_1a3c8982d_Data>* _44664_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e3a5b1_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _49729_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _49744_fc, jule::Ptr<_1a3c8982d_Data>* _49766_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e3aa9a_callerCopySlice(jule::Ptr<_1a3c8982d_Data>* _60625_dest, jule::Ptr<_1a3c8b555_Eval>* _60643_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _60658_fc, jule::Ptr<_1a3c8982d_Data>* _60680_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e3aec9_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _64027_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _64042_fc, jule::Ptr<_1a3c8982d_Data>* _64064_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e3b34d_callerLenSlice(jule::Ptr<_1a3c8982d_Data>* _66524_expr, jule::Ptr<_1a3c8982d_Data>* _66542_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e3b6c2_callerLenMap(jule::Ptr<_1a3c8982d_Data>* _67322_expr, jule::Ptr<_1a3c8982d_Data>* _67340_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e3ba46_callerLenArr(jule::Ptr<_1a3c8982d_Data>* _68122_expr, jule::Ptr<_1a3c8982d_Data>* _68140_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e3bdba_callerLenStr(jule::Ptr<_1a3c8982d_Data>* _68822_expr, jule::Ptr<_1a3c8982d_Data>* _68840_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e3c23e_callerLenComptime(jule::Ptr<_1a3c8982d_Data>* _70127_d, jule::I64 _70137_n);
inline jule::Ptr<_1a3c8982d_Data> _1a3e3c66d_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _70826_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _70841_fc, jule::Ptr<_1a3c8982d_Data>* _70863_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e3c9e2_callerCapSlice(jule::Ptr<_1a3c8982d_Data>* _74624_expr, jule::Ptr<_1a3c8982d_Data>* _74642_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e3ce21_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _75426_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _75441_fc, jule::Ptr<_1a3c8982d_Data>* _75463_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e3d40a_callerDeleteMap(jule::Ptr<_1a3c8b555_Eval>* _77725_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _77740_fc, jule::Ptr<_1a3c8982d_Data>* _77762_expr, jule::Ptr<_1a3c8982d_Data>* _77780_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e3d839_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _80629_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _80644_fc, jule::Ptr<_1a3c8982d_Data>* _80666_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e3dc68_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _82929_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _82944_fc, jule::Ptr<_1a3c8982d_Data>* );
inline jule::Ptr<_1a3c8982d_Data> _1a3e3e197_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _87340_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _87355_fc, jule::Ptr<_1a3c8982d_Data>* );
inline jule::Ptr<_1a3c8982d_Data> _1a3e3e818_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _90941_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _90956_fc, jule::Ptr<_1a3c8982d_Data>* );
inline jule::Ptr<_1a3c8982d_Data> _1a3e3ec47_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _92938_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _92953_fc, jule::Ptr<_1a3c8982d_Data>* );
inline jule::Ptr<_1a3c8982d_Data> _1a3e40176_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _94138_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _94153_fc, jule::Ptr<_1a3c8982d_Data>* );
inline jule::Ptr<_1a3c8982d_Data> _1a3e405a5_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _95439_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _95454_fc, jule::Ptr<_1a3c8982d_Data>* );
inline jule::Ptr<_1a3c8982d_Data> _1a3e409d4_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _96743_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _96758_fc, jule::Ptr<_1a3c8982d_Data>* );
inline jule::Ptr<_1a3c8982d_Data> _1a3e40e13_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _102735_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _102750_fc, jule::Ptr<_1a3c8982d_Data>* );
inline jule::Ptr<_1a3c8982d_Data> _1a3e41342_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _105236_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _105251_fc, jule::Ptr<_1a3c8982d_Data>* );
inline jule::Ptr<_1a3c8982d_Data> _1a3e41771_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _107733_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _107748_fc, jule::Ptr<_1a3c8982d_Data>* );
inline jule::Ptr<_1a3c8982d_Data> _1a3e41ba0_builtinCallerStdJuleIntegratedToStr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _110045_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _110060_fc, jule::Ptr<_1a3c8982d_Data>* );
inline jule::Ptr<_1a3c8982d_Data> _1a3e420ce_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _112744_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _112759_fc, jule::Ptr<_1a3c8982d_Data>* _112781_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e4250d_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _117834_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _117849_fc, jule::Ptr<_1a3c8982d_Data>* _117871_d);
inline jule::Ptr<_1a3c8982d_Data> _1a3e4293c_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _118736_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _118751_fc, jule::Ptr<_1a3c8982d_Data>* _118773_d);
inline jule::Ptr<_1a55a639b_FileInfo> _1a55e9d4b_ParseFile(jule::Ptr<_1a3b2d2e8_File> _2318_f);
inline __jule_tuple_x_1a3b3b180_Ast__jule_tuple_s_1e7c94ecb_Log _1a55ea3e0_parseFileset(jule::Ptr<_1a3b2d2e8_File> _5521_f);
inline jule::Ptr<_1a3b4d15e_ScopeTree> _1a55ead80_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1a55eb215_isSt(jule::Ptr<_1a3b27a62_Token> _499_current, jule::Ptr<_1a3b27a62_Token> _4926_prev);
inline jule::Bool _1a55eb589_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _5526_tokens, jule::I64* _5545_i);
inline __jule_tuple_int__jule_tuple_bool _1a55eb952_nextStPos(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _6815_tokens, jule::I64 _6833_start);
inline __jule_tuple_sx_1a3b27a62_Token__jule_tuple_bool _1a55ebcc6_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _13028_tokens);
inline jule::Slice<jule::Ptr<_1a55ec106_stmt>> _1a55ec4ad_splitStmts(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _15120_tokens);
inline jule::Bool _1a5615b14_isTypeOp(jule::U64* _89314_id);
inline jule::Bool _1a5615e22_isTypeRange(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _90021_tokens);
inline jule::Slice<jule::Ptr<_1a3b27a62_Token>> _1a56161db_getBlockExpr(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _93322_tokens);
inline __jule_tuple_sx_1a3b27a62_Token__jule_tuple_sx_1a3b27a62_Token _1a56165a4_splitDelim(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _96520_tokens, jule::U64 _96538_delim);
inline jule::I64 _1a561686d_findLowestPrecOp(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _100422_tokens);
inline jule::Ptr<_1a3b43c8c_IdentExpr> _1a5616b37_buildIdentExpr(jule::Ptr<_1a3b27a62_Token>* _106924_token);
inline __jule_tuple_sx_1a3b27a62_Token__jule_tuple_int _1a5616e01_getRangeExprTokens(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _107728_tokens);
inline jule::Bool _1a56172ca_isAnonFnHead(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _110018_tokens);
inline jule::Bool _1a5617ece_checkAssignTokens(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _1623_tokens);
inline _1e7c94ecb_Log _1a561919a_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1a3b2d2e8_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args);
inline jule::Slice<jule::Ptr<_1a3b27a62_Token>> _1a56196c8_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _6959_tokens);
inline __jule_tuple_sx_1a3b27a62_Token__jule_tuple_sx_1a3b27a62_Token _1a5619992_rangeLast(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _9919_tokens);
inline __jule_tuple_ssx_1a3b27a62_Token__jule_tuple_s_1e7c94ecb_Log _1a5619e48_parts(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust);
inline jule::U64 _1a561a1ce_getCloseOfBrace(jule::U64 _16720_left);
inline _1e7c94ecb_Log _1a561a60d_compilerErr(jule::Ptr<_1a3b27a62_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args);
inline void _1a561a9a4_pushSuggestion(_1e7c94ecb_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args);
inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a562c884_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1b71c820e_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1b71e2b30_checkArch(jule::Str _2814_arg);
inline jule::Bool _1b71e2da5_isPassFileAnnotation(jule::Str _5029_p);
inline void _1a414dd68_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1a414e0dd_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1a414e3c9_initVars(jule::Slice<jule::Str>* _5518_vars, _1a414da49_CompileInfo* _5532_info);
inline jule::Slice<jule::U8> _1a5631987_readBuff(jule::Str _3013_path);
inline _1e7c94ecb_Log _1a5631c95_flatCompilerErr(jule::Str _4120_text);
inline jule::Ptr<_1a3b740ec_Fn> _1a3e4b171_RuntimeFindFn(jule::Ptr<_1a3bd86d3_ImportInfo>* _1123_runtime, jule::Str _1145_ident);
inline void _1a5636607_pushPasses(jule::Ptr<_1a3bdb609_Package>* _12120_p, jule::Slice<jule::Str>* _12144_passes);
inline jule::Slice<jule::Str> _1a56369c0_getAllUniquePasses(jule::Ptr<_1a3bdb609_Package>* _13828_pkg, jule::Slice<jule::Ptr<_1a3bd86d3_ImportInfo>> _13853_uses);
inline _1a414da49_CompileInfo _1a5636bce_buildCompileInfo(void);
inline void _1a5636e87_pushRuntimeToAST(jule::Ptr<_1a3b3b180_Ast>* _17726_f);
inline void _1a5637680_IterPackages(jule::Ptr<_1a5634c54_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1a3bdb609_Package>*> _731_f);
inline void _1a56379b0_IterFiles(jule::Ptr<_1a3bdb609_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1a3c844b5_SymbolTable>*> _1634_f);
inline void _1a5637d56_iterTraitInheritMethods(jule::Ptr<_1a3b87a7d_Trait>* _2233_base, jule::Ptr<_1a3b87a7d_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1a3b740ec_Fn>*> _2263_f);
inline void _1a5638274_iterTraitInheritMethods1(jule::Ptr<_1a3b87a7d_Trait>* _3134_base, jule::Ptr<_1a3b87a7d_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1a3b740ec_Fn>*> _3164_f);
inline void _1a563852c_IterTraitMethods(jule::Ptr<_1a3b87a7d_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1a3b740ec_Fn>*> _3937_f);
inline jule::Bool _1a56408b9_IsForwarded(jule::Ptr<_1a3bb664a_Scope>* _2417_s);
inline jule::Bool _1a5640bc7_IsExprComesFromBind(jule::Ptr<_1a3c8982d_Data>* _4025_d);
inline jule::Bool _1a5640e91_IsAny(jule::Ptr<_1a3cbac27_TypeKind>* _5215_t);
inline jule::Bool _1a56412d2_IsClosure(jule::Ptr<_1a3b69037_AnonFnExprModel>* _6115_m);
inline jule::Bool _1a5641568_IsOpMethod(jule::Ptr<_1a3b740ec_Fn>* _6416_m);
inline jule::Bool _1a56418dc_IsTraitMethod(jule::Ptr<_1a3b61cbb_StructIns>* _8023_owner, jule::Ptr<_1a3b770cd_FnIns>* _8043_f);
inline jule::Bool _1a5641c61_IsStdPackage(jule::Str* _9318_f, jule::Str _9326_p);
inline jule::Bool _1a564213a_IsImplicitImport(jule::Ptr<_1a3bd86d3_ImportInfo> _10121_imp);
inline jule::Ptr<_1a3b3c55a_Directive> _1a5642c62_FindDirective(jule::Slice<jule::Ptr<_1a3b3c55a_Directive>>* _1123_directives, jule::Str _1154_tag);
inline jule::Bool _1a564312a_HasDirective(jule::Slice<jule::Ptr<_1a3b3c55a_Directive>>* _2118_directives, jule::Str _2149_tag);
inline jule::Bool _1a564349e_ContainsTraitMethod(jule::Ptr<_1a3b87a7d_Trait>* _2629_t, jule::Str* _2641_ident);
inline jule::I64 _1a5643b64_FindTraitTypeOffsetS(jule::Ptr<_1a3b87a7d_Trait> _3925_t, jule::Ptr<_1a3b61cbb_StructIns> _3940_s);
inline jule::I64 _1a5643ed8_FindTraitTypeOffset(jule::Ptr<_1a3b87a7d_Trait> _6224_t, jule::Ptr<_1a3cbac27_TypeKind> _6239_k);
inline jule::Ptr<_1a3b770cd_FnIns> _1a5644417_FindOperator(jule::Ptr<_1a3b61cbb_StructIns>* _7822_s, jule::U64 _7837_op, jule::Bool _7850_unary);
inline jule::Ptr<_1a3b770cd_FnIns> _1a564478b_FindGenericInstance(jule::Ptr<_1a3b740ec_Fn>* _14729_f, jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>> _14737_generics);
inline jule::Bool _1aa1c1b3d_isOrdered(jule::Ptr<_1a3c31c26_Var>* _1418_t, jule::Slice<jule::Ptr<_1a3c31c26_Var>> _1425_s);
inline jule::Bool _1aa1c87c1_isOrdered(jule::Ptr<_1a3b5e03d_Struct>* _1418_t, jule::Slice<jule::Ptr<_1a3b5e03d_Struct>> _1425_s);
inline void _1aa1bd91a_order(jule::Slice<jule::Ptr<_1a3c31c26_Var>> _3717_s);
inline void _1aa1c406e_order(jule::Slice<jule::Ptr<_1a3b5e03d_Struct>> _3717_s);
inline void _1a5133027_EliminateDefines(jule::Ptr<_1a5634c54_IR>* _30626_ir);
inline void _1a5136e93_eliminateDeadCodeOfScope(jule::Ptr<_1a3bb664a_Scope> _23833_s);
inline void _1a5137218_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a3b740ec_Fn>>* _25033_funcs);
inline void _1a5137449_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1a3b5e03d_Struct>>* _25937_structs);
inline void _1a5137702_eliminateFunctionsScopePackage(jule::Ptr<_1a3bdb609_Package>* _26740_pkg);
inline void _1a5137900_eliminateScopePackage(jule::Ptr<_1a3bdb609_Package>* _27431_pkg);
inline void _1a5137b31_EliminateScopes(jule::Ptr<_1a5634c54_IR>* _27925_ir);
inline jule::Uintptr _1a3e42c8e_typeData(jule::Any* _1714_m);
inline jule::Bool _1a3e43157_equalConst(jule::Ptr<_1b5747b9d_Const> _2115_l, jule::Ptr<_1b5747b9d_Const> _2126_r);
inline jule::Bool _1a3e434cb_equalCasting(jule::Ptr<_1a3b6784e_CastingExprModel> _4017_l, jule::Ptr<_1a3b6784e_CastingExprModel> _4039_r);
inline jule::Bool _1a3e43894_equalUnary(jule::Ptr<_1a3b665ea_UnaryExprModel> _4715_l, jule::Ptr<_1a3b665ea_UnaryExprModel> _4735_r);
inline jule::Bool _1a3e43c18_equalIndexing(jule::Ptr<_1a3b68a81_IndexingExprModel> _5418_l, jule::Ptr<_1a3b68a81_IndexingExprModel> _5441_r);
inline jule::Bool _1a3e4408c_equalBinary(jule::Ptr<_1a3b66221_BinaryExprModel> _5916_l, jule::Ptr<_1a3b66221_BinaryExprModel> _5937_r);
inline jule::Bool _1a3e44411_equalModels(jule::Any _7016_l, jule::Any _7030_r);
inline void _1a3e4a02c_possibleNilRemove(jule::Ptr<_1a3e4904d_nils>* _7827_n, jule::Any _7837_m);
inline jule::Bool _1a3e4a3e5_isGuaranteedNonNilExpr(jule::Ptr<_1a3e4904d_nils>* _8432_n, jule::Any _8442_m);
inline jule::Bool _1a3e4a6ae_isNilValidType(jule::Ptr<_1a3cbac27_TypeKind> _9223_t);
inline jule::Uintptr _1a3e4aa00_getNilVar(jule::Any _9414_m);
inline jule::Bool _1a564b353_isConstantValidConditionalCase(jule::Ptr<_1a3bb6a68_If>* _68236_i);
inline jule::Bool _1a564b661_isUnreachableExpr(jule::Any* _69123_expr);
inline jule::Bool _1a564b92a_isConstantValidMatchCase(jule::Ptr<_1a3bbb386_Case>* _70630_case);
inline jule::Bool _1a564bc6b_isUnreachableConditionalCase(jule::Ptr<_1a3bb6a68_If>* _71534_i);
inline jule::Bool _1a564c002_isUnreachableMatchCase(jule::Ptr<_1a3bbb386_Case>* _71928_case);
inline __jule_tuple_bool__jule_tuple_u64 _1a56524d0_checkForBitShiftOpt(jule::Ptr<_1a3b65c26_OperandExprModel>* _58325_l, jule::Ptr<_1a3b65c26_OperandExprModel>* _58348_r);
inline jule::Bool _1a5652898_areSameLvalueExprModel(jule::Any* _60028_l, jule::Any* _60043_r);
inline void _1a5654a65_possibleDynamicRemove(jule::Ptr<_1a56539cb_dynamic>* _8131_d, jule::Any _8144_m);
inline jule::Bool _1a5654d73_isDynamicValidType(jule::Ptr<_1a3cbac27_TypeKind> _8727_t);
inline jule::Ptr<_1a3cbac27_TypeKind> _1a56552a2_isTypeGuaranteedDynamicData(jule::Ptr<_1a56539cb_dynamic>* _8937_dy, jule::Ptr<_1a3cbac27_TypeKind> _8955_t, jule::Any _8973_m);
inline jule::Uintptr _1a56555e3_getDynamicVar(jule::Any _11418_m);
inline jule::Bool _1a5659152_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I64 _1a565951a_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr);
inline jule::Bool _1a565988e_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2);
inline void _1a5659bbe_possibleBoundaryRemove(jule::Ptr<_1a56580da_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1a5659e88_isBoundaryRiskyType(jule::Ptr<_1a3cbac27_TypeKind> _13628_t);
inline jule::Bool _1a565a252_isBoundaryValidType(jule::Ptr<_1a3cbac27_TypeKind> _14128_t);
inline jule::Uintptr _1a565a51b_getBoundaryVar(jule::Any _14319_m);
inline void _1a565d596_PushOptLevel(jule::I64 _3217_level);
inline void _1a513b3e8_detectEnabled(void);
inline void _1a51634db_Throw(jule::Str _910_msg);
inline jule::U64 _1a5dac377_unix(void);
inline jule::Bool _1a5ce09a3_isCopyOptimizable(jule::Ptr<_1a3c8982d_Data>* _108423_expr);
inline jule::Bool _1a5ce0d6b_isIterCopyOptimizable(jule::Ptr<_1a3c8982d_Data>* _109527_expr, jule::Ptr<_1a3c31c26_Var>* _109541_v);
inline jule::Bool _1a5ce129a_captureVarHandling(jule::Ptr<_1a5db5abc_ObjectCoder>* _110228_oc, jule::Ptr<_1a3b69037_AnonFnExprModel>* _110251_m, jule::Ptr<_1a3c31c26_Var>* _110277_v);
inline jule::Str _1a5d02da0_decomposeCommonEsq(jule::U8 _164523_b);
inline jule::Str _1a5d031ad_sbtoa(jule::U8 _167210_b);
inline void _1a5d03499_cstrBytes(_1e7be2632_StrBuilder* _169219_s, jule::Str _169234_ctx);
inline void _1a5d037c9_cstrLit(_1e7be2632_StrBuilder* _169817_s, jule::Str _169832_ctx);
inline void _1a5d03b70_ftoa(_1e7be2632_StrBuilder* _170414_s, jule::F64 _170429_f, jule::I64 _170437_bitsize);
inline void _1a5d03e5b_itoa(_1e7be2632_StrBuilder* _172214_s, jule::I64 _172229_x);
inline void _1a5d04247_utoa(_1e7be2632_StrBuilder* _173914_s, jule::U64 _173929_x);
inline void _1a5d04896_operatorOverloadingBinary(_1e7be2632_StrBuilder* _175335_buf, jule::Ptr<_1a3b61cbb_StructIns>* _175357_s, jule::Str* _175373_l, jule::Str* _17543_r, jule::U64 _175411_op, jule::Str _175424_kind);
inline jule::Slice<jule::U8> _1a5dc2d93_concatAllParts(jule::Slice<jule::Ptr<_1a3b27a62_Token>> _128419_parts);
inline jule::Bool _1a5dc31a1_isHeadDecl(jule::Ptr<_1a3b740ec_Fn>* _130020_m);
inline jule::Bool _1a5dc346a_defaultEq(jule::Ptr<_1a3b61cbb_StructIns>* _131315_s);
inline jule::Bool _1a5dd2369_shouldInitialized(jule::Ptr<_1a3cbac27_TypeKind>* _46427_t);
inline void _212131c99_printErrorMessage(jule::Str _3022_msg);
inline void _21213201e_help(jule::Slice<jule::Str>* _3510_args);
inline void _212132250_version(jule::Slice<jule::Str>* _6313_args);
inline void _21213245e_toolDistos(void);
inline void _2121325c4_toolDistarch(void);
inline void _2121327c2_tool(jule::Slice<jule::Str>* _9410_args);
inline void _212132a03_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _212132d44_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _212133086_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _21213322e_showInfo(void);
void entry_point(void);
inline void _1a610899c_init(void);
inline jule::Ptr<_212305ce7_File> _1a6108c66_openOutput(jule::Str* _4316_path);
inline void _1a6108e0e_clearObjects(void);
inline void _1a610921c_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd);
inline jule::Bool _1a61094d6_isCppSourceFile(jule::Str _9920_path);
inline void _1a6109717_pushCompCmdClang(_1e7be2632_StrBuilder* _10726_cmd);
inline void _1a6109948_pushCompCmdGcc(_1e7be2632_StrBuilder* _13324_cmd);
inline __jule_tuple_str__jule_tuple_str _1a6109dcc_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1a5634c54_IR>* _15936_ir);
inline jule::Str _1a610a064_getCompilePath(void);
inline void _1a610a295_applyTargetIndependentOptimizations(jule::Ptr<_1a5634c54_IR>* _20545_ir);
inline void _1a610a43d_checkCompilerFlag(void);
inline void _1a610a64c_checkTargetArch(jule::Str _22720_arch);
inline void _1a3cdcee1_checkTargetOs(jule::Str _23518_os);
inline void _1a3ce86c2_checkTargetFlag(jule::Str* _24321_target);
inline void _1a3ce8815_checkOptFlag(jule::Str* _26618_opt);
inline void _1a3ce8b9a_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1a3ce8e42_checkFlags(jule::Slice<jule::Str>* _29216_args);
inline void _1a3ce9173_setupSemaFlags(jule::I64* _33724_flags);
inline jule::Ptr<_1a5634c54_IR> _1a3ce943c_buildIr(jule::Slice<jule::Str>* _34313_args);
inline void _1a3ce966d_compileCommand(jule::Slice<jule::Str>* _38324_args);


struct _1a3b8e964_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1a3b8e15b_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3c31c26_Var>* _2426_keyA, jule::Ptr<_1a3c31c26_Var>* _2443_keyB);
	void(*_1a3b8e579_step)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a3c31c26_Var>* _2533_keyA, jule::Ptr<_1a3c31c26_Var>* _2550_keyB);
	jule::I64(*_1a3b8e810_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1a3bd57bd_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1a3bd459c_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1a3bd4833_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1a3bd4b74_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id);
	jule::Ptr<_1a3bd86d3_ImportInfo>(*_1a3bd4eb5_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1a3b3b180_Ast__jule_tuple_s_1e7c94ecb_Log(*_1a3bd53b1_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod);
	void(*_1a3bd5669_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3bd86d3_ImportInfo> _4128__0);
};

struct _1a3cba771_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1a3cba2cb_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1a3cba61c_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other);
};

struct _1a3cda818_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1a3bd86d3_ImportInfo>(*_1a3cd8b02_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>> _929_selector);
	jule::Ptr<_1a3c31c26_Var>(*_1a3cd8eed_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1a3cb9e35_TypeAlias>(*_1a3cd93e9_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1a3b5e03d_Struct>(*_1a3cd97e5_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1a3b740ec_Fn>(*_1a3cd9be1_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1a3b87a7d_Trait>(*_1a3cda032_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1a3b8a289_Enum>(*_1a3cda373_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1a3b8b994_TypeEnum>(*_1a3cda6b4_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1a6101610_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1a6100c91_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1a6101027_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1a61012ad_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1a61014ab_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b92318_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b955c4_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b98066_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b9b7ea_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b9cdb2_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3ba831d_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a563227e_JuleImporter>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b61cbb_StructIns>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b770cd_FnIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b87a7d_Trait>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b8a289_Enum>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b8b994_TypeEnum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b8eb84_comptimeRange>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b90657_comptimeStructField>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b93913_comptimeStatic>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b96bbe_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b99661_comptimeParam>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b9e4ac_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3ba59be_comptimeValue>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3ba9918_comptimeFile>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3cbac27_TypeKind>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3cc3801_Prim>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3cc732c_Sptr>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3cc7d00_Slc>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3cc88e4_Tuple>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3cc9494_Map>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3cca121_Arr>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3ccaae4_Ptr>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5dc4944_customType>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bbdb08_scopeChecker>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bd86d3_ImportInfo>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bdb609_Package>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3c08b54_Sema>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3c844b5_SymbolTable>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa98371d_Flag>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa9872c1_Flag>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa98a934_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa98e0db_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa99274e_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3c31c26_Var>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b59ca3_Impl>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b54b5a_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b58e06_StructDecl>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b4eced_FnDecl>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b59643_TraitDecl>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b50ea8_VarDecl>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b572ab_EnumDecl>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b58246_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b5747b9d_Const>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bb8edd_Label>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bb664a_Scope>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6e9ee_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3c8982d_Data>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b70d0d_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6d778_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6bcb5_BuiltinOutCallExprModel>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6c18e_BuiltinOutlnCallExprModel>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6c942_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6cde8_BuiltinAssertCallExprModel>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6e625_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6e24b_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b7110a_FreeExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b68201_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bb7283_Conditional>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bb7580_InfIter>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b5242c_WhileKind>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bb7a36_WhileIter>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b52d34_RangeKind>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bb8482_RangeIter>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bb8817_ContSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bb93b7_GotoSt>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bb9791_Postfix>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bb9c47_Assign>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b43c8c_IdentExpr>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b68a81_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bba1ed_MultiAssign>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bba85d_Match>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bbba7e_FallSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bb8be1_BreakSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3bbbe25_RetSt>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b4d15e_ScopeTree>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b42472_Expr>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b5441d_Conditional>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b51b02_Iter>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b535d7_ContSt>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b4a722_LabelSt>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b4aaeb_GotoSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b4badb_AssignSt>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b5592a_MatchCase>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b4ade8_FallSt>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b5320d_BreakSt>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b51382_RetSt>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b42d46_UseExpr>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b740ec_Fn>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b5e03d_Struct>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3cb9e35_TypeAlias>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b40409_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b3e56d_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b3eb67_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b3e1d8_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b40b57_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b3e86a_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b3d748_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b44908_VariadicExpr>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b685ca_SliceExprModel>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b46b91_FieldExprPair>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b4829c_KeyValPair>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b43066_TupleExpr>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6b8db_TupleExprModel>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b4619b_FnCallExpr>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b70637_RuneExprModel>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6b5de_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b45585_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b3da12_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b4452e_UnaryExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b3d13d_TypeDecl>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b451ab_NsSelectionExpr>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b3dddb_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b69e4a_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6784e_CastingExprModel>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b489c8_SliceExpr>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b66ebe_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6b215_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6a4cd_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6ad6e_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b698b7_MapExprModel>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b69037_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b4273b_RangeExpr>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b4340c_LitExpr>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b437d6_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b49435_IndexingExpr>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b49a95_SlicingExpr>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b44cd2_CastExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b474bb_StructLit>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b47972_BraceLit>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b45a3b_BinaryExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b665ea_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b66221_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b672bb_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6c568_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6d39e_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6da75_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b6dd72_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b701a3_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b70390_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b70934_IntegratedToStrExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e45049_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e47931_StrRuneIter>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e46622_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e4691e_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e4717d_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e47557_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e453bd_SwapExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e45797_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e4608e_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e47c2d_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e45b1b_RefExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3b66b28_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e4802a_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3e46ca4_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1a8c11a47_1a8bb8328(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3c31c26_Var>* _2426_keyA, jule::Ptr<_1a3c31c26_Var>* _2443_keyB) {
	_1a3b92e51_ready(_self_.as<_1a3b92318_comptimeStructFields>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1a8c11a47_1a8bd10bb(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3c31c26_Var>* _2426_keyA, jule::Ptr<_1a3c31c26_Var>* _2443_keyB) {
	_1a3b9620c_ready(_self_.as<_1a3b955c4_comptimeStatics>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1a8c11a47_1a8bbe76e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3c31c26_Var>* _2426_keyA, jule::Ptr<_1a3c31c26_Var>* _2443_keyB) {
	_1a3b98b9e_ready(_self_.as<_1a3b98066_comptimeEnumFields>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1a8c11a47_1a8bc4a82(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3c31c26_Var>* _2426_keyA, jule::Ptr<_1a3c31c26_Var>* _2443_keyB) {
	_1a3b9c400_ready(_self_.as<_1a3b9b7ea_comptimeParams>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1a8c11a47_1a8bcce86(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3c31c26_Var>* _2426_keyA, jule::Ptr<_1a3c31c26_Var>* _2443_keyB) {
	_1a3b9d9ea_ready(_self_.as<_1a3b9cdb2_comptimeTypeInfos>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1a8c11a47_1a8be1076(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3c31c26_Var>* _2426_keyA, jule::Ptr<_1a3c31c26_Var>* _2443_keyB) {
	_1a3ba8e56_ready(_self_.as<_1a3ba831d_comptimeFiles>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1a8c12185_1a8bb8328(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a3c31c26_Var>* _2533_keyA, jule::Ptr<_1a3c31c26_Var>* _2550_keyB) {
	_1a3b9336e_step(_self_.as<_1a3b92318_comptimeStructFields>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1a8c12185_1a8bd10bb(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a3c31c26_Var>* _2533_keyA, jule::Ptr<_1a3c31c26_Var>* _2550_keyB) {
	_1a3b9662a_step(_self_.as<_1a3b955c4_comptimeStatics>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1a8c12185_1a8bbe76e(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a3c31c26_Var>* _2533_keyA, jule::Ptr<_1a3c31c26_Var>* _2550_keyB) {
	_1a3b990bc_step(_self_.as<_1a3b98066_comptimeEnumFields>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1a8c12185_1a8bc4a82(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a3c31c26_Var>* _2533_keyA, jule::Ptr<_1a3c31c26_Var>* _2550_keyB) {
	_1a3b9c81d_step(_self_.as<_1a3b9b7ea_comptimeParams>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1a8c12185_1a8bcce86(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a3c31c26_Var>* _2533_keyA, jule::Ptr<_1a3c31c26_Var>* _2550_keyB) {
	_1a3b9de18_step(_self_.as<_1a3b9cdb2_comptimeTypeInfos>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1a8c12185_1a8be1076(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a3c31c26_Var>* _2533_keyA, jule::Ptr<_1a3c31c26_Var>* _2550_keyB) {
	_1a3ba9374_step(_self_.as<_1a3ba831d_comptimeFiles>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline jule::I64 __jule_trait_method_1a8c128c2_1a8bb8328(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b93605_len(_self_.as<_1a3b92318_comptimeStructFields>().alloc);
}
inline jule::I64 __jule_trait_method_1a8c128c2_1a8bd10bb(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b968b1_len(_self_.as<_1a3b955c4_comptimeStatics>().alloc);
}
inline jule::I64 __jule_trait_method_1a8c128c2_1a8bbe76e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b99353_len(_self_.as<_1a3b98066_comptimeEnumFields>().alloc);
}
inline jule::I64 __jule_trait_method_1a8c128c2_1a8bc4a82(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b9caa4_len(_self_.as<_1a3b9b7ea_comptimeParams>().alloc);
}
inline jule::I64 __jule_trait_method_1a8c128c2_1a8bcce86(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b9e19e_len(_self_.as<_1a3b9cdb2_comptimeTypeInfos>().alloc);
}
inline jule::I64 __jule_trait_method_1a8c128c2_1a8be1076(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3ba960a_len(_self_.as<_1a3ba831d_comptimeFiles>().alloc);
}
inline void __jule_trait_method_1a8c12d45_1aa1511e9(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1a5632d51_SetModPath(_self_.as<_1a563227e_JuleImporter>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1a8c132eb_1aa1511e9(jule::Ptr<jule::Uintptr> _self_) {
	return _1a56330d7_GetModPath(_self_.as<_1a563227e_JuleImporter>().alloc);
}
inline jule::Str __jule_trait_method_1a8c1375d_1aa1511e9(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id) {
	return _1a5633428_ModById(_self_.as<_1a563227e_JuleImporter>().alloc, _2519_id);
}
inline jule::Ptr<_1a3bd86d3_ImportInfo> __jule_trait_method_1a8c13c7a_1aa1511e9(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1a5633769_GetImport(_self_.as<_1a563227e_JuleImporter>().alloc, _3125_path);
}
inline __jule_tuple_sx_1a3b3b180_Ast__jule_tuple_s_1e7c94ecb_Log __jule_trait_method_1a8c142db_1aa1511e9(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod) {
	return _1a5633b65_ImportPackage(_self_.as<_1a563227e_JuleImporter>().alloc, _3729_path, _3740_update_mod);
}
inline void __jule_trait_method_1a8c14c04_1aa1511e9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3bd86d3_ImportInfo> _4128__0) {
	_1a5633e1d_Imported(_self_.as<_1a563227e_JuleImporter>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8a9b816(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b62140_Str(_self_.as<_1a3b61cbb_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8a9acaa(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b7741e_Str(_self_.as<_1a3b770cd_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8ab3553(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b87e46_Str(_self_.as<_1a3b87a7d_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8a8d110(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b8a60d_Str(_self_.as<_1a3b8a289_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8a95018(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b8bcd5_Str(_self_.as<_1a3b8b994_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8bcb7e2(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b90008_Str(_self_.as<_1a3b8eb84_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8bbae63(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b90a20_Str(_self_.as<_1a3b90657_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8bb8328(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b9268c_Str(_self_.as<_1a3b92318_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8bd3c06(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b93c87_Str(_self_.as<_1a3b93913_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8bd10bb(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b95948_Str(_self_.as<_1a3b955c4_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8bc23a9(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b97153_Str(_self_.as<_1a3b96bbe_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8bbe76e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b983da_Str(_self_.as<_1a3b98066_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8bc76bc(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b999d5_Str(_self_.as<_1a3b99661_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8bc4a82(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b9bb3b_Str(_self_.as<_1a3b9b7ea_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8bcce86(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b9d236_Str(_self_.as<_1a3b9cdb2_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8ac5345(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3b9e831_Str(_self_.as<_1a3b9e4ac_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8bd7512(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3ba5d43_Str(_self_.as<_1a3ba59be_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8be1076(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3ba8692_Str(_self_.as<_1a3ba831d_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8bdc76a(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3ba9ebd_Str(_self_.as<_1a3ba9918_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8a7dbc2(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3cbb0e0_Str(_self_.as<_1a3cbac27_TypeKind>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8a834ce(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3cc3b42_Str(_self_.as<_1a3cc3801_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8a89b67(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3cc76a1_Str(_self_.as<_1a3cc732c_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8a9947e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3cc8284_Str(_self_.as<_1a3cc7d00_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8b0dda6(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3cc8c68_Str(_self_.as<_1a3cc88e4_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8b0c38d(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3cc9818_Str(_self_.as<_1a3cc9494_Map>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8a97a98(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3cca495_Str(_self_.as<_1a3cca121_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1a8a8b3d8(jule::Ptr<jule::Uintptr> _self_) {
	return _1a3ccae68_Str(_self_.as<_1a3ccaae4_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1a8c15243_1aa4882cd(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5dc4d0c_Str(_self_.as<_1a5dc4944_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8a9b816(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3b62481_Equal(_self_.as<_1a3b61cbb_StructIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8a9acaa(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3b77760_Equal(_self_.as<_1a3b770cd_FnIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8ab3553(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3b88287_Equal(_self_.as<_1a3b87a7d_Trait>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8a8d110(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3b8a94e_Equal(_self_.as<_1a3b8a289_Enum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8a95018(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3b8c126_Equal(_self_.as<_1a3b8b994_TypeEnum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8bcb7e2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3b90349_Equal(_self_.as<_1a3b8eb84_comptimeRange>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8bbae63(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3b90d61_Equal(_self_.as<_1a3b90657_comptimeStructField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8bb8328(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3b929cd_Equal(_self_.as<_1a3b92318_comptimeStructFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8bd3c06(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3b940c8_Equal(_self_.as<_1a3b93913_comptimeStatic>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8bd10bb(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3b95c89_Equal(_self_.as<_1a3b955c4_comptimeStatics>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8bc23a9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3b97494_Equal(_self_.as<_1a3b96bbe_comptimeEnumField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8bbe76e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3b9872b_Equal(_self_.as<_1a3b98066_comptimeEnumFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8bc76bc(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3b99d26_Equal(_self_.as<_1a3b99661_comptimeParam>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8bc4a82(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3b9be7c_Equal(_self_.as<_1a3b9b7ea_comptimeParams>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8bcce86(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3b9d577_Equal(_self_.as<_1a3b9cdb2_comptimeTypeInfos>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8ac5345(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3b9eb72_Equal(_self_.as<_1a3b9e4ac_comptimeTypeInfo>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8bd7512(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3ba6184_Equal(_self_.as<_1a3ba59be_comptimeValue>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8be1076(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3ba89d3_Equal(_self_.as<_1a3ba831d_comptimeFiles>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8bdc76a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3baa30e_Equal(_self_.as<_1a3ba9918_comptimeFile>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8a7dbc2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3cbb431_Equal(_self_.as<_1a3cbac27_TypeKind>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8a834ce(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3cc3e83_Equal(_self_.as<_1a3cc3801_Prim>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8a89b67(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3cc79e2_Equal(_self_.as<_1a3cc732c_Sptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8a9947e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3cc85c5_Equal(_self_.as<_1a3cc7d00_Slc>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8b0dda6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3cc90a9_Equal(_self_.as<_1a3cc88e4_Tuple>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8b0c38d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3cc9b59_Equal(_self_.as<_1a3cc9494_Map>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8a97a98(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3cca7d6_Equal(_self_.as<_1a3cca121_Arr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1a8a8b3d8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a3ccb2a9_Equal(_self_.as<_1a3ccaae4_Ptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a8c156e9_1aa4882cd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _5618_other) {
	return _1a5dc514d_Equal(_self_.as<_1a5dc4944_customType>(), _5618_other);
}
inline jule::Ptr<_1a3bd86d3_ImportInfo> __jule_trait_method_1a8c15cb0_1a8b6dce5(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>> _929_selector) {
	return _1a3bbe09d_SelectPackage(_self_.as<_1a3bbdb08_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1a3bd86d3_ImportInfo> __jule_trait_method_1a8c15cb0_1a8a9ee57(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>> _929_selector) {
	return _1a3bd8bbc_SelectPackage(_self_.as<_1a3bd86d3_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1a3bd86d3_ImportInfo> __jule_trait_method_1a8c15cb0_1a8aa1057(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>> _929_selector) {
	return _1a3bdba9e_SelectPackage(_self_.as<_1a3bdb609_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1a3bd86d3_ImportInfo> __jule_trait_method_1a8c15cb0_1a8a9ce77(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>> _929_selector) {
	return _1a3c090e9_SelectPackage(_self_.as<_1a3c08b54_Sema>().alloc, _929_selector);
}
inline jule::Ptr<_1a3bd86d3_ImportInfo> __jule_trait_method_1a8c15cb0_1a8a9d917(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>> _929_selector) {
	return _1a3c8499e_SelectPackage(_self_.as<_1a3c844b5_SymbolTable>().alloc, _929_selector);
}
inline jule::Ptr<_1a3c31c26_Var> __jule_trait_method_1a89d0ea9_1a8b6dce5(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a3bbe499_FindVar(_self_.as<_1a3bbdb08_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a3c31c26_Var> __jule_trait_method_1a89d0ea9_1a8a9ee57(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a3bd90b8_FindVar(_self_.as<_1a3bd86d3_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a3c31c26_Var> __jule_trait_method_1a89d0ea9_1a8aa1057(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a3bdbe9a_FindVar(_self_.as<_1a3bdb609_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a3c31c26_Var> __jule_trait_method_1a89d0ea9_1a8a9ce77(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a3c094e5_FindVar(_self_.as<_1a3c08b54_Sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a3c31c26_Var> __jule_trait_method_1a89d0ea9_1a8a9d917(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a3c84d9a_FindVar(_self_.as<_1a3c844b5_SymbolTable>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a3cb9e35_TypeAlias> __jule_trait_method_1a89d0849_1a8b6dce5(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a3bbe895_FindTypeAlias(_self_.as<_1a3bbdb08_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a3cb9e35_TypeAlias> __jule_trait_method_1a89d0849_1a8a9ee57(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a3bd94b4_FindTypeAlias(_self_.as<_1a3bd86d3_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a3cb9e35_TypeAlias> __jule_trait_method_1a89d0849_1a8aa1057(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a3bdc396_FindTypeAlias(_self_.as<_1a3bdb609_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a3cb9e35_TypeAlias> __jule_trait_method_1a89d0849_1a8a9ce77(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a3c098e1_FindTypeAlias(_self_.as<_1a3c08b54_Sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a3cb9e35_TypeAlias> __jule_trait_method_1a89d0849_1a8a9d917(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a3c85296_FindTypeAlias(_self_.as<_1a3c844b5_SymbolTable>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a3b5e03d_Struct> __jule_trait_method_1a89d14d7_1a8b6dce5(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a3bbec91_FindStruct(_self_.as<_1a3bbdb08_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a3b5e03d_Struct> __jule_trait_method_1a89d14d7_1a8a9ee57(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a3bd98b0_FindStruct(_self_.as<_1a3bd86d3_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a3b5e03d_Struct> __jule_trait_method_1a89d14d7_1a8aa1057(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a3bdc792_FindStruct(_self_.as<_1a3bdb609_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a3b5e03d_Struct> __jule_trait_method_1a89d14d7_1a8a9ce77(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a3c09cdc_FindStruct(_self_.as<_1a3c08b54_Sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a3b5e03d_Struct> __jule_trait_method_1a89d14d7_1a8a9d917(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a3c85692_FindStruct(_self_.as<_1a3c844b5_SymbolTable>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a3b740ec_Fn> __jule_trait_method_1a6cb514c_1a8b6dce5(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a3bc018c_FindFn(_self_.as<_1a3bbdb08_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a3b740ec_Fn> __jule_trait_method_1a6cb514c_1a8a9ee57(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a3bd9cab_FindFn(_self_.as<_1a3bd86d3_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a3b740ec_Fn> __jule_trait_method_1a6cb514c_1a8aa1057(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a3bdcb8d_FindFn(_self_.as<_1a3bdb609_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a3b740ec_Fn> __jule_trait_method_1a6cb514c_1a8a9ce77(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a3c0a1d8_FindFn(_self_.as<_1a3c08b54_Sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a3b740ec_Fn> __jule_trait_method_1a6cb514c_1a8a9d917(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a3c85a8d_FindFn(_self_.as<_1a3c844b5_SymbolTable>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a3b87a7d_Trait> __jule_trait_method_1a6cb5834_1a8b6dce5(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a3bc04cd_FindTrait(_self_.as<_1a3bbdb08_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1a3b87a7d_Trait> __jule_trait_method_1a6cb5834_1a8a9ee57(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a3bda0ec_FindTrait(_self_.as<_1a3bd86d3_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1a3b87a7d_Trait> __jule_trait_method_1a6cb5834_1a8aa1057(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a3bdcece_FindTrait(_self_.as<_1a3bdb609_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1a3b87a7d_Trait> __jule_trait_method_1a6cb5834_1a8a9ce77(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a3c0a529_FindTrait(_self_.as<_1a3c08b54_Sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1a3b87a7d_Trait> __jule_trait_method_1a6cb5834_1a8a9d917(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a3c85dce_FindTrait(_self_.as<_1a3c844b5_SymbolTable>().alloc, _2925_ident);
}
inline jule::Ptr<_1a3b8a289_Enum> __jule_trait_method_1a67380dc_1a8b6dce5(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a3bc081e_FindEnum(_self_.as<_1a3bbdb08_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1a3b8a289_Enum> __jule_trait_method_1a67380dc_1a8a9ee57(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a3bda43d_FindEnum(_self_.as<_1a3bd86d3_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1a3b8a289_Enum> __jule_trait_method_1a67380dc_1a8aa1057(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a3bdd320_FindEnum(_self_.as<_1a3bdb609_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1a3b8a289_Enum> __jule_trait_method_1a67380dc_1a8a9ce77(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a3c0a86a_FindEnum(_self_.as<_1a3c08b54_Sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1a3b8a289_Enum> __jule_trait_method_1a67380dc_1a8a9d917(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a3c86220_FindEnum(_self_.as<_1a3c844b5_SymbolTable>().alloc, _3324_ident);
}
inline jule::Ptr<_1a3b8b994_TypeEnum> __jule_trait_method_1a63146d0_1a8b6dce5(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a3bc0b60_FindTypeEnum(_self_.as<_1a3bbdb08_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1a3b8b994_TypeEnum> __jule_trait_method_1a63146d0_1a8a9ee57(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a3bda77e_FindTypeEnum(_self_.as<_1a3bd86d3_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1a3b8b994_TypeEnum> __jule_trait_method_1a63146d0_1a8aa1057(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a3bdd661_FindTypeEnum(_self_.as<_1a3bdb609_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1a3b8b994_TypeEnum> __jule_trait_method_1a63146d0_1a8a9ce77(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a3c0abab_FindTypeEnum(_self_.as<_1a3c08b54_Sema>().alloc, _3728_ident);
}
inline jule::Ptr<_1a3b8b994_TypeEnum> __jule_trait_method_1a63146d0_1a8a9d917(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a3c86561_FindTypeEnum(_self_.as<_1a3c844b5_SymbolTable>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1aa994663_1aa98371d(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa983b3b_Name(_self_.as<_1aa98371d_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa994663_1aa9872c1(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa986e4c_Name(_self_.as<_1aa9872c1_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa994663_1aa98a934(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa98a5b0_Name(_self_.as<_1aa98a934_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa994663_1aa98e0db(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa98dc67_Name(_self_.as<_1aa98e0db_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa994663_1aa99274e(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa9923ca_Name(_self_.as<_1aa99274e_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aa995db2_1aa98371d(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa984048_Short(_self_.as<_1aa98371d_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aa995db2_1aa9872c1(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa987843_Short(_self_.as<_1aa9872c1_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aa995db2_1aa98a934(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa98aea6_Short(_self_.as<_1aa98a934_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aa995db2_1aa98e0db(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa98e65d_Short(_self_.as<_1aa98e0db_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aa995db2_1aa99274e(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa992cc1_Short(_self_.as<_1aa99274e_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa9962be_1aa98371d(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa983c90_What(_self_.as<_1aa98371d_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa9962be_1aa9872c1(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa9875ac_What(_self_.as<_1aa9872c1_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa9962be_1aa98a934(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa98ac20_What(_self_.as<_1aa98a934_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa9962be_1aa98e0db(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa98e3c7_What(_self_.as<_1aa98e0db_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aa9962be_1aa99274e(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa992a3a_What(_self_.as<_1aa99274e_Flag>().alloc);
}
inline void __jule_trait_method_1aa996720_1aa98371d(jule::Ptr<jule::Uintptr> _self_) {
	_1aa983de4_Reset(_self_.as<_1aa98371d_Flag>().alloc);
}
inline void __jule_trait_method_1aa996720_1aa9872c1(jule::Ptr<jule::Uintptr> _self_) {
	_1aa987700_Reset(_self_.as<_1aa9872c1_Flag>().alloc);
}
inline void __jule_trait_method_1aa996720_1aa98a934(jule::Ptr<jule::Uintptr> _self_) {
	_1aa98ad63_Reset(_self_.as<_1aa98a934_Flag>().alloc);
}
inline void __jule_trait_method_1aa996720_1aa98e0db(jule::Ptr<jule::Uintptr> _self_) {
	_1aa98e51a_Reset(_self_.as<_1aa98e0db_Flag>().alloc);
}
inline void __jule_trait_method_1aa996720_1aa99274e(jule::Ptr<jule::Uintptr> _self_) {
	_1aa992b7d_Reset(_self_.as<_1aa99274e_Flag>().alloc);
}


static _1a3b8e964_comptimeRangeKindMptrData _1a3b8e964_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1a3b8e15b_ready=__jule_trait_method_1a8c11a47_1a8bb8328,
	._1a3b8e579_step=__jule_trait_method_1a8c12185_1a8bb8328,
	._1a3b8e810_len=__jule_trait_method_1a8c128c2_1a8bb8328,
};
static _1a3b8e964_comptimeRangeKindMptrData _1a3b8e964_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1a3b8e15b_ready=__jule_trait_method_1a8c11a47_1a8bd10bb,
	._1a3b8e579_step=__jule_trait_method_1a8c12185_1a8bd10bb,
	._1a3b8e810_len=__jule_trait_method_1a8c128c2_1a8bd10bb,
};
static _1a3b8e964_comptimeRangeKindMptrData _1a3b8e964_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1a3b8e15b_ready=__jule_trait_method_1a8c11a47_1a8bbe76e,
	._1a3b8e579_step=__jule_trait_method_1a8c12185_1a8bbe76e,
	._1a3b8e810_len=__jule_trait_method_1a8c128c2_1a8bbe76e,
};
static _1a3b8e964_comptimeRangeKindMptrData _1a3b8e964_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1a3b8e15b_ready=__jule_trait_method_1a8c11a47_1a8bc4a82,
	._1a3b8e579_step=__jule_trait_method_1a8c12185_1a8bc4a82,
	._1a3b8e810_len=__jule_trait_method_1a8c128c2_1a8bc4a82,
};
static _1a3b8e964_comptimeRangeKindMptrData _1a3b8e964_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1a3b8e15b_ready=__jule_trait_method_1a8c11a47_1a8bcce86,
	._1a3b8e579_step=__jule_trait_method_1a8c12185_1a8bcce86,
	._1a3b8e810_len=__jule_trait_method_1a8c128c2_1a8bcce86,
};
static _1a3b8e964_comptimeRangeKindMptrData _1a3b8e964_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1a3b8e15b_ready=__jule_trait_method_1a8c11a47_1a8be1076,
	._1a3b8e579_step=__jule_trait_method_1a8c12185_1a8be1076,
	._1a3b8e810_len=__jule_trait_method_1a8c128c2_1a8be1076,
};
static _1a3bd57bd_ImporterMptrData _1a3bd57bd_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator6,
	._1a3bd459c_SetModPath=__jule_trait_method_1a8c12d45_1aa1511e9,
	._1a3bd4833_GetModPath=__jule_trait_method_1a8c132eb_1aa1511e9,
	._1a3bd4b74_ModById=__jule_trait_method_1a8c1375d_1aa1511e9,
	._1a3bd4eb5_GetImport=__jule_trait_method_1a8c13c7a_1aa1511e9,
	._1a3bd53b1_ImportPackage=__jule_trait_method_1a8c142db_1aa1511e9,
	._1a3bd5669_Imported=__jule_trait_method_1a8c14c04_1aa1511e9,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8a9b816,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8a9b816,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator8,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8a9acaa,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8a9acaa,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator9,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8ab3553,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8ab3553,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator10,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8a8d110,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8a8d110,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator11,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8a95018,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8a95018,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator12,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8bcb7e2,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8bcb7e2,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator13,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8bbae63,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8bbae63,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8bb8328,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8bb8328,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator14,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8bd3c06,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8bd3c06,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8bd10bb,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8bd10bb,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator15,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8bc23a9,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8bc23a9,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8bbe76e,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8bbe76e,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator16,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8bc76bc,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8bc76bc,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8bc4a82,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8bc4a82,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8bcce86,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8bcce86,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator17,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8ac5345,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8ac5345,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator18,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8bd7512,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8bd7512,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8be1076,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8be1076,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator19,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8bdc76a,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8bdc76a,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator20,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8a7dbc2,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8a7dbc2,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8a834ce,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8a834ce,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8a89b67,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8a89b67,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8a9947e,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8a9947e,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8b0dda6,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8b0dda6,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8b0c38d,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8b0c38d,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8a97a98,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8a97a98,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1a8a8b3d8,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1a8a8b3d8,
};
static _1a3cba771_KindMptrData _1a3cba771_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1a3cba2cb_Str=__jule_trait_method_1a8c15243_1aa4882cd,
	._1a3cba61c_Equal=__jule_trait_method_1a8c156e9_1aa4882cd,
};
static _1a3cda818_LookupMptrData _1a3cda818_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator29,
	._1a3cd8b02_SelectPackage=__jule_trait_method_1a8c15cb0_1a8b6dce5,
	._1a3cd8eed_FindVar=__jule_trait_method_1a89d0ea9_1a8b6dce5,
	._1a3cd93e9_FindTypeAlias=__jule_trait_method_1a89d0849_1a8b6dce5,
	._1a3cd97e5_FindStruct=__jule_trait_method_1a89d14d7_1a8b6dce5,
	._1a3cd9be1_FindFn=__jule_trait_method_1a6cb514c_1a8b6dce5,
	._1a3cda032_FindTrait=__jule_trait_method_1a6cb5834_1a8b6dce5,
	._1a3cda373_FindEnum=__jule_trait_method_1a67380dc_1a8b6dce5,
	._1a3cda6b4_FindTypeEnum=__jule_trait_method_1a63146d0_1a8b6dce5,
};
static _1a3cda818_LookupMptrData _1a3cda818_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator30,
	._1a3cd8b02_SelectPackage=__jule_trait_method_1a8c15cb0_1a8a9ee57,
	._1a3cd8eed_FindVar=__jule_trait_method_1a89d0ea9_1a8a9ee57,
	._1a3cd93e9_FindTypeAlias=__jule_trait_method_1a89d0849_1a8a9ee57,
	._1a3cd97e5_FindStruct=__jule_trait_method_1a89d14d7_1a8a9ee57,
	._1a3cd9be1_FindFn=__jule_trait_method_1a6cb514c_1a8a9ee57,
	._1a3cda032_FindTrait=__jule_trait_method_1a6cb5834_1a8a9ee57,
	._1a3cda373_FindEnum=__jule_trait_method_1a67380dc_1a8a9ee57,
	._1a3cda6b4_FindTypeEnum=__jule_trait_method_1a63146d0_1a8a9ee57,
};
static _1a3cda818_LookupMptrData _1a3cda818_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator31,
	._1a3cd8b02_SelectPackage=__jule_trait_method_1a8c15cb0_1a8aa1057,
	._1a3cd8eed_FindVar=__jule_trait_method_1a89d0ea9_1a8aa1057,
	._1a3cd93e9_FindTypeAlias=__jule_trait_method_1a89d0849_1a8aa1057,
	._1a3cd97e5_FindStruct=__jule_trait_method_1a89d14d7_1a8aa1057,
	._1a3cd9be1_FindFn=__jule_trait_method_1a6cb514c_1a8aa1057,
	._1a3cda032_FindTrait=__jule_trait_method_1a6cb5834_1a8aa1057,
	._1a3cda373_FindEnum=__jule_trait_method_1a67380dc_1a8aa1057,
	._1a3cda6b4_FindTypeEnum=__jule_trait_method_1a63146d0_1a8aa1057,
};
static _1a3cda818_LookupMptrData _1a3cda818_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator32,
	._1a3cd8b02_SelectPackage=__jule_trait_method_1a8c15cb0_1a8a9ce77,
	._1a3cd8eed_FindVar=__jule_trait_method_1a89d0ea9_1a8a9ce77,
	._1a3cd93e9_FindTypeAlias=__jule_trait_method_1a89d0849_1a8a9ce77,
	._1a3cd97e5_FindStruct=__jule_trait_method_1a89d14d7_1a8a9ce77,
	._1a3cd9be1_FindFn=__jule_trait_method_1a6cb514c_1a8a9ce77,
	._1a3cda032_FindTrait=__jule_trait_method_1a6cb5834_1a8a9ce77,
	._1a3cda373_FindEnum=__jule_trait_method_1a67380dc_1a8a9ce77,
	._1a3cda6b4_FindTypeEnum=__jule_trait_method_1a63146d0_1a8a9ce77,
};
static _1a3cda818_LookupMptrData _1a3cda818_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator33,
	._1a3cd8b02_SelectPackage=__jule_trait_method_1a8c15cb0_1a8a9d917,
	._1a3cd8eed_FindVar=__jule_trait_method_1a89d0ea9_1a8a9d917,
	._1a3cd93e9_FindTypeAlias=__jule_trait_method_1a89d0849_1a8a9d917,
	._1a3cd97e5_FindStruct=__jule_trait_method_1a89d14d7_1a8a9d917,
	._1a3cd9be1_FindFn=__jule_trait_method_1a6cb514c_1a8a9d917,
	._1a3cda032_FindTrait=__jule_trait_method_1a6cb5834_1a8a9d917,
	._1a3cda373_FindEnum=__jule_trait_method_1a67380dc_1a8a9d917,
	._1a3cda6b4_FindTypeEnum=__jule_trait_method_1a63146d0_1a8a9d917,
};
static _1a6101610_CommonFlagMptrData _1a6101610_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator34,
	._1a6100c91_Name=__jule_trait_method_1aa994663_1aa98371d,
	._1a6101027_Short=__jule_trait_method_1aa995db2_1aa98371d,
	._1a61012ad_What=__jule_trait_method_1aa9962be_1aa98371d,
	._1a61014ab_Reset=__jule_trait_method_1aa996720_1aa98371d,
};
static _1a6101610_CommonFlagMptrData _1a6101610_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator35,
	._1a6100c91_Name=__jule_trait_method_1aa994663_1aa9872c1,
	._1a6101027_Short=__jule_trait_method_1aa995db2_1aa9872c1,
	._1a61012ad_What=__jule_trait_method_1aa9962be_1aa9872c1,
	._1a61014ab_Reset=__jule_trait_method_1aa996720_1aa9872c1,
};
static _1a6101610_CommonFlagMptrData _1a6101610_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator36,
	._1a6100c91_Name=__jule_trait_method_1aa994663_1aa98a934,
	._1a6101027_Short=__jule_trait_method_1aa995db2_1aa98a934,
	._1a61012ad_What=__jule_trait_method_1aa9962be_1aa98a934,
	._1a61014ab_Reset=__jule_trait_method_1aa996720_1aa98a934,
};
static _1a6101610_CommonFlagMptrData _1a6101610_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator37,
	._1a6100c91_Name=__jule_trait_method_1aa994663_1aa98e0db,
	._1a6101027_Short=__jule_trait_method_1aa995db2_1aa98e0db,
	._1a61012ad_What=__jule_trait_method_1aa9962be_1aa98e0db,
	._1a61014ab_Reset=__jule_trait_method_1aa996720_1aa98e0db,
};
static _1a6101610_CommonFlagMptrData _1a6101610_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator38,
	._1a6100c91_Name=__jule_trait_method_1aa994663_1aa99274e,
	._1a6101027_Short=__jule_trait_method_1aa995db2_1aa99274e,
	._1a61012ad_What=__jule_trait_method_1aa9962be_1aa99274e,
	._1a61014ab_Reset=__jule_trait_method_1aa996720_1aa99274e,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator39, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator40, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator8, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1a3b770cd_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator46, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1a3c31c26_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator7, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1a3b61cbb_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator9, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1a3b87a7d_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator47, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1a3b59ca3_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator48, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1a3b54b5a_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator49, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1a3b58e06_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator50, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1a3b4eced_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator51, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1a3b59643_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator52, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1a3b50ea8_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator53, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1a3b572ab_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator54, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1a3b58246_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator55, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1b5747b9d_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator56, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1a3bb8edd_Label> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator57, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1a3bb664a_Scope> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator58, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1a3b6e9ee_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator59, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1a3c8982d_Data> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator60, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1a3b70d0d_BackendEmitExprModel> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator61, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1a3b6d778_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator62, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1a3b6bcb5_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator63, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1a3b6c18e_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator64, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1a3b6c942_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator65, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1a3b6cde8_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator66, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1a3b6e625_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator67, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1a3b6e24b_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator68, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1a3b7110a_FreeExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator69, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1a3b68201_FnCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator70, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1a3bb7283_Conditional> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator71, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1a3bb7580_InfIter> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator72, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1a3b5242c_WhileKind> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator73, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1a3bb7a36_WhileIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator74, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1a3b52d34_RangeKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator75, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1a3bb8482_RangeIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator76, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1a3bb8817_ContSt> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator77, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1a3bb93b7_GotoSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator78, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1a3bb9791_Postfix> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator79, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1a3bb9c47_Assign> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator80, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1a3b43c8c_IdentExpr> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator81, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1a3b68a81_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator82, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1a3bba1ed_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator83, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1a3bba85d_Match> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator84, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1a3bbba7e_FallSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator85, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1a3bb8be1_BreakSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator86, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1a3bbbe25_RetSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator87, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1a3b4d15e_ScopeTree> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator88, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1a3b42472_Expr> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator89, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1a3b5441d_Conditional> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator90, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1a3b51b02_Iter> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator91, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1a3b535d7_ContSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator92, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1a3b4a722_LabelSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator93, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1a3b4aaeb_GotoSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator94, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1a3b4badb_AssignSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator95, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1a3b5592a_MatchCase> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator96, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1a3b4ade8_FallSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator97, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1a3b5320d_BreakSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator98, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1a3b51382_RetSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator99, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1a3b42d46_UseExpr> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator100, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1a3b740ec_Fn> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator101, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1a3b5e03d_Struct> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1a3cb9e35_TypeAlias> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator10, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1a3b8a289_Enum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator11, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1a3b8b994_TypeEnum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator103, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1a3b40409_ArrTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator104, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1a3b3e56d_SlcTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator105, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1a3b3eb67_PtrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator106, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1a3b3e1d8_SptrTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator107, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1a3b40b57_MapTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator108, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1a3b3e86a_TupleTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator109, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1a3b3d748_IdentTypeDecl> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator110, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1a3b44908_VariadicExpr> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator111, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1a3b685ca_SliceExprModel> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator112, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1a3b46b91_FieldExprPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator113, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1a3b4829c_KeyValPair> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator114, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1a3b43066_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator115, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1a3b6b8db_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator116, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1a3b4619b_FnCallExpr> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator117, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1a3b70637_RuneExprModel> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator20, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1a3cbac27_TypeKind> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator118, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1a3b6b5de_ArrayExprModel> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator119, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1a3b45585_SubIdentExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator120, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1a3b3da12_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator121, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1a3b4452e_UnaryExpr> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator122, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1a3b3d13d_TypeDecl> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator123, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1a3b451ab_NsSelectionExpr> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator124, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1a3b3dddb_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator125, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1a3b69e4a_SlicingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator126, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1a3b6784e_CastingExprModel> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator127, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1a3b489c8_SliceExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator128, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1a3b66ebe_StructLitExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator129, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1a3b6b215_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator130, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1a3b6a4cd_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator131, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1a3b6ad6e_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator132, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1a3b698b7_MapExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator133, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1a3b69037_AnonFnExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator134, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1a3b4273b_RangeExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator135, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1a3b4340c_LitExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator136, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1a3b437d6_UnsafeExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator137, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1a3b49435_IndexingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator138, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1a3b49a95_SlicingExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator139, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1a3b44cd2_CastExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator140, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1a3b474bb_StructLit> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator141, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1a3b47972_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator142, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1a3b45a3b_BinaryExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator143, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1a3b665ea_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator144, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1a3b66221_BinaryExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator145, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1a3b672bb_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator146, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1a3b6c568_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator147, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1a3b6d39e_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator148, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1a3b6da75_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator149, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1a3b6dd72_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator150, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1a3b701a3_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator151, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1a3b70390_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator152, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1a3b70934_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator153, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1a3e45049_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator154, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1a3e47931_StrRuneIter> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator155, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1a3e46622_MutSlicingExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator156, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1a3e4691e_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator157, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1a3e4717d_PushToSliceExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator158, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1a3e47557_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator159, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1a3e453bd_SwapExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator160, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1a3e45797_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator161, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1a3e4608e_StrCompExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator162, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1a3e47c2d_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator163, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1a3e45b1b_RefExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator164, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1a3b66b28_StructArgExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator165, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1a3e4802a_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type132 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator166, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1a3e46ca4_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type133 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator43, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type134 && jule::ptr_equal(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator167, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator168, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator169, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator170, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator171, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type140_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type140_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type140 && __jule_any_type140_eq(any.data.alloc, (void*)&other); }
inline jule::Bool __jule_anon1a889ddee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b76055_ParamIns> _24021_p1, jule::Ptr<_1a3b76055_ParamIns> _24036_p2);
struct __jule_anon_1a8d2d306_ctx{
	jule::Ptr<_1a3bd86d3_ImportInfo> *_49828_pkg;
};
static void __jule_anon_1a8d2d306_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8d2d306_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a8d2d306(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bd86d3_ImportInfo> _49935_spkg);
struct __jule_anon_1a8d842e6_ctx{
	jule::Ptr<_1a3b90657_comptimeStructField> _self_;
};
static void __jule_anon_1a8d842e6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8d842e6_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8d842e6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _8821_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _8836_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8d8624e_ctx{
	jule::Ptr<_1a3b90657_comptimeStructField> _self_;
};
static void __jule_anon_1a8d8624e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8d8624e_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8d8624e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _9521_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _9536_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8d881a7_ctx{
	jule::Ptr<_1a3b90657_comptimeStructField> _self_;
};
static void __jule_anon_1a8d881a7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8d881a7_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8d881a7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _10221_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _10236_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8d99e11_ctx{
	jule::Ptr<_1a3b93913_comptimeStatic> _self_;
};
static void __jule_anon_1a8d99e11_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8d99e11_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8d99e11(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _21121_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _21136_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8d9bd69_ctx{
	jule::Ptr<_1a3b93913_comptimeStatic> _self_;
};
static void __jule_anon_1a8d9bd69_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8d9bd69_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8d9bd69(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _21821_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _21836_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8d9dcc2_ctx{
	jule::Ptr<_1a3b93913_comptimeStatic> _self_;
};
static void __jule_anon_1a8d9dcc2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8d9dcc2_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8d9dcc2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _22521_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _22536_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8daaae2_ctx{
	jule::Ptr<_1a3b96bbe_comptimeEnumField> _self_;
};
static void __jule_anon_1a8daaae2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8daaae2_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8daaae2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _31321_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _31336_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8dc0662_ctx{
	jule::Ptr<_1a3b99661_comptimeParam> _self_;
};
static void __jule_anon_1a8dc0662_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8dc0662_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8dc0662(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _43521_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _43536_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8dc25ba_ctx{
	jule::Ptr<_1a3b99661_comptimeParam> _self_;
};
static void __jule_anon_1a8dc25ba_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8dc25ba_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8dc25ba(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _44221_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _44236_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8dc4523_ctx{
	jule::Ptr<_1a3b99661_comptimeParam> _self_;
};
static void __jule_anon_1a8dc4523_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8dc4523_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8dc4523(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _44921_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _44936_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8dc647b_ctx{
	jule::Ptr<_1a3b99661_comptimeParam> _self_;
};
static void __jule_anon_1a8dc647b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8dc647b_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8dc647b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _45621_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _45636_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8b2a2ce_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a8b2a2ce_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8b2a2ce_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8b2a2ce(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _99821_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _99836_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c22728_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a8c22728_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c22728_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c22728(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _100521_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _100536_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c24681_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a8c24681_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c24681_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c24681(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _101221_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _101236_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c265d9_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a8c265d9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c265d9_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c265d9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _101921_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _101936_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c28542_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a8c28542_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c28542_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c28542(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _102621_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _102636_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c2a49a_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a8c2a49a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c2a49a_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c2a49a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _103321_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _103336_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c2c403_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a8c2c403_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c2c403_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c2c403(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _104021_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _104036_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c2e35b_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a8c2e35b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c2e35b_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c2e35b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _104721_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _104736_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c31407_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a8c31407_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c31407_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c31407(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _105421_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _105436_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c33360_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a8c33360_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c33360_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c33360(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _106121_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _106136_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a89d64a9_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a89d64a9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a89d64a9_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a89d64a9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _106821_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _106836_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a89d8511_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a89d8511_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a89d8511_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a89d8511(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _107521_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _107536_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a89da469_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a89da469_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a89da469_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a89da469(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _108221_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _108236_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a89dc3c2_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a89dc3c2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a89dc3c2_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a89dc3c2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _108921_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _108936_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a89de32a_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a89de32a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a89de32a_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a89de32a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _109621_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _109636_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a89e1283_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a89e1283_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a89e1283_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a89e1283(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _110321_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _110336_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a89e31db_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a89e31db_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a89e31db_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a89e31db(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _111021_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _111036_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a66909d4_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a66909d4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a66909d4_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a66909d4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _111721_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _111736_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8e59a5e_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a8e59a5e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8e59a5e_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8e59a5e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _112421_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _112436_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c34b14_ctx{
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a8c34b14_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c34b14_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c34b14(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _113121_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _113136_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c41bba_ctx{
	jule::Ptr<_1a3ba59be_comptimeValue> _self_;
};
static void __jule_anon_1a8c41bba_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c41bba_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c41bba(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _124721_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _124736_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c43aac_ctx{
	jule::Ptr<_1a3ba59be_comptimeValue> _self_;
};
static void __jule_anon_1a8c43aac_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c43aac_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c43aac(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _125421_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _125436_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c45a37_ctx{
	jule::Ptr<_1a3ba59be_comptimeValue> _self_;
};
static void __jule_anon_1a8c45a37_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c45a37_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c45a37(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _126121_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _126136_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c47990_ctx{
	jule::Ptr<_1a3ba59be_comptimeValue> _self_;
};
static void __jule_anon_1a8c47990_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c47990_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c47990(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _126821_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _126836_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c498e8_ctx{
	jule::Ptr<_1a3ba59be_comptimeValue> _self_;
};
static void __jule_anon_1a8c498e8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c498e8_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c498e8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _127521_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _127536_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a832cedd_ctx{
	jule::Ptr<_1a3ba59be_comptimeValue> _self_;
};
static void __jule_anon_1a832cedd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a832cedd_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a832cedd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _128221_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _128236_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c4ed3d_ctx{
	jule::Ptr<_1a3ba9918_comptimeFile> _self_;
};
static void __jule_anon_1a8c4ed3d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c4ed3d_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c4ed3d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _139621_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _139636_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c51cda_ctx{
	jule::Ptr<_1a3ba9918_comptimeFile> _self_;
};
static void __jule_anon_1a8c51cda_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c51cda_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c51cda(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _140321_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _140336_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c53c43_ctx{
	jule::Ptr<_1a3ba9918_comptimeFile> _self_;
};
static void __jule_anon_1a8c53c43_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c53c43_ctx>().dealloc(); }
inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c53c43(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _141021_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _141036_fc, jule::Ptr<_1a3c8982d_Data>* );
struct __jule_anon_1a8c5e776_ctx{
	jule::Ptr<_1a3badd90_constraintChecker> _self_;
};
static void __jule_anon_1a8c5e776_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c5e776_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a8c5e776(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c08b54_Sema>* _6415_sema, jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>* _6433_generics);
struct __jule_anon_1a9312d4b_ctx{
	jule::Ptr<_1a3b770cd_FnIns> _110237_f;
	jule::Ptr<_1a3c08b54_Sema> _self_;
};
static void __jule_anon_1a9312d4b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9312d4b_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a9312d4b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c08b54_Sema>* _110637_sema, jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>* _110655_generics);
struct __jule_anon_1a96c2815_ctx{
	jule::Ptr<_1a3b451ab_NsSelectionExpr> _181731_s;
	jule::Str _18183_path;
};
static void __jule_anon_1a96c2815_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a96c2815_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a96c2815(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bd86d3_ImportInfo> _181943_imp);
inline jule::Str __jule_anon1a9ad5860(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _84719_def);
struct __jule_anon_1a8412677_ctx{
	jule::Ptr<_1a3b3dddb_NamespaceTypeDecl> _151736_decl;
	jule::Str _15183_path;
};
static void __jule_anon_1a8412677_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8412677_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a8412677(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bd86d3_ImportInfo> _151943_imp);
struct __jule_anon_1aa352a5a_ctx{
	_1a51383e5_exprDeadCode *_self_;
};
static void __jule_anon_1aa352a5a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa352a5a_ctx>().dealloc(); }
inline void __jule_anon_1aa352a5a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2636_expr);
struct __jule_anon_1a98b91d2_ctx{
	_1a564d29a_exprOptimizer *_self_;
};
static void __jule_anon_1a98b91d2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a98b91d2_ctx>().dealloc(); }
inline void __jule_anon_1a98b91d2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _55147_m);
struct __jule_anon_1aa4a1b32_ctx{
	jule::Ptr<_1a5cd7dc9_scopeCoder> _self_;
	jule::Bool _1377_ref;
};
static void __jule_anon_1aa4a1b32_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa4a1b32_ctx>().dealloc(); }
inline void __jule_anon_1aa4a1b32(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa4a55e7_ctx{
	jule::Ptr<_1a5cd7dc9_scopeCoder> _self_;
	jule::Ptr<_1a3bb8482_RangeIter> *_12936_it;
};
static void __jule_anon_1aa4a55e7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa4a55e7_ctx>().dealloc(); }
inline void __jule_anon_1aa4a55e7(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa4b4abd_ctx{
	jule::Ptr<_1a5cd7dc9_scopeCoder> _self_;
};
static void __jule_anon_1aa4b4abd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa4b4abd_ctx>().dealloc(); }
inline void __jule_anon_1aa4b4abd(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa4b7043_ctx{
	jule::Ptr<_1a5cd7dc9_scopeCoder> _self_;
};
static void __jule_anon_1aa4b7043_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa4b7043_ctx>().dealloc(); }
inline void __jule_anon_1aa4b7043(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa4d0c71_ctx{
	jule::Ptr<_1a5cd7dc9_scopeCoder> _self_;
};
static void __jule_anon_1aa4d0c71_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa4d0c71_ctx>().dealloc(); }
inline void __jule_anon_1aa4d0c71(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa049114_ctx{
	jule::Ptr<_1a5cd7dc9_scopeCoder> _self_;
};
static void __jule_anon_1aa049114_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa049114_ctx>().dealloc(); }
inline void __jule_anon_1aa049114(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa04a423_ctx{
	jule::Ptr<_1a5cd7dc9_scopeCoder> _self_;
	jule::Ptr<_1a3bba85d_Match> _66930_m;
};
static void __jule_anon_1aa04a423_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa04a423_ctx>().dealloc(); }
inline void __jule_anon_1aa04a423(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa3a357d_ctx{
	jule::Ptr<_1a5cd7dc9_scopeCoder> _self_;
	jule::Ptr<_1a3b69037_AnonFnExprModel> _103934_m;
};
static void __jule_anon_1aa3a357d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa3a357d_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1aa3a357d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c31c26_Var> _104567_v);
struct __jule_anon_1aa89e1a5_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
};
static void __jule_anon_1aa89e1a5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa89e1a5_ctx>().dealloc(); }
inline void __jule_anon_1aa89e1a5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bdb609_Package>* _75238_pkg);
struct __jule_anon_1aa8a06c3_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
};
static void __jule_anon_1aa8a06c3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa8a06c3_ctx>().dealloc(); }
inline void __jule_anon_1aa8a06c3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn>* _76536_m);
struct __jule_anon_1aa8a5cd3_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
};
static void __jule_anon_1aa8a5cd3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa8a5cd3_ctx>().dealloc(); }
inline void __jule_anon_1aa8a5cd3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bdb609_Package>* _77838_pkg);
struct __jule_anon_1aa8b683d_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
	jule::Ptr<_1a3c31c26_Var> _84524_v;
};
static void __jule_anon_1aa8b683d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa8b683d_ctx>().dealloc(); }
inline void __jule_anon_1aa8b683d(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa8b893e_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
	jule::Ptr<_1a3c31c26_Var> _84524_v;
};
static void __jule_anon_1aa8b893e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa8b893e_ctx>().dealloc(); }
inline void __jule_anon_1aa8b893e(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa8bb15b_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
};
static void __jule_anon_1aa8bb15b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa8bb15b_ctx>().dealloc(); }
inline void __jule_anon_1aa8bb15b(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa8bc2d3_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
	jule::Ptr<_1a3c31c26_Var> _84524_v;
};
static void __jule_anon_1aa8bc2d3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa8bc2d3_ctx>().dealloc(); }
inline void __jule_anon_1aa8bc2d3(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa8da554_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
};
static void __jule_anon_1aa8da554_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa8da554_ctx>().dealloc(); }
inline void __jule_anon_1aa8da554(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bdb609_Package>* _98738_pkg);
struct __jule_anon_1aa8db8da_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
	jule::Ptr<_1a3b61cbb_StructIns> _100149_s;
};
static void __jule_anon_1aa8db8da_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa8db8da_ctx>().dealloc(); }
inline void __jule_anon_1aa8db8da(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn>* _100236_m);
struct __jule_anon_1aa8e9321_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
};
static void __jule_anon_1aa8e9321_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa8e9321_ctx>().dealloc(); }
inline void __jule_anon_1aa8e9321(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bdb609_Package>* _103938_pkg);
struct __jule_anon_1aa917b47_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
};
static void __jule_anon_1aa917b47_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa917b47_ctx>().dealloc(); }
inline void __jule_anon_1aa917b47(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bdb609_Package>* _116638_pkg);
struct __jule_anon_1aa919121_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
};
static void __jule_anon_1aa919121_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa919121_ctx>().dealloc(); }
inline void __jule_anon_1aa919121(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c844b5_SymbolTable>* _118231_file);
struct __jule_anon_1aa921de8_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
};
static void __jule_anon_1aa921de8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa921de8_ctx>().dealloc(); }
inline void __jule_anon_1aa921de8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bdb609_Package>* _121138_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1aa9a5773(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1aa9ad638(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base);
inline jule::Bool __jule_anon1a8d776e6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bd86d3_ImportInfo> _143025_pkg);
struct __jule_anon_1aa8a00c9_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
};
static void __jule_anon_1aa8a00c9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa8a00c9_ctx>().dealloc(); }
inline void __jule_anon_1aa8a00c9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c844b5_SymbolTable>* _75332_file);
struct __jule_anon_1aa8a6bd5_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
};
static void __jule_anon_1aa8a6bd5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa8a6bd5_ctx>().dealloc(); }
inline void __jule_anon_1aa8a6bd5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c844b5_SymbolTable>* _77932_file);
struct __jule_anon_1aa8db456_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
};
static void __jule_anon_1aa8db456_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa8db456_ctx>().dealloc(); }
inline void __jule_anon_1aa8db456(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c844b5_SymbolTable>* _98832_file);
struct __jule_anon_1aa8ea223_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
};
static void __jule_anon_1aa8ea223_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa8ea223_ctx>().dealloc(); }
inline void __jule_anon_1aa8ea223(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c844b5_SymbolTable>* _104032_file);
struct __jule_anon_1aa918a49_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
};
static void __jule_anon_1aa918a49_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa918a49_ctx>().dealloc(); }
inline void __jule_anon_1aa918a49(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c844b5_SymbolTable>* _116732_file);
struct __jule_anon_1aa8dd403_ctx{
	jule::Ptr<_1a5db5abc_ObjectCoder> _self_;
	jule::Ptr<_1a3b87a7d_Trait> _98917_t;
};
static void __jule_anon_1aa8dd403_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa8dd403_ctx>().dealloc(); }
inline void __jule_anon_1aa8dd403(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn>* _99339_m);
jule::Array<jule::Array<jule::Str,2>,5> _212131abd_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1a610824e_OutDir = jule::Str::lit("dist", 4);
jule::Str _1a610853a_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1a61087e3_Out = jule::Str();
jule::Ptr<_1e7a80b0d_RangeTable> _1e7a18b2e__L = jule::new_ptr<_1e7a80b0d_RangeTable>(_1e7a80b0d_RangeTable{._field_R16=jule::Slice<_1e7a8015c_Range16>::make({_1e7a8015c_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1e7a8015c_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1e7a8015c_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1e7a8015c_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1e7a8015c_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1e7a8015c_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1e7a8015c_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1e7a8015c_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1e7a8015c_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1e7a8015c_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1e7a8015c_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1e7a8015c_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1e7a8015c_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1e7a8015c_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1e7a8015c_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1e7a8015c_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1e7a8015c_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1e7a8015c_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1e7a8015c_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1e7a8015c_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1e7a8015c_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1e7a8015c_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1e7a8015c_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1e7a8015c_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1e7a8015c_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1e7a8015c_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1e7a8015c_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1e7a8015c_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1e7a8015c_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1e7a8015c_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1e7a8015c_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1e7a8015c_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1e7a8015c_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1e7a8015c_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1e7a8015c_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1e7a8015c_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1e7a8015c_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1e7a8015c_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1e7a8015c_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1e7a8015c_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1e7a8015c_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1e7a8015c_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1e7a8015c_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1e7a8015c_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1e7a8015c_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1e7a8015c_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1e7a8015c_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1e7a8015c_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1e7a8015c_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1e7a8015c_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1e7a8015c_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1e7a8015c_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1e7a8015c_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1e7a8015c_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1e7a8015c_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1e7a8015c_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1e7a8015c_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1e7a8015c_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1e7a8015c_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1e7a8015c_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1e7a8068a_Range32>::make({_1e7a8068a_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1e7a8068a_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1e7a8068a_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1e7a8068a_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1e7a8068a_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1e7a8068a_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1e7a8068a_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1e7a8068a_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1e7a8068a_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1e7a8068a_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1e7a8068a_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1e7a8068a_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1e7a8068a_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1e7a8068a_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1e7a8068a_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1e7a8068a_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1e7a8068a_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1e7a8068a_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1e7a8068a_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1e7a8068a_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1e7a8068a_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1e7a8068a_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1e7a8068a_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1e7a8068a_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1e7a8068a_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1e7a8068a_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1e7a8068a_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1e7a8068a_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1e7a8068a_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1e7a8068a_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1e7a8068a_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1e7a8068a_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1e7a8068a_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1e7a8068a_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1e7a8068a_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1e7a8068a_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1e7a8068a_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1e7a8068a_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1e7a8068a_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1e7a8068a_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1e7a8068a_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1e7a8068a_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1e7a8068a_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1e7a80b0d_RangeTable> _1e7a19a42__LU = jule::new_ptr<_1e7a80b0d_RangeTable>(_1e7a80b0d_RangeTable{._field_R16=jule::Slice<_1e7a8015c_Range16>::make({_1e7a8015c_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1e7a8015c_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1e7a8015c_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1e7a8015c_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1e7a8015c_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1e7a8015c_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1e7a8015c_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1e7a8015c_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1e7a8015c_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1e7a8015c_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1e7a8015c_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1e7a8015c_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1e7a8015c_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1e7a8015c_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1e7a8015c_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1e7a8015c_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1e7a8015c_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1e7a8068a_Range32>::make({_1e7a8068a_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1e7a8068a_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1e7a8068a_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1e7a8068a_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1e7a8068a_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1e7a8068a_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1e7a8068a_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Ptr<_1e7a80b0d_RangeTable> _1e7a20a26_Letter = _1e7a18b2e__L;
jule::Ptr<_1e7a80b0d_RangeTable> _1e7a26ce6_Upper = _1e7a19a42__LU;
jule::Array<jule::U8,256> _1e7a7962e__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _1e7b83859_first = jule::Array<jule::U8,256>({240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,19LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,35LLU,3LLU,3LLU,52LLU,4LLU,4LLU,4LLU,68LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU});
jule::Array<_1e7b83e0e_acceptRange,16> _1e7b842a5_acceptRanges = jule::Array<_1e7b83e0e_acceptRange,16>({_1e7b83e0e_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1e7b83e0e_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1e7b83e0e_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1e7b83e0e_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1e7b83e0e_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _1e7c03b1b_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _1e7c0517d_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _1e7c8785e_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _2121271ce_PathStdlib = jule::Str();
jule::Str _2121274cb_PathExec = jule::Str();
jule::Str _212127784_PathWd = jule::Str();
jule::Str _212127a81_PathApi = jule::Str();
jule::Str _212127d39_Os = jule::Str::lit("linux", 5);
jule::Str _2121280e2_Arch = jule::Str::lit("amd64", 5);
jule::Str _21212cb74_Compiler = jule::Str();
jule::Str _21212e071_CompilerPath = jule::Str();
jule::Str _21212e280_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _21212e4b1_Shadowing = false;
jule::Bool _21212e769_Transpilation = false;
jule::Bool _21212ea22_Test = false;
jule::Bool _21212ecca_RC = true;
jule::Bool _212130193_Safety = true;
jule::Bool _2121303d5_Production = false;
jule::Array<jule::U8,32> _1b556c000__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1b556c594__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1b57220b7_floatInfo _1b57222d7_f32info = _1b57220b7_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1b57220b7_floatInfo _1b57225d4_f64info = _1b57220b7_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1b5729ec1_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1b572bcd6_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1b572c897_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1b572cbc7_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1b5730e2d_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1b5734bbd_leftCheat> _1b57350ec_leftCheats = jule::Slice<_1b5734bbd_leftCheat>::make({_1b5734bbd_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1b5734bbd_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_1b5734bbd_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_1b5734bbd_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_1b5734bbd_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_1b5734bbd_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_1b5734bbd_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_1b5734bbd_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_1b5734bbd_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_1b5734bbd_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_1b5734bbd_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_1b5734bbd_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_1b5734bbd_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_1b5734bbd_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_1b5734bbd_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_1b5734bbd_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_1b5734bbd_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_1b5734bbd_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_1b5734bbd_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_1b5734bbd_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_1b5734bbd_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_1b5734bbd_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_1b5734bbd_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_1b5734bbd_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_1b5734bbd_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_1b5734bbd_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_1b5734bbd_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_1b5734bbd_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_1b5734bbd_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_1b5734bbd_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_1b5734bbd_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_1b5734bbd_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_1b5734bbd_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_1b5734bbd_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_1b5734bbd_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_1b5734bbd_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_1b5734bbd_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_1b5734bbd_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_1b5734bbd_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_1b5734bbd_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_1b5734bbd_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_1b5734bbd_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_1b5734bbd_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_1b5734bbd_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_1b5734bbd_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_1b5734bbd_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_1b5734bbd_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_1b5734bbd_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_1b5734bbd_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_1b5734bbd_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_1b5734bbd_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_1b5734bbd_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_1b5734bbd_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_1b5734bbd_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_1b5734bbd_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_1b5734bbd_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_1b5734bbd_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_1b5734bbd_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_1b5734bbd_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_1b5734bbd_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_1b5734bbd_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1b573b09d_BitSize = 0LL;
jule::Str _1b573b39a_SysInt = jule::Str();
jule::Str _1b573b653_SysUint = jule::Str();
jule::Array<jule::I32,5> _1a3b21352_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _1a3b2163d_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _1a3b2196d_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _1a3b22045_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _1a3b22331_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_1a3b3044e_kindPair,28> _1a3b3087d_keywords = jule::Array<_1a3b3044e_kindPair,28>({_1a3b3044e_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_1a3b3044e_kindPair,46> _1a3b30bad_basicOps = jule::Array<_1a3b3044e_kindPair,46>({_1a3b3044e_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_1a3b3044e_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Slice<jule::Str> _1a3bad554_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e33950_primNil = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e33c4c_primVoid = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e34005_primAny = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("any", 3)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e34302_primStr = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("str", 3)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e345aa_primBool = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("bool", 4)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e34863_primUintptr = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("uintptr", 7)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e34b1b_primUint = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("uint", 4)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e34ed4_primInt = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("int", 3)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e35226_primI8 = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("i8", 2)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e354bd_primI16 = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("i16", 3)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e35776_primI32 = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("i32", 3)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e35a2e_primI64 = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("i64", 3)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e35cd7_primU8 = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("u8", 2)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e36090_primU16 = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("u16", 3)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e36348_primU32 = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("u32", 3)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e36832_primU64 = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("u64", 3)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e36a74_primF32 = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("f32", 3)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a3cbac27_TypeKind> _1a3e36c83_primF64 = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType(jule::Str::lit("f64", 3)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
jule::Ptr<_1a565665a_data> _1a5655c64_emptyData = jule::new_ptr<_1a565665a_data>();
jule::Bool _1a565ac7a_Copy = false;
jule::Bool _1a565b077_Deadcode = false;
jule::Bool _1a565b330_Append = false;
jule::Bool _1a565b62c_Math = false;
jule::Bool _1a565b8d5_Access = false;
jule::Bool _1a565bb8d_Inline = false;
jule::Bool _1a565be46_Ptr = false;
jule::Bool _1a565c30e_Cond = false;
jule::Bool _1a565c551_Str = false;
jule::Bool _1a565c7e8_Slice = false;
jule::Bool _1a565caa1_Assign = false;
jule::Bool _1a565cd59_Exceptional = false;
jule::Bool _1a565d112_Iter = false;
jule::Bool _1a565d3ba_Dynamic = false;
jule::Bool _1a513910a_exprEnabled = false;
jule::Bool _1a51393e6_scopeEnabled = false;
jule::Array<jule::U64,12> _1a5da9022_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1a5cd766a_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_1a3cbac27_TypeKind> _1a5db3a54_generalGCPtr = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3cc732c_Sptr>(_1a3cc732c_Sptr{._field_Elem=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3cc3801_Prim>(_1a3cc3801_Prim{._field_Kind=jule::Str::lit("uintptr", 7)}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)})}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data21)});


inline jule::Bool _1e7a8015c_Range16_eq(_1e7a8015c_Range16 *_self_, _1e7a8015c_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}



std::ostream &operator<<(std::ostream &_Stream, _1e7a8015c_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1e7a8068a_Range32_eq(_1e7a8068a_Range32 *_self_, _1e7a8068a_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}



std::ostream &operator<<(std::ostream &_Stream, _1e7a8068a_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1e7a80b0d_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1e7b83e0e_acceptRange_eq(_1e7b83e0e_acceptRange *_self_, _1e7b83e0e_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}



std::ostream &operator<<(std::ostream &_Stream, _1e7b83e0e_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _1e7be2632_StrBuilder static__1e7be28eb_New(jule::I64 _1516_cap) {
	if ((_1516_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:4"));;
	};
	return _1e7be2632_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1516_cap, 0)};;
}



inline void _1e7beaea9_Write(_1e7be2632_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b) {
	((*(_self_))._field_buf).append(_2521_b);;
}



inline void _1e7beb262_WriteStr(_1e7be2632_StrBuilder* _self_, jule::Str _3024_s) {
	((*(_self_))._field_buf).append(_3024_s);;
}



inline void _1e7beb51a_WriteByte(_1e7be2632_StrBuilder* _self_, jule::U8 _3525_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3525_b); };
}



inline jule::Str _1e7beba59_Str(_1e7be2632_StrBuilder* _self_) {
	jule::Str _507_s = _2123b22d2_StrFromBytes((*(_self_))._field_buf);;
	_1e7bebc57_Clear(_self_);
	return _507_s;;
}



inline void _1e7bebc57_Clear(_1e7be2632_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _1e7bebedd_Len(_1e7be2632_StrBuilder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _1e7bec50a_Buf(_1e7be2632_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1e7bec7b3_SetBuf(_1e7be2632_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf) {
	(*(_self_))._field_buf=_7733_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _1e7be2632_StrBuilder _Src) {
	_Stream << "StrBuilder{";
	_Stream << "buf:" << _Src._field_buf;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1e7bedad3_index(_1e7bed64e_lazyBuff* _self_, jule::I64 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _1e7bedd8b_append(_1e7bed64e_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1e7bee122_string(_1e7bed64e_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _2123b2018_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1e7bed64e_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _212303e27_DirEntry_eq(_212303e27_DirEntry *_self_, _212303e27_DirEntry _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		(_self_->_field_Stat == _self_->_field_Stat);
}



std::ostream &operator<<(std::ostream &_Stream, _212303e27_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _2123041ad_Directory_eq(_2123041ad_Directory *_self_, _2123041ad_Directory _other_) { return true; }

inline jule::Exceptional<jule::Slice<jule::Ptr<_212303e27_DirEntry>>> static__1e7c03038_Read(jule::Str _1517_path) {
	jule::Slice<jule::Ptr<_212303e27_DirEntry>> __jule_func_result;
	jule::Slice<jule::U8> _163_s = _2122a3a97_StrToBytes(_1517_path);;
	DIR* _177_dir = _2122b449d_Opendir((&(_163_s[0LL])));;
	if ((_177_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_212303e27_DirEntry>>>{.error=jule::Any(_2122ea0d8_getLastFsError(), &__jule_any_type0)};
	};
	for (;;) {
		{
			struct dirent* _224_dirent = _2122b4679_Readdir(_177_dir);;
			if ((_224_dirent == nullptr)) {
				goto _iter_end_1a80d7db9;
			};
			jule::Str _264_name = _2122a3811_BytePtrToStr(((jule::U8*)((*(_224_dirent)).d_name)));;
			jule::Ptr<_212307dd7_Status> _278_stat = ({
				auto except = static__212304a71_Of(_1e7beee03_Join(jule::Slice<jule::Str>::make({_1517_path,_264_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_212303e27_DirEntry>>>{.error=except.error};
				} jule::Ptr<_212307dd7_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_212303e27_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_212303e27_DirEntry>(_212303e27_DirEntry{._field_Name=_264_name, ._field_Stat=_278_stat})); };
		}
	_iter_next_1a80d7db9:;
	}
	_iter_end_1a80d7db9:;;
	_2122b4921_Closedir(_177_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_212303e27_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__1e7c03269_Create(jule::Str _4019_path) {
	jule::Slice<jule::U8> _443_s = _2122a3a97_StrToBytes(_4019_path);;
	if ((_2122b5328_Mkdir((&(_443_s[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_2122ea0d8_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__1e7c0349a_Remove(jule::Str _5319_path) {
	jule::Slice<jule::U8> _543_s = _2122a3a97_StrToBytes(_5319_path);;
	if ((_2122b55e2_Rmdir((&(_543_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_2122ea0d8_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _2123041ad_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _212305ce7_File_eq(_212305ce7_File *_self_, _212305ce7_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Exceptional<jule::Ptr<_212305ce7_File>> static__212302e59_Open(jule::Str _2017_path, jule::I64 _2028_flag, jule::I64 _2041_mode) {
	jule::Slice<jule::U8> _213_s = _2122a3a97_StrToBytes(_2017_path);;
	jule::I64 _223_handle = _2122b3b2e_Open((&(_213_s[0LL])), _2028_flag, _2041_mode);;
	if ((_223_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_212305ce7_File>>{.error=jule::Any(_2122ea0d8_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_212305ce7_File>>{.result=static__212306215_New(static_cast<jule::Uintptr>(_223_handle))};;
}



inline jule::VoidExceptional static__21230318a_Remove(jule::Str _3319_path) {
	jule::Slice<jule::U8> _343_s = _2122a3a97_StrToBytes(_3319_path);;
	if ((_2122b58ab_Unlink((&(_343_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_2122ea0d8_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _21230350e_Write(_212305ce7_File* _self_, jule::Slice<jule::U8> _4821_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_4821_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_212302871_HandleRW(&(_4821_buf));
	__jule_func_result=_2122e4dd5_Write(static_cast<jule::I64>((*(_self_))._field_handle), (&(_4821_buf[0LL])), static_cast<jule::U64>(_4821_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_2122ea0d8_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _212303850_Read(_212305ce7_File* _self_, jule::Slice<jule::U8> _6924_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_6924_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_212302871_HandleRW(&(_6924_buf));
	__jule_func_result=_2122e4654_Read(static_cast<jule::I64>((*(_self_))._field_handle), (&(_6924_buf[0LL])), static_cast<jule::U64>(_6924_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_2122ea0d8_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Ptr<_212305ce7_File> static__212306215_New(jule::Uintptr _4516_handle) {
	return jule::new_ptr<_212305ce7_File>(_212305ce7_File{._field_handle=_4516_handle});;
}



inline jule::Exceptional<jule::Ptr<_212305ce7_File>> static__2123064ce_Create(jule::Str _5519_path) {
	return static__212302e59_Open(_5519_path, static_cast<jule::I64>(578LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__212306798_Read(jule::Str _6717_path) {
	jule::Ptr<_212307dd7_Status> _683_s = ({
		auto except = static__212304a71_Of(_6717_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_212307dd7_Status>(nullptr);});
	});;
	if ((!(_212308547_IsReg(_683_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	jule::I64 _737_sz = static_cast<jule::I64>(_2123087cd_Size(_683_s));;
	if ((_737_sz != static_cast<jule::I64>(_2123087cd_Size(_683_s)))) {
		_737_sz=0LL;
	};
	if ((_737_sz < 512LLU)) {
		_737_sz=512LLU;
	};
	jule::Ptr<_212305ce7_File> _867_f = ({
		auto except = static__212302e59_Open(_6717_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_212305ce7_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _877_buf = jule::Slice<jule::U8>::alloc(_737_sz, _737_sz, 0);;
	jule::I64 _887_n = 0LL;;
	while ((_887_n < _737_sz)) {
		{
			jule::I64 _904_rn = ({
				auto except = _212303850_Read(_867_f.ptr(), _877_buf.slice(_887_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_904_rn == 0LL)) {
				goto _iter_end_1a80e6acb;
			};
			_887_n+=_904_rn;
		}
	_iter_next_1a80e6acb:;
	}
	_iter_end_1a80e6acb:;;
	({
		auto except = _21230737b_Close(_867_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_877_buf.slice(0LL, _887_n)};;
}



inline jule::VoidExceptional static__212306b3e_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm) {
	jule::Ptr<_212305ce7_File> _1067_f = ({
		auto except = static__212302e59_Open(_10518_path, static_cast<jule::I64>(577LL), _10543_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_212305ce7_File>(nullptr);});
	});;
	jule::I64 _1077_n = 0LL;;
	while ((_1077_n < _10529_data.len())) {
		{
			_1077_n+=({
				auto except = _21230350e_Write(_1067_f.ptr(), _10529_data.slice(_1077_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1a80eb927:;
	}
	_iter_end_1a80eb927:;;
	return _21230737b_Close(_1067_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _21230737b_Close(_212305ce7_File* _self_) {
	if ((_2122e4a2d_Close(static_cast<jule::I64>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_2122ea0d8_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _212305ce7_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _212307dd7_Status_eq(_212307dd7_Status *_self_, _212307dd7_Status _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Exceptional<jule::Ptr<_212307dd7_Status>> static__212304a71_Of(jule::Str _1215_path) {
	if ((_1215_path).empty()) {
		return jule::Exceptional<jule::Ptr<_212307dd7_Status>>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	struct stat _167_handle = (struct stat){};;
	jule::Slice<jule::U8> _173_s = _2122a3a97_StrToBytes(_1215_path);;
	jule::I64 _183_code = _2122b3700_Stat((&(_173_s[0LL])), (&(_167_handle)));;
	if ((_183_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_212307dd7_Status>>{.error=jule::Any(_2122ea0d8_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_212307dd7_Status> _227_stat = jule::new_ptr<_212307dd7_Status>();;
	(*_227_stat.alloc)._field_size=_167_handle.st_size;
	if (((_167_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_167_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_212307dd7_Status>>{.result=_227_stat};;
}



inline jule::Bool _2123082b1_IsDir(_212307dd7_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _212308547_IsReg(_212307dd7_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _2123087cd_Size(_212307dd7_Status* _self_) {
	return (*(_self_))._field_size;;
}





std::ostream &operator<<(std::ostream &_Stream, _212307dd7_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _212124671_cmdAttrs_eq(_212124671_cmdAttrs *_self_, _212124671_cmdAttrs _other_) {
	return 
		(_self_->_field_pid == _other_._field_pid);
}



std::ostream &operator<<(std::ostream &_Stream, _212124671_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1e7c94ecb_Log_eq(_1e7c94ecb_Log *_self_, _1e7c94ecb_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}



std::ostream &operator<<(std::ostream &_Stream, _1e7c94ecb_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1b57220b7_floatInfo_eq(_1b57220b7_floatInfo *_self_, _1b57220b7_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}



std::ostream &operator<<(std::ostream &_Stream, _1b57220b7_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b5722a68_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1b5734bbd_leftCheat_eq(_1b5734bbd_leftCheat *_self_, _1b5734bbd_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}



std::ostream &operator<<(std::ostream &_Stream, _1b5734bbd_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1b57356d5_decimal_eq(_1b57356d5_decimal *_self_, _1b57356d5_decimal _other_) {
	return 
		_1a87857db_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _1b572c116_set(_1b57356d5_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1a6c6b0e2:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1a6c6b202:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1a6c6b059:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1a6c6cb2c:;
					{
						goto _iter_next_1a6c6c4cd;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1a6c6cbc6:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1a6c6c4cd;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1a6c6cc3c:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1a6c6c4cd;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1a6c6c4cd;
					}
				}
				_match_end_1a6c6ca0b:;
			};
			goto _iter_end_1a6c6c4cd;
		}
	_iter_next_1a6c6c4cd:;
	}
	_iter_end_1a6c6c4cd:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1b572763e_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1a6c73083;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I64>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1a6c73083:;
		}
		_iter_end_1a6c73083:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1b572c457_floatBits(_1b57356d5_decimal* _self_, _1b57220b7_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1a6c83978;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1a6c8257b;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1a6c83978;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1b572bcd6_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1b572bcd6_powtab[(*(_self_))._field_dp];
			};
			_1b5735d45_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1a6c79771:;
	}
	_iter_end_1a6c79771:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1b572bcd6_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1b572bcd6_powtab[(-((*(_self_))._field_dp))];
			};
			_1b5735d45_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1a6c7a167:;
	}
	_iter_end_1a6c7a167:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I64 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1b5735d45_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33226_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1a6c8257b;
	};
	_1b5735d45_shift(_self_, static_cast<jule::I64>((1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1b57368e5_roundedInteger(_self_);
	if ((_3347_mant == (2LLU << (*(_33226_flt))._field_mantbits))) {
		_3347_mant>>=1LLU;
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33226_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1a6c8257b;
		};
	};
	if (((_3347_mant & (1LLU << (*(_33226_flt))._field_mantbits)) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1a6c83978;
	_julec_label_1a6c8257b:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33226_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1a6c83978:;
	jule::U64 _4227_bits = (_3347_mant & ((1LLU << (*(_33226_flt))._field_mantbits) - 1LLU));;
	_4227_bits|=(static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33226_flt))._field_expbits) - 1LL)))) << (*(_33226_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_4227_bits|=((1LLU << (*(_33226_flt))._field_mantbits) << (*(_33226_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1b5735a8c_assign(_1b57356d5_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = jule::Array<jule::U8,24>(0);;
	jule::I64 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1a6c868b0:;
	}
	_iter_end_1a6c868b0:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1a6c87509:;
	}
	_iter_end_1a6c87509:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1b5737033_trim(_self_);
}



inline void _1b5735d45_shift(_1b57356d5_decimal* _self_, jule::I64 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1a6c89473:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1a6c8951c:;
			{
				while ((_17625_k > 60LL)) {
					{
						_1b5737a7d_leftShift(_self_, 60LLU);
						_17625_k-=60LL;
					}
				_iter_next_1a6c8a0de:;
				}
				_iter_end_1a6c8a0de:;;
				_1b5737a7d_leftShift(_self_, static_cast<jule::U64>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1a6c89583:;
			{
				while ((_17625_k < -60LL)) {
					{
						_1b573731e_rightShift(_self_, 60LLU);
						_17625_k+=60LL;
					}
				_iter_next_1a6c8a012:;
				}
				_iter_end_1a6c8a012:;;
				_1b573731e_rightShift(_self_, static_cast<jule::U64>((-(_17625_k))));
			}
		}
		_match_end_1a6c8931e:;
	};
}



inline void _1b57360ed_roundDown(_1b57356d5_decimal* _self_, jule::I64 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1b5737033_trim(_self_);
}



inline void _1b57363a6_roundUp(_1b57356d5_decimal* _self_, jule::I64 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1a6c8d554:;
	}
	_iter_end_1a6c8d554:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1b573665e_round(_1b57356d5_decimal* _self_, jule::I64 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1b5737e02_shouldRoundUp(_self_, _23221_nd)) {
		_1b57363a6_roundUp(_self_, _23221_nd);
	} else {
		_1b57360ed_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1b57368e5_roundedInteger(_1b57356d5_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=((_2507_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1a6c91414:;
	}
	_iter_end_1a6c91414:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1a6c92734:;
	}
	_iter_end_1a6c92734:;;
	if (_1b5737e02_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b57356d5_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b5747b9d_Const> static__1b57480dd_NewI64(jule::I64 _1619_x) {
	return jule::new_ptr<_1b5747b9d_Const>(_1b5747b9d_Const{._field_data=jule::Any(_1619_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1b5747b9d_Const> static__1b57483a7_NewU64(jule::U64 _1919_x) {
	return jule::new_ptr<_1b5747b9d_Const>(_1b5747b9d_Const{._field_data=jule::Any(_1919_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1b5747b9d_Const> static__1b5748671_NewBool(jule::Bool _2220_x) {
	return jule::new_ptr<_1b5747b9d_Const>(_1b5747b9d_Const{._field_data=jule::Any(_2220_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1b5747b9d_Const> static__1b574893a_NewStr(jule::Str _2519_x) {
	return jule::new_ptr<_1b5747b9d_Const>(_1b5747b9d_Const{._field_data=jule::Any(_2519_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1b5747b9d_Const> static__1b5748c04_NewF64(jule::F64 _2819_x) {
	return jule::new_ptr<_1b5747b9d_Const>(_1b5747b9d_Const{._field_data=jule::Any(_2819_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1b5747b9d_Const> static__1b5748e13_NewNil(void) {
	return jule::new_ptr<_1b5747b9d_Const>(_1b5747b9d_Const{._field_data=nullptr});;
}



inline jule::I64 _1b5749573_ReadI64(_1b5747b9d_Const* _self_) {
	if ((!(_1b574bb6e_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1);;
}



inline jule::U64 _1b5749809_ReadU64(_1b5747b9d_Const* _self_) {
	if ((!(_1b574be05_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2);;
}



inline jule::Bool _1b5749a90_ReadBool(_1b5747b9d_Const* _self_) {
	if ((!(_1b574c18b_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1b5749d26_ReadStr(_1b5747b9d_Const* _self_) {
	if ((!(_1b574c422_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1b574a0ac_ReadF64(_1b5747b9d_Const* _self_) {
	if ((!(_1b574c6a8_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5);;
}



inline jule::I64 _1b574a343_AsI64(_1b5747b9d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a894764b:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a894741a:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a8947481:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1a8946eb9:;
			{
				return 0LL;;
			}
		}
		_match_end_1a8946d21:;
	};
}



inline jule::U64 _1b574a5c9_AsU64(_1b5747b9d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a8947ddd:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a8948c13:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a8948c79:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1a8947195:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a8947140:;
	};
}



inline jule::F64 _1b574a860_AsF64(_1b5747b9d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a894a73c:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a89496d6:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a894a50b:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1a8948a59:;
			{
				return 0LL;;
			}
		}
		_match_end_1a8948a04:;
	};
}



inline void _1b574ab18_SetI64(_1b5747b9d_Const* _self_, jule::I64 _13822_x) {
	(*(_self_))._field_data=jule::Any(_13822_x, &__jule_any_type1);
}



inline void _1b574adc1_SetU64(_1b5747b9d_Const* _self_, jule::U64 _14122_x) {
	(*(_self_))._field_data=jule::Any(_14122_x, &__jule_any_type2);
}



inline void _1b574b179_SetBool(_1b5747b9d_Const* _self_, jule::Bool _14423_x) {
	(*(_self_))._field_data=jule::Any(_14423_x, &__jule_any_type3);
}



inline void _1b574b432_SetStr(_1b5747b9d_Const* _self_, jule::Str _14722_x) {
	(*(_self_))._field_data=jule::Any(_14722_x, &__jule_any_type4);
}



inline void _1b574b6da_SetF64(_1b5747b9d_Const* _self_, jule::F64 _15022_x) {
	(*(_self_))._field_data=jule::Any(_15022_x, &__jule_any_type5);
}



inline jule::Bool _1b574bb6e_IsI64(_1b5747b9d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a894e0ae:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a894e323:;
			{
				return false;;
			}
		}
		_match_end_1a894e2bd:;
	};
}



inline jule::Bool _1b574be05_IsU64(_1b5747b9d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a894ec6e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a894e576:;
			{
				return false;;
			}
		}
		_match_end_1a894e521:;
	};
}



inline jule::Bool _1b574c18b_IsBool(_1b5747b9d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a89506ba:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a8950038:;
			{
				return false;;
			}
		}
		_match_end_1a894eed3:;
	};
}



inline jule::Bool _1b574c422_IsStr(_1b5747b9d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a8951116:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a8950984:;
			{
				return false;;
			}
		}
		_match_end_1a895092e:;
	};
}



inline jule::Bool _1b574c6a8_IsF64(_1b5747b9d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a8951a62:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a89513d0:;
			{
				return false;;
			}
		}
		_match_end_1a895137a:;
	};
}



inline jule::Bool _1b574c93e_IsNil(_1b5747b9d_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1b574d0c1_And(_1b5747b9d_Const* _self_, _1b5747b9d_Const _23815_x) {
	{
		
		if ((_1b574c18b_IsBool(_self_) && _1b574c18b_IsBool(&_23815_x))) {
			_case_begin_1a8955cca:;
			{
				return (_1b5749a90_ReadBool(_self_) && _1b5749a90_ReadBool(&_23815_x));;
			}
		}
		else {
			_case_begin_1a8955c64:;
			{
				return false;;
			}
		}
		_match_end_1a8955879:;
	};
}



inline jule::Bool _1b574d412_Or(_1b5747b9d_Const* _self_, _1b5747b9d_Const _24914_x) {
	{
		
		if ((_1b574c18b_IsBool(_self_) && _1b574c18b_IsBool(&_24914_x))) {
			_case_begin_1a8957095:;
			{
				return (_1b5749a90_ReadBool(_self_) || _1b5749a90_ReadBool(&_24914_x));;
			}
		}
		else {
			_case_begin_1a895677b:;
			{
				return false;;
			}
		}
		_match_end_1a895669e:;
	};
}



inline jule::Bool _1b574d753_Eq(_1b5747b9d_Const* _self_, _1b5747b9d_Const _26014_x) {
	{
		
		if (_1b574c93e_IsNil(_self_)) {
			_case_begin_1a89583c6:;
			{
				return _1b574c93e_IsNil(&_26014_x);;
			}
		}
		else if (_1b574c18b_IsBool(_self_)) {
			_case_begin_1a895843c:;
			{
				return (_1b574c18b_IsBool(&_26014_x) && (_1b5749a90_ReadBool(_self_) == _1b5749a90_ReadBool(&_26014_x)));;
			}
		}
		else if (_1b574c422_IsStr(_self_)) {
			_case_begin_1a89584a3:;
			{
				return (_1b574c422_IsStr(&_26014_x) && (_1b5749d26_ReadStr(_self_) == _1b5749d26_ReadStr(&_26014_x)));;
			}
		}
		else if (_1b574bb6e_IsI64(_self_)) {
			_case_begin_1a895852a:;
			{
				return (_1b5749573_ReadI64(_self_) == _1b574a343_AsI64(&_26014_x));;
			}
		}
		else if (_1b574be05_IsU64(_self_)) {
			_case_begin_1a89585a2:;
			{
				return (_1b5749809_ReadU64(_self_) == _1b574a5c9_AsU64(&_26014_x));;
			}
		}
		else if (_1b574c6a8_IsF64(_self_)) {
			_case_begin_1a8958728:;
			{
				return (_1b574a0ac_ReadF64(_self_) == _1b574a860_AsF64(&_26014_x));;
			}
		}
		else {
			_case_begin_1a8957a35:;
			{
				return false;;
			}
		}
		_match_end_1a8957958:;
	};
}



inline jule::Bool _1b574da94_Lt(_1b5747b9d_Const* _self_, _1b5747b9d_Const _28714_x) {
	{
		
		if (_1b574c422_IsStr(_self_)) {
			_case_begin_1a895c067:;
			{
				return (_1b574c422_IsStr(&_28714_x) && (_1b5749d26_ReadStr(_self_) < _1b5749d26_ReadStr(&_28714_x)));;
			}
		}
		else if (_1b574bb6e_IsI64(_self_)) {
			_case_begin_1a895c0cd:;
			{
				return (_1b5749573_ReadI64(_self_) < _1b574a343_AsI64(&_28714_x));;
			}
		}
		else if (_1b574be05_IsU64(_self_)) {
			_case_begin_1a895c144:;
			{
				return (_1b5749809_ReadU64(_self_) < _1b574a5c9_AsU64(&_28714_x));;
			}
		}
		else if (_1b574c6a8_IsF64(_self_)) {
			_case_begin_1a895c1bb:;
			{
				return (_1b574a0ac_ReadF64(_self_) < _1b574a860_AsF64(&_28714_x));;
			}
		}
		else {
			_case_begin_1a8958d55:;
			{
				return false;;
			}
		}
		_match_end_1a8958c89:;
	};
}



inline jule::Bool _1b574ddd5_LtEq(_1b5747b9d_Const* _self_, _1b5747b9d_Const _31016_x) {
	{
		
		if (_1b574c422_IsStr(_self_)) {
			_case_begin_1a895ec07:;
			{
				return (_1b574c422_IsStr(&_31016_x) && (_1b5749d26_ReadStr(_self_) <= _1b5749d26_ReadStr(&_31016_x)));;
			}
		}
		else if (_1b574bb6e_IsI64(_self_)) {
			_case_begin_1a895ec6d:;
			{
				return (_1b5749573_ReadI64(_self_) <= _1b574a343_AsI64(&_31016_x));;
			}
		}
		else if (_1b574be05_IsU64(_self_)) {
			_case_begin_1a895ecd4:;
			{
				return (_1b5749809_ReadU64(_self_) <= _1b574a5c9_AsU64(&_31016_x));;
			}
		}
		else if (_1b574c6a8_IsF64(_self_)) {
			_case_begin_1a895ed5b:;
			{
				return (_1b574a0ac_ReadF64(_self_) <= _1b574a860_AsF64(&_31016_x));;
			}
		}
		else {
			_case_begin_1a895c8e7:;
			{
				return false;;
			}
		}
		_match_end_1a895c82b:;
	};
}



inline jule::Bool _1b574e226_Gt(_1b5747b9d_Const* _self_, _1b5747b9d_Const _33314_x) {
	{
		
		if (_1b574c422_IsStr(_self_)) {
			_case_begin_1a8962897:;
			{
				return (_1b574c422_IsStr(&_33314_x) && (_1b5749d26_ReadStr(_self_) > _1b5749d26_ReadStr(&_33314_x)));;
			}
		}
		else if (_1b574bb6e_IsI64(_self_)) {
			_case_begin_1a896290d:;
			{
				return (_1b5749573_ReadI64(_self_) > _1b574a343_AsI64(&_33314_x));;
			}
		}
		else if (_1b574be05_IsU64(_self_)) {
			_case_begin_1a8962974:;
			{
				return (_1b5749809_ReadU64(_self_) > _1b574a5c9_AsU64(&_33314_x));;
			}
		}
		else if (_1b574c6a8_IsF64(_self_)) {
			_case_begin_1a89629eb:;
			{
				return (_1b574a0ac_ReadF64(_self_) > _1b574a860_AsF64(&_33314_x));;
			}
		}
		else {
			_case_begin_1a8960587:;
			{
				return false;;
			}
		}
		_match_end_1a89604bb:;
	};
}



inline jule::Bool _1b574e567_GtEq(_1b5747b9d_Const* _self_, _1b5747b9d_Const _35616_x) {
	{
		
		if (_1b574c422_IsStr(_self_)) {
			_case_begin_1a8965537:;
			{
				return (_1b574c422_IsStr(&_35616_x) && (_1b5749d26_ReadStr(_self_) >= _1b5749d26_ReadStr(&_35616_x)));;
			}
		}
		else if (_1b574bb6e_IsI64(_self_)) {
			_case_begin_1a896559d:;
			{
				return (_1b5749573_ReadI64(_self_) >= _1b574a343_AsI64(&_35616_x));;
			}
		}
		else if (_1b574be05_IsU64(_self_)) {
			_case_begin_1a8965614:;
			{
				return (_1b5749809_ReadU64(_self_) >= _1b574a5c9_AsU64(&_35616_x));;
			}
		}
		else if (_1b574c6a8_IsF64(_self_)) {
			_case_begin_1a896568b:;
			{
				return (_1b574a0ac_ReadF64(_self_) >= _1b574a860_AsF64(&_35616_x));;
			}
		}
		else {
			_case_begin_1a8963227:;
			{
				return false;;
			}
		}
		_match_end_1a896315b:;
	};
}



inline jule::Bool _1b574e8a8_Add(_1b5747b9d_Const* _self_, _1b5747b9d_Const _37719_x) {
	{
		
		if (_1b574c422_IsStr(_self_)) {
			_case_begin_1a89681c7:;
			{
				if ((!(_1b574c422_IsStr(&_37719_x)))) {
					return false;;
				};
				_1b574b432_SetStr(_self_, (_1b5749d26_ReadStr(_self_) + _1b5749d26_ReadStr(&_37719_x)));
			}
		}
		else if (_1b574c6a8_IsF64(_self_)) {
			_case_begin_1a896823d:;
			{
				_1b574b6da_SetF64(_self_, (_1b574a0ac_ReadF64(_self_) + _1b574a860_AsF64(&_37719_x)));
			}
		}
		else if (_1b574bb6e_IsI64(_self_)) {
			_case_begin_1a89682a4:;
			{
				if (_1b574c6a8_IsF64(&_37719_x)) {
					_1b574b6da_SetF64(_self_, (_1b574a860_AsF64(_self_) + _1b574a0ac_ReadF64(&_37719_x)));
				} else {
					_1b574ab18_SetI64(_self_, (_1b5749573_ReadI64(_self_) + _1b574a343_AsI64(&_37719_x)));
				};
			}
		}
		else if (_1b574be05_IsU64(_self_)) {
			_case_begin_1a896832b:;
			{
				if (_1b574c6a8_IsF64(&_37719_x)) {
					_1b574b6da_SetF64(_self_, (_1b574a860_AsF64(_self_) + _1b574a0ac_ReadF64(&_37719_x)));
				} else {
					_1b574adc1_SetU64(_self_, (_1b5749809_ReadU64(_self_) + _1b574a5c9_AsU64(&_37719_x)));
				};
			}
		}
		else {
			_case_begin_1a8965db7:;
			{
				return false;;
			}
		}
		_match_end_1a8965ceb:;
	};
	return true;;
}



inline jule::Bool _1b574ebe9_Sub(_1b5747b9d_Const* _self_, _1b5747b9d_Const _40619_x) {
	{
		
		if (_1b574c6a8_IsF64(_self_)) {
			_case_begin_1a896cde1:;
			{
				_1b574b6da_SetF64(_self_, (_1b574a0ac_ReadF64(_self_) - _1b574a860_AsF64(&_40619_x)));
			}
		}
		else if (_1b574bb6e_IsI64(_self_)) {
			_case_begin_1a896ce8a:;
			{
				if (_1b574c6a8_IsF64(&_40619_x)) {
					_1b574b6da_SetF64(_self_, (_1b574a860_AsF64(_self_) - _1b574a0ac_ReadF64(&_40619_x)));
				} else {
					_1b574ab18_SetI64(_self_, (_1b5749573_ReadI64(_self_) - _1b574a343_AsI64(&_40619_x)));
				};
			}
		}
		else if (_1b574be05_IsU64(_self_)) {
			_case_begin_1a896d012:;
			{
				if (_1b574c6a8_IsF64(&_40619_x)) {
					_1b574b6da_SetF64(_self_, (_1b574a860_AsF64(_self_) - _1b574a0ac_ReadF64(&_40619_x)));
				} else {
					_1b574adc1_SetU64(_self_, (_1b5749809_ReadU64(_self_) - _1b574a5c9_AsU64(&_40619_x)));
				};
			}
		}
		else {
			_case_begin_1a896c63d:;
			{
				return false;;
			}
		}
		_match_end_1a896c550:;
	};
	return true;;
}



inline jule::Bool _1b575003a_Mul(_1b5747b9d_Const* _self_, _1b5747b9d_Const _43019_x) {
	{
		
		if (_1b574c6a8_IsF64(_self_)) {
			_case_begin_1a8971c4c:;
			{
				_1b574b6da_SetF64(_self_, (_1b574a0ac_ReadF64(_self_) * _1b574a860_AsF64(&_43019_x)));
			}
		}
		else if (_1b574bb6e_IsI64(_self_)) {
			_case_begin_1a8971ce6:;
			{
				if (_1b574c6a8_IsF64(&_43019_x)) {
					_1b574b6da_SetF64(_self_, (_1b574a860_AsF64(_self_) * _1b574a0ac_ReadF64(&_43019_x)));
				} else {
					_1b574ab18_SetI64(_self_, (_1b5749573_ReadI64(_self_) * _1b574a343_AsI64(&_43019_x)));
				};
			}
		}
		else if (_1b574be05_IsU64(_self_)) {
			_case_begin_1a8971d6d:;
			{
				if (_1b574c6a8_IsF64(&_43019_x)) {
					_1b574b6da_SetF64(_self_, (_1b574a860_AsF64(_self_) * _1b574a0ac_ReadF64(&_43019_x)));
				} else {
					_1b574adc1_SetU64(_self_, (_1b5749809_ReadU64(_self_) * _1b574a5c9_AsU64(&_43019_x)));
				};
			}
		}
		else {
			_case_begin_1a8971356:;
			{
				return false;;
			}
		}
		_match_end_1a8971268:;
	};
	return true;;
}



inline jule::Bool _1b575037b_Div(_1b5747b9d_Const* _self_, _1b5747b9d_Const _45819_x) {
	{
		
		if (_1b574c6a8_IsF64(_self_)) {
			_case_begin_1a8975aa8:;
			{
				jule::F64 _4614_l = _1b574a860_AsF64(&_45819_x);;
				if ((_4614_l == 0LL)) {
					return false;;
				};
				_1b574b6da_SetF64(_self_, jule::div(_1b574a0ac_ReadF64(_self_),_4614_l));
			}
		}
		else if (_1b574bb6e_IsI64(_self_)) {
			_case_begin_1a8975b52:;
			{
				jule::F64 _4674_l = _1b574a860_AsF64(&_45819_x);;
				if ((_4674_l == 0LL)) {
					return false;;
				};
				_1b574b6da_SetF64(_self_, jule::div(_1b574a860_AsF64(_self_),_4674_l));
			}
		}
		else if (_1b574be05_IsU64(_self_)) {
			_case_begin_1a8975bc9:;
			{
				jule::F64 _4734_l = _1b574a860_AsF64(&_45819_x);;
				if ((_4734_l == 0LL)) {
					return false;;
				};
				_1b574b6da_SetF64(_self_, jule::div(_1b574a860_AsF64(_self_),_4734_l));
			}
		}
		else {
			_case_begin_1a89751b2:;
			{
				return false;;
			}
		}
		_match_end_1a89750c4:;
	};
	return true;;
}



inline jule::Bool _1b57506bc_Mod(_1b5747b9d_Const* _self_, _1b5747b9d_Const _48719_x) {
	{
		
		if (_1b574bb6e_IsI64(_self_)) {
			_case_begin_1a8979a8a:;
			{
				jule::I64 _4904_l = _1b574a343_AsI64(&_48719_x);;
				if ((_4904_l == 0LL)) {
					return false;;
				};
				_1b574ab18_SetI64(_self_, jule::mod(_1b5749573_ReadI64(_self_),_4904_l));
			}
		}
		else if (_1b574be05_IsU64(_self_)) {
			_case_begin_1a8979e86:;
			{
				jule::U64 _4964_l = _1b574a5c9_AsU64(&_48719_x);;
				if ((_4964_l == 0LLU)) {
					return false;;
				};
				_1b574adc1_SetU64(_self_, jule::mod(_1b5749809_ReadU64(_self_),_4964_l));
			}
		}
		else {
			_case_begin_1a8979a13:;
			{
				return false;;
			}
		}
		_match_end_1a8979914:;
	};
	return true;;
}



inline jule::Bool _1b5750a0d_BitwiseAnd(_1b5747b9d_Const* _self_, _1b5747b9d_Const _50926_x) {
	{
		
		if (_1b574bb6e_IsI64(_self_)) {
			_case_begin_1a897c890:;
			{
				_1b574ab18_SetI64(_self_, (_1b5749573_ReadI64(_self_) & _1b574a343_AsI64(&_50926_x)));
			}
		}
		else if (_1b574be05_IsU64(_self_)) {
			_case_begin_1a897cc8b:;
			{
				_1b574adc1_SetU64(_self_, (_1b5749809_ReadU64(_self_) & _1b574a5c9_AsU64(&_50926_x)));
			}
		}
		else {
			_case_begin_1a897c818:;
			{
				return false;;
			}
		}
		_match_end_1a897c719:;
	};
	return true;;
}



inline jule::Bool _1b5750d4e_BitwiseOr(_1b5747b9d_Const* _self_, _1b5747b9d_Const _52325_x) {
	{
		
		if (_1b574bb6e_IsI64(_self_)) {
			_case_begin_1a897e61c:;
			{
				_1b574ab18_SetI64(_self_, (_1b5749573_ReadI64(_self_) | _1b574a343_AsI64(&_52325_x)));
			}
		}
		else if (_1b574be05_IsU64(_self_)) {
			_case_begin_1a897ea18:;
			{
				_1b574adc1_SetU64(_self_, (_1b5749809_ReadU64(_self_) | _1b574a5c9_AsU64(&_52325_x)));
			}
		}
		else {
			_case_begin_1a897e595:;
			{
				return false;;
			}
		}
		_match_end_1a897e496:;
	};
	return true;;
}



inline jule::Bool _1b5751190_Xor(_1b5747b9d_Const* _self_, _1b5747b9d_Const _53719_x) {
	{
		
		if (_1b574bb6e_IsI64(_self_)) {
			_case_begin_1a8981399:;
			{
				_1b574ab18_SetI64(_self_, (_1b5749573_ReadI64(_self_) ^ _1b574a343_AsI64(&_53719_x)));
			}
		}
		else if (_1b574be05_IsU64(_self_)) {
			_case_begin_1a8981795:;
			{
				_1b574adc1_SetU64(_self_, (_1b5749809_ReadU64(_self_) ^ _1b574a5c9_AsU64(&_53719_x)));
			}
		}
		else {
			_case_begin_1a8981322:;
			{
				return false;;
			}
		}
		_match_end_1a8981223:;
	};
	return true;;
}



inline jule::Bool _1b57514d1_Lshift(_1b5747b9d_Const* _self_, _1b5747b9d_Const _55122_x) {
	{
		
		if (_1b574bb6e_IsI64(_self_)) {
			_case_begin_1a8983126:;
			{
				jule::I64 _5544_l = _1b574a343_AsI64(_self_);;
				if ((_5544_l < 0LL)) {
					jule::U64 _5565_r = _1b574a5c9_AsU64(&_55122_x);;
					_1b574ab18_SetI64(_self_, (_5544_l << _5565_r));
				} else {
					_1b5751bb8_lshiftUnsig(_self_, &(_55122_x));
				};
			}
		}
		else if (_1b574be05_IsU64(_self_)) {
			_case_begin_1a8983522:;
			{
				_1b5751bb8_lshiftUnsig(_self_, &(_55122_x));
			}
		}
		else {
			_case_begin_1a898309e:;
			{
				return false;;
			}
		}
		_match_end_1a8982ea0:;
	};
	return true;;
}



inline jule::Bool _1b5751822_Rshift(_1b5747b9d_Const* _self_, _1b5747b9d_Const _57122_x) {
	{
		
		if (_1b574bb6e_IsI64(_self_)) {
			_case_begin_1a8985645:;
			{
				jule::I64 _5744_l = _1b574a343_AsI64(_self_);;
				if ((_5744_l < 0LL)) {
					jule::U64 _5765_r = _1b574a5c9_AsU64(&_57122_x);;
					_1b574ab18_SetI64(_self_, (_5744_l >> _5765_r));
				} else {
					_1b5751ee8_rshiftUnsig(_self_, &(_57122_x));
				};
			}
		}
		else if (_1b574be05_IsU64(_self_)) {
			_case_begin_1a8985a41:;
			{
				_1b5751ee8_rshiftUnsig(_self_, &(_57122_x));
			}
		}
		else {
			_case_begin_1a89855bd:;
			{
				return false;;
			}
		}
		_match_end_1a89854be:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b5747b9d_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b27a62_Token_eq(_1a3b27a62_Token *_self_, _1a3b27a62_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _1a3b27dd6_Prec(_1a3b27a62_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a8398564:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a839808b:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a8398102:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1a83985ca:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1a8398652:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1a8397aa2:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a8397eae:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b27a62_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1a3b2d716_Fill(_1a3b2d2e8_File* _self_, jule::Slice<jule::U8> _1724_data) {
	(*(_self_))._field_Data=_1724_data;
}



inline jule::Str _1a3b2d99c_Dir(_1a3b2d2e8_File* _self_) {
	return _1e7c00ae6_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1a3b2dc33_Name(_1a3b2d2e8_File* _self_) {
	return _1e7c0071c_Base((*(_self_))._field_Path);;
}



inline jule::Str _1a3b2e30a_GetRow(_1a3b2d2e8_File* _self_, jule::I64 _3818_row) {
	jule::I64 _397_n = 0LL;;
	jule::I64 _407_lineStart = 0LL;;
	jule::I64 _417_i = 0LL;;
	for (; (_417_i < (*(_self_))._field_Data.len()); (_417_i)++) {
		{
			if (((*(_self_))._field_Data[_417_i] != '\n')) {
				goto _iter_next_1a839dcea;
			};
			(_397_n)++;
			if ((_397_n == _3818_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_407_lineStart, _417_i));;
			};
			_407_lineStart=(_417_i + 1LL);
		}
	_iter_next_1a839dcea:;
	}
	_iter_end_1a839dcea:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b2d2e8_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b3044e_kindPair_eq(_1a3b3044e_kindPair *_self_, _1a3b3044e_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b3044e_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1a3b369b6_pushErr(_1a3b36433_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args) {
	{ jule::Slice<_1e7c94ecb_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a3b311ec_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44723_fmt, _44736_args)); };
}



inline void _1a3b37027_lex(_1a3b36433_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1a3b39249_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1a3b27a62_Token> _4628_token = _1a3b3a734_token(_self_);;
			if (((*(_4628_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1a3b27a62_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4628_token); };
			};
		}
	_iter_next_1a8144772:;
	}
	_iter_end_1a8144772:;;
}



inline jule::Str _1a3b37368_id(_1a3b36433_lex* _self_, jule::Slice<jule::U8>* _47119_ln) {
	if (((*(_47119_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4753_r;
	jule::I64 _47510_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e7b84ae1_DecodeRune((*(_47119_ln)));
		_4753_r = __jule_assign_result.__jule_result_arg0;
		_47510_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4753_r != '_') && (!(_1a3b2b291_IsLetter(_4753_r))))) {
		return jule::Str();;
	};
	while ((_47510_i < (*(_47119_ln)).len())) {
		{
			jule::I32 _4814_pr;
			jule::I64 _4818_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e7b84ae1_DecodeRune((*(_47119_ln)).slice(_47510_i));
				_4814_pr = __jule_assign_result.__jule_result_arg0;
				_4818_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4814_pr != '_') && (!(_1a3b2b714_IsDecimal(static_cast<jule::U8>(_4814_pr))))) && (!(_1a3b2b291_IsLetter(_4814_pr))))) {
				(*(_self_))._field_pos+=_47510_i;
				return static_cast<jule::Str>((*(_47119_ln)).slice(0LL, _47510_i));;
			};
			_47510_i+=_4818_n;
		}
	_iter_next_1a8147b82:;
	}
	_iter_end_1a8147b82:;;
	(*(_self_))._field_pos+=(*(_47119_ln)).len();
	return static_cast<jule::Str>((*(_47119_ln)));;
}



inline jule::Slice<jule::U8> _1a3b375ee_resume(_1a3b36433_lex* _self_) {
	jule::I64 _4967_i = (*(_self_))._field_pos;;
	for (; (_4967_i < (*((*(_self_))._field_file))._field_Data.len()); (_4967_i)++) {
		{
			jule::I32 _4984_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_4967_i]);;
			if (_1a3b2ac96_IsSpace(_4984_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4984_r };
					
					if (_match_expr == '\n') {
						_case_begin_1a814bdea:;
						{
							_1a3b39249_newLine(_self_);
						}
					}
					else {
						_case_begin_1a814b702:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1a814b9bb:;
				};
				goto _iter_next_1a814a5d0;
			};
			jule::I64 _5108_j = _4967_i;;
			for (; (_5108_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_5108_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_5108_j] == '\n')) {
						goto _iter_end_1a814abb8;
					};
				}
			_iter_next_1a814abb8:;
			}
			_iter_end_1a814abb8:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_4967_i, _5108_j);;
		}
	_iter_next_1a814a5d0:;
	}
	_iter_end_1a814a5d0:;;
	return nullptr;;
}



inline void _1a3b378a7_lexLineComment(_1a3b36433_lex* _self_, jule::Ptr<_1a3b27a62_Token>* _52135_token) {
	jule::I64 _5223_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5254_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_5254_r == '\n') || (_5254_r == '\r'))) {
				goto _iter_end_1a814e518;
			};
		}
	_iter_next_1a814e518:;
	}
	_iter_end_1a814e518:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52135_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52135_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5223_start, (*(_self_))._field_pos));
	};
}



inline void _1a3b37b60_lexRangeComment(_1a3b36433_lex* _self_, jule::Ptr<_1a3b27a62_Token>* _53636_token) {
	jule::I64 _5373_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5404_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_5404_r == '\r')) {
				goto _iter_next_1a8152b7b;
			};
			if ((_5404_r == '\n')) {
				_1a3b39249_newLine(_self_);
				goto _iter_next_1a8152b7b;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_5404_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53636_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53636_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5373_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1a8152b7b:;
	}
	_iter_end_1a8152b7b:;;
	_1a3b369b6_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1a3b37ea1_num(_1a3b36433_lex* _self_, jule::Slice<jule::U8>* _56420_txt) {
	jule::Str __jule_func_result;
	if (((*(_56420_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1a3b34c4a_hexNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1a815a5ac;
	};
	__jule_func_result=_1a3b34a6e_octalNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1a815a5ac;
	};
	__jule_func_result=_1a3b3330e_binaryNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1a815a5ac;
	};
	__jule_func_result=_1a3b33045_commonNum(_56420_txt);
	_julec_label_1a815a5ac:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1a3b382e2_escapeSeq(_1a3b36433_lex* _self_, jule::Slice<jule::U8>* _58626_txt) {
	jule::Str _5877_seq = jule::Str();;
	if (((*(_58626_txt)).len() < 2LL)) {
		goto _julec_label_1a815e319;
	};
	{
		auto &_match_expr{ (*(_58626_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1a815c449:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58626_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a815c5ae:;
			{
				_5877_seq=_1a3b35366_bigUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1a815c180:;
			{
				_5877_seq=_1a3b35630_littleUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a815c1e6:;
			{
				_5877_seq=_1a3b358e9_hexByteEscape(_58626_txt);
			}
		}
		else {
			_case_begin_1a815baca:;
			{
				_5877_seq=_1a3b35bb3_byteEscape(_58626_txt);
			}
		}
		_match_end_1a815c01a:;
	};
	_julec_label_1a815e319:;
	if ((_5877_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1a3b369b6_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5877_seq.len();
	return _5877_seq;;
}



inline jule::Str _1a3b386dd_getRune(_1a3b36433_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw) {
	if (((!(_61637_raw)) && ((*(_61624_txt))[0LL] == '\\'))) {
		return _1a3b382e2_escapeSeq(_self_, _61624_txt);;
	};
	jule::I32 _6203_r;
	jule::I64 _6206_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e7b84ae1_DecodeRune((*(_61624_txt)));
		_6203_r = __jule_assign_result.__jule_result_arg0;
		_6206_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6206_n;
	return jule::Str::from_rune(_6203_r);;
}



inline jule::Str _1a3b38a2e_lexRune(_1a3b36433_lex* _self_, jule::Slice<jule::U8>* _62524_txt) {
	_1e7be2632_StrBuilder _6267_run = static__1e7be28eb_New(8LL);;
	_1e7beb51a_WriteByte(&_6267_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _6297_n = 0LL;;
	jule::I64 _6307_i = 1LL;;
	for (; (_6307_i < (*(_62524_txt)).len()); (_6307_i)++) {
		{
			if (((*(_62524_txt))[_6307_i] == '\r')) {
				goto _iter_next_1a81636e7;
			};
			if (((*(_62524_txt))[_6307_i] == '\n')) {
				_1a3b369b6_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1a3b39249_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6424_part = (*(_62524_txt)).slice(_6307_i);;
			jule::Str _6434_r = _1a3b386dd_getRune(_self_, &(_6424_part), false);;
			_1e7beb262_WriteStr(&_6267_run, _6434_r);
			(*(_self_))._field_column+=_1e7b868d4_RuneCountStr(_6434_r);
			if (_6434_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1a81636e7;
			};
			if ((_6434_r.len() > 1LL)) {
				_6307_i+=(_6434_r.len() - 1LL);
			};
			(_6297_n)++;
		}
	_iter_next_1a81636e7:;
	}
	_iter_end_1a81636e7:;;
	if ((_6297_n == 0LL)) {
		_1a3b369b6_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_6297_n > 1LL)) {
		_1a3b369b6_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _1e7beba59_Str(&_6267_run);;
}



inline jule::Str _1a3b38cb5_lexStr(_1a3b36433_lex* _self_) {
	_1e7be2632_StrBuilder _6667_s = static__1e7be28eb_New(16LL);;
	jule::U8 _6673_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6693_raw = (_6673_mark == '`');;
	_1e7beb51a_WriteByte(&_6667_s, _6673_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _6744_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_6744_ch == '\r')) {
				goto _iter_next_1a8168a2c;
			};
			if ((_6744_ch == '\n')) {
				_1a3b39249_newLine(_self_);
				if ((!(_6693_raw))) {
					_1a3b369b6_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6868_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _6874_r = _1a3b386dd_getRune(_self_, &(_6868_part), _6693_raw);;
			_1e7beb262_WriteStr(&_6667_s, _6874_r);
			(*(_self_))._field_column+=_1e7b868d4_RuneCountStr(_6874_r);
			if ((_6744_ch == _6673_mark)) {
				goto _iter_end_1a8168a2c;
			};
		}
	_iter_next_1a8168a2c:;
	}
	_iter_end_1a8168a2c:;;
	return _1e7beba59_Str(&_6667_s);;
}



inline void _1a3b39249_newLine(_1a3b36433_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1a3b397aa_isOp(_1a3b36433_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1a3b27a62_Token>* _70763_t) {
	if ((!(_1a3b315b5_bytesHasPrefix(_70721_txt, _70734_kind)))) {
		return false;;
	};
	(*((*(_70763_t))))._field_Kind=_70734_kind;
	(*((*(_70763_t))))._field_Id=_70745_id;
	(*(_self_))._field_pos+=_70734_kind.len();
	return true;;
}



inline jule::Bool _1a3b39ba6_lexBasicOps(_1a3b36433_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1a3b27a62_Token>* _71745_tok) {
	{
		auto expr = &(_1a3b30bad_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8170814:;
		if (it != expr_end) {
			_1a3b3044e_kindPair *_71810_pair = it;
			{
				if (_1a3b397aa_isOp(_self_, &(_71727_txt), (*(_71810_pair))._field_kind, (*(_71810_pair))._field_id, _71745_tok)) {
					return true;;
				};
			}
			_iter_next_1a8170814:;
			++it;
			goto _iter_begin_1a8170814;
		}
		_iter_end_1a8170814:;
	};
	return false;;
}



inline jule::Bool _1a3b3a0a2_lexId(_1a3b36433_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1a3b27a62_Token>* _72640_t) {
	jule::Str _7273_lex = _1a3b37368_id(_self_, _72622_txt);;
	if ((_7273_lex).empty()) {
		return false;;
	};
	(*((*(_72640_t))))._field_Kind=_7273_lex;
	(*((*(_72640_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1a3b3a49d_lexNum(_1a3b36433_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1a3b27a62_Token>* _73641_t) {
	jule::Str _7373_lex = _1a3b37ea1_num(_self_, _73623_txt);;
	if ((_7373_lex).empty()) {
		return false;;
	};
	(*((*(_73641_t))))._field_Kind=_7373_lex;
	(*((*(_73641_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1a3b27a62_Token> _1a3b3a734_token(_1a3b36433_lex* _self_) {
	jule::Ptr<_1a3b27a62_Token> _7487_t = jule::new_ptr<_1a3b27a62_Token>(_1a3b27a62_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7533_txt = _1a3b375ee_resume(_self_);;
	if ((_7533_txt == nullptr)) {
		return _7487_t;;
	};
	(*(_7487_t))._field_Column=(*(_self_))._field_column;
	(*_7487_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1a3b3a49d_lexNum(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1a8177981:;
			{
				goto _match_end_1a817584c;
			}
		}
		else if ((_7533_txt[0LL] == '\'')) {
			_case_begin_1a81779e7:;
			{
				(*_7487_t.alloc)._field_Kind=_1a3b38a2e_lexRune(_self_, &(_7533_txt));
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (((_7533_txt[0LL] == '\"') || (_7533_txt[0LL] == '`'))) {
			_case_begin_1a8177a5d:;
			{
				(*_7487_t.alloc)._field_Kind=_1a3b38cb5_lexStr(_self_);
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (_1a3b315b5_bytesHasPrefix(&(_7533_txt), jule::Str::lit("//", 2))) {
			_case_begin_1a81764a7:;
			{
				_1a3b378a7_lexLineComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1a3b315b5_bytesHasPrefix(&(_7533_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1a817651d:;
			{
				_1a3b37b60_lexRangeComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1a3b39ba6_lexBasicOps(_self_, _7533_txt, &(_7487_t))) {
			_case_begin_1a8176584:;
			{
				goto _match_end_1a817584c;
			}
		}
		else if (_1a3b3a0a2_lexId(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1a81765ea:;
			{
				{
					auto expr = &(_1a3b3087d_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a817b6dd:;
					if (it != expr_end) {
						_1a3b3044e_kindPair *_78511_pair = it;
						{
							if (((*(_78511_pair))._field_kind == (*_7487_t.alloc)._field_Kind)) {
								(*_7487_t.alloc)._field_Id=(*(_78511_pair))._field_id;
								goto _iter_end_1a817b6dd;
							};
						}
						_iter_next_1a817b6dd:;
						++it;
						goto _iter_begin_1a817b6dd;
					}
					_iter_end_1a817b6dd:;
				};
			}
		}
		else {
			_case_begin_1a8176441:;
			{
				jule::I32 _7924_r;
				jule::I64 _7927_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e7b84ae1_DecodeRune(_7533_txt);
					_7924_r = __jule_assign_result.__jule_result_arg0;
					_7927_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1a3b369b6_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_7924_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7927_sz;
				return _7487_t;;
			}
		}
		_match_end_1a817584c:;
	};
	(*(_self_))._field_column+=_1e7b868d4_RuneCountStr((*_7487_t.alloc)._field_Kind);
	return _7487_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b36433_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b3b180_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b3c13c_Node_eq(_1a3b3c13c_Node *_self_, _1a3b3c13c_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b3c13c_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b3c55a_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b3d13d_TypeDecl_eq(_1a3b3d13d_TypeDecl *_self_, _1a3b3d13d_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b3d13d_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b3d748_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b3da12_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b3dddb_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b3e1d8_SptrTypeDecl_eq(_1a3b3e1d8_SptrTypeDecl *_self_, _1a3b3e1d8_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b3e1d8_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b3e56d_SlcTypeDecl_eq(_1a3b3e56d_SlcTypeDecl *_self_, _1a3b3e56d_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b3e56d_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b3e86a_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b3eb67_PtrTypeDecl_eq(_1a3b3eb67_PtrTypeDecl *_self_, _1a3b3eb67_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _1a3b3eeca_IsUnsafe(_1a3b3eb67_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b3eb67_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b40409_ArrTypeDecl_eq(_1a3b40409_ArrTypeDecl *_self_, _1a3b40409_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _1a3b4076c_AutoSized(_1a3b40409_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b40409_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b40b57_MapTypeDecl_eq(_1a3b40b57_MapTypeDecl *_self_, _1a3b40b57_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b40b57_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b41031_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b42472_Expr_eq(_1a3b42472_Expr *_self_, _1a3b42472_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b42472_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b4273b_RangeExpr_eq(_1a3b4273b_RangeExpr *_self_, _1a3b4273b_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b4273b_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b42d46_UseExpr_eq(_1a3b42d46_UseExpr *_self_, _1a3b42d46_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b42d46_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b43066_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b4340c_LitExpr_eq(_1a3b4340c_LitExpr *_self_, _1a3b4340c_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b4340c_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b437d6_UnsafeExpr_eq(_1a3b437d6_UnsafeExpr *_self_, _1a3b437d6_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b437d6_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b43c8c_IdentExpr_eq(_1a3b43c8c_IdentExpr *_self_, _1a3b43c8c_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b43c8c_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b4452e_UnaryExpr_eq(_1a3b4452e_UnaryExpr *_self_, _1a3b4452e_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b4452e_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b44908_VariadicExpr_eq(_1a3b44908_VariadicExpr *_self_, _1a3b44908_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b44908_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b44cd2_CastExpr_eq(_1a3b44cd2_CastExpr *_self_, _1a3b44cd2_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b44cd2_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b451ab_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b45585_SubIdentExpr_eq(_1a3b45585_SubIdentExpr *_self_, _1a3b45585_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b45585_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b45a3b_BinaryExpr_eq(_1a3b45a3b_BinaryExpr *_self_, _1a3b45a3b_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b45a3b_BinaryExpr _Src) {
	_Stream << "BinaryExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3b46520_Unhandled(_1a3b4619b_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1a3b467a6_Ignored(_1a3b4619b_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b4619b_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b46b91_FieldExprPair_eq(_1a3b46b91_FieldExprPair *_self_, _1a3b46b91_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b46b91_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b474bb_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b47972_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b4829c_KeyValPair_eq(_1a3b4829c_KeyValPair *_self_, _1a3b4829c_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b4829c_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b489c8_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b49435_IndexingExpr_eq(_1a3b49435_IndexingExpr *_self_, _1a3b49435_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b49435_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b49a95_SlicingExpr_eq(_1a3b49a95_SlicingExpr *_self_, _1a3b49a95_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b49a95_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b49d92_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b4a348_GenericDecl_eq(_1a3b4a348_GenericDecl *_self_, _1a3b4a348_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b4a348_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b4a722_LabelSt_eq(_1a3b4a722_LabelSt *_self_, _1a3b4a722_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b4a722_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b4aaeb_GotoSt_eq(_1a3b4aaeb_GotoSt *_self_, _1a3b4aaeb_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b4aaeb_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b4ade8_FallSt_eq(_1a3b4ade8_FallSt *_self_, _1a3b4ade8_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b4ade8_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b4b558_AssignLeft_eq(_1a3b4b558_AssignLeft *_self_, _1a3b4b558_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b4b558_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b4badb_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b4c9ee_Stmt_eq(_1a3b4c9ee_Stmt *_self_, _1a3b4c9ee_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b4c9ee_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b4d15e_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b4d89b_ParamDecl_eq(_1a3b4d89b_ParamDecl *_self_, _1a3b4d89b_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _1a3b4dc20_IsSelf(_1a3b4d89b_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b4d89b_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3b50161_IsAnon(_1a3b4eced_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b4eced_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b50ea8_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b51382_RetSt_eq(_1a3b51382_RetSt *_self_, _1a3b51382_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b51382_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b51b02_Iter_eq(_1a3b51b02_Iter *_self_, _1a3b51b02_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1a3b51e65_IsInf(_1a3b51b02_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b51b02_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b5242c_WhileKind_eq(_1a3b5242c_WhileKind *_self_, _1a3b5242c_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _1a3b52790_IsWhileNext(_1a3b5242c_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b5242c_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b52d34_RangeKind_eq(_1a3b52d34_RangeKind *_self_, _1a3b52d34_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b52d34_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b5320d_BreakSt_eq(_1a3b5320d_BreakSt *_self_, _1a3b5320d_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b5320d_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b535d7_ContSt_eq(_1a3b535d7_ContSt *_self_, _1a3b535d7_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b535d7_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b53a8d_If_eq(_1a3b53a8d_If *_self_, _1a3b53a8d_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b53a8d_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b53e67_Else_eq(_1a3b53e67_Else *_self_, _1a3b53e67_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b53e67_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b5441d_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b54b5a_TypeAliasDecl_eq(_1a3b54b5a_TypeAliasDecl *_self_, _1a3b54b5a_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b54b5a_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b55111_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b5592a_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b56244_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b566ea_EnumItemDecl_eq(_1a3b566ea_EnumItemDecl *_self_, _1a3b566ea_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b566ea_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b572ab_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b57ad6_TypeEnumItemDecl_eq(_1a3b57ad6_TypeEnumItemDecl *_self_, _1a3b57ad6_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b57ad6_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b58246_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b58510_FieldDecl_eq(_1a3b58510_FieldDecl *_self_, _1a3b58510_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b58510_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b58e06_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b59643_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b59ca3_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b5b117_Field_eq(_1a3b5b117_Field *_self_, _1a3b5b117_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_1a3b6121b_FieldIns> _1a3b5b4be_instance(jule::Ptr<_1a3b5b117_Field> _self_) {
	return jule::new_ptr<_1a3b6121b_FieldIns>(_1a3b6121b_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b5b117_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b5d12a_Operators_eq(_1a3b5d12a_Operators *_self_, _1a3b5d12a_Operators _other_) {
	return 
		(_self_->_field_Eq == _other_._field_Eq) &&
		(_self_->_field_Gt == _self_->_field_Gt) &&
		(_self_->_field_GtEq == _self_->_field_GtEq) &&
		(_self_->_field_Lt == _self_->_field_Lt) &&
		(_self_->_field_LtEq == _self_->_field_LtEq) &&
		(_self_->_field_Shl == _self_->_field_Shl) &&
		(_self_->_field_Shr == _self_->_field_Shr) &&
		(_self_->_field_Add == _self_->_field_Add) &&
		(_self_->_field_Sub == _self_->_field_Sub) &&
		(_self_->_field_Div == _self_->_field_Div) &&
		(_self_->_field_Mul == _self_->_field_Mul) &&
		(_self_->_field_Mod == _self_->_field_Mod) &&
		(_self_->_field_BitAnd == _self_->_field_BitAnd) &&
		(_self_->_field_BitOr == _self_->_field_BitOr) &&
		(_self_->_field_BitXor == _self_->_field_BitXor) &&
		(_self_->_field_Neg == _self_->_field_Neg) &&
		(_self_->_field_Pos == _self_->_field_Pos) &&
		(_self_->_field_BitNot == _self_->_field_BitNot) &&
		(_self_->_field_AddAssign == _self_->_field_AddAssign) &&
		(_self_->_field_SubAssign == _self_->_field_SubAssign) &&
		(_self_->_field_DivAssign == _self_->_field_DivAssign) &&
		(_self_->_field_MulAssign == _self_->_field_MulAssign) &&
		(_self_->_field_ModAssign == _self_->_field_ModAssign) &&
		(_self_->_field_ShlAssign == _self_->_field_ShlAssign) &&
		(_self_->_field_ShrAssign == _self_->_field_ShrAssign) &&
		(_self_->_field_BitOrAssign == _self_->_field_BitOrAssign) &&
		(_self_->_field_BitAndAssign == _self_->_field_BitAndAssign) &&
		(_self_->_field_BitXorAssign == _self_->_field_BitXorAssign);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b5d12a_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3b61cbb_StructIns> _1a3b5e4a0_instance(jule::Ptr<_1a3b5e03d_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1a3b61cbb_StructIns> _1007_ins = jule::new_ptr<_1a3b61cbb_StructIns>(_1a3b61cbb_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1a3b6121b_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1a3c31c26_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()), ._field_Refers=static__1a3b7a554_new(), });;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a886d363:;
		if (it != expr_end) {
			jule::Ptr<_1a3c31c26_Var> _10715_s = *it;
			{
				(*(_1007_ins))._field_Statics=jule::append((*_1007_ins.alloc)._field_Statics,jule::Slice<jule::Ptr<_1a3c31c26_Var>>::make({jule::new_ptr<_1a3c31c26_Var>((*(_10715_s)))}));
			}
			_iter_next_1a886d363:;
			++it;
			goto _iter_begin_1a886d363;
		}
		_iter_end_1a886d363:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a89d1e44:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5b117_Field> _11115_f = *it;
			{
				(*_1007_ins.alloc)._field_Fields=jule::append((*_1007_ins.alloc)._field_Fields,jule::Slice<jule::Ptr<_1a3b6121b_FieldIns>>::make({_1a3b5b4be_instance(_11115_f)}));
				if ((((!((*_11115_f.alloc)._field_Mutable)) && ((*((*_11115_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1a3cbc5a8_Mutable((*((*(_11115_f))._field_Kind))._field_Kind))) {
					(*_1007_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1a89d1e44:;
			++it;
			goto _iter_begin_1a89d1e44;
		}
		_iter_end_1a89d1e44:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_1007_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_1007_ins.alloc)._field_Methods=jule::Slice<jule::Ptr<_1a3b740ec_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len());
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a89d59d6:;
			if (it != expr_end) {
				jule::Ptr<_1a3b740ec_Fn> _12216_f = *it;
				{
					jule::Ptr<_1a3b740ec_Fn> _1239_fins = jule::new_ptr<_1a3b740ec_Fn>((*(_12216_f)));;
					(*_1239_fins.alloc)._field_Instances=nullptr;
					(*_1007_ins.alloc)._field_Methods=jule::append((*_1007_ins.alloc)._field_Methods,jule::Slice<jule::Ptr<_1a3b740ec_Fn>>::make({_1239_fins}));
				}
				_iter_next_1a89d59d6:;
				++it;
				goto _iter_begin_1a89d59d6;
			}
			_iter_end_1a89d59d6:;
		};
	};
	return _1007_ins;;
}



inline jule::Ptr<_1a3b61cbb_StructIns> _1a3b5e7ad_appendInstance(_1a3b5e03d_Struct* _self_, jule::Ptr<_1a3b61cbb_StructIns>* _13435_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a887051e:;
		if (it != expr_end) {
			jule::Ptr<_1a3b61cbb_StructIns> _14015_ains = *it;
			{
				if (_1a3b62937_Same(_14015_ains.ptr(), (*(_13435_ins)))) {
					return _14015_ains;;
				};
			}
			_iter_next_1a887051e:;
			++it;
			goto _iter_begin_1a887051e;
		}
		_iter_end_1a887051e:;
	};
	{ jule::Slice<jule::Ptr<_1a3b61cbb_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13435_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1a3b740ec_Fn> _1a3b5eba9_FindMethod(_1a3b5e03d_Struct* _self_, jule::Str _15226_ident, jule::Bool _15238_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a887172e:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _15315_f = *it;
			{
				if ((((*(_15315_f))._field_Statically == _15238_statically) && ((*_15315_f.alloc)._field_Ident == _15226_ident))) {
					return _15315_f;;
				};
			}
			_iter_next_1a887172e:;
			++it;
			goto _iter_begin_1a887172e;
		}
		_iter_end_1a887172e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3c31c26_Var> _1a3b5eeea_FindStatic(_1a3b5e03d_Struct* _self_, jule::Str _16326_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8872cc4:;
		if (it != expr_end) {
			jule::Ptr<_1a3c31c26_Var> _16415_v = *it;
			{
				if (((*(_16415_v))._field_Ident == _16326_ident)) {
					return _16415_v;;
				};
			}
			_iter_next_1a8872cc4:;
			++it;
			goto _iter_begin_1a8872cc4;
		}
		_iter_end_1a8872cc4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b5b117_Field> _1a3b6033b_FindField(_1a3b5e03d_Struct* _self_, jule::Str _17425_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8874a1d:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5b117_Field> _17515_f = *it;
			{
				if (((*(_17515_f))._field_Ident == _17425_ident)) {
					return _17515_f;;
				};
			}
			_iter_next_1a8874a1d:;
			++it;
			goto _iter_begin_1a8874a1d;
		}
		_iter_end_1a8874a1d:;
	};
	return nullptr;;
}



inline jule::Bool _1a3b6067c_IsImplements(_1a3b5e03d_Struct* _self_, jule::Ptr<_1a3b87a7d_Trait> _18424_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88759db:;
		if (it != expr_end) {
			jule::Ptr<_1a3b87a7d_Trait> *_18510_it = it;
			{
				if ((_18424_t == (*(_18510_it)))) {
					return true;;
				};
			}
			_iter_next_1a88759db:;
			++it;
			goto _iter_begin_1a88759db;
		}
		_iter_end_1a88759db:;
	};
	return false;;
}



inline jule::Bool _1a3b609bd_IsUses(_1a3b5e03d_Struct* _self_, jule::Ptr<_1a3b5e03d_Struct> _19418_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a887647b:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> *_19510_u = it;
			{
				while ((_19418_s == (*(_19510_u)))) {
					{
						return true;;
					}
				_iter_next_1a8876e82:;
				}
				_iter_end_1a8876e82:;;
			}
			_iter_next_1a887647b:;
			++it;
			goto _iter_begin_1a887647b;
		}
		_iter_end_1a887647b:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b5e03d_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6121b_FieldIns_eq(_1a3b6121b_FieldIns *_self_, _1a3b6121b_FieldIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6121b_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a3b62140_Str(_1a3b61cbb_StructIns* _self_) {
	_1e7be2632_StrBuilder _2397_kind = static__1e7be28eb_New(32LL);;
	_1e7beb262_WriteStr(&_2397_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_1e7beb51a_WriteByte(&_2397_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8879d64:;
			if (it != expr_end) {
				jule::I64 _2438_i = it - expr->begin();
				jule::Ptr<_1a3cb9341_InsGeneric> *_24311_g = it;
				{
					_1e7beb262_WriteStr(&_2397_kind, _1a3cbb0e0_Str((*((*(_24311_g))))._field_Kind.ptr()));
					if ((_2438_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_1e7beb51a_WriteByte(&_2397_kind, ',');
					};
				}
				_iter_next_1a8879d64:;
				++it;
				_2438_i++;
				goto _iter_begin_1a8879d64;
			}
			_iter_end_1a8879d64:;
		};
		_1e7beb51a_WriteByte(&_2397_kind, ']');
	};
	return _1e7beba59_Str(&_2397_kind);;
}



inline jule::Bool _1a3b62481_Equal(jule::Ptr<_1a3b61cbb_StructIns> _self_, jule::Ptr<_1a3cbac27_TypeKind> _25518_other) {
	jule::Ptr<_1a3b61cbb_StructIns> _2563_s = _1a3cbe8eb_Struct(_25518_other.ptr());;
	if ((_2563_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2563_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2563_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _2697_i = 0LL;;
	for (; (_2697_i < (*_self_.alloc)._field_Generics.len()); (_2697_i)++) {
		{
			if ((!(_1a3cbb431_Equal((*((*(_self_))._field_Generics[_2697_i]))._field_Kind, (*((*(_2563_s))._field_Generics[_2697_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1a887d43e:;
	}
	_iter_end_1a887d43e:;;
	return true;;
}



inline jule::Bool _1a3b62937_Same(_1a3b61cbb_StructIns* _self_, jule::Ptr<_1a3b61cbb_StructIns> _28316_s) {
	if ((((*(_self_))._field_Decl != (*(_28316_s))._field_Decl) || ((*_28316_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8881970:;
		if (it != expr_end) {
			jule::I64 _2877_i = it - expr->begin();
			jule::Ptr<_1a3cb9341_InsGeneric> *_28710_g = it;
			{
				jule::Ptr<_1a3cb9341_InsGeneric> _2884_g2 = (*(_28316_s))._field_Generics[_2877_i];;
				if ((((*((*((*(_28710_g))))._field_Kind))._field_BindIdent != (*(*(_2884_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1a3cbb431_Equal((*((*(_28710_g))))._field_Kind, (*(_2884_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1a8881970:;
			++it;
			_2877_i++;
			goto _iter_begin_1a8881970;
		}
		_iter_end_1a8881970:;
	};
	return true;;
}



inline jule::Ptr<_1a3b740ec_Fn> _1a3b62d33_FindMethod(_1a3b61cbb_StructIns* _self_, jule::Str _29826_ident, jule::Bool _29838_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a888449a:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _29915_f = *it;
			{
				if ((((*(_29915_f))._field_Statically == _29838_statically) && ((*_29915_f.alloc)._field_Ident == _29826_ident))) {
					return _29915_f;;
				};
			}
			_iter_next_1a888449a:;
			++it;
			goto _iter_begin_1a888449a;
		}
		_iter_end_1a888449a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b6121b_FieldIns> _1a3b63174_FindField(_1a3b61cbb_StructIns* _self_, jule::Str _30925_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8884a1c:;
		if (it != expr_end) {
			jule::Ptr<_1a3b6121b_FieldIns> _31015_f = *it;
			{
				if (((*((*(_31015_f))._field_Decl))._field_Ident == _30925_ident)) {
					return _31015_f;;
				};
			}
			_iter_next_1a8884a1c:;
			++it;
			goto _iter_begin_1a8884a1c;
		}
		_iter_end_1a8884a1c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3c31c26_Var> _1a3b634b5_FindStatic(_1a3b61cbb_StructIns* _self_, jule::Str _32026_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8886975:;
		if (it != expr_end) {
			jule::Ptr<_1a3c31c26_Var> _32115_v = *it;
			{
				if (((*(_32115_v))._field_Ident == _32026_ident)) {
					return _32115_v;;
				};
			}
			_iter_next_1a8886975:;
			++it;
			goto _iter_begin_1a8886975;
		}
		_iter_end_1a8886975:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b61cbb_StructIns _Src) {
	_Stream << _1a3b62140_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3b65c26_OperandExprModel_eq(_1a3b65c26_OperandExprModel *_self_, _1a3b65c26_OperandExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Model == _self_->_field_Model);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b65c26_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b66221_BinaryExprModel_eq(_1a3b66221_BinaryExprModel *_self_, _1a3b66221_BinaryExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b66221_BinaryExprModel _Src) {
	_Stream << "BinaryExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b665ea_UnaryExprModel_eq(_1a3b665ea_UnaryExprModel *_self_, _1a3b665ea_UnaryExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b665ea_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b66b28_StructArgExprModel_eq(_1a3b66b28_StructArgExprModel *_self_, _1a3b66b28_StructArgExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b66b28_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b66ebe_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b672bb_AllocStructLitExprModel_eq(_1a3b672bb_AllocStructLitExprModel *_self_, _1a3b672bb_AllocStructLitExprModel _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b672bb_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6784e_CastingExprModel_eq(_1a3b6784e_CastingExprModel *_self_, _1a3b6784e_CastingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_ExprKind == _self_->_field_ExprKind);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6784e_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b68201_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b685ca_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b68a81_IndexingExprModel_eq(_1a3b68a81_IndexingExprModel *_self_, _1a3b68a81_IndexingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b68a81_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b69037_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Captured:" << _Src._field_Captured << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b69411_KeyValPairExprModel_eq(_1a3b69411_KeyValPairExprModel *_self_, _1a3b69411_KeyValPairExprModel _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b69411_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b698b7_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b69e4a_SlicingExprModel_eq(_1a3b69e4a_SlicingExprModel *_self_, _1a3b69e4a_SlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b69e4a_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6a4cd_TraitSubIdentExprModel_eq(_1a3b6a4cd_TraitSubIdentExprModel *_self_, _1a3b6a4cd_TraitSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6a4cd_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6ad6e_StructSubIdentExprModel_eq(_1a3b6ad6e_StructSubIdentExprModel *_self_, _1a3b6ad6e_StructSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6ad6e_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6b215_StructStaticIdentExprModel_eq(_1a3b6b215_StructStaticIdentExprModel *_self_, _1a3b6b215_StructStaticIdentExprModel _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6b215_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b6b5de_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b6b8db_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6bcb5_BuiltinOutCallExprModel_eq(_1a3b6bcb5_BuiltinOutCallExprModel *_self_, _1a3b6bcb5_BuiltinOutCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6bcb5_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6c18e_BuiltinOutlnCallExprModel_eq(_1a3b6c18e_BuiltinOutlnCallExprModel *_self_, _1a3b6c18e_BuiltinOutlnCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6c18e_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6c568_BuiltinNewCallExprModel_eq(_1a3b6c568_BuiltinNewCallExprModel *_self_, _1a3b6c568_BuiltinNewCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Init == _self_->_field_Init);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6c568_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6c942_BuiltinPanicCallExprModel_eq(_1a3b6c942_BuiltinPanicCallExprModel *_self_, _1a3b6c942_BuiltinPanicCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6c942_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6cde8_BuiltinAssertCallExprModel_eq(_1a3b6cde8_BuiltinAssertCallExprModel *_self_, _1a3b6cde8_BuiltinAssertCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Log == _self_->_field_Log);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6cde8_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6d39e_BuiltinMakeCallExprModel_eq(_1a3b6d39e_BuiltinMakeCallExprModel *_self_, _1a3b6d39e_BuiltinMakeCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6d39e_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6d778_BuiltinAppendCallExprModel_eq(_1a3b6d778_BuiltinAppendCallExprModel *_self_, _1a3b6d778_BuiltinAppendCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6d778_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6da75_BuiltinLenCallExprModel_eq(_1a3b6da75_BuiltinLenCallExprModel *_self_, _1a3b6da75_BuiltinLenCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6da75_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6dd72_BuiltinCapCallExprModel_eq(_1a3b6dd72_BuiltinCapCallExprModel *_self_, _1a3b6dd72_BuiltinCapCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6dd72_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6e24b_BuiltinDeleteCallExprModel_eq(_1a3b6e24b_BuiltinDeleteCallExprModel *_self_, _1a3b6e24b_BuiltinDeleteCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6e24b_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6e625_BuiltinCopyCallExprModel_eq(_1a3b6e625_BuiltinCopyCallExprModel *_self_, _1a3b6e625_BuiltinCopyCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6e625_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b6e9ee_BuiltinErrorCallExprModel_eq(_1a3b6e9ee_BuiltinErrorCallExprModel *_self_, _1a3b6e9ee_BuiltinErrorCallExprModel _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b6e9ee_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b701a3_SizeofExprModel_eq(_1a3b701a3_SizeofExprModel *_self_, _1a3b701a3_SizeofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b701a3_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b70390_AlignofExprModel_eq(_1a3b70390_AlignofExprModel *_self_, _1a3b70390_AlignofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b70390_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b70637_RuneExprModel_eq(_1a3b70637_RuneExprModel *_self_, _1a3b70637_RuneExprModel _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b70637_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b70934_IntegratedToStrExprModel_eq(_1a3b70934_IntegratedToStrExprModel *_self_, _1a3b70934_IntegratedToStrExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b70934_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b70d0d_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b7110a_FreeExprModel_eq(_1a3b7110a_FreeExprModel *_self_, _1a3b7110a_FreeExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b7110a_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b71d97_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b72628_Param_eq(_1a3b72628_Param *_self_, _1a3b72628_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_1a3b76055_ParamIns> _1a3b729ad_instance(jule::Ptr<_1a3b72628_Param> _self_) {
	return jule::new_ptr<_1a3b76055_ParamIns>(_1a3b76055_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1a3b72c44_IsSelf(_1a3b72628_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1a3b72eca_IsRef(_1a3b72628_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b72628_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3b74570_IsVoid(_1a3b740ec_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1a3b74806_IsMethod(_1a3b740ec_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1a3b74a8c_IsEntryPoint(_1a3b740ec_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1a3b74d23_IsInit(_1a3b740ec_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1a3b750a9_IsAnon(_1a3b740ec_Fn* _self_) {
	return _1a3b2a713_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1a3b75340_AnyVar(_1a3b740ec_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1a3b770cd_FnIns> _1a3b755c6_instanceForce(jule::Ptr<_1a3b740ec_Fn> _self_) {
	jule::Ptr<_1a3b770cd_FnIns> _1017_ins = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1a3bb664a_Scope>(), ._field_Refers=static__1a3b7a554_new(), });;
	(*(_1017_ins))._field_Params=jule::Slice<jule::Ptr<_1a3b76055_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a888d949:;
		if (it != expr_end) {
			jule::Ptr<_1a3b72628_Param> _10815_p = *it;
			{
				(*_1017_ins.alloc)._field_Params=jule::append((*_1017_ins.alloc)._field_Params,jule::Slice<jule::Ptr<_1a3b76055_ParamIns>>::make({_1a3b729ad_instance(_10815_p)}));
			}
			_iter_next_1a888d949:;
			++it;
			goto _iter_begin_1a888d949;
		}
		_iter_end_1a888d949:;
	};
	if (((*((*_1017_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1017_ins.alloc)._field_Result=(*((*(*((*(_1017_ins))._field_Decl))._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _1017_ins;;
}



inline jule::Ptr<_1a3b770cd_FnIns> _1a3b7585c_instance(jule::Ptr<_1a3b740ec_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1a3b755c6_instanceForce(_self_);;
}



inline jule::Ptr<_1a3b770cd_FnIns> _1a3b75b6a_appendInstance(_1a3b740ec_Fn* _self_, jule::Ptr<_1a3b770cd_FnIns>* _12935_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1a3b770cd_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12935_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1a3b770cd_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12935_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8894169:;
		if (it != expr_end) {
			jule::Ptr<_1a3b770cd_FnIns> _14515_ains = *it;
			{
				if (_1a3b78b3a_Same(_14515_ains.ptr(), (*(_12935_ins)))) {
					return _14515_ains;;
				};
			}
			_iter_next_1a8894169:;
			++it;
			goto _iter_begin_1a8894169;
		}
		_iter_end_1a8894169:;
	};
	{ jule::Slice<jule::Ptr<_1a3b770cd_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12935_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b740ec_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b76055_ParamIns_eq(_1a3b76055_ParamIns *_self_, _1a3b76055_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1a3b763b8_Str(_1a3b76055_ParamIns* _self_) {
	_1e7be2632_StrBuilder _1677_s = static__1e7be28eb_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_1e7beb262_WriteStr(&_1677_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_1e7beb262_WriteStr(&_1677_s, jule::Str::lit("&_:", 3));
	};
	if (_1a3b72c44_IsSelf((*(_self_))._field_Decl)) {
		if (_1a3b72eca_IsRef((*(_self_))._field_Decl)) {
			_1e7beb51a_WriteByte(&_1677_s, '&');
		};
		_1e7beb262_WriteStr(&_1677_s, jule::Str::lit("self", 4));
		return _1e7beba59_Str(&_1677_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_1e7beb262_WriteStr(&_1677_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_1e7beb262_WriteStr(&_1677_s, _1a3cbb0e0_Str((*(_self_))._field_Kind));
	};
	return _1e7beba59_Str(&_1677_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b76055_ParamIns _Src) {
	_Stream << _1a3b763b8_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3b7741e_Str(_1a3b770cd_FnIns* _self_) {
	;
	return _1a3b78e7b_GetKindStr(_self_, false);;
}



inline jule::Bool _1a3b77760_Equal(jule::Ptr<_1a3b770cd_FnIns> _self_, jule::Ptr<_1a3cbac27_TypeKind> _21918_other) {
	jule::Ptr<_1a3b770cd_FnIns> _2203_f = _1a3cbe665_Fn(_21918_other.ptr());;
	if ((_2203_f == nullptr)) {
		return false;;
	};
	return _1a3b77c05_EqualFn(_self_, &(_2203_f));;
}



inline jule::Bool _1a3b77c05_EqualFn(jule::Ptr<_1a3b770cd_FnIns> _self_, jule::Ptr<_1a3b770cd_FnIns>* _23021_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_23021_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Unsafety != (*(*((*(_23021_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1a3b74570_IsVoid((*(_self_))._field_Decl) != _1a3b74570_IsVoid((*((*(_23021_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1a3b76055_ParamIns>,jule::Ptr<_1a3b76055_ParamIns>> _2403_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1a3b76055_ParamIns>,jule::Ptr<_1a3b76055_ParamIns>>((void*)__jule_anon1a889ddee, nullptr, nullptr);;
	if (((*((*(_23021_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I64 _2727_i = 0LL;;
	for (; (_2727_i < (*_self_.alloc)._field_Params.len()); (_2727_i)++) {
		{
			if ((!(_2403_checkParams((*(_self_))._field_Params[_2727_i], (*((*(_23021_f))))._field_Params[_2727_i])))) {
				return false;;
			};
		}
	_iter_next_1a88a4597:;
	}
	_iter_end_1a88a4597:;;
	if ((!(_1a3b74570_IsVoid((*(_self_))._field_Decl)))) {
		if ((!(_1a3cbb431_Equal((*_self_.alloc)._field_Result, (*((*(_23021_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1a3b78046_equalTrait(jule::Ptr<_1a3b770cd_FnIns> _self_, jule::Ptr<_1a3b770cd_FnIns>* _28924_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_28924_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Ident != (*(*((*(_28924_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1a3b77c05_EqualFn(_self_, _28924_other)))) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Generics.len() != (*(*((*(_28924_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>> _1a3b782cc_Types(_1a3b770cd_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1a88aa7bd:;
			{
				return nullptr;;
			}
		}
		else if ((_1a3cc019e_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1a88aa834:;
			{
				return jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1a88aa35b:;
			{
				return (*(_1a3cc019e_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1a88aa25c:;
	};
}



inline jule::Bool _1a3b78563_IsBuiltin(_1a3b770cd_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1a3b787e9_IsAnon(_1a3b770cd_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1a3b750a9_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1a3b78b3a_Same(_1a3b770cd_FnIns* _self_, jule::Ptr<_1a3b770cd_FnIns> _33216_f) {
	if ((((*(_self_))._field_Decl != (*(_33216_f))._field_Decl) || ((*_33216_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88adc22:;
		if (it != expr_end) {
			jule::I64 _3377_i = it - expr->begin();
			jule::Ptr<_1a3cb9341_InsGeneric> *_33710_g = it;
			{
				jule::Ptr<_1a3cb9341_InsGeneric> _3384_g2 = (*(_33216_f))._field_Generics[_3377_i];;
				if ((((*((*((*(_33710_g))))._field_Kind))._field_BindIdent != (*(*(_3384_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1a3cbb431_Equal((*((*(_33710_g))))._field_Kind, (*(_3384_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1a88adc22:;
			++it;
			_3377_i++;
			goto _iter_begin_1a88adc22;
		}
		_iter_end_1a88adc22:;
	};
	return true;;
}



inline jule::Str _1a3b78e7b_GetKindStr(_1a3b770cd_FnIns* _self_, jule::Bool _34922_ident) {
	_1e7be2632_StrBuilder _3507_s = static__1e7be28eb_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_1e7beb262_WriteStr(&_3507_s, jule::Str::lit("unsafe ", 7));
	};
	_1e7beb262_WriteStr(&_3507_s, jule::Str::lit("fn", 2));
	if ((_34922_ident && ((*(_self_))._field_Decl != nullptr))) {
		_1e7beb51a_WriteByte(&_3507_s, ' ');
		_1e7beb262_WriteStr(&_3507_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_1e7beb51a_WriteByte(&_3507_s, '(');
	jule::I64 _3643_n = (*(_self_))._field_Params.len();;
	if ((_3643_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a88b4046:;
			if (it != expr_end) {
				jule::I64 _3668_i = it - expr->begin();
				jule::Ptr<_1a3b76055_ParamIns> *_36611_p = it;
				{
					_1e7beb262_WriteStr(&_3507_s, _1a3b763b8_Str((*(_36611_p)).ptr()));
					if ((_3668_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_1e7beb51a_WriteByte(&_3507_s, ',');
					};
				}
				_iter_next_1a88b4046:;
				++it;
				_3668_i++;
				goto _iter_begin_1a88b4046;
			}
			_iter_end_1a88b4046:;
		};
	};
	_1e7beb51a_WriteByte(&_3507_s, ')');
	if ((*(*(_self_))._field_Decl.alloc)._field_Exceptional) {
		_1e7beb51a_WriteByte(&_3507_s, '!');
	};
	if ((!(_1a3b74570_IsVoid((*(_self_))._field_Decl)))) {
		_1e7beb51a_WriteByte(&_3507_s, ':');
		_1e7beb262_WriteStr(&_3507_s, _1a3cbb0e0_Str((*(_self_))._field_Result.ptr()));
	};
	return _1e7beba59_Str(&_3507_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b770cd_FnIns _Src) {
	_Stream << _1a3b7741e_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a3b7a257_ReferenceStack> static__1a3b7a554_new(void) {
	return jule::new_ptr<_1a3b7a257_ReferenceStack>(_1a3b7a257_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1a3b7a950_Len(_1a3b7a257_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1a3b7ac91_At(_1a3b7a257_ReferenceStack* _self_, jule::I64 _6818_i) {
	return (*(_self_))._field_buffer[_6818_i];;
}



inline void _1a3b7b049_Push(_1a3b7a257_ReferenceStack* _self_, jule::Any _7324_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7324_ref); };
}



inline jule::Bool _1a94a354c_Exist(_1a3b7a257_ReferenceStack* _self_, jule::Ptr<_1a3b770cd_FnIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94a48c2:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1a94a48c2:;
			++it;
			goto _iter_begin_1a94a48c2;
		}
		_iter_end_1a94a48c2:;
	};
	return false;;
}

inline jule::Bool _1a94b9453_Exist(_1a3b7a257_ReferenceStack* _self_, jule::Ptr<_1a3c31c26_Var> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94ba784:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1a94ba784:;
			++it;
			goto _iter_begin_1a94ba784;
		}
		_iter_end_1a94ba784:;
	};
	return false;;
}

inline jule::Bool _1a90be036_Exist(_1a3b7a257_ReferenceStack* _self_, jule::Ptr<_1a3b61cbb_StructIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90c0400:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1a90c0400:;
			++it;
			goto _iter_begin_1a90c0400;
		}
		_iter_end_1a90c0400:;
	};
	return false;;
}

inline jule::Bool _1a9ad3561_Exist(_1a3b7a257_ReferenceStack* _self_, jule::Ptr<_1a3b87a7d_Trait> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9ad485e:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1a9ad485e:;
			++it;
			goto _iter_begin_1a9ad485e;
		}
		_iter_end_1a9ad485e:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b7a257_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3b7b775_Pass_eq(_1a3b7b775_Pass *_self_, _1a3b7b775_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b7b775_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1a3b81bdc_pushErr(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3b27a62_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args) {
	{ jule::Slice<_1e7c94ecb_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a3c066bd_compilerErr(_33224_token, true, _33239_fmt, _33252_args)); };
}



inline void _1a3b8246d_pushSuggestion(_1a3b8122a_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args) {
	{
		_1a3c07c74_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34130_fmt, _34143_args);
	};
}



inline jule::Bool _1a3b82869_checkCppUseDeclPath(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3b56244_UseDecl>* _34536_decl, jule::Str* _34553_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3463_ext = _1e7c00189_Ext((*(_34553_path)));;
	if (((!(_1e7c87b8e_IsValidHeaderExt(_3463_ext))) && (!(_1e7c87e58_IsValidCppExt(_3463_ext))))) {
		_1a3b81bdc_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3463_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_212307dd7_Status> _3533_info = ({
		auto except = static__212304a71_Of((*(_34553_path)));
		(except.ok()) ? (except.result) : ({{
			_1a3b81bdc_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_212307dd7_Status>(nullptr);});
	});;
	if (_2123082b1_IsDir(_3533_info.ptr())) {
		_1a3b81bdc_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3b82b77_buildCppHeaderImport(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3b56244_UseDecl>* _36541_decl) {
	jule::Str _3667_path = (*((*(_36541_decl))))._field_LinkPath;;
	if ((!(_1e7c8794c_IsStdHeaderPath((*((*(_36541_decl))))._field_LinkPath)))) {
		_3667_path=_1e7beee03_Join(jule::Slice<jule::Str>::make({_1a3b2d99c_Dir((*((*((*(_36541_decl))))._field_Token))._field_File.ptr()),(*((*(_36541_decl))))._field_LinkPath}));
		jule::Bool _3708_ok = _1a3b82869_checkCppUseDeclPath(_self_, _36541_decl, &(_3667_path));;
		if ((!(_3708_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e7c00453_Abs(_3667_path);
			_3667_path = __jule_assign_result.__jule_result_arg0;
			_3708_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3708_ok))) {
			_1a3b81bdc_pushErr(_self_, &((*((*(_36541_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36541_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1a3bd86d3_ImportInfo>(_1a3bd86d3_ImportInfo{._field_Token=(*((*(_36541_decl))))._field_Token, ._field_Path=_3667_path, ._field_LinkPath=(*((*(_36541_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3b82eb8_buildStdImport(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3b56244_UseDecl>* _39335_decl) {
	jule::Str _3957_path = (*((*(_39335_decl))))._field_LinkPath.slice(5LL);;
	_3957_path=_1e7bd4338_Replace(_3957_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_3957_path=_1e7beee03_Join(jule::Slice<jule::Str>::make({_2121271ce_PathStdlib,_3957_path}));
	jule::Bool _3989_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e7c00453_Abs(_3957_path);
		_3957_path = __jule_assign_result.__jule_result_arg0;
		_3989_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_3989_ok))) {
		_1a3b81bdc_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_212307dd7_Status> _4053_info = ({
		auto except = static__212304a71_Of(_3957_path);
		(except.ok()) ? (except.result) : ({{
			_1a3b81bdc_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_212307dd7_Status>(nullptr);});
	});;
	if ((!(_2123082b1_IsDir(_4053_info.ptr())))) {
		_1a3b81bdc_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4153_i = (_1e7bcedb1_FindLast((*((*(_39335_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4163_ident = (*((*(_39335_decl))))._field_LinkPath.slice(_4153_i);;
	return jule::new_ptr<_1a3bd86d3_ImportInfo>(_1a3bd86d3_ImportInfo{._field_Token=(*((*(_39335_decl))))._field_Token, ._field_Path=_3957_path, ._field_LinkPath=(*((*(_39335_decl))))._field_LinkPath, ._field_Ident=_4163_ident, ._field_Alias=(*((*(_39335_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39335_decl))))._field_Full, ._field_Package=jule::new_ptr<_1a3bdb609_Package>(_1a3bdb609_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3b83309_buildIdentImport(jule::Ptr<_1a3b8122a_symbolBuilder> _self_, jule::Ptr<_1a3b56244_UseDecl>* _43338_decl) {
	if ((((*((*(_43338_decl))))._field_LinkPath.equal("_", 1) || (_1e7bc97a1_Find((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _1e7bc8ea9_HasSuffix((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1a3b81bdc_pushErr(_self_.ptr(), &((*((*(_43338_decl))))._field_Token), jule::Str::lit("use declaration paths cannot contain blank identifier", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4413_modPath = ((_1a3bd57bd_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a3bd4833_GetModPath((*_self_.alloc)._field_importer.data);;
	if ((_4413_modPath.len() == 0LL)) {
		_1a3b81bdc_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1a3b8246d_pushSuggestion(_self_, jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4487_path = (*((*(_43338_decl))))._field_LinkPath;;
	_4487_path=_1e7bd4338_Replace(_4487_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_4487_path=_1e7beee03_Join(jule::Slice<jule::Str>::make({_4413_modPath,_4487_path}));
	jule::Bool _4529_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e7c00453_Abs(_4487_path);
		_4487_path = __jule_assign_result.__jule_result_arg0;
		_4529_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_4529_ok))) {
		_1a3b81bdc_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_212307dd7_Status> _4593_info = ({
		auto except = static__212304a71_Of(_4487_path);
		(except.ok()) ? (except.result) : ({{
			_1a3b81bdc_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_212307dd7_Status>(nullptr);});
	});;
	if ((!(_2123082b1_IsDir(_4593_info.ptr())))) {
		_1a3b81bdc_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4693_i = (_1e7bcedb1_FindLast((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4703_ident = (*((*(_43338_decl))))._field_LinkPath.slice(_4693_i);;
	return jule::new_ptr<_1a3bd86d3_ImportInfo>(_1a3bd86d3_ImportInfo{._field_Token=(*((*(_43338_decl))))._field_Token, ._field_Path=_4487_path, ._field_LinkPath=(*((*(_43338_decl))))._field_LinkPath, ._field_Ident=_4703_ident, ._field_Alias=(*((*(_43338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1a3bdb609_Package>(_1a3bdb609_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3b8364a_buildImport(jule::Ptr<_1a3b8122a_symbolBuilder> _self_, jule::Ptr<_1a3b56244_UseDecl>* _48733_decl) {
	{
		
		if ((*((*(_48733_decl))))._field_Binded) {
			_case_begin_1a8d2aee6:;
			{
				return _1a3b82b77_buildCppHeaderImport(_self_.ptr(), _48733_decl);;
			}
		}
		else if ((*((*(_48733_decl))))._field_Std) {
			_case_begin_1a8d2b3e2:;
			{
				return _1a3b82eb8_buildStdImport(_self_.ptr(), _48733_decl);;
			}
		}
		else {
			_case_begin_1a8d2ae80:;
			{
				return _1a3b83309_buildIdentImport(_self_, _48733_decl);;
			}
		}
		_match_end_1a8d2ad81:;
	};
}



inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3b8398b_findUseDecl(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _49828_pkg) {
	return _1a3c8499e_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>>((void*)__jule_anon_1a8d2d306, jule::Ptr<__jule_anon_1a8d2d306_ctx>::make(__jule_anon_1a8d2d306_ctx{._49828_pkg=_49828_pkg}).as<jule::Uintptr>(), __jule_anon_1a8d2d306_ctx_handler));;
}



inline __jule_tuple_bool__jule_tuple_bool _1a3b83ccc_checkDuplicateUseDecl(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _50542_pkg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a3bd86d3_ImportInfo> _5067_lpkg = _1a3b8398b_findUseDecl(_self_, _50542_pkg);;
	if ((_5067_lpkg == nullptr)) {
		__jule_func_result.__jule_result_arg0 = true;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if (_1a3b87077_isImplicitImport(_5067_lpkg)) {
		(*(_5067_lpkg))._field_Token=(*((*(_50542_pkg))))._field_Token;
		__jule_func_result.__jule_result_arg0 = true;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	_1a3b81bdc_pushErr(_self_, &((*((*(_50542_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_50542_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1a3b8246d_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1a3b84140_implImportSelections(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _52441_imp, jule::Ptr<_1a3b56244_UseDecl>* _52464_decl) {
	(*((*(_52441_imp))))._field_Selected=(*((*(_52464_decl))))._field_Selected;
	{
		auto expr = &((*((*(_52441_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d3254c:;
		if (it != expr_end) {
			jule::Ptr<_1a3b27a62_Token> _52610_item = *it;
			{
				{
					auto expr = &((*((*(_52441_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8d32e43:;
					if (it != expr_end) {
						jule::Ptr<_1a3b27a62_Token> _52711_citem = *it;
						{
							if ((_52610_item == _52711_citem)) {
								goto _iter_end_1a8d32e43;
							} else if (((*(_52610_item))._field_Kind == (*(_52711_citem))._field_Kind)) {
								_1a3b81bdc_pushErr(_self_, &(_52610_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*_52610_item.alloc)._field_Kind, &__jule_any_type4)}));
								_1a3b8246d_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1a8d32e43;
							};
						}
						_iter_next_1a8d32e43:;
						++it;
						goto _iter_begin_1a8d32e43;
					}
					_iter_end_1a8d32e43:;
				};
			}
			_iter_next_1a8d3254c:;
			++it;
			goto _iter_begin_1a8d3254c;
		}
		_iter_end_1a8d3254c:;
	};
}



inline jule::Str _1a3b84481_getAsLinkPath(jule::Ptr<_1a3b8122a_symbolBuilder> _self_, jule::Str _53934_path) {
	if (_1e7bc8b35_HasPrefix(_53934_path, _2121271ce_PathStdlib)) {
		(_53934_path).mut_slice(_2121271ce_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _1e7bd4338_Replace(_53934_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5453_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e7c00453_Abs(((_1a3bd57bd_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a3bd4833_GetModPath((*(_self_))._field_importer.data));
		_5453_root = __jule_assign_result.__jule_result_arg0;
	});
	(_53934_path).mut_slice(_5453_root.len());;
	if ((_53934_path[0LL] == 47LLU)) {
		(_53934_path).mut_slice(1LL);;
	};
	return _1e7bd4338_Replace(_53934_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1a3b8489e_pushCycleError(jule::Ptr<_1a3b8122a_symbolBuilder> _self_, jule::Ptr<_1a3b8122a_symbolBuilder>* _55332_sb, jule::Str _55352_path, _1e7be2632_StrBuilder* _55368_message) {
	;
	jule::Str _5553_refersTo = _1e7c9543d_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1a3b84481_getAsLinkPath(_self_, _1a3b2d99c_Dir((*((*((*(_55332_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1a3b84481_getAsLinkPath(_self_, _55352_path), &__jule_any_type4)}));;
	jule::Str _5593_m = _1e7beba59_Str(_55368_message);;
	_1e7beb262_WriteStr(_55368_message, _1e7bc876c_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1e7beb262_WriteStr(_55368_message, _5553_refersTo);
	_1e7beb51a_WriteByte(_55368_message, '\n');
	_1e7beb262_WriteStr(_55368_message, _5593_m);
}



inline void _1a3b84cbc_pushCrossCycleError(jule::Ptr<_1a3b8122a_symbolBuilder> _self_, jule::Ptr<_1a3b8122a_symbolBuilder>* _56637_target, jule::Ptr<_1a3bd86d3_ImportInfo>* _56662_imp, jule::Ptr<_1a3b27a62_Token>* _56681_errorToken) {
	_1e7be2632_StrBuilder _5677_message = static__1e7be28eb_New(32LL);;
	_1a3b8489e_pushCycleError(_self_, &(_self_), (*((*(_56662_imp))))._field_Path, &(_5677_message));
	jule::Ptr<_1a3b8122a_symbolBuilder> _5717_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1a3b8122a_symbolBuilder> _5727_old = _self_;;
	while (((*(_5717_owner))._field_owner != nullptr)) {
		{
			_1a3b8489e_pushCycleError(_self_, &((*_5727_old.alloc)._field_owner), _1a3b2d99c_Dir((*((*_5727_old.alloc)._field_table))._field_File.ptr()), &(_5677_message));
			if (((*_5717_owner.alloc)._field_owner == (*(_56637_target)))) {
				_1a3b8489e_pushCycleError(_self_, _56637_target, _1a3b2d99c_Dir((*((*(_5717_owner))._field_table))._field_File), &(_5677_message));
				goto _iter_end_1a8d3ba95;
			};
			_5727_old=_5717_owner;
			_5717_owner=(*_5717_owner.alloc)._field_owner;
		}
	_iter_next_1a8d3ba95:;
	}
	_iter_end_1a8d3ba95:;;
	_1a3b81bdc_pushErr(_self_, _56681_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_1e7beba59_Str(&_5677_message), &__jule_any_type4)}));
}



inline jule::Bool _1a3b851b8_checkImportCycles(jule::Ptr<_1a3b8122a_symbolBuilder> _self_, jule::Ptr<_1a3bd86d3_ImportInfo> _58934_imp, jule::Ptr<_1a3b56244_UseDecl>* _58953_decl) {
	if (((*(_58934_imp))._field_Path == _1a3b2d99c_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1a3b81bdc_pushErr(_self_, &((*((*(_58953_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1a3b84481_getAsLinkPath(_self_, (*_58934_imp.alloc)._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a3b8122a_symbolBuilder> _5997_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1a8d42491:;
	if ((_1a3b2d99c_Dir((*((*(_5997_owner))._field_table))._field_File) == (*_58934_imp.alloc)._field_Path)) {
		_1a3b84cbc_pushCrossCycleError(_self_, &(_5997_owner), &(_58934_imp), &((*((*(_58953_decl))))._field_Token));
		return false;;
	};
	if (((*(_5997_owner))._field_owner != nullptr)) {
		_5997_owner=(*_5997_owner.alloc)._field_owner;
		goto _julec_label_1a8d42491;
	};
	return true;;
}



inline void _1a3b855d6_checkPackageAccessibility(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3b56244_UseDecl>* _62042_decl, jule::Str* _62059_mod, jule::Str* _62070_path) {
	if (((((_1a3bd57bd_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a3bd4833_GetModPath((*(_self_))._field_importer.data) != (*(_62059_mod))) && _1e7bd2e5d_Contains((*(_62070_path)), jule::Str::lit("internal", 8)))) {
		_1a3b81bdc_pushErr(_self_, &((*((*(_62042_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a3b859d2_importPackage(jule::Ptr<_1a3b8122a_symbolBuilder> _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _62635_imp, jule::Ptr<_1a3b56244_UseDecl>* _62658_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_62635_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3bd86d3_ImportInfo> _6317_port = ((_1a3bd57bd_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a3bd4eb5_GetImport((*(_self_))._field_importer.data, (*((*(_62635_imp))))._field_Path);;
	if ((_6317_port != nullptr)) {
		(*((*(_62635_imp))))._field_Package=(*_6317_port.alloc)._field_Package;
		(*((*(_62635_imp))))._field_Duplicate=true;
		jule::Str _6364_oldMod = ((_1a3bd57bd_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a3bd4833_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1a3bd57bd_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a3bd459c_SetModPath((*_self_.alloc)._field_importer.data, ((_1a3bd57bd_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a3bd4b74_ModById((*_self_.alloc)._field_importer.data, (*((*(_62635_imp))))._field_ModId));
		_1a3b855d6_checkPackageAccessibility(_self_, _62658_decl, &(_6364_oldMod), &((*_6317_port.alloc)._field_Path));
		((_1a3bd57bd_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a3bd459c_SetModPath((*_self_.alloc)._field_importer.data, _6364_oldMod);
	} else {
		if ((!(_1a3b851b8_checkImportCycles(_self_, (*(_62635_imp)), _62658_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6454_oldMod = ((_1a3bd57bd_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a3bd4833_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1a3bd57bd_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a3bd459c_SetModPath((*_self_.alloc)._field_importer.data, _6454_oldMod);
		});;
		if ((*((*(_62635_imp))))._field_Std) {
			((_1a3bd57bd_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a3bd459c_SetModPath((*_self_.alloc)._field_importer.data, _2121271ce_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1a3b3b180_Ast>> _6508_asts;
		jule::Slice<_1e7c94ecb_Log> _65018_errors;
		({
			__jule_tuple_sx_1a3b3b180_Ast__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = ((_1a3bd57bd_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a3bd53b1_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_62635_imp))))._field_Path, (!((*((*(_62635_imp))))._field_Std)));
			_6508_asts = __jule_assign_result.__jule_result_arg0;
			_65018_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_65018_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_65018_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1a3b855d6_checkPackageAccessibility(_self_, _62658_decl, &(_6454_oldMod), &((*((*(_62635_imp))))._field_Path));
		{
			auto expr = &(_6508_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8d4dab8:;
			if (it != expr_end) {
				jule::Ptr<_1a3b3b180_Ast> _65816_ast = *it;
				{
					jule::Ptr<_1a3c844b5_SymbolTable> _65913_table = nullptr;;
					({
						__jule_tuple_x_1a3c844b5_SymbolTable__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a3cdb60a_buildSymbols(&(_65816_ast), &((*_self_.alloc)._field_importer), _self_);
						_65913_table = __jule_assign_result.__jule_result_arg0;
						_65018_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_65018_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_65018_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_62635_imp))))._field_Package))._field_Files=jule::append((*(*((*(_62635_imp))))._field_Package.alloc)._field_Files,jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>::make({_65913_table}));
				}
				_iter_next_1a8d4dab8:;
				++it;
				goto _iter_begin_1a8d4dab8;
			}
			_iter_end_1a8d4dab8:;
		};
	};
	_1a3b84140_implImportSelections(_self_, _62635_imp, _62658_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3b85d23_importUseDecl(jule::Ptr<_1a3b8122a_symbolBuilder> _self_, jule::Ptr<_1a3b56244_UseDecl>* _67335_decl) {
	jule::Ptr<_1a3bd86d3_ImportInfo> _6747_imp = _1a3b8364a_buildImport(_self_, _67335_decl);;
	if ((_6747_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6807_ok;
	jule::Bool _68011_implicit;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a3b83ccc_checkDuplicateUseDecl(_self_, &(_6747_imp));
		_6807_ok = __jule_assign_result.__jule_result_arg0;
		_68011_implicit = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_6807_ok))) {
		return nullptr;;
	};
	_6807_ok=_1a3b859d2_importPackage(_self_, &(_6747_imp), _67335_decl);
	if ((!(_68011_implicit))) {
		(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,jule::Slice<jule::Ptr<_1a3bd86d3_ImportInfo>>::make({_6747_imp}));
	};
	if (_6807_ok) {
		((_1a3bd57bd_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a3bd5669_Imported((*_self_.alloc)._field_importer.data, _6747_imp);
		return _6747_imp;;
	};
	return nullptr;;
}



inline void _1a3b86021_importUseDecls(jule::Ptr<_1a3b8122a_symbolBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d549d1:;
		if (it != expr_end) {
			jule::Ptr<_1a3b56244_UseDecl> _70115_decl = *it;
			{
				_1a3b85d23_importUseDecl(_self_, &(_70115_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1a8d549d1;
				};
			}
			_iter_next_1a8d549d1:;
			++it;
			goto _iter_begin_1a8d549d1;
		}
		_iter_end_1a8d549d1:;
	};
}



inline void _1a3b862c9_appendNode(_1a3b8122a_symbolBuilder* _self_, _1a3b3c13c_Node* _71031_node) {
	{
		auto &_match_expr{ (*(_71031_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1a8d55031:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,jule::Slice<jule::Ptr<_1a3bb11e4_Impl>>::make({_1a3b80b64_buildImpl((*(_71031_node))._field_Data.cast_ptr<_1a3b59ca3_Impl>(&__jule_any_type11))}));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a8d56043:;
			{
				jule::Ptr<_1a3cb9e35_TypeAlias> _7158_ta = _1a3b7c1b0_buildTypeAlias((*(_71031_node))._field_Data.cast_ptr<_1a3b54b5a_TypeAliasDecl>(&__jule_any_type12));;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>::make({_7158_ta}));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a8d560a9:;
			{
				jule::Ptr<_1a3b5e03d_Struct> _7188_srct = _1a3b7ca51_buildStruct((*(_71031_node))._field_Data.cast_ptr<_1a3b58e06_StructDecl>(&__jule_any_type13));;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,jule::Slice<jule::Ptr<_1a3b5e03d_Struct>>::make({_7188_srct}));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a8d56120:;
			{
				jule::Ptr<_1a3b740ec_Fn> _7218_f = _1a3b7d700_buildFunc((*(_71031_node))._field_Data.cast_ptr<_1a3b4eced_FnDecl>(&__jule_any_type14));;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,jule::Slice<jule::Ptr<_1a3b740ec_Fn>>::make({_7218_f}));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a8d56186:;
			{
				jule::Ptr<_1a3b87a7d_Trait> _7248_t = _1a3b7e04c_buildTrait((*(_71031_node))._field_Data.cast_ptr<_1a3b59643_TraitDecl>(&__jule_any_type15));;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,jule::Slice<jule::Ptr<_1a3b87a7d_Trait>>::make({_7248_t}));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a8d561ec:;
			{
				jule::Ptr<_1a3c31c26_Var> _7278_v = _1a3b805d1_buildVar((*(_71031_node))._field_Data.cast_ptr<_1a3b50ea8_VarDecl>(&__jule_any_type16));;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a3c31c26_Var>>::make({_7278_v}));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1a8d5683a:;
			{
				jule::Ptr<_1a3b8a289_Enum> _7308_e = _1a3b7eaca_buildEnum((*(_71031_node))._field_Data.cast_ptr<_1a3b572ab_EnumDecl>(&__jule_any_type17));;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,jule::Slice<jule::Ptr<_1a3b8a289_Enum>>::make({_7308_e}));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1a8d568a1:;
			{
				jule::Ptr<_1a3b8b994_TypeEnum> _7338_e = _1a3b80317_buildTypeEnum((*(_71031_node))._field_Data.cast_ptr<_1a3b58246_TypeEnumDecl>(&__jule_any_type18));;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,jule::Slice<jule::Ptr<_1a3b8b994_TypeEnum>>::make({_7338_e}));
			}
		}
		else {
			_case_begin_1a8d55e33:;
			{
				_1a3b81bdc_pushErr(_self_, &((*(_71031_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8d55dcd:;
	};
}



inline void _1a3b864c7_appendNodes(_1a3b8122a_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d60c2e:;
		if (it != expr_end) {
			_1a3b3c13c_Node _74115_node = *it;
			{
				_1a3b862c9_appendNode(_self_, &(_74115_node));
			}
			_iter_next_1a8d60c2e:;
			++it;
			goto _iter_begin_1a8d60c2e;
		}
		_iter_end_1a8d60c2e:;
	};
}



inline void _1a3b86780_pushDirectivePass(_1a3b8122a_symbolBuilder* _self_, jule::Ptr<_1a3b3c55a_Directive>* _74638_d) {
	if (((*((*(_74638_d))))._field_Args.len() == 0LL)) {
		_1a3b81bdc_pushErr(_self_, &((*((*(_74638_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_74638_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1a3b27a62_Token> _7514_arg = (*((*(_74638_d))))._field_Args[1LL];;
		_1a3b81bdc_pushErr(_self_, &(_7514_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_74638_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1a3b27a62_Token> _7553_arg = (*((*(_74638_d))))._field_Args[0LL];;
	if (((*(_7553_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a3b81bdc_pushErr(_self_, &(_7553_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7553_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a3b81bdc_pushErr(_self_, &(_7553_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,jule::Slice<_1a3b7b775_Pass>::make({_1a3b7b775_Pass{._field_Token=(*((*(_74638_d))))._field_Tag, ._field_Text=(*_7553_arg.alloc)._field_Kind.slice(1LL, ((*_7553_arg.alloc)._field_Kind.len() - 1LL))}}));
}



inline void _1a3b8697d_appendTopDirectives(_1a3b8122a_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d663b6:;
		if (it != expr_end) {
			jule::Ptr<_1a3b3c55a_Directive> _77315_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_77315_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1a8d67d68:;
						{
							_1a3b86780_pushDirectivePass(_self_, &(_77315_d));
						}
					}
					_match_end_1a8d67c9c:;
				};
			}
			_iter_next_1a8d663b6:;
			++it;
			goto _iter_begin_1a8d663b6;
		}
		_iter_end_1a8d663b6:;
	};
}



inline void _1a3b86b7b_build(jule::Ptr<_1a3b8122a_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1a3c844b5_SymbolTable>(_1a3c844b5_SymbolTable{._field_File=(*((*_self_.alloc)._field_ast))._field_File, });
	_1a3b8697d_appendTopDirectives(_self_);
	_1a3b86021_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1a3b864c7_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b8122a_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a3b87e46_Str(_1a3b87a7d_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a3b88287_Equal(jule::Ptr<_1a3b87a7d_Trait> _self_, jule::Ptr<_1a3cbac27_TypeKind> _2518_other) {
	jule::Ptr<_1a3b87a7d_Trait> _263_trt = _1a3cbeb82_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1a3b740ec_Fn> _1a3b8872c_FindMethod(_1a3b87a7d_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d6b740:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1a8d6b740:;
			++it;
			goto _iter_begin_1a8d6b740;
		}
		_iter_end_1a8d6b740:;
	};
	return _1a3b88dae_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1a3b740ec_Fn> _1a3b88dae_findMethodInherit(_1a3b87a7d_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d6d962:;
		if (it != expr_end) {
			jule::Ptr<_1a3cc2de9_TypeSymbol> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Kind == nullptr)) {
					goto _iter_next_1a8d6d962;
				};
				jule::Ptr<_1a3b87a7d_Trait> _608_t = _1a3cbeb82_Trait((*_5615_i.alloc)._field_Kind.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1a3b740ec_Fn> _629_f2 = _1a3b8872c_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1a8d6d962:;
			++it;
			goto _iter_begin_1a8d6d962;
		}
		_iter_end_1a8d6d962:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b87a7d_Trait _Src) {
	_Stream << _1a3b87e46_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3b8971c_EnumItem_eq(_1a3b8971c_EnumItem *_self_, _1a3b8971c_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _1a3b89ac4_AutoExpr(_1a3b8971c_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b8971c_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a3b8a60d_Str(_1a3b8a289_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a3b8a94e_Equal(jule::Ptr<_1a3b8a289_Enum> _self_, jule::Ptr<_1a3cbac27_TypeKind> _3818_other) {
	jule::Ptr<_1a3b8a289_Enum> _393_enm = _1a3cbdb2b_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1a3b8971c_EnumItem> _1a3b8ad7d_FindItem(_1a3b8a289_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d73170:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8971c_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1a8d73170:;
			++it;
			goto _iter_begin_1a8d73170;
		}
		_iter_end_1a8d73170:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b8a289_Enum _Src) {
	_Stream << _1a3b8a60d_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3b8b3bc_TypeEnumItem_eq(_1a3b8b3bc_TypeEnumItem *_self_, _1a3b8b3bc_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3b8b3bc_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a3b8bcd5_Str(_1a3b8b994_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a3b8c126_Equal(jule::Ptr<_1a3b8b994_TypeEnum> _self_, jule::Ptr<_1a3cbac27_TypeKind> _8018_other) {
	jule::Ptr<_1a3b8b994_TypeEnum> _813_tenm = _1a3cbddb2_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1a3b8b3bc_TypeEnumItem> _1a3b8c555_FindItem(_1a3b8b994_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d753e7:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8b3bc_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1a8d753e7:;
			++it;
			goto _iter_begin_1a8d753e7;
		}
		_iter_end_1a8d753e7:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b8b994_TypeEnum _Src) {
	_Stream << _1a3b8bcd5_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3b8eb84_comptimeRange_eq(_1a3b8eb84_comptimeRange *_self_, _1a3b8eb84_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1a3b90008_Str(_1a3b8eb84_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1a3b90349_Equal(jule::Ptr<_1a3b8eb84_comptimeRange> _self_, jule::Ptr<_1a3cbac27_TypeKind> _3618_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b8eb84_comptimeRange _Src) {
	_Stream << _1a3b90008_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3b90657_comptimeStructField_eq(_1a3b90657_comptimeStructField *_self_, _1a3b90657_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1a3b90a20_Str(_1a3b90657_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1a3b90d61_Equal(jule::Ptr<_1a3b90657_comptimeStructField> _self_, jule::Ptr<_1a3cbac27_TypeKind> _4618_other) {
	return false;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3b91405__Name(jule::Ptr<_1a3b90657_comptimeStructField> _self_, jule::Ptr<_1a3c8b555_Eval>* _5023_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _5038_fc) {
	if (((*((*(_5038_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_5023_e)).ptr(), (*((*((*(_5038_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _557_constant = static__1b574893a_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34302_primStr, ._field_Model=jule::Any(_557_constant, &__jule_any_type19), ._field_Constant=_557_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3b91801__Type(jule::Ptr<_1a3b90657_comptimeStructField> _self_, jule::Ptr<_1a3c8b555_Eval>* _6327_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _6342_fc) {
	if (((*((*(_6342_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_6327_e)).ptr(), (*((*((*(_6342_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a3babd5a_buildComptimeTypeInfoData(&((*((*(_6327_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3b91bec__Public(jule::Ptr<_1a3b90657_comptimeStructField> _self_, jule::Ptr<_1a3c8b555_Eval>* _7129_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _7144_fc) {
	if (((*((*(_7144_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_7129_e)).ptr(), (*((*((*(_7144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _767_constant = static__1b5748671_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, ._field_Model=jule::Any(_767_constant, &__jule_any_type19), ._field_Constant=_767_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3b9200a_subIdent(jule::Ptr<_1a3b90657_comptimeStructField> _self_, jule::Str* _8426_ident) {
	{
		auto &_match_expr{ (*(_8426_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a8d83009:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _878_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8d842e6, jule::Ptr<__jule_anon_1a8d842e6_ctx>::make(__jule_anon_1a8d842e6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8d842e6_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1a8d830a3:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _948_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8d8624e, jule::Ptr<__jule_anon_1a8d8624e_ctx>::make(__jule_anon_1a8d8624e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8d8624e_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a8d8312a:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _1018_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8d881a7, jule::Ptr<__jule_anon_1a8d881a7_ctx>::make(__jule_anon_1a8d881a7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8d881a7_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_1018_method));;
			}
		}
		else {
			_case_begin_1a8d82c1d:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8d82d94:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b90657_comptimeStructField _Src) {
	_Stream << _1a3b90a20_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3b9268c_Str(_1a3b92318_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1a3b929cd_Equal(jule::Ptr<_1a3b92318_comptimeStructFields> _self_, jule::Ptr<_1a3cbac27_TypeKind> _12018_other) {
	return false;;
}



inline void _1a3b92e51_ready(_1a3b92318_comptimeStructFields* _self_, jule::Ptr<_1a3c31c26_Var>* _12426_keyA, jule::Ptr<_1a3c31c26_Var>* _12443_keyB) {
	if (((*(_12426_keyA)) != nullptr)) {
		(*((*(_12426_keyA))))._field_Constant=true;
		(*((*(_12426_keyA))))._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()});
		(*((*(_12426_keyA))))._field_Kind=(*(_1a3e37338_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_12443_keyB)) != nullptr)) {
		(*((*(_12443_keyB))))._field_Constant=true;
		(*((*(_12443_keyB))))._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()});
		(*((*(_12443_keyB))))._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3b90657_comptimeStructField>(), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data6)})});
	};
}



inline void _1a3b9336e_step(_1a3b92318_comptimeStructFields* _self_, jule::I64 _14520_i, jule::Ptr<_1a3c31c26_Var>* _14533_keyA, jule::Ptr<_1a3c31c26_Var>* _14550_keyB) {
	if (((*(_14533_keyA)) != nullptr)) {
		(*((*((*((*(_14533_keyA))))._field_Value))._field_Data))._field_Constant=static__1b57480dd_NewI64(static_cast<jule::I64>(_14520_i));
		(*(*((*((*(_14533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_14533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_14550_keyB)) != nullptr)) {
		(*(_1a3cc0952_comptimeStructField((*((*((*(_14550_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_14520_i];
	};
}



inline jule::I64 _1a3b93605_len(_1a3b92318_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b92318_comptimeStructFields _Src) {
	_Stream << _1a3b9268c_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3b93913_comptimeStatic_eq(_1a3b93913_comptimeStatic *_self_, _1a3b93913_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1a3b93c87_Str(_1a3b93913_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1a3b940c8_Equal(jule::Ptr<_1a3b93913_comptimeStatic> _self_, jule::Ptr<_1a3cbac27_TypeKind> _16918_other) {
	return false;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3b94705__Name(jule::Ptr<_1a3b93913_comptimeStatic> _self_, jule::Ptr<_1a3c8b555_Eval>* _17323_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _17338_fc) {
	if (((*((*(_17338_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_17323_e)).ptr(), (*((*((*(_17338_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _1787_constant = static__1b574893a_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34302_primStr, ._field_Model=jule::Any(_1787_constant, &__jule_any_type19), ._field_Constant=_1787_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3b94b01__Type(jule::Ptr<_1a3b93913_comptimeStatic> _self_, jule::Ptr<_1a3c8b555_Eval>* _18627_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _18642_fc) {
	if (((*((*(_18642_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_18627_e)).ptr(), (*((*((*(_18642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a3babd5a_buildComptimeTypeInfoData(&((*((*(_18627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3b94eec__Public(jule::Ptr<_1a3b93913_comptimeStatic> _self_, jule::Ptr<_1a3c8b555_Eval>* _19429_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _19444_fc) {
	if (((*((*(_19444_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_19429_e)).ptr(), (*((*((*(_19444_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _1997_constant = static__1b5748671_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, ._field_Model=jule::Any(_1997_constant, &__jule_any_type19), ._field_Constant=_1997_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3b9533d_subIdent(jule::Ptr<_1a3b93913_comptimeStatic> _self_, jule::Str* _20726_ident) {
	{
		auto &_match_expr{ (*(_20726_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a8d98b24:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _2108_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8d99e11, jule::Ptr<__jule_anon_1a8d99e11_ctx>::make(__jule_anon_1a8d99e11_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8d99e11_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_2108_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1a8d98bbd:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _2178_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8d9bd69, jule::Ptr<__jule_anon_1a8d9bd69_ctx>::make(__jule_anon_1a8d9bd69_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8d9bd69_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_2178_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a8d98c45:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _2248_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8d9dcc2, jule::Ptr<__jule_anon_1a8d9dcc2_ctx>::make(__jule_anon_1a8d9dcc2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8d9dcc2_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_2248_method));;
			}
		}
		else {
			_case_begin_1a8d98838:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8d989ae:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b93913_comptimeStatic _Src) {
	_Stream << _1a3b93c87_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3b95948_Str(_1a3b955c4_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1a3b95c89_Equal(jule::Ptr<_1a3b955c4_comptimeStatics> _self_, jule::Ptr<_1a3cbac27_TypeKind> _24318_other) {
	return false;;
}



inline void _1a3b9620c_ready(_1a3b955c4_comptimeStatics* _self_, jule::Ptr<_1a3c31c26_Var>* _24726_keyA, jule::Ptr<_1a3c31c26_Var>* _24743_keyB) {
	if (((*(_24726_keyA)) != nullptr)) {
		(*((*(_24726_keyA))))._field_Constant=true;
		(*((*(_24726_keyA))))._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()});
		(*((*(_24726_keyA))))._field_Kind=(*(_1a3e37338_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_24743_keyB)) != nullptr)) {
		(*((*(_24743_keyB))))._field_Constant=true;
		(*((*(_24743_keyB))))._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()});
		(*((*(_24743_keyB))))._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3b93913_comptimeStatic>(), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data8)})});
	};
}



inline void _1a3b9662a_step(_1a3b955c4_comptimeStatics* _self_, jule::I64 _26820_i, jule::Ptr<_1a3c31c26_Var>* _26833_keyA, jule::Ptr<_1a3c31c26_Var>* _26850_keyB) {
	if (((*(_26833_keyA)) != nullptr)) {
		(*((*((*((*(_26833_keyA))))._field_Value))._field_Data))._field_Constant=static__1b57480dd_NewI64(static_cast<jule::I64>(_26820_i));
		(*(*((*((*(_26833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_26833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_26850_keyB)) != nullptr)) {
		(*(_1a3cc225b_comptimeStatic((*((*((*(_26850_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_26820_i];
	};
}



inline jule::I64 _1a3b968b1_len(_1a3b955c4_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b955c4_comptimeStatics _Src) {
	_Stream << _1a3b95948_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3b96bbe_comptimeEnumField_eq(_1a3b96bbe_comptimeEnumField *_self_, _1a3b96bbe_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1a3b97153_Str(_1a3b96bbe_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1a3b97494_Equal(jule::Ptr<_1a3b96bbe_comptimeEnumField> _self_, jule::Ptr<_1a3cbac27_TypeKind> _29218_other) {
	return false;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3b97917__Name(jule::Ptr<_1a3b96bbe_comptimeEnumField> _self_, jule::Ptr<_1a3c8b555_Eval>* _29623_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _29638_fc) {
	if (((*((*(_29638_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_29623_e)).ptr(), (*((*((*(_29638_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _3017_constant = static__1b574893a_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34302_primStr, ._field_Model=jule::Any(_3017_constant, &__jule_any_type19), ._field_Constant=_3017_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3b97c58_subIdent(jule::Ptr<_1a3b96bbe_comptimeEnumField> _self_, jule::Str* _30926_ident) {
	{
		auto &_match_expr{ (*(_30926_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a8da9915:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _3128_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8daaae2, jule::Ptr<__jule_anon_1a8daaae2_ctx>::make(__jule_anon_1a8daaae2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8daaae2_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_3128_method));;
			}
		}
		else {
			_case_begin_1a8da963a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8da97b1:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b96bbe_comptimeEnumField _Src) {
	_Stream << _1a3b97153_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3b983da_Str(_1a3b98066_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1a3b9872b_Equal(jule::Ptr<_1a3b98066_comptimeEnumFields> _self_, jule::Ptr<_1a3cbac27_TypeKind> _33118_other) {
	return false;;
}



inline void _1a3b98b9e_ready(_1a3b98066_comptimeEnumFields* _self_, jule::Ptr<_1a3c31c26_Var>* _33526_keyA, jule::Ptr<_1a3c31c26_Var>* _33543_keyB) {
	if (((*(_33526_keyA)) != nullptr)) {
		(*((*(_33526_keyA))))._field_Constant=true;
		(*((*(_33526_keyA))))._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()});
		(*((*(_33526_keyA))))._field_Kind=(*(_1a3e37338_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_33543_keyB)) != nullptr)) {
		(*((*(_33543_keyB))))._field_Constant=true;
		(*((*(_33543_keyB))))._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()});
		(*((*(_33543_keyB))))._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3b96bbe_comptimeEnumField>(), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data10)})});
	};
}



inline void _1a3b990bc_step(_1a3b98066_comptimeEnumFields* _self_, jule::I64 _35620_i, jule::Ptr<_1a3c31c26_Var>* _35633_keyA, jule::Ptr<_1a3c31c26_Var>* _35650_keyB) {
	if (((*(_35633_keyA)) != nullptr)) {
		(*((*((*((*(_35633_keyA))))._field_Value))._field_Data))._field_Constant=static__1b57480dd_NewI64(static_cast<jule::I64>(_35620_i));
		(*(*((*((*(_35633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_35633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_35650_keyB)) != nullptr)) {
		(*(_1a3cc0e6e_comptimeEnumField((*((*((*(_35650_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_35620_i];
	};
}



inline jule::I64 _1a3b99353_len(_1a3b98066_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b98066_comptimeEnumFields _Src) {
	_Stream << _1a3b983da_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3b99661_comptimeParam_eq(_1a3b99661_comptimeParam *_self_, _1a3b99661_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _1a3b999d5_Str(_1a3b99661_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1a3b99d26_Equal(jule::Ptr<_1a3b99661_comptimeParam> _self_, jule::Ptr<_1a3cbac27_TypeKind> _38018_other) {
	return false;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3b9a585__Name(jule::Ptr<_1a3b99661_comptimeParam> _self_, jule::Ptr<_1a3c8b555_Eval>* _38423_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _38438_fc) {
	if (((*((*(_38438_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_38423_e)).ptr(), (*((*((*(_38438_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _3897_constant = static__1b574893a_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34302_primStr, ._field_Model=jule::Any(_3897_constant, &__jule_any_type19), ._field_Constant=_3897_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3b9a981__Type(jule::Ptr<_1a3b99661_comptimeParam> _self_, jule::Ptr<_1a3c8b555_Eval>* _39727_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _39742_fc) {
	if (((*((*(_39742_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_39727_e)).ptr(), (*((*((*(_39742_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a3babd5a_buildComptimeTypeInfoData(&((*((*(_39727_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3b9ad7c__Variadic(jule::Ptr<_1a3b99661_comptimeParam> _self_, jule::Ptr<_1a3c8b555_Eval>* _40531_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _40546_fc) {
	if (((*((*(_40546_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_40531_e)).ptr(), (*((*((*(_40546_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _4107_constant = static__1b5748671_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, ._field_Model=jule::Any(_4107_constant, &__jule_any_type19), ._field_Constant=_4107_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3b9b278__Reference(jule::Ptr<_1a3b99661_comptimeParam> _self_, jule::Ptr<_1a3c8b555_Eval>* _41832_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _41847_fc) {
	if (((*((*(_41847_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_41832_e)).ptr(), (*((*((*(_41847_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _4237_constant = static__1b5748671_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, ._field_Model=jule::Any(_4237_constant, &__jule_any_type19), ._field_Constant=_4237_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3b9b5b9_subIdent(jule::Ptr<_1a3b99661_comptimeParam> _self_, jule::Str* _43126_ident) {
	{
		auto &_match_expr{ (*(_43126_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a8dbe331:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _4348_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8dc0662, jule::Ptr<__jule_anon_1a8dc0662_ctx>::make(__jule_anon_1a8dc0662_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8dc0662_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_4348_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1a8dbe397:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _4418_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8dc25ba, jule::Ptr<__jule_anon_1a8dc25ba_ctx>::make(__jule_anon_1a8dc25ba_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8dc25ba_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_4418_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1a8dbe41e:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _4488_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8dc4523, jule::Ptr<__jule_anon_1a8dc4523_ctx>::make(__jule_anon_1a8dc4523_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8dc4523_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_4488_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a8dbe496:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _4558_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8dc647b, jule::Ptr<__jule_anon_1a8dc647b_ctx>::make(__jule_anon_1a8dc647b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8dc647b_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_4558_method));;
			}
		}
		else {
			_case_begin_1a8dbe001:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8dbe177:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b99661_comptimeParam _Src) {
	_Stream << _1a3b999d5_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3b9bb3b_Str(_1a3b9b7ea_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1a3b9be7c_Equal(jule::Ptr<_1a3b9b7ea_comptimeParams> _self_, jule::Ptr<_1a3cbac27_TypeKind> _47418_other) {
	return false;;
}



inline void _1a3b9c400_ready(_1a3b9b7ea_comptimeParams* _self_, jule::Ptr<_1a3c31c26_Var>* _47826_keyA, jule::Ptr<_1a3c31c26_Var>* _47843_keyB) {
	if (((*(_47826_keyA)) != nullptr)) {
		(*((*(_47826_keyA))))._field_Constant=true;
		(*((*(_47826_keyA))))._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()});
		(*((*(_47826_keyA))))._field_Kind=(*(_1a3e37338_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47843_keyB)) != nullptr)) {
		(*((*(_47843_keyB))))._field_Constant=true;
		(*((*(_47843_keyB))))._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()});
		(*((*(_47843_keyB))))._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3b99661_comptimeParam>(), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data12)})});
	};
}



inline void _1a3b9c81d_step(_1a3b9b7ea_comptimeParams* _self_, jule::I64 _49920_i, jule::Ptr<_1a3c31c26_Var>* _49933_keyA, jule::Ptr<_1a3c31c26_Var>* _49950_keyB) {
	if (((*(_49933_keyA)) != nullptr)) {
		(*((*((*((*(_49933_keyA))))._field_Value))._field_Data))._field_Constant=static__1b57480dd_NewI64(static_cast<jule::I64>(_49920_i));
		(*(*((*((*(_49933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_49933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_49950_keyB)) != nullptr)) {
		(*(_1a3cc148b_comptimeParam((*((*((*(_49950_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49920_i];
	};
}



inline jule::I64 _1a3b9caa4_len(_1a3b9b7ea_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b9b7ea_comptimeParams _Src) {
	_Stream << _1a3b9bb3b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3b9d236_Str(_1a3b9cdb2_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1a3b9d577_Equal(jule::Ptr<_1a3b9cdb2_comptimeTypeInfos> _self_, jule::Ptr<_1a3cbac27_TypeKind> _52318_other) {
	return false;;
}



inline void _1a3b9d9ea_ready(_1a3b9cdb2_comptimeTypeInfos* _self_, jule::Ptr<_1a3c31c26_Var>* _52726_keyA, jule::Ptr<_1a3c31c26_Var>* _52743_keyB) {
	if (((*(_52726_keyA)) != nullptr)) {
		(*((*(_52726_keyA))))._field_Constant=true;
		(*((*(_52726_keyA))))._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()});
		(*((*(_52726_keyA))))._field_Kind=(*(_1a3e37338_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52743_keyB)) != nullptr)) {
		(*((*(_52743_keyB))))._field_Constant=true;
		(*((*(_52743_keyB))))._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()});
		(*((*(_52743_keyB))))._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3b9e4ac_comptimeTypeInfo>(), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data15)})});
	};
}



inline void _1a3b9de18_step(_1a3b9cdb2_comptimeTypeInfos* _self_, jule::I64 _54820_i, jule::Ptr<_1a3c31c26_Var>* _54833_keyA, jule::Ptr<_1a3c31c26_Var>* _54850_keyB) {
	if (((*(_54833_keyA)) != nullptr)) {
		(*((*((*((*(_54833_keyA))))._field_Value))._field_Data))._field_Constant=static__1b57480dd_NewI64(static_cast<jule::I64>(_54820_i));
		(*(*((*((*(_54833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_54833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_54850_keyB)) != nullptr)) {
		(*((*((*((*(_54850_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait((*(_self_))._field_types[_54820_i], (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data15);
	};
}



inline jule::I64 _1a3b9e19e_len(_1a3b9cdb2_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b9cdb2_comptimeTypeInfos _Src) {
	_Stream << _1a3b9d236_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3b9e4ac_comptimeTypeInfo_eq(_1a3b9e4ac_comptimeTypeInfo *_self_, _1a3b9e4ac_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _1a3b9e831_Str(_1a3b9e4ac_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1a3cbb0e0_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1a3b9eb72_Equal(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3cbac27_TypeKind> _57218_other) {
	return false;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba02c1__Str(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _57622_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _57637_fc) {
	if (((*((*(_57637_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_57622_e)).ptr(), (*((*((*(_57637_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _5817_constant = static__1b574893a_NewStr(_1a3cbb0e0_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34302_primStr, ._field_Model=jule::Any(_5817_constant, &__jule_any_type19), ._field_Constant=_5817_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba06bc__Kind(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _58927_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _58942_fc) {
	if (((*((*(_58942_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_58927_e)).ptr(), (*((*((*(_58942_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3b8a289_Enum> _5947_enm = _1a3bda43d_FindEnum(_1a3bab9d6_findComptimePackage(&((*((*(_58927_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1a3b8971c_EnumItem> _59511_item = nullptr;;
	{
		
		if (_1a3cbc08b_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1a8ddbc33:;
			{
				_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1a3cbe8eb_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a8ddbb45:;
			{
				_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1a3cbeb82_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a8ddb804:;
			{
				_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1a3cbd895_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a8ddb86a:;
			{
				if (_1a3ccb62d_IsUnsafe(_1a3cbd895_Ptr((*(_self_))._field_base).ptr())) {
					_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1a3cbd60e_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a8ddb8d1:;
			{
				_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1a3cbdb2b_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a8ddb947:;
			{
				_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1a3cbee18_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a8ddc492:;
			{
				_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1a3cbe3ce_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a8ddc508:;
			{
				_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1a3cbe148_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a8ddc56e:;
			{
				_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1a3cbe665_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a8ddc5d5:;
			{
				_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1a3cc019e_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a8ddc64b:;
			{
				_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1a3cbd378_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a8ddc6c3:;
			{
				jule::Ptr<_1a3cc3801_Prim> _6244_prim = _1a3cbd378_Prim((*(_self_))._field_base);;
				{
					
					if (_1a3cc701e_IsAny(_6244_prim.ptr())) {
						_case_begin_1a8de8734:;
						{
							_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1a3cc6a02_IsBool(_6244_prim.ptr())) {
						_case_begin_1a8de8646:;
						{
							_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1a3cc6c88_IsStr(_6244_prim.ptr())) {
						_case_begin_1a8de8437:;
						{
							_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1a3cc5c32_IsF32(_6244_prim.ptr())) {
						_case_begin_1a8de849d:;
						{
							_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1a3cc5eb8_IsF64(_6244_prim.ptr())) {
						_case_begin_1a8de8514:;
						{
							_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1a3cc46ae_IsI8(_6244_prim.ptr())) {
						_case_begin_1a8de857a:;
						{
							_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1a3cc4945_IsI16(_6244_prim.ptr())) {
						_case_begin_1a8de8e93:;
						{
							_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1a3cc4bcb_IsI32(_6244_prim.ptr())) {
						_case_begin_1a8de901a:;
						{
							_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1a3cc4e62_IsI64(_6244_prim.ptr())) {
						_case_begin_1a8de9092:;
						{
							_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1a3cc51e8_IsU8(_6244_prim.ptr())) {
						_case_begin_1a8de9119:;
						{
							_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1a3cc547e_IsU16(_6244_prim.ptr())) {
						_case_begin_1a8de9191:;
						{
							_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1a3cc5715_IsU32(_6244_prim.ptr())) {
						_case_begin_1a8de9218:;
						{
							_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1a3cc599b_IsU64(_6244_prim.ptr())) {
						_case_begin_1a8de9290:;
						{
							_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1a3cc624e_IsInt(_6244_prim.ptr())) {
						_case_begin_1a8de9317:;
						{
							_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1a3cc64d5_IsUint(_6244_prim.ptr())) {
						_case_begin_1a8de938e:;
						{
							_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1a3cc676b_IsUintptr(_6244_prim.ptr())) {
						_case_begin_1a8de9416:;
						{
							_59511_item=_1a3b8ad7d_FindItem(_5947_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1a8de828e:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1a3cbb0e0_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:659:5"));;
						}
					}
					_match_end_1a8de8228:;
				};
			}
		}
		else {
			_case_begin_1a8ddb78d:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1a3cbb0e0_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:662:4"));;
			}
		}
		_match_end_1a8ddb6e4:;
	};
	return _1a3cb7163_evalEnumStatic(&(_5947_enm), &(_59511_item), &((*((*(_58942_fc))))._field_Token));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba0ab8__Bits(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _66727_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _66742_fc) {
	if (((*((*(_66742_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_66727_e)).ptr(), (*((*((*(_66742_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3cc3801_Prim> _6723_prim = _1a3cbd378_Prim((*(_self_))._field_base.ptr());;
	if ((_6723_prim == nullptr)) {
		_1a3c8baa5_pushErr((*(_66727_e)).ptr(), (*((*(_66742_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _6773_n = _1b573c148_BitsizeOf((*(_6723_prim))._field_Kind);;
	if ((_6773_n == -1LL)) {
		_1a3c8baa5_pushErr((*(_66727_e)).ptr(), (*((*(_66742_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _6827_constant = static__1b57480dd_NewI64(static_cast<jule::I64>(_6773_n));;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34302_primStr, ._field_Model=jule::Any(_6827_constant, &__jule_any_type19), ._field_Constant=_6827_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba0eb4__Elem(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _69027_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _69042_fc) {
	if (((*((*(_69042_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_69027_e)).ptr(), (*((*((*(_69042_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3ccaae4_Ptr> _6957_ptr = _1a3cbd895_Ptr((*(_self_))._field_base.ptr());;
	if ((_6957_ptr != nullptr)) {
		if (_1a3ccb62d_IsUnsafe(_6957_ptr)) {
			_1a3c8baa5_pushErr((*(_69027_e)).ptr(), (*((*(_69042_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1a3babd5a_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*_6957_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a3cc732c_Sptr> _7037_sptr = _1a3cbd60e_Sptr((*(_self_))._field_base);;
	if ((_7037_sptr != nullptr)) {
		return _1a3babd5a_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*_7037_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a3cc7d00_Slc> _7077_slice = _1a3cbe3ce_Slc((*(_self_))._field_base);;
	if ((_7077_slice != nullptr)) {
		return _1a3babd5a_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*_7077_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1a3cca121_Arr> _7117_array = _1a3cbe148_Arr((*(_self_))._field_base);;
	if ((_7117_array != nullptr)) {
		return _1a3babd5a_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*_7117_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1a3b8a289_Enum> _7157_enm = _1a3cbdb2b_Enum((*(_self_))._field_base);;
	if ((_7157_enm != nullptr)) {
		return _1a3babd5a_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*((*_7157_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1a3c8baa5_pushErr((*(_69027_e)).ptr(), (*((*(_69042_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba13b0__Size(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _72327_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _72342_fc) {
	if (((*((*(_72342_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_72327_e)).ptr(), (*((*((*(_72342_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3cca121_Arr> _7287_arr = _1a3cbe148_Arr((*(_self_))._field_base.ptr());;
	if ((_7287_arr == nullptr)) {
		_1a3c8baa5_pushErr((*(_72327_e)).ptr(), (*((*(_72342_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _7337_constant = static__1b57480dd_NewI64(static_cast<jule::I64>((*(_7287_arr))._field_N));;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34ed4_primInt, ._field_Model=jule::Any(_7337_constant, &__jule_any_type19), ._field_Constant=_7337_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba17ab__Key(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _74126_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _74141_fc) {
	if (((*((*(_74141_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_74126_e)).ptr(), (*((*((*(_74141_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3cc9494_Map> _7467_m = _1a3cbee18_Map((*(_self_))._field_base.ptr());;
	if ((_7467_m == nullptr)) {
		_1a3c8baa5_pushErr((*(_74126_e)).ptr(), (*((*(_74141_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a3babd5a_buildComptimeTypeInfoData(&((*((*(_74126_e))))._field_s), &((*(_7467_m))._field_Key));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba1ba7__Value(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _75428_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _75443_fc) {
	if (((*((*(_75443_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_75428_e)).ptr(), (*((*((*(_75443_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3cc9494_Map> _7597_m = _1a3cbee18_Map((*(_self_))._field_base.ptr());;
	if ((_7597_m == nullptr)) {
		_1a3c8baa5_pushErr((*(_75428_e)).ptr(), (*((*(_75443_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a3babd5a_buildComptimeTypeInfoData(&((*((*(_75428_e))))._field_s), &((*(_7597_m))._field_Val));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba20a3__Fields(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _76729_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _76744_fc) {
	if (((*((*(_76744_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_76729_e)).ptr(), (*((*((*(_76744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3b61cbb_StructIns> _7727_s = _1a3cbe8eb_Struct((*(_self_))._field_base.ptr());;
	if ((_7727_s != nullptr)) {
		return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3b92318_comptimeStructFields>(_1a3b92318_comptimeStructFields{._field_fields=(*_7727_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data7)}), });;
	};
	jule::Ptr<_1a3b8a289_Enum> _7827_enm = _1a3cbdb2b_Enum((*(_self_))._field_base);;
	if ((_7827_enm != nullptr)) {
		return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3b98066_comptimeEnumFields>(_1a3b98066_comptimeEnumFields{._field_fields=(*_7827_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data11)}), });;
	};
	_1a3c8baa5_pushErr((*(_76729_e)).ptr(), (*((*(_76744_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba249e__Statics(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _79630_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _79645_fc) {
	if (((*((*(_79645_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_79630_e)).ptr(), (*((*((*(_79645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3b61cbb_StructIns> _8017_s = _1a3cbe8eb_Struct((*(_self_))._field_base.ptr());;
	if ((_8017_s == nullptr)) {
		_1a3c8baa5_pushErr((*(_79630_e)).ptr(), (*((*(_79645_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3b955c4_comptimeStatics>(_1a3b955c4_comptimeStatics{._field_fields=(*(_8017_s))._field_Statics}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data9)}), });;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba289a__Public(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _81529_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _81544_fc) {
	if (((*((*(_81544_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_81529_e)).ptr(), (*((*((*(_81544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _8207_public = false;;
	{
		
		if ((_1a3cbe8eb_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a8e2b965:;
			{
				_8207_public=(*((*(_1a3cbe8eb_Struct((*(_self_))._field_base)))._field_Decl))._field_Public;
			}
		}
		else if ((_1a3cbeb82_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a8e2ca54:;
			{
				_8207_public=(*(_1a3cbeb82_Trait((*(_self_))._field_base)))._field_Public;
			}
		}
		else if ((_1a3cbdb2b_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a8e2caba:;
			{
				_8207_public=(*(_1a3cbdb2b_Enum((*(_self_))._field_base)))._field_Public;
			}
		}
		else if ((_1a3cbddb2_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a8e2b69b:;
			{
				_8207_public=(*(_1a3cbddb2_TypeEnum((*(_self_))._field_base)))._field_Public;
			}
		}
		else {
			_case_begin_1a8e2b635:;
			{
				_1a3c8baa5_pushErr((*(_81529_e)).ptr(), (*((*(_81544_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a8e2b503:;
	};
	jule::Ptr<_1b5747b9d_Const> _8347_constant = static__1b5748671_NewBool(_8207_public);;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, ._field_Model=jule::Any(_8347_constant, &__jule_any_type19), ._field_Constant=_8347_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba2c96__Binded(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _84229_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _84244_fc) {
	if (((*((*(_84244_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_84229_e)).ptr(), (*((*((*(_84244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _8477_constant = static__1b5748671_NewBool(_1a3cbba6e_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, ._field_Model=jule::Any(_8477_constant, &__jule_any_type19), ._field_Constant=_8477_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba3192__Ordered(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _85526_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _85541_fc) {
	if (((*((*(_85541_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_85526_e)).ptr(), (*((*((*(_85541_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _8607_constant = static__1b5748671_NewBool(_1a3cbc83e_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34302_primStr, ._field_Model=jule::Any(_8607_constant, &__jule_any_type19), ._field_Constant=_8607_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba358d__Comparable(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _86829_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _86844_fc) {
	if (((*((*(_86844_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_86829_e)).ptr(), (*((*((*(_86844_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _8737_constant = static__1b5748671_NewBool(_1a3cbc322_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34302_primStr, ._field_Model=jule::Any(_8737_constant, &__jule_any_type19), ._field_Constant=_8737_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba3989__Mutable(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _88126_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _88141_fc) {
	if (((*((*(_88141_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_88126_e)).ptr(), (*((*((*(_88141_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _8867_constant = static__1b5748671_NewBool(_1a3cbc5a8_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, ._field_Model=jule::Any(_8867_constant, &__jule_any_type19), ._field_Constant=_8867_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba3d85__Types(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _89428_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _89443_fc) {
	if (((*((*(_89443_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_89428_e)).ptr(), (*((*((*(_89443_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3cc88e4_Tuple> _8997_tup = _1a3cc019e_Tup((*(_self_))._field_base.ptr());;
	if ((_8997_tup == nullptr)) {
		_1a3c8baa5_pushErr((*(_89428_e)).ptr(), (*((*(_89443_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3b9cdb2_comptimeTypeInfos> _9047_infos = jule::new_ptr<_1a3b9cdb2_comptimeTypeInfos>(_1a3b9cdb2_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1a3b9e4ac_comptimeTypeInfo>>::alloc(0LL, (*(_8997_tup))._field_Types.len())});;
	{
		auto expr = &((*(_8997_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e42184:;
		if (it != expr_end) {
			jule::Ptr<_1a3cbac27_TypeKind> _90715_t = *it;
			{
				(*(_9047_infos))._field_types=jule::append((*_9047_infos.alloc)._field_types,jule::Slice<jule::Ptr<_1a3b9e4ac_comptimeTypeInfo>>::make({_1a3c0848e_pushComptimeTypeInfo((*((*((*(_89428_e))))._field_s))._field_meta.ptr(), &(_90715_t))}));
			}
			_iter_next_1a8e42184:;
			++it;
			goto _iter_begin_1a8e42184;
		}
		_iter_end_1a8e42184:;
	};
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_9047_infos, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data14)}), });;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba4281__Exceptional(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _91734_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _91749_fc) {
	if (((*((*(_91749_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_91734_e)).ptr(), (*((*((*(_91749_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3b770cd_FnIns> _9227_f = _1a3cbe665_Fn((*(_self_))._field_base.ptr());;
	if ((_9227_f == nullptr)) {
		_1a3c8baa5_pushErr((*(_91734_e)).ptr(), (*((*(_91749_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _9277_constant = static__1b5748671_NewBool((((*(_9227_f))._field_Decl != nullptr) && (*(*(_9227_f))._field_Decl.alloc)._field_Exceptional));;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, ._field_Model=jule::Any(_9277_constant, &__jule_any_type19), ._field_Constant=_9277_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba467c__CanNil(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _93529_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _93544_fc) {
	if (((*((*(_93544_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_93529_e)).ptr(), (*((*((*(_93544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _9407_constant = static__1b5748671_NewBool(_1a3cbcac5_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, ._field_Model=jule::Any(_9407_constant, &__jule_any_type19), ._field_Constant=_9407_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba4a78__RC(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _94825_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _94840_fc) {
	if (((*((*(_94840_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_94825_e)).ptr(), (*((*((*(_94840_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _9537_constant = static__1b5748671_NewBool(_1a3cbcd5b_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, ._field_Model=jule::Any(_9537_constant, &__jule_any_type19), ._field_Constant=_9537_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba4e74__Result(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _96129_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _96144_fc) {
	if (((*((*(_96144_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_96129_e)).ptr(), (*((*((*(_96144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3b770cd_FnIns> _9667_f = _1a3cbe665_Fn((*(_self_))._field_base.ptr());;
	if ((_9667_f == nullptr)) {
		_1a3c8baa5_pushErr((*(_96129_e)).ptr(), (*((*(_96144_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_9667_f))._field_Result == nullptr)) {
		return _1a3babd5a_buildComptimeTypeInfoData(&((*((*(_96129_e))))._field_s), &(_1a3e33c4c_primVoid));;
	};
	return _1a3babd5a_buildComptimeTypeInfoData(&((*((*(_96129_e))))._field_s), &((*(_9667_f))._field_Result));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba5370__Params(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Ptr<_1a3c8b555_Eval>* _97729_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _97744_fc) {
	if (((*((*(_97744_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_97729_e)).ptr(), (*((*((*(_97744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3b770cd_FnIns> _9827_f = _1a3cbe665_Fn((*(_self_))._field_base.ptr());;
	if ((_9827_f == nullptr)) {
		_1a3c8baa5_pushErr((*(_97729_e)).ptr(), (*((*(_97744_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_self_))._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3b9b7ea_comptimeParams>(_1a3b9b7ea_comptimeParams{._field_params=(*(_9827_f))._field_Params}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data13)}), });;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba56b1_subIdent(jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _self_, jule::Str* _99426_ident) {
	{
		auto &_match_expr{ (*(_99426_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1a8e5730e:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _9978_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8b2a2ce, jule::Ptr<__jule_anon_1a8b2a2ce_ctx>::make(__jule_anon_1a8b2a2ce_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8b2a2ce_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_9978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1a8e570bc:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _10048_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c22728, jule::Ptr<__jule_anon_1a8c22728_ctx>::make(__jule_anon_1a8c22728_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c22728_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_10048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1a8e57133:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _10118_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c24681, jule::Ptr<__jule_anon_1a8c24681_ctx>::make(__jule_anon_1a8c24681_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c24681_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_10118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1a8e57375:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _10188_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c265d9, jule::Ptr<__jule_anon_1a8c265d9_ctx>::make(__jule_anon_1a8c265d9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c265d9_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_10188_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1a8e573db:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _10258_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c28542, jule::Ptr<__jule_anon_1a8c28542_ctx>::make(__jule_anon_1a8c28542_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c28542_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_10258_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1a8e57452:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _10328_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c2a49a, jule::Ptr<__jule_anon_1a8c2a49a_ctx>::make(__jule_anon_1a8c2a49a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c2a49a_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_10328_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1a8e574b8:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _10398_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c2c403, jule::Ptr<__jule_anon_1a8c2c403_ctx>::make(__jule_anon_1a8c2c403_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c2c403_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_10398_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1a8e57595:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _10468_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c2e35b, jule::Ptr<__jule_anon_1a8c2e35b_ctx>::make(__jule_anon_1a8c2e35b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c2e35b_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_10468_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1a8e5760b:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _10538_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c31407, jule::Ptr<__jule_anon_1a8c31407_ctx>::make(__jule_anon_1a8c31407_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c31407_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_10538_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1a8e57672:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _10608_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c33360, jule::Ptr<__jule_anon_1a8c33360_ctx>::make(__jule_anon_1a8c33360_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c33360_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_10608_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1a8e576e9:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _10678_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a89d64a9, jule::Ptr<__jule_anon_1a89d64a9_ctx>::make(__jule_anon_1a89d64a9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a89d64a9_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_10678_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1a8e57771:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _10748_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a89d8511, jule::Ptr<__jule_anon_1a89d8511_ctx>::make(__jule_anon_1a89d8511_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a89d8511_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_10748_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1a8e577e8:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _10818_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a89da469, jule::Ptr<__jule_anon_1a89da469_ctx>::make(__jule_anon_1a89da469_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a89da469_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_10818_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1a8e57870:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _10888_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a89dc3c2, jule::Ptr<__jule_anon_1a89dc3c2_ctx>::make(__jule_anon_1a89dc3c2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a89dc3c2_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_10888_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1a8e578e7:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _10958_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a89de32a, jule::Ptr<__jule_anon_1a89de32a_ctx>::make(__jule_anon_1a89de32a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a89de32a_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_10958_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1a6314b53:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _11028_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a89e1283, jule::Ptr<__jule_anon_1a89e1283_ctx>::make(__jule_anon_1a89e1283_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a89e1283_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_11028_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1a6314944:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _11098_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a89e31db, jule::Ptr<__jule_anon_1a89e31db_ctx>::make(__jule_anon_1a89e31db_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a89e31db_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_11098_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1a63149aa:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _11168_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a66909d4, jule::Ptr<__jule_anon_1a66909d4_ctx>::make(__jule_anon_1a66909d4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a66909d4_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_11168_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1a6314a21:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _11238_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8e59a5e, jule::Ptr<__jule_anon_1a8e59a5e_ctx>::make(__jule_anon_1a8e59a5e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8e59a5e_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_11238_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1a6314d0c:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _11308_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c34b14, jule::Ptr<__jule_anon_1a8c34b14_ctx>::make(__jule_anon_1a8c34b14_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c34b14_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_11308_method));;
			}
		}
		else {
			_case_begin_1a8e54d78:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8e56d9c:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3b9e4ac_comptimeTypeInfo _Src) {
	_Stream << _1a3b9e831_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3ba59be_comptimeValue_eq(_1a3ba59be_comptimeValue *_self_, _1a3ba59be_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _1a3ba5d43_Str(_1a3ba59be_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1a3ba6184_Equal(jule::Ptr<_1a3ba59be_comptimeValue> _self_, jule::Ptr<_1a3cbac27_TypeKind> _114918_other) {
	return false;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba66d4__Unwrap(jule::Ptr<_1a3ba59be_comptimeValue> _self_, jule::Ptr<_1a3c8b555_Eval>* _115329_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _115344_fc) {
	if (((*((*(_115344_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_115329_e)).ptr(), (*((*((*(_115344_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba6ad0__Type(jule::Ptr<_1a3ba59be_comptimeValue> _self_, jule::Ptr<_1a3c8b555_Eval>* _116127_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _116142_fc) {
	if (((*((*(_116142_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_116127_e)).ptr(), (*((*((*(_116142_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a3babd5a_buildComptimeTypeInfoData(&((*((*(_116127_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba6ecb__Lvalue(jule::Ptr<_1a3ba59be_comptimeValue> _self_, jule::Ptr<_1a3c8b555_Eval>* _116929_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _116944_fc) {
	if (((*((*(_116944_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_116929_e)).ptr(), (*((*((*(_116944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _11747_constant = static__1b5748671_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, ._field_Model=jule::Any(_11747_constant, &__jule_any_type19), ._field_Constant=_11747_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba73c7__Mutable(jule::Ptr<_1a3ba59be_comptimeValue> _self_, jule::Ptr<_1a3c8b555_Eval>* _118230_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _118245_fc) {
	if (((*((*(_118245_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_118230_e)).ptr(), (*((*((*(_118245_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _11877_constant = static__1b5748671_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, ._field_Model=jule::Any(_11877_constant, &__jule_any_type19), ._field_Constant=_11877_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba77c3__Const(jule::Ptr<_1a3ba59be_comptimeValue> _self_, jule::Ptr<_1a3c8b555_Eval>* _119528_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _119543_fc) {
	if (((*((*(_119543_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_119528_e)).ptr(), (*((*((*(_119543_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _12007_constant = static__1b5748671_NewBool(_1a3c8a235_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, ._field_Model=jule::Any(_12007_constant, &__jule_any_type19), ._field_Constant=_12007_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba7bbe__Field(jule::Ptr<_1a3ba59be_comptimeValue> _self_, jule::Ptr<_1a3c8b555_Eval>* _120828_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _120843_fc) {
	if (((*((*(_120843_fc))))._field_Args.len() > 1LL)) {
		_1a3c8baa5_pushErr((*(_120828_e)).ptr(), (*((*((*(_120843_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3b61cbb_StructIns> _12137_s = _1a3cbe8eb_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_12137_s == nullptr)) {
		_1a3c8baa5_pushErr((*(_120828_e)).ptr(), (*((*(_120843_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_data))._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3b42472_Expr> _12187_arg = (*((*(_120843_fc))))._field_Args[0LL];;
	jule::Ptr<_1a3c8982d_Data> _12197_d = _1a3ca97b5_evalExpr((*(_120828_e)), _12187_arg);;
	if ((_12197_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a3c8a235_IsConst(_12197_d.ptr())))) {
		_1a3c8baa5_pushErr((*(_120828_e)).ptr(), (*(_12187_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3cc3801_Prim> _12273_prim = _1a3cbd378_Prim((*(_12197_d))._field_Kind);;
	if (((_12273_prim == nullptr) || (!(_1a3cc6c88_IsStr(_12273_prim.ptr()))))) {
		_1a3c8baa5_pushErr((*(_120828_e)).ptr(), (*_12187_arg.alloc)._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*(_12197_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12323_ident = _1b5749d26_ReadStr((*(_12197_d))._field_Constant.ptr());;
	jule::Ptr<_1a3b6121b_FieldIns> _12337_f = _1a3b63174_FindField(_12137_s.ptr(), _12323_ident);;
	if ((_12337_f == nullptr)) {
		_1a3c8baa5_pushErr((*(_120828_e)).ptr(), (*_12187_arg.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_12137_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12323_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_12197_d=jule::new_ptr<_1a3c8982d_Data>((*(*(_self_))._field_data.alloc));
	_12197_d=_1a3ca2abb_evalStructSubIdentField((*(_120828_e)).ptr(), &(_12197_d), &(_12137_s), &((*_12187_arg.alloc)._field_Token), &(_12337_f));
	return _1a3bac19b_buildComptimeValue(&(_12197_d));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ba8010_subIdent(jule::Ptr<_1a3ba59be_comptimeValue> _self_, jule::Str* _124326_ident) {
	{
		auto &_match_expr{ (*(_124326_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1a8c407ac:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _12468_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c41bba, jule::Ptr<__jule_anon_1a8c41bba_ctx>::make(__jule_anon_1a8c41bba_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c41bba_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_12468_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a8c40823:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _12538_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c43aac, jule::Ptr<__jule_anon_1a8c43aac_ctx>::make(__jule_anon_1a8c43aac_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c43aac_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_12538_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1a8c40889:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _12608_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c45a37, jule::Ptr<__jule_anon_1a8c45a37_ctx>::make(__jule_anon_1a8c45a37_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c45a37_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_12608_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1a8c40911:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _12678_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c47990, jule::Ptr<__jule_anon_1a8c47990_ctx>::make(__jule_anon_1a8c47990_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c47990_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_12678_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1a8c40988:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _12748_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c498e8, jule::Ptr<__jule_anon_1a8c498e8_ctx>::make(__jule_anon_1a8c498e8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c498e8_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_12748_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1a8c40b0e:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _12818_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a832cedd, jule::Ptr<__jule_anon_1a832cedd_ctx>::make(__jule_anon_1a832cedd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a832cedd_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_12818_method));;
			}
		}
		else {
			_case_begin_1a8c40526:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c4068b:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3ba59be_comptimeValue _Src) {
	_Stream << _1a3ba5d43_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3ba8692_Str(_1a3ba831d_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1a3ba89d3_Equal(jule::Ptr<_1a3ba831d_comptimeFiles> _self_, jule::Ptr<_1a3cbac27_TypeKind> _130018_other) {
	return false;;
}



inline void _1a3ba8e56_ready(_1a3ba831d_comptimeFiles* _self_, jule::Ptr<_1a3c31c26_Var>* _130426_keyA, jule::Ptr<_1a3c31c26_Var>* _130443_keyB) {
	if (((*(_130426_keyA)) != nullptr)) {
		(*((*(_130426_keyA))))._field_Constant=true;
		(*((*(_130426_keyA))))._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()});
		(*((*(_130426_keyA))))._field_Kind=(*(_1a3e37338_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_130443_keyB)) != nullptr)) {
		(*((*(_130443_keyB))))._field_Constant=true;
		(*((*(_130443_keyB))))._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()});
		(*((*(_130443_keyB))))._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3ba9918_comptimeFile>(), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data18)})});
	};
}



inline void _1a3ba9374_step(_1a3ba831d_comptimeFiles* _self_, jule::I64 _132520_i, jule::Ptr<_1a3c31c26_Var>* _132533_keyA, jule::Ptr<_1a3c31c26_Var>* _132550_keyB) {
	if (((*(_132533_keyA)) != nullptr)) {
		(*((*((*((*(_132533_keyA))))._field_Value))._field_Data))._field_Constant=static__1b57480dd_NewI64(static_cast<jule::I64>(_132520_i));
		(*(*((*((*(_132533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_132533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_132550_keyB)) != nullptr)) {
		(*((*((*((*((*(_132550_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1a3ba9918_comptimeFile>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_132520_i];
	};
}



inline jule::I64 _1a3ba960a_len(_1a3ba831d_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3ba831d_comptimeFiles _Src) {
	_Stream << _1a3ba8692_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3ba9918_comptimeFile_eq(_1a3ba9918_comptimeFile *_self_, _1a3ba9918_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _1a3ba9ebd_Str(_1a3ba9918_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1a3baa30e_Equal(jule::Ptr<_1a3ba9918_comptimeFile> _self_, jule::Ptr<_1a3cbac27_TypeKind> _134918_other) {
	return false;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3baa71b__Path(jule::Ptr<_1a3ba9918_comptimeFile> _self_, jule::Ptr<_1a3c8b555_Eval>* _135327_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _135342_fc) {
	if (((*((*(_135342_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_135327_e)).ptr(), (*((*((*(_135342_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _13587_constant = static__1b574893a_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34302_primStr, ._field_Model=jule::Any(_13587_constant, &__jule_any_type19), ._field_Constant=_13587_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3baab17__Name(jule::Ptr<_1a3ba9918_comptimeFile> _self_, jule::Ptr<_1a3c8b555_Eval>* _136627_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _136642_fc) {
	if (((*((*(_136642_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_136627_e)).ptr(), (*((*((*(_136642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _13717_constant = static__1b574893a_NewStr(_1a3b2dc33_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34302_primStr, ._field_Model=jule::Any(_13717_constant, &__jule_any_type19), ._field_Constant=_13717_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3bab013__Dir(jule::Ptr<_1a3ba9918_comptimeFile> _self_, jule::Ptr<_1a3c8b555_Eval>* _137926_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _137941_fc) {
	if (((*((*(_137941_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_137926_e)).ptr(), (*((*((*(_137941_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b5747b9d_Const> _13847_constant = static__1b574893a_NewStr(_1a3b2d99c_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34302_primStr, ._field_Model=jule::Any(_13847_constant, &__jule_any_type19), ._field_Constant=_13847_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3bab354_subIdent(jule::Ptr<_1a3ba9918_comptimeFile> _self_, jule::Str* _139226_ident) {
	{
		auto &_match_expr{ (*(_139226_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1a8c4da2e:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _13958_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c4ed3d, jule::Ptr<__jule_anon_1a8c4ed3d_ctx>::make(__jule_anon_1a8c4ed3d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c4ed3d_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_13958_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a8c4dac8:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _14028_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c51cda, jule::Ptr<__jule_anon_1a8c51cda_ctx>::make(__jule_anon_1a8c51cda_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c51cda_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_14028_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1a8c4db50:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _14098_method = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>((void*)__jule_anon_1a8c53c43, jule::Ptr<__jule_anon_1a8c53c43_ctx>::make(__jule_anon_1a8c53c43_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c53c43_ctx_handler), });;
				return _1a3bab6c8_buildAsComptimeMethodData(&(_14098_method));;
			}
		}
		else {
			_case_begin_1a8c4d743:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c4d8b9:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3ba9918_comptimeFile _Src) {
	_Stream << _1a3ba9ebd_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool,jule::Ptr<_1a3c08b54_Sema>*,jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>*> _1a3bae28b_readyFn(jule::Ptr<_1a3badd90_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1a3c08b54_Sema>*,jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>*>((void*)__jule_anon_1a8c5e776, jule::Ptr<__jule_anon_1a8c5e776_ctx>::make(__jule_anon_1a8c5e776_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a8c5e776_ctx_handler);;
}



inline jule::Bool _1a3bae522_readyFi(jule::Ptr<_1a3badd90_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a3c17129_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1a3bae28b_readyFn(_self_)));;
}



inline jule::Bool _1a3bae7a8_readySi(jule::Ptr<_1a3badd90_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a3bae28b_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1a3baea3e_ready(jule::Ptr<_1a3badd90_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1a3bae522_readyFi(_self_);;
	};
	return _1a3bae7a8_readySi(_self_);;
}



inline jule::Bool _1a3baecc5_check(jule::Ptr<_1a3badd90_constraintChecker> _self_) {
	if ((!(_1a3baea3e_ready(_self_)))) {
		return false;;
	};
	_julec_label_1a8c6de4a:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8c6e81e:;
		if (it != expr_end) {
			jule::I64 _1208_i = it - expr->begin();
			jule::Ptr<_1a3cb9341_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1a8c6e81e;
				};
				{
					auto expr = &((*_12015_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8c709eb:;
					if (it != expr_end) {
						jule::Ptr<_1a3cbac27_TypeKind> _12416_c2 = *it;
						{
							jule::Ptr<_1a3cc3801_Prim> _1259_prim = _1a3cbd378_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1a3cc4428_IsConstraint(_1259_prim))) {
								if (_1a3bb0556_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*_12015_g.alloc)._field_Kind))) {
									goto _iter_next_1a8c6e81e;
								};
								goto _iter_next_1a8c709eb;
							};
							if (_1a3cbb431_Equal(_12416_c2, (*_12015_g.alloc)._field_Kind)) {
								goto _iter_next_1a8c6e81e;
							};
						}
						_iter_next_1a8c709eb:;
						++it;
						goto _iter_begin_1a8c709eb;
					}
					_iter_end_1a8c709eb:;
				};
				_1a3c0b78e_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*_12015_g.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type4),jule::Any(_1a3bb018d_toStrConstraints(_12015_g), &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1a8c6e81e:;
			++it;
			_1208_i++;
			goto _iter_begin_1a8c6e81e;
		}
		_iter_end_1a8c6e81e:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3badd90_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3bb15ac_IsTraitImpl(_1a3bb11e4_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1a3bb1843_IsStructImpl(_1a3bb11e4_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3bb11e4_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3bb664a_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bb6a68_If_eq(_1a3bb6a68_If *_self_, _1a3bb6a68_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3bb6a68_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bb6d65_Else_eq(_1a3bb6d65_Else *_self_, _1a3bb6d65_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3bb6d65_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3bb7283_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bb7580_InfIter_eq(_1a3bb7580_InfIter *_self_, _1a3bb7580_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3bb7580_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bb7a36_WhileIter_eq(_1a3bb7a36_WhileIter *_self_, _1a3bb7a36_WhileIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3bb7a36_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bb8482_RangeIter_eq(_1a3bb8482_RangeIter *_self_, _1a3bb8482_RangeIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3bb8482_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bb8817_ContSt_eq(_1a3bb8817_ContSt *_self_, _1a3bb8817_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3bb8817_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bb8be1_BreakSt_eq(_1a3bb8be1_BreakSt *_self_, _1a3bb8be1_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3bb8be1_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bb8edd_Label_eq(_1a3bb8edd_Label *_self_, _1a3bb8edd_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3bb8edd_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bb93b7_GotoSt_eq(_1a3bb93b7_GotoSt *_self_, _1a3bb93b7_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Label == _self_->_field_Label);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3bb93b7_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bb9791_Postfix_eq(_1a3bb9791_Postfix *_self_, _1a3bb9791_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3bb9791_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bb9c47_Assign_eq(_1a3bb9c47_Assign *_self_, _1a3bb9c47_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3bb9c47_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3bba1ed_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "Decls:" << _Src._field_Decls << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3bba85d_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3bbb386_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bbba7e_FallSt_eq(_1a3bbba7e_FallSt *_self_, _1a3bbba7e_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3bbba7e_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bbbe25_RetSt_eq(_1a3bbbe25_RetSt *_self_, _1a3bbbe25_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3bbbe25_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bbc585_scopeLabel_eq(_1a3bbc585_scopeLabel *_self_, _1a3bbc585_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_label == _self_->_field_label) &&
		(_self_->_field_pos == _self_->_field_pos) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_used == _self_->_field_used);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3bbc585_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bbcb18_scopeGoto_eq(_1a3bbcb18_scopeGoto *_self_, _1a3bbcb18_scopeGoto _other_) {
	return 
		(_self_->_field_st == _other_._field_st) &&
		(_self_->_field_gt == _self_->_field_gt) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_pos == _self_->_field_pos);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3bbcb18_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bbdb08_scopeChecker_eq(_1a3bbdb08_scopeChecker *_self_, _1a3bbdb08_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3bbe09d_SelectPackage(_1a3bbdb08_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>> _46029_selector) {
	return _1a3c090e9_SelectPackage((*(_self_))._field_s.ptr(), _46029_selector);;
}



inline jule::Ptr<_1a3c31c26_Var> _1a3bbe499_FindVar(_1a3bbdb08_scopeChecker* _self_, jule::Str _47123_ident, jule::Bool _47135_binded) {
	if ((!(_47135_binded))) {
		jule::Ptr<_1a3c31c26_Var> _4738_v = _1a3bc2579_findVar(_self_, _47123_ident);;
		if ((_4738_v != nullptr)) {
			return _4738_v;;
		};
	};
	return _1a3c094e5_FindVar((*(_self_))._field_s.ptr(), _47123_ident, _47135_binded);;
}



inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3bbe895_FindTypeAlias(_1a3bbdb08_scopeChecker* _self_, jule::Str _48829_ident, jule::Bool _48841_binded) {
	;
	jule::Ptr<_1a3cb9e35_TypeAlias> _4917_ta = _1a3c87133_findTypeAlias((*(_self_))._field_table.ptr(), &(_48829_ident), _48841_binded, true);;
	if ((_4917_ta != nullptr)) {
		return _4917_ta;;
	};
	jule::Ptr<_1a3bbdb08_scopeChecker> _4967_parent = (*(_self_))._field_parent;;
	while ((_4967_parent != nullptr)) {
		{
			_4917_ta=_1a3c87133_findTypeAlias((*(_4967_parent))._field_table, &(_48829_ident), _48841_binded, true);
			if ((_4917_ta != nullptr)) {
				return _4917_ta;;
			};
			_4967_parent=(*_4967_parent.alloc)._field_parent;
		}
	_iter_next_1a8cae92a:;
	}
	_iter_end_1a8cae92a:;;
	return _1a3c098e1_FindTypeAlias((*(_self_))._field_s.ptr(), _48829_ident, _48841_binded);;
}



inline jule::Ptr<_1a3b5e03d_Struct> _1a3bbec91_FindStruct(_1a3bbdb08_scopeChecker* _self_, jule::Str _51326_ident, jule::Bool _51338_binded) {
	return _1a3c09cdc_FindStruct((*(_self_))._field_s.ptr(), _51326_ident, _51338_binded);;
}



inline jule::Ptr<_1a3b740ec_Fn> _1a3bc018c_FindFn(_1a3bbdb08_scopeChecker* _self_, jule::Str _52222_ident, jule::Bool _52234_binded) {
	return _1a3c0a1d8_FindFn((*(_self_))._field_s.ptr(), _52222_ident, _52234_binded);;
}



inline jule::Ptr<_1a3b87a7d_Trait> _1a3bc04cd_FindTrait(_1a3bbdb08_scopeChecker* _self_, jule::Str _53125_ident) {
	return _1a3c0a529_FindTrait((*(_self_))._field_s.ptr(), _53125_ident);;
}



inline jule::Ptr<_1a3b8a289_Enum> _1a3bc081e_FindEnum(_1a3bbdb08_scopeChecker* _self_, jule::Str _54024_ident) {
	return _1a3c0a86a_FindEnum((*(_self_))._field_s.ptr(), _54024_ident);;
}



inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3bc0b60_FindTypeEnum(_1a3bbdb08_scopeChecker* _self_, jule::Str _54928_ident) {
	return _1a3c0abab_FindTypeEnum((*(_self_))._field_s.ptr(), _54928_ident);;
}



inline jule::Bool _1a3bc0eb2_isUnsafe(jule::Ptr<_1a3bbdb08_scopeChecker> _self_) {
	jule::Ptr<_1a3bbdb08_scopeChecker> _5577_scope = _self_;;
	_julec_label_1a8cb4622:;
	if ((*((*(_5577_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_5577_scope.alloc)._field_parent != nullptr)) {
		_5577_scope=(*_5577_scope.alloc)._field_parent;
		goto _julec_label_1a8cb4622;
	};
	return false;;
}



inline jule::Bool _1a3bc1248_isRoot(_1a3bbdb08_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1a3bc1446_stop(_1a3bbdb08_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1a3bc16cc_stopped(_1a3bbdb08_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1a3bc1963_isDeferred(jule::Ptr<_1a3bbdb08_scopeChecker> _self_) {
	jule::Ptr<_1a3bbdb08_scopeChecker> _5907_scope = _self_;;
	_julec_label_1a8cb7966:;
	if ((*((*(_5907_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_5907_scope.alloc)._field_parent != nullptr)) {
		_5907_scope=(*_5907_scope.alloc)._field_parent;
		goto _julec_label_1a8cb7966;
	};
	return false;;
}



inline void _1a3bc1c1b_pushCaptured(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3c31c26_Var>* _61134_v) {
	jule::Ptr<_1a3bbdb08_scopeChecker> _6127_sc = _self_;;
	for (;;) {
		{
			if (((*(_6127_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_6127_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8cba87b:;
					if (it != expr_end) {
						jule::Ptr<_1a3c31c26_Var> _61512_cv = *it;
						{
							if ((_61512_cv == (*(_61134_v)))) {
								goto _julec_label_1a8cbb63a;
							};
						}
						_iter_next_1a8cba87b:;
						++it;
						goto _iter_begin_1a8cba87b;
					}
					_iter_end_1a8cba87b:;
				};
				(*(*(_6127_sc))._field_captured.alloc)=jule::append((*(*(_6127_sc))._field_captured.alloc),jule::Slice<jule::Ptr<_1a3c31c26_Var>>::make({(*(_61134_v))}));
				_julec_label_1a8cbb63a:;
			};
			if (((*_6127_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1a8cb8736;
			};
			_6127_sc=(*_6127_sc.alloc)._field_parent;
			if ((!(_1a3cb82c9_isVarCaptured(_6127_sc, _6127_sc, (*(_61134_v)))))) {
				goto _iter_end_1a8cb8736;
			};
		}
	_iter_next_1a8cb8736:;
	}
	_iter_end_1a8cb8736:;;
}



inline jule::Ptr<_1a3bbdb08_scopeChecker> _1a3bc1ea2_getRoot(jule::Ptr<_1a3bbdb08_scopeChecker> _self_) {
	jule::Ptr<_1a3bbdb08_scopeChecker> _6367_root = _self_;;
	while ((((*(_6367_root))._field_parent != nullptr) && ((*_6367_root.alloc)._field_owner == nullptr))) {
		{
			_6367_root=(*_6367_root.alloc)._field_parent;
		}
	_iter_next_1a8cbda6b:;
	}
	_iter_end_1a8cbda6b:;;
	return _6367_root;;
}



inline jule::Ptr<_1a3bbdb08_scopeChecker> _1a3bc2238_getHardRoot(jule::Ptr<_1a3bbdb08_scopeChecker> _self_) {
	jule::Ptr<_1a3bbdb08_scopeChecker> _6467_root = _self_;;
	while (((*(_6467_root))._field_parent != nullptr)) {
		{
			_6467_root=(*_6467_root.alloc)._field_parent;
		}
	_iter_next_1a8cbed9c:;
	}
	_iter_end_1a8cbed9c:;;
	return _6467_root;;
}



inline jule::Ptr<_1a3c31c26_Var> _1a3bc2579_findVar(_1a3bbdb08_scopeChecker* _self_, jule::Str _65423_ident) {
	;
	;
	jule::Ptr<_1a3c31c26_Var> _6577_v = _1a3c86b7c_findVar((*(_self_))._field_table.ptr(), &(_65423_ident), false, true);;
	if ((_6577_v != nullptr)) {
		return _6577_v;;
	};
	jule::Ptr<_1a3bbdb08_scopeChecker> _6617_parent = (*(_self_))._field_parent;;
	while ((_6617_parent != nullptr)) {
		{
			_6577_v=_1a3c86b7c_findVar((*(_6617_parent))._field_table, &(_65423_ident), false, true);
			if ((_6577_v != nullptr)) {
				return _6577_v;;
			};
			_6617_parent=(*_6617_parent.alloc)._field_parent;
		}
	_iter_next_1a8cc1d5a:;
	}
	_iter_end_1a8cc1d5a:;;
	return nullptr;;
}



inline jule::Ptr<_1a3bb8edd_Label> _1a3bc28ba_findLabel(_1a3bbdb08_scopeChecker* _self_, jule::Str* _67526_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8cc3d90:;
		if (it != expr_end) {
			jule::Any _67615_st = *it;
			{
				{
					auto &_match_expr{ _67615_st };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1a8cc4665:;
						{
							jule::Ptr<_1a3bb8edd_Label> _6799_label = _67615_st.unsafe_cast_ptr<_1a3bb8edd_Label>();;
							if (((*(_6799_label))._field_Ident == (*(_67526_ident)))) {
								return _6799_label;;
							};
						}
					}
					_match_end_1a8cc4610:;
				};
			}
			_iter_next_1a8cc3d90:;
			++it;
			goto _iter_begin_1a8cc3d90;
		}
		_iter_end_1a8cc3d90:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3bbc585_scopeLabel> _1a3bc2c0b_findLabelScope(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Str* _69132_ident) {
	jule::Ptr<_1a3bbc585_scopeLabel> _6927_label = _1a3bc304c_findLabelAll(_self_.ptr(), _69132_ident);;
	if (((_6927_label != nullptr) && ((*_6927_label.alloc)._field_scope == _self_))) {
		return _6927_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3bbc585_scopeLabel> _1a3bc304c_findLabelAll(_1a3bbdb08_scopeChecker* _self_, jule::Str* _70329_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8cc6c2d:;
		if (it != expr_end) {
			jule::Ptr<_1a3bbc585_scopeLabel> _70415_lbl = *it;
			{
				if (((*((*(_70415_lbl))._field_label))._field_Ident == (*(_70329_ident)))) {
					return _70415_lbl;;
				};
			}
			_iter_next_1a8cc6c2d:;
			++it;
			goto _iter_begin_1a8cc6c2d;
		}
		_iter_end_1a8cc6c2d:;
	};
	return nullptr;;
}



inline jule::Bool _1a3bc3448_isDuplicatedIdent(_1a3bbdb08_scopeChecker* _self_, jule::Uintptr _71533_itself, jule::Str* _71551_ident) {
	jule::Ptr<_1a3c31c26_Var> _7163_v = _1a3bbe499_FindVar(_self_, (*(_71551_ident)), false);;
	if (((_7163_v != nullptr) && (static_cast<jule::Uintptr>(_7163_v) != _71533_itself))) {
		if (((*_7163_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7163_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1a3c0b0b8_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1a3cb9e35_TypeAlias> _7243_ta = _1a3bbe895_FindTypeAlias(_self_, (*(_71551_ident)), false);;
	if (((_7243_ta != nullptr) && (static_cast<jule::Uintptr>(_7243_ta) != _71533_itself))) {
		if (((*_7243_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7243_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1a3c0b0b8_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1a3bc3701_checkVarDecl(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b50ea8_VarDecl> _73533_decl) {
	jule::Ptr<_1a3c31c26_Var> _7367_v = _1a3b805d1_buildVar(_73533_decl);;
	(*(_7367_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a3c31c26_Var>>::make({_7367_v}));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_7367_v, &__jule_any_type8)}));
	});;
	if (_1a3bc3448_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_7367_v), &((*_7367_v.alloc)._field_Ident))) {
		_1a3c0b78e_pushErr((*_self_.alloc)._field_s.ptr(), (*_7367_v.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_7367_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1a3bc1446_stop(_self_);
		return;;
	};
	_1a3c1ed13_checkVarDecl((*(_self_))._field_s, &(_7367_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0));
	if (((!(_1a3c32386_IsTypeInferred(_7367_v))) && (((*_7367_v.alloc)._field_Kind == nullptr) || ((*((*_7367_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1a3c235a8_evalVarValue((*(_self_))._field_s, &(_7367_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0));
	if (((!(_1a3c32100_IsInitialized(_7367_v))) || ((*((*_7367_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1a3bc996b_removeInteriorMutRisk(_self_, &((*(*(_7367_v))._field_Value.alloc)._field_Data));
	_1a3c23245_checkVarValue((*(_self_))._field_s, &(_7367_v));
}



inline void _1a3bc39a9_checkTypeAlias(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3cb9e35_TypeAlias>* _76636_ta) {
	if (_1a3bc3448_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_76636_ta))), &((*((*(_76636_ta))))._field_Ident))) {
		_1a3c0b78e_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_76636_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_76636_ta))))._field_Ident, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1a3bc1446_stop(_self_);
		return;;
	};
	_1a3c18d95_checkTypeAliasDecl((*(_self_))._field_s, _76636_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>::make({(*(_76636_ta))}));
	if (((*((*((*(_76636_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1a3bc1446_stop(_self_);
	};
}



inline void _1a3bc3c62_checkTypeAliasDecl(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b54b5a_TypeAliasDecl> _78239_decl) {
	jule::Ptr<_1a3cb9e35_TypeAlias> _7837_ta = _1a3b7c1b0_buildTypeAlias(_78239_decl);;
	_1a3bc39a9_checkTypeAlias(_self_, &(_7837_ta));
}



inline jule::Ptr<_1a3bb664a_Scope> _1a3bc3ee8_getChild(_1a3bbdb08_scopeChecker* _self_) {
	return jule::new_ptr<_1a3bb664a_Scope>(_1a3bb664a_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1a3bc4416_checkChildSsc(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4d15e_ScopeTree>* _79335_tree, jule::Ptr<_1a3bb664a_Scope>* _79358_s, jule::Ptr<_1a3bbdb08_scopeChecker>* _79374_ssc) {
	(*((*(_79374_ssc))))._field_parent=_self_;
	_1a3bd090b_check((*(_79374_ssc)), _79335_tree, _79358_s);
}



inline jule::Ptr<_1a3bb664a_Scope> _1a3bc4812_checkChildSc(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4d15e_ScopeTree>* _79834_tree, jule::Ptr<_1a3bbdb08_scopeChecker>* _79857_ssc) {
	jule::Ptr<_1a3bb664a_Scope> _7997_s = _1a3bc3ee8_getChild(_self_.ptr());;
	_1a3bc4416_checkChildSsc(_self_, _79834_tree, &(_7997_s), _79857_ssc);
	return _7997_s;;
}



inline jule::Ptr<_1a3bb664a_Scope> _1a3bc4b53_checkChild(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4d15e_ScopeTree>* _80432_tree) {
	jule::Ptr<_1a3bbdb08_scopeChecker> _8057_ssc = _1a3bd0b92_newChildChecker(_self_);;
	return _1a3bc4812_checkChildSc(_self_, _80432_tree, &(_8057_ssc));;
}



inline void _1a3bc4e0b_checkAnonScope(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4d15e_ScopeTree> _80935_tree) {
	jule::Ptr<_1a3bb664a_Scope> _8107_s = _1a3bc4b53_checkChild(_self_, &(_80935_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_8107_s, &__jule_any_type21)}));
}



inline void _1a3bc526e_processErrorCall(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b6e9ee_BuiltinErrorCallExprModel>* _81438_m, jule::Ptr<_1a3b27a62_Token> _81469_err) {
	if (_1a3bc1963_isDeferred(_self_)) {
		_1a3c0b78e_pushErr((*_self_.alloc)._field_s.ptr(), _81469_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3bbdb08_scopeChecker> _8197_root = _1a3bc1ea2_getRoot(_self_);;
	if ((!((*((*((*(_8197_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1a3c0b78e_pushErr((*(_self_))._field_s, _81469_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1a3c0bb02_pushSuggestion((*(_self_))._field_s, jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_81438_m))))._field_Func=(*_8197_root.alloc)._field_owner;
}



inline void _1a3bc5527_checkExpr(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b42472_Expr> _82730_expr) {
	jule::Ptr<_1a3c8b555_Eval> _8287_eval = _1a3c13c3b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0));;
	(*(_8287_eval))._field_ignored=true;
	jule::Ptr<_1a3c8982d_Data> _8307_d = _1a3ca97b5_evalExpr(_8287_eval, _82730_expr);;
	if (((_8307_d == nullptr) || ((*(_8307_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_8307_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a8ce4454:;
			{
				jule::Ptr<_1a3b6e9ee_BuiltinErrorCallExprModel> _8398_m = (*(_8307_d))._field_Model.unsafe_cast_ptr<_1a3b6e9ee_BuiltinErrorCallExprModel>();;
				_1a3bc526e_processErrorCall(_self_, &(_8398_m), (*(_82730_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_8307_d, &__jule_any_type23)}));
			}
		}
		else if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33) {
			_case_begin_1a8ce4a81:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_8307_d, &__jule_any_type23)}));
			}
		}
		else {
			_case_begin_1a8ce4a1a:;
			{
				_1a3c0b78e_pushErr((*(_self_))._field_s, (*(_82730_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8ce49b5:;
	};
}



inline jule::Ptr<_1a3bb6a68_If> _1a3bc5868_checkIf(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b53a8d_If> _85828_i) {
	jule::Ptr<_1a3bb664a_Scope> _8597_s = _1a3bc4b53_checkChild(_self_, &((*(_85828_i))._field_Scope));;
	jule::Ptr<_1a3c8982d_Data> _8617_d = _1a3ca97b5_evalExpr(_1a3c13c3b_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)), (*_85828_i.alloc)._field_Expr);;
	if ((_8617_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a3cc3801_Prim> _8667_prim = _1a3cbd378_Prim((*(_8617_d))._field_Kind.ptr());;
	if (((_8667_prim == nullptr) || (!(_1a3cc6a02_IsBool(_8667_prim.ptr()))))) {
		_1a3c0b78e_pushErr((*(_self_))._field_s, (*((*_85828_i.alloc)._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a3bb6a68_If>(_1a3bb6a68_If{._field_Expr=(*(_8617_d))._field_Model, ._field_Scope=_8597_s});;
}



inline jule::Ptr<_1a3bb6d65_Else> _1a3bc5ba9_checkElse(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b53e67_Else> _87830_e) {
	return jule::new_ptr<_1a3bb6d65_Else>(_1a3bb6d65_Else{._field_Scope=_1a3bc4b53_checkChild(_self_, &((*(_87830_e))._field_Scope))});;
}



inline void _1a3bc5e62_checkConditional(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b5441d_Conditional> _88437_conditional) {
	jule::Ptr<_1a3bb7283_Conditional> _8857_c = jule::new_ptr<_1a3bb7283_Conditional>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_8857_c, &__jule_any_type34)}));
	(*_8857_c.alloc)._field_Elifs=jule::Slice<jule::Ptr<_1a3bb6a68_If>>::alloc(0LL, ((*(_88437_conditional))._field_Tail.len() + 1LL));
	(*_8857_c.alloc)._field_Elifs=jule::append((*_8857_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1a3bb6a68_If>>::make({_1a3bc5868_checkIf(_self_, (*_88437_conditional.alloc)._field_Head)}));
	{
		auto expr = &((*_88437_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d012b8:;
		if (it != expr_end) {
			jule::Ptr<_1a3b53a8d_If> _89115_elif = *it;
			{
				(*_8857_c.alloc)._field_Elifs=jule::append((*_8857_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1a3bb6a68_If>>::make({_1a3bc5868_checkIf(_self_, _89115_elif)}));
			}
			_iter_next_1a8d012b8:;
			++it;
			goto _iter_begin_1a8d012b8;
		}
		_iter_end_1a8d012b8:;
	};
	if (((*_88437_conditional.alloc)._field_Default != nullptr)) {
		(*_8857_c.alloc)._field_Default=_1a3bc5ba9_checkElse(_self_, (*_88437_conditional.alloc)._field_Default);
	};
}



inline void _1a3bc643a_checkIterScopeSsc(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Uintptr _90034_it, jule::Ptr<_1a3b4d15e_ScopeTree> _90051_tree, jule::Ptr<_1a3bb664a_Scope>* _90074_s, jule::Ptr<_1a3bbdb08_scopeChecker> _90089_ssc) {
	(*(_90089_ssc))._field_it=_90034_it;
	_1a3bc4416_checkChildSsc(_self_, &(_90051_tree), _90074_s, &(_90089_ssc));
}



inline jule::Ptr<_1a3bb664a_Scope> _1a3bc68e1_checkIterScopeSc(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Uintptr _90533_it, jule::Ptr<_1a3b4d15e_ScopeTree> _90550_tree, jule::Ptr<_1a3bbdb08_scopeChecker> _90572_ssc) {
	jule::Ptr<_1a3bb664a_Scope> _9067_scope = _1a3bc3ee8_getChild(_self_.ptr());;
	_1a3bc643a_checkIterScopeSsc(_self_, _90533_it, _90550_tree, &(_9067_scope), _90572_ssc);
	return _9067_scope;;
}



inline jule::Ptr<_1a3bb664a_Scope> _1a3bc6cdc_checkIterScope(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Uintptr _91131_it, jule::Ptr<_1a3b4d15e_ScopeTree>* _91149_tree) {
	jule::Ptr<_1a3bbdb08_scopeChecker> _9127_ssc = _1a3bd0b92_newChildChecker(_self_);;
	return _1a3bc68e1_checkIterScopeSc(_self_, _91131_it, (*(_91149_tree)), _9127_ssc);;
}



inline void _1a3bc7095_checkInfIter(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b51b02_Iter>* _91634_it) {
	jule::Ptr<_1a3bb7580_InfIter> _9177_kind = jule::new_ptr<_1a3bb7580_InfIter>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_9177_kind, &__jule_any_type35)}));
	(*_9177_kind.alloc)._field_Scope=_1a3bc6cdc_checkIterScope(_self_, static_cast<jule::Uintptr>(_9177_kind), &((*((*(_91634_it))))._field_Scope));
}



inline void _1a3bc734d_checkWhileIter(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b51b02_Iter>* _92236_it) {
	jule::Ptr<_1a3b5242c_WhileKind> _9237_wh = (*((*(_92236_it))))._field_Kind.cast_ptr<_1a3b5242c_WhileKind>(&__jule_any_type36);;
	if ((((*(_9237_wh))._field_Expr == nullptr) && ((*_9237_wh.alloc)._field_Next == nullptr))) {
		_1a3bc7095_checkInfIter(_self_, _92236_it);
		return;;
	};
	jule::Ptr<_1a3bb7a36_WhileIter> _9297_kind = jule::new_ptr<_1a3bb7a36_WhileIter>();;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_9297_kind, &__jule_any_type37)}));
	(*_9297_kind.alloc)._field_Scope=_1a3bc6cdc_checkIterScope(_self_, static_cast<jule::Uintptr>(_9297_kind), &((*((*(_92236_it))))._field_Scope));
	if (((*_9237_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1a3c8982d_Data> _9348_d = _1a3ca97b5_evalExpr(_1a3c13c3b_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)), (*_9237_wh.alloc)._field_Expr);;
		if ((_9348_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1a3cc3801_Prim> _9394_prim = _1a3cbd378_Prim((*(_9348_d))._field_Kind.ptr());;
		if ((_9394_prim == nullptr)) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*((*(_92236_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1a3cc6a02_IsBool(_9394_prim.ptr())))) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*((*(_92236_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*_9297_kind.alloc)._field_Expr=(*(_9348_d))._field_Model;
	};
	if (_1a3b52790_IsWhileNext(_9237_wh)) {
		if ((!(_1a3bb5acd_isValidAstStForNextSt(&((*_9237_wh.alloc)._field_Next))))) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*_9237_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _9594_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1a3bce542_checkNode(_self_, &((*_9237_wh.alloc)._field_Next));
		if ((_9594_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _9629_st = (*((*(_self_))._field_scope))._field_Stmts[_9594_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _9594_n);;
			if ((!(_1a3bb5d97_isValidStForNextSt(&(_9629_st))))) {
				_1a3c0b78e_pushErr((*(_self_))._field_s, (*_9237_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*_9297_kind.alloc)._field_Next=_9629_st;
		};
	};
}



inline void _1a3bc776b_checkComptimeRangeIter(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b51b02_Iter>* _97244_it, jule::Ptr<_1a3bb8482_RangeIter>* _97260_kind, jule::Ptr<_1a3c8982d_Data>* _97283_d) {
	if (((*((*(_97260_kind))))._field_KeyA != nullptr)) {
		if (((!(_1a3c0b0b8_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a3bc3448_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1a3c0bb02_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_97260_kind))))._field_KeyB != nullptr)) {
		if (((!(_1a3c0b0b8_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1a3bc3448_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1a3c0bb02_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1a3b52d34_RangeKind> _9867_rang = (*((*(_97244_it))))._field_Kind.cast_ptr<_1a3b52d34_RangeKind>(&__jule_any_type38);;
	_1a3bd1247_makeComptimeRange(_97283_d);
	if ((*((*(_97283_d))))._field_Decl) {
		_1a3c0b78e_pushErr((*(_self_))._field_s, (*((*(_9867_rang))._field_Expr))._field_Token, jule::Str::lit("type @ is not supports comptime iterations", 42), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_97283_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	_1a3c7e6e1_rangeChecker _9937_rc = _1a3c7e6e1_rangeChecker{._field_sc=_self_, ._field_rang=_9867_rang, ._field_Kind=(*(_97260_kind)), ._field_d=(*(_97283_d))};;
	jule::Bool _9993_ok = _1a3c81704_check(&_9937_rc);;
	if ((!(_9993_ok))) {
		return;;
	};
	jule::Ptr<_1a3b8eb84_comptimeRange> _10047_comptime = _1a3cc1722_comptimeRange((*((*(_97283_d))))._field_Kind);;
	((_1a3b8e964_comptimeRangeKindMptrData*)(*(_10047_comptime))._field_kind.safe_type())->_1a3b8e15b_ready((*(_10047_comptime))._field_kind.data, &((*((*(_97260_kind))))._field_KeyA), &((*((*(_97260_kind))))._field_KeyB));
	jule::I64 _10067_i = 0LL;;
	jule::I64 _10073_errors = (*(*(_self_))._field_s.alloc)._field_errors.len();;
	for (; (_10067_i < ((_1a3b8e964_comptimeRangeKindMptrData*)(*_10047_comptime.alloc)._field_kind.safe_type())->_1a3b8e810_len((*_10047_comptime.alloc)._field_kind.data)); (_10067_i)++) {
		{
			jule::Ptr<_1a3bbdb08_scopeChecker> _10098_ssc = _1a3bd0b92_newChildChecker(_self_);;
			jule::Ptr<_1a3bb664a_Scope> _10108_scope = _1a3bc3ee8_getChild(_self_);;
			if (((*((*(_97260_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Scope=_10108_scope;
				(*((*(_10098_ssc))._field_table))._field_Vars=jule::append((*(*(_10098_ssc))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a3c31c26_Var>>::make({(*((*(_97260_kind))))._field_KeyA}));
			};
			if (((*((*(_97260_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Scope=_10108_scope;
				(*(*(_10098_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_10098_ssc))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a3c31c26_Var>>::make({(*((*(_97260_kind))))._field_KeyB}));
			};
			((_1a3b8e964_comptimeRangeKindMptrData*)(*_10047_comptime.alloc)._field_kind.safe_type())->_1a3b8e579_step((*_10047_comptime.alloc)._field_kind.data, _10067_i, &((*((*(_97260_kind))))._field_KeyA), &((*((*(_97260_kind))))._field_KeyB));
			_1a3bc4416_checkChildSsc(_self_, &((*((*(_97244_it))))._field_Scope), &(_10108_scope), &(_10098_ssc));
			if ((_10073_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1a8e82290;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_10108_scope, &__jule_any_type21)}));
		}
	_iter_next_1a8e82290:;
	}
	_iter_end_1a8e82290:;;
}



inline void _1a3bc7a24_checkRangeIter(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b51b02_Iter>* _102936_it) {
	jule::Ptr<_1a3b52d34_RangeKind> _10307_rang = (*((*(_102936_it))))._field_Kind.cast_ptr<_1a3b52d34_RangeKind>(&__jule_any_type38);;
	jule::Ptr<_1a3c8982d_Data> _10327_d = _1a3ca9474_evalExpr1(_1a3c13c3b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)), (*(_10307_rang))._field_Expr);;
	if ((_10327_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3bb8482_RangeIter> _10377_kind = jule::new_ptr<_1a3bb8482_RangeIter>(_1a3bb8482_RangeIter{._field_Expr=_10327_d, });;
	if ((*((*(_102936_it))))._field_Comptime) {
		_1a3bc776b_checkComptimeRangeIter(_self_, _102936_it, &(_10377_kind), &(_10327_d));
		return;;
	};
	if (_1a3cc0435_comptime((*(_10327_d))._field_Kind.ptr())) {
		_1a3c0b78e_pushErr((*(_self_))._field_s, (*((*_10307_rang.alloc)._field_Expr))._field_Token, jule::Str::lit("comptime expressions cannot be iterated at runtime", 50), jule::Slice<jule::Any>());
		_1a3c0bb02_pushSuggestion((*(_self_))._field_s, jule::Str::lit("declarate comptime iteration like: const for ...", 48), jule::Slice<jule::Any>());
		return;;
	};
	_1a3c7e6e1_rangeChecker _10517_rc = _1a3c7e6e1_rangeChecker{._field_sc=_self_, ._field_rang=_10307_rang, ._field_Kind=_10377_kind, ._field_d=_10327_d};;
	jule::Bool _10573_ok = _1a3c81704_check(&_10517_rc);;
	if ((!(_10573_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_10377_kind, &__jule_any_type39)}));
	jule::Ptr<_1a3bbdb08_scopeChecker> _10647_ssc = _1a3bd0b92_newChildChecker(_self_);;
	jule::Ptr<_1a3bb664a_Scope> _10657_scope = _1a3bc3ee8_getChild(_self_);;
	if (((*(_10377_kind))._field_KeyA != nullptr)) {
		if (((!(_1a3c0b0b8_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1a3bc3448_isDuplicatedIdent(_self_, 0LLU, &((*(*(_10377_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*(*(_10377_kind))._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_10377_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1a3c0bb02_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*(_10377_kind))._field_KeyA.alloc)._field_Scope=_10657_scope;
		(*((*(_10647_ssc))._field_table))._field_Vars=jule::append((*(*(_10647_ssc))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a3c31c26_Var>>::make({(*_10377_kind.alloc)._field_KeyA}));
	};
	if (((*_10377_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1a3c0b0b8_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1a3bc3448_isDuplicatedIdent(_self_, 0LLU, &((*(*(_10377_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*(*(_10377_kind))._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_10377_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1a3c0bb02_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*(_10377_kind))._field_KeyB.alloc)._field_Scope=_10657_scope;
		(*(*(_10647_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_10647_ssc))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a3c31c26_Var>>::make({(*_10377_kind.alloc)._field_KeyB}));
	};
	_1a3bc643a_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_10377_kind), (*((*(_102936_it))))._field_Scope, &(_10657_scope), _10647_ssc);
	(*_10377_kind.alloc)._field_Scope=_10657_scope;
}



inline void _1a3bc7ccc_checkIter(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b51b02_Iter> _108930_it) {
	if (_1a3b51e65_IsInf(_108930_it.ptr())) {
		if ((*_108930_it.alloc)._field_Comptime) {
			_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*_108930_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
			return;;
		};
		_1a3bc7095_checkInfIter(_self_, &(_108930_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_108930_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a8e99d8a:;
			{
				if ((*_108930_it.alloc)._field_Comptime) {
					_1a3c0b78e_pushErr((*(_self_))._field_s, (*_108930_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
					return;;
				};
				_1a3bc734d_checkWhileIter(_self_, &(_108930_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1a8e9b61c:;
			{
				_1a3bc7a24_checkRangeIter(_self_, &(_108930_it));
			}
		}
		else {
			_case_begin_1a8e9b122:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1a8e9b0bc:;
	};
}



inline jule::Bool _1a3bc811d_checkValidContLabel(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Uintptr _111336_it) {
	jule::Ptr<_1a3bbdb08_scopeChecker> _11147_scope = _self_;;
	_julec_label_1a8e9d60d:;
	if (((*(_11147_scope))._field_it == _111336_it)) {
		return true;;
	};
	if (((*_11147_scope.alloc)._field_parent != nullptr)) {
		_11147_scope=(*_11147_scope.alloc)._field_parent;
		goto _julec_label_1a8e9d60d;
	};
	return false;;
}



inline jule::Bool _1a3bc845e_checkValidBreakLabel(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Uintptr _112937_ptr) {
	jule::Ptr<_1a3bbdb08_scopeChecker> _11307_scope = _self_;;
	_julec_label_1a8ea06a9:;
	if (((*(_11307_scope))._field_it == _112937_ptr)) {
		return true;;
	};
	if (((*_11307_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _11384_mtch = static_cast<jule::Uintptr>((*(((_1a3bbb386_Case*)((*_11307_scope.alloc)._field_cse))))._field_Owner);;
		if ((_11384_mtch == _112937_ptr)) {
			return true;;
		};
	};
	if (((*_11307_scope.alloc)._field_parent != nullptr)) {
		_11307_scope=(*_11307_scope.alloc)._field_parent;
		goto _julec_label_1a8ea06a9;
	};
	return false;;
}



inline jule::Ptr<_1a3bb8817_ContSt> _1a3bc87a0_checkContValidScope(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b535d7_ContSt> _115236_c) {
	if (_1a3bc1963_isDeferred(_self_)) {
		_1a3c0b78e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_115236_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_115236_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1a3bb8817_ContSt>();;
	};
	jule::Ptr<_1a3bbdb08_scopeChecker> _11627_scope = _self_;;
	_julec_label_1a8ea35e1:;
	{
		
		if (((((*_11627_scope.alloc)._field_it == 0LLU) && ((*_11627_scope.alloc)._field_parent != nullptr)) && ((*_11627_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1a8ea53d4:;
			{
				_11627_scope=(*_11627_scope.alloc)._field_parent;
				goto _julec_label_1a8ea35e1;
			}
		}
		else if (((*_11627_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1a8ea546c:;
			{
				return jule::new_ptr<_1a3bb8817_ContSt>(_1a3bb8817_ContSt{._field_It=(*_11627_scope.alloc)._field_it});;
			}
		}
		_match_end_1a8ea534b:;
	};
	_1a3c0b78e_pushErr((*(_self_))._field_s, (*_115236_c.alloc)._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a3bc8a58_checkCont(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b535d7_ContSt> _117626_c) {
	jule::Ptr<_1a3bb8817_ContSt> _11777_cont = _1a3bc87a0_checkContValidScope(_self_, _117626_c);;
	if ((_11777_cont == nullptr)) {
		return;;
	};
	if (((*(_117626_c))._field_Label != nullptr)) {
		jule::Ptr<_1a3bbc585_scopeLabel> _11838_label = _1a3bb3b64_findLabelParent(&((*(*(_117626_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_11838_label == nullptr)) {
			_1a3c0b78e_pushErr((*_self_.alloc)._field_s.ptr(), (*_117626_c.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*(_117626_c))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_11838_label))._field_used=true;
		if ((((*(_11838_label))._field_pos + 1LL) >= (*((*((*(_11838_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*(_117626_c))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I64 _11964_i = ((*(_11838_label))._field_pos + 1LL);;
		if ((_11964_i >= (*(*((*(_11838_label))._field_scope))._field_scope.alloc)._field_Stmts.len())) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _12009_st = (*(*((*(_11838_label))._field_scope))._field_scope.alloc)._field_Stmts[_11964_i];;
			{
				auto &_match_expr{ _12009_st };
				
				if (_match_expr.type == &__jule_any_type35) {
					_case_begin_1a8eb0bd6:;
					{
						(*(_11777_cont))._field_It=static_cast<jule::Uintptr>(_12009_st.unsafe_cast_ptr<_1a3bb7580_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1a8eb0db2:;
					{
						(*(_11777_cont))._field_It=static_cast<jule::Uintptr>(_12009_st.unsafe_cast_ptr<_1a3bb8482_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1a8eb0e28:;
					{
						(*(_11777_cont))._field_It=static_cast<jule::Uintptr>(_12009_st.unsafe_cast_ptr<_1a3bb7a36_WhileIter>());
					}
				}
				else {
					_case_begin_1a8eb0d4b:;
					{
						_1a3c0b78e_pushErr((*(_self_))._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*(_117626_c))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1a8eb0ce6:;
			};
		};
	};
	if (((*(_11777_cont))._field_It != 0LLU)) {
		if ((!(_1a3bc811d_checkValidContLabel(_self_, (*(_11777_cont))._field_It)))) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*(_117626_c))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_11777_cont, &__jule_any_type40)}));
}



inline void _1a3bc8d11_checkLabel(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4a722_LabelSt> _122331_l) {
	if ((_1a3bc28ba_findLabel(_self_.ptr(), &((*(_122331_l))._field_Ident)) != nullptr)) {
		_1a3c0b78e_pushErr((*_self_.alloc)._field_s.ptr(), (*_122331_l.alloc)._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*_122331_l.alloc)._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1a3bb8edd_Label> _12297_label = jule::new_ptr<_1a3bb8edd_Label>(_1a3bb8edd_Label{._field_Ident=(*_122331_l.alloc)._field_Ident});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_12297_label, &__jule_any_type20)}));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),jule::Slice<jule::Ptr<_1a3bbc585_scopeLabel>>::make({jule::new_ptr<_1a3bbc585_scopeLabel>(_1a3bbc585_scopeLabel{._field_token=(*_122331_l.alloc)._field_Token, ._field_label=_12297_label, ._field_pos=((*(*(_self_))._field_scope.alloc)._field_Stmts.len() - 1LL), ._field_scope=_self_, })}));
}



inline void _1a3bc90b9_pushGoto(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4aaeb_GotoSt> _124229_gt) {
	jule::Ptr<_1a3bb93b7_GotoSt> _12437_st = jule::new_ptr<_1a3bb93b7_GotoSt>(_1a3bb93b7_GotoSt{._field_Ident=(*((*(_124229_gt))._field_Label))._field_Kind, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_12437_st, &__jule_any_type41)}));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),jule::Slice<jule::Ptr<_1a3bbcb18_scopeGoto>>::make({jule::new_ptr<_1a3bbcb18_scopeGoto>(_1a3bbcb18_scopeGoto{._field_st=_12437_st, ._field_gt=_124229_gt, ._field_scope=_self_, ._field_pos=((*(*(_self_))._field_scope.alloc)._field_Stmts.len() - 1LL)})}));
}



inline void _1a3bc9372_checkPostfix(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4badb_AssignSt> _125633_a) {
	if (((*(_125633_a))._field_Left.len() > 1LL)) {
		_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*_125633_a.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3b42472_Expr> _12627_expr = (*((*(_125633_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1a3c8982d_Data> _12637_d = _1a3ca97b5_evalExpr(_1a3c13c3b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)), _12627_expr);;
	if ((_12637_d == nullptr)) {
		return;;
	};
	_1a3bb5814_checkAssign(&((*_self_.alloc)._field_s), &(_12637_d), nullptr, (*_125633_a.alloc)._field_Setter);
	if ((_1a3cbd895_Ptr((*(_12637_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a3ccaae4_Ptr> _12718_ptr = _1a3cbd895_Ptr((*(_12637_d))._field_Kind);;
		if (_1a3ccb62d_IsUnsafe(_12718_ptr.ptr())) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*_125633_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_125633_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*(_12637_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1a3cbd378_Prim((*(_12637_d))._field_Kind.ptr()) == nullptr) || (!(_1b5747692_IsNum((*(_1a3cbd378_Prim((*(_12637_d))._field_Kind)))._field_Kind))))) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*_125633_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_125633_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*(_12637_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1a3bb9791_Postfix>(_1a3bb9791_Postfix{._field_Expr=(*(_12637_d))._field_Model, ._field_Op=(*((*_125633_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type42)}));
}



inline jule::Bool _1a3bc96b3_isNewAssignIdent(_1a3bbdb08_scopeChecker* _self_, jule::Str _128932_ident) {
	if ((_1a3b2a449_IsIgnoreIdent(_128932_ident) || (_128932_ident).empty())) {
		return false;;
	};
	return (_1a3c8752e_defByIdent((*(_self_))._field_table.ptr(), &(_128932_ident), false) == nullptr);;
}



inline void _1a3bc996b_removeInteriorMutRisk(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3c8982d_Data>* _130243_d) {
	jule::Ptr<_1a3b61cbb_StructIns> _13033_s = _1a3cbe8eb_Struct((*((*(_130243_d))))._field_Kind.ptr());;
	if ((_13033_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3bbdb08_scopeChecker> _13073_root = _1a3bc2238_getHardRoot(_self_);;
	if (((*((*(_13073_root))._field_owner))._field_Owner != _13033_s)) {
		return;;
	};
	(*((*(_130243_d))))._field_Mutable=true;
}



inline jule::Bool _1a3bc9e22_checkStructureAssignOp(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _131644_s, jule::Ptr<_1a3b4badb_AssignSt>* _131664_a, jule::Ptr<_1a3c8982d_Data>* _131683_r) {
	jule::Ptr<_1a3b770cd_FnIns> _131911_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_131664_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1a8e68e7a:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1a8e68b39:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1a8e68ba0:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1a8e68c16:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1a8e68c7c:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1a8e68ce3:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1a8e68d59:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1a8e6a4cb:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1a8e6a542:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1a8e6a5a8:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1a8e683ec:;
			{
				_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_131664_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_131664_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a3b62140_Str((*(_131644_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1a8e68ac3:;
	};
	if ((_131911_overload == nullptr)) {
		_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_131664_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_131664_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a3b62140_Str((*(_131644_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1a3b76055_ParamIns> _13517_p = (*(_131911_overload))._field_Params[1LL];;
	return _1a3c1429c_checkAssignType((*(_self_))._field_s, (*((*(_13517_p))._field_Decl))._field_Reference, &((*_13517_p.alloc)._field_Kind), _131683_r, (*((*(_131664_a))))._field_Setter);;
}



inline void _1a3bca1ca_checkSingleAssign(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4badb_AssignSt>* _135539_a) {
	jule::Ptr<_1a3c8982d_Data> _135611_l = nullptr;;
	if ((!(_1a3b2a449_IsIgnoreIdent((*((*((*(_135539_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1a3b42472_Expr> _13598_expr = (*((*((*(_135539_a))))._field_Left[0LL]))._field_Expr;;
		_135611_l=_1a3ca97b5_evalExpr(_1a3c13c3b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)), _13598_expr);
		if ((_135611_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a3c8b555_Eval> _136611_eval = nullptr;;
	if ((_135611_l != nullptr)) {
		_136611_eval=_1a3c138ea_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0), (*(_135611_l))._field_Kind);
	} else {
		_136611_eval=_1a3c13c3b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0));
	};
	(*(_136611_eval))._field_unsafety=_1a3bc0eb2_isUnsafe(_self_);
	jule::Ptr<_1a3c8982d_Data> _13737_r = _1a3ca97b5_evalExpr(_136611_eval, (*((*(_135539_a))))._field_Right);;
	if ((_13737_r == nullptr)) {
		return;;
	};
	_1a3bc996b_removeInteriorMutRisk(_self_, &(_13737_r));
	if ((_135611_l == nullptr)) {
		if (_1a3cbc08b_Void((*(_13737_r))._field_Kind.ptr())) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*((*((*(_135539_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_13737_r, &__jule_any_type23)}));
		return;;
	};
	if ((!(_1a3bb5814_checkAssign(&((*_self_.alloc)._field_s), &(_135611_l), _13737_r, (*((*(_135539_a))))._field_Setter)))) {
		return;;
	};
	if ((_1a3cc019e_Tup((*(_13737_r))._field_Kind) != nullptr)) {
		_1a3c0b78e_pushErr((*(_self_))._field_s, (*((*(_135539_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3b65c26_OperandExprModel> _13977_lm = jule::new_ptr<_1a3b65c26_OperandExprModel>(_1a3b65c26_OperandExprModel{._field_Kind=(*(_135611_l))._field_Kind, ._field_Model=(*(_135611_l))._field_Model});;
	jule::Ptr<_1a3b65c26_OperandExprModel> _14017_rm = jule::new_ptr<_1a3b65c26_OperandExprModel>(_1a3b65c26_OperandExprModel{._field_Kind=(*(_13737_r))._field_Kind, ._field_Model=(*(_13737_r))._field_Model});;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1a3bb9c47_Assign>(_1a3bb9c47_Assign{._field_Left=_13977_lm, ._field_Right=_14017_rm, ._field_Op=(*((*(_135539_a))))._field_Setter}), &__jule_any_type43)}));
	if (((*((*((*(_135539_a))))._field_Setter))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1a3c73295_assignTypeChecker _14088_checker = _1a3c73295_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_135611_l))._field_Kind, ._field_d=_13737_r, ._field_errorToken=(*((*(_135539_a))))._field_Setter};;
		if (_1a3c74263_check(&_14088_checker)) {
			(*(_14017_rm))._field_Model=(*(_13737_r))._field_Model;
			(*(_13977_lm))._field_Model=(*(_135611_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1a3b61cbb_StructIns> _14207_strct = _1a3cbe8eb_Struct((*(_135611_l))._field_Kind);;
	if ((_14207_strct != nullptr)) {
		_1a3bc9e22_checkStructureAssignOp(_self_, &(_14207_strct), _135539_a, &(_13737_r));
		return;;
	};
	jule::U64 _14253_id = (*(*((*(_135539_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_135539_a))))._field_Setter.alloc)._field_Id=_1a3bd1016_removeEqFromOp((*(*((*(_135539_a))))._field_Setter.alloc)._field_Id);
	_1a3cabc18_binaryEval _14277_solver = static__1a3cac642_new(_136611_eval, (*((*(_135539_a))))._field_Setter);;
	({
		jule::Ptr<_1a3c8982d_Data> ___jule_assign_arg = _135611_l;
		jule::Ptr<_1a3c8982d_Data> _1___jule_assign_arg = _13737_r;
		_14277_solver._field_l = ___jule_assign_arg;
		_14277_solver._field_r = _1___jule_assign_arg;
	});
	_1a3cb1789_evalOp(&_14277_solver);
	(*(*((*(_135539_a))))._field_Setter.alloc)._field_Id=_14253_id;
}



inline void _1a3bca75d_processEndPartOfMultiAssign(_1a3bbdb08_scopeChecker* _self_, jule::Ptr<_1a3bba1ed_MultiAssign>* _143348_st, jule::Ptr<_1a3b4badb_AssignSt>* _14348_a, jule::Ptr<_1a3b4b558_AssignLeft>* _143427_lexpr, jule::Ptr<_1a3c8982d_Data>* _143452_l, jule::Ptr<_1a3c8982d_Data>* _143467_r) {
	if (((!((*((*(_143427_lexpr))))._field_Reference)) && _1a3b2a449_IsIgnoreIdent((*((*(_143427_lexpr))))._field_Ident))) {
		if (_1a3cbc08b_Void((*((*(_143467_r))))._field_Kind.ptr())) {
			_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_14348_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1a3c8982d_Data>> &__jule_push_dest = (*((*(_143348_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_14348_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_143427_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type44) {
				_case_begin_1a66a8e92:;
				{
					if ((!(_1a3bc96b3_isNewAssignIdent(_self_, (*((*(_143427_lexpr))))._field_Ident)))) {
						goto _julec_label_1a8ebe002;
					};
				}
			}
			else {
				_case_begin_1a66a7b2d:;
				{
					if (((*((*(_143427_lexpr))))._field_Mutable || (*((*(_143427_lexpr))))._field_Reference)) {
						_1a3c0b78e_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_1a8ebe002;
				}
			}
			_match_end_1a66a7ac8:;
		};
		if (_1a3bc3448_isDuplicatedIdent(_self_, 0LLU, &((*((*(_143427_lexpr))))._field_Ident))) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143427_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1a3c0bb02_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1a3bc1446_stop(_self_);
			return;;
		};
		if (_1a3b2a449_IsIgnoreIdent((*((*(_143427_lexpr))))._field_Ident)) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a3c31c26_Var> _14668_v = jule::new_ptr<_1a3c31c26_Var>(_1a3c31c26_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_143427_lexpr))))._field_Token, ._field_Ident=(*((*(_143427_lexpr))))._field_Ident, ._field_Mutable=(*((*(_143427_lexpr))))._field_Mutable, ._field_Reference=(*((*(_143427_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Expr=(*((*(_14348_a))))._field_Right, ._field_Data=(*(_143467_r))}), });;
		_1a3c23245_checkVarValue((*(_self_))._field_s, &(_14668_v));
		{ jule::Slice<jule::Ptr<_1a3c8982d_Data>> &__jule_push_dest = (*((*(_143348_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=(*((*_14668_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_14668_v.alloc)._field_Mutable, ._field_Reference=(*_14668_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_14668_v))._field_Constant)), ._field_Model=jule::Any(_14668_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1a3c31c26_Var>> &__jule_push_dest = (*((*(_143348_st))))._field_Decls; __jule_push_dest.push(_14668_v); };
		(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a3c31c26_Var>>::make({_14668_v}));
		return;;
	};
	_julec_label_1a8ebe002:;
	if (((*((*(_143427_lexpr))))._field_Mutable || (*((*(_143427_lexpr))))._field_Reference)) {
		_1a3c0b78e_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143427_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1a3bb5814_checkAssign(&((*(_self_))._field_s), _143452_l, (*(_143467_r)), (*((*(_143427_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1a3c18636_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_143452_l))))._field_Mutable, false, &((*((*(_143452_l))))._field_Kind), _143467_r, &((*((*(_14348_a))))._field_Setter));
	_1a3c73295_assignTypeChecker _15047_checker = _1a3c73295_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_143452_l))))._field_Kind, ._field_d=(*(_143467_r)), ._field_errorToken=(*((*(_14348_a))))._field_Setter};;
	_1a3c74263_check(&_15047_checker);
	{ jule::Slice<jule::Ptr<_1a3c8982d_Data>> &__jule_push_dest = (*((*(_143348_st))))._field_Left; __jule_push_dest.push((*(_143452_l))); };
}



inline void _1a3bcaa16_checkMultiAssign(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4badb_AssignSt>* _151438_a) {
	jule::Ptr<_1a3c8982d_Data> _15157_rd = _1a3ca97b5_evalExpr(_1a3c13c3b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)), (*((*(_151438_a))))._field_Right);;
	if ((_15157_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a3c8982d_Data>> _15197_right = _1a3bb49de_getDatasFromTupleData(&(_15157_rd));;
	if ((_15197_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_15197_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1a8ec64e3:;
				{
					jule::Ptr<_1a3b68a81_IndexingExprModel> _15239_iem = (*(_15197_right[0LL]))._field_Model.unsafe_cast_ptr<_1a3b68a81_IndexingExprModel>();;
					if ((_1a3cbee18_Map((*((*(_15239_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_15197_right=jule::Slice<jule::Ptr<_1a3c8982d_Data>>::make({jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=(*(_1a3cbee18_Map((*((*(_15239_iem))._field_Expr))._field_Kind)))._field_Val, }),jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, })});
					};
				}
			}
			_match_end_1a8ec6449:;
		};
	};
	{
		
		if (((*((*(_151438_a))))._field_Left.len() > _15197_right.len())) {
			_case_begin_1a8ec5e3d:;
			{
				_1a3c0b78e_pushErr((*(_self_))._field_s, (*((*(_151438_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_151438_a))))._field_Left.len() < _15197_right.len())) {
			_case_begin_1a8ec6823:;
			{
				_1a3c0b78e_pushErr((*(_self_))._field_s, (*((*(_151438_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a8ec659d:;
	};
	jule::Ptr<_1a3bba1ed_MultiAssign> _15427_st = jule::new_ptr<_1a3bba1ed_MultiAssign>(_1a3bba1ed_MultiAssign{._field_Right=(*(_15157_rd))._field_Model});;
	{
		auto expr = &((*((*(_151438_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8ecb4e8:;
		if (it != expr_end) {
			jule::I64 _15457_i = it - expr->begin();
			{
				jule::Ptr<_1a3b4b558_AssignLeft> _15468_lexpr = (*((*(_151438_a))))._field_Left[_15457_i];;
				jule::Ptr<_1a3c8982d_Data> _154712_l = nullptr;;
				if ((!(_1a3b2a449_IsIgnoreIdent((*(_15468_lexpr))._field_Ident)))) {
					if ((!((*((*(_151438_a))))._field_Declarative))) {
						goto _julec_label_1a8ed04b9;
					};
					if (((*_15468_lexpr.alloc)._field_Mutable && (*_15468_lexpr.alloc)._field_Reference)) {
						goto _julec_label_1a8ed1a2b;
					};
					{
						auto &_match_expr{ (*((*(_15468_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type44) {
							_case_begin_1a8ece60b:;
							{
								if (_1a3bc96b3_isNewAssignIdent(_self_, (*_15468_lexpr.alloc)._field_Ident)) {
									goto _julec_label_1a8ed1a2b;
								};
							}
						}
						_match_end_1a8ece595:;
					};
					_julec_label_1a8ed04b9:;
					_154712_l=_1a3ca97b5_evalExpr(_1a3c13c3b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)), (*_15468_lexpr.alloc)._field_Expr);
					if ((_154712_l == nullptr)) {
						goto _iter_next_1a8ecb4e8;
					};
					_julec_label_1a8ed1a2b:;
				};
				jule::Ptr<_1a3c8982d_Data> _15688_r = _15197_right[_15457_i];;
				_1a3bc996b_removeInteriorMutRisk(_self_, &(_15688_r));
				_1a3bca75d_processEndPartOfMultiAssign(_self_, &(_15427_st), _151438_a, &(_15468_lexpr), &(_154712_l), &(_15688_r));
			}
			_iter_next_1a8ecb4e8:;
			++it;
			_15457_i++;
			goto _iter_begin_1a8ecb4e8;
		}
		_iter_end_1a8ecb4e8:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_15427_st, &__jule_any_type46)}));
}



inline void _1a3bcacbe_checkAssignSt(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4badb_AssignSt> _157534_a) {
	{
		
		if (_1a3b2c5e4_IsPostfixOp((*((*(_157534_a))._field_Setter))._field_Id)) {
			_case_begin_1a8ed449b:;
			{
				_1a3bc9372_checkPostfix(_self_, _157534_a);
			}
		}
		else if (((*(_157534_a))._field_Left.len() == 1LL)) {
			_case_begin_1a8ed415a:;
			{
				_1a3bca1ca_checkSingleAssign(_self_, &(_157534_a));
			}
		}
		else {
			_case_begin_1a8ed40e4:;
			{
				_1a3bcaa16_checkMultiAssign(_self_, &(_157534_a));
			}
		}
		_match_end_1a8ed3ee5:;
	};
}



inline jule::Ptr<_1a3bb664a_Scope> _1a3bcb1ba_checkCaseScope(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3bbb386_Case>* _158632_c, jule::Ptr<_1a3b4d15e_ScopeTree>* _158647_tree) {
	jule::Ptr<_1a3bbdb08_scopeChecker> _15877_ssc = _1a3bd0b92_newChildChecker(_self_);;
	(*(_15877_ssc))._field_cse=static_cast<jule::Uintptr>((*(_158632_c)));
	return _1a3bc4812_checkChildSc(_self_, _158647_tree, &(_15877_ssc));;
}



inline jule::Ptr<_1a3bbb386_Case> _1a3bcb72b_checkCase(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3bba85d_Match> _159230_m, jule::I64 _159241_i, jule::Ptr<_1a3b55111_Case> _159253_c, jule::Ptr<_1a3c8982d_Data> _159272_expr) {
	jule::Ptr<_1a3bbb386_Case> _15937_case = (*(_159230_m))._field_Cases[_159241_i];;
	(*(_15937_case))._field_Exprs=jule::Slice<jule::Ptr<_1a3c8982d_Data>>::alloc(0LL, (*(_159253_c))._field_Exprs.len());
	jule::Bool _15957_constMatched = false;;
	jule::Ptr<_1a3c8b555_Eval> _15967_eval = _1a3c13c3b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0));;
	{
		auto expr = &((*_159253_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8ed9946:;
		if (it != expr_end) {
			jule::Ptr<_1a3b42472_Expr> _159715_e = *it;
			{
				jule::Ptr<_1a3c8982d_Data> _15988_d = _1a3ca89a1_evalExprKind(_15967_eval, (*(_159715_e))._field_Kind);;
				if ((_15988_d == nullptr)) {
					goto _iter_next_1a8ed9946;
				};
				if ((*_159230_m.alloc)._field_TypeMatch) {
					(*_15937_case.alloc)._field_Exprs=jule::append((*_15937_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a3c8982d_Data>>::make({_15988_d}));
					if ((_1a3bb4725_countMatchType(&(_159230_m), &((*(_15988_d))._field_Kind)) > 1LL)) {
						_1a3c0b78e_pushErr((*(_self_))._field_s, (*_159715_e.alloc)._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_15988_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*_159230_m.alloc)._field_Comptime) {
						_15957_constMatched=(_15957_constMatched || _1a3cbb431_Equal((*(_159272_expr))._field_Kind, (*(_15988_d))._field_Kind));
					} else {
						if ((_1a3cbddb2_TypeEnum((*(_159272_expr))._field_Kind) != nullptr)) {
							_1a3c14c09_checkTypeCompatibility((*(_self_))._field_s, &((*(_159272_expr))._field_Kind), &((*(_15988_d))._field_Kind), &((*_159715_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1a3b87a7d_Trait> _16177_trt = _1a3cbeb82_Trait((*(_159272_expr))._field_Kind);;
							if ((_16177_trt != nullptr)) {
								_1a3c14c09_checkTypeCompatibility((*(_self_))._field_s, &((*(_159272_expr))._field_Kind), &((*(_15988_d))._field_Kind), &((*_159715_e.alloc)._field_Token));
							};
						};
					};
					goto _iter_next_1a8ed9946;
				};
				if ((*(_15988_d))._field_Decl) {
					_1a3c0b78e_pushErr((*(_self_))._field_s, (*_159715_e.alloc)._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1a3c0bb02_pushSuggestion((*(_self_))._field_s, jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1a8ed9946;
				};
				if ((*_159230_m.alloc)._field_Comptime) {
					if (((!(_1a3c8a235_IsConst(_15988_d.ptr()))) && (_1a3cc1c3e_comptimeTypeInfo((*(_15988_d))._field_Kind) == nullptr))) {
						_1a3c0b78e_pushErr((*(_self_))._field_s, (*_159715_e.alloc)._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
						_1a3c0bb02_pushSuggestion((*(_self_))._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
						goto _iter_next_1a8ed9946;
					};
					if ((!(_15957_constMatched))) {
						if (_1a3c8a235_IsConst(_15988_d.ptr())) {
							_15957_constMatched=(_1a3c8a235_IsConst(_159272_expr.ptr()) && _1b574d753_Eq((*(_15988_d))._field_Constant.ptr(), (*((*(_159272_expr))._field_Constant))));
						} else {
							jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _16427_exprCti = _1a3cc1c3e_comptimeTypeInfo((*(_159272_expr))._field_Kind);;
							_15957_constMatched=((_16427_exprCti != nullptr) && _1a3cbb431_Equal((*(_1a3cc1c3e_comptimeTypeInfo((*(_15988_d))._field_Kind)))._field_base, (*_16427_exprCti.alloc)._field_base));
						};
					};
				};
				(*_15937_case.alloc)._field_Exprs=jule::append((*_15937_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a3c8982d_Data>>::make({_15988_d}));
				if ((((!((*_159230_m.alloc)._field_Comptime)) || (_1a3cc1c3e_comptimeTypeInfo((*(_159272_expr))._field_Kind) == nullptr)) || (_1a3cc1c3e_comptimeTypeInfo((*(_15988_d))._field_Kind) == nullptr))) {
					_1a3c73295_assignTypeChecker _16529_checker = _1a3c73295_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_159272_expr))._field_Kind, ._field_d=_15988_d, ._field_errorToken=(*_159715_e.alloc)._field_Token};;
					_1a3c74263_check(&_16529_checker);
				};
			}
			_iter_next_1a8ed9946:;
			++it;
			goto _iter_begin_1a8ed9946;
		}
		_iter_end_1a8ed9946:;
	};
	if (((!((*_159230_m.alloc)._field_Comptime)) || _15957_constMatched)) {
		(*_15937_case.alloc)._field_Scope=_1a3bcb1ba_checkCaseScope(_self_, &(_15937_case), &((*_159253_c.alloc)._field_Scope));
	};
	return _15937_case;;
}



inline void _1a3bcbb49_checkCases(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b5592a_MatchCase>* _166732_m, jule::Ptr<_1a3bba85d_Match> _166751_rm, jule::Ptr<_1a3c8982d_Data> _166767_expr) {
	(*(_166751_rm))._field_Cases=jule::Slice<jule::Ptr<_1a3bbb386_Case>>::alloc(0LL, (*((*(_166732_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_166732_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8eec052:;
		if (it != expr_end) {
			jule::I64 _16697_i = it - expr->begin();
			{
				jule::Ptr<_1a3bbb386_Case> _16708_case = jule::new_ptr<_1a3bbb386_Case>(_1a3bbb386_Case{._field_Owner=_166751_rm, });;
				if ((_16697_i > 0LL)) {
					(*((*_166751_rm.alloc)._field_Cases[(_16697_i - 1LL)]))._field_Next=_16708_case;
				};
				(*_166751_rm.alloc)._field_Cases=jule::append((*_166751_rm.alloc)._field_Cases,jule::Slice<jule::Ptr<_1a3bbb386_Case>>::make({_16708_case}));
			}
			_iter_next_1a8eec052:;
			++it;
			_16697_i++;
			goto _iter_begin_1a8eec052;
		}
		_iter_end_1a8eec052:;
	};
	if ((((*_166751_rm.alloc)._field_Default != nullptr) && ((*((*(_166732_m))))._field_Cases.len() > 0LL))) {
		(*((*_166751_rm.alloc)._field_Cases[((*_166751_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_166751_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_166732_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a900062c:;
		if (it != expr_end) {
			jule::I64 _16838_i = it - expr->begin();
			jule::Ptr<_1a3b55111_Case> _168315_c = *it;
			{
				_1a3bcb72b_checkCase(_self_, _166751_rm, _16838_i, _168315_c, _166767_expr);
			}
			_iter_next_1a900062c:;
			++it;
			_16838_i++;
			goto _iter_begin_1a900062c;
		}
		_iter_end_1a900062c:;
	};
}



inline jule::Ptr<_1a3bbb386_Case> _1a3bcc045_checkDefault(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3bba85d_Match> _168833_m, jule::Ptr<_1a3b53e67_Else> _168848_d) {
	jule::Ptr<_1a3bbb386_Case> _16897_def = jule::new_ptr<_1a3bbb386_Case>(_1a3bbb386_Case{._field_Owner=_168833_m, });;
	(*(_16897_def))._field_Scope=_1a3bcb1ba_checkCaseScope(_self_, &(_16897_def), &((*(_168848_d))._field_Scope));
	return _16897_def;;
}



inline void _1a3bcc3a8_checkComptimePanic(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b27a62_Token> _169639_callToken, jule::Ptr<_1a3bb664a_Scope>* _169659_s) {
	if (((*((*(_169659_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _17003_stmt = (*((*(_169659_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _17003_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a9003d39:;
			{
				jule::Ptr<_1a3c8982d_Data> _17034_d = _17003_stmt.unsafe_cast_ptr<_1a3c8982d_Data>();;
				{
					auto &_match_expr{ (*(_17034_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type28) {
						_case_begin_1a9004cb3:;
						{
							jule::Ptr<_1a3b6c942_BuiltinPanicCallExprModel> _17069_m = (*(_17034_d))._field_Model.unsafe_cast_ptr<_1a3b6c942_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_17069_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1a9005e5c:;
									{
										jule::Ptr<_1b5747b9d_Const> _17096_c = (*(_17069_m))._field_Expr.unsafe_cast_ptr<_1b5747b9d_Const>();;
										if ((!(_1b574c422_IsStr(_17096_c.ptr())))) {
											goto _match_end_1a9005de6;
										};
										if ((_169639_callToken == nullptr)) {
											jule::Ptr<_1a3bbdb08_scopeChecker> _171411_root = _1a3bc2238_getHardRoot(_self_);;
											if (((*(_171411_root))._field_calledFrom == nullptr)) {
												_169639_callToken=(*(_17069_m))._field_Token;
											} else {
												_169639_callToken=(*(_171411_root))._field_calledFrom;
											};
										};
										_1a3c0b78e_pushErr((*_self_.alloc)._field_s.ptr(), _169639_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1b5749d26_ReadStr(_17096_c), &__jule_any_type4)}));
										_1a3bc1446_stop(_self_);
									}
								}
								_match_end_1a9005de6:;
							};
						}
					}
					_match_end_1a9004c4c:;
				};
			}
		}
		_match_end_1a9003cd4:;
	};
}



inline void _1a3bcc71b_processConstMatch(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3bba85d_Match>* _172839_tm, jule::Ptr<_1a3b5592a_MatchCase>* _172856_m) {
	{
		auto expr = &((*((*(_172839_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90d6e3e:;
		if (it != expr_end) {
			jule::I64 _17298_i = it - expr->begin();
			jule::Ptr<_1a3bbb386_Case> _172915_c = *it;
			{
				if (((*(_172915_c))._field_Scope != nullptr)) {
					jule::Ptr<_1a3b27a62_Token> _173113_token = nullptr;;
					if (((!((*((*(_172839_tm))))._field_TypeMatch)) && ((*(*(_172915_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_173113_token=(*((*((*((*(_172856_m))))._field_Cases[_17298_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1a3bcc3a8_checkComptimePanic(_self_, _173113_token, &((*_172915_c.alloc)._field_Scope));
					(*((*(_172839_tm))))._field_Default=_172915_c;
					(*((*(_172839_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1a90d6e3e:;
			++it;
			_17298_i++;
			goto _iter_begin_1a90d6e3e;
		}
		_iter_end_1a90d6e3e:;
	};
	if (((*((*(_172856_m))))._field_Default != nullptr)) {
		(*((*(_172839_tm))))._field_Cases=nullptr;
		(*((*(_172839_tm))))._field_Default=_1a3bcc045_checkDefault(_self_, (*(_172839_tm)), (*((*(_172856_m))))._field_Default);
		if (((*((*(_172839_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1a3b27a62_Token> _174513_token = nullptr;;
			if ((!((*((*(_172839_tm))))._field_TypeMatch))) {
				_174513_token=(*((*((*((*(_172856_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1a3bcc3a8_checkComptimePanic(_self_, _174513_token, &((*(*((*(_172839_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_172839_tm))))._field_Cases=nullptr;
	};
}



inline void _1a3bcc9c4_checkTypeMatch(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b5592a_MatchCase>* _175736_m) {
	jule::Ptr<_1a3c8982d_Data> _17587_d = _1a3ca8ce2_eval1(_1a3c13c3b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)), (*((*(_175736_m))))._field_Expr);;
	if ((_17587_d == nullptr)) {
		return;;
	};
	if ((*((*(_175736_m))))._field_Comptime) {
		jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _17648_cti = _1a3cc1c3e_comptimeTypeInfo((*(_17587_d))._field_Kind.ptr());;
		if ((_17648_cti == nullptr)) {
			if ((!((*(_17587_d))._field_Decl))) {
				_1a3c0b78e_pushErr((*(_self_))._field_s, (*((*((*(_175736_m))))._field_Expr))._field_Token, jule::Str::lit("comptime type-match expressions can take only type declarations", 63), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_17587_d))._field_Kind=(*(_17648_cti))._field_base;
		};
	} else if (((*(_17587_d))._field_Decl || (!(((((_1a3cbd378_Prim((*(_17587_d))._field_Kind.ptr()) != nullptr) && _1a3cc701e_IsAny(_1a3cbd378_Prim((*(_17587_d))._field_Kind).ptr())) || (_1a3cbeb82_Trait((*(_17587_d))._field_Kind) != nullptr)) || (_1a3cbddb2_TypeEnum((*(_17587_d))._field_Kind) != nullptr)))))) {
		_1a3c0b78e_pushErr((*(_self_))._field_s, (*((*((*(_175736_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3bba85d_Match> _17787_tm = jule::new_ptr<_1a3bba85d_Match>(_1a3bba85d_Match{._field_Expr=_17587_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_175736_m))))._field_Comptime, });;
	if (((!((*(_17787_tm))._field_Comptime)) && ((*((*(_175736_m))))._field_Default != nullptr))) {
		(*_17787_tm.alloc)._field_Default=_1a3bcc045_checkDefault(_self_, _17787_tm, (*((*(_175736_m))))._field_Default);
	};
	_1a3bcbb49_checkCases(_self_, _175736_m, _17787_tm, _17587_d);
	if ((*_17787_tm.alloc)._field_Comptime) {
		_1a3bcc71b_processConstMatch(_self_, &(_17787_tm), _175736_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_17787_tm, &__jule_any_type47)}));
}



inline void _1a3bccc7c_checkCommonMatch(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b5592a_MatchCase>* _179938_m) {
	jule::Ptr<_1a3c8982d_Data> _180011_d = nullptr;;
	if (((*((*(_179938_m))))._field_Expr == nullptr)) {
		_180011_d=jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, ._field_Constant=static__1b5748671_NewBool(true)});
		(*(_180011_d))._field_Model=jule::Any((*_180011_d.alloc)._field_Constant, &__jule_any_type19);
	} else {
		_180011_d=_1a3ca9474_evalExpr1(_1a3c13c3b_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)), (*((*(_179938_m))))._field_Expr);
		if ((_180011_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_179938_m))))._field_Comptime) {
		if ((!(_1a3bd1742_canComptimeMatch(&(_180011_d))))) {
			_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_179938_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			_1a3c0bb02_pushSuggestion((*(_self_))._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1a3cc0435_comptime((*(_180011_d))._field_Kind.ptr())) {
		_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_179938_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		_1a3c0bb02_pushSuggestion((*(_self_))._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3bba85d_Match> _18267_mc = jule::new_ptr<_1a3bba85d_Match>(_1a3bba85d_Match{._field_Expr=_180011_d, ._field_Comptime=(*((*(_179938_m))))._field_Comptime, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_18267_mc, &__jule_any_type47)}));
	if (((!((*(_18267_mc))._field_Comptime)) && ((*((*(_179938_m))))._field_Default != nullptr))) {
		(*_18267_mc.alloc)._field_Default=_1a3bcc045_checkDefault(_self_, _18267_mc, (*((*(_179938_m))))._field_Default);
	};
	_1a3bcbb49_checkCases(_self_, _179938_m, _18267_mc, _180011_d);
	if ((*_18267_mc.alloc)._field_Comptime) {
		_1a3bcc71b_processConstMatch(_self_, &(_18267_mc), _179938_m);
	};
}



inline void _1a3bcd035_checkMatch(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b5592a_MatchCase> _184931_m) {
	if ((*(_184931_m))._field_TypeMatch) {
		_1a3bcc9c4_checkTypeMatch(_self_, &(_184931_m));
		return;;
	};
	_1a3bccc7c_checkCommonMatch(_self_, &(_184931_m));
}



inline void _1a3bcd2dd_checkFall(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4ade8_FallSt> _185726_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1a3bc1963_isDeferred(_self_))) {
		_1a3c0b78e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_185726_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1a3bbb386_Case* _18657_case = ((_1a3bbb386_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_18657_case))._field_Owner))._field_Comptime) {
		_1a3c0b78e_pushErr((*(_self_))._field_s, (*_185726_f.alloc)._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_18657_case))._field_Next == nullptr)) {
		_1a3c0b78e_pushErr((*(_self_))._field_s, (*_185726_f.alloc)._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1a3c0bb02_pushSuggestion((*(_self_))._field_s, jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1a3bbba7e_FallSt>(_1a3bbba7e_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_18657_case))._field_Next)}), &__jule_any_type48)}));
}



inline jule::Ptr<_1a3bb8be1_BreakSt> _1a3bcd62e_checkBreakWithLabel(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b5320d_BreakSt> _188036_b) {
	jule::Ptr<_1a3bb8be1_BreakSt> _18817_brk = _1a3bcd970_checkPlainBreak(_self_, _188036_b);;
	if ((_18817_brk == nullptr)) {
		return nullptr;;
	};
	(*(_18817_brk))._field_It=0LLU;
	(*(_18817_brk))._field_Mtch=0LLU;
	jule::Ptr<_1a3bbc585_scopeLabel> _18917_label = _1a3bb3b64_findLabelParent(&((*((*(_188036_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_18917_label == nullptr)) {
		_1a3c0b78e_pushErr((*_self_.alloc)._field_s.ptr(), (*_188036_b.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_18917_label))._field_used=true;
	if ((((*(_18917_label))._field_pos + 1LL) >= (*((*((*(_18917_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1a3c0b78e_pushErr((*(_self_))._field_s, (*_188036_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _19043_i = ((*(_18917_label))._field_pos + 1LL);;
	if ((_19043_i >= (*(*((*(_18917_label))._field_scope))._field_scope.alloc)._field_Stmts.len())) {
		_1a3c0b78e_pushErr((*(_self_))._field_s, (*_188036_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _19088_st = (*(*((*(_18917_label))._field_scope))._field_scope.alloc)._field_Stmts[_19043_i];;
		{
			auto &_match_expr{ _19088_st };
			
			if (_match_expr.type == &__jule_any_type35) {
				_case_begin_1a901c726:;
				{
					(*(_18817_brk))._field_It=static_cast<jule::Uintptr>(_19088_st.unsafe_cast_ptr<_1a3bb7580_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1a901c902:;
				{
					(*(_18817_brk))._field_It=static_cast<jule::Uintptr>(_19088_st.unsafe_cast_ptr<_1a3bb8482_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1a901c968:;
				{
					(*(_18817_brk))._field_It=static_cast<jule::Uintptr>(_19088_st.unsafe_cast_ptr<_1a3bb7a36_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1a901c9ce:;
				{
					(*(_18817_brk))._field_Mtch=static_cast<jule::Uintptr>(_19088_st.unsafe_cast_ptr<_1a3bba85d_Match>());
				}
			}
			else {
				_case_begin_1a901c88b:;
				{
					_1a3c0b78e_pushErr((*(_self_))._field_s, (*_188036_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1a901c836:;
		};
	};
	if (((*(_18817_brk))._field_It != 0LLU)) {
		if ((!(_1a3bc845e_checkValidBreakLabel(_self_, (*(_18817_brk))._field_It)))) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*_188036_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_18817_brk))._field_Mtch != 0LLU)) {
		if ((!(_1a3bc845e_checkValidBreakLabel(_self_, (*(_18817_brk))._field_Mtch)))) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*_188036_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	return _18817_brk;;
}



inline jule::Ptr<_1a3bb8be1_BreakSt> _1a3bcd970_checkPlainBreak(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b5320d_BreakSt> _193832_b) {
	if (_1a3bc1963_isDeferred(_self_)) {
		_1a3c0b78e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_193832_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3bbdb08_scopeChecker> _19447_scope = _self_;;
	_julec_label_1a9024b4b:;
	{
		
		if ((((((*_19447_scope.alloc)._field_it == 0LLU) && ((*_19447_scope.alloc)._field_cse == 0LLU)) && ((*_19447_scope.alloc)._field_parent != nullptr)) && ((*_19447_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1a9025b5d:;
			{
				_19447_scope=(*_19447_scope.alloc)._field_parent;
				goto _julec_label_1a9024b4b;
			}
		}
		else if (((*_19447_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1a9025be6:;
			{
				return jule::new_ptr<_1a3bb8be1_BreakSt>(_1a3bb8be1_BreakSt{._field_It=(*_19447_scope.alloc)._field_it, });;
			}
		}
		else if (((*_19447_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1a9025c5c:;
			{
				return jule::new_ptr<_1a3bb8be1_BreakSt>(_1a3bb8be1_BreakSt{._field_Mtch=static_cast<jule::Uintptr>((*(((_1a3bbb386_Case*)((*_19447_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1a9025a81:;
	};
	_1a3c0b78e_pushErr((*(_self_))._field_s, (*_193832_b.alloc)._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a3bcdc28_checkBreak(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b5320d_BreakSt> _196027_b) {
	if (((*(_196027_b))._field_Label != nullptr)) {
		jule::Ptr<_1a3bb8be1_BreakSt> _19628_brk = _1a3bcd62e_checkBreakWithLabel(_self_, _196027_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_19628_brk, &__jule_any_type49)}));
		return;;
	};
	jule::Ptr<_1a3bb8be1_BreakSt> _19677_brk = _1a3bcd970_checkPlainBreak(_self_, _196027_b);;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_19677_brk, &__jule_any_type49)}));
}



inline void _1a3bcded1_checkRet(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b51382_RetSt> _197129_r) {
	if (_1a3bc1963_isDeferred(_self_)) {
		_1a3c0b78e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_197129_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3bbbe25_RetSt> _19767_rt = jule::new_ptr<_1a3bbbe25_RetSt>(_1a3bbbe25_RetSt{._field_Func=(*(_1a3bc1ea2_getRoot(_self_)))._field_owner, });;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_19767_rt, &__jule_any_type50)}));
	jule::Ptr<_1a3c81e52_retTypeChecker> _19817_rtc = jule::new_ptr<_1a3c81e52_retTypeChecker>(_1a3c81e52_retTypeChecker{._field_sc=_self_, ._field_f=(*(_19767_rt))._field_Func, ._field_errorToken=(*_197129_r.alloc)._field_Token, });;
	jule::Bool _19863_ok = _1a3c82e0e_check(_19817_rtc.ptr(), &((*_197129_r.alloc)._field_Expr));;
	if ((!(_19863_ok))) {
		return;;
	};
	if (((*_197129_r.alloc)._field_Expr != nullptr)) {
		(*_19767_rt.alloc)._field_Expr=(*_19817_rtc.alloc)._field_model;
	};
}



inline void _1a3bce289_checkUseExpr(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b42d46_UseExpr> _199629_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1a3c0b78e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_199629_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1a3bc1963_isDeferred(_self_)) {
		_1a3c0b78e_pushErr((*(_self_))._field_s, (*_199629_ue.alloc)._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1a3c0b78e_pushErr((*(_self_))._field_s, (*_199629_ue.alloc)._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1a3bce542_checkNode(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Any* _201231_node) {
	{
		auto &_match_expr{ (*(_201231_node)) };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a90367ea:;
			{
				_1a3bc4e0b_checkAnonScope(_self_, (*(_201231_node)).cast_ptr<_1a3b4d15e_ScopeTree>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a9036168:;
			{
				_1a3bc3701_checkVarDecl(_self_, (*(_201231_node)).cast_ptr<_1a3b50ea8_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a90364ba:;
			{
				_1a3bc3c62_checkTypeAliasDecl(_self_, (*(_201231_node)).cast_ptr<_1a3b54b5a_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1a9036531:;
			{
				_1a3bc5527_checkExpr(_self_, (*(_201231_node)).cast_ptr<_1a3b42472_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1a9036597:;
			{
				_1a3bc5e62_checkConditional(_self_, (*(_201231_node)).cast_ptr<_1a3b5441d_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1a903690a:;
			{
				_1a3bc7ccc_checkIter(_self_, (*(_201231_node)).cast_ptr<_1a3b51b02_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1a9036971:;
			{
				_1a3bc8a58_checkCont(_self_, (*(_201231_node)).cast_ptr<_1a3b535d7_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1a90369d7:;
			{
				_1a3bc8d11_checkLabel(_self_, (*(_201231_node)).cast_ptr<_1a3b4a722_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1a9036a4d:;
			{
				_1a3bc90b9_pushGoto(_self_, (*(_201231_node)).cast_ptr<_1a3b4aaeb_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1a9036ab4:;
			{
				_1a3bcacbe_checkAssignSt(_self_, (*(_201231_node)).cast_ptr<_1a3b4badb_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1a9036b2a:;
			{
				_1a3bcd035_checkMatch(_self_, (*(_201231_node)).cast_ptr<_1a3b5592a_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1a9036b91:;
			{
				_1a3bcd2dd_checkFall(_self_, (*(_201231_node)).cast_ptr<_1a3b4ade8_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1a9036c07:;
			{
				_1a3bcdc28_checkBreak(_self_, (*(_201231_node)).cast_ptr<_1a3b5320d_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1a9036c7e:;
			{
				_1a3bcded1_checkRet(_self_, (*(_201231_node)).cast_ptr<_1a3b51382_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1a9036d06:;
			{
				_1a3bce289_checkUseExpr(_self_, (*(_201231_node)).cast_ptr<_1a3b42d46_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1a9036333:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1a90362cd:;
	};
}



inline void _1a3bce740_checkResult(jule::Ptr<_1a3bbdb08_scopeChecker> _self_) {
	_1a3b4c9ee_Stmt _20507_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _20507_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1a9040804:;
			{
				jule::Ptr<_1a3b42d46_UseExpr> _20538_ue = _20507_stmt._field_Data.unsafe_cast_ptr<_1a3b42d46_UseExpr>();;
				jule::Ptr<_1a3c8982d_Data> _20548_d = _1a3ca97b5_evalExpr(_1a3c13c3b_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)), (*(_20538_ue))._field_Expr);;
				if ((_20548_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_20548_d, &__jule_any_type23)}));
				jule::Ptr<_1a3c81e52_retTypeChecker> _20598_rtc = jule::new_ptr<_1a3c81e52_retTypeChecker>(_1a3c81e52_retTypeChecker{._field_sc=_self_, ._field_types=_1a3b782cc_Types((*_self_.alloc)._field_result.ptr()), ._field_errorToken=(*((*_20538_ue.alloc)._field_Expr))._field_Token, });;
				_1a3c82e0e_check(_20598_rtc.ptr(), &((*_20538_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1a90413c6:;
			{
				jule::Ptr<_1a3b42472_Expr> _20668_expr = _20507_stmt._field_Data.unsafe_cast_ptr<_1a3b42472_Expr>();;
				jule::Ptr<_1a3c8982d_Data> _20678_d = _1a3ca97b5_evalExpr(_1a3c13c3b_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)), _20668_expr);;
				if ((_20678_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_20678_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1a8337635:;
						{
							jule::Ptr<_1a3b6e9ee_BuiltinErrorCallExprModel> _20739_m = (*(_20678_d))._field_Model.unsafe_cast_ptr<_1a3b6e9ee_BuiltinErrorCallExprModel>();;
							_1a3bc526e_processErrorCall(_self_, &(_20739_m), (*(_20668_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_20678_d, &__jule_any_type23)}));
						}
					}
					else {
						_case_begin_1a8337910:;
						{
							return;;
						}
					}
					_match_end_1a83378aa:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1a9040a8a:;
			{
				_1a3bce542_checkNode(_self_, &(_20507_stmt._field_Data));
			}
		}
		else {
			_case_begin_1a9040a24:;
			{
				_1a3bce542_checkNode(_self_, &(_20507_stmt._field_Data));
				return;;
			}
		}
		_match_end_1a90409be:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1a3bce93d_checkTree(jule::Ptr<_1a3bbdb08_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _20957_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_20957_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _20957_n); ((*_self_.alloc)._field_i)++) {
		{
			_1a3b4c9ee_Stmt _21038_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1a3bce542_checkNode(_self_, &(_21038_stmt._field_Data));
			if (_1a3bc16cc_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1a833c393:;
	}
	_iter_end_1a833c393:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1a3bce740_checkResult(_self_);
	};
}



inline void _1a3bceca1_checkGoto(_1a3bbdb08_scopeChecker* _self_, jule::Ptr<_1a3bbcb18_scopeGoto>* _211430_gt, jule::Ptr<_1a3bbc585_scopeLabel>* _211451_label) {
	jule::Ptr<_1a3bbdb08_scopeChecker> _21157_gtsc = (*((*(_211430_gt))))._field_scope;;
	while ((((*(_21157_gtsc))._field_childIndex - 1LL) > (*((*((*(_211451_label))))._field_scope))._field_childIndex)) {
		{
			_21157_gtsc=(*_21157_gtsc.alloc)._field_parent;
		}
	_iter_next_1a8340a8e:;
	}
	_iter_end_1a8340a8e:;;
	jule::I64 _21207_n = 0LL;;
	if (((*_21157_gtsc.alloc)._field_scope == (*(*((*(_211451_label))))._field_scope.alloc)._field_scope)) {
		if (((*((*(_211430_gt))))._field_pos > (*((*(_211451_label))))._field_pos)) {
			return;;
		};
		_21207_n=(*((*(_211430_gt))))._field_pos;
	};
	jule::I64 _21337_i = ((*((*(_211451_label))))._field_pos - 1LL);;
	if ((_21207_n == 0LL)) {
		{
			auto expr = &((*((*(*((*(_211451_label))))._field_scope.alloc)._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a83441ad:;
			if (it != expr_end) {
				jule::I64 _21368_j = it - expr->begin();
				jule::Any _213611_stmt = *it;
				{
					if (_1a3bb43a1_stmtIsGotoScope(&(_213611_stmt), &((*_21157_gtsc.alloc)._field_scope))) {
						_21207_n=_21368_j;
						goto _iter_end_1a83441ad;
					};
				}
				_iter_next_1a83441ad:;
				++it;
				_21368_j++;
				goto _iter_begin_1a83441ad;
			}
			_iter_end_1a83441ad:;
		};
	};
	for (; (_21337_i >= _21207_n); (_21337_i)--) {
		{
			jule::Any _21468_stmt = (*(*((*((*(_211451_label))))._field_scope))._field_scope.alloc)._field_Stmts[_21337_i];;
			if (_1a3bb6161_stmtIsDef(&(_21468_stmt))) {
				_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_211430_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*(*((*(_211430_gt))))._field_gt.alloc)._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1a83436eb:;
	}
	_iter_end_1a83436eb:;;
}



inline void _1a3bcee9e_checkGotos(_1a3bbdb08_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a834492d:;
		if (it != expr_end) {
			jule::Ptr<_1a3bbcb18_scopeGoto> _215515_gt = *it;
			{
				jule::Ptr<_1a3bbc585_scopeLabel> _21568_label = _1a3bc304c_findLabelAll(_self_, &((*((*((*(_215515_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_21568_label == nullptr)) {
					_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*(*(_215515_gt))._field_gt.alloc)._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_215515_gt))._field_gt))._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1a834492d;
				};
				(*((*_215515_gt.alloc)._field_st))._field_Label=(*(_21568_label))._field_label;
				(*(_21568_label))._field_used=true;
				_1a3bceca1_checkGoto(_self_, &(_215515_gt), &(_21568_label));
			}
			_iter_next_1a834492d:;
			++it;
			goto _iter_begin_1a834492d;
		}
		_iter_end_1a834492d:;
	};
}



inline void _1a3bd019c_checkLabels(_1a3bbdb08_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a09cc4:;
		if (it != expr_end) {
			jule::Ptr<_1a3bbc585_scopeLabel> _216810_l = *it;
			{
				if ((!((*(_216810_l))._field_used))) {
					_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*_216810_l.alloc)._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*_216810_l.alloc)._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1a8a09cc4:;
			++it;
			goto _iter_begin_1a8a09cc4;
		}
		_iter_end_1a8a09cc4:;
	};
}



inline void _1a3bd039a_checkVars(_1a3bbdb08_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a0bb61:;
		if (it != expr_end) {
			jule::Ptr<_1a3c31c26_Var> _217610_v = *it;
			{
				if (((((!((*(_217610_v))._field_Used)) && (!((*_217610_v.alloc)._field_Constant))) && (!(_1a3b2a449_IsIgnoreIdent((*_217610_v.alloc)._field_Ident)))) && (!(_1a3b2a713_IsAnonIdent((*_217610_v.alloc)._field_Ident))))) {
					_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*_217610_v.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_217610_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1a8a0bb61:;
			++it;
			goto _iter_begin_1a8a0bb61;
		}
		_iter_end_1a8a0bb61:;
	};
}



inline void _1a3bd0598_checkAliases(_1a3bbdb08_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a0e317:;
		if (it != expr_end) {
			jule::Ptr<_1a3cb9e35_TypeAlias> _218410_a = *it;
			{
				if ((((!((*(_218410_a))._field_Used)) && (!(_1a3b2a449_IsIgnoreIdent((*_218410_a.alloc)._field_Ident)))) && (!(_1a3b2a713_IsAnonIdent((*_218410_a.alloc)._field_Ident))))) {
					_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*_218410_a.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_218410_a.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1a8a0e317:;
			++it;
			goto _iter_begin_1a8a0e317;
		}
		_iter_end_1a8a0e317:;
	};
}



inline void _1a3bd090b_check(jule::Ptr<_1a3bbdb08_scopeChecker> _self_, jule::Ptr<_1a3b4d15e_ScopeTree>* _219227_tree, jule::Ptr<_1a3bb664a_Scope>* _219250_s) {
	(*((*(_219250_s))))._field_Deferred=(*((*(_219227_tree))))._field_Deferred;
	(*((*(_219250_s))))._field_Unsafety=(*((*(_219227_tree))))._field_Unsafety;
	jule::I64 _21963_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_219227_tree));
	(*_self_.alloc)._field_scope=(*(_219250_s));
	_1a3bce93d_checkTree(_self_);
	if ((_21963_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1a3bd039a_checkVars(_self_);
		_1a3bd0598_checkAliases(_self_);
		if (_1a3bc1248_isRoot(_self_)) {
			_1a3bcee9e_checkGotos(_self_);
			_1a3bd019c_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1a3bbdb08_scopeChecker> _1a3bd0b92_newChildChecker(jule::Ptr<_1a3bbdb08_scopeChecker> _self_) {
	jule::Ptr<_1a3bbdb08_scopeChecker> _22167_base = _1a3bb3427_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_22167_base))._field_parent=_self_;
	(*_22167_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_22167_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_22167_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _22167_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3bbdb08_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "captured:" << _Src._field_captured << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3bd2237_directiveChecker_eq(_1a3bd2237_directiveChecker *_self_, _1a3bd2237_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _1a3bd2644_checkCdef(_1a3bd2237_directiveChecker* _self_, jule::Ptr<_1a3b3c55a_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a8a1709a:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a3b740ec_Fn>()))._field_Binded) {
					goto _match_end_1a8a172cb;
				};
				goto _case_begin_1a8a17331;
			}
		}
		else {
			_case_begin_1a8a17331:;
			{
				_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a8a172cb:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a3bd28ec_checkTypedef(_1a3bd2237_directiveChecker* _self_, jule::Ptr<_1a3b3c55a_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a8a1a004:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a3b5e03d_Struct>()))._field_Binded) {
					goto _match_end_1a8a1a235;
				};
				goto _case_begin_1a8a1a28a;
			}
		}
		else {
			_case_begin_1a8a1a28a:;
			{
				_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a8a1a235:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a3bd2ba5_checkNamespace(_1a3bd2237_directiveChecker* _self_, jule::Ptr<_1a3b3c55a_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a8a1ce5d:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a3b5e03d_Struct>()))._field_Binded))) {
					_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a8a1d25a:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a3b740ec_Fn>()))._field_Binded))) {
					_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a8a1d2c1:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a3c31c26_Var>()))._field_Binded))) {
					_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1a8a1d1e4:;
			{
				_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a8a1d18e:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1a3b27a62_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), _733_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_733_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a3c0b78e_pushErr((*(_self_))._field_s, _733_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*_733_arg.alloc)._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a8a28c5a:;
			{
				if ((_1a3cb31c5_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1a3b3c55a_Directive> _909_typedef = jule::new_ptr<_1a3b3c55a_Directive>(_1a3b3c55a_Directive{._field_Tag=(*((*(_4835_d))))._field_Tag, });;
					(*((*(_909_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),jule::Slice<jule::Ptr<_1a3b3c55a_Directive>>::make({_909_typedef}));
				};
			}
		}
		_match_end_1a8a28be4:;
	};
}



inline void _1a3bd2e5d_checkDeprecated(_1a3bd2237_directiveChecker* _self_, jule::Ptr<_1a3b3c55a_Directive>* _9936_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a8a2ae05:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a3b5e03d_Struct>()))._field_Binded) {
					_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a8a2b18b:;
			{
				jule::Ptr<_1a3b740ec_Fn> _1068_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a3b740ec_Fn>();;
				if ((((*(_1068_f))._field_Binded || _1a3b74a8c_IsEntryPoint(_1068_f)) || _1a3b74d23_IsInit(_1068_f))) {
					_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a8a2b202:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a3c31c26_Var>()))._field_Binded) {
					_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1a8a2b125:;
			{
				_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a8a2b0c0:;
	};
	if (((*((*(_9936_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9936_d))))._field_Args.len() > 1LL)) {
		_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1a3b27a62_Token> _1253_arg = (*((*(_9936_d))))._field_Args[0LL];;
	if (((*(_1253_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a3c0b78e_pushErr((*(_self_))._field_s, _1253_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1253_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a3c0b78e_pushErr((*(_self_))._field_s, _1253_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9936_d))))._field_Args[0LL]))._field_Kind=(*_1253_arg.alloc)._field_Kind.slice(1LL, ((*_1253_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1a3bd3216_checkTest(_1a3bd2237_directiveChecker* _self_, jule::Ptr<_1a3b3c55a_Directive>* _13926_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a8a3277a:;
			{
				jule::Ptr<_1a3b740ec_Fn> _1424_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a3b740ec_Fn>();;
				if ((((!((*(_1424_f))._field_Binded)) && (!(_1a3b74d23_IsInit(_1424_f)))) && (!(_1a3b74a8c_IsEntryPoint(_1424_f))))) {
					goto _match_end_1a8a37263;
				};
				if (_1a3b74806_IsMethod(_1424_f)) {
					_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*_1424_f.alloc)._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1a8a37263;
				};
				goto _case_begin_1a8a372b8;
			}
		}
		else {
			_case_begin_1a8a372b8:;
			{
				_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_13926_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13926_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a8a37263:;
	};
	if (((*((*(_13926_d))))._field_Args.len() > 0LL)) {
		_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_13926_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a3bd34be_checkDirective(_1a3bd2237_directiveChecker* _self_, jule::Ptr<_1a3b3c55a_Directive>* _16035_d) {
	{
		auto &_match_expr{ (*((*((*(_16035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1a8a3be38:;
			{
				_1a3bd2644_checkCdef(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1a8a3be9e:;
			{
				_1a3bd28ec_checkTypedef(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1a8a3c015:;
			{
				_1a3bd2ba5_checkNamespace(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1a8a3c07b:;
			{
				_1a3bd2e5d_checkDeprecated(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1a8a3c0e2:;
			{
				_1a3bd3216_checkTest(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1a8a3c158:;
			{
				_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_16035_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16035_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1a8a3b872:;
			{
				_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*((*(_16035_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16035_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a8a3bd6c:;
	};
}



inline void _1a3bd36bc_check(_1a3bd2237_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a40e09:;
		if (it != expr_end) {
			jule::Ptr<_1a3b3c55a_Directive> _18115_d = *it;
			{
				_1a3bd34be_checkDirective(_self_, &(_18115_d));
			}
			_iter_next_1a8a40e09:;
			++it;
			goto _iter_begin_1a8a40e09;
		}
		_iter_end_1a8a40e09:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3bd2237_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3bd8bbc_SelectPackage(_1a3bd86d3_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1a3c31c26_Var> _1a3bd90b8_FindVar(_1a3bd86d3_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool ) {
	if ((!(_1a3bdac24_isLookupable(_self_, &(_18923_ident))))) {
		return nullptr;;
	};
	return _1a3bd5bb9_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18923_ident), false);;
}



inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3bd94b4_FindTypeAlias(_1a3bd86d3_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool ) {
	if ((!(_1a3bdac24_isLookupable(_self_, &(_20129_ident))))) {
		return nullptr;;
	};
	return _1a3bd613c_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20129_ident), false);;
}



inline jule::Ptr<_1a3b5e03d_Struct> _1a3bd98b0_FindStruct(_1a3bd86d3_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool ) {
	if ((!(_1a3bdac24_isLookupable(_self_, &(_21326_ident))))) {
		return nullptr;;
	};
	return _1a3bd656b_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21326_ident), false);;
}



inline jule::Ptr<_1a3b740ec_Fn> _1a3bd9cab_FindFn(_1a3bd86d3_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool ) {
	if ((!(_1a3bdac24_isLookupable(_self_, &(_22522_ident))))) {
		return nullptr;;
	};
	return _1a3bd6a22_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22522_ident), false);;
}



inline jule::Ptr<_1a3b87a7d_Trait> _1a3bda0ec_FindTrait(_1a3bd86d3_ImportInfo* _self_, jule::Str _23625_ident) {
	if ((!(_1a3bdac24_isLookupable(_self_, &(_23625_ident))))) {
		return nullptr;;
	};
	return _1a3bd6d63_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23625_ident));;
}



inline jule::Ptr<_1a3b8a289_Enum> _1a3bda43d_FindEnum(_1a3bd86d3_ImportInfo* _self_, jule::Str _24724_ident) {
	if ((!(_1a3bdac24_isLookupable(_self_, &(_24724_ident))))) {
		return nullptr;;
	};
	return _1a3bd71d7_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24724_ident));;
}



inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3bda77e_FindTypeEnum(_1a3bd86d3_ImportInfo* _self_, jule::Str _25828_ident) {
	if ((!(_1a3bdac24_isLookupable(_self_, &(_25828_ident))))) {
		return nullptr;;
	};
	return _1a3bd755b_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25828_ident));;
}



inline jule::Bool _1a3bdac24_isLookupable(_1a3bd86d3_ImportInfo* _self_, jule::Str* _26725_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1a3bdb065_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1a3bdb065_existIdent(_self_, (*(_26725_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1a3bdb065_existIdent(_1a3bd86d3_ImportInfo* _self_, jule::Str _28722_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9244431:;
		if (it != expr_end) {
			jule::Ptr<_1a3b27a62_Token> *_28810_sident = it;
			{
				if (((*((*(_28810_sident))))._field_Kind == _28722_ident)) {
					return true;;
				};
			}
			_iter_next_1a9244431:;
			++it;
			goto _iter_begin_1a9244431;
		}
		_iter_end_1a9244431:;
	};
	return false;;
}



inline jule::Bool _1a3bdb2eb_isAccessibleViaSelection(_1a3bd86d3_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1a3bdb065_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3bd86d3_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3bdba9e_SelectPackage(_1a3bdb609_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1a3c31c26_Var> _1a3bdbe9a_FindVar(_1a3bdb609_Package* _self_, jule::Str _31423_ident, jule::Bool _31435_binded) {
	return _1a3bd5bb9_findVarInPackage(&((*(_self_))._field_Files), &(_31423_ident), _31435_binded);;
}



inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3bdc396_FindTypeAlias(_1a3bdb609_Package* _self_, jule::Str _32029_ident, jule::Bool _32041_binded) {
	return _1a3bd613c_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32029_ident), _32041_binded);;
}



inline jule::Ptr<_1a3b5e03d_Struct> _1a3bdc792_FindStruct(_1a3bdb609_Package* _self_, jule::Str _32626_ident, jule::Bool _32638_binded) {
	return _1a3bd656b_findStructInPackage(&((*(_self_))._field_Files), &(_32626_ident), _32638_binded);;
}



inline jule::Ptr<_1a3b740ec_Fn> _1a3bdcb8d_FindFn(_1a3bdb609_Package* _self_, jule::Str _33222_ident, jule::Bool _33234_binded) {
	return _1a3bd6a22_findFnInPackage(&((*(_self_))._field_Files), &(_33222_ident), _33234_binded);;
}



inline jule::Ptr<_1a3b87a7d_Trait> _1a3bdcece_FindTrait(_1a3bdb609_Package* _self_, jule::Str _33825_ident) {
	return _1a3bd6d63_findTraitInPackage(&((*(_self_))._field_Files), &(_33825_ident));;
}



inline jule::Ptr<_1a3b8a289_Enum> _1a3bdd320_FindEnum(_1a3bdb609_Package* _self_, jule::Str _34424_ident) {
	return _1a3bd71d7_findEnumInPackage(&((*(_self_))._field_Files), &(_34424_ident));;
}



inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3bdd661_FindTypeEnum(_1a3bdb609_Package* _self_, jule::Str _35028_ident) {
	return _1a3bd755b_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35028_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3bdb609_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _1a3c0848e_pushComptimeTypeInfo(_1a3c0802c_commonSemaMeta* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _21541_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9046e15:;
		if (it != expr_end) {
			jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _21615_t2 = *it;
			{
				if ((((*((*(_21615_t2))._field_base))._field_BindIdent == (*((*(_21541_t))))._field_BindIdent) && _1a3cbb431_Equal((*(_21615_t2))._field_base, (*(_21541_t))))) {
					return _21615_t2;;
				};
			}
			_iter_next_1a9046e15:;
			++it;
			goto _iter_begin_1a9046e15;
		}
		_iter_end_1a9046e15:;
	};
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _2217_t1 = jule::new_ptr<_1a3b9e4ac_comptimeTypeInfo>(_1a3b9e4ac_comptimeTypeInfo{._field_base=(*(_21541_t))});;
	{ jule::Slice<jule::Ptr<_1a3b9e4ac_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2217_t1); };
	return _2217_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3c0802c_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos << ", ";
	_Stream << "runtime:" << _Src._field_runtime;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3c090e9_SelectPackage(_1a3c08b54_Sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>> _24429_selector) {
	return _1a3c8499e_SelectPackage((*(_self_))._field_file.ptr(), _24429_selector);;
}



inline jule::Ptr<_1a3c31c26_Var> _1a3c094e5_FindVar(_1a3c08b54_Sema* _self_, jule::Str _25423_ident, jule::Bool _25435_binded) {
	jule::Ptr<_1a3c31c26_Var> _2567_v = _1a3bd5bb9_findVarInPackage(&((*(_self_))._field_files), &(_25423_ident), _25435_binded);;
	if ((_2567_v != nullptr)) {
		return _2567_v;;
	};
	if ((!(_1a3c05b40_IsPub(_25423_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a904b05c:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _26715_imp = *it;
			{
				if ((!(_1a3c06a42_impIsLookupable(&(_26715_imp), &(_25423_ident))))) {
					goto _iter_next_1a904b05c;
				};
				_2567_v=_1a3bd90b8_FindVar(_26715_imp.ptr(), _25423_ident, _25435_binded);
				if (((_2567_v != nullptr) && _1a3c0beed_isAccessibleDefine(_self_, (*_2567_v.alloc)._field_Public, (*_2567_v.alloc)._field_Token))) {
					return _2567_v;;
				};
			}
			_iter_next_1a904b05c:;
			++it;
			goto _iter_begin_1a904b05c;
		}
		_iter_end_1a904b05c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3c098e1_FindTypeAlias(_1a3c08b54_Sema* _self_, jule::Str _28629_ident, jule::Bool _28641_binded) {
	jule::Ptr<_1a3cb9e35_TypeAlias> _2887_ta = _1a3bd613c_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28629_ident), _28641_binded);;
	if ((_2887_ta != nullptr)) {
		return _2887_ta;;
	};
	if ((!(_1a3c05b40_IsPub(_28629_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a904de61:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _29915_imp = *it;
			{
				if ((!(_1a3c06a42_impIsLookupable(&(_29915_imp), &(_28629_ident))))) {
					goto _iter_next_1a904de61;
				};
				_2887_ta=_1a3bd94b4_FindTypeAlias(_29915_imp.ptr(), _28629_ident, _28641_binded);
				if (((_2887_ta != nullptr) && _1a3c0beed_isAccessibleDefine(_self_, (*_2887_ta.alloc)._field_Public, (*_2887_ta.alloc)._field_Token))) {
					return _2887_ta;;
				};
			}
			_iter_next_1a904de61:;
			++it;
			goto _iter_begin_1a904de61;
		}
		_iter_end_1a904de61:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b5e03d_Struct> _1a3c09cdc_FindStruct(_1a3c08b54_Sema* _self_, jule::Str _31826_ident, jule::Bool _31838_binded) {
	jule::Ptr<_1a3b5e03d_Struct> _3207_s = _1a3bd656b_findStructInPackage(&((*(_self_))._field_files), &(_31826_ident), _31838_binded);;
	if ((_3207_s != nullptr)) {
		return _3207_s;;
	};
	if ((!(_1a3c05b40_IsPub(_31826_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9051d65:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _33115_imp = *it;
			{
				if ((!(_1a3c06a42_impIsLookupable(&(_33115_imp), &(_31826_ident))))) {
					goto _iter_next_1a9051d65;
				};
				_3207_s=_1a3bd98b0_FindStruct(_33115_imp.ptr(), _31826_ident, _31838_binded);
				if (((_3207_s != nullptr) && _1a3c0beed_isAccessibleDefine(_self_, (*_3207_s.alloc)._field_Public, (*_3207_s.alloc)._field_Token))) {
					return _3207_s;;
				};
			}
			_iter_next_1a9051d65:;
			++it;
			goto _iter_begin_1a9051d65;
		}
		_iter_end_1a9051d65:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b740ec_Fn> _1a3c0a1d8_FindFn(_1a3c08b54_Sema* _self_, jule::Str _34922_ident, jule::Bool _34934_binded) {
	jule::Ptr<_1a3b740ec_Fn> _3517_f = _1a3bd6a22_findFnInPackage(&((*(_self_))._field_files), &(_34922_ident), _34934_binded);;
	if ((_3517_f != nullptr)) {
		return _3517_f;;
	};
	if ((!(_1a3c05b40_IsPub(_34922_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9054c69:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _36215_imp = *it;
			{
				if ((!(_1a3c06a42_impIsLookupable(&(_36215_imp), &(_34922_ident))))) {
					goto _iter_next_1a9054c69;
				};
				_3517_f=_1a3bd9cab_FindFn(_36215_imp.ptr(), _34922_ident, _34934_binded);
				if (((_3517_f != nullptr) && _1a3c0beed_isAccessibleDefine(_self_, (*_3517_f.alloc)._field_Public, (*_3517_f.alloc)._field_Token))) {
					return _3517_f;;
				};
			}
			_iter_next_1a9054c69:;
			++it;
			goto _iter_begin_1a9054c69;
		}
		_iter_end_1a9054c69:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b87a7d_Trait> _1a3c0a529_FindTrait(_1a3c08b54_Sema* _self_, jule::Str _38125_ident) {
	jule::Ptr<_1a3b87a7d_Trait> _3837_t = _1a3bd6d63_findTraitInPackage(&((*(_self_))._field_files), &(_38125_ident));;
	if ((_3837_t != nullptr)) {
		return _3837_t;;
	};
	if ((!(_1a3c05b40_IsPub(_38125_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92716c2:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _39415_imp = *it;
			{
				if ((!(_1a3c06a42_impIsLookupable(&(_39415_imp), &(_38125_ident))))) {
					goto _iter_next_1a92716c2;
				};
				_3837_t=_1a3bda0ec_FindTrait(_39415_imp.ptr(), _38125_ident);
				if (((_3837_t != nullptr) && _1a3c0beed_isAccessibleDefine(_self_, (*_3837_t.alloc)._field_Public, (*_3837_t.alloc)._field_Token))) {
					return _3837_t;;
				};
			}
			_iter_next_1a92716c2:;
			++it;
			goto _iter_begin_1a92716c2;
		}
		_iter_end_1a92716c2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b8a289_Enum> _1a3c0a86a_FindEnum(_1a3c08b54_Sema* _self_, jule::Str _41324_ident) {
	jule::Ptr<_1a3b8a289_Enum> _4157_e = _1a3bd71d7_findEnumInPackage(&((*(_self_))._field_files), &(_41324_ident));;
	if ((_4157_e != nullptr)) {
		return _4157_e;;
	};
	if ((!(_1a3c05b40_IsPub(_41324_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9274384:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _42615_imp = *it;
			{
				if ((!(_1a3c06a42_impIsLookupable(&(_42615_imp), &(_41324_ident))))) {
					goto _iter_next_1a9274384;
				};
				_4157_e=_1a3bda43d_FindEnum(_42615_imp.ptr(), _41324_ident);
				if (((_4157_e != nullptr) && _1a3c0beed_isAccessibleDefine(_self_, (*_4157_e.alloc)._field_Public, (*_4157_e.alloc)._field_Token))) {
					return _4157_e;;
				};
			}
			_iter_next_1a9274384:;
			++it;
			goto _iter_begin_1a9274384;
		}
		_iter_end_1a9274384:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3c0abab_FindTypeEnum(_1a3c08b54_Sema* _self_, jule::Str _44528_ident) {
	jule::Ptr<_1a3b8b994_TypeEnum> _4477_e = _1a3bd755b_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44528_ident));;
	if ((_4477_e != nullptr)) {
		return _4477_e;;
	};
	if ((!(_1a3c05b40_IsPub(_44528_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90e6503:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _45815_imp = *it;
			{
				if ((!(_1a3c06a42_impIsLookupable(&(_45815_imp), &(_44528_ident))))) {
					goto _iter_next_1a90e6503;
				};
				_4477_e=_1a3bda77e_FindTypeEnum(_45815_imp.ptr(), _44528_ident);
				if (((_4477_e != nullptr) && _1a3c0beed_isAccessibleDefine(_self_, (*_4477_e.alloc)._field_Public, (*_4477_e.alloc)._field_Token))) {
					return _4477_e;;
				};
			}
			_iter_next_1a90e6503:;
			++it;
			goto _iter_begin_1a90e6503;
		}
		_iter_end_1a90e6503:;
	};
	return nullptr;;
}



inline jule::Bool _1a3c0b0b8_isFlag(_1a3c08b54_Sema* _self_, jule::I64 _47418_flags) {
	return (((*(_self_))._field_flags & _47418_flags) == _47418_flags);;
}



inline void _1a3c0b371_setCurrentFile(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3c844b5_SymbolTable> _47634_f) {
	(*(_self_))._field_file=_47634_f;
}



inline void _1a3c0b78e_pushErr(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b27a62_Token> _47823_token, jule::Str _47838_fmt, jule::Slice<jule::Any> _47851_args) {
	{ jule::Slice<_1e7c94ecb_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a3c066bd_compilerErr(&(_47823_token), true, _47838_fmt, _47851_args)); };
}



inline void _1a3c0bb02_pushSuggestion(_1a3c08b54_Sema* _self_, jule::Str _48330_fmt, jule::Slice<jule::Any> _48343_args) {
	{
		_1a3c07c74_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48330_fmt, _48343_args);
	};
}



inline jule::Bool _1a3c0beed_isAccessibleDefine(_1a3c08b54_Sema* _self_, jule::Bool _48830_public, jule::Ptr<_1a3b27a62_Token> _48844_token) {
	return ((_48830_public || ((*(_48844_token))._field_File == nullptr)) || (_1a3b2d99c_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1a3b2d99c_Dir((*_48844_token.alloc)._field_File.ptr())));;
}



inline jule::Bool _1a3c0c4a4_isDuplicatedIdent(_1a3c08b54_Sema* _self_, jule::Uintptr _49529_itself, jule::Str* _49547_ident, jule::Bool _49559_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9279048:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> *_49610_f = it;
			{
				if (_1a3c879d5_isDuplicatedIdent((*(_49610_f)).ptr(), _49529_itself, _49547_ident, _49559_binded)) {
					return true;;
				};
				{
					auto expr = &((*(*(_49610_f)).alloc)._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a927a049:;
					if (it != expr_end) {
						jule::Ptr<_1a3bd86d3_ImportInfo> *_50111_imp = it;
						{
							{
								auto expr = &((*((*(_50111_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a927a940:;
								if (it != expr_end) {
									jule::Ptr<_1a3b27a62_Token> *_50212_selected = it;
									{
										if (((*((*(_50212_selected))))._field_Kind == (*(_49547_ident)))) {
											return true;;
										};
									}
									_iter_next_1a927a940:;
									++it;
									goto _iter_begin_1a927a940;
								}
								_iter_end_1a927a940:;
							};
						}
						_iter_next_1a927a049:;
						++it;
						goto _iter_begin_1a927a049;
					}
					_iter_end_1a927a049:;
				};
			}
			_iter_next_1a9279048:;
			++it;
			goto _iter_begin_1a9279048;
		}
		_iter_end_1a9279048:;
	};
	return false;;
}



inline void _1a3c0c817_checkDirectives(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Slice<jule::Ptr<_1a3b3c55a_Directive>>* _51237_d, jule::Any _51263_o) {
	_1a3bd2237_directiveChecker _5137_dc = _1a3bd2237_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1a3b3c55a_Directive>>>)(_51237_d)), ._field_o=_51263_o};;
	_1a3bd36bc_check(&_5137_dc);
}



inline jule::Bool _1a3c0ccbd_checkGenericQuantity(_1a3c08b54_Sema* _self_, jule::I64 _52136_required, jule::I64 _52151_given, jule::Ptr<_1a3b27a62_Token> _52163_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52136_required == 0LL) && (_52151_given > 0LL))) {
			_case_begin_1a927ce2b:;
			{
				_1a3c0b78e_pushErr(_self_, _52163_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52136_required > 0LL) && (_52151_given == 0LL))) {
			_case_begin_1a927cea3:;
			{
				_1a3c0b78e_pushErr(_self_, _52163_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52136_required < _52151_given)) {
			_case_begin_1a927d02a:;
			{
				_1a3c0b78e_pushErr(_self_, _52163_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52136_required > _52151_given)) {
			_case_begin_1a927d0a2:;
			{
				_1a3c0b78e_pushErr(_self_, _52163_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a927cd60:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a927cc94:;
	};
}



inline jule::Bool _1a3c0d1b9_isDuplicatedImportSelection(_1a3c08b54_Sema* _self_, jule::Uintptr _54039_itself, jule::Str* _54057_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9280c97:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> *_54110_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54110_imp))) == _54039_itself)) {
					goto _iter_end_1a9280c97;
				};
				if (_1a3bdb065_existIdent((*(_54110_imp)).ptr(), (*(_54057_ident)))) {
					return true;;
				};
			}
			_iter_next_1a9280c97:;
			++it;
			goto _iter_begin_1a9280c97;
		}
		_iter_end_1a9280c97:;
	};
	return false;;
}



inline jule::Any _1a3c0d5b5_getImportDef(_1a3c08b54_Sema* _self_, jule::Str* _55325_ident, jule::Ptr<_1a3bd86d3_ImportInfo>* _55342_imp) {
	if ((_1a3e385e2_findPackageBuiltinDef(&((*((*(_55342_imp))))._field_LinkPath), _55325_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55342_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9282ded:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _55715_f = *it;
			{
				;
				jule::Any _5608_def = _1a3c8752e_defByIdent(_55715_f.ptr(), _55325_ident, false);;
				if ((_5608_def != nullptr)) {
					return _5608_def;;
				};
			}
			_iter_next_1a9282ded:;
			++it;
			goto _iter_begin_1a9282ded;
		}
		_iter_end_1a9282ded:;
	};
	return nullptr;;
}



inline jule::Bool _1a9289454_checkImportSelection(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b27a62_Token>* _56840_ident, jule::Ptr<_1a3c31c26_Var>* _56856_s) {
	if ((!(_1a3c0beed_isAccessibleDefine(_self_, (*((*(_56856_s))))._field_Public, (*((*(_56856_s))))._field_Token)))) {
		_1a3c0b78e_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56840_ident))))._field_Kind, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a3bd7a9a_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56856_s))))._field_Ident), false) != nullptr)) {
		_1a3c0b78e_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56856_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a928d744_checkImportSelection(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b27a62_Token>* _56840_ident, jule::Ptr<_1a3cb9e35_TypeAlias>* _56856_s) {
	if ((!(_1a3c0beed_isAccessibleDefine(_self_, (*((*(_56856_s))))._field_Public, (*((*(_56856_s))))._field_Token)))) {
		_1a3c0b78e_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56840_ident))))._field_Kind, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a3bd7a9a_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56856_s))))._field_Ident), false) != nullptr)) {
		_1a3c0b78e_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56856_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a92929bd_checkImportSelection(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b27a62_Token>* _56840_ident, jule::Ptr<_1a3b5e03d_Struct>* _56856_s) {
	if ((!(_1a3c0beed_isAccessibleDefine(_self_, (*((*(_56856_s))))._field_Public, (*((*(_56856_s))))._field_Token)))) {
		_1a3c0b78e_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56840_ident))))._field_Kind, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a3bd7a9a_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56856_s))))._field_Ident), false) != nullptr)) {
		_1a3c0b78e_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56856_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a9297033_checkImportSelection(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b27a62_Token>* _56840_ident, jule::Ptr<_1a3b87a7d_Trait>* _56856_s) {
	if ((!(_1a3c0beed_isAccessibleDefine(_self_, (*((*(_56856_s))))._field_Public, (*((*(_56856_s))))._field_Token)))) {
		_1a3c0b78e_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56840_ident))))._field_Kind, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a3bd7a9a_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56856_s))))._field_Ident), false) != nullptr)) {
		_1a3c0b78e_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56856_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a929b2ce_checkImportSelection(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b27a62_Token>* _56840_ident, jule::Ptr<_1a3b8a289_Enum>* _56856_s) {
	if ((!(_1a3c0beed_isAccessibleDefine(_self_, (*((*(_56856_s))))._field_Public, (*((*(_56856_s))))._field_Token)))) {
		_1a3c0b78e_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56840_ident))))._field_Kind, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a3bd7a9a_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56856_s))))._field_Ident), false) != nullptr)) {
		_1a3c0b78e_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56856_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a92a057a_checkImportSelection(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b27a62_Token>* _56840_ident, jule::Ptr<_1a3b8b994_TypeEnum>* _56856_s) {
	if ((!(_1a3c0beed_isAccessibleDefine(_self_, (*((*(_56856_s))))._field_Public, (*((*(_56856_s))))._field_Token)))) {
		_1a3c0b78e_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56840_ident))))._field_Kind, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a3bd7a9a_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56856_s))))._field_Ident), false) != nullptr)) {
		_1a3c0b78e_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56856_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a92a4804_checkImportSelection(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b27a62_Token>* _56840_ident, jule::Ptr<_1a3b740ec_Fn>* _56856_s) {
	if ((!(_1a3c0beed_isAccessibleDefine(_self_, (*((*(_56856_s))))._field_Public, (*((*(_56856_s))))._field_Token)))) {
		_1a3c0b78e_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56840_ident))))._field_Kind, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a3bd7a9a_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56856_s))))._field_Ident), false) != nullptr)) {
		_1a3c0b78e_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56856_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1a3c0dd02_checkImportSelectedSelections(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _58250_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58250_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9284a37:;
		if (it != expr_end) {
			jule::Ptr<_1a3b27a62_Token> _58410_ident = *it;
			{
				if ((*(_58410_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1a9284a37;
				};
				if (_1a3c0d1b9_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>((*(_58250_imp))), &((*(_58410_ident))._field_Kind))) {
					_1a3c0b78e_pushErr(_self_, _58410_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_58410_ident.alloc)._field_Kind, &__jule_any_type4)}));
					_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1a9284a37;
				};
				jule::Any _5968_def = _1a3c0d5b5_getImportDef(_self_, &((*_58410_ident.alloc)._field_Kind), _58250_imp);;
				{
					auto &_match_expr{ _5968_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1a9285b04:;
						{
							goto _iter_next_1a9284a37;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1a928751d:;
						{
							jule::Ptr<_1a3c31c26_Var> _6029_v = _5968_def.unsafe_cast_ptr<_1a3c31c26_Var>();;
							__jule_func_result=(_1a9289454_checkImportSelection(_self_, &(_58410_ident), &(_6029_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1a9287584:;
						{
							jule::Ptr<_1a3cb9e35_TypeAlias> _6059_ta = _5968_def.unsafe_cast_ptr<_1a3cb9e35_TypeAlias>();;
							__jule_func_result=(_1a928d744_checkImportSelection(_self_, &(_58410_ident), &(_6059_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1a92875ea:;
						{
							jule::Ptr<_1a3b5e03d_Struct> _6089_s = _5968_def.unsafe_cast_ptr<_1a3b5e03d_Struct>();;
							__jule_func_result=(_1a92929bd_checkImportSelection(_self_, &(_58410_ident), &(_6089_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1a9287661:;
						{
							jule::Ptr<_1a3b87a7d_Trait> _6119_t = _5968_def.unsafe_cast_ptr<_1a3b87a7d_Trait>();;
							__jule_func_result=(_1a9297033_checkImportSelection(_self_, &(_58410_ident), &(_6119_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1a92876c7:;
						{
							jule::Ptr<_1a3b8a289_Enum> _6149_e = _5968_def.unsafe_cast_ptr<_1a3b8a289_Enum>();;
							__jule_func_result=(_1a929b2ce_checkImportSelection(_self_, &(_58410_ident), &(_6149_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1a92882dd:;
						{
							jule::Ptr<_1a3b8b994_TypeEnum> _6179_e = _5968_def.unsafe_cast_ptr<_1a3b8b994_TypeEnum>();;
							__jule_func_result=(_1a92a057a_checkImportSelection(_self_, &(_58410_ident), &(_6179_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1a9288354:;
						{
							jule::Ptr<_1a3b740ec_Fn> _6209_f = _5968_def.unsafe_cast_ptr<_1a3b740ec_Fn>();;
							__jule_func_result=(_1a92a4804_checkImportSelection(_self_, &(_58410_ident), &(_6209_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1a928740d:;
						{
							_1a3c0b78e_pushErr(_self_, _58410_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*_58410_ident.alloc)._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1a9284a37;
						}
					}
					_match_end_1a9287078:;
				};
			}
			_iter_next_1a9284a37:;
			++it;
			goto _iter_begin_1a9284a37;
		}
		_iter_end_1a9284a37:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a92a90bc_checkImportsAllSelectionsFromCollection(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3c31c26_Var>>* _63159_s, jule::Ptr<_1a3b27a62_Token>* _63168_et) {
	jule::Bool _6327_ok = true;;
	{
		auto expr = _63159_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92aad27:;
		if (it != expr_end) {
			jule::Ptr<_1a3c31c26_Var> *_63310_d = it;
			{
				if ((*((*(_63310_d))))._field_Public) {
					_6327_ok=(_1a9289454_checkImportSelection(_self_, _63168_et, _63310_d) && _6327_ok);
				};
			}
			_iter_next_1a92aad27:;
			++it;
			goto _iter_begin_1a92aad27;
		}
		_iter_end_1a92aad27:;
	};
	return _6327_ok;;
}

inline jule::Bool _1a92a9c5a_checkImportsAllSelectionsFromCollection(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>* _63159_s, jule::Ptr<_1a3b27a62_Token>* _63168_et) {
	jule::Bool _6327_ok = true;;
	{
		auto expr = _63159_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92ad522:;
		if (it != expr_end) {
			jule::Ptr<_1a3cb9e35_TypeAlias> *_63310_d = it;
			{
				if ((*((*(_63310_d))))._field_Public) {
					_6327_ok=(_1a928d744_checkImportSelection(_self_, _63168_et, _63310_d) && _6327_ok);
				};
			}
			_iter_next_1a92ad522:;
			++it;
			goto _iter_begin_1a92ad522;
		}
		_iter_end_1a92ad522:;
	};
	return _6327_ok;;
}

inline jule::Bool _1a92ace4a_checkImportsAllSelectionsFromCollection(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3b5e03d_Struct>>* _63159_s, jule::Ptr<_1a3b27a62_Token>* _63168_et) {
	jule::Bool _6327_ok = true;;
	{
		auto expr = _63159_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92b0c0b:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> *_63310_d = it;
			{
				if ((*((*(_63310_d))))._field_Public) {
					_6327_ok=(_1a92929bd_checkImportSelection(_self_, _63168_et, _63310_d) && _6327_ok);
				};
			}
			_iter_next_1a92b0c0b:;
			++it;
			goto _iter_begin_1a92b0c0b;
		}
		_iter_end_1a92b0c0b:;
	};
	return _6327_ok;;
}

inline jule::Bool _1a92ae259_checkImportsAllSelectionsFromCollection(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3b740ec_Fn>>* _63159_s, jule::Ptr<_1a3b27a62_Token>* _63168_et) {
	jule::Bool _6327_ok = true;;
	{
		auto expr = _63159_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92b3417:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> *_63310_d = it;
			{
				if ((*((*(_63310_d))))._field_Public) {
					_6327_ok=(_1a92a4804_checkImportSelection(_self_, _63168_et, _63310_d) && _6327_ok);
				};
			}
			_iter_next_1a92b3417:;
			++it;
			goto _iter_begin_1a92b3417;
		}
		_iter_end_1a92b3417:;
	};
	return _6327_ok;;
}

inline jule::Bool _1a92b1943_checkImportsAllSelectionsFromCollection(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3b87a7d_Trait>>* _63159_s, jule::Ptr<_1a3b27a62_Token>* _63168_et) {
	jule::Bool _6327_ok = true;;
	{
		auto expr = _63159_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92b5aac:;
		if (it != expr_end) {
			jule::Ptr<_1a3b87a7d_Trait> *_63310_d = it;
			{
				if ((*((*(_63310_d))))._field_Public) {
					_6327_ok=(_1a9297033_checkImportSelection(_self_, _63168_et, _63310_d) && _6327_ok);
				};
			}
			_iter_next_1a92b5aac:;
			++it;
			goto _iter_begin_1a92b5aac;
		}
		_iter_end_1a92b5aac:;
	};
	return _6327_ok;;
}

inline jule::Bool _1a92b4eda_checkImportsAllSelectionsFromCollection(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3b8a289_Enum>>* _63159_s, jule::Ptr<_1a3b27a62_Token>* _63168_et) {
	jule::Bool _6327_ok = true;;
	{
		auto expr = _63159_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92b8252:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8a289_Enum> *_63310_d = it;
			{
				if ((*((*(_63310_d))))._field_Public) {
					_6327_ok=(_1a929b2ce_checkImportSelection(_self_, _63168_et, _63310_d) && _6327_ok);
				};
			}
			_iter_next_1a92b8252:;
			++it;
			goto _iter_begin_1a92b8252;
		}
		_iter_end_1a92b8252:;
	};
	return _6327_ok;;
}

inline jule::Bool _1a92b7680_checkImportsAllSelectionsFromCollection(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3b8b994_TypeEnum>>* _63159_s, jule::Ptr<_1a3b27a62_Token>* _63168_et) {
	jule::Bool _6327_ok = true;;
	{
		auto expr = _63159_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92ba980:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8b994_TypeEnum> *_63310_d = it;
			{
				if ((*((*(_63310_d))))._field_Public) {
					_6327_ok=(_1a92a057a_checkImportSelection(_self_, _63168_et, _63310_d) && _6327_ok);
				};
			}
			_iter_next_1a92ba980:;
			++it;
			goto _iter_begin_1a92ba980;
		}
		_iter_end_1a92ba980:;
	};
	return _6327_ok;;
}



inline jule::Bool _1a3c0e53e_checkImportAllSelections(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _64141_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64141_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9284dbc:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> *_64310_file = it;
			{
				__jule_func_result=(_1a92a90bc_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64310_file))))._field_Vars), &((*((*(_64141_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a92a9c5a_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64310_file)).alloc)._field_TypeAliases), &((*((*(_64141_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a92ace4a_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64310_file)).alloc)._field_Structs), &((*((*(_64141_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a92ae259_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64310_file)).alloc)._field_Funcs), &((*((*(_64141_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a92b1943_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64310_file)).alloc)._field_Traits), &((*((*(_64141_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a92b4eda_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64310_file)).alloc)._field_Enums), &((*((*(_64141_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a92b7680_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64310_file)).alloc)._field_TypeEnums), &((*((*(_64141_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1a9284dbc:;
			++it;
			goto _iter_begin_1a9284dbc;
		}
		_iter_end_1a9284dbc:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a3c0e880_checkImportSelections(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _65542_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65542_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1a3c0dd02_checkImportSelectedSelections(_self_, _65542_imp);
		return __jule_func_result;;
	} else if ((*((*(_65542_imp))))._field_ImportAll) {
		__jule_func_result = _1a3c0e53e_checkImportAllSelections(_self_, _65542_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a3c0ebc1_isUseAliasDuplication(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _66438_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92bca1a:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _66515_imp2 = *it;
			{
				if ((_66515_imp2 == (*(_66438_imp)))) {
					goto _iter_end_1a92bca1a;
				};
				if (((*(_66515_imp2))._field_Alias == (*((*(_66438_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*_66515_imp2.alloc)._field_Ident == (*_66515_imp2.alloc)._field_LinkPath) && ((*_66515_imp2.alloc)._field_Ident == (*((*(_66438_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1a92bca1a:;
			++it;
			goto _iter_begin_1a92bca1a;
		}
		_iter_end_1a92bca1a:;
	};
	return false;;
}



inline jule::Bool _1a3c10012_checkImport(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3bd86d3_ImportInfo>* _68032_imp) {
	if (((*((*(_68032_imp))))._field_Binded || ((*((*((*(_68032_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_68032_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_68032_imp))))._field_ImportAll || !((*((*(_68032_imp))))._field_Alias).empty()) || ((*((*(_68032_imp))))._field_Selected.len() > 0LL))) {
			_1a3c0b78e_pushErr(_self_, (*((*(_68032_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4)}));
			return false;;
		};
	};
	if (((*((*(_68032_imp))))._field_Alias.len() != 0LL)) {
		if (_1a3b2a449_IsIgnoreIdent((*((*(_68032_imp))))._field_Alias)) {
			_1a3c0b78e_pushErr(_self_, (*((*(_68032_imp))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		} else if (_1a3c0ebc1_isUseAliasDuplication(_self_, _68032_imp)) {
			_1a3c0b78e_pushErr(_self_, (*((*(_68032_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_68032_imp))))._field_Alias, &__jule_any_type4)}));
			_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_68032_imp))))._field_Duplicate))) {
		jule::Ptr<_1a3c08b54_Sema> _7038_sema = jule::new_ptr<_1a3c08b54_Sema>(_1a3c08b54_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1a3c2d64b_check(_7038_sema, &((*(*((*(_68032_imp))))._field_Package.alloc)._field_Files));
		if (((*_7038_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_7038_sema.alloc)._field_errors);;
			(*_7038_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return _1a3c0e880_checkImportSelections(_self_, _68032_imp);;
}



inline void _1a3c10210_checkImports(_1a3c08b54_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e2e43c:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _71815_file = *it;
			{
				_1a3c0b371_setCurrentFile(_self_, _71815_file);
				{
					auto expr = &((*(_71815_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a6e315b5:;
					if (it != expr_end) {
						jule::Ptr<_1a3bd86d3_ImportInfo> _72016_imp = *it;
						{
							jule::Bool _7215_ok = _1a3c10012_checkImport(_self_, &(_72016_imp));;
							if ((!(_7215_ok))) {
								return;;
							};
						}
						_iter_next_1a6e315b5:;
						++it;
						goto _iter_begin_1a6e315b5;
					}
					_iter_end_1a6e315b5:;
				};
			}
			_iter_next_1a6e2e43c:;
			++it;
			goto _iter_begin_1a6e2e43c;
		}
		_iter_end_1a6e2e43c:;
	};
}



inline void _1a3c1040d_implFileImpls(jule::Ptr<_1a3c08b54_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a834d5d5:;
		if (it != expr_end) {
			jule::Ptr<_1a3bb11e4_Impl> _73115_imp = *it;
			{
				_1a3c1e9a0_implImpl(_self_, &(_73115_imp));
			}
			_iter_next_1a834d5d5:;
			++it;
			goto _iter_begin_1a834d5d5;
		}
		_iter_end_1a834d5d5:;
	};
}



inline void _1a3c1060b_implImpls(jule::Ptr<_1a3c08b54_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a834e3b6:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _73715_file = *it;
			{
				_1a3c0b371_setCurrentFile(_self_.ptr(), _73715_file);
				_1a3c1040d_implFileImpls(_self_);
			}
			_iter_next_1a834e3b6:;
			++it;
			goto _iter_begin_1a834e3b6;
		}
		_iter_end_1a834e3b6:;
	};
}



inline void _1a3c10809_checkEnums(jule::Ptr<_1a3c08b54_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90ea8e2:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _74415_file = *it;
			{
				_1a3c0b371_setCurrentFile(_self_.ptr(), _74415_file);
				{
					
					if ((!(_1a3c1addb_checkEnumDecls(_self_)))) {
						_case_begin_1a66ae63a:;
					}
					else if ((!(_1a3c1b172_checkTypeEnumDecls(_self_)))) {
						_case_begin_1a66b1263:;
					}
					_match_end_1a66b1197:;
				};
			}
			_iter_next_1a90ea8e2:;
			++it;
			goto _iter_begin_1a90ea8e2;
		}
		_iter_end_1a90ea8e2:;
	};
}



inline void _1a3c10a07_checkFileInherits(jule::Ptr<_1a3c08b54_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a66b2770:;
		if (it != expr_end) {
			jule::Ptr<_1a3b87a7d_Trait> _75415_t = *it;
			{
				jule::Bool _7554_ok = _1a3c1ca36__checkTraitDeclInherits(_self_, &(_75415_t));;
				if ((!(_7554_ok))) {
					return;;
				};
			}
			_iter_next_1a66b2770:;
			++it;
			goto _iter_begin_1a66b2770;
		}
		_iter_end_1a66b2770:;
	};
}



inline void _1a3c10c05_checkInherits(jule::Ptr<_1a3c08b54_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90563b9:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _76315_file = *it;
			{
				_1a3c0b371_setCurrentFile(_self_.ptr(), _76315_file);
				_1a3c10a07_checkFileInherits(_self_);
			}
			_iter_next_1a90563b9:;
			++it;
			goto _iter_begin_1a90563b9;
		}
		_iter_end_1a90563b9:;
	};
}



inline _1a3cccad5_typeChecker _1a3c111ab_typeChecker(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Trait _76932_l, jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> _76947_generics, jule::Ptr<_1a3ccbae5_referencer> _7707_referencer) {
	_1a3cccad5_typeChecker _7717_tc = _1a3cccad5_typeChecker{._field_s=_self_, ._field_rootLookup=_76932_l, ._field_lookup=_76932_l, ._field_referencer=_7707_referencer, ._field_useGenerics=_76947_generics, };;
	{
		auto &_match_expr{ _76932_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)) {
			_case_begin_1a9058234:;
			{
				jule::Ptr<_1a3bbdb08_scopeChecker> _7808_hard = _1a3bc2238_getHardRoot(_76932_l.cast_ptr<_1a3bbdb08_scopeChecker>((jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0));;
				_7717_tc._field_refers=(*((*(_7808_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1a9057bc3:;
	};
	if (((_7707_referencer != nullptr) && ((*_7707_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_7707_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1a9059aa4:;
				{
					_7717_tc._field_ownerAlias=(*(_7707_referencer))._field_owner.unsafe_cast_ptr<_1a3cb9e35_TypeAlias>();
				}
			}
			_match_end_1a9059a4e:;
		};
	};
	return _7717_tc;;
}



inline jule::Ptr<_1a3cbac27_TypeKind> _1a3c1171c_buildTypeWithRefers(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b3d13d_TypeDecl>* _79641_t, jule::Trait _79664_l, jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> _7977_generics, jule::Ptr<_1a3ccbae5_referencer> _79735_referencer) {
	return ({ auto _wrap_copy = _1a3c111ab_typeChecker(_self_, _79664_l, _7977_generics, _79735_referencer); _1a3cd5280_checkDecl(&_wrap_copy, _79641_t); });;
}



inline jule::Bool _1a3c11c7d_checkTypeWithRefers(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cc2de9_TypeSymbol>* _80341_t, jule::Trait _80361_l, jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> _8047_generics, jule::Ptr<_1a3ccbae5_referencer> _80435_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1a3cc326d_checked((*(_80341_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80341_t))))._field_Kind=_1a3c1171c_buildTypeWithRefers(_self_, &((*((*(_80341_t))))._field_Decl), _80361_l, _8047_generics, _80435_referencer);
	__jule_func_result = _1a3cc326d_checked((*(_80341_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1a3badd90_constraintChecker> _1a3c12014_constraintChecker(jule::Ptr<_1a3c08b54_Sema> _self_) {
	return jule::new_ptr<_1a3badd90_constraintChecker>(_1a3badd90_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1a3c12410_checkType(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cc2de9_TypeSymbol>* _81831_t, jule::Trait _81851_l) {
	return _1a3c11c7d_checkTypeWithRefers(_self_, _81831_t, _81851_l, nullptr, nullptr);;
}



inline jule::Ptr<_1a3cbac27_TypeKind> _1a3c128b6_buildTypeWithGenerics(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b3d13d_TypeDecl>* _82443_t, jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> _8257_generics, jule::Ptr<_1a3b7a257_ReferenceStack> _82535_refers) {
	jule::Ptr<_1a3cccad5_typeChecker> _8267_tc = jule::new_ptr<_1a3cccad5_typeChecker>(_1a3cccad5_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3), ._field_refers=_82535_refers, ._field_useGenerics=_8257_generics, });;
	return _1a3cd5280_checkDecl(_8267_tc.ptr(), _82443_t);;
}



inline jule::Ptr<_1a3cbac27_TypeKind> _1a3c13048_selectType(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b3d13d_TypeDecl>* _84232_t) {
	jule::Ptr<_1a3cccad5_typeChecker> _8437_tc = jule::new_ptr<_1a3cccad5_typeChecker>(_1a3cccad5_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3), ._field_selection=true, });;
	return _1a3cd5280_checkDecl(_8437_tc.ptr(), _84232_t);;
}



inline jule::Ptr<_1a3c8b555_Eval> _1a3c134ee_evalpd(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Trait _85427_l, jule::Ptr<_1a3cbac27_TypeKind> _85442_p, jule::Ptr<_1a3c31c26_Var> _85460_owner) {
	jule::Ptr<_1a3c8b555_Eval> _8557_e = jule::new_ptr<_1a3c8b555_Eval>(_1a3c8b555_Eval{._field_s=_self_, ._field_lookup=_85427_l, ._field_owner=_85460_owner, });;
	{
		auto &_match_expr{ _85427_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)) {
			_case_begin_1a92cd586:;
			{
				(*(_8557_e))._field_unsafety=_1a3bc0eb2_isUnsafe(_85427_l.cast_ptr<_1a3bbdb08_scopeChecker>((jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0));
			}
		}
		_match_end_1a92cd344:;
	};
	(*_8557_e.alloc)._field_prefix=_85442_p;
	return _8557_e;;
}



inline jule::Ptr<_1a3c8b555_Eval> _1a3c138ea_evalp(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Trait _86926_l, jule::Ptr<_1a3cbac27_TypeKind> _86941_p) {
	return _1a3c134ee_evalpd(_self_, _86926_l, _86941_p, nullptr);;
}



inline jule::Ptr<_1a3c8b555_Eval> _1a3c13c3b_eval(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Trait _87425_l) {
	return _1a3c138ea_evalp(_self_, _87425_l, nullptr);;
}



inline jule::Bool _1a3c1429c_checkAssignType(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Bool _87832_destIsRef, jule::Ptr<_1a3cbac27_TypeKind>* _87854_dest, jule::Ptr<_1a3c8982d_Data>* _8798_d, jule::Ptr<_1a3b27a62_Token> _87922_errorToken) {
	if ((*((*(_8798_d))))._field_Decl) {
		_1a3c0b78e_pushErr(_self_.ptr(), _87922_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_87832_destIsRef) {
		if ((!(_1a3cbb431_Equal((*(_87854_dest)), (*((*(_8798_d))))._field_Kind)))) {
			_1a3c0b78e_pushErr(_self_, _87922_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_87854_dest)).ptr()), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_8798_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1a3c73295_assignTypeChecker> _8908_atc = jule::new_ptr<_1a3c73295_assignTypeChecker>(_1a3c73295_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_87854_dest)), ._field_d=(*(_8798_d)), ._field_errorToken=_87922_errorToken});;
		jule::Bool _8964_ok = _1a3c74263_check(_8908_atc.ptr());;
		if ((!(_8964_ok))) {
			return false;;
		};
	};
	if (((!(_1a3c8a235_IsConst((*(_8798_d)).ptr()))) || (_1a3cbd378_Prim((*(_87854_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _9067_kind = (*(_1a3cbd378_Prim((*(_87854_dest)).ptr())))._field_Kind;;
	{
		
		if (_1b57469e3_IsSigInt(_9067_kind)) {
			_case_begin_1a92d54a0:;
			{
				_1b574ab18_SetI64((*((*(_8798_d))))._field_Constant.ptr(), _1b574a343_AsI64((*((*(_8798_d))))._field_Constant));
			}
		}
		else if (_1b5746d01_IsUnsigInt(_9067_kind)) {
			_case_begin_1a92d5549:;
			{
				_1b574adc1_SetU64((*((*(_8798_d))))._field_Constant.ptr(), _1b574a5c9_AsU64((*((*(_8798_d))))._field_Constant));
			}
		}
		else if (_1b574740b_IsFloat(_9067_kind)) {
			_case_begin_1a92d55b0:;
			{
				_1b574b6da_SetF64((*((*(_8798_d))))._field_Constant.ptr(), _1b574a860_AsF64((*((*(_8798_d))))._field_Constant));
			}
		}
		_match_end_1a92d53d4:;
	};
	return true;;
}



inline jule::Bool _1a3c14753__checkTypeCompatibility(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cbac27_TypeKind>* _92045_dest, jule::Ptr<_1a3cbac27_TypeKind>* _92067_src, jule::Ptr<_1a3b27a62_Token> _9217_errorToken) {
	if (((*(_92067_src)) == nullptr)) {
		return false;;
	};
	if ((_1a3cc019e_Tup((*(_92067_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1a3c714e6_typeCompatibilityChecker _9297_tcc = _1a3c714e6_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_92045_dest)), ._field_src=(*(_92067_src)), ._field_errorToken=_9217_errorToken};;
	return _1a3c72bac_check(&_9297_tcc);;
}



inline jule::Bool _1a3c14c09_checkTypeCompatibility(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cbac27_TypeKind>* _93844_dest, jule::Ptr<_1a3cbac27_TypeKind>* _9398_src, jule::Ptr<_1a3b27a62_Token>* _93929_errorToken) {
	if (_1a3c14753__checkTypeCompatibility(_self_, _93844_dest, _9398_src, (*(_93929_errorToken)))) {
		return true;;
	};
	_1a3c0b78e_pushErr(_self_, (*(_93929_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_93844_dest)).ptr()), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*(_9398_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline void _1a3c15127_pushCompatiblityError(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _94742_dest, jule::Ptr<_1a3c8982d_Data>* _94764_src, jule::Ptr<_1a3b27a62_Token>* _9488_errorToken) {
	if ((*((*(_94764_src))))._field_untyped) {
		{
			
			if (_1b574bb6e_IsI64((*((*(_94764_src))))._field_Constant.ptr())) {
				_case_begin_1a92dc9e6:;
				{
					_1a3c0b78e_pushErr(_self_, (*(_9488_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_94742_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_1b574be05_IsU64((*((*(_94764_src))))._field_Constant.ptr())) {
				_case_begin_1a92dca90:;
				{
					_1a3c0b78e_pushErr(_self_, (*(_9488_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_94742_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_1b574c6a8_IsF64((*((*(_94764_src))))._field_Constant.ptr())) {
				_case_begin_1a92dcb06:;
				{
					_1a3c0b78e_pushErr(_self_, (*(_9488_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_94742_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4)}));
					return;;
				}
			}
			_match_end_1a92dc8c5:;
		};
	};
	_1a3c0b78e_pushErr(_self_, (*(_9488_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_94742_dest)).ptr()), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_94764_src))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1a3c155cd_checkTypeCompatibility1(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cbac27_TypeKind>* _96545_dest, jule::Ptr<_1a3c8982d_Data>* _96567_src, jule::Ptr<_1a3b27a62_Token>* _9668_errorToken) {
	if (_1a3c14753__checkTypeCompatibility(_self_, _96545_dest, &((*((*(_96567_src))))._field_Kind), (*(_9668_errorToken)))) {
		return true;;
	};
	_1a3c15127_pushCompatiblityError(_self_, _96545_dest, _96567_src, _9668_errorToken);
	return false;;
}



inline jule::Ptr<_1a3cbac27_TypeKind> _1a3c15a84_buildNonGenericTypeKind(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b3d13d_TypeDecl>* _98045_ast, jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>>* _9818_generics, jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>>* _98144_ignored) {
	jule::Ptr<_1a3cccad5_typeChecker> _9827_tc = jule::new_ptr<_1a3cccad5_typeChecker>(_1a3cccad5_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3), ._field_ignoreGenerics=(*(_9818_generics)), ._field_ignoredGenerics=_98144_ignored, });;
	return _1a3cd5280_checkDecl(_9827_tc.ptr(), _98045_ast);;
}



inline jule::Bool _1a3c15e80_buildFnNonGenericTypeKinds(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b770cd_FnIns>* _99248_f, jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>>* _99264_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>> _99411_generics = nullptr;;
	if (_1a3b74806_IsMethod((*((*(_99248_f))))._field_Decl.ptr())) {
		_99411_generics=jule::append((*(*((*(_99248_f))))._field_Decl.alloc)._field_Generics,(*((*(*((*(_99248_f))))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_99411_generics=(*((*((*(_99248_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_99248_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92e6d74:;
		if (it != expr_end) {
			jule::Ptr<_1a3b76055_ParamIns> _100115_p = *it;
			{
				if ((!(_1a3b72c44_IsSelf((*(_100115_p))._field_Decl.ptr())))) {
					(*_100115_p.alloc)._field_Kind=_1a3c15a84_buildNonGenericTypeKind(_self_, &((*((*(*(_100115_p))._field_Decl.alloc)._field_Kind))._field_Decl), &(_99411_generics), _99264_ignored);
					__jule_func_result=(__jule_func_result && ((*_100115_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1a92e6d74:;
			++it;
			goto _iter_begin_1a92e6d74;
		}
		_iter_end_1a92e6d74:;
	};
	if ((!(_1a3b74570_IsVoid((*((*(_99248_f))))._field_Decl.ptr())))) {
		(*((*(_99248_f))))._field_Result=_1a3c15a84_buildNonGenericTypeKind(_self_, &((*((*((*(*((*(_99248_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(_99411_generics), _99264_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_99248_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a3b770cd_FnIns> _1a3c162c1_getTraitCheckFnKind(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b740ec_Fn>* _101441_f) {
	if (((*((*(_101441_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_101441_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1a3b770cd_FnIns> _10187_ins = _1a3b755c6_instanceForce((*(_101441_f)));;
	jule::Ptr<_1a3cccad5_typeChecker> _10207_tc = jule::new_ptr<_1a3cccad5_typeChecker>(_1a3cccad5_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3), });;
	{
		auto expr = &((*(_10187_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92ece9b:;
		if (it != expr_end) {
			jule::Ptr<_1a3b76055_ParamIns> _102515_p = *it;
			{
				if ((!(_1a3b72c44_IsSelf((*(_102515_p))._field_Decl.ptr())))) {
					(*_102515_p.alloc)._field_Kind=_1a3cd5280_checkDecl(_10207_tc.ptr(), &((*((*(*(_102515_p))._field_Decl.alloc)._field_Kind))._field_Decl));
				};
			}
			_iter_next_1a92ece9b:;
			++it;
			goto _iter_begin_1a92ece9b;
		}
		_iter_end_1a92ece9b:;
	};
	if ((!(_1a3b74570_IsVoid((*(_101441_f)).ptr())))) {
		(*_10187_ins.alloc)._field_Result=_1a3cd5280_checkDecl(_10207_tc, &((*((*((*((*(_101441_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _10187_ins;;
}



inline jule::Bool _1a3c16777_checkConstraintsFn(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b770cd_FnIns>* _103740_f, jule::Ptr<_1a3b27a62_Token>* _103756_et, jule::Ptr<_1a3b770cd_FnIns> _103772_exist) {
	jule::Ptr<_1a3badd90_constraintChecker> _10387_cc = _1a3c12014_constraintChecker(_self_);;
	(*(_10387_cc))._field_et=(*(_103756_et));
	(*_10387_cc.alloc)._field_fi=(*(_103740_f));
	if ((_103772_exist != nullptr)) {
		{
			auto expr = &((*_103772_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a93024ab:;
			if (it != expr_end) {
				jule::I64 _10429_i = it - expr->begin();
				jule::Ptr<_1a3cb9341_InsGeneric> _104216_g = *it;
				{
					(*((*((*(_103740_f))))._field_Generics[_10429_i]))._field_Constraint=(*(_104216_g))._field_Constraint;
				}
				_iter_next_1a93024ab:;
				++it;
				_10429_i++;
				goto _iter_begin_1a93024ab;
			}
			_iter_end_1a93024ab:;
		};
	} else {
		(*_10387_cc.alloc)._field_uniq=true;
	};
	return _1a3baecc5_check(_10387_cc);;
}



inline jule::Bool _1a3c16c2d_checkConstraintsStruct(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _105144_s, jule::Ptr<_1a3b27a62_Token>* _105164_et, jule::Ptr<_1a3b61cbb_StructIns> _105180_exist) {
	jule::Ptr<_1a3badd90_constraintChecker> _10527_cc = _1a3c12014_constraintChecker(_self_);;
	(*(_10527_cc))._field_et=(*(_105164_et));
	(*_10527_cc.alloc)._field_si=(*(_105144_s));
	if ((_105180_exist != nullptr)) {
		{
			auto expr = &((*_105180_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9305646:;
			if (it != expr_end) {
				jule::I64 _10569_i = it - expr->begin();
				jule::Ptr<_1a3cb9341_InsGeneric> _105616_g = *it;
				{
					(*((*((*(_105144_s))))._field_Generics[_10569_i]))._field_Constraint=(*(_105616_g))._field_Constraint;
				}
				_iter_next_1a9305646:;
				++it;
				_10569_i++;
				goto _iter_begin_1a9305646;
			}
			_iter_end_1a9305646:;
		};
	} else {
		(*_10527_cc.alloc)._field_uniq=true;
	};
	return _1a3baecc5_check(_10527_cc);;
}



inline jule::Bool _1a3c17129_fnEnvironment(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b770cd_FnIns>* _106835_f, jule::Fn<jule::Bool,jule::Ptr<_1a3c08b54_Sema>*,jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>*> _106846_algo) {
	jule::Ptr<_1a3c08b54_Sema> _10697_sema = (*((*((*(_106835_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1a3c844b5_SymbolTable> _10707_old = (*((*(*((*(_106835_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1a3c0b371_setCurrentFile((*((*((*(_106835_f))))._field_Decl))._field_sema, _10707_old);
	});;
	jule::Ptr<_1a3c844b5_SymbolTable> _10727_file = _1a3c077bd_findFile(&((*(*((*((*(_106835_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_106835_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_10727_file != nullptr)) {
		_1a3c0b371_setCurrentFile((*((*((*(_106835_f))))._field_Decl))._field_sema, _10727_file);
	};
	jule::I64 _10777_size = (*((*(_106835_f))))._field_Generics.len();;
	if ((((*((*(_106835_f))))._field_Decl != nullptr) && ((*(*((*(_106835_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_10777_size+=(*(*((*((*(_106835_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> _10827_generics = jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>::alloc(0LL, _10777_size);;
	_1a3c07449_appendGenericTypeAliases(&(_10827_generics), _106835_f);
	jule::Bool _10853_ok = _106846_algo(&(_10697_sema), &(_10827_generics));;
	if ((_10697_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*(_10697_sema))._field_errors);
		(*_10697_sema.alloc)._field_errors=nullptr;
	};
	return _10853_ok;;
}



inline void _1a3c173d2_checkFnParamKind(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b76055_ParamIns>* _109538_p) {
	(*((*((*(_109538_p))))._field_Kind))._field_Variadic=(*((*((*(_109538_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_109538_p))))._field_Decl.alloc)._field_Reference && (!(_1a3cd71d8_isValidForRef(&((*((*(_109538_p))))._field_Kind)))))) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*(*((*(_109538_p))))._field_Decl.alloc)._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_109538_p))))._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Bool _1a3c17723_reloadFnInsTypes(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b770cd_FnIns> _110237_f) {
	if ((_1a3b78563_IsBuiltin(_110237_f.ptr()) || _1a3b787e9_IsAnon(_110237_f))) {
		return true;;
	};
	return _1a3c17129_fnEnvironment(_self_, &(_110237_f), jule::__new_closure<jule::Bool,jule::Ptr<_1a3c08b54_Sema>*,jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>*>((void*)__jule_anon_1a9312d4b, jule::Ptr<__jule_anon_1a9312d4b_ctx>::make(__jule_anon_1a9312d4b_ctx{._110237_f=_110237_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9312d4b_ctx_handler));;
}



inline jule::Bool _1a3c17bc9_checkRefValidityForInitExpr(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Bool _113844_leftMut, jule::Ptr<_1a3c8982d_Data>* _113864_d, jule::Ptr<_1a3b27a62_Token>* _113879_errorToken) {
	if ((!(_1a3c06217_isValidModelForRef(&((*((*(_113864_d))))._field_Model))))) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*(_113879_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_113844_leftMut && (!((*((*(_113864_d))))._field_Mutable)))) {
		_1a3c0b78e_pushErr(_self_, (*(_113879_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1a3c1801a_isMutRiskyStruct(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b61cbb_StructIns>* _115529_s) {
	{
		auto expr = &((*((*(_115529_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a931c75c:;
		if (it != expr_end) {
			jule::Ptr<_1a3b6121b_FieldIns> *_115610_f = it;
			{
				if ((((*((*((*(_115610_f))))._field_Decl))._field_Mutable && _1a3cbc5a8_Mutable((*(*(_115610_f)).alloc)._field_Kind.ptr())) && _1a3c0beed_isAccessibleDefine(_self_, (*(*((*(_115610_f))))._field_Decl.alloc)._field_Public, (*(*((*(_115610_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1a931c75c:;
			++it;
			goto _iter_begin_1a931c75c;
		}
		_iter_end_1a931c75c:;
	};
	return false;;
}



inline jule::Bool _1a3c18636_checkValidityForInitExpr(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Bool _118241_leftMut, jule::Bool _118256_leftRef, jule::Ptr<_1a3cbac27_TypeKind>* _11834_leftKind, jule::Ptr<_1a3c8982d_Data>* _118330_d, jule::Ptr<_1a3b27a62_Token>* _118345_errorToken) {
	if ((_118241_leftMut && (!((*((*(_118330_d))))._field_Mutable)))) {
		if (_1a3cbc5a8_Mutable((*((*(_118330_d))))._field_Kind.ptr())) {
			_1a3c0b78e_pushErr(_self_.ptr(), (*(_118345_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_118330_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1a3b61cbb_StructIns> _11914_s = _1a3cbe8eb_Struct((*((*(_118330_d))))._field_Kind);;
		if (((_11914_s != nullptr) && _1a3c1801a_isMutRiskyStruct(_self_, &(_11914_s)))) {
			_1a3c0b78e_pushErr(_self_, (*(_118345_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_118330_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_118256_leftRef) {
		if ((!(_1a3c17bc9_checkRefValidityForInitExpr(_self_, _118241_leftMut, _118330_d, _118345_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1a3c73295_assignTypeChecker> _12027_atc = jule::new_ptr<_1a3c73295_assignTypeChecker>(_1a3c73295_assignTypeChecker{._field_s=_self_, ._field_d=(*(_118330_d)), ._field_errorToken=(*(_118345_errorToken))});;
	return _1a3c739b0_checkValidity(_12027_atc.ptr());;
}



inline jule::Bool _1a3c18a32_checkTypeAliasDeclKind(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cb9e35_TypeAlias>* _121044_ta, jule::Trait _121064_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a3c844b5_SymbolTable> _12117_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a3c0b371_setCurrentFile(_self_, _12117_old);
	});;
	if (((*((*(_121044_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1a3c844b5_SymbolTable> _12168_file = _1a3c077bd_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_121044_ta))))._field_Token.alloc)._field_File));;
		if ((_12168_file != nullptr)) {
			_1a3c0b371_setCurrentFile(_self_, _12168_file);
		};
	};
	__jule_func_result=_1a3c11c7d_checkTypeWithRefers(_self_, &((*((*(_121044_ta))))._field_Kind), _121064_l, nullptr, jule::new_ptr<_1a3ccbae5_referencer>(_1a3ccbae5_referencer{._field_ident=(*((*(_121044_ta))))._field_Ident, ._field_owner=jule::Any((*(_121044_ta)), &__jule_any_type66), ._field_refs=(&((*((*(_121044_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1a3cbe148_Arr((*((*((*(_121044_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1a3cbe148_Arr((*((*((*(_121044_ta))))._field_Kind))._field_Kind)))._field_Auto)) {
		_1a3c0b78e_pushErr(_self_, (*((*(*((*(_121044_ta))))._field_Kind.alloc)._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1a3c18d95_checkTypeAliasDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cb9e35_TypeAlias>* _123340_ta, jule::Trait _123360_l) {
	if (_1a3b2a449_IsIgnoreIdent((*((*(_123340_ta))))._field_Ident)) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*((*(_123340_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1a3c18a32_checkTypeAliasDeclKind(_self_, _123340_ta, _123360_l);
}



inline void _1a3c1914d_checkTypeAliasDeclDup(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cb9e35_TypeAlias>* _124143_ta) {
	if (_1a3b2a449_IsIgnoreIdent((*((*(_124143_ta))))._field_Ident)) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*((*(_124143_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1a3c0c4a4_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_124143_ta))), &((*((*(_124143_ta))))._field_Ident), (*((*(_124143_ta))))._field_Binded)) {
		_1a3c0b78e_pushErr(_self_, (*((*(_124143_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124143_ta))))._field_Ident, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a3c18a32_checkTypeAliasDeclKind(_self_, _124143_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3));
}



inline jule::Bool _1a3c193d4_checkTypeAliasDecls(jule::Ptr<_1a3c08b54_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a933041d:;
		if (it != expr_end) {
			jule::Ptr<_1a3cb9e35_TypeAlias> _125415_ta = *it;
			{
				_1a3c1914d_checkTypeAliasDeclDup(_self_, &(_125415_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a933041d:;
			++it;
			goto _iter_begin_1a933041d;
		}
		_iter_end_1a933041d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a935be83_checkEnumItemsDup(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3b8971c_EnumItem>> _126536_items) {
	{
		auto expr = &(_126536_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a935d391:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8971c_EnumItem> *_126610_item = it;
			{
				if (((*((*(_126610_item))))._field_Ident).empty()) {
					goto _iter_next_1a935d391;
				} else if (_1a3b2a449_IsIgnoreIdent((*((*(_126610_item))))._field_Ident)) {
					_1a3c0b78e_pushErr(_self_, (*(*(_126610_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126536_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a935ed87:;
						if (it != expr_end) {
							jule::Ptr<_1a3b8971c_EnumItem> *_127212_citem = it;
							{
								if (((*(_126610_item)) == (*(_127212_citem)))) {
									goto _iter_end_1a935ed87;
								} else if (((*((*(_126610_item))))._field_Ident == (*((*(_127212_citem))))._field_Ident)) {
									_1a3c0b78e_pushErr(_self_, (*(*(_126610_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126610_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1a935ed87;
								};
							}
							_iter_next_1a935ed87:;
							++it;
							goto _iter_begin_1a935ed87;
						}
						_iter_end_1a935ed87:;
					};
				};
			}
			_iter_next_1a935d391:;
			++it;
			goto _iter_begin_1a935d391;
		}
		_iter_end_1a935d391:;
	};
}

inline void _1a936928c_checkEnumItemsDup(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3b8b3bc_TypeEnumItem>> _126536_items) {
	{
		auto expr = &(_126536_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a936a678:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8b3bc_TypeEnumItem> *_126610_item = it;
			{
				if (((*((*(_126610_item))))._field_Ident).empty()) {
					goto _iter_next_1a936a678;
				} else if (_1a3b2a449_IsIgnoreIdent((*((*(_126610_item))))._field_Ident)) {
					_1a3c0b78e_pushErr(_self_, (*(*(_126610_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126536_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a936c16e:;
						if (it != expr_end) {
							jule::Ptr<_1a3b8b3bc_TypeEnumItem> *_127212_citem = it;
							{
								if (((*(_126610_item)) == (*(_127212_citem)))) {
									goto _iter_end_1a936c16e;
								} else if (((*((*(_126610_item))))._field_Ident == (*((*(_127212_citem))))._field_Ident)) {
									_1a3c0b78e_pushErr(_self_, (*(*(_126610_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126610_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1a936c16e;
								};
							}
							_iter_next_1a936c16e:;
							++it;
							goto _iter_begin_1a936c16e;
						}
						_iter_end_1a936c16e:;
					};
				};
			}
			_iter_next_1a936a678:;
			++it;
			goto _iter_begin_1a936a678;
		}
		_iter_end_1a936a678:;
	};
}



inline void _1a3c19945_checkEnumItemsStr(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b8a289_Enum>* _128539_e) {
	jule::Ptr<_1a3c8b555_Eval> _12867_eval = _1a3c13c3b_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3));;
	{
		auto expr = &((*((*(_128539_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9332189:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8971c_EnumItem> _128715_item = *it;
			{
				if (_1a3b89ac4_AutoExpr(_128715_item.ptr())) {
					(*_128715_item.alloc)._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Constant=static__1b574893a_NewStr((*_128715_item.alloc)._field_Ident)})});
					(*((*((*_128715_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_128715_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1a3c8982d_Data> _12969_d = _1a3ca97b5_evalExpr(_12867_eval, (*((*(_128715_item))._field_Value))._field_Expr);;
					if ((_12969_d == nullptr)) {
						goto _iter_next_1a9332189;
					};
					if ((!(_1a3c8a235_IsConst(_12969_d.ptr())))) {
						_1a3c0b78e_pushErr(_self_, (*((*(*(_128715_item))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1a3c1429c_checkAssignType(_self_, false, &((*((*((*(_128539_e))))._field_Kind))._field_Kind), &(_12969_d), (*_128715_item.alloc)._field_Token);
					(*(*(_128715_item))._field_Value.alloc)._field_Data=_12969_d;
				};
			}
			_iter_next_1a9332189:;
			++it;
			goto _iter_begin_1a9332189;
		}
		_iter_end_1a9332189:;
	};
}



inline void _1a933c903_checkEnumItemInt(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3c8b555_Eval>* _131143_eval, jule::Ptr<_1a3b8a289_Enum>* _131161_e, jule::Ptr<_1a3cc3801_Prim>* _131172_prim, jule::Ptr<_1a3b8971c_EnumItem>* _131190_item, jule::U64* _1311112_n) {
	if (_1a3b89ac4_AutoExpr((*(_131190_item)).ptr())) {
		(*((*(_131190_item))))._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()});
		{
			
{
				_case_begin_1a933ecce:;
				{
					(*((*((*((*(_131190_item))))._field_Value))._field_Data))._field_Constant=static__1b57483a7_NewU64((*(_1311112_n)));
				}
			}
			_match_end_1a9340142:;
		};
		(*((*((*((*(_131190_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_131190_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1a3c8982d_Data> _13268_d = _1a3ca97b5_evalExpr((*(_131143_eval)), (*((*((*(_131190_item))))._field_Value))._field_Expr);;
		if ((_13268_d == nullptr)) {
			return;;
		};
		if ((!(_1a3c8a235_IsConst(_13268_d.ptr())))) {
			_1a3c0b78e_pushErr(_self_.ptr(), (*((*(*((*(_131190_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1a3c1429c_checkAssignType(_self_, false, &((*((*((*(_131161_e))))._field_Kind))._field_Kind), &(_13268_d), (*((*(_131190_item))))._field_Token);
		(*(*((*(_131190_item))))._field_Value.alloc)._field_Data=_13268_d;
		{
			
{
				_case_begin_1a9342ebe:;
				{
					(*(_1311112_n))=_1b5749809_ReadU64((*((*(*((*(_131190_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1a9345499:;
		};
	};
}

inline void _1a934c979_checkEnumItemInt(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3c8b555_Eval>* _131143_eval, jule::Ptr<_1a3b8a289_Enum>* _131161_e, jule::Ptr<_1a3cc3801_Prim>* _131172_prim, jule::Ptr<_1a3b8971c_EnumItem>* _131190_item, jule::I64* _1311112_n) {
	if (_1a3b89ac4_AutoExpr((*(_131190_item)).ptr())) {
		(*((*(_131190_item))))._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()});
		{
			
{
				_case_begin_1a93506b3:;
				{
					(*((*((*((*(_131190_item))))._field_Value))._field_Data))._field_Constant=static__1b57480dd_NewI64((*(_1311112_n)));
				}
			}
			_match_end_1a9350152:;
		};
		(*((*((*((*(_131190_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_131190_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1a3c8982d_Data> _13268_d = _1a3ca97b5_evalExpr((*(_131143_eval)), (*((*((*(_131190_item))))._field_Value))._field_Expr);;
		if ((_13268_d == nullptr)) {
			return;;
		};
		if ((!(_1a3c8a235_IsConst(_13268_d.ptr())))) {
			_1a3c0b78e_pushErr(_self_.ptr(), (*((*(*((*(_131190_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1a3c1429c_checkAssignType(_self_, false, &((*((*((*(_131161_e))))._field_Kind))._field_Kind), &(_13268_d), (*((*(_131190_item))))._field_Token);
		(*(*((*(_131190_item))))._field_Value.alloc)._field_Data=_13268_d;
		{
			
{
				_case_begin_1a93556a7:;
				{
					(*(_1311112_n))=_1b5749573_ReadI64((*((*(*((*(_131190_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1a9355641:;
		};
	};
}



inline void _1a9338a97_checkEnumItemsInt1(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cc3801_Prim>* _134641_prim, jule::Ptr<_1a3b8a289_Enum>* _134659_e) {
	jule::U64 _13477_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1a933a7ad:;
			{
				_13477_max=_1b57433e6_MaxU(_1a3cc3b42_Str((*(_134641_prim)).ptr()));
			}
		}
		_match_end_1a933a5d2:;
	};
	jule::Ptr<_1a3c8b555_Eval> _13577_eval = _1a3c13c3b_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3));;
	jule::U64 _13587_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1a3b8971c_EnumItem> _13597_first = (*((*(_134659_e))))._field_Items[0LL];;
	_1a933c903_checkEnumItemInt(_self_, &(_13577_eval), _134659_e, _134641_prim, &(_13597_first), &(_13587_n));
	if (((*((*(_13597_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1a933a0d7:;
				{
					_13587_n=_1b574a5c9_AsU64((*(*((*(_13597_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1a93465cc:;
		};
	};
	{
		auto expr = (*((*(_134659_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a9342287:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8971c_EnumItem> _137115_item = *it;
			{
				if (((_1a3b89ac4_AutoExpr(_137115_item.ptr()) && (_13587_n > 0LLU)) && ((_13477_max - _13587_n) <= 0LLU))) {
					_1a3c0b78e_pushErr(_self_, (*_137115_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1a9342287;
				};
				(_13587_n)++;
				_1a933c903_checkEnumItemInt(_self_, &(_13577_eval), _134659_e, _134641_prim, &(_137115_item), &(_13587_n));
			}
			_iter_next_1a9342287:;
			++it;
			goto _iter_begin_1a9342287;
		}
		_iter_end_1a9342287:;
	};
}

inline void _1a934917e_checkEnumItemsInt1(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3cc3801_Prim>* _134641_prim, jule::Ptr<_1a3b8a289_Enum>* _134659_e) {
	jule::I64 _13477_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1a934a823:;
			{
				_13477_max=_1b574312c_MaxI(_1a3cc3b42_Str((*(_134641_prim)).ptr()));
			}
		}
		_match_end_1a934a4c1:;
	};
	jule::Ptr<_1a3c8b555_Eval> _13577_eval = _1a3c13c3b_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3));;
	jule::I64 _13587_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1a3b8971c_EnumItem> _13597_first = (*((*(_134659_e))))._field_Items[0LL];;
	_1a934c979_checkEnumItemInt(_self_, &(_13577_eval), _134659_e, _134641_prim, &(_13597_first), &(_13587_n));
	if (((*((*(_13597_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1a934b868:;
				{
					_13587_n=_1b574a343_AsI64((*(*((*(_13597_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1a9355c3a:;
		};
	};
	{
		auto expr = (*((*(_134659_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a9357258:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8971c_EnumItem> _137115_item = *it;
			{
				if (((_1a3b89ac4_AutoExpr(_137115_item.ptr()) && (_13587_n > 0LL)) && ((_13477_max - _13587_n) <= 0LL))) {
					_1a3c0b78e_pushErr(_self_, (*_137115_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1a9357258;
				};
				(_13587_n)++;
				_1a934c979_checkEnumItemInt(_self_, &(_13577_eval), _134659_e, _134641_prim, &(_137115_item), &(_13587_n));
			}
			_iter_next_1a9357258:;
			++it;
			goto _iter_begin_1a9357258;
		}
		_iter_end_1a9357258:;
	};
}



inline void _1a3c1a5e4_checkEnumItemsInt(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b8a289_Enum>* _138139_e) {
	jule::Ptr<_1a3cc3801_Prim> _13823_prim = _1a3cbd378_Prim((*((*((*(_138139_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1b57469e3_IsSigInt((*(_13823_prim))._field_Kind)) {
			_case_begin_1a93478db:;
			{
				_1a934917e_checkEnumItemsInt1(_self_, &(_13823_prim), _138139_e);
			}
		}
		else {
			_case_begin_1a9338327:;
			{
				_1a9338a97_checkEnumItemsInt1(_self_, &(_13823_prim), _138139_e);
			}
		}
		_match_end_1a93382b1:;
	};
}



inline void _1a3c1a89c_checkEnumDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b8a289_Enum>* _139135_e) {
	if (_1a3b2a449_IsIgnoreIdent((*((*(_139135_e))))._field_Ident)) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*((*(_139135_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a3c0c4a4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_139135_e))), &((*((*(_139135_e))))._field_Ident), false)) {
		_1a3c0b78e_pushErr(_self_, (*((*(_139135_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139135_e))))._field_Ident, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_139135_e))))._field_Items.len() == 0LL)) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*((*(_139135_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_139135_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1a935be83_checkEnumItemsDup(_self_, (*((*(_139135_e))))._field_Items);
	if (((*((*(_139135_e))))._field_Kind != nullptr)) {
		if ((!(_1a3c12410_checkType(_self_, &((*((*(_139135_e))))._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3))))) {
			return;;
		};
	} else {
		(*((*(_139135_e))))._field_Kind=(*(_1a3e37338_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1a3cc3801_Prim> _14157_t = _1a3cbd378_Prim((*((*((*(_139135_e))))._field_Kind))._field_Kind.ptr());;
	if ((_14157_t == nullptr)) {
		_1a3c0b78e_pushErr(_self_, (*((*(_139135_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1a3cc6c88_IsStr(_14157_t.ptr())) {
			_case_begin_1a9363ae4:;
			{
				_1a3c19945_checkEnumItemsStr(_self_, _139135_e);
			}
		}
		else if (_1b57470ba_IsInt(_1a3cc3b42_Str(_14157_t.ptr()))) {
			_case_begin_1a9362e34:;
			{
				_1a3c1a5e4_checkEnumItemsInt(_self_, _139135_e);
			}
		}
		else {
			_case_begin_1a9362dbd:;
			{
				_1a3c0b78e_pushErr(_self_, (*((*(_139135_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a93638d5:;
	};
}



inline void _1a3c1ab55_checkTypeEnumDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b8b994_TypeEnum>* _143239_e) {
	if (_1a3b2a449_IsIgnoreIdent((*((*(_143239_e))))._field_Ident)) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*((*(_143239_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a3c0c4a4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_143239_e))), &((*((*(_143239_e))))._field_Ident), false)) {
		_1a3c0b78e_pushErr(_self_, (*((*(_143239_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143239_e))))._field_Ident, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_143239_e))))._field_Items.len() == 0LL)) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*((*(_143239_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_143239_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1a936928c_checkEnumItemsDup(_self_, (*((*(_143239_e))))._field_Items);
	{
		auto expr = &((*((*(_143239_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a936a227:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8b3bc_TypeEnumItem> _144615_item = *it;
			{
				if (((*(_144615_item))._field_Kind == nullptr)) {
					_1a3c0b78e_pushErr(_self_, (*_144615_item.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1a936a227;
				};
				jule::Bool _14514_ok = _1a3c12410_checkType(_self_, &((*_144615_item.alloc)._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3));;
				if ((!(_14514_ok))) {
					goto _iter_next_1a936a227;
				};
				jule::Ptr<_1a3cc3801_Prim> _14554_p = _1a3cbd378_Prim((*((*_144615_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_14554_p != nullptr) && _1a3cc701e_IsAny(_14554_p))) {
					_1a3c0b78e_pushErr(_self_, (*_144615_item.alloc)._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1a936a227:;
			++it;
			goto _iter_begin_1a936a227;
		}
		_iter_end_1a936a227:;
	};
	if (((*((*(_143239_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1a3b8b3bc_TypeEnumItem> _14618_item = (*((*(_143239_e))))._field_Items[0LL];;
		_1a3cbac27_TypeKind _14624_tk = _1a3cbac27_TypeKind{._field_Kind=jule::Trait((*(_143239_e)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data4)};;
		if ((((*((*(_14618_item))._field_Kind))._field_Kind != nullptr) && _1a3cbb431_Equal((*((*(_14618_item))._field_Kind))._field_Kind, ((jule::Ptr<_1a3cbac27_TypeKind>)((&(_14624_tk))))))) {
			_1a3c0b78e_pushErr(_self_, (*_14618_item.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1a3b8bcd5_Str((*(_143239_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1a3c1addb_checkEnumDecls(jule::Ptr<_1a3c08b54_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a937552e:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8a289_Enum> _147315_e = *it;
			{
				_1a3c1a89c_checkEnumDecl(_self_, &(_147315_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a937552e:;
			++it;
			goto _iter_begin_1a937552e;
		}
		_iter_end_1a937552e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a3c1b172_checkTypeEnumDecls(jule::Ptr<_1a3c08b54_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9376bd4:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8b994_TypeEnum> _148515_e = *it;
			{
				_1a3c1ab55_checkTypeEnumDecl(_self_, &(_148515_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a9376bd4:;
			++it;
			goto _iter_begin_1a9376bd4;
		}
		_iter_end_1a9376bd4:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a3c1b4b3_checkDeclGenerics(_1a3c08b54_Sema* _self_, jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>>* _149534_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _149534_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a937818b:;
		if (it != expr_end) {
			jule::I64 _14977_i = it - expr->begin();
			jule::Ptr<_1a3b4a348_GenericDecl> *_149710_g = it;
			{
				if (_1a3b2a449_IsIgnoreIdent((*((*(_149710_g))))._field_Ident)) {
					_1a3c0b78e_pushErr(_self_, (*(*(_149710_g)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1a937818b;
				};
				_julec_label_1a9379533:;
				{
					auto expr = _149534_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9378ec2:;
					if (it != expr_end) {
						jule::I64 _15068_j = it - expr->begin();
						jule::Ptr<_1a3b4a348_GenericDecl> *_150611_ct = it;
						{
							{
								
								if ((_15068_j >= _14977_i)) {
									_case_begin_1a937a611:;
									{
										goto _iter_end_1a9378ec2;
									}
								}
								else if (((*(*(_149710_g)).alloc)._field_Ident == (*((*(_150611_ct))))._field_Ident)) {
									_case_begin_1a937a699:;
									{
										_1a3c0b78e_pushErr(_self_, (*(*(_149710_g)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_149710_g)).alloc)._field_Ident, &__jule_any_type4)}));
										_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1a9378ec2;
									}
								}
								_match_end_1a937a512:;
							};
						}
						_iter_next_1a9378ec2:;
						++it;
						_15068_j++;
						goto _iter_begin_1a9378ec2;
					}
					_iter_end_1a9378ec2:;
				};
			}
			_iter_next_1a937818b:;
			++it;
			_14977_i++;
			goto _iter_begin_1a937818b;
		}
		_iter_end_1a937818b:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a3c1b804_checkFnDeclParamsDup(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b740ec_Fn>* _152237_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1a937c910:;
	{
		auto expr = &((*((*(_152237_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a937cbeb:;
		if (it != expr_end) {
			jule::I64 _15257_i = it - expr->begin();
			jule::Ptr<_1a3b72628_Param> *_152510_p = it;
			{
				{
					auto expr = &((*((*(_152237_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a937d8cd:;
					if (it != expr_end) {
						jule::Ptr<_1a3b4a348_GenericDecl> *_152711_g = it;
						{
							if (((*((*(_152510_p))))._field_Ident == (*((*(_152711_g))))._field_Ident)) {
								__jule_func_result=false;
								_1a3c0b78e_pushErr(_self_, (*(*(_152510_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152510_p)).alloc)._field_Ident, &__jule_any_type4)}));
								_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1a937cbeb;
							};
						}
						_iter_next_1a937d8cd:;
						++it;
						goto _iter_begin_1a937d8cd;
					}
					_iter_end_1a937d8cd:;
				};
				_julec_label_1a938021a:;
				{
					auto expr = &((*((*(_152237_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a937dda6:;
					if (it != expr_end) {
						jule::I64 _15378_j = it - expr->begin();
						jule::Ptr<_1a3b72628_Param> *_153711_jp = it;
						{
							{
								
								if ((_15378_j >= _15257_i)) {
									_case_begin_1a93811d8:;
									{
										goto _iter_end_1a937dda6;
									}
								}
								else if (_1a3b2a449_IsIgnoreIdent((*(*(_152510_p)).alloc)._field_Ident) || _1a3b2a449_IsIgnoreIdent((*((*(_153711_jp))))._field_Ident) || _1a3b2a713_IsAnonIdent((*(*(_152510_p)).alloc)._field_Ident) || _1a3b2a713_IsAnonIdent((*(*(_153711_jp)).alloc)._field_Ident)) {
									_case_begin_1a9381271:;
									{
										goto _iter_end_1a937dda6;
									}
								}
								else if (((*(*(_152510_p)).alloc)._field_Ident == (*((*(_153711_jp))))._field_Ident)) {
									_case_begin_1a93812d7:;
									{
										__jule_func_result=false;
										_1a3c0b78e_pushErr(_self_, (*(*(_152510_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152510_p)).alloc)._field_Ident, &__jule_any_type4)}));
										_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1a937cbeb;
									}
								}
								_match_end_1a9381095:;
							};
						}
						_iter_next_1a937dda6:;
						++it;
						_15378_j++;
						goto _iter_begin_1a937dda6;
					}
					_iter_end_1a937dda6:;
				};
			}
			_iter_next_1a937cbeb:;
			++it;
			_15257_i++;
			goto _iter_begin_1a937cbeb;
		}
		_iter_end_1a937cbeb:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a3c1bb45_checkFnDeclResultDup(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b740ec_Fn>* _155937_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1a3b74570_IsVoid((*(_155937_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_155937_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9384cbe:;
		if (it != expr_end) {
			jule::I64 _15667_i = it - expr->begin();
			jule::Ptr<_1a3b27a62_Token> *_156610_v = it;
			{
				if ((_1a3b2a449_IsIgnoreIdent((*((*(_156610_v))))._field_Kind) || _1a3b2a713_IsAnonIdent((*(*(_156610_v)).alloc)._field_Kind))) {
					goto _iter_next_1a9384cbe;
				};
				{
					auto expr = &((*((*(_155937_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9386364:;
					if (it != expr_end) {
						jule::Ptr<_1a3b4a348_GenericDecl> *_157111_g = it;
						{
							if (((*(*(_156610_v)).alloc)._field_Kind == (*((*(_157111_g))))._field_Ident)) {
								goto _julec_label_1a938a1c0;
							};
						}
						_iter_next_1a9386364:;
						++it;
						goto _iter_begin_1a9386364;
					}
					_iter_end_1a9386364:;
				};
				{
					auto expr = &((*((*(_155937_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a93877c7:;
					if (it != expr_end) {
						jule::Ptr<_1a3b72628_Param> *_157711_p = it;
						{
							if (((*(*(_156610_v)).alloc)._field_Kind == (*((*(_157711_p))))._field_Ident)) {
								goto _julec_label_1a938a1c0;
							};
						}
						_iter_next_1a93877c7:;
						++it;
						goto _iter_begin_1a93877c7;
					}
					_iter_end_1a93877c7:;
				};
				_julec_label_1a9388564:;
				{
					auto expr = &((*((*((*(_155937_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9389026:;
					if (it != expr_end) {
						jule::I64 _15858_j = it - expr->begin();
						jule::Ptr<_1a3b27a62_Token> *_158511_jv = it;
						{
							{
								
								if ((_15858_j >= _15667_i)) {
									_case_begin_1a9389a93:;
									{
										goto _iter_end_1a9389026;
									}
								}
								else if (((*((*(_158511_jv))))._field_Kind == (*(*(_156610_v)).alloc)._field_Kind)) {
									_case_begin_1a9389b2b:;
									{
										goto _julec_label_1a938a1c0;
									}
								}
								_match_end_1a9389994:;
							};
						}
						_iter_next_1a9389026:;
						++it;
						_15858_j++;
						goto _iter_begin_1a9389026;
					}
					_iter_end_1a9389026:;
				};
				goto _iter_next_1a9384cbe;
				_julec_label_1a938a1c0:;
				_1a3c0b78e_pushErr(_self_, (*(_156610_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_156610_v)).alloc)._field_Kind, &__jule_any_type4)}));
				_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1a9384cbe:;
			++it;
			_15667_i++;
			goto _iter_begin_1a9384cbe;
		}
		_iter_end_1a9384cbe:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a3c1be86_checkFnVariadicParam(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b740ec_Fn>* _160442_f) {
	if (((*((*(_160442_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1a3b72628_Param> _16087_param = (*((*(_160442_f))))._field_Params[((*((*(_160442_f))))._field_Params.len() - 1LL)];;
	if (((*(_16087_param))._field_Variadic && (*_16087_param.alloc)._field_Reference)) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*_16087_param.alloc)._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1a3c1c23e_checkFnDeclPrototype(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b740ec_Fn>* _161742_f) {
	if (((*((*(_161742_f))))._field_Exceptional && (*((*(_161742_f))))._field_Binded)) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*((*(_161742_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_161742_f))))._field_Exceptional) {
		if (_1a3b74a8c_IsEntryPoint((*(_161742_f)).ptr())) {
			_1a3c0b78e_pushErr(_self_, (*((*(_161742_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1a3b74d23_IsInit((*(_161742_f)).ptr())) {
			_1a3c0b78e_pushErr(_self_, (*((*(_161742_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1a3c1b4b3_checkDeclGenerics(_self_, &((*((*(_161742_f))))._field_Generics))))) {
			_case_begin_1a9392150:;
		}
		else if ((!(_1a3c1b804_checkFnDeclParamsDup(_self_, _161742_f)))) {
			_case_begin_1a93921b6:;
		}
		else if ((!(_1a3c1bb45_checkFnDeclResultDup(_self_, _161742_f)))) {
			_case_begin_1a939222c:;
		}
		else if ((!(_1a3c1be86_checkFnVariadicParam(_self_, _161742_f)))) {
			_case_begin_1a9392293:;
		}
		_match_end_1a9390736:;
	};
}



inline jule::Bool _1a3c1c6e5_catchTraitInheritCycle(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b87a7d_Trait> _163939_t1, jule::Ptr<_1a3b87a7d_Trait> _163955_t2, _1e7be2632_StrBuilder* _163972_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_163955_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93947d4:;
		if (it != expr_end) {
			jule::Ptr<_1a3cc2de9_TypeSymbol> _164115_i = *it;
			{
				if (((*(_164115_i))._field_Kind == nullptr)) {
					goto _iter_next_1a93947d4;
				};
				jule::Ptr<_1a3b87a7d_Trait> _16458_t3 = _1a3cbeb82_Trait((*_164115_i.alloc)._field_Kind.ptr());;
				if ((_163939_t1 == _16458_t3)) {
					_1a3c22475_pushCycleError(_self_.ptr(), &((*(_163955_t2))._field_Ident), &((*(_16458_t3))._field_Ident), _163972_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1a3c1c6e5_catchTraitInheritCycle(_self_, _163939_t1, _16458_t3, _163972_message)))) {
					_1a3c22475_pushCycleError(_self_, &((*_163955_t2.alloc)._field_Ident), &((*_16458_t3.alloc)._field_Ident), _163972_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a93947d4:;
			++it;
			goto _iter_begin_1a93947d4;
		}
		_iter_end_1a93947d4:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a3c1ca36__checkTraitDeclInherits(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b87a7d_Trait>* _165845_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165845_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a939cdb4:;
		if (it != expr_end) {
			jule::I64 _16608_i = it - expr->begin();
			jule::Ptr<_1a3cc2de9_TypeSymbol> _166015_it = *it;
			{
				if ((!(_1a3c12410_checkType(_self_, &(_166015_it), jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3))))) {
					__jule_func_result=false;
					goto _iter_next_1a939cdb4;
				};
				jule::Ptr<_1a3b87a7d_Trait> _16658_t2 = _1a3cbeb82_Trait((*(_166015_it))._field_Kind.ptr());;
				if ((_16658_t2 == nullptr)) {
					_1a3c0b78e_pushErr(_self_, (*((*_166015_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165845_t))))._field_Ident, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*(_166015_it))._field_Kind), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1a939cdb4;
				};
				{
					auto expr = &((*((*(_165845_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a93a1318:;
					if (it != expr_end) {
						jule::I64 _16718_j = it - expr->begin();
						jule::Ptr<_1a3cc2de9_TypeSymbol> _167111_it2 = *it;
						{
							if ((_16718_j >= _16608_i)) {
								goto _iter_end_1a93a1318;
							};
							if ((((*(_167111_it2))._field_Kind != nullptr) && _1a3cbb431_Equal((*(_166015_it))._field_Kind, (*_167111_it2.alloc)._field_Kind))) {
								_1a3c0b78e_pushErr(_self_, (*(*(_166015_it))._field_Decl.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_16658_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1a93a1318;
							};
						}
						_iter_next_1a93a1318:;
						++it;
						_16718_j++;
						goto _iter_begin_1a93a1318;
					}
					_iter_end_1a93a1318:;
				};
				if (((*(_165845_t)) == _16658_t2)) {
					_1a3c0b78e_pushErr(_self_, (*(*(_166015_it))._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165845_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_1e7be2632_StrBuilder _16859_message = static__1e7be28eb_New(64LL);;
					__jule_func_result=(__jule_func_result && _1a3c1c6e5_catchTraitInheritCycle(_self_, (*(_165845_t)), _16658_t2, &(_16859_message)));
					if ((_1e7bebedd_Len(&_16859_message) > 0LL)) {
						jule::Str _168810_errMsg = _1e7beba59_Str(&_16859_message);;
						_1e7bebc57_Clear(&_16859_message);
						_1a3c22475_pushCycleError(_self_, &((*((*(_165845_t))))._field_Ident), &((*(_16658_t2))._field_Ident), &(_16859_message));
						_168810_errMsg+=_1e7beba59_Str(&_16859_message);
						_1a3c0b78e_pushErr(_self_, (*(*(_166015_it))._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_168810_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1a939cdb4:;
			++it;
			_16608_i++;
			goto _iter_begin_1a939cdb4;
		}
		_iter_end_1a939cdb4:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a3c1ccde_checkTraitDeclInherits(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b87a7d_Trait>* _169944_t) {
	{
		auto expr = &((*((*(_169944_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93a7d25:;
		if (it != expr_end) {
			jule::I64 _17008_i = it - expr->begin();
			jule::Ptr<_1a3cc2de9_TypeSymbol> _170015_it = *it;
			{
				jule::Ptr<_1a3b87a7d_Trait> _17018_t1 = _1a3cbeb82_Trait((*(_170015_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_169944_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a93a9332:;
					if (it != expr_end) {
						jule::I64 _17029_j = it - expr->begin();
						jule::Ptr<_1a3cc2de9_TypeSymbol> _170216_it2 = *it;
						{
							if ((_17029_j == _17008_i)) {
								goto _iter_next_1a93a9332;
							};
							jule::Ptr<_1a3b87a7d_Trait> _17069_t2 = _1a3cbeb82_Trait((*(_170216_it2))._field_Kind);;
							{
								auto expr = &((*(_17018_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a93aaaa3:;
								if (it != expr_end) {
									jule::Ptr<_1a3b740ec_Fn> _170717_t1m = *it;
									{
										jule::Ptr<_1a3b740ec_Fn> _170810_t2m = _1a3b8872c_FindMethod(_17069_t2.ptr(), (*(_170717_t1m))._field_Ident);;
										if ((_170810_t2m == nullptr)) {
											goto _iter_next_1a93aaaa3;
										};
										jule::Ptr<_1a3b770cd_FnIns> _17126_t1f = _1a3c162c1_getTraitCheckFnKind(_self_, &(_170717_t1m));;
										jule::Ptr<_1a3b770cd_FnIns> _17136_t2f = _1a3c162c1_getTraitCheckFnKind(_self_, &(_170810_t2m));;
										if ((!(_1a3b78046_equalTrait(_17126_t1f, &(_17136_t2f))))) {
											_1a3c0b78e_pushErr(_self_, (*((*_170015_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_169944_t))))._field_Ident, &__jule_any_type4),jule::Any((*_17069_t2.alloc)._field_Ident, &__jule_any_type4),jule::Any(_1a3b78e7b_GetKindStr(_17126_t1f, true), &__jule_any_type4),jule::Any(_1a3b78e7b_GetKindStr(_17136_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1a93aaaa3:;
									++it;
									goto _iter_begin_1a93aaaa3;
								}
								_iter_end_1a93aaaa3:;
							};
						}
						_iter_next_1a93a9332:;
						++it;
						_17029_j++;
						goto _iter_begin_1a93a9332;
					}
					_iter_end_1a93a9332:;
				};
			}
			_iter_next_1a93a7d25:;
			++it;
			_17008_i++;
			goto _iter_begin_1a93a7d25;
		}
		_iter_end_1a93a7d25:;
	};
}



inline void _1a3c1d097_checkTraitDeclMethod(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b740ec_Fn>* _172442_f) {
	if (_1a3b2a449_IsIgnoreIdent((*((*(_172442_f))))._field_Ident)) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*((*(_172442_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a3b2a713_IsAnonIdent((*((*(_172442_f))))._field_Ident)) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*((*(_172442_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_172442_f))))._field_sema=_self_;
	_1a3c1c23e_checkFnDeclPrototype(_self_, _172442_f);
	jule::Ptr<_1a3b770cd_FnIns> _17327_ins = _1a3b7585c_instance((*(_172442_f)));;
	_1a3c17723_reloadFnInsTypes(_self_, _17327_ins);
	(*(_17327_ins))._field_reloaded=true;
	_1a3b75b6a_appendInstance((*(_172442_f)).ptr(), &(_17327_ins));
}



inline void _1a3c1d350_checkTraitDeclMethods(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b87a7d_Trait>* _173843_t) {
	{
		auto expr = &((*((*(_173843_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93b2bcb:;
		if (it != expr_end) {
			jule::I64 _17398_i = it - expr->begin();
			jule::Ptr<_1a3b740ec_Fn> _173915_f = *it;
			{
				_1a3c1d097_checkTraitDeclMethod(_self_, &(_173915_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1a3b88dae_findMethodInherit((*(_173843_t)).ptr(), &((*(_173915_f))._field_Ident)) != nullptr)) {
					_1a3c0b78e_pushErr(_self_, (*_173915_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173915_f.alloc)._field_Ident, &__jule_any_type4)}));
					_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1a93b2bcb;
				};
				_julec_label_1a93b45e5:;
				{
					auto expr = &((*((*(_173843_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a93b5bce:;
					if (it != expr_end) {
						jule::I64 _17558_j = it - expr->begin();
						jule::Ptr<_1a3b740ec_Fn> _175511_jf = *it;
						{
							{
								
								if ((_17558_j >= _17398_i)) {
									_case_begin_1a93b674b:;
									{
										goto _iter_end_1a93b5bce;
									}
								}
								else if (((*_173915_f.alloc)._field_Ident == (*(_175511_jf))._field_Ident)) {
									_case_begin_1a93b67d4:;
									{
										_1a3c0b78e_pushErr(_self_, (*_173915_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173915_f.alloc)._field_Ident, &__jule_any_type4)}));
										_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1a93b5bce;
									}
								}
								_match_end_1a93b664c:;
							};
						}
						_iter_next_1a93b5bce:;
						++it;
						_17558_j++;
						goto _iter_begin_1a93b5bce;
					}
					_iter_end_1a93b5bce:;
				};
			}
			_iter_next_1a93b2bcb:;
			++it;
			_17398_i++;
			goto _iter_begin_1a93b2bcb;
		}
		_iter_end_1a93b2bcb:;
	};
}



inline void _1a3c1d608_checkTraitDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b87a7d_Trait>* _177436_t) {
	if (_1a3b2a449_IsIgnoreIdent((*((*(_177436_t))))._field_Ident)) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*((*(_177436_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a3c0c4a4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_177436_t))), &((*((*(_177436_t))))._field_Ident), false)) {
		_1a3c0b78e_pushErr(_self_, (*((*(_177436_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_177436_t))))._field_Ident, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a3c1ccde_checkTraitDeclInherits(_self_, _177436_t);
	_1a3c1d350_checkTraitDeclMethods(_self_, _177436_t);
}



inline jule::Bool _1a3c1d88e_checkTraitDecls(jule::Ptr<_1a3c08b54_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93bbb3b:;
		if (it != expr_end) {
			jule::Ptr<_1a3b87a7d_Trait> _178815_t = *it;
			{
				_1a3c1d608_checkTraitDecl(_self_, &(_178815_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a93bbb3b:;
			++it;
			goto _iter_begin_1a93bbb3b;
		}
		_iter_end_1a93bbb3b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a3c1dc8a_checkTraitImplMethods(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b87a7d_Trait>* _179842_base, jule::Ptr<_1a3bb11e4_Impl>* _179857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_179857_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93bd5ee:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> *_180010_f = it;
			{
				if ((_1a3b8872c_FindMethod((*(_179842_base)).ptr(), (*((*(_180010_f))))._field_Ident) == nullptr)) {
					_1a3c0b78e_pushErr(_self_, (*(*(_180010_f)).alloc)._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_179842_base))))._field_Ident, &__jule_any_type4),jule::Any((*(*(_180010_f)).alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1a93bd5ee:;
			++it;
			goto _iter_begin_1a93bd5ee;
		}
		_iter_end_1a93bd5ee:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a3c1e186_implToStruct(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b5e03d_Struct>* _180934_dest, jule::Ptr<_1a3bb11e4_Impl>* _180954_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_180954_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93c0d1b:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _181315_f = *it;
			{
				if (((_1a3b5eba9_FindMethod((*(_180934_dest)).ptr(), (*(_181315_f))._field_Ident, (*_181315_f.alloc)._field_Statically) != nullptr) || (_1a3b6033b_FindField((*(_180934_dest)).ptr(), (*_181315_f.alloc)._field_Ident) != nullptr))) {
					_1a3c0b78e_pushErr(_self_.ptr(), (*_181315_f.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180934_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_181315_f.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1a93c0d1b;
				};
				if ((((*((*(_180934_dest))))._field_Generics.len() > 0LL) && ((*_181315_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_181315_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a93c3c0e:;
						if (it != expr_end) {
							jule::Ptr<_1a3b4a348_GenericDecl> _182112_fg = *it;
							{
								{
									auto expr = &((*((*(_180934_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1a93c465a:;
									if (it != expr_end) {
										jule::Ptr<_1a3b4a348_GenericDecl> _182213_dg = *it;
										{
											if (((*(_182112_fg))._field_Ident == (*(_182213_dg))._field_Ident)) {
												_1a3c0b78e_pushErr(_self_, (*_182112_fg.alloc)._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1a93c465a:;
										++it;
										goto _iter_begin_1a93c465a;
									}
									_iter_end_1a93c465a:;
								};
							}
							_iter_next_1a93c3c0e:;
							++it;
							goto _iter_begin_1a93c3c0e;
						}
						_iter_end_1a93c3c0e:;
					};
				};
				_1a3c0c817_checkDirectives(_self_, &((*_181315_f.alloc)._field_Directives), jule::Any(_181315_f, &__jule_any_type64));
				(*_181315_f.alloc)._field_sema=_self_;
				(*_181315_f.alloc)._field_Owner=(*(_180934_dest));
				{ jule::Slice<jule::Ptr<_1a3b740ec_Fn>> &__jule_push_dest = (*((*(_180934_dest))))._field_Methods; __jule_push_dest.push(_181315_f); };
			}
			_iter_next_1a93c0d1b:;
			++it;
			goto _iter_begin_1a93c0d1b;
		}
		_iter_end_1a93c0d1b:;
	};
	{
		auto expr = &((*((*(_180954_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93c11e5:;
		if (it != expr_end) {
			jule::Ptr<_1a3c31c26_Var> _183815_v = *it;
			{
				;
				if (((_1a3b5eba9_FindMethod((*(_180934_dest)).ptr(), (*(_183815_v))._field_Ident, true) != nullptr) || (_1a3b5eeea_FindStatic((*(_180934_dest)).ptr(), (*_183815_v.alloc)._field_Ident) != nullptr))) {
					_1a3c0b78e_pushErr(_self_, (*_183815_v.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180934_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_183815_v.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1a93c11e5;
				};
				{ jule::Slice<jule::Ptr<_1a3c31c26_Var>> &__jule_push_dest = (*((*(_180934_dest))))._field_Statics; __jule_push_dest.push(_183815_v); };
			}
			_iter_next_1a93c11e5:;
			++it;
			goto _iter_begin_1a93c11e5;
		}
		_iter_end_1a93c11e5:;
	};
	return __jule_func_result;;
}



inline void _1a3c1e43e_implTrait(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3bb11e4_Impl>* _185131_decl) {
	jule::Ptr<_1a3cbac27_TypeKind> _18527_base_t = _1a3c13048_selectType(_self_, &((*((*(_185131_decl))))._field_Base));;
	if ((_18527_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3b87a7d_Trait> _18567_base = _1a3cbeb82_Trait(_18527_base_t.ptr());;
	if ((_18567_base == nullptr)) {
		_1a3c0b78e_pushErr(_self_, (*((*((*(_185131_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str(_18527_base_t.ptr()), &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3cbac27_TypeKind> _18637_destT = _1a3c13048_selectType(_self_, &((*((*(_185131_decl))))._field_Dest));;
	if ((_18637_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3b61cbb_StructIns> _18677_destS = _1a3cbe8eb_Struct(_18637_destT.ptr());;
	if ((_18677_destS == nullptr)) {
		_1a3c0b78e_pushErr(_self_, (*((*((*(_185131_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str(_18637_destT.ptr()), &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3b5e03d_Struct> _18747_dest = (*(_18677_destS))._field_Decl;;
	if ((_1a3b2d99c_Dir((*((*(_18747_dest))._field_Token))._field_File.ptr()) != _1a3b2d99c_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a3c0b78e_pushErr(_self_, (*(*((*(_185131_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1a3c3040b_pushImplemented(_18567_base, &(_18747_dest));
	_1a3c306e7_pushImplements(&(_18747_dest), _18567_base);
	if (((*((*(_185131_decl))))._field_Statics.len() > 0LL)) {
		_1a3c0b78e_pushErr(_self_, (*((*((*(_185131_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1a3c1dc8a_checkTraitImplMethods(_self_, &(_18567_base), _185131_decl)))) {
			_case_begin_1a93d3801:;
		}
		else if ((!(_1a3c1e186_implToStruct(_self_, &(_18747_dest), _185131_decl)))) {
			_case_begin_1a93d3889:;
		}
		_match_end_1a93d2569:;
	};
}



inline void _1a3c1e6e7_implStruct(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3bb11e4_Impl>* _189432_decl) {
	jule::Ptr<_1a3cbac27_TypeKind> _18957_destT = _1a3c13048_selectType(_self_, &((*((*(_189432_decl))))._field_Dest));;
	if ((_18957_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3b61cbb_StructIns> _18997_destS = _1a3cbe8eb_Struct(_18957_destT.ptr());;
	if ((_18997_destS == nullptr)) {
		_1a3c0b78e_pushErr(_self_, (*((*((*(_189432_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str(_18957_destT.ptr()), &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3b5e03d_Struct> _19067_dest = (*(_18997_destS))._field_Decl;;
	if ((_1a3b2d99c_Dir((*((*(_19067_dest))._field_Token))._field_File.ptr()) != _1a3b2d99c_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a3c0b78e_pushErr(_self_, (*(*((*(_189432_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1a3c1e186_implToStruct(_self_, &(_19067_dest), _189432_decl)))) {
			_case_begin_1a93d950a:;
		}
		_match_end_1a93d931d:;
	};
}



inline void _1a3c1e9a0_implImpl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3bb11e4_Impl>* _191830_decl) {
	{
		
		if (_1a3bb15ac_IsTraitImpl((*(_191830_decl)).ptr())) {
			_case_begin_1a93da077:;
			{
				_1a3c1e43e_implTrait(_self_, _191830_decl);
			}
		}
		else if (_1a3bb1843_IsStructImpl((*(_191830_decl)).ptr())) {
			_case_begin_1a93da121:;
			{
				_1a3c1e6e7_implStruct(_self_, _191830_decl);
			}
		}
		_match_end_1a93d9e67:;
	};
}



inline void _1a3c1ed13_checkVarDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3c31c26_Var>* _192934_decl, jule::Trait _192950_l) {
	if (_1a3b2a449_IsIgnoreIdent((*((*(_192934_decl))))._field_Ident)) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*((*(_192934_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1a3c32386_IsTypeInferred((*(_192934_decl)).ptr())) {
		if ((!(_1a3c32100_IsInitialized((*(_192934_decl)).ptr())))) {
			_1a3c0b78e_pushErr(_self_, (*((*(_192934_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1a3c12410_checkType(_self_, &((*((*(_192934_decl))))._field_Kind), _192950_l);
	};
	if ((*((*(_192934_decl))))._field_Reference) {
		if ((*((*(_192934_decl))))._field_Constant) {
			_1a3c0b78e_pushErr(_self_, (*((*(_192934_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_192934_decl))))._field_Statically) {
			_1a3c0b78e_pushErr(_self_, (*((*(_192934_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1a3c32100_IsInitialized((*(_192934_decl)).ptr())))) {
		if ((*((*(_192934_decl))))._field_Constant) {
			_1a3c0b78e_pushErr(_self_, (*((*(_192934_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_192934_decl))))._field_Statically) {
			_1a3c0b78e_pushErr(_self_, (*((*(_192934_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_192934_decl))))._field_Reference) {
			_1a3c0b78e_pushErr(_self_, (*((*(_192934_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1a3c200bb_checkGlobalVarDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3c31c26_Var>* _196640_decl) {
	if (_1a3c0c4a4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_196640_decl))), &((*((*(_196640_decl))))._field_Ident), (*((*(_196640_decl))))._field_Binded)) {
		_1a3c0b78e_pushErr(_self_, (*((*(_196640_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_196640_decl))))._field_Ident, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_196640_decl))))._field_Binded && (*((*(_196640_decl))))._field_Constant)) {
		_1a3c0b78e_pushErr(_self_, (*((*(_196640_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_196640_decl))))._field_Binded)) && (!((*((*(_196640_decl))))._field_Constant))) && (!((*((*(_196640_decl))))._field_Statically)))) {
		_1a3c0b78e_pushErr(_self_, (*((*(_196640_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1a3c0c817_checkDirectives(_self_, &((*((*(_196640_decl))))._field_Directives), jule::Any((*(_196640_decl)), &__jule_any_type8));
	_1a3c1ed13_checkVarDecl(_self_, _196640_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3));
}



inline jule::Bool _1a3c20352_checkGlobalDecls(jule::Ptr<_1a3c08b54_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93e81ea:;
		if (it != expr_end) {
			jule::Ptr<_1a3c31c26_Var> _198415_decl = *it;
			{
				_1a3c200bb_checkGlobalVarDecl(_self_, &(_198415_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a93e81ea:;
			++it;
			goto _iter_begin_1a93e81ea;
		}
		_iter_end_1a93e81ea:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a3c2074d_checkStructTraitImpl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b5e03d_Struct>* _199442_strct, jule::Ptr<_1a3b87a7d_Trait>* _199463_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_199463_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93e9aae:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _199515_tf = *it;
			{
				jule::Bool _19968_exist = false;;
				jule::Ptr<_1a3b740ec_Fn> _19978_sf = _1a3b5eba9_FindMethod((*(_199442_strct)).ptr(), (*(_199515_tf))._field_Ident, (*_199515_tf.alloc)._field_Statically);;
				jule::Ptr<_1a3b770cd_FnIns> _19984_tfK = _1a3c162c1_getTraitCheckFnKind(_self_, &(_199515_tf));;
				if ((_19978_sf != nullptr)) {
					jule::Ptr<_1a3b770cd_FnIns> _20009_sfK = _1a3c162c1_getTraitCheckFnKind(_self_, &(_19978_sf));;
					_19968_exist=_1a3b78046_equalTrait(_19984_tfK, &(_20009_sfK));
				};
				if (_19968_exist) {
					jule::Ptr<_1a3b3c55a_Directive> _20045_d = _1a3cb31c5_findDirective(&((*_19978_sf.alloc)._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_20045_d != nullptr)) {
						_1a3c0b78e_pushErr(_self_, (*_20045_d.alloc)._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1a3c0b78e_pushErr(_self_, (*((*(_199442_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_199463_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1a3b78e7b_GetKindStr(_19984_tfK, true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1a93e9aae:;
			++it;
			goto _iter_begin_1a93e9aae;
		}
		_iter_end_1a93e9aae:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a3c20a8e_checkStructImpls(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b5e03d_Struct>* _201838_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_201838_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94007eb:;
		if (it != expr_end) {
			jule::Ptr<_1a3b87a7d_Trait> _202015_trt = *it;
			{
				__jule_func_result=(_1a3c2074d_checkStructTraitImpl(_self_, _201838_s, &(_202015_trt)) && __jule_func_result);
			}
			_iter_next_1a94007eb:;
			++it;
			goto _iter_begin_1a94007eb;
		}
		_iter_end_1a94007eb:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a3c20dd0_checkStructFields(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b5e03d_Struct>* _202639_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_202639_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9401c81:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5b117_Field> _202815_f = *it;
			{
				(*(_202815_f))._field_Owner=(*(_202639_st));
				{
					auto expr = &((*((*(_202639_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9402996:;
					if (it != expr_end) {
						jule::Ptr<_1a3b5b117_Field> _203011_cf = *it;
						{
							if ((_202815_f == _203011_cf)) {
								goto _iter_end_1a9402996;
							} else if (((*_202815_f.alloc)._field_Ident == (*(_203011_cf))._field_Ident)) {
								_1a3c0b78e_pushErr(_self_.ptr(), (*_202815_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_202815_f.alloc)._field_Ident, &__jule_any_type4)}));
								_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1a9402996:;
						++it;
						goto _iter_begin_1a9402996;
					}
					_iter_end_1a9402996:;
				};
			}
			_iter_next_1a9401c81:;
			++it;
			goto _iter_begin_1a9401c81;
		}
		_iter_end_1a9401c81:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a3c21188_checkStructDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b5e03d_Struct>* _204337_s) {
	if (_1a3b2a449_IsIgnoreIdent((*((*(_204337_s))))._field_Ident)) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*((*(_204337_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a3c0c4a4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_204337_s))), &((*((*(_204337_s))))._field_Ident), (*((*(_204337_s))))._field_Binded)) {
		_1a3c0b78e_pushErr(_self_, (*((*(_204337_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_204337_s))))._field_Ident, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a3c0c817_checkDirectives(_self_, &((*((*(_204337_s))))._field_Directives), jule::Any((*(_204337_s)), &__jule_any_type65));
	{
		
		if ((!(_1a3c1b4b3_checkDeclGenerics(_self_, &((*((*(_204337_s))))._field_Generics))))) {
			_case_begin_1a9407704:;
		}
		else if ((!(_1a3c20dd0_checkStructFields(_self_, _204337_s)))) {
			_case_begin_1a940776a:;
		}
		else if ((!(_1a3c20a8e_checkStructImpls(_self_, _204337_s)))) {
			_case_begin_1a94077d1:;
		}
		else if ((!(_1a3c21cc1_checkFuncDeclsBy(_self_, &((*((*(_204337_s))))._field_Methods))))) {
			_case_begin_1a9407847:;
		}
		_match_end_1a94075c2:;
	};
}



inline jule::Bool _1a3c2141e_checkStructDecls(jule::Ptr<_1a3c08b54_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9409a14:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> _206315_s = *it;
			{
				_1a3c21188_checkStructDecl(_self_, &(_206315_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a9409a14:;
			++it;
			goto _iter_begin_1a9409a14;
		}
		_iter_end_1a9409a14:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a3c216c7_checkAnonFuncDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b740ec_Fn>* _207339_f) {
	(*((*(_207339_f))))._field_sema=_self_;
	_1a3c1c23e_checkFnDeclPrototype(_self_, _207339_f);
}



inline void _1a3c21980_checkFuncDecl(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b740ec_Fn>* _207835_f) {
	if (_1a3b2a449_IsIgnoreIdent((*((*(_207835_f))))._field_Ident)) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*((*(_207835_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a3b750a9_IsAnon((*(_207835_f)).ptr())) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*((*(_207835_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1a3c0c817_checkDirectives(_self_, &((*((*(_207835_f))))._field_Directives), jule::Any((*(_207835_f)), &__jule_any_type64));
	_1a3c216c7_checkAnonFuncDecl(_self_, _207835_f);
	if ((((*((*(_207835_f))))._field_Owner == nullptr) && _1a3c0c4a4_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_207835_f))), &((*((*(_207835_f))))._field_Ident), (*((*(_207835_f))))._field_Binded))) {
		if ((*((*(_207835_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1a3b740ec_Fn> _20905_init = _1a3c0a1d8_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_20905_init != nullptr)) {
				return;;
			};
		};
		_1a3c0b78e_pushErr(_self_, (*((*(_207835_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_207835_f))))._field_Ident, &__jule_any_type4)}));
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a3c21cc1_checkFuncDeclsBy(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Slice<jule::Ptr<_1a3b740ec_Fn>>* _210038_funcs) {
	{
		auto expr = _210038_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9411c80:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _210115_f = *it;
			{
				_1a3c21980_checkFuncDecl(_self_, &(_210115_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1a9411c80:;
			++it;
			goto _iter_begin_1a9411c80;
		}
		_iter_end_1a9411c80:;
	};
	return true;;
}



inline jule::Bool _1a3c22057_checkFuncDecls(jule::Ptr<_1a3c08b54_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a3c21cc1_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1a3c22475_pushCycleError(_1a3c08b54_Sema* _self_, jule::Str* _211627_st1, jule::Str* _211638_st2, _1e7be2632_StrBuilder* _211653_message) {
	;
	jule::Str _21183_refersTo = _1e7c9543d_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_211627_st1)), &__jule_any_type4),jule::Any((*(_211638_st2)), &__jule_any_type4)}));;
	jule::Str _21193_m = _1e7beba59_Str(_211653_message);;
	_1e7beb262_WriteStr(_211653_message, _1e7bc876c_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1e7beb262_WriteStr(_211653_message, _21183_refersTo);
	_1e7beb51a_WriteByte(_211653_message, '\n');
	_1e7beb262_WriteStr(_211653_message, _21193_m);
}



inline void _1a3c22b29_checkPackageDecls(jule::Ptr<_1a3c08b54_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94188d0:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _214315_f = *it;
			{
				_1a3c0b371_setCurrentFile(_self_.ptr(), _214315_f);
				if ((!(_1a3c193d4_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a94188d0:;
			++it;
			goto _iter_begin_1a94188d0;
		}
		_iter_end_1a94188d0:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9418d75:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _215015_f = *it;
			{
				_1a3c0b371_setCurrentFile(_self_, _215015_f);
				if ((!(_1a3c1d88e_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a9418d75:;
			++it;
			goto _iter_begin_1a9418d75;
		}
		_iter_end_1a9418d75:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9419d54:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _215715_f = *it;
			{
				_1a3c0b371_setCurrentFile(_self_, _215715_f);
				if ((!(_1a3c20352_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a9419d54:;
			++it;
			goto _iter_begin_1a9419d54;
		}
		_iter_end_1a9419d54:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a941ad88:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _216415_f = *it;
			{
				_1a3c0b371_setCurrentFile(_self_, _216415_f);
				{
					
					if ((!(_1a3c22057_checkFuncDecls(_self_)))) {
						_case_begin_1a941c494:;
					}
					else if ((!(_1a3c2141e_checkStructDecls(_self_)))) {
						_case_begin_1a941c53d:;
					}
					else {
						_case_begin_1a941be00:;
						{
							goto _iter_next_1a941ad88;
						}
					}
					_match_end_1a941c40b:;
				};
				return;;
			}
			_iter_next_1a941ad88:;
			++it;
			goto _iter_begin_1a941ad88;
		}
		_iter_end_1a941ad88:;
	};
}



inline void _1a3c22e8c_checkDataForTypeInference(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3c8982d_Data>* _217642_d, jule::Ptr<_1a3b27a62_Token>* _217653_err_token) {
	{
		
		if (_1a3c89c18_IsNil((*(_217642_d)).ptr())) {
			_case_begin_1a941d5e9:;
			{
				_1a3c0b78e_pushErr(_self_, (*(_217653_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1a3c89e9e_IsVoid((*(_217642_d)).ptr())) {
			_case_begin_1a941d693:;
			{
				_1a3c0b78e_pushErr(_self_, (*(_217653_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_217642_d))))._field_Kind))._field_Variadic) {
			_case_begin_1a941d709:;
			{
				_1a3c0b78e_pushErr(_self_, (*(_217653_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a941d4c8:;
	};
}



inline void _1a3c23245_checkVarValue(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3c31c26_Var>* _218835_v) {
	if (_1a3c32386_IsTypeInferred((*(_218835_v)).ptr())) {
		(*((*(_218835_v))))._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=(*((*((*((*(_218835_v))))._field_Value))._field_Data))._field_Kind});
		_1a3c22e8c_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_218835_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_218835_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1a3c18636_checkValidityForInitExpr(_self_, (*((*(_218835_v))))._field_Mutable, (*((*(_218835_v))))._field_Reference, &((*((*((*(_218835_v))))._field_Kind))._field_Kind), &((*(*((*(_218835_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_218835_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1a3cca121_Arr> _22018_arr = _1a3cbe148_Arr((*((*((*(_218835_v))))._field_Kind))._field_Kind.ptr());;
		if ((_22018_arr != nullptr)) {
			if ((*_22018_arr.alloc)._field_Auto) {
				jule::Ptr<_1a3cca121_Arr> _22046_dataArr = _1a3cbe148_Arr((*((*((*((*(_218835_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_22046_dataArr != nullptr)) {
					(*_22018_arr.alloc)._field_N=(*_22046_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1a3c1429c_checkAssignType(_self_, (*((*(_218835_v))))._field_Reference, &((*(*((*(_218835_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218835_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_218835_v))))._field_Value.alloc)._field_Expr))._field_Token)) {
			_1a3c18636_checkValidityForInitExpr(_self_, (*((*(_218835_v))))._field_Mutable, (*((*(_218835_v))))._field_Reference, &((*(*((*(_218835_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218835_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_218835_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_218835_v))))._field_Reference && (!(_1a3cd71d8_isValidForRef(&((*((*((*(_218835_v))))._field_Kind))._field_Kind)))))) {
		_1a3c0b78e_pushErr(_self_.ptr(), (*((*(_218835_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(*((*(_218835_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_218835_v))))._field_Constant) {
		if (((!(_1a3c8a235_IsConst((*((*((*(_218835_v))))._field_Value))._field_Data.ptr()))) && (!(_1a3cc0435_comptime((*(*((*((*(_218835_v))))._field_Value))._field_Data.alloc)._field_Kind.ptr()))))) {
			_1a3c0b78e_pushErr(_self_, (*((*(*((*(_218835_v))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_218835_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_218835_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1a3cc019e_Tup((*((*((*(_218835_v))))._field_Kind))._field_Kind) != nullptr)) {
		(*(*((*(_218835_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1a3c235a8_evalVarValue(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3c31c26_Var>* _224134_decl, jule::Trait _224150_l) {
	if ((!(_1a3c32100_IsInitialized((*(_224134_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1a3c8b555_Eval> _224611_eval = nullptr;;
	if (((*((*(_224134_decl))))._field_Kind != nullptr)) {
		_224611_eval=_1a3c134ee_evalpd(_self_, _224150_l, (*(*((*(_224134_decl))))._field_Kind.alloc)._field_Kind, (*(_224134_decl)));
	} else {
		_224611_eval=_1a3c134ee_evalpd(_self_, _224150_l, nullptr, (*(_224134_decl)));
	};
	(*(_224611_eval))._field_immutable=(!((*((*(_224134_decl))))._field_Mutable));
	(*((*((*(_224134_decl))))._field_Value))._field_Data=_1a3ca97b5_evalExpr(_224611_eval, (*(*((*(_224134_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1a3c2391b_checkVar(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3c31c26_Var>* _225830_decl, jule::Trait _225846_l) {
	_1a3c235a8_evalVarValue(_self_, _225830_decl, _225846_l);
	if (((*((*((*(_225830_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1a3c23245_checkVarValue(_self_, _225830_decl);
}



inline void _1a3c23b19_checkGlobals(jule::Ptr<_1a3c08b54_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a943517c:;
		if (it != expr_end) {
			jule::Ptr<_1a3c31c26_Var> _226815_decl = *it;
			{
				if ((*(_226815_decl))._field_Binded) {
					goto _iter_next_1a943517c;
				};
				if (((_1a3c32100_IsInitialized(_226815_decl) && ((*((*_226815_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1a3c32386_IsTypeInferred(_226815_decl) && ((*((*_226815_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1a3c2391b_checkVar(_self_, &(_226815_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3));
				};
			}
			_iter_next_1a943517c:;
			++it;
			goto _iter_begin_1a943517c;
		}
		_iter_end_1a943517c:;
	};
}



inline jule::Ptr<_1a3b770cd_FnIns> _1a3c24015_readyToCheckFn(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _228236_s, jule::Ptr<_1a3b740ec_Fn>* _228256_f) {
	jule::Ptr<_1a3b770cd_FnIns> _22837_ins = _1a3b7585c_instance((*(_228256_f)));;
	if (((*((*(_228256_f))))._field_Instances.len() != 0LL)) {
		return _22837_ins;;
	};
	(*(_22837_ins))._field_Owner=(*(_228236_s));
	_1a3b75b6a_appendInstance((*(_228256_f)).ptr(), &(_22837_ins));
	(*_22837_ins.alloc)._field_reloaded=true;
	if (_1a3c17723_reloadFnInsTypes(_self_, _22837_ins)) {
		return _22837_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _1a3c24411_checkGenericFn(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b770cd_FnIns>* _229836_f, jule::Ptr<_1a3b27a62_Token>* _229852_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_1a3c17723_reloadFnInsTypes(_self_, (*(_229836_f)));
	(*((*(_229836_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3b770cd_FnIns> _23047_existInstance = _1a3b75b6a_appendInstance((*((*(_229836_f))))._field_Decl.ptr(), _229836_f);;
	if ((!(_1a3c16777_checkConstraintsFn(_self_, _229836_f, _229852_et, _23047_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_23047_existInstance != nullptr)) {
		(*(_229836_f))=_23047_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_1a3c2bccb_checkFnInsCaller(_self_, _229836_f, (*(_229852_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _1a3c24774_checkTypeMethod(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _232137_s, jule::Ptr<_1a3b740ec_Fn>* _232157_f) {
	if (((*((*(_232157_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1a3b770cd_FnIns> _23267_ins = (*((*(_232157_f))))._field_Instances[0LL];;
	if (((*((*(_23267_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1a3c2c084_checkFnIns(_self_, &(_23267_ins));
}



inline jule::Ptr<_1a3b770cd_FnIns> _1a3c24c2a_checkStructInsOp(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _233438_s, jule::Ptr<_1a3b740ec_Fn>* _233458_f, jule::Fn<jule::Bool,jule::Ptr<_1a3b740ec_Fn>> _233466_p) {
	if (((((*(_233458_f)) == nullptr) || ((*((*(_233458_f))))._field_Generics.len() > 0LL)) || (!(_233466_p((*(_233458_f))))))) {
		return nullptr;;
	};
	return (*((*(_233458_f))))._field_Instances[0LL];;
}



inline jule::Bool _1a3c25126_checkStructEnv(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _234436_s, jule::Ptr<_1a3b27a62_Token> _234455_errorToken) {
	jule::Bool __jule_func_result = false;
	_1a3cccad5_typeChecker _23457_tc = _1a3cccad5_typeChecker{._field_s=(*((*((*(_234436_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_234436_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3), ._field_lookup=jule::Trait((*(*((*(_234436_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3), ._field_referencer=jule::new_ptr<_1a3ccbae5_referencer>(_1a3ccbae5_referencer{._field_ident=(*(*((*(_234436_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_234436_s))))._field_Decl, &__jule_any_type65), }), ._field_refers=(*((*(_234436_s))))._field_Refers, };;
	if (((*((*(_234436_s))))._field_Generics.len() > 0LL)) {
		_23457_tc._field_useGenerics=jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>::alloc(0LL, (*((*(_234436_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_234436_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9444c08:;
			if (it != expr_end) {
				jule::I64 _23589_i = it - expr->begin();
				jule::Ptr<_1a3cb9341_InsGeneric> _235816_g = *it;
				{
					jule::Ptr<_1a3b4a348_GenericDecl> _23599_decl = (*(*((*(_234436_s))))._field_Decl.alloc)._field_Generics[_23589_i];;
					{ jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> &__jule_push_dest = _23457_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1a3cb9e35_TypeAlias>(_1a3cb9e35_TypeAlias{._field_Token=(*_23599_decl.alloc)._field_Token, ._field_Ident=(*(_23599_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=(*(_235816_g))._field_Kind}), })); };
				}
				_iter_next_1a9444c08:;
				++it;
				_23589_i++;
				goto _iter_begin_1a9444c08;
			}
			_iter_end_1a9444c08:;
		};
	};
	jule::Ptr<_1a3c844b5_SymbolTable> _23687_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a3c0b371_setCurrentFile(_self_, _23687_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_234436_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1a3c844b5_SymbolTable> _23728_file = _1a3c077bd_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_234436_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_23728_file != nullptr)) {
			_1a3c0b371_setCurrentFile(_self_, _23728_file);
		};
	};
	if (((*((*(_234436_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1a3badd90_constraintChecker> _23798_cc = _1a3c12014_constraintChecker(_self_);;
		(*(_23798_cc))._field_et=_234455_errorToken;
		(*_23798_cc.alloc)._field_si=(*(_234436_s));
		(*_23798_cc.alloc)._field_genericsA=_23457_tc._field_useGenerics;
		(*_23798_cc.alloc)._field_uniq=true;
		if ((!(_1a3baecc5_check(_23798_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_234436_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _23928_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_23457_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_234436_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a83524eb:;
			if (it != expr_end) {
				jule::Ptr<_1a3c31c26_Var> _239416_v = *it;
				{
					_1a3c1ed13_checkVarDecl(_self_, &(_239416_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3));
					_1a3c2391b_checkVar(_self_, &(_239416_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _23928_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1a83524eb:;
				++it;
				goto _iter_begin_1a83524eb;
			}
			_iter_end_1a83524eb:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_23457_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1a3c8b555_Eval> _24057_eval = _1a3c13c3b_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3));;
	(*((*(_234436_s))))._field_Comparable=(!((*(*((*(_234436_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_234436_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83562d0:;
		if (it != expr_end) {
			jule::Ptr<_1a3b6121b_FieldIns> _240715_f = *it;
			{
				jule::Ptr<_1a3cbac27_TypeKind> _24088_kind = _1a3cd5280_checkDecl(&_23457_tc, &((*((*((*(_240715_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_24088_kind != nullptr) && __jule_func_result);
				if ((_24088_kind == nullptr)) {
					if (((_self_ != (*(*((*(_234436_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_234436_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_234436_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_234436_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1a83562d0;
				};
				(*_240715_f.alloc)._field_Kind=_24088_kind;
				(*((*(_234436_s))))._field_Mutable=((*((*(_234436_s))))._field_Mutable || ((!((*(*(_240715_f))._field_Decl.alloc)._field_Mutable)) && _1a3cbc5a8_Mutable((*(_240715_f))._field_Kind)));
				(*((*(_234436_s))))._field_Comparable=((*((*(_234436_s))))._field_Comparable && _1a3cbc322_Comparable((*(_240715_f))._field_Kind));
				if (((*(*(_240715_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1a83562d0;
				};
				(*(_24057_eval))._field_prefix=(*_240715_f.alloc)._field_Kind;
				(*_24057_eval.alloc)._field_field=_240715_f;
				(*_240715_f.alloc)._field_Default=_1a3ca97b5_evalExpr(_24057_eval, (*(*(_240715_f))._field_Decl.alloc)._field_Default);
				if (((*_240715_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1a83562d0;
				};
				;
				_1a3c1429c_checkAssignType(_self_, false, &((*_240715_f.alloc)._field_Kind), &((*_240715_f.alloc)._field_Default), (*((*(*(_240715_f))._field_Decl.alloc)._field_Default))._field_Token);
			}
			_iter_next_1a83562d0:;
			++it;
			goto _iter_begin_1a83562d0;
		}
		_iter_end_1a83562d0:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a3c25522_precheckStructIns(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _244139_s, jule::Ptr<_1a3b27a62_Token> _244158_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1a3c25126_checkStructEnv(_self_, _244139_s, _244158_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((((*((*(_244139_s))))._field_Comparable && ((*((*(_244139_s))))._field_Operators._field_Eq == nullptr)) && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_1a3b740ec_Fn> _24528_decl = _1b5707ec1_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), jule::Str::lit("arrayCmp", 8));;
		{
			auto expr = &((*((*(_244139_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a83618a1:;
			if (it != expr_end) {
				jule::Ptr<_1a3b6121b_FieldIns> _245316_field = *it;
				{
					jule::Ptr<_1a3cca121_Arr> _24549_arr = _1a3cbe148_Arr((*(_245316_field))._field_Kind.ptr());;
					if ((_24549_arr == nullptr)) {
						goto _iter_next_1a83618a1;
					};
					jule::Ptr<_1a3b770cd_FnIns> _24589_f = _1a3b755c6_instanceForce(_24528_decl);;
					(*(_24589_f))._field_Generics=jule::append((*_24589_f.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a3cb9341_InsGeneric>>::make({jule::new_ptr<_1a3cb9341_InsGeneric>(_1a3cb9341_InsGeneric{._field_Kind=(*(_24549_arr))._field_Elem, })}));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a3c24411_checkGenericFn(_self_, &(_24589_f), &((*((*_245316_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						jule::panic(jule::Str::lit("arrayCmp evaluation failed, this is an implementation mistake", 61) + jule::Str("\nlocation: std/jule/sema/sema.jule:2462:6"));;
					};
				}
				_iter_next_1a83618a1:;
				++it;
				goto _iter_begin_1a83618a1;
			}
			_iter_end_1a83618a1:;
		};
	};
	{
		auto expr = &((*((*(_244139_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83653cc:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _246715_f = *it;
			{
				if (((*(_246715_f))._field_Generics.len() == 0LL)) {
					if ((_1a3c24015_readyToCheckFn(_self_, _244139_s, &(_246715_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1a83653cc:;
			++it;
			goto _iter_begin_1a83653cc;
		}
		_iter_end_1a83653cc:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a3c257ca_checkStructIns(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _247736_s) {
	{
		auto expr = &((*((*(_247736_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8366c19:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _247815_f = *it;
			{
				_1a3c24774_checkTypeMethod(_self_, _247736_s, &(_247815_f));
			}
			_iter_next_1a8366c19:;
			++it;
			goto _iter_begin_1a8366c19;
		}
		_iter_end_1a8366c19:;
	};
}



inline void _1a3c25a83_checkTypeStruct(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b5e03d_Struct>* _248337_s) {
	if ((*((*(_248337_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_248337_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_248337_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83686cc:;
		if (it != expr_end) {
			jule::Ptr<_1a3b61cbb_StructIns> _249615_ins = *it;
			{
				_1a3c257ca_checkStructIns(_self_, &(_249615_ins));
			}
			_iter_next_1a83686cc:;
			++it;
			goto _iter_begin_1a83686cc;
		}
		_iter_end_1a83686cc:;
	};
}



inline void _1a3c25c81_checkStructTypes(jule::Ptr<_1a3c08b54_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95078e2:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> _250215_s = *it;
			{
				_1a3c25a83_checkTypeStruct(_self_, &(_250215_s));
			}
			_iter_next_1a95078e2:;
			++it;
			goto _iter_begin_1a95078e2;
		}
		_iter_end_1a95078e2:;
	};
}



inline void _1a3c2ada7_checkStructInsOperators(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b61cbb_StructIns> _250744_s) {
	{
		auto expr = &((*(_250744_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a950886b:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _250815_m = *it;
			{
				{
					auto &_match_expr{ (*(_250815_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1a9508edc:;
						{
							(*(_250744_s))._field_Operators._field_Eq=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c33be5_Eq);
							(*_250744_s.alloc)._field_Comparable=((*_250744_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1a95095c5:;
						{
							(*(_250744_s))._field_Operators._field_Gt=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c33eae_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1a950963b:;
						{
							(*(_250744_s))._field_Operators._field_GtEq=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c34278_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1a95096a2:;
						{
							(*(_250744_s))._field_Operators._field_Lt=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c34542_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1a9509718:;
						{
							(*(_250744_s))._field_Operators._field_LtEq=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c3480b_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1a9509790:;
						{
							(*(_250744_s))._field_Operators._field_Shl=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c34e49_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1a9509817:;
						{
							(*(_250744_s))._field_Operators._field_Shr=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c35213_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1a950988e:;
						{
							(*(_250744_s))._field_Operators._field_Add=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c354cc_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1a9509916:;
						{
							(*(_250744_s))._field_Operators._field_Sub=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c35796_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1a950998d:;
						{
							(*(_250744_s))._field_Operators._field_Div=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c35a60_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1a9509a15:;
						{
							(*(_250744_s))._field_Operators._field_Mul=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c35d29_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1a9509a8c:;
						{
							(*(_250744_s))._field_Operators._field_Mod=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c360e3_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1a9509b14:;
						{
							(*(_250744_s))._field_Operators._field_BitAnd=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c363ac_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1a9509b8b:;
						{
							(*(_250744_s))._field_Operators._field_BitOr=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c36676_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1a9509c13:;
						{
							(*(_250744_s))._field_Operators._field_BitXor=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c36940_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1a9509c8a:;
						{
							(*(_250744_s))._field_Operators._field_Neg=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c3707d_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1a9509d12:;
						{
							(*(_250744_s))._field_Operators._field_Pos=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c37347_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1a9509d89:;
						{
							(*(_250744_s))._field_Operators._field_BitNot=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c37611_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1a9509e11:;
						{
							(*(_250744_s))._field_Operators._field_AddAssign=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c37c4e_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1a9509e88:;
						{
							(*(_250744_s))._field_Operators._field_SubAssign=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c38018_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1a950a010:;
						{
							(*(_250744_s))._field_Operators._field_DivAssign=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c382d2_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1a950a087:;
						{
							(*(_250744_s))._field_Operators._field_MulAssign=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c3859b_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1a950a10e:;
						{
							(*(_250744_s))._field_Operators._field_ModAssign=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c38865_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1a950a186:;
						{
							(*(_250744_s))._field_Operators._field_ShlAssign=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c38b2e_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1a950a20d:;
						{
							(*(_250744_s))._field_Operators._field_ShrAssign=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c38de8_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1a950a285:;
						{
							(*(_250744_s))._field_Operators._field_BitOrAssign=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c391b2_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1a950a30c:;
						{
							(*(_250744_s))._field_Operators._field_BitAndAssign=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c3947b_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1a950a384:;
						{
							(*(_250744_s))._field_Operators._field_BitXorAssign=_1a3c24c2a_checkStructInsOp(_self_, &(_250744_s), &(_250815_m), static__1a3c39745_BitXorAssign);
						}
					}
					_match_end_1a95092b7:;
				};
			}
			_iter_next_1a950886b:;
			++it;
			goto _iter_begin_1a950886b;
		}
		_iter_end_1a950886b:;
	};
}



inline void _1a3c2b14e_precheckStructType(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b5e03d_Struct>* _257140_s) {
	if ((*((*(_257140_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_257140_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_257140_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a3b61cbb_StructIns> _25828_ins = _1a3b5e4a0_instance((*(_257140_s)));;
		(*(_25828_ins))._field_Checked=true;
		_1a3b5e7ad_appendInstance((*(_257140_s)).ptr(), &(_25828_ins));
		_1a3c25522_precheckStructIns(_self_, &(_25828_ins), nullptr);
	};
	_1a3c2ada7_checkStructInsOperators(_self_, (*((*(_257140_s))))._field_Instances[0LL]);
}



inline void _1a3c2b34c_precheckStructTypes(jule::Ptr<_1a3c08b54_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95213bc:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> _259215_s = *it;
			{
				_1a3c2b14e_precheckStructType(_self_, &(_259215_s));
			}
			_iter_next_1a95213bc:;
			++it;
			goto _iter_begin_1a95213bc;
		}
		_iter_end_1a95213bc:;
	};
}



inline void _1a3c2b605_checkRets(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b770cd_FnIns>* _259730_f) {
	if (_1a3b74570_IsVoid((*((*(_259730_f))))._field_Decl.ptr())) {
		return;;
	};
	_1a3c2da7a_missingRetChecker _26013_mrc = static__1a3c2de43_new();;
	jule::Bool _26023_ok = _1a3c30065_check(&_26013_mrc, (*((*(_259730_f))))._field_Scope);;
	if ((!(_26023_ok))) {
		_1a3c0b78e_pushErr(_self_, (*(*((*(_259730_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1a3c2b968_checkFnInsSc(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b770cd_FnIns>* _260833_f, jule::Ptr<_1a3bbdb08_scopeChecker>* _260849_sc) {
	_1a3c06d72_appendRetVars(&((*((*((*(_260849_sc))))._field_table))._field_Vars), _260833_f);
	_1a3c0715d_appendParamVars(&((*(*((*(_260849_sc))))._field_table.alloc)._field_Vars), _260833_f);
	_1a3c07449_appendGenericTypeAliases(&((*(*((*(_260849_sc))))._field_table.alloc)._field_TypeAliases), _260833_f);
	_1a3bd090b_check((*(_260849_sc)), &((*((*((*(_260833_f))))._field_Decl))._field_Scope), &((*((*(_260833_f))))._field_Scope));
	if ((!(_1a3bc16cc_stopped((*(_260849_sc)).ptr())))) {
		_1a3c2b605_checkRets(_self_, _260833_f);
	};
}



inline void _1a3c2bccb_checkFnInsCaller(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b770cd_FnIns>* _262138_f, jule::Ptr<_1a3b27a62_Token> _262153_caller) {
	if ((*((*((*(_262138_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1a3c844b5_SymbolTable> _26267_old = (*((*(*((*(_262138_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1a3c0b371_setCurrentFile((*((*((*(_262138_f))))._field_Decl))._field_sema, _26267_old);
	});;
	jule::Ptr<_1a3c844b5_SymbolTable> _26287_file = _1a3c077bd_findFile(&((*(*((*((*(_262138_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_262138_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_26287_file != nullptr)) {
		_1a3c0b371_setCurrentFile((*((*((*(_262138_f))))._field_Decl))._field_sema, _26287_file);
	};
	jule::Ptr<_1a3bbdb08_scopeChecker> _26337_sc = _1a3bb37e0_newScopeChecker(&((*(*((*(_262138_f))))._field_Decl.alloc)._field_sema), (*(_262138_f)));;
	(*(_26337_sc))._field_calledFrom=_262153_caller;
	_1a3c2b968_checkFnInsSc(_self_.ptr(), _262138_f, &(_26337_sc));
	if (((*(*((*(_262138_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_262138_f))))._field_Decl))._field_sema.alloc)._field_errors);
		(*(*((*((*(_262138_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1a3c2c084_checkFnIns(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b770cd_FnIns>* _264332_f) {
	_1a3c2bccb_checkFnInsCaller(_self_, _264332_f, nullptr);
}



inline void _1a3c2c33c_checkFunc(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b740ec_Fn>* _264731_f) {
	if ((*((*(_264731_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_264731_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_264731_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a952e809:;
		if (it != expr_end) {
			jule::Ptr<_1a3b770cd_FnIns> _265715_ins = *it;
			{
				_1a3c2c084_checkFnIns(_self_, &(_265715_ins));
			}
			_iter_next_1a952e809:;
			++it;
			goto _iter_begin_1a952e809;
		}
		_iter_end_1a952e809:;
	};
}



inline void _1a3c2c5e5_checkTestFn(_1a3c08b54_Sema* _self_, jule::Ptr<_1a3b770cd_FnIns>* _266232_f) {
	if ((*((*((*(_266232_f))))._field_Decl))._field_Public) {
		_1a3c0b78e_pushErr(_self_, (*(*((*(_266232_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_266232_f))))._field_Decl.alloc)._field_Unsafety || (!(_1a3b74570_IsVoid((*((*(_266232_f))))._field_Decl)))) || ((*(*((*(_266232_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_266232_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_266232_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_266232_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1a3c0b78e_pushErr(_self_, (*(*((*(_266232_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3cc732c_Sptr> _26807_sptr = _1a3cbd60e_Sptr((*((*((*(_266232_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_26807_sptr == nullptr)) {
		_1a3c0b78e_pushErr(_self_, (*(*((*(_266232_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3b61cbb_StructIns> _26873_s = _1a3cbe8eb_Struct((*(_26807_sptr))._field_Elem.ptr());;
	if (((_26873_s == nullptr) || (!(_1a3bddad4_isStdPackage(&((*((*((*((*(_26873_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1a3c0b78e_pushErr(_self_, (*(*((*(_266232_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a3c0bb02_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a3c2c89d_precheckFunc(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Ptr<_1a3b740ec_Fn>* _269534_f) {
	if ((*((*(_269534_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_269534_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_269534_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a3b770cd_FnIns> _27068_ins = _1a3b755c6_instanceForce((*(_269534_f)));;
		{ jule::Slice<jule::Ptr<_1a3b770cd_FnIns>> &__jule_push_dest = (*((*(_269534_f))))._field_Instances; __jule_push_dest.push(_27068_ins); };
		jule::Bool _27084_ok = _1a3c17723_reloadFnInsTypes(_self_, _27068_ins);;
		(*(_27068_ins))._field_reloaded=true;
		if ((_27084_ok && _1a3cd6847_hasDirective(&((*((*(_269534_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1a3c2c5e5_checkTestFn(_self_, &(_27068_ins));
		};
	};
}



inline void _1a3c2ca9b_precheckFuncs(jule::Ptr<_1a3c08b54_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a953c8d3:;
		if (it != expr_end) {
			jule::Ptr<_1a3b87a7d_Trait> _271915_decl = *it;
			{
				{
					auto expr = &((*(_271915_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a953d32e:;
					if (it != expr_end) {
						jule::Ptr<_1a3b740ec_Fn> _272016_m = *it;
						{
							_1a3c2c89d_precheckFunc(_self_, &(_272016_m));
						}
						_iter_next_1a953d32e:;
						++it;
						goto _iter_begin_1a953d32e;
					}
					_iter_end_1a953d32e:;
				};
			}
			_iter_next_1a953c8d3:;
			++it;
			goto _iter_begin_1a953c8d3;
		}
		_iter_end_1a953c8d3:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a953d6a3:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _272415_decl = *it;
			{
				_1a3c2c89d_precheckFunc(_self_, &(_272415_decl));
			}
			_iter_next_1a953d6a3:;
			++it;
			goto _iter_begin_1a953d6a3;
		}
		_iter_end_1a953d6a3:;
	};
}



inline void _1a3c2cc99_checkFuncs(jule::Ptr<_1a3c08b54_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a953eae4:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _273115_decl = *it;
			{
				_1a3c2c33c_checkFunc(_self_, &(_273115_decl));
			}
			_iter_next_1a953eae4:;
			++it;
			goto _iter_begin_1a953eae4;
		}
		_iter_end_1a953eae4:;
	};
}



inline void _1a3c2ce97_checkPackageTypes(jule::Ptr<_1a3c08b54_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95408c5:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _273915_f = *it;
			{
				_1a3c0b371_setCurrentFile(_self_.ptr(), _273915_f);
				_1a3c23b19_checkGlobals(_self_);
				_1a3c2ca9b_precheckFuncs(_self_);
				_1a3c2b34c_precheckStructTypes(_self_);
			}
			_iter_next_1a95408c5:;
			++it;
			goto _iter_begin_1a95408c5;
		}
		_iter_end_1a95408c5:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9542421:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _275015_f = *it;
			{
				_1a3c0b371_setCurrentFile(_self_, _275015_f);
				_1a3c2cc99_checkFuncs(_self_);
				_1a3c25c81_checkStructTypes(_self_);
			}
			_iter_next_1a9542421:;
			++it;
			goto _iter_begin_1a9542421;
		}
		_iter_end_1a9542421:;
	};
}



inline void _1a3c2d195_setFileSemaFields(jule::Ptr<_1a3c08b54_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95439e9:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _275815_f = *it;
			{
				(*(_275815_f))._field_sema=_self_;
			}
			_iter_next_1a95439e9:;
			++it;
			goto _iter_begin_1a95439e9;
		}
		_iter_end_1a95439e9:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9544654:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> _276115_st = *it;
			{
				(*(_276115_st))._field_sema=_self_;
			}
			_iter_next_1a9544654:;
			++it;
			goto _iter_begin_1a9544654;
		}
		_iter_end_1a9544654:;
	};
}



inline void _1a3c2d393_setSemaFields(jule::Ptr<_1a3c08b54_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9545314:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _276715_file = *it;
			{
				_1a3c0b371_setCurrentFile(_self_.ptr(), _276715_file);
				_1a3c2d195_setFileSemaFields(_self_);
			}
			_iter_next_1a9545314:;
			++it;
			goto _iter_begin_1a9545314;
		}
		_iter_end_1a9545314:;
	};
}



inline void _1a3c2d64b_check(jule::Ptr<_1a3c08b54_Sema> _self_, jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _277327_files) {
	(*(_self_))._field_files=(*(_277327_files));
	_1a3c10210_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a3c2d393_setSemaFields(_self_);
	_1a3c10c05_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a3c1060b_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a3c10809_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a3c22b29_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a3c2ce97_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a3c08b54_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1a3c2da7a_missingRetChecker static__1a3c2de43_new(void) {
	return _1a3c2da7a_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1a3c2e251_checkConditional(_1a3c2da7a_missingRetChecker* _self_, jule::Ptr<_1a3bb7283_Conditional> _282132_c) {
	{
		auto expr = &((*(_282132_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a954a957:;
		if (it != expr_end) {
			jule::Ptr<_1a3bb6a68_If> _282215_elif = *it;
			{
				if ((_282215_elif == nullptr)) {
					return false;;
				};
				if ((!(_1a3c2ec24_checkScope(_self_, (*(_282215_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1a954a957:;
			++it;
			goto _iter_begin_1a954a957;
		}
		_iter_end_1a954a957:;
	};
	return (((*_282132_c.alloc)._field_Default != nullptr) && _1a3c2ec24_checkScope(_self_, (*(*(_282132_c))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1a3c2e592_checkMatch(_1a3c2da7a_missingRetChecker* _self_, jule::Ptr<_1a3bba85d_Match> _283326_m) {
	{
		auto expr = &((*(_283326_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a954c9e2:;
		if (it != expr_end) {
			jule::Ptr<_1a3bbb386_Case> _283415_c = *it;
			{
				if ((_283415_c == nullptr)) {
					return false;;
				};
				jule::I64 _28384_n = (*(_self_))._field_breaked.len();;
				jule::Bool _28394_ok = _1a3c2ec24_checkScope(_self_, (*(_283415_c))._field_Scope);;
				{
					
					if ((_28384_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1a954e472:;
						{
							return false;;
						}
					}
					else if ((!(_28394_ok))) {
						_case_begin_1a954e51b:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1a954e582;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1a954e582:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_283415_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1a954c9e2;
						}
					}
					_match_end_1a954e3c8:;
				};
			}
			_iter_next_1a954c9e2:;
			++it;
			goto _iter_begin_1a954c9e2;
		}
		_iter_end_1a954c9e2:;
	};
	return (((*_283326_m.alloc)._field_Default != nullptr) && _1a3c2ec24_checkScope(_self_, (*(*(_283326_m))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1a3c2e8d3_checkInfIter(_1a3c2da7a_missingRetChecker* _self_, jule::Ptr<_1a3bb7580_InfIter> _285928_it) {
	jule::I64 _28603_n = (*(_self_))._field_breaked.len();;
	if (_1a3c2ec24_checkScope(_self_, (*(_285928_it))._field_Scope)) {
		((*(_self_))._field_breaked).mut_slice(0LL, _28603_n);;
		return true;;
	};
	if ((_28603_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _28664_itaddr = static_cast<jule::Uintptr>(_285928_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_28603_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1a9553333:;
			if (it != expr_end) {
				jule::Uintptr _286711_addr = *it;
				{
					if ((_28664_itaddr == _286711_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _28603_n);;
						return false;;
					};
				}
				_iter_next_1a9553333:;
				++it;
				goto _iter_begin_1a9553333;
			}
			_iter_end_1a9553333:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _28603_n);;
	};
	return true;;
}



inline jule::Bool _1a3c2ec24_checkScope(_1a3c2da7a_missingRetChecker* _self_, jule::Ptr<_1a3bb664a_Scope> _287826_s) {
	if ((_287826_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_287826_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a955492d:;
		if (it != expr_end) {
			jule::Any _288215_st = *it;
			{
				{
					auto &_match_expr{ _288215_st };
					
					if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1a95555ee:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1a95553ce:;
						{
							jule::Uintptr _28885_addr = (*(_288215_st.unsafe_cast_ptr<_1a3bb8be1_BreakSt>()))._field_It;;
							if ((_28885_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_28885_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type40) {
						_case_begin_1a9555676:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1a95556ed:;
						{
							if (_1a3c2e8d3_checkInfIter(_self_, _288215_st.cast_ptr<_1a3bb7580_InfIter>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1a9555775:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1a95557ec:;
						{
							if (_1a3c2ec24_checkScope(_self_, _288215_st.cast_ptr<_1a3bb664a_Scope>(&__jule_any_type21))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1a9555874:;
						{
							{
								auto &_match_expr{ (*(_288215_st.cast_ptr<_1a3c8982d_Data>(&__jule_any_type23)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type22) {
									_case_begin_1a9559636:;
									{
										return true;;
									}
								}
								_match_end_1a95595c0:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1a95558eb:;
						{
							if (_1a3c2e251_checkConditional(_self_, _288215_st.cast_ptr<_1a3bb7283_Conditional>(&__jule_any_type34))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1a9555973:;
						{
							if (_1a3c2e592_checkMatch(_self_, _288215_st.cast_ptr<_1a3bba85d_Match>(&__jule_any_type47))) {
								return true;;
							};
						}
					}
					_match_end_1a95554de:;
				};
			}
			_iter_next_1a955492d:;
			++it;
			goto _iter_begin_1a955492d;
		}
		_iter_end_1a955492d:;
	};
	return false;;
}



inline jule::Bool _1a3c30065_check(_1a3c2da7a_missingRetChecker* _self_, jule::Ptr<_1a3bb664a_Scope> _292421_s) {
	return _1a3c2ec24_checkScope(_self_, _292421_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3c2da7a_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a3c32100_IsInitialized(_1a3c31c26_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1a3c32386_IsTypeInferred(_1a3c31c26_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1a3c3261c_untypedConstant(_1a3c31c26_Var* _self_) {
	return (_1a3c32386_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3c31c26_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a3c332ee_Dispose(jule::Ptr<_1a3b740ec_Fn> _1020_f) {
	return ((((((((((_1020_f != nullptr) && ((*_1020_f.alloc)._field_Owner != nullptr)) && (*(_1020_f))._field_Ident.equal("Dispose", 7)) && (!((*_1020_f.alloc)._field_Statically))) && (!((*_1020_f.alloc)._field_Unsafety))) && _1a3b74570_IsVoid(_1020_f)) && ((*_1020_f.alloc)._field_Generics.len() == 0LL)) && ((*_1020_f.alloc)._field_Params.len() == 1LL)) && (*((*(_1020_f))._field_Params[0LL]))._field_Mutable) && (!(_1a3b72eca_IsRef((*(_1020_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1a3c335a7_Str(jule::Ptr<_1a3b740ec_Fn> _2416_f) {
	if (((((((((((_2416_f == nullptr) || ((*(_2416_f))._field_Owner == nullptr)) || (!(*(_2416_f))._field_Ident.equal("Str", 3))) || (*(_2416_f))._field_Statically) || (*(_2416_f))._field_Unsafety) || _1a3b74570_IsVoid(_2416_f.ptr())) || ((*(_2416_f))._field_Generics.len() != 0LL)) || ((*(_2416_f))._field_Params.len() != 1LL)) || (*((*(_2416_f))._field_Params[0LL]))._field_Mutable) || _1a3b72eca_IsRef((*(_2416_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a3b770cd_FnIns> _387_ins = (*(_2416_f))._field_Instances[0LL];;
	jule::Ptr<_1a3cc3801_Prim> _393_prim = _1a3cbd378_Prim((*(_387_ins))._field_Result.ptr());;
	if ((_393_prim == nullptr)) {
		return false;;
	};
	return _1a3cc6c88_IsStr(_393_prim.ptr());;
}



inline jule::Bool static__1a3c3392b_logical(jule::Ptr<_1a3b740ec_Fn>* _4621_f, jule::Str _4629_ident) {
	if (((((((((((((((*(_4621_f)) == nullptr) || ((*((*(_4621_f))))._field_Ident != _4629_ident)) || ((*((*(_4621_f))))._field_Owner == nullptr)) || ((*((*(_4621_f))))._field_Instances.len() == 0LL)) || (*((*(_4621_f))))._field_Statically) || (*((*(_4621_f))))._field_Unsafety) || _1a3b74570_IsVoid((*(_4621_f)).ptr())) || ((*((*(_4621_f))))._field_Generics.len() != 0LL)) || ((*((*(_4621_f))))._field_Params.len() != 2LL)) || (*((*((*(_4621_f))))._field_Params[0LL]))._field_Mutable) || _1a3b72eca_IsRef((*((*(_4621_f))))._field_Params[0LL].ptr())) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a3b770cd_FnIns> _637_ins = (*((*(_4621_f))))._field_Instances[0LL];;
	jule::Ptr<_1a3cc3801_Prim> _643_prim = _1a3cbd378_Prim((*(_637_ins))._field_Result.ptr());;
	if (((_643_prim == nullptr) || (!(_1a3cc6a02_IsBool(_643_prim.ptr()))))) {
		return false;;
	};
	return ((*_637_ins.alloc)._field_Owner == _1a3cbe8eb_Struct((*((*_637_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1a3c33be5_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _7215_f) {
	return static__1a3c3392b_logical(&(_7215_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1a3c33eae_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _7715_f) {
	return static__1a3c3392b_logical(&(_7715_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1a3c34278_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _8217_f) {
	return static__1a3c3392b_logical(&(_8217_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1a3c34542_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _8715_f) {
	return static__1a3c3392b_logical(&(_8715_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1a3c3480b_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _9217_f) {
	return static__1a3c3392b_logical(&(_9217_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1a3c34b80_result(jule::Ptr<_1a3b740ec_Fn>* _9620_f, jule::Str _9628_ident) {
	if (((((((((((((((*(_9620_f)) == nullptr) || ((*((*(_9620_f))))._field_Ident != _9628_ident)) || ((*((*(_9620_f))))._field_Owner == nullptr)) || ((*((*(_9620_f))))._field_Instances.len() == 0LL)) || (*((*(_9620_f))))._field_Statically) || (*((*(_9620_f))))._field_Unsafety) || _1a3b74570_IsVoid((*(_9620_f)).ptr())) || ((*((*(_9620_f))))._field_Generics.len() != 0LL)) || ((*((*(_9620_f))))._field_Params.len() != 2LL)) || (*((*((*(_9620_f))))._field_Params[0LL]))._field_Mutable) || _1a3b72eca_IsRef((*((*(_9620_f))))._field_Params[0LL].ptr())) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a3b770cd_FnIns> _1137_ins = (*((*(_9620_f))))._field_Instances[0LL];;
	return (_1a3cbe8eb_Struct((*(_1137_ins))._field_Result.ptr()) == (*_1137_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1a3c34e49_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _11816_f) {
	return static__1a3c34b80_result(&(_11816_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1a3c35213_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _12316_f) {
	return static__1a3c34b80_result(&(_12316_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1a3c354cc_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _12816_f) {
	return static__1a3c34b80_result(&(_12816_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1a3c35796_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _13316_f) {
	return static__1a3c34b80_result(&(_13316_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1a3c35a60_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _13816_f) {
	return static__1a3c34b80_result(&(_13816_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1a3c35d29_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _14316_f) {
	return static__1a3c34b80_result(&(_14316_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1a3c360e3_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _14816_f) {
	return static__1a3c34b80_result(&(_14816_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1a3c363ac_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _15319_f) {
	return static__1a3c34b80_result(&(_15319_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1a3c36676_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _15818_f) {
	return static__1a3c34b80_result(&(_15818_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1a3c36940_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _16319_f) {
	return static__1a3c34b80_result(&(_16319_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1a3c36cb4_unary(jule::Ptr<_1a3b740ec_Fn>* _16719_f, jule::Str _16727_ident) {
	if (((((((((((((*(_16719_f)) == nullptr) || ((*((*(_16719_f))))._field_Ident != _16727_ident)) || ((*((*(_16719_f))))._field_Owner == nullptr)) || ((*((*(_16719_f))))._field_Instances.len() == 0LL)) || (*((*(_16719_f))))._field_Statically) || (*((*(_16719_f))))._field_Unsafety) || _1a3b74570_IsVoid((*(_16719_f)).ptr())) || ((*((*(_16719_f))))._field_Generics.len() != 0LL)) || ((*((*(_16719_f))))._field_Params.len() != 1LL)) || (*((*((*(_16719_f))))._field_Params[0LL]))._field_Mutable) || _1a3b72eca_IsRef((*((*(_16719_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a3b770cd_FnIns> _1827_ins = (*((*(_16719_f))))._field_Instances[0LL];;
	return (_1a3cbe8eb_Struct((*(_1827_ins))._field_Result.ptr()) == (*_1827_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1a3c3707d_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _18716_f) {
	return static__1a3c36cb4_unary(&(_18716_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1a3c37347_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _19216_f) {
	return static__1a3c36cb4_unary(&(_19216_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1a3c37611_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _19719_f) {
	return static__1a3c36cb4_unary(&(_19719_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1a3c37985_assign(jule::Ptr<_1a3b740ec_Fn>* _20120_f, jule::Str _20128_ident) {
	if (((((((((((((((*(_20120_f)) == nullptr) || ((*((*(_20120_f))))._field_Ident != _20128_ident)) || ((*((*(_20120_f))))._field_Owner == nullptr)) || ((*((*(_20120_f))))._field_Instances.len() == 0LL)) || (*((*(_20120_f))))._field_Statically) || (*((*(_20120_f))))._field_Unsafety) || (!(_1a3b74570_IsVoid((*(_20120_f)).ptr())))) || ((*((*(_20120_f))))._field_Generics.len() != 0LL)) || ((*((*(_20120_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20120_f))))._field_Params[0LL]))._field_Mutable))) || _1a3b72eca_IsRef((*((*(_20120_f))))._field_Params[0LL].ptr())) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1a3c37c4e_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _22122_f) {
	return static__1a3c37985_assign(&(_22122_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1a3c38018_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _22622_f) {
	return static__1a3c37985_assign(&(_22622_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1a3c382d2_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _23122_f) {
	return static__1a3c37985_assign(&(_23122_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1a3c3859b_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _23622_f) {
	return static__1a3c37985_assign(&(_23622_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1a3c38865_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _24122_f) {
	return static__1a3c37985_assign(&(_24122_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1a3c38b2e_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _24622_f) {
	return static__1a3c37985_assign(&(_24622_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1a3c38de8_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _25122_f) {
	return static__1a3c37985_assign(&(_25122_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1a3c391b2_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _25624_f) {
	return static__1a3c37985_assign(&(_25624_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1a3c3947b_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _26125_f) {
	return static__1a3c37985_assign(&(_26125_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1a3c39745_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn> _26625_f) {
	return static__1a3c37985_assign(&(_26625_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3c32cb0_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3c714e6_typeCompatibilityChecker_eq(_1a3c714e6_typeCompatibilityChecker *_self_, _1a3c714e6_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1a3c719e1_pushErr(_1a3c714e6_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args) {
	_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11923_fmt, _11936_args);
}



inline jule::Bool _1a3c71c77_checkTrait(_1a3c714e6_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a3cbbd05_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3b87a7d_Trait> _1277_trt = _1a3cbeb82_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1287_ref = false;;
	{
		
		if ((_1a3cbd60e_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1a6e32929:;
			{
				_1287_ref=true;
				(*(_self_))._field_src=(*(_1a3cbd60e_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1a3cbe8eb_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1a6e32b16;
			}
		}
		else if ((_1a3cbe8eb_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1a6e32b16:;
			{
				jule::Ptr<_1a3b61cbb_StructIns> _1384_s = _1a3cbe8eb_Struct((*(_self_))._field_src);;
				if ((!(_1a3b6067c_IsImplements((*(_1384_s))._field_Decl.ptr(), _1277_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1287_ref)) && _1a3c70094_traitHasReferenceReceiver(&(_1277_trt)))) {
					_1a3c719e1_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a3cbeb82_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1a6e33551:;
			{
				jule::Ptr<_1a3b87a7d_Trait> _1488_base = _1a3cbeb82_Trait((*(_self_))._field_src);;
				if ((_1277_trt == _1488_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1a90703a0:;
				{
					auto expr = &((*(_1488_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a907047c:;
					if (it != expr_end) {
						jule::Ptr<_1a3b5e03d_Struct> _15311_s1 = *it;
						{
							{
								auto expr = &((*(_1277_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a9070d40:;
								if (it != expr_end) {
									jule::Ptr<_1a3b5e03d_Struct> _15412_s2 = *it;
									{
										if ((_15311_s1 == _15412_s2)) {
											goto _iter_next_1a907047c;
										};
									}
									_iter_next_1a9070d40:;
									++it;
									goto _iter_begin_1a9070d40;
								}
								_iter_end_1a9070d40:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1a907047c:;
						++it;
						goto _iter_begin_1a907047c;
					}
					_iter_end_1a907047c:;
				};
				{
					auto expr = &((*_1277_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a907125d:;
					if (it != expr_end) {
						jule::Ptr<_1a3b740ec_Fn> _16116_m1 = *it;
						{
							jule::Ptr<_1a3b740ec_Fn> _1629_m2 = _1a3b8872c_FindMethod(_1488_base, (*(_16116_m1))._field_Ident);;
							if ((_1629_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1a3b770cd_FnIns> _1665_m1k = _1a3c162c1_getTraitCheckFnKind((*(_self_))._field_s, &(_16116_m1));;
							jule::Ptr<_1a3b770cd_FnIns> _1675_m2k = _1a3c162c1_getTraitCheckFnKind((*(_self_))._field_s, &(_1629_m2));;
							if ((!(_1a3b78046_equalTrait(_1665_m1k, &(_1675_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1a907125d:;
						++it;
						goto _iter_begin_1a907125d;
					}
					_iter_end_1a907125d:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a906c589:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a906c534:;
	};
}



inline jule::Bool _1a3c7200d_checkPtr(_1a3c714e6_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a3cbbd05_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3ccaae4_Ptr> _1827_dest = _1a3cbd895_Ptr((*(_self_))._field_dest.ptr());;
	if (_1a3ccb62d_IsUnsafe(_1827_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1a3cbb431_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a3c72294_checkPrim(_1a3c714e6_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1a3cc3801_Prim> _1914_prim = _1a3cbd378_Prim((*(_self_))._field_dest);;
		if (((_1914_prim != nullptr) && _1a3cc701e_IsAny(_1914_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1a3cbb431_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a3c72690_typeEnum(_1a3c714e6_typeCompatibilityChecker* _self_, jule::Ptr<_1a3b8b994_TypeEnum>* _19925_e, jule::Ptr<_1a3cbac27_TypeKind>* _19944_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19925_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a944d86b:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8b3bc_TypeEnumItem> _20015_item = *it;
			{
				if (_1a3cbb431_Equal((*((*(_20015_item))._field_Kind))._field_Kind, (*(_19944_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1a3b8b994_TypeEnum> _2048_ke = _1a3cbddb2_TypeEnum((*((*(_20015_item))._field_Kind))._field_Kind);;
				if ((_2048_ke == nullptr)) {
					goto _iter_next_1a944d86b;
				};
				if (_1a3c72690_typeEnum(_self_, &(_2048_ke), _19944_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1a944d86b:;
			++it;
			goto _iter_begin_1a944d86b;
		}
		_iter_end_1a944d86b:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a3c72926_checkTypeEnum(_1a3c714e6_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a3cbb431_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3b8b994_TypeEnum> _2197_e = _1a3cbddb2_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1a3c72690_typeEnum(_self_, &(_2197_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1a3c72bac_check(_1a3c714e6_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1a3cbd895_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1a3c7200d_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1a3cbcac5_NilCompatible((*(_self_))._field_dest)) {
		if (_1a3cbbd05_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1a3cbd378_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1a9453c6c:;
			{
				__jule_func_result = _1a3c72294_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a3cbddb2_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1a9453d05:;
			{
				__jule_func_result = _1a3c72926_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a3cbeb82_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1a945372d:;
			{
				__jule_func_result = _1a3c71c77_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a9453343:;
			{
				__jule_func_result = _1a3cbb431_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1a9453200:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3c714e6_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3c73295_assignTypeChecker_eq(_1a3c73295_assignTypeChecker *_self_, _1a3c73295_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1a3c73729_pushErr(_1a3c73295_assignTypeChecker* _self_, jule::Str _25523_fmt, jule::Slice<jule::Any> _25536_args) {
	_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25523_fmt, _25536_args);
}



inline jule::Bool _1a3c739b0_checkValidity(_1a3c73295_assignTypeChecker* _self_) {
	jule::Bool _2607_valid = true;;
	{
		
		if ((_1a3cbe665_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a911725a:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _2634_f = _1a3cbe665_Fn((*((*(_self_))._field_d))._field_Kind);;
				{
					
					if (_1a3b78563_IsBuiltin(_2634_f.ptr())) {
						_case_begin_1a9118aa8:;
						{
							_1a3c73729_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if ((*((*(_2634_f))._field_Decl))._field_Binded) {
						_case_begin_1a9118b52:;
						{
							_1a3c73729_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if (((!((*((*(_2634_f))._field_Decl))._field_Statically)) && _1a3b74806_IsMethod((*(_2634_f))._field_Decl))) {
						_case_begin_1a9118bb8:;
						{
							_1a3c73729_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if ((((*((*(_2634_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_2634_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1a9118c2e:;
						{
							_1a3c73729_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1a3c0bb02_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					_match_end_1a91189cb:;
				};
			}
		}
		else if ((_1a3cc019e_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9117304:;
			{
				_1a3c73729_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_2607_valid=false;
			}
		}
		_match_end_1a91171d3:;
	};
	return _2607_valid;;
}



inline jule::Bool _1a3c73c46_checkConst(_1a3c73295_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1a3cbd378_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2923_kind = (*(_1a3cbd378_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1b574740b_IsFloat(_2923_kind)) {
			_case_begin_1a911ebad:;
			{
				if ((!(_1a3c7044b_floatAssignable(&(_2923_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2923_kind;
			}
		}
		else if (_1b57470ba_IsInt(_2923_kind)) {
			_case_begin_1a911ec46:;
			{
				if ((!(_1a3c7100c_intAssignable(_2923_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2923_kind;
			}
		}
		else {
			_case_begin_1a911eb47:;
			{
				return false;;
			}
		}
		_match_end_1a911ea15:;
	};
	return true;;
}



inline jule::Bool _1a3c73ecc_checkCompatibility(_1a3c73295_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1a9121e79:;
			{
				return false;;
			}
		}
		else if ((!(_1a3c739b0_checkValidity(_self_)))) {
			_case_begin_1a9121ee0:;
			{
				return false;;
			}
		}
		else if (_1a3c73c46_checkConst(_self_)) {
			_case_begin_1a9122056:;
			{
				return true;;
			}
		}
		else if ((_1a3cbdb2b_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a91220bc:;
			{
				jule::Ptr<_1a3cbac27_TypeKind> _3218_dkind = (*(_self_))._field_dest;;
				if ((_1a3cbdb2b_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3218_dkind=(*((*(_1a3cbdb2b_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1a3cc3801_Prim> _3254_prim = _1a3cbd378_Prim((*(_self_))._field_dest);;
				if (((_3254_prim == nullptr) || _1a3cc701e_IsAny(_3254_prim.ptr()))) {
					goto _match_end_1a9121297;
				};
				jule::Ptr<_1a3cbac27_TypeKind> _3308_dest = (*(*(_1a3cbdb2b_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind.alloc)._field_Kind;;
				return _1a3c14c09_checkTypeCompatibility((*(_self_))._field_s, &(_3308_dest), &(_3218_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1a9121297:;
	};
	return _1a3c155cd_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1a3c74263_check(_1a3c73295_assignTypeChecker* _self_) {
	jule::Bool _3373_ok = _1a3c73ecc_checkCompatibility(_self_);;
	if ((_3373_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1a3cd822d_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));
	};
	return _3373_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3c73295_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a913a3e3_annotateConstraintElem(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1a944ce20:;
			{
				jule::Ptr<_1a3cbac27_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1a9454c4b:;
						{
							_36012_elem=(*(_1a3cbe148_Arr((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1a9454b91:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a3b40409_ArrTypeDecl>()))._field_Elem;
				return _1a3c76375_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1a944cdba:;
	};
	return false;;
}

inline jule::Bool _1a9076de0_annotateConstraintElem(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a90785b7:;
			{
				jule::Ptr<_1a3cbac27_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1a9079244:;
						{
							_36012_elem=(*(_1a3cbe3ce_Slc((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1a9079321:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a3b3e56d_SlcTypeDecl>()))._field_Elem;
				return _1a3c76375_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1a9078551:;
	};
	return false;;
}

inline jule::Bool _1a9077b7c_annotateConstraintElem(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a83a6781:;
			{
				jule::Ptr<_1a3cbac27_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1a6315ea6:;
						{
							_36012_elem=(*(_1a3cbd895_Ptr((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1a6315659:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a3b3eb67_PtrTypeDecl>()))._field_Elem;
				return _1a3c76375_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1a83a671a:;
	};
	return false;;
}

inline jule::Bool _1a907cd6e_annotateConstraintElem(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1a913b746:;
			{
				jule::Ptr<_1a3cbac27_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1a913c66a:;
						{
							_36012_elem=(*(_1a3cbd60e_Sptr((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1a913c4a0:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a3b3e1d8_SptrTypeDecl>()))._field_Elem;
				return _1a3c76375_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1a913b6d0:;
	};
	return false;;
}



inline jule::Bool _1a3c75561_annotateConstraintMap(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _37742_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a912936b:;
			{
				jule::Ptr<_1a3cc9494_Map> _3808_m = _1a3cbee18_Map((*(_37742_k)).ptr());;
				jule::Ptr<_1a3b40b57_MapTypeDecl> _3818_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a3b40b57_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3818_m2))._field_Key;
				if ((!(_1a3c76375_annotateConstraint(_self_, &((*(_3808_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3818_m2.alloc)._field_Val;
				__jule_func_result = _1a3c76375_annotateConstraint(_self_, &((*_3808_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1a9129305:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a3c758a2_annotateConstraintTup(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _39242_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a912c281:;
			{
				jule::Ptr<_1a3b3e86a_TupleTypeDecl> _3958_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a3b3e86a_TupleTypeDecl>();;
				jule::Ptr<_1a3cc88e4_Tuple> _3968_tup2 = _1a3cc019e_Tup((*(_39242_k)).ptr());;
				{
					auto expr = &((*(_3968_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a95624b8:;
					if (it != expr_end) {
						jule::Ptr<_1a3cbac27_TypeKind> _39716_t2 = *it;
						{
							{
								auto expr = &((*(_3958_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a9562c16:;
								if (it != expr_end) {
									jule::Ptr<_1a3b3d13d_TypeDecl> _39817_t = *it;
									{
										(*(_self_))._field_c=_39817_t;
										if (_1a3c76375_annotateConstraint(_self_, &(_39716_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1a9562c16:;
									++it;
									goto _iter_begin_1a9562c16;
								}
								_iter_end_1a9562c16:;
							};
						}
						_iter_next_1a95624b8:;
						++it;
						goto _iter_begin_1a95624b8;
					}
					_iter_end_1a95624b8:;
				};
			}
		}
		_match_end_1a912c21a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a3c75be3_annotateConstraintFn(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _40941_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a912e1d9:;
			{
				jule::Ptr<_1a3b4eced_FnDecl> _4128_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a3b4eced_FnDecl>();;
				jule::Ptr<_1a3b770cd_FnIns> _4138_f = _1a3cbe665_Fn((*(_40941_k)).ptr());;
				{
					auto expr = &((*(_4138_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a91309d2:;
					if (it != expr_end) {
						jule::I64 _4149_i = it - expr->begin();
						jule::Ptr<_1a3b76055_ParamIns> _41416_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4128_pf))._field_Params[_4149_i]))._field_Kind;
							if (_1a3c76375_annotateConstraint(_self_, &((*(_41416_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1a91309d2:;
						++it;
						_4149_i++;
						goto _iter_begin_1a91309d2;
					}
					_iter_end_1a91309d2:;
				};
				if (((*_4128_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4128_pf))._field_Result.alloc)._field_Kind;
					if (_1a3c76375_annotateConstraint(_self_, &((*_4138_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1a912e173:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a3c76034_annotateConstraintIdent(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _43044_k) {
	jule::Ptr<_1a3b3d748_IdentTypeDecl> _4317_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1a3b3d748_IdentTypeDecl>(&__jule_any_type75);;
	jule::Ptr<_1a3b61cbb_StructIns> _4327_s = _1a3cbe8eb_Struct((*(_43044_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9134453:;
		if (it != expr_end) {
			jule::I64 _4337_i = it - expr->begin();
			jule::Ptr<_1a3b4a348_GenericDecl> _43310_g = *it;
			{
				if (((*(_43310_g))._field_Ident == (*(_4317_ident))._field_Ident)) {
					jule::Ptr<_1a3cb9341_InsGeneric> _4359_fg = (*((*(_self_))._field_f))._field_Generics[_4337_i];;
					if ((_4359_fg != nullptr)) {
						return false;;
					};
					_1a3c766d8_pushGeneric(_self_, _43044_k, _4337_i);
					return true;;
				};
				if ((_4327_s == nullptr)) {
					goto _iter_next_1a9134453;
				};
				jule::Ptr<_1a3b3d13d_TypeDecl> _4458_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_4317_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9136ed3:;
					if (it != expr_end) {
						jule::Ptr<_1a3b3d13d_TypeDecl> _44616_ig = *it;
						{
							(*(_self_))._field_c=_44616_ig;
							{
								auto expr = &((*(_4327_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a9137aa5:;
								if (it != expr_end) {
									jule::Ptr<_1a3cb9341_InsGeneric> _44817_sg = *it;
									{
										if (_1a3c76375_annotateConstraint(_self_, &((*(_44817_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1a9137aa5:;
									++it;
									goto _iter_begin_1a9137aa5;
								}
								_iter_end_1a9137aa5:;
							};
						}
						_iter_next_1a9136ed3:;
						++it;
						goto _iter_begin_1a9136ed3;
					}
					_iter_end_1a9136ed3:;
				};
				(*(_self_))._field_c=_4458_c;
			}
			_iter_next_1a9134453:;
			++it;
			_4337_i++;
			goto _iter_begin_1a9134453;
		}
		_iter_end_1a9134453:;
	};
	return false;;
}



inline jule::Bool _1a3c76375_annotateConstraint(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _45939_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1a913805b:;
			{
				return _1a3c76034_annotateConstraintIdent(_self_, _45939_k);;
			}
		}
		_match_end_1a9137ee5:;
	};
	{
		
		if ((_1a3cbe148_Arr((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1a9138be9:;
			{
				return _1a913a3e3_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1a3cbe3ce_Slc((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1a9138c60:;
			{
				return _1a9076de0_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1a3cbd895_Ptr((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1a9138cc6:;
			{
				return _1a9077b7c_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1a3cbd60e_Sptr((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1a9138d3c:;
			{
				return _1a907cd6e_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1a3cbee18_Map((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1a9138da3:;
			{
				return _1a3c75561_annotateConstraintMap(_self_, _45939_k);;
			}
		}
		else if ((_1a3cbe665_Fn((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1a913948b:;
			{
				return _1a3c75be3_annotateConstraintFn(_self_, _45939_k);;
			}
		}
		else if ((_1a3cc019e_Tup((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1a9139502:;
			{
				return _1a3c758a2_annotateConstraintTup(_self_, _45939_k);;
			}
		}
		else {
			_case_begin_1a913903a:;
			{
				return false;;
			}
		}
		_match_end_1a9138ed5:;
	};
}



inline void _1a3c766d8_pushGeneric(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _48432_k, jule::I64 _48446_i) {
	(*((*(_self_))._field_f))._field_Generics[_48446_i]=jule::new_ptr<_1a3cb9341_InsGeneric>(_1a3cb9341_InsGeneric{._field_Kind=(*(_48432_k)), });
	jule::Ptr<_1a3b4a348_GenericDecl> _4867_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_48446_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9075b14:;
		if (it != expr_end) {
			jule::Ptr<_1a3cbac27_TypeKind> _48715_ignored = *it;
			{
				if (((*(_4867_gd))._field_Ident == _1a3cbb0e0_Str(_48715_ignored.ptr()))) {
					(*_48715_ignored.alloc)._field_Kind=(*((*(_48432_k))))._field_Kind;
				};
			}
			_iter_next_1a9075b14:;
			++it;
			goto _iter_begin_1a9075b14;
		}
		_iter_end_1a9075b14:;
	};
	if ((((*_4867_gd.alloc)._field_Constraint == nullptr) || ((*((*_4867_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_4867_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1a3c76375_annotateConstraint(_self_, _48432_k);
}



inline jule::Bool _1a3c76a29_annotatePrim(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _49940_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a3c78a4d_annotateAny(_self_, _49940_k);
	return __jule_func_result;;
}



inline jule::Bool _1a3c76d6a_annotateArr(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _50339_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a3cca121_Arr> _5047_parr = _1a3cbe148_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_5047_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3cca121_Arr> _5087_arr = _1a3cbe148_Arr((*(_50339_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5047_parr))._field_Elem));
	__jule_func_result = _1a3c78d8e_annotateKind(_self_, &((*(_5087_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a3c771ab_annotateSlc(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _51339_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a3cc7d00_Slc> _5147_pslc = _1a3cbe3ce_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5147_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3cc7d00_Slc> _5187_slc = _1a3cbe3ce_Slc((*(_51339_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5147_pslc))._field_Elem));
	__jule_func_result = _1a3c78d8e_annotateKind(_self_, &((*(_5187_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a3c775a7_checkMapKey(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _52338_k, jule::Ptr<_1a3cbac27_TypeKind>* _52358_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a3cbac27_TypeKind>* _5247_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52338_k;
	__jule_func_result=_1a3c78d8e_annotateKind(_self_, _52358_ck);
	(*(_self_))._field_k=_5247_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a3c778e8_annotateMap(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _53139_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a3cc9494_Map> _5327_pmap = _1a3cbee18_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5327_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3cc9494_Map> _5367_m = _1a3cbee18_Map((*(_53139_k)).ptr());;
	__jule_func_result = (_1a3c775a7_checkMapKey(_self_, (&((*(_5327_pmap))._field_Key)), &((*(_5367_m))._field_Key)) && _1a3c775a7_checkMapKey(_self_, (&((*(_5327_pmap))._field_Val)), &((*_5367_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1a3c77c39_annotateFn(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _54138_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a3b770cd_FnIns> _5427_pf = _1a3cbe665_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5427_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3b770cd_FnIns> _5467_f = _1a3cbe665_Fn((*(_54138_k)).ptr());;
	{
		
		if (((*(_5427_pf))._field_Params.len() != (*(_5467_f))._field_Params.len())) {
			_case_begin_1a9140393:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1a3b74570_IsVoid((*(_5427_pf))._field_Decl.ptr()) != _1a3b74570_IsVoid((*(_5467_f))._field_Decl))) {
			_case_begin_1a914042b:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a914030a:;
	};
	__jule_func_result=true;
	jule::Ptr<_1a3cbac27_TypeKind>* _5557_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5467_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9142296:;
		if (it != expr_end) {
			jule::I64 _5568_i = it - expr->begin();
			jule::Ptr<_1a3b76055_ParamIns> _55615_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5427_pf))._field_Params[_5568_i]))._field_Kind));
				__jule_func_result=(_1a3c78d8e_annotateKind(_self_, &((*(_55615_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1a9142296:;
			++it;
			_5568_i++;
			goto _iter_begin_1a9142296;
		}
		_iter_end_1a9142296:;
	};
	if ((!(_1a3b74570_IsVoid((*(_5427_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_5427_pf))._field_Result));
		__jule_func_result=(_1a3c78d8e_annotateKind(_self_, &((*_5467_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5557_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a3c7807a_annotatePtr(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _57039_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a3ccaae4_Ptr> _5717_pptr = _1a3cbd895_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5717_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3ccaae4_Ptr> _5757_ptr = _1a3cbd895_Ptr((*(_57039_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5717_pptr))._field_Elem));
	__jule_func_result = _1a3c78d8e_annotateKind(_self_, &((*(_5757_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a3c783bb_annotateSptr(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _58040_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a3cc732c_Sptr> _5817_ssptr = _1a3cbd60e_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5817_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3cc732c_Sptr> _5857_sptr = _1a3cbd60e_Sptr((*(_58040_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5817_ssptr))._field_Elem));
	__jule_func_result = _1a3c78d8e_annotateKind(_self_, &((*(_5857_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a3c7870c_annotateStruct(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _59042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a3b61cbb_StructIns> _5917_s = _1a3cbe8eb_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5917_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3b61cbb_StructIns> _5957_s2 = _1a3cbe8eb_Struct((*(_59042_k)).ptr());;
	if (((*(_5917_s))._field_Generics.len() != (*(_5957_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5917_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9455c2a:;
		if (it != expr_end) {
			jule::I64 _5998_i = it - expr->begin();
			jule::Ptr<_1a3cb9341_InsGeneric> _59915_g = *it;
			{
				jule::Ptr<_1a3cb9341_InsGeneric> _6008_g2 = (*(_5957_s2))._field_Generics[_5998_i];;
				if (_1a3cbb431_Equal((*(_59915_g))._field_Kind, (*(_6008_g2))._field_Kind)) {
					goto _iter_next_1a9455c2a;
				};
				(*(_self_))._field_k=(&((*_59915_g.alloc)._field_Kind));
				if ((!(_1a3c78d8e_annotateKind(_self_, &((*_6008_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a9455c2a:;
			++it;
			_5998_i++;
			goto _iter_begin_1a9455c2a;
		}
		_iter_end_1a9455c2a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a3c78a4d_annotateAny(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _61239_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6133_kind = _1a3cbb0e0_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6cb8c00:;
		if (it != expr_end) {
			jule::I64 _6147_i = it - expr->begin();
			jule::Ptr<_1a3b4a348_GenericDecl> _61410_g = *it;
			{
				if ((_6133_kind != (*(_61410_g))._field_Ident)) {
					goto _iter_next_1a6cb8c00;
				};
				jule::Ptr<_1a3cb9341_InsGeneric> _6184_t = (*((*(_self_))._field_f))._field_Generics[_6147_i];;
				{
					
					if ((_6184_t == nullptr) || ((*(_6184_t))._field_Kind == nullptr)) {
						_case_begin_1a914560c:;
						{
							_1a3c766d8_pushGeneric(_self_, _61239_k, _6147_i);
						}
					}
					else if ((!(_1a3cbb431_Equal((*(_6184_t))._field_Kind, (*(_61239_k)))))) {
						_case_begin_1a9146a09:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1a9146201:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61239_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1a6cb8c00:;
			++it;
			_6147_i++;
			goto _iter_begin_1a6cb8c00;
		}
		_iter_end_1a6cb8c00:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a3c78d8e_annotateKind(_1a3c74b6a_dynamicTypeAnnotation* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _63340_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1a3c78a4d_annotateAny(_self_, _63340_k)) {
			_case_begin_1a9149644:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a3cbd378_Prim((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1a91496aa:;
			{
				__jule_func_result = _1a3c76a29_annotatePrim(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a3cbe148_Arr((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1a9149721:;
			{
				__jule_func_result = _1a3c76d6a_annotateArr(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a3cbe3ce_Slc((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1a9149798:;
			{
				__jule_func_result = _1a3c771ab_annotateSlc(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a3cbee18_Map((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1a9149963:;
			{
				__jule_func_result = _1a3c778e8_annotateMap(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a3cbe665_Fn((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1a91499c9:;
			{
				__jule_func_result = _1a3c77c39_annotateFn(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a3cbd895_Ptr((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1a9149a40:;
			{
				__jule_func_result = _1a3c7807a_annotatePtr(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a3cbd60e_Sptr((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1a9149aa6:;
			{
				__jule_func_result = _1a3c783bb_annotateSptr(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a3cbe8eb_Struct((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1a9149b2d:;
			{
				__jule_func_result = _1a3c7870c_annotateStruct(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a9149523:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a91490b1:;
	};
}



inline jule::Bool _1a3c79125_annotate(_1a3c74b6a_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1a3c78d8e_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3c74b6a_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1a3c7a038_pushErrToken(_1a3c799c7_fnCallArgChecker* _self_, jule::Ptr<_1a3b27a62_Token> _67828_token, jule::Str _67843_fmt, jule::Slice<jule::Any> _67856_args) {
	_1a3c0b78e_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67828_token, _67843_fmt, _67856_args);
}



inline void _1a3c7a39b_pushErr(_1a3c799c7_fnCallArgChecker* _self_, jule::Str _68223_fmt, jule::Slice<jule::Any> _68236_args) {
	_1a3c7a038_pushErrToken(_self_, (*(_self_))._field_errorToken, _68223_fmt, _68236_args);
}



inline jule::Slice<jule::Ptr<_1a3b76055_ParamIns>> _1a3c7a632_getParams(_1a3c799c7_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1a3b72c44_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1a3c7a973_checkCounts(_1a3c799c7_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a3b76055_ParamIns>>* _69528_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _6967_n = (*(_69528_params)).len();;
	if (((_6967_n > 0LL) && _1a3b72c44_IsSelf((*((*(_69528_params))[0LL]))._field_Decl.ptr()))) {
		(_6967_n)--;
	};
	jule::I64 _7017_diff = (_6967_n - (*(_self_))._field_args.len());;
	jule::Str _7027_log = jule::Str();;
	{
		
		if ((_7017_diff == 0LL)) {
			_case_begin_1a91564b9:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6967_n > 0LL) && (*(*((*(_69528_params))[(_6967_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1a91563dc:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_7017_diff < 0LL) || (_7017_diff > (*(_69528_params)).len()))) {
			_case_begin_1a915609b:;
			{
				_7027_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1a9156035:;
			{
				_7027_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1a9155ebe:;
	};
	_1e7be2632_StrBuilder _7137_err = static__1e7be28eb_New(32LL);;
	_1e7beb262_WriteStr(&_7137_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_1e7beb262_WriteStr(&_7137_err, jule::Str::lit("\n       want (", 14));
	{
		auto expr = _69528_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9158ca2:;
		if (it != expr_end) {
			jule::I64 _7167_i = it - expr->begin();
			jule::Ptr<_1a3b76055_ParamIns> *_71610_p = it;
			{
				_1e7beb262_WriteStr(&_7137_err, _1a3cbb0e0_Str((*((*(_71610_p))))._field_Kind.ptr()));
				if ((((*(_69528_params)).len() - _7167_i) > 1LL)) {
					_1e7beb262_WriteStr(&_7137_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1a9158ca2:;
			++it;
			_7167_i++;
			goto _iter_begin_1a9158ca2;
		}
		_iter_end_1a9158ca2:;
	};
	_1e7beb51a_WriteByte(&_7137_err, ')');
	_1a3c7a39b_pushErr(_self_, _7027_log, jule::Slice<jule::Any>::make({jule::Any(_1e7beba59_Str(&_7137_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a3c7ae29_checkArg(_1a3c799c7_fnCallArgChecker* _self_, jule::Ptr<_1a3b76055_ParamIns>* _72729_p, jule::Ptr<_1a3c8982d_Data>* _72748_arg, jule::Ptr<_1a3b27a62_Token>* _72765_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1a3b793aa_parameterUsesGenerics(_72729_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72729_p))))._field_Decl))._field_Variadic)) && _1a3c835b3_isGoodValueToInfer(_72748_arg));
		if (__jule_func_result) {
			_1a3c74b6a_dynamicTypeAnnotation _7329_dta = _1a3c74b6a_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72729_p)), ._field_a=(*(_72748_arg)), ._field_errorToken=(*(_72765_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1a3c79125_annotate(&_7329_dta);
		};
		if ((!(__jule_func_result))) {
			_1a3c7a038_pushErrToken(_self_, (*(_72765_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1a3c18636_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_72729_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_72729_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72729_p))))._field_Kind), _72748_arg, _72765_errorToken)) {
		__jule_func_result = _1a3c1429c_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_72729_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72729_p))))._field_Kind), _72748_arg, (*(_72765_errorToken)));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a3c7b325_push(_1a3c799c7_fnCallArgChecker* _self_, jule::Ptr<_1a3b76055_ParamIns>* _75625_p, jule::Ptr<_1a3b42472_Expr> _75643_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a3cbac27_TypeKind> _7577_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7583_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_75625_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_75625_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_75625_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1a3c8982d_Data> _7667_d = _1a3ca97b5_evalExpr((*(_self_))._field_e, _75643_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7577_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7583_oldImmut;
	if ((_7667_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a3c7ae29_checkArg(_self_, _75625_p, &(_7667_d), &((*(_75643_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7667_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1a3c7b721_pushVariadic(_1a3c799c7_fnCallArgChecker* _self_, jule::Ptr<_1a3b76055_ParamIns>* _78033_p, jule::I64 _78051_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7827_variadiced = false;;
	jule::Bool _7833_more = ((_78051_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1a3b685ca_SliceExprModel> _7847_model = jule::new_ptr<_1a3b685ca_SliceExprModel>(_1a3b685ca_SliceExprModel{._field_ElemKind=(*((*(_78033_p))))._field_Kind, });;
	jule::Ptr<_1a3cbac27_TypeKind> _7887_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1a3cbac27_TypeKind> _7957_oldKind = (*((*(_78033_p))))._field_Kind;;
	(*((*(_78033_p))))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>((*(*((*(_78033_p))))._field_Kind.alloc));
	(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_78033_p))))._field_Kind=_7957_oldKind;
	});;
	for (; (_78051_i < (*(_self_))._field_args.len()); (_78051_i)++) {
		{
			jule::Ptr<_1a3b42472_Expr> _8048_arg = (*(_self_))._field_args[_78051_i];;
			{
				auto &_match_expr{ (*(_8048_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type76) {
					_case_begin_1a945d480:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3cc7d00_Slc>(_1a3cc7d00_Slc{._field_Elem=(*((*(_78033_p))))._field_Kind}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data22)});
					}
				}
				else {
					_case_begin_1a945d77c:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_78033_p))))._field_Kind;
					}
				}
				_match_end_1a945d727:;
			};
			jule::Ptr<_1a3c8982d_Data> _8178_d = _1a3ca9133_eval((*(_self_))._field_e, _8048_arg);;
			if ((_8178_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1a945c935;
			};
			if ((*((*(_8178_d))._field_Kind))._field_Variadic) {
				_7827_variadiced=true;
				(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1a3c7ae29_checkArg(_self_, _78033_p, &(_8178_d), &((*(_8048_arg))._field_Token)));
				(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8178_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1a9460e11:;
						{
							_7847_model=(*(_8178_d))._field_Model.unsafe_cast_ptr<_1a3b685ca_SliceExprModel>();
							(*(_7847_model))._field_ElemKind=(*((*(_78033_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1a946252d:;
						{
							_7847_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8178_d))._field_Model); };
						}
					}
					_match_end_1a94624c8:;
				};
				(_78051_i)++;
				goto _iter_end_1a945c935;
			};
			__jule_func_result=(__jule_func_result && _1a3c7ae29_checkArg(_self_, _78033_p, &(_8178_d), &((*_8048_arg.alloc)._field_Token)));
			(*(_7847_model))._field_Elems=jule::append((*_7847_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_8178_d))._field_Model}));
		}
	_iter_next_1a945c935:;
	}
	_iter_end_1a945c935:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7887_old;
	if ((_7827_variadiced && _7833_more)) {
		_1a3c7a038_pushErrToken(_self_, (*((*(_self_))._field_args[_78051_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_7847_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7847_model, &__jule_any_type77)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a3c7ba62_checkArgs(_1a3c799c7_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a3b76055_ParamIns>>* _86130_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8623_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I64 _8667_i = 0LL;;
	if ((((*(_86130_params)).len() > 0LL) && _1a3b72c44_IsSelf((*((*(_86130_params))[0LL]))._field_Decl.ptr()))) {
		(_8667_i)++;
	};
	_julec_label_1a9467c09:;
	while ((_8667_i < (*(_86130_params)).len())) {
		{
			jule::Ptr<_1a3b76055_ParamIns> _8738_p = (*(_86130_params))[_8667_i];;
			{
				
				if ((*(*(_8738_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1a9469865:;
					{
						__jule_func_result=(_1a3c7b721_pushVariadic(_self_, &(_8738_p), _8667_i) && __jule_func_result);
						goto _iter_end_1a946808e;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8667_i)) {
					_case_begin_1a9469953:;
					{
						__jule_func_result=false;
						goto _iter_end_1a946808e;
					}
				}
				else {
					_case_begin_1a94694ad:;
					{
						__jule_func_result=(_1a3c7b325_push(_self_, &(_8738_p), (*(_self_))._field_args[_8667_i]) && __jule_func_result);
					}
				}
				_match_end_1a9469447:;
			};
			(_8667_i)++;
		}
	_iter_next_1a946808e:;
	}
	_iter_end_1a946808e:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8623_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a3c7bce8_checkDynamicTypeAnnotation(_1a3c799c7_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a946bb20:;
		if (it != expr_end) {
			jule::Ptr<_1a3cb9341_InsGeneric> _89310_g = *it;
			{
				if ((_89310_g == nullptr)) {
					_1a3c7a39b_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a946bb20:;
			++it;
			goto _iter_begin_1a946bb20;
		}
		_iter_end_1a946bb20:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a3c7c07e_check(_1a3c799c7_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1a3b76055_ParamIns>> _9037_params = _1a3c7a632_getParams(_self_);;
	__jule_func_result=_1a3c7a973_checkCounts(_self_, &(_9037_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a3c7ba62_checkArgs(_self_, &(_9037_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1a3c7bce8_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3c799c7_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1a3c7ce5e_pushErr(_1a3c7c90e_structLitChecker* _self_, jule::Ptr<_1a3b27a62_Token> _94123_token, jule::Str _94138_fmt, jule::Slice<jule::Any> _94151_args) {
	_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), _94123_token, _94138_fmt, _94151_args);
}



inline void _1a3c7d2c2_pushSuggestion(_1a3c7c90e_structLitChecker* _self_, jule::Str _94630_fmt, jule::Slice<jule::Any> _94643_args) {
	_1a3c8be18_pushSuggestion((*(_self_))._field_e.ptr(), _94630_fmt, _94643_args);
}



inline void _1a3c7d6e0_pushMatch(_1a3c7c90e_structLitChecker* _self_, jule::Ptr<_1a3b6121b_FieldIns>* _95030_f, jule::Ptr<_1a3c8982d_Data>* _95049_d, jule::Ptr<_1a3b27a62_Token>* _95064_errorToken) {
	;
	jule::Bool _9563_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_95030_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1a3c18636_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9563_mutable, false, &((*((*(_95030_f))))._field_Kind), _95049_d, _95064_errorToken)) {
		_1a3c1429c_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_95030_f))))._field_Kind), _95049_d, (*(_95064_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1a3b66b28_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1a3b66b28_StructArgExprModel>(_1a3b66b28_StructArgExprModel{._field_Token=(*(_95064_errorToken)), ._field_Field=(*(_95030_f)), ._field_Expr=(*(_95049_d))})); };
}



inline void _1a3c7da53_checkPair(_1a3c7c90e_structLitChecker* _self_, jule::Ptr<_1a3b46b91_FieldExprPair>* _96930_pair, jule::Slice<jule::Ptr<_1a3b42472_Expr>>* _96957_exprs) {
	jule::Ptr<_1a3b6121b_FieldIns> _9717_f = _1a3b63174_FindField((*(_self_))._field_s.ptr(), (*((*((*(_96930_pair))))._field_Field))._field_Kind);;
	if ((_9717_f == nullptr)) {
		_1a3c7ce5e_pushErr(_self_, (*((*(_96930_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1a3c0beed_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9717_f))._field_Decl))._field_Public, (*(*(_9717_f))._field_Decl.alloc)._field_Token)))) {
		_1a3c7ce5e_pushErr(_self_, (*((*(_96930_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		_1a3c7d2c2_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1a956b11a:;
	{
		auto expr = _96957_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9569d3e:;
		if (it != expr_end) {
			jule::Ptr<_1a3b42472_Expr> _98315_expr = *it;
			{
				{
					auto &_match_expr{ (*(_98315_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1a956c4e5:;
						{
							jule::Ptr<_1a3b46b91_FieldExprPair> _9869_dpair = (*(_98315_expr))._field_Kind.unsafe_cast_ptr<_1a3b46b91_FieldExprPair>();;
							{
								
								if (((*(_96930_pair)) == _9869_dpair)) {
									_case_begin_1a956d4d5:;
									{
										goto _iter_end_1a9569d3e;
									}
								}
								else if (((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind == (*(*(_9869_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1a956d57e:;
									{
										_1a3c7ce5e_pushErr(_self_, (*((*(_96930_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1a9569d3e;
									}
								}
								_match_end_1a956d45d:;
							};
						}
					}
					_match_end_1a956c47e:;
				};
			}
			_iter_next_1a9569d3e:;
			++it;
			goto _iter_begin_1a9569d3e;
		}
		_iter_end_1a9569d3e:;
	};
	jule::Ptr<_1a3cbac27_TypeKind> _9977_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9977_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9717_f))._field_Kind;
	jule::Ptr<_1a3c8982d_Data> _10017_d = _1a3ca97b5_evalExpr((*(_self_))._field_e, (*((*(_96930_pair))))._field_Expr);;
	if ((_10017_d == nullptr)) {
		return;;
	};
	_1a3c7d6e0_pushMatch(_self_, &(_9717_f), &(_10017_d), &((*((*(_96930_pair))))._field_Field));
}



inline jule::Bool _1a3c7dd94_readyExprs(_1a3c7c90e_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a3b42472_Expr>>* _100831_exprs) {
	jule::Bool _10097_ok = true;;
	{
		auto expr = _100831_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a957294b:;
		if (it != expr_end) {
			jule::I64 _10108_i = it - expr->begin();
			jule::Ptr<_1a3b42472_Expr> _101015_expr = *it;
			{
				{
					auto &_match_expr{ (*(_101015_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type79) {
						_case_begin_1a957362d:;
						{
							jule::Ptr<_1a3b4829c_KeyValPair> _10139_pair = (*(_101015_expr))._field_Kind.unsafe_cast_ptr<_1a3b4829c_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10139_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type44) {
									_case_begin_1a6cb9c89:;
									{
										goto _match_end_1a9574970;
									}
								}
								else {
									_case_begin_1a95749c5:;
									{
										_1a3c7ce5e_pushErr(_self_, (*(_10139_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_10097_ok=false;
										goto _iter_next_1a957294b;
									}
								}
								_match_end_1a9574970:;
							};
							(*((*(_100831_exprs))[_10108_i]))._field_Kind=jule::Any(jule::new_ptr<_1a3b46b91_FieldExprPair>(_1a3b46b91_FieldExprPair{._field_Field=(*((*(_10139_pair))._field_Key))._field_Token, ._field_Expr=(*_10139_pair.alloc)._field_Val}), &__jule_any_type78);
						}
					}
					_match_end_1a95735b7:;
				};
			}
			_iter_next_1a957294b:;
			++it;
			_10108_i++;
			goto _iter_begin_1a957294b;
		}
		_iter_end_1a957294b:;
	};
	return _10097_ok;;
}



inline void _1a3c7e14c_check(_1a3c7c90e_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a3b42472_Expr>>* _103226_exprs) {
	if (((*(_103226_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1a3c7dd94_readyExprs(_self_, _103226_exprs)))) {
		return;;
	};
	jule::Bool _10397_paired = false;;
	{
		auto expr = _103226_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83b0735:;
		if (it != expr_end) {
			jule::I64 _10408_i = it - expr->begin();
			jule::Ptr<_1a3b42472_Expr> _104015_expr = *it;
			{
				{
					auto &_match_expr{ (*(_104015_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1a83b6dce:;
						{
							jule::Ptr<_1a3b46b91_FieldExprPair> _10439_pair = (*(_104015_expr))._field_Kind.unsafe_cast_ptr<_1a3b46b91_FieldExprPair>();;
							if (((_10408_i > 0LL) && (!(_10397_paired)))) {
								_1a3c7ce5e_pushErr(_self_, (*(_10439_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_10397_paired=true;
							_1a3c7da53_checkPair(_self_, &(_10439_pair), _103226_exprs);
						}
					}
					else {
						_case_begin_1a83b1637:;
						{
							if (_10397_paired) {
								_1a3c7ce5e_pushErr(_self_, (*(_104015_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_10408_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1a3c7ce5e_pushErr(_self_, (*_104015_expr.alloc)._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1a83b0735;
							};
							jule::Ptr<_1a3b6121b_FieldIns> _10589_field = (*(*(_self_))._field_s.alloc)._field_Fields[_10408_i];;
							if ((!(_1a3c0beed_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10589_field))._field_Decl))._field_Public, (*(*(_10589_field))._field_Decl.alloc)._field_Token)))) {
								_1a3c7ce5e_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1a3c7d2c2_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1a3cbac27_TypeKind> _10669_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10669_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_10589_field.alloc)._field_Kind;
							jule::Ptr<_1a3c8982d_Data> _10709_d = _1a3ca97b5_evalExpr((*(_self_))._field_e, _104015_expr);;
							if ((_10709_d == nullptr)) {
								goto _iter_next_1a83b0735;
							};
							_1a3c7d6e0_pushMatch(_self_, &(_10589_field), &(_10709_d), &((*_104015_expr.alloc)._field_Token));
						}
					}
					_match_end_1a83b15d2:;
				};
			}
			_iter_next_1a83b0735:;
			++it;
			_10408_i++;
			goto _iter_begin_1a83b0735;
		}
		_iter_end_1a83b0735:;
	};
	if ((!(_10397_paired))) {
		jule::I64 _10814_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _10828_diff = (_10814_n - (*(_103226_exprs)).len());;
		{
			
			if ((_10828_diff <= 0LL)) {
				_case_begin_1a83b9761:;
				{
					return;;
				}
			}
			_match_end_1a83b9651:;
		};
		_1e7be2632_StrBuilder _10888_idents = static__1e7be28eb_New(32LL);;
		for (; (_10828_diff > 0LL); (_10828_diff)--) {
			{
				_1e7beb262_WriteStr(&_10888_idents, jule::Str::lit(", ", 2));
				_1e7beb262_WriteStr(&_10888_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10814_n - _10828_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1a83ba0ad:;
		}
		_iter_end_1a83ba0ad:;;
		_1a3c7ce5e_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_1e7bec50a_Buf(&_10888_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3c7c90e_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3c7e6e1_rangeChecker_eq(_1a3c7e6e1_rangeChecker *_self_, _1a3c7e6e1_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_1a3c31c26_Var> _1a3c7ebca_buildVar(_1a3c7e6e1_rangeChecker* _self_, jule::Ptr<_1a3b50ea8_VarDecl>* _110825_decl) {
	jule::Ptr<_1a3c31c26_Var> _11097_v = _1a3b805d1_buildVar((*(_110825_decl)));;
	return _11097_v;;
}



inline void _1a3c7edc8_setSizeKey(_1a3c7e6e1_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1a3b2a449_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1a3c7ebca_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_1a3e37338_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
}



inline void _1a3c802e6_checkRangeExprValidity(_1a3c7e6e1_rangeChecker* _self_, jule::Ptr<_1a3c8982d_Data>* _112743_d, jule::Ptr<_1a3c31c26_Var>* _112754_key, jule::Ptr<_1a3cbac27_TypeKind>* _112770_k) {
	jule::Bool _11287__mut = (*((*(_112754_key))))._field_Mutable;;
	if ((_11287__mut && (!(_1a3cbc5a8_Mutable((*(_112770_k)).ptr()))))) {
		_11287__mut=false;
	};
	_1a3c18636_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11287__mut, (*((*(_112754_key))))._field_Reference, &((*((*((*(_112754_key))))._field_Kind))._field_Kind), _112743_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1a3c804e4_checkSlice(_1a3c7e6e1_rangeChecker* _self_) {
	_1a3c7edc8_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a3b2a449_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a3cc7d00_Slc> _11467_slc = _1a3cbe3ce_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a3c7ebca_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=(*(_11467_slc))._field_Elem});
	_1a3c802e6_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11467_slc.alloc)._field_Elem));
}



inline void _1a3c806e2_checkArray(_1a3c7e6e1_rangeChecker* _self_) {
	_1a3c7edc8_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a3b2a449_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a3cca121_Arr> _11597_arr = _1a3cbe148_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a3c7ebca_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=(*(_11597_arr))._field_Elem});
	_1a3c802e6_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11597_arr.alloc)._field_Elem));
}



inline void _1a3c808e0_checkMapKeyA(_1a3c7e6e1_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1a3b2a449_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a3cc9494_Map> _11717_m = _1a3cbee18_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1a3c7ebca_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=(*(_11717_m))._field_Key});
	jule::Ptr<_1a3c8982d_Data> _11757_d = jule::new_ptr<_1a3c8982d_Data>((*(*(_self_))._field_d.alloc));;
	(*_11757_d.alloc)._field_Kind=(*_11717_m.alloc)._field_Key;
	_1a3c802e6_checkRangeExprValidity(_self_, &(_11757_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11717_m.alloc)._field_Key));
}



inline void _1a3c80add_checkMapKeyB(_1a3c7e6e1_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a3b2a449_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a3cc9494_Map> _11867_m = _1a3cbee18_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a3c7ebca_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=(*(_11867_m))._field_Val});
	jule::Ptr<_1a3c8982d_Data> _11907_d = jule::new_ptr<_1a3c8982d_Data>((*(*(_self_))._field_d.alloc));;
	(*_11907_d.alloc)._field_Kind=(*_11867_m.alloc)._field_Val;
	_1a3c802e6_checkRangeExprValidity(_self_, &(_11907_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11867_m.alloc)._field_Val));
}



inline void _1a3c80cdb_checkMap(_1a3c7e6e1_rangeChecker* _self_) {
	_1a3c808e0_checkMapKeyA(_self_);
	_1a3c80add_checkMapKeyB(_self_);
}



inline void _1a3c80ed9_checkStr(_1a3c7e6e1_rangeChecker* _self_) {
	_1a3c7edc8_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1a3b2a449_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a3c7ebca_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_1a3e37338_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1a3c811d7_checkComptime(_1a3c7e6e1_rangeChecker* _self_) {
	_1a3c7edc8_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1a3c0b78e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1a3c0b78e_pushErr((*((*(_self_))._field_sc))._field_s, (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1a3b2a449_IsIgnoreIdent((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a3c7ebca_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1a3c8146d_checkComptimeRange(_1a3c7e6e1_rangeChecker* _self_) {
	jule::Ptr<_1a3b8eb84_comptimeRange> _12257_range = _1a3cc1722_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_12257_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3b8e964_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a3b8e964_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a3b8e964_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a3b8e964_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a3b8e964_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a3b8e964_comptimeRangeKind_mptr_data5)) {
			_case_begin_1a83da4c9:;
			{
				_1a3c811d7_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1a83d951c:;
			{
				_1a3c0b78e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1a83d94b7:;
	};
}



inline jule::Bool _1a3c81704_check(_1a3c7e6e1_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1a66c452e:;
		}
		else if ((_1a3cbe3ce_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a66c4793:;
			{
				_1a3c804e4_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1a3cbe148_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a66c4809:;
			{
				_1a3c806e2_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1a3cbee18_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a66c4870:;
			{
				_1a3c80cdb_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1a3cc1722_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a66c48d6:;
			{
				return _1a3c8146d_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1a9573b4a:;
			{
				jule::Ptr<_1a3cc3801_Prim> _12574_prim = _1a3cbd378_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_12574_prim != nullptr) && _1a3cc6c88_IsStr(_12574_prim))) {
					_1a3c80ed9_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1a9573a4b:;
	};
	_1a3c0b78e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3c7e6e1_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1a3c82381_prepareTypes(_1a3c81e52_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1a3b782cc_Types((*(_self_))._field_f);
	};
}



inline void _1a3c82639_prepareExprs(_1a3c81e52_retTypeChecker* _self_, jule::Ptr<_1a3b42472_Expr>* _128533_e) {
	if (((*(_128533_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128533_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1a91481c0:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128533_e))))._field_Kind.unsafe_cast_ptr<_1a3b43066_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1a66ca59b:;
			{
				{ jule::Slice<jule::Ptr<_1a3b42472_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128533_e))); };
			}
		}
		_match_end_1a66ca546:;
	};
}



inline void _1a3c82837_checkExprs(_1a3c81e52_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a3c8982d_Data>> _13017_datas = jule::Slice<jule::Ptr<_1a3c8982d_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1a3c8b555_Eval> _13027_eval = _1a3c13c3b_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a91677b6:;
		if (it != expr_end) {
			jule::I64 _13038_i = it - expr->begin();
			jule::Ptr<_1a3b42472_Expr> _130315_expr = *it;
			{
				if ((_13038_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1a91677b6;
				};
				jule::Ptr<_1a3cbac27_TypeKind> _13088_t = (*(_self_))._field_types[_13038_i];;
				(*(_13027_eval))._field_prefix=_13088_t;
				jule::Ptr<_1a3c8982d_Data> _13118_d = _1a3ca97b5_evalExpr(_13027_eval, _130315_expr);;
				if ((_13118_d == nullptr)) {
					goto _iter_next_1a91677b6;
				};
				{ jule::Slice<jule::Ptr<_1a3c8982d_Data>> &__jule_push_dest = _13017_datas; __jule_push_dest.push(_13118_d); };
				if (((!((*(_13118_d))._field_Mutable)) && _1a3cbc5a8_Mutable((*(_13118_d))._field_Kind.ptr()))) {
					_1a3c0b78e_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1a3c73295_assignTypeChecker _13238_ac = _1a3c73295_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_13088_t, ._field_d=_13118_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1a3c74263_check(&_13238_ac);
			}
			_iter_next_1a91677b6:;
			++it;
			_13038_i++;
			goto _iter_begin_1a91677b6;
		}
		_iter_end_1a91677b6:;
	};
	if ((_13017_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1a3b6b8db_TupleExprModel>(_1a3b6b8db_TupleExprModel{._field_Datas=_13017_datas}), &__jule_any_type81);
	} else if ((_13017_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_13017_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1a3c82abd_tryFuncMultiRetForward(_1a3c81e52_retTypeChecker* _self_) {
	jule::Ptr<_1a3c8b555_Eval> _13447_eval = _1a3c13c3b_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0));;
	jule::Ptr<_1a3c8982d_Data> _13457_d = _1a3ca97b5_evalExpr(_13447_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13457_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a3cc88e4_Tuple> _13517_tup = _1a3cc019e_Tup((*(_13457_d))._field_Kind.ptr());;
	if ((_13517_tup == nullptr)) {
		return false;;
	};
	if (((*(_13517_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1a91721e9;
	};
	(*(_self_))._field_model=(*(_13457_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a916e46b:;
		if (it != expr_end) {
			jule::I64 _13597_i = it - expr->begin();
			{
				if ((!(_1a3c14753__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &((*(_self_))._field_types[_13597_i]), &((*(_13517_tup))._field_Types[_13597_i]), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1a91721e9;
				};
			}
			_iter_next_1a916e46b:;
			++it;
			_13597_i++;
			goto _iter_begin_1a916e46b;
		}
		_iter_end_1a916e46b:;
	};
	return true;;
	_julec_label_1a91721e9:;
	_1e7be2632_StrBuilder _13667_wanted = static__1e7be28eb_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a917378e:;
		if (it != expr_end) {
			jule::I64 _13677_i = it - expr->begin();
			jule::Ptr<_1a3cbac27_TypeKind> _136710_t = *it;
			{
				_1e7beb262_WriteStr(&_13667_wanted, _1a3cbb0e0_Str(_136710_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13677_i) > 1LL)) {
					_1e7beb262_WriteStr(&_13667_wanted, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1a917378e:;
			++it;
			_13677_i++;
			goto _iter_begin_1a917378e;
		}
		_iter_end_1a917378e:;
	};
	_1e7be2632_StrBuilder _13737_given = static__1e7be28eb_New(32LL);;
	{
		auto expr = &((*(_13517_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a91754a5:;
		if (it != expr_end) {
			jule::I64 _13747_i = it - expr->begin();
			jule::Ptr<_1a3cbac27_TypeKind> _137410_t = *it;
			{
				_1e7beb262_WriteStr(&_13737_given, _1a3cbb0e0_Str(_137410_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13747_i) > 1LL)) {
					_1e7beb262_WriteStr(&_13737_given, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1a91754a5:;
			++it;
			_13747_i++;
			goto _iter_begin_1a91754a5;
		}
		_iter_end_1a91754a5:;
	};
	_1a3c0b78e_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66), jule::Slice<jule::Any>::make({jule::Any(_1e7beba59_Str(&_13667_wanted), &__jule_any_type4),jule::Any(_1e7beba59_Str(&_13737_given), &__jule_any_type4)}));
	return false;;
}



inline jule::Bool _1a3c82e0e_check(_1a3c81e52_retTypeChecker* _self_, jule::Ptr<_1a3b42472_Expr>* _138426_e) {
	_1a3c82381_prepareTypes(_self_);
	_1a3c82639_prepareExprs(_self_, _138426_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1a9178981:;
			{
				if ((!(_1a3b75340_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1a3c0b78e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1a3b74570_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1a91789e7:;
			{
				_1a3c0b78e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1a9178a5d:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1a917d216:;
						{
							if (_1a3c82abd_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1a917d16c:;
				};
				_1a3c0b78e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1a9178ac4:;
			{
				_1a3c0b78e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1a9178b3a:;
			{
				_1a3c0b78e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a917882c:;
	};
	_1a3c82837_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3c81e52_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3c8499e_SelectPackage(_1a3c844b5_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a918188a:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1a918188a:;
			++it;
			goto _iter_begin_1a918188a;
		}
		_iter_end_1a918188a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3c31c26_Var> _1a3c84d9a_FindVar(_1a3c844b5_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1a3c86b7c_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3c85296_FindTypeAlias(_1a3c844b5_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1a3c87133_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1a3b5e03d_Struct> _1a3c85692_FindStruct(_1a3c844b5_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9183c33:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1a9183c33:;
			++it;
			goto _iter_begin_1a9183c33;
		}
		_iter_end_1a9183c33:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b740ec_Fn> _1a3c85a8d_FindFn(_1a3c844b5_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9185273:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1a9185273:;
			++it;
			goto _iter_begin_1a9185273;
		}
		_iter_end_1a9185273:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b87a7d_Trait> _1a3c85dce_FindTrait(_1a3c844b5_SymbolTable* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9186593:;
		if (it != expr_end) {
			jule::Ptr<_1a3b87a7d_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1a9186593:;
			++it;
			goto _iter_begin_1a9186593;
		}
		_iter_end_1a9186593:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b8a289_Enum> _1a3c86220_FindEnum(_1a3c844b5_SymbolTable* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a918753e:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8a289_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1a918753e:;
			++it;
			goto _iter_begin_1a918753e;
		}
		_iter_end_1a918753e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3c86561_FindTypeEnum(_1a3c844b5_SymbolTable* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a918850c:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8b994_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1a918850c:;
			++it;
			goto _iter_begin_1a918850c;
		}
		_iter_end_1a918850c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3c31c26_Var> _1a3c86b7c_findVar(_1a3c844b5_SymbolTable* _self_, jule::Str* _10824_ident, jule::Bool _10836_binded, jule::Bool _10850_reverse) {
	if (_10850_reverse) {
		jule::I64 _1108_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1108_i >= 0LL); (_1108_i)--) {
			{
				jule::Ptr<_1a3c31c26_Var> _1129_v = (*(_self_))._field_Vars[_1108_i];;
				if ((((*(_1129_v))._field_Ident == (*(_10824_ident))) && ((*_1129_v.alloc)._field_Binded == _10836_binded))) {
					return _1129_v;;
				};
			}
		_iter_next_1a918a388:;
		}
		_iter_end_1a918a388:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a918b301:;
			if (it != expr_end) {
				jule::Ptr<_1a3c31c26_Var> _11816_v = *it;
				{
					if ((((*(_11816_v))._field_Ident == (*(_10824_ident))) && ((*_11816_v.alloc)._field_Binded == _10836_binded))) {
						return _11816_v;;
					};
				}
				_iter_next_1a918b301:;
				++it;
				goto _iter_begin_1a918b301;
			}
			_iter_end_1a918b301:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3c87133_findTypeAlias(_1a3c844b5_SymbolTable* _self_, jule::Str* _12730_ident, jule::Bool _12742_binded, jule::Bool _12756_reverse) {
	if (_12756_reverse) {
		jule::I64 _1298_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1298_i >= 0LL); (_1298_i)--) {
			{
				jule::Ptr<_1a3cb9e35_TypeAlias> _1319_ta = (*(_self_))._field_TypeAliases[_1298_i];;
				if ((((*(_1319_ta))._field_Ident == (*(_12730_ident))) && ((*_1319_ta.alloc)._field_Binded == _12742_binded))) {
					return _1319_ta;;
				};
			}
		_iter_next_1a918d6cc:;
		}
		_iter_end_1a918d6cc:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a918e645:;
			if (it != expr_end) {
				jule::Ptr<_1a3cb9e35_TypeAlias> _13716_ta = *it;
				{
					if ((((*(_13716_ta))._field_Ident == (*(_12730_ident))) && ((*_13716_ta.alloc)._field_Binded == _12742_binded))) {
						return _13716_ta;;
					};
				}
				_iter_next_1a918e645:;
				++it;
				goto _iter_begin_1a918e645;
			}
			_iter_end_1a918e645:;
		};
	};
	return nullptr;;
}



inline jule::Any _1a3c8752e_defByIdent(_1a3c844b5_SymbolTable* _self_, jule::Str* _14827_ident, jule::Bool _14839_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9190da5:;
		if (it != expr_end) {
			jule::Ptr<_1a3c31c26_Var> _14915_v = *it;
			{
				if ((((*(_14915_v))._field_Ident == (*(_14827_ident))) && ((*_14915_v.alloc)._field_Binded == _14839_binded))) {
					return jule::Any(_14915_v, &__jule_any_type8);;
				};
			}
			_iter_next_1a9190da5:;
			++it;
			goto _iter_begin_1a9190da5;
		}
		_iter_end_1a9190da5:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9191207:;
		if (it != expr_end) {
			jule::Ptr<_1a3cb9e35_TypeAlias> _15515_ta = *it;
			{
				if ((((*(_15515_ta))._field_Ident == (*(_14827_ident))) && ((*_15515_ta.alloc)._field_Binded == _14839_binded))) {
					return jule::Any(_15515_ta, &__jule_any_type66);;
				};
			}
			_iter_next_1a9191207:;
			++it;
			goto _iter_begin_1a9191207;
		}
		_iter_end_1a9191207:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9192170:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> _16115_s = *it;
			{
				if ((((*(_16115_s))._field_Ident == (*(_14827_ident))) && ((*_16115_s.alloc)._field_Binded == _14839_binded))) {
					return jule::Any(_16115_s, &__jule_any_type65);;
				};
			}
			_iter_next_1a9192170:;
			++it;
			goto _iter_begin_1a9192170;
		}
		_iter_end_1a9192170:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a919313d:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _16715_f = *it;
			{
				if ((((*(_16715_f))._field_Ident == (*(_14827_ident))) && ((*_16715_f.alloc)._field_Binded == _14839_binded))) {
					return jule::Any(_16715_f, &__jule_any_type64);;
				};
			}
			_iter_next_1a919313d:;
			++it;
			goto _iter_begin_1a919313d;
		}
		_iter_end_1a919313d:;
	};
	if (_14839_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9193ea7:;
		if (it != expr_end) {
			jule::Ptr<_1a3b87a7d_Trait> _17715_t = *it;
			{
				if (((*(_17715_t))._field_Ident == (*(_14827_ident)))) {
					return jule::Any(_17715_t, &__jule_any_type10);;
				};
			}
			_iter_next_1a9193ea7:;
			++it;
			goto _iter_begin_1a9193ea7;
		}
		_iter_end_1a9193ea7:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a91956e5:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8a289_Enum> _18315_e = *it;
			{
				if (((*(_18315_e))._field_Ident == (*(_14827_ident)))) {
					return jule::Any(_18315_e, &__jule_any_type67);;
				};
			}
			_iter_next_1a91956e5:;
			++it;
			goto _iter_begin_1a91956e5;
		}
		_iter_end_1a91956e5:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9196372:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8b994_TypeEnum> _18915_te = *it;
			{
				if (((*(_18915_te))._field_Ident == (*(_14827_ident)))) {
					return jule::Any(_18915_te, &__jule_any_type68);;
				};
			}
			_iter_next_1a9196372:;
			++it;
			goto _iter_begin_1a9196372;
		}
		_iter_end_1a9196372:;
	};
	return nullptr;;
}



inline jule::Bool _1a3c879d5_isDuplicatedIdent(_1a3c844b5_SymbolTable* _self_, jule::Uintptr _20129_itself, jule::Str* _20147_ident, jule::Bool _20159_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a91978a1:;
		if (it != expr_end) {
			jule::Ptr<_1a3c31c26_Var> *_20210_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20210_v))) != _20129_itself) && ((*((*(_20210_v))))._field_Ident == (*(_20147_ident)))) && ((*(*(_20210_v)).alloc)._field_Binded == _20159_binded))) {
					return true;;
				};
			}
			_iter_next_1a91978a1:;
			++it;
			goto _iter_begin_1a91978a1;
		}
		_iter_end_1a91978a1:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9197c03:;
		if (it != expr_end) {
			jule::Ptr<_1a3cb9e35_TypeAlias> *_20810_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20810_ta))) != _20129_itself) && ((*((*(_20810_ta))))._field_Ident == (*(_20147_ident)))) && ((*(*(_20810_ta)).alloc)._field_Binded == _20159_binded))) {
					return true;;
				};
			}
			_iter_next_1a9197c03:;
			++it;
			goto _iter_begin_1a9197c03;
		}
		_iter_end_1a9197c03:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9198de1:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> *_21410_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21410_s))) != _20129_itself) && ((*((*(_21410_s))))._field_Ident == (*(_20147_ident)))) && ((*(*(_21410_s)).alloc)._field_Binded == _20159_binded))) {
					return true;;
				};
			}
			_iter_next_1a9198de1:;
			++it;
			goto _iter_begin_1a9198de1;
		}
		_iter_end_1a9198de1:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a919a134:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> *_22010_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22010_f))) != _20129_itself) && ((*((*(_22010_f))))._field_Ident == (*(_20147_ident)))) && ((*(*(_22010_f)).alloc)._field_Binded == _20159_binded))) {
					return true;;
				};
			}
			_iter_next_1a919a134:;
			++it;
			goto _iter_begin_1a919a134;
		}
		_iter_end_1a919a134:;
	};
	if (_20159_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a919b223:;
		if (it != expr_end) {
			jule::Ptr<_1a3b87a7d_Trait> *_23010_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23010_t))) != _20129_itself) && ((*((*(_23010_t))))._field_Ident == (*(_20147_ident))))) {
					return true;;
				};
			}
			_iter_next_1a919b223:;
			++it;
			goto _iter_begin_1a919b223;
		}
		_iter_end_1a919b223:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a919c675:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8a289_Enum> *_23610_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23610_e))) != _20129_itself) && ((*((*(_23610_e))))._field_Ident == (*(_20147_ident))))) {
					return true;;
				};
			}
			_iter_next_1a919c675:;
			++it;
			goto _iter_begin_1a919c675;
		}
		_iter_end_1a919c675:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a919d5bb:;
		if (it != expr_end) {
			jule::Ptr<_1a3b8b994_TypeEnum> *_24210_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24210_te))) != _20129_itself) && ((*((*(_24210_te))))._field_Ident == (*(_20147_ident))))) {
					return true;;
				};
			}
			_iter_next_1a919d5bb:;
			++it;
			goto _iter_begin_1a919d5bb;
		}
		_iter_end_1a919d5bb:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3c844b5_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3c8982d_Data_eq(_1a3c8982d_Data *_self_, _1a3c8982d_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _1a3c89c18_IsNil(_1a3c8982d_Data* _self_) {
	return _1a3cbbd05_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1a3c89e9e_IsVoid(_1a3c8982d_Data* _self_) {
	return _1a3cbc08b_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1a3c8a235_IsConst(_1a3c8982d_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1a3c8a576_GoodOperand(_1a3c8982d_Data* _self_, jule::Ptr<_1a3c8982d_Data>* _10528_other) {
	if ((_1a3cbddb2_TypeEnum((*((*(_10528_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1a3cbd378_Prim((*((*(_10528_other))))._field_Kind) == nullptr) || (!(_1a3cc701e_IsAny(_1a3cbd378_Prim((*((*(_10528_other))))._field_Kind).ptr())))) && (_1a3cbeb82_Trait((*((*(_10528_other))))._field_Kind) == nullptr)) && (!(_1a3cbbd05_IsNil((*(_self_))._field_Kind))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3c8982d_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3c8a9a5_Value_eq(_1a3c8a9a5_Value *_self_, _1a3c8a9a5_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3c8a9a5_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3c8b555_Eval_eq(_1a3c8b555_Eval *_self_, _1a3c8b555_Eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_immutable == _self_->_field_immutable) &&
		(_self_->_field_ignored == _self_->_field_ignored) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		(_self_->_field_arg == _self_->_field_arg);
}

inline void _1a3c8baa5_pushErr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _13623_token, jule::Str _13638_fmt, jule::Slice<jule::Any> _13651_args) {
	_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), _13623_token, _13638_fmt, _13651_args);
}



inline void _1a3c8be18_pushSuggestion(_1a3c8b555_Eval* _self_, jule::Str _14130_fmt, jule::Slice<jule::Any> _14143_args) {
	_1a3c0bb02_pushSuggestion((*(_self_))._field_s.ptr(), _14130_fmt, _14143_args);
}



inline void _1a3c8c116_allowBuiltin(_1a3c8b555_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a3c8c314_disallowBuiltin(_1a3c8b555_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1a3c8c59a_isUnsafe(_1a3c8b555_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1a3c8c831_isGlobal(_1a3c8b555_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3)) {
			_case_begin_1a95a05d3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a95a09ce:;
			{
				return false;;
			}
		}
		_match_end_1a95a0979:;
	};
}



inline jule::Bool _1a3c8cb3e_applyNumericPrefix(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _16839_d) {
	if ((((((*(_16839_d)) == nullptr) || (!(_1a3c8a235_IsConst((*(_16839_d)).ptr())))) || (_1a3cbd378_Prim((*((*(_16839_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a3cc3801_Prim> _1753_prim = _1a3cbd378_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1753_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1b574740b_IsFloat(_1a3cc3b42_Str(_1753_prim.ptr()))) {
			_case_begin_1a95a311e:;
			{
				(*((*(_16839_d))))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>((*((*(_self_))._field_prefix)));
				_1b574b6da_SetF64((*((*(_16839_d))))._field_Constant.ptr(), _1b574a860_AsF64((*((*(_16839_d))))._field_Constant));
				(*(*((*(_16839_d))))._field_Constant.alloc)._field_Kind=(*(_1753_prim))._field_Kind;
			}
		}
		else if (_1b57469e3_IsSigInt(_1a3cc3b42_Str(_1753_prim.ptr()))) {
			_case_begin_1a95a31a7:;
			{
				if ((!(_1a3c707c0_sigAssignable(_1a3cc3b42_Str(_1753_prim.ptr()), _16839_d)))) {
					return false;;
				};
				(*((*(_16839_d))))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>((*((*(_self_))._field_prefix)));
				_1b574ab18_SetI64((*((*(_16839_d))))._field_Constant.ptr(), _1b574a343_AsI64((*((*(_16839_d))))._field_Constant));
				(*(*((*(_16839_d))))._field_Constant.alloc)._field_Kind=(*(_1753_prim))._field_Kind;
			}
		}
		else if (_1b5746d01_IsUnsigInt(_1a3cc3b42_Str(_1753_prim.ptr()))) {
			_case_begin_1a95a321d:;
			{
				if ((!(_1a3c70b88_unsigAssignable(_1a3cc3b42_Str(_1753_prim.ptr()), _16839_d)))) {
					return false;;
				};
				(*((*(_16839_d))))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>((*((*(_self_))._field_prefix)));
				_1b574adc1_SetU64((*((*(_16839_d))))._field_Constant.ptr(), _1b574a5c9_AsU64((*((*(_16839_d))))._field_Constant));
				(*(*((*(_16839_d))))._field_Constant.alloc)._field_Kind=(*(_1753_prim))._field_Kind;
			}
		}
		_match_end_1a95a3042:;
	};
	return true;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c8ce80_litStr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b4340c_LitExpr>* _20319_l) {
	jule::Str _2047_s = jule::Str();;
	if (_1a3b28e4d_IsRawStr((*((*(_20319_l))))._field_Value)) {
		_2047_s=_1a3c6da21_ToRawStr((*((*(_20319_l))))._field_Value);
	} else {
		_2047_s=_1a3c6dd62_ToStr((*((*(_20319_l))))._field_Value);
	};
	jule::Ptr<_1b5747b9d_Const> _2107_constant = static__1b574893a_NewStr(_2047_s);;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34302_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_2107_constant, &__jule_any_type19), ._field_Constant=_2107_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c8d2c1_litRune(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b4340c_LitExpr>* _22020_l) {
	jule::I32 _2213_r = _1a3c6d812_ToRune((*((*(_22020_l))))._field_Value);;
	jule::Ptr<_1a3c8982d_Data> _2227_data = jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Constant=static__1b57480dd_NewI64(static_cast<jule::I64>(_2213_r))});;
	if ((_2213_r <= 255LL)) {
		(*(_2227_data))._field_Kind=_1a3e35cd7_primU8;
	} else {
		(*(_2227_data))._field_Kind=_1a3e35776_primI32;
	};
	(*(_2227_data))._field_Model=jule::Any(jule::new_ptr<_1a3b70637_RuneExprModel>(_1a3b70637_RuneExprModel{._field_Code=_2213_r}), &__jule_any_type83);
	(*_2227_data.alloc)._field_Mutable=true;
	(*_2227_data.alloc)._field_IsRune=true;
	(*_2227_data.alloc)._field_untyped=true;
	return _2227_data;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c8d612_litFloat(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b4340c_LitExpr>* _23921_l) {
	jule::F64 _2403_f = ({
		auto except = _1b572ecb7_ParseFloat((*((*(_23921_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1b5747b9d_Const> _2417_constant = static__1b5748c04_NewF64(_2403_f);;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e36c83_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_2417_constant, &__jule_any_type19), ._field_Constant=_2417_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c8d953_litInt(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b4340c_LitExpr>* _25123_l) {
	;
	jule::Str _2547_lit = (*((*(_25123_l))))._field_Value;;
	jule::I64 _2557_base = 0LL;;
	{
		
		if (_1e7bc8b35_HasPrefix(_2547_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1a9479da3:;
			{
				(_2547_lit).mut_slice(2LL);;
				_2557_base=16LLU;
			}
		}
		else if (_1e7bc8b35_HasPrefix(_2547_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1a9479e91:;
			{
				(_2547_lit).mut_slice(2LL);;
				_2557_base=2LLU;
			}
		}
		else if (_1e7bc8b35_HasPrefix(_2547_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1a9479a73:;
			{
				(_2547_lit).mut_slice(2LL);;
				_2557_base=8LLU;
			}
		}
		else if (((_2547_lit[0LL] == '0') && (_2547_lit.len() > 1LL))) {
			_case_begin_1a9479ad9:;
			{
				(_2547_lit).mut_slice(1LL);;
				_2557_base=8LLU;
			}
		}
		else {
			_case_begin_1a9479a0c:;
			{
				_2557_base=10LLU;
			}
		}
		_match_end_1a9479974:;
	};
	jule::Ptr<_1a3c8982d_Data> _2757_d = jule::new_ptr<_1a3c8982d_Data>();;
	jule::Bool _2777_ok = true;;
	jule::I64 _2783_sig = ({
		auto except = _1b5728497_ParseInt(_2547_lit, _2557_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2777_ok=false;

			0LL;
		});
	});;
	if (_2777_ok) {
		(*_2757_d.alloc)._field_Constant=static__1b57480dd_NewI64(_2783_sig);
		(*_2757_d.alloc)._field_Kind=_1a3e34ed4_primInt;
	} else {
		jule::U64 _2864_unsig = ({
			auto except = _1b5727ee1_ParseUint(_2547_lit, _2557_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1a3c8baa5_pushErr(_self_, (*((*(_25123_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1a3c8be18_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2757_d.alloc)._field_Constant=static__1b57483a7_NewU64(_2864_unsig);
		(*_2757_d.alloc)._field_Kind=_1a3e34b1b_primUint;
	};
	(*_2757_d.alloc)._field_Model=jule::Any((*_2757_d.alloc)._field_Constant, &__jule_any_type19);
	(*_2757_d.alloc)._field_untyped=true;
	if ((!(_1a3c8cb3e_applyNumericPrefix(_self_, &(_2757_d))))) {
		_1a3cb37be_fitBitsize(&(_2757_d));
	};
	return _2757_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c8dc94_litNum(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b4340c_LitExpr>* _30623_l) {
	{
		
		if (_1a3b29aec_IsFloat((*((*(_30623_l))))._field_Value)) {
			_case_begin_1a9481d33:;
			{
				return _1a3c8d612_litFloat(_self_, _30623_l);;
			}
		}
		else {
			_case_begin_1a9481cbc:;
			{
				return _1a3c8d953_litInt(_self_, _30623_l);;
			}
		}
		_match_end_1a9481bbd:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c8e0d5_evalLit(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b4340c_LitExpr> _31523_lit) {
	{
		
		if (_1a3b28bb7_IsStr((*(_31523_lit))._field_Value)) {
			_case_begin_1a9482e99:;
			{
				return _1a3c8ce80_litStr(_self_, &(_31523_lit));;
			}
		}
		else if (_1a3b29217_IsRune((*(_31523_lit))._field_Value)) {
			_case_begin_1a9483043:;
			{
				return _1a3c8d2c1_litRune(_self_, &(_31523_lit));;
			}
		}
		else if (_1a3b29db6_IsNum((*(_31523_lit))._field_Value)) {
			_case_begin_1a94830ba:;
			{
				return _1a3c8dc94_litNum(_self_, &(_31523_lit));;
			}
		}
		else {
			_case_begin_1a948295a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a948286c:;
	};
}



inline jule::Any _1a3c8e426_findBuiltins(_1a3c8b555_Eval* _self_, jule::Str* _32829_ident) {
	if (_1a3c05b40_IsPub((*(_32829_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data1)) {
				_case_begin_1a94852dc:;
				{
					jule::Any _3329_def = _1a3cb358d_findBuiltinsImport(_32829_ident, (*(_self_))._field_lookup.cast_ptr<_1a3bd86d3_ImportInfo>((jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data1));;
					if ((_3329_def != nullptr)) {
						return _3329_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3)) {
				_case_begin_1a9485067:;
				{
					jule::Any _3379_def = _1a3cb42e7_findBuiltinsSema(_32829_ident, (*(_self_))._field_lookup.cast_ptr<_1a3c08b54_Sema>((jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3));;
					if ((_3379_def != nullptr)) {
						return _3379_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)) {
				_case_begin_1a9485353:;
				{
					jule::Any _3429_def = _1a3cb42e7_findBuiltinsSema(_32829_ident, (*((*(_self_))._field_lookup.cast_ptr<_1a3bbdb08_scopeChecker>((jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)))._field_s);;
					if ((_3429_def != nullptr)) {
						return _3429_def;;
					};
				}
			}
			_match_end_1a9485243:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1a3e375be_findBuiltinDef(_32829_ident);;
}



inline jule::Any _1a3c8e822_getDef(_1a3c8b555_Eval* _self_, jule::Str* _35523_ident, jule::Bool _35535_binded) {
	jule::Ptr<_1a3c31c26_Var> _3607_v = ((_1a3cda818_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a3cd8eed_FindVar((*(_self_))._field_lookup.data, (*(_35523_ident)), _35535_binded);;
	if ((_3607_v != nullptr)) {
		return jule::Any(_3607_v, &__jule_any_type8);;
	};
	jule::Ptr<_1a3cb9e35_TypeAlias> _3657_ta = ((_1a3cda818_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a3cd93e9_FindTypeAlias((*(_self_))._field_lookup.data, (*(_35523_ident)), _35535_binded);;
	if ((_3657_ta != nullptr)) {
		return jule::Any(_3657_ta, &__jule_any_type66);;
	};
	if ((!(_35535_binded))) {
		jule::Ptr<_1a3b8a289_Enum> _3718_enm = ((_1a3cda818_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a3cda373_FindEnum((*(_self_))._field_lookup.data, (*(_35523_ident)));;
		if ((_3718_enm != nullptr)) {
			return jule::Any(_3718_enm, &__jule_any_type67);;
		};
		jule::Ptr<_1a3b8b994_TypeEnum> _3768_tenm = ((_1a3cda818_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a3cda6b4_FindTypeEnum((*(_self_))._field_lookup.data, (*(_35523_ident)));;
		if ((_3768_tenm != nullptr)) {
			return jule::Any(_3768_tenm, &__jule_any_type68);;
		};
	};
	jule::Ptr<_1a3b740ec_Fn> _3827_f = ((_1a3cda818_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a3cd9be1_FindFn((*(_self_))._field_lookup.data, (*(_35523_ident)), _35535_binded);;
	if ((_3827_f != nullptr)) {
		return jule::Any(_3827_f, &__jule_any_type64);;
	};
	jule::Ptr<_1a3b5e03d_Struct> _3877_s = ((_1a3cda818_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a3cd97e5_FindStruct((*(_self_))._field_lookup.data, (*(_35523_ident)), _35535_binded);;
	if ((_3877_s != nullptr)) {
		return jule::Any(_3877_s, &__jule_any_type65);;
	};
	return _1a3c8e426_findBuiltins(_self_, _35523_ident);;
}



inline jule::Ptr<_1a3b7a257_ReferenceStack> _1a3c8eaa8_getOwnerRefers(_1a3c8b555_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)) {
			_case_begin_1a948da87:;
			{
				jule::Ptr<_1a3bbdb08_scopeChecker> _3988_sc = _1a3bc2238_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a3bbdb08_scopeChecker>((jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0));;
				return (*((*(_3988_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1a948d0c5:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
			}
		}
		_match_end_1a948d070:;
	};
	return nullptr;;
}



inline void _1a94a11d7_pushReference(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b770cd_FnIns>* _41037_ref) {
	jule::Ptr<_1a3b7a257_ReferenceStack> _4117_refers = _1a3c8eaa8_getOwnerRefers(_self_);;
	if (((_4117_refers != nullptr) && (!(_1a94a354c_Exist(_4117_refers, (*(_41037_ref))))))) {
		_1a3b7b049_Push(_4117_refers, jule::Any((*(_41037_ref)), &__jule_any_type7));
	};
}

inline void _1a94b7165_pushReference(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c31c26_Var>* _41037_ref) {
	jule::Ptr<_1a3b7a257_ReferenceStack> _4117_refers = _1a3c8eaa8_getOwnerRefers(_self_);;
	if (((_4117_refers != nullptr) && (!(_1a94b9453_Exist(_4117_refers, (*(_41037_ref))))))) {
		_1a3b7b049_Push(_4117_refers, jule::Any((*(_41037_ref)), &__jule_any_type8));
	};
}

inline void _1a90bbb8d_pushReference(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b61cbb_StructIns>* _41037_ref) {
	jule::Ptr<_1a3b7a257_ReferenceStack> _4117_refers = _1a3c8eaa8_getOwnerRefers(_self_);;
	if (((_4117_refers != nullptr) && (!(_1a90be036_Exist(_4117_refers, (*(_41037_ref))))))) {
		_1a3b7b049_Push(_4117_refers, jule::Any((*(_41037_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c901a2__evalEnum(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b8a289_Enum> _41725_enm) {
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_41725_enm, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c9059d_evalEnum(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b8a289_Enum> _42628_enm, jule::Ptr<_1a3b27a62_Token> _42640_errorToken) {
	if ((!(_1a3c0beed_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42628_enm))._field_Public, (*_42628_enm.alloc)._field_Token)))) {
		_1a3c8baa5_pushErr(_self_, _42640_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_42628_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1a3c8be18_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a3c901a2__evalEnum(_self_, _42628_enm);;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c908de__evalTypeEnum(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b8b994_TypeEnum> _43529_enm) {
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_43529_enm, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c90cda_evalTypeEnum(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b8b994_TypeEnum> _44432_enm, jule::Ptr<_1a3b27a62_Token> _44448_errorToken) {
	if ((!(_1a3c0beed_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44432_enm))._field_Public, (*_44432_enm.alloc)._field_Token)))) {
		_1a3c8baa5_pushErr(_self_, _44448_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_44432_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1a3c8be18_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a3c908de__evalTypeEnum(_self_, _44432_enm);;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c9112b__evalStruct(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b61cbb_StructIns> _45327_s) {
	jule::Ptr<_1a3c8982d_Data> _4547_d = jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_45327_s, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0)}), ._field_Model=jule::Any(_45327_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_45327_s))._field_Decl != nullptr) && (*(*(_45327_s))._field_Decl.alloc)._field_Binded)) {
		(*((*(_4547_d))._field_Kind))._field_BindIdent=(*(*(_45327_s))._field_Decl.alloc)._field_Ident;
	};
	return _4547_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c91527_evalStruct(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b61cbb_StructIns> _46730_s, jule::Ptr<_1a3b27a62_Token> _46745_errorToken) {
	if ((!(_1a3c0beed_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46730_s))._field_Decl))._field_Public, (*(*(_46730_s))._field_Decl.alloc)._field_Token)))) {
		_1a3c8baa5_pushErr(_self_, _46745_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*(_46730_s))._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
		_1a3c8be18_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a3c91bcb_checkDeprecated(_self_, &((*(*(_46730_s))._field_Decl.alloc)._field_Directives), _46745_errorToken);
	return _1a3c9112b__evalStruct(_self_, _46730_s);;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c91868_evalFnIns(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b770cd_FnIns> _47725_f) {
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_47725_f, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data1)}), ._field_Model=jule::Any(_47725_f, &__jule_any_type7), });;
}



inline void _1a3c91bcb_checkDeprecated(_1a3c8b555_Eval* _self_, jule::Slice<jule::Ptr<_1a3b3c55a_Directive>>* _48636_directives, jule::Ptr<_1a3b27a62_Token> _48667_tok) {
	if (_1a3c8c59a_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1a3b3c55a_Directive> _4913_d = _1a3cb31c5_findDirective(_48636_directives, jule::Str::lit("deprecated", 10));;
	if ((_4913_d != nullptr)) {
		if (((*_4913_d.alloc)._field_Args.len() == 0LL)) {
			_1a3c8baa5_pushErr(_self_, _48667_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1a3c8baa5_pushErr(_self_, _48667_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*_4913_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1a3c8be18_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c920c7_evalFn(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b740ec_Fn> _50226_f, jule::Ptr<_1a3b27a62_Token> _50234_errorToken) {
	if ((!(_1a3c0beed_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50226_f))._field_Public, (*_50226_f.alloc)._field_Token)))) {
		_1a3c8baa5_pushErr(_self_, _50234_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_50226_f.alloc)._field_Ident, &__jule_any_type4)}));
		_1a3c8be18_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a3c91bcb_checkDeprecated(_self_, &((*_50226_f.alloc)._field_Directives), _50234_errorToken);
	jule::Ptr<_1a3b770cd_FnIns> _5117_ins = _1a3b7585c_instance(_50226_f);;
	_1a94a11d7_pushReference(_self_, &(_5117_ins));
	return _1a3c91868_evalFnIns(_self_, _5117_ins);;
}



inline void _1a3c924e5_pushIllegalCycleError(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c31c26_Var>* _51638_v1, jule::Ptr<_1a3c31c26_Var>* _51649_v2, _1e7be2632_StrBuilder* _51664_message) {
	;
	jule::Str _5183_refers_to = _1e7c9543d_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51638_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51649_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5193_buf = _1e7bec50a_Buf(_51664_message);;
	_1e7beb262_WriteStr(_51664_message, _1e7bc876c_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1e7beb262_WriteStr(_51664_message, _5183_refers_to);
	_1e7beb51a_WriteByte(_51664_message, '\n');
	_1e7beaea9_Write(_51664_message, _5193_buf);
}



inline jule::Bool _1a3c928e1_checkCrossCycle(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c31c26_Var>* _52632_v, _1e7be2632_StrBuilder* _52646_message) {
	{
		auto expr = &((*((*(_52632_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94a79b3:;
		if (it != expr_end) {
			jule::Ptr<_1a3c31c26_Var> *_52710_d = it;
			{
				if (((*(_52710_d)) == (*(_self_))._field_owner)) {
					_1a3c924e5_pushIllegalCycleError(_self_, _52632_v, _52710_d, _52646_message);
					return false;;
				};
				if ((!(_1a3c928e1_checkCrossCycle(_self_, _52710_d, _52646_message)))) {
					_1a3c924e5_pushIllegalCycleError(_self_, _52632_v, _52710_d, _52646_message);
					return false;;
				};
			}
			_iter_next_1a94a79b3:;
			++it;
			goto _iter_begin_1a94a79b3;
		}
		_iter_end_1a94a79b3:;
	};
	return true;;
}



inline jule::Bool _1a3c92cdc_checkIllegalCycles(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c31c26_Var>* _54339_v, jule::Ptr<_1a3b27a62_Token> _54348_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54339_v)))) {
		_1a3c8baa5_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1e7be2632_StrBuilder _5567_message = static__1e7be28eb_New(32LL);;
	if ((!(_1a3c928e1_checkCrossCycle(_self_, _54339_v, &(_5567_message))))) {
		jule::Str _5598_errMsg = _1e7beba59_Str(&_5567_message);;
		_1e7bebc57_Clear(&_5567_message);
		_1a3c924e5_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54339_v, &(_5567_message));
		_5598_errMsg+=_1e7beba59_Str(&_5567_message);
		_1a3c8baa5_pushErr(_self_, _54348_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_5598_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1a3c31c26_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54339_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c931d8_evalVar(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c31c26_Var> _57127_v, jule::Ptr<_1a3b27a62_Token> _57136_errorToken) {
	if ((!(_1a3c0beed_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57127_v))._field_Public, (*_57127_v.alloc)._field_Token)))) {
		_1a3c8baa5_pushErr(_self_, _57136_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_57127_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1a3c8be18_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a3c91bcb_checkDeprecated(_self_, &((*_57127_v.alloc)._field_Directives), _57136_errorToken);
	if (((*_57127_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1a94be425;
	};
	(*_57127_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3)) {
			_case_begin_1a94b14d3:;
			{
				jule::Bool _5904_ok = _1a3c92cdc_checkIllegalCycles(_self_, &(_57127_v), _57136_errorToken);;
				if ((!(_5904_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)) {
			_case_begin_1a94b0aed:;
			{
				jule::Ptr<_1a3bbdb08_scopeChecker> _5958_s = (*(_self_))._field_lookup.cast_ptr<_1a3bbdb08_scopeChecker>((jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0);;
				jule::Ptr<_1a3bbdb08_scopeChecker> _5968_root = _1a3bc1ea2_getRoot(_5958_s);;
				if ((((*(_5968_root))._field_captured != nullptr) && _1a3cb82c9_isVarCaptured(_5968_root, _5958_s, _57127_v))) {
					_1a3bc1c1b_pushCaptured(_5968_root, &(_57127_v));
				};
				if (((!((*_57127_v.alloc)._field_Reference)) || _1a3c8c59a_isUnsafe(_self_))) {
					goto _match_end_1a94b145b;
				};
				while ((((*_5958_s.alloc)._field_owner == nullptr) && ((*_5958_s.alloc)._field_parent != nullptr))) {
					{
						_5958_s=(*_5958_s.alloc)._field_parent;
					}
				_iter_next_1a94b488d:;
				}
				_iter_end_1a94b488d:;;
				if (((((*_5958_s.alloc)._field_owner != nullptr) && (*((*_5958_s.alloc)._field_owner))._field_Anon) && ((*_57127_v.alloc)._field_Scope != (*((*_5958_s.alloc)._field_owner))._field_Scope))) {
					_1a3c8baa5_pushErr(_self_, _57136_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*_57127_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1a94b145b:;
	};
	if (((*_57127_v.alloc)._field_Scope == nullptr)) {
		_1a94b7165_pushReference(_self_, &(_57127_v));
	};
	if (((!((*_57127_v.alloc)._field_Binded)) && (((*_57127_v.alloc)._field_Value == nullptr) || ((*((*_57127_v.alloc)._field_Value))._field_Data == nullptr)))) {
		if ((*_57127_v.alloc)._field_Constant) {
			_1a3c2391b_checkVar((*(_self_))._field_s, &(_57127_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3));
			if ((((*_57127_v.alloc)._field_Value == nullptr) || ((*((*_57127_v.alloc)._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*_57127_v.alloc)._field_Kind == nullptr) || ((*((*_57127_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_57127_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1a3c2391b_checkVar((*(_self_))._field_s, &(_57127_v), (*(_self_))._field_lookup);
		if ((((*_57127_v.alloc)._field_Kind == nullptr) || ((*((*_57127_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1a94be425:;
	jule::Ptr<_1a3c8982d_Data> _6467_d = jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=(*((*_57127_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_57127_v.alloc)._field_Mutable, ._field_Reference=(*_57127_v.alloc)._field_Reference, ._field_Lvalue=(!((*_57127_v.alloc)._field_Constant)), ._field_Model=jule::Any(_57127_v, &__jule_any_type8), });;
	if ((((!((*_57127_v.alloc)._field_Binded)) && _1a3c32100_IsInitialized(_57127_v)) && ((*((*_57127_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_6467_d))._field_IsRune=(*((*((*_57127_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_57127_v.alloc)._field_Constant && ((*((*((*_57127_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_6467_d.alloc)._field_Constant=jule::new_ptr<_1b5747b9d_Const>((*(*((*((*(_57127_v))._field_Value))._field_Data))._field_Constant.alloc));
		(*_6467_d.alloc)._field_Model=jule::Any((*_6467_d.alloc)._field_Constant, &__jule_any_type19);
		if (_1a3c3261c_untypedConstant(_57127_v)) {
			_1a3c8cb3e_applyNumericPrefix(_self_, &(_6467_d));
			(*_6467_d.alloc)._field_untyped=true;
		};
	};
	return _6467_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c935d4_evalTypeAlias(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cb9e35_TypeAlias> _67033_ta, jule::Ptr<_1a3b27a62_Token> _67049_errorToken) {
	if ((!(_1a3c0beed_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_67033_ta))._field_Public, (*_67033_ta.alloc)._field_Token)))) {
		_1a3c8baa5_pushErr(_self_, _67049_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_67033_ta.alloc)._field_Ident, &__jule_any_type4)}));
		_1a3c8be18_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_67033_ta.alloc)._field_Used=true;
	jule::Trait _6797_kind = (*((*((*_67033_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1a3c8982d_Data> _68011_d = nullptr;;
	{
		auto &_match_expr{ _6797_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0)) {
			_case_begin_1a94c9ae5:;
			{
				_68011_d=_1a3c9112b__evalStruct(_self_, _6797_kind.cast_ptr<_1a3b61cbb_StructIns>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data3)) {
			_case_begin_1a94c85d8:;
			{
				_68011_d=_1a3c901a2__evalEnum(_self_, _6797_kind.cast_ptr<_1a3b8a289_Enum>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data4)) {
			_case_begin_1a94c864e:;
			{
				_68011_d=_1a3c908de__evalTypeEnum(_self_, _6797_kind.cast_ptr<_1a3b8b994_TypeEnum>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1a94c8572:;
			{
				_68011_d=jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=(*(*((*(_67033_ta))._field_Kind))._field_Kind.alloc)._field_Kind}), ._field_Decl=true, });
				if ((*_67033_ta.alloc)._field_Binded) {
					(*((*(_68011_d))._field_Kind))._field_BindIdent=(*_67033_ta.alloc)._field_Ident;
				} else {
					(*((*(_68011_d))._field_Kind))._field_BindIdent=(*(*((*(_67033_ta))._field_Kind))._field_Kind.alloc)._field_BindIdent;
				};
				(*(_68011_d))._field_Model=jule::Any((*_68011_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		_match_end_1a94c8451:;
	};
	(*((*(_68011_d))._field_Kind))._field_Generic=(*_67033_ta.alloc)._field_Generic;
	return _68011_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c939d0_evalDef(_1a3c8b555_Eval* _self_, jule::Any* _70628_def, jule::Ptr<_1a3b27a62_Token> _70638_ident) {
	{
		auto &_match_expr{ (*(_70628_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a94cdc2b:;
			{
				return _1a3c931d8_evalVar(_self_, (*(_70628_def)).cast_ptr<_1a3c31c26_Var>(&__jule_any_type8), _70638_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a94cda0b:;
			{
				return _1a3c9059d_evalEnum(_self_, (*(_70628_def)).cast_ptr<_1a3b8a289_Enum>(&__jule_any_type67), _70638_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1a94cdc92:;
			{
				return _1a3c90cda_evalTypeEnum(_self_, (*(_70628_def)).cast_ptr<_1a3b8b994_TypeEnum>(&__jule_any_type68), _70638_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a94cdd08:;
			{
				return _1a3c91527_evalStruct(_self_, _1a3b5e4a0_instance((*(_70628_def)).cast_ptr<_1a3b5e03d_Struct>(&__jule_any_type65)), _70638_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a94cdd6e:;
			{
				jule::Ptr<_1a3b740ec_Fn> _7178_f = (*(_70628_def)).cast_ptr<_1a3b740ec_Fn>(&__jule_any_type64);;
				if ((!(*(_7178_f))._field_Ident.equal("init", 4))) {
					return _1a3c920c7_evalFn(_self_, _7178_f, _70638_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a94cdde6:;
			{
				return _1a3c91868_evalFnIns(_self_, (*(_70628_def)).cast_ptr<_1a3b770cd_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a94cde6d:;
			{
				return _1a3c935d4_evalTypeAlias(_self_, (*(_70628_def)).cast_ptr<_1a3cb9e35_TypeAlias>(&__jule_any_type66), _70638_ident);;
			}
		}
		_match_end_1a94cdb3d:;
	};
	_1a3c8baa5_pushErr(_self_, _70638_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_70638_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c93d21_evalIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b43c8c_IdentExpr> _73025_ident) {
	jule::Any _7317_def = _1a3c8e822_getDef(_self_, &((*(_73025_ident))._field_Ident), (*_73025_ident.alloc)._field_Binded);;
	return _1a3c939d0_evalDef(_self_, &(_7317_def), (*_73025_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c94162_evalUnary(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b4452e_UnaryExpr> _73530_u) {
	_1a3ca9c7c_unaryEval _7367_unary = static__1a3caa1bc_new(_self_);;
	return _1a3cab5ec_eval(&_7367_unary, _73530_u);;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c944a3_evalVariadic(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b44908_VariadicExpr> _74033_v) {
	if (((*(_74033_v))._field_Expr == nullptr)) {
		_1a3c8baa5_pushErr(_self_.ptr(), (*_74033_v.alloc)._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3cbac27_TypeKind> _7467_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_7467_prefix;
	});;
	jule::Ptr<_1a3c8982d_Data> _7507_d = _1a3ca97b5_evalExpr(_self_, (*_74033_v.alloc)._field_Expr);;
	if ((_7507_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a3cbd0e2_Variadicable((*(_7507_d))._field_Kind.ptr())))) {
		_1a3c8baa5_pushErr(_self_, (*_74033_v.alloc)._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_7507_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	_1a3cb7d9a_makeVariadic(&(_7507_d), (*(_1a3cbe3ce_Slc((*(_7507_d))._field_Kind)))._field_Elem);
	return _7507_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c947e4_evalUnsafe(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b437d6_UnsafeExpr> _76231_u) {
	jule::Bool _7633_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1a3c8982d_Data> _7657_d = _1a3ca97b5_evalExpr(_self_, (*(_76231_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7633_unsafety;
	return _7657_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c94b35_evalArr(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b489c8_SliceExpr> _77028_s) {
	jule::Ptr<_1a3cca121_Arr> _7727_pt = _1a3cbe148_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1a3cca121_Arr> _7747_arr = jule::new_ptr<_1a3cca121_Arr>(_1a3cca121_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_7727_pt))._field_Elem});;
	jule::Bool _7807_filled = false;;
	if (((*(_77028_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77028_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type76) {
				_case_begin_1a94de2ad:;
				{
					if (((*((*((*(_77028_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1a3b44908_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1a94de214;
					};
					if ((*_7727_pt.alloc)._field_Auto) {
						_1a3c8baa5_pushErr(_self_, (*_77028_s.alloc)._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_7807_filled=true;
					((*(_77028_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1a94de214:;
		};
	};
	(*(_7747_arr))._field_N=(*_77028_s.alloc)._field_Exprs.len();
	if ((!((*_7727_pt.alloc)._field_Auto))) {
		if (((*_7747_arr.alloc)._field_N > (*_7727_pt.alloc)._field_N)) {
			_1a3c8baa5_pushErr(_self_, (*_77028_s.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*_7747_arr.alloc)._field_N < (*_7727_pt.alloc)._field_N)) {
			(*_7747_arr.alloc)._field_N=(*_7727_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1a3b6b5de_ArrayExprModel> _8097_model = jule::new_ptr<_1a3b6b5de_ArrayExprModel>(_1a3b6b5de_ArrayExprModel{._field_Kind=_7747_arr, });;
	if (_7807_filled) {
		(*(_8097_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_8097_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*_77028_s.alloc)._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1a3cbac27_TypeKind> _8187_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_7747_arr.alloc)._field_Elem;
	{
		auto expr = &((*_77028_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94e600c:;
		if (it != expr_end) {
			jule::Ptr<_1a3b42472_Expr> _82015_elem = *it;
			{
				jule::Ptr<_1a3c8982d_Data> _8218_d = _1a3ca97b5_evalExpr(_self_, _82015_elem);;
				if ((_8218_d == nullptr)) {
					goto _iter_next_1a94e600c;
				};
				;
				if (_1a3c18636_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_7747_arr.alloc)._field_Elem), &(_8218_d), &((*(_82015_elem))._field_Token))) {
					_1a3c1429c_checkAssignType((*(_self_))._field_s, false, &((*_7747_arr.alloc)._field_Elem), &(_8218_d), (*_82015_elem.alloc)._field_Token);
				};
				(*(_8097_model))._field_Elems=jule::append((*_8097_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_8218_d))._field_Model}));
			}
			_iter_next_1a94e600c:;
			++it;
			goto _iter_begin_1a94e600c;
		}
		_iter_end_1a94e600c:;
	};
	(*_self_.alloc)._field_prefix=_8187_prefix;
	if (_7807_filled) {
		(*_8097_model.alloc)._field_Elems=jule::append((*_8097_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({nullptr}));
	};
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_7747_arr, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data25)}), ._field_Mutable=true, ._field_Model=jule::Any(_8097_model, &__jule_any_type85), });;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c950db_evalExpSlc(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b489c8_SliceExpr> _84731_s, jule::Ptr<_1a3cbac27_TypeKind> _84750_t, jule::Any _84768_first) {
	jule::Ptr<_1a3cc7d00_Slc> _8487_slc = jule::new_ptr<_1a3cc7d00_Slc>(_1a3cc7d00_Slc{._field_Elem=_84750_t});;
	jule::I64 _8527_i = 0LL;;
	jule::Ptr<_1a3b685ca_SliceExprModel> _8537_model = jule::new_ptr<_1a3b685ca_SliceExprModel>(_1a3b685ca_SliceExprModel{._field_ElemKind=_84750_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84731_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84768_first != nullptr)) {
		(*(_8537_model))._field_Elems=jule::append((*_8537_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({_84768_first}));
		_8527_i=1LL;
	};
	jule::Ptr<_1a3cbac27_TypeKind> _8627_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_8487_slc))._field_Elem;
	{
		auto expr = (*_84731_s.alloc)._field_Exprs.slice(_8527_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a94ee125:;
		if (it != expr_end) {
			jule::Ptr<_1a3b42472_Expr> _86415_elem = *it;
			{
				jule::Ptr<_1a3c8982d_Data> _8658_d = _1a3ca97b5_evalExpr(_self_, _86415_elem);;
				if ((_8658_d != nullptr)) {
					;
					if (_1a3c18636_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_8487_slc.alloc)._field_Elem), &(_8658_d), &((*(_86415_elem))._field_Token))) {
						_1a3c1429c_checkAssignType((*(_self_))._field_s, false, &((*_8487_slc.alloc)._field_Elem), &(_8658_d), (*_86415_elem.alloc)._field_Token);
					};
					(*_8537_model.alloc)._field_Elems=jule::append((*_8537_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*_8658_d.alloc)._field_Model}));
				};
			}
			_iter_next_1a94ee125:;
			++it;
			goto _iter_begin_1a94ee125;
		}
		_iter_end_1a94ee125:;
	};
	(*_self_.alloc)._field_prefix=_8627_prefix;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_8487_slc, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data22)}), ._field_Mutable=true, ._field_Model=jule::Any(_8537_model, &__jule_any_type77), });;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c9542c_evalSliceExpr(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b489c8_SliceExpr> _88534_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1a3cbe148_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1a9664400:;
				{
					return _1a3c94b35_evalArr(_self_, _88534_s);;
				}
			}
			else if ((_1a3cbe3ce_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1a9664499:;
				{
					jule::Ptr<_1a3cc7d00_Slc> _8919_pt = _1a3cbe3ce_Slc((*(_self_))._field_prefix);;
					return _1a3c950db_evalExpSlc(_self_, _88534_s, (*(_8919_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1a9664323:;
		};
	};
	jule::Ptr<_1a3cbac27_TypeKind> _8967_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_88534_s))._field_Exprs.len() == 0LL)) {
		_1a3c8baa5_pushErr(_self_, (*_88534_s.alloc)._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3c8982d_Data> _9047_firstElem = _1a3ca97b5_evalExpr(_self_, (*_88534_s.alloc)._field_Exprs[0LL]);;
	if ((_9047_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1a3c18636_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_9047_firstElem))._field_Kind), &(_9047_firstElem), &((*((*(_88534_s))._field_Exprs[0LL]))._field_Token));
	jule::Ptr<_1a3c8982d_Data> _9147_d = _1a3c950db_evalExpSlc(_self_, _88534_s, (*(_9047_firstElem))._field_Kind, (*(_9047_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_8967_prefix;
	return _9147_d;;
}



inline void _1a3c95790_checkIntegerIndexingByData(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _92047_d, jule::Ptr<_1a3b27a62_Token> _92061_token) {
	jule::Str _9213_errKey = _1a3cb5a57_checkDataForIntegerIndexing(_92047_d, &(_92061_token));;
	{
		auto &_match_expr{ _9213_errKey };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a966c13e:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1a966bd0e:;
			{
				_1a3c8baa5_pushErr(_self_, _92061_token, _9213_errKey, jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_92047_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1a966b979:;
			{
				_1a3c8baa5_pushErr(_self_, _92061_token, _9213_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1a966bc21:;
	};
}



inline void _1a3c95bad_indexingPtr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _93232_d, jule::Ptr<_1a3c8982d_Data>* _93247_index, jule::Ptr<_1a3b49435_IndexingExpr>* _93266_i) {
	_1a3c95790_checkIntegerIndexingByData(_self_, _93247_index, (*((*(_93266_i))))._field_Token);
	(*((*(_93232_d))))._field_Lvalue=true;
	jule::Ptr<_1a3ccaae4_Ptr> _9367_ptr = _1a3cbd895_Ptr((*((*(_93232_d))))._field_Kind.ptr());;
	{
		
		if (_1a3ccb62d_IsUnsafe(_9367_ptr.ptr())) {
			_case_begin_1a966ec02:;
			{
				_1a3c8baa5_pushErr(_self_, (*((*(_93266_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1a3c8c59a_isUnsafe(_self_)))) {
			_case_begin_1a966ec8a:;
			{
				_1a3c8baa5_pushErr(_self_, (*((*(_93266_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a966eb69:;
	};
	(*((*(_93232_d))))._field_Kind=(*(_9367_ptr))._field_Elem;
}



inline void _1a3c960cb_indexingArr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _94832_d, jule::Ptr<_1a3c8982d_Data>* _94847_index, jule::Ptr<_1a3b49435_IndexingExpr>* _94866_i) {
	jule::Ptr<_1a3cca121_Arr> _9497_arr = _1a3cbe148_Arr((*((*(_94832_d))))._field_Kind.ptr());;
	(*((*(_94832_d))))._field_Kind=(*(_9497_arr))._field_Elem;
	_1a3c95790_checkIntegerIndexingByData(_self_, _94847_index, (*((*(_94866_i))))._field_Token);
	(*((*(_94832_d))))._field_Lvalue=true;
	if ((_1a3c8a235_IsConst((*(_94847_index)).ptr()) && (_1b574a860_AsF64((*((*(_94847_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_9497_arr.alloc)._field_N)))) {
		_1a3c8baa5_pushErr(_self_, (*((*(_94866_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1a3c964e9_indexingSlc(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _95832_d, jule::Ptr<_1a3c8982d_Data>* _95847_index, jule::Ptr<_1a3b49435_IndexingExpr>* _95866_i) {
	jule::Ptr<_1a3cc7d00_Slc> _9597_slc = _1a3cbe3ce_Slc((*((*(_95832_d))))._field_Kind.ptr());;
	(*((*(_95832_d))))._field_Kind=(*(_9597_slc))._field_Elem;
	_1a3c95790_checkIntegerIndexingByData(_self_, _95847_index, (*((*(_95866_i))))._field_Token);
	(*((*(_95832_d))))._field_Lvalue=true;
	if ((!(_1a3c8a235_IsConst((*(_95847_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95832_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1a9677028:;
			{
				jule::Ptr<_1a3b685ca_SliceExprModel> _9708_m = (*((*(_95832_d))))._field_Model.unsafe_cast_ptr<_1a3b685ca_SliceExprModel>();;
				jule::F64 _9714_indx = _1b574a860_AsF64((*((*(_95847_index))))._field_Constant.ptr());;
				if ((_9714_indx >= static_cast<jule::F64>((*(_9708_m))._field_Elems.len()))) {
					_1a3c8baa5_pushErr(_self_, (*((*(_95866_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95832_d))))._field_Model=(*(_9708_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_9714_indx))];
					(*((*(_95832_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1a9676eb2:;
	};
}



inline void _1a3c96917_indexingMap(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _98132_d, jule::Ptr<_1a3c8982d_Data>* _98147_index, jule::Ptr<_1a3b49435_IndexingExpr>* _98166_i) {
	(*((*(_98132_d))))._field_Lvalue=true;
	if (((*(_98147_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3cc9494_Map> _9867_m = _1a3cbee18_Map((*((*(_98132_d))))._field_Kind.ptr());;
	_1a3c73295_assignTypeChecker _9877_atc = _1a3c73295_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_9867_m))._field_Key, ._field_d=(*(_98147_index)), ._field_errorToken=(*((*(_98166_i))))._field_Token};;
	_1a3c74263_check(&_9877_atc);
	(*((*(_98132_d))))._field_Kind=(*_9867_m.alloc)._field_Val;
}



inline void _1a3c96d35_indexingStr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _99732_d, jule::Ptr<_1a3c8982d_Data>* _99747_index, jule::Ptr<_1a3b49435_IndexingExpr>* _99766_i) {
	(*((*(_99732_d))))._field_Kind=_1a3e35cd7_primU8;
	(*((*(_99732_d))))._field_Mutable=false;
	(*((*(_99732_d))))._field_Lvalue=true;
	if (((*(_99747_index)) == nullptr)) {
		return;;
	};
	_1a3c95790_checkIntegerIndexingByData(_self_, _99747_index, (*((*(_99766_i))))._field_Token);
	if ((!(_1a3c8a235_IsConst((*(_99747_index)).ptr())))) {
		(*((*(_99732_d))))._field_Constant=nullptr;
		(*((*(_99732_d))))._field_untyped=false;
		return;;
	};
	if (_1a3c8a235_IsConst((*(_99732_d)).ptr())) {
		jule::Ptr<_1a3b27a62_Token> _10154_errorToken = (*((*(_99766_i))))._field_Token;;
		jule::I64 _10164_j = _1b574a343_AsI64((*((*(_99747_index))))._field_Constant.ptr());;
		jule::Str _10174_s = _1b5749d26_ReadStr((*((*(_99732_d))))._field_Constant);;
		if ((static_cast<jule::I64>(_10164_j) >= _10174_s.len())) {
			_1a3c8baa5_pushErr(_self_, _10154_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1b574adc1_SetU64((*((*(_99732_d))))._field_Constant, static_cast<jule::U64>(_10174_s[_10164_j]));
		};
	};
}



inline void _1a3c97253_toIndexing(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _102631_d, jule::Ptr<_1a3c8982d_Data>* _102646_index, jule::Ptr<_1a3b49435_IndexingExpr>* _102665_i) {
	{
		
		if ((_1a3cbd895_Ptr((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a96836d8:;
			{
				_1a3c95bad_indexingPtr(_self_, _102631_d, _102646_index, _102665_i);
				return;;
			}
		}
		else if ((_1a3cbe148_Arr((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9683782:;
			{
				_1a3c960cb_indexingArr(_self_, _102631_d, _102646_index, _102665_i);
				return;;
			}
		}
		else if ((_1a3cbe3ce_Slc((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a96837e8:;
			{
				_1a3c964e9_indexingSlc(_self_, _102631_d, _102646_index, _102665_i);
				return;;
			}
		}
		else if ((_1a3cbee18_Map((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a968385e:;
			{
				_1a3c96917_indexingMap(_self_, _102631_d, _102646_index, _102665_i);
				return;;
			}
		}
		else if ((_1a3cbd378_Prim((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a96838c5:;
			{
				jule::Ptr<_1a3cc3801_Prim> _10414_prim = _1a3cbd378_Prim((*((*(_102631_d))))._field_Kind);;
				{
					
					if (_1a3cc6c88_IsStr(_10414_prim.ptr())) {
						_case_begin_1a9687c2b:;
						{
							_1a3c96d35_indexingStr(_self_, _102631_d, _102646_index, _102665_i);
							return;;
						}
					}
					_match_end_1a9687b82:;
				};
			}
		}
		_match_end_1a9683595:;
	};
	_1a3c8baa5_pushErr(_self_, (*((*(_102665_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_102631_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1a3c97709_pushGenericsFromExprSubIdent(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b45585_SubIdentExpr>* _105150_sexpr, jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>>* _10528_generics, jule::Ptr<_1a3b42472_Expr>* _105236_expr) {
	jule::Ptr<_1a3b3da12_SubIdentTypeDecl> _10537_t = jule::new_ptr<_1a3b3da12_SubIdentTypeDecl>();;
	if ((!(_1a3cb696a_pushSubIdentFromExpr(jule::Any((*(_105150_sexpr)), &__jule_any_type86), &(_10537_t))))) {
		_1a3c8baa5_pushErr(_self_.ptr(), (*((*(_105236_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> &__jule_push_dest = (*(_10528_generics)); __jule_push_dest.push(jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Kind=jule::Any(_10537_t, &__jule_any_type87)})); };
	return true;;
}



inline jule::Bool _1a3c97b05_pushGenericsFromData(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>>* _106242_generics, jule::Ptr<_1a3b42472_Expr>* _106270_expr) {
	{
		auto &_match_expr{ (*((*(_106270_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a968c35c:;
			{
				jule::Ptr<_1a3b4452e_UnaryExpr> _10658_u = (*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1a3b4452e_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_10658_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1a968e2a4:;
						{
							jule::Ptr<_1a3b3eb67_PtrTypeDecl> _10689_kind = jule::new_ptr<_1a3b3eb67_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> _10699__generics = jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>>::alloc(0LL, 1LL);;
							_1a3c97b05_pushGenericsFromData(_self_, &(_10699__generics), &((*(_10658_u))._field_Expr));
							(*_10689_kind.alloc)._field_Elem=_10699__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push(jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Token=(*((*(_106270_expr))))._field_Token, ._field_Kind=jule::Any(_10689_kind, &__jule_any_type71)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1a968e31a:;
						{
							jule::Ptr<_1a3b3e1d8_SptrTypeDecl> _10779_kind = jule::new_ptr<_1a3b3e1d8_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> _10789__generics = jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>>::alloc(0LL, 1LL);;
							_1a3c97b05_pushGenericsFromData(_self_, &(_10789__generics), &((*(_10658_u))._field_Expr));
							(*_10779_kind.alloc)._field_Elem=_10789__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push(jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Token=(*((*(_106270_expr))))._field_Token, ._field_Kind=jule::Any(_10779_kind, &__jule_any_type72)})); };
						}
					}
					else {
						_case_begin_1a968d160:;
						{
							_1a3c8baa5_pushErr(_self_.ptr(), (*(_10658_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1a968d605:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1a968c3c3:;
			{
				{ jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push((*((*(_106270_expr))))._field_Kind.cast_ptr<_1a3b3d13d_TypeDecl>(&__jule_any_type89)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a968b702:;
			{
				jule::Ptr<_1a3b45585_SubIdentExpr> _10928_sexpr = (*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1a3b45585_SubIdentExpr>();;
				return _1a3c97709_pushGenericsFromExprSubIdent(_self_, &(_10928_sexpr), _106242_generics, _106270_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a968b768:;
			{
				jule::Ptr<_1a3b43c8c_IdentExpr> _10958_ident = (*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1a3b43c8c_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push(jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1a3b3d748_IdentTypeDecl>(_1a3b3d748_IdentTypeDecl{._field_Token=(*_10958_ident.alloc)._field_Token, ._field_Ident=(*_10958_ident.alloc)._field_Ident, ._field_Binded=(*(_10958_ident))._field_Binded, }), &__jule_any_type75)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1a968b7ce:;
			{
				{
					auto expr = &((*((*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1a3b43066_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9695893:;
					if (it != expr_end) {
						jule::Ptr<_1a3b42472_Expr> _110416_texpr = *it;
						{
							if ((!(_1a3c97b05_pushGenericsFromData(_self_, _106242_generics, &(_110416_texpr))))) {
								return false;;
							};
						}
						_iter_next_1a9695893:;
						++it;
						goto _iter_begin_1a9695893;
					}
					_iter_end_1a9695893:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1a968b845:;
			{
				jule::Ptr<_1a3b451ab_NsSelectionExpr> _11108_ns = (*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1a3b451ab_NsSelectionExpr>();;
				jule::Ptr<_1a3b3d748_IdentTypeDecl> _11118_decl = jule::new_ptr<_1a3b3d748_IdentTypeDecl>(_1a3b3d748_IdentTypeDecl{._field_Token=(*(_11108_ns))._field_Ident, ._field_Ident=(*((*_11108_ns.alloc)._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push(jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Token=(*(_11118_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a3b3dddb_NamespaceTypeDecl>(_1a3b3dddb_NamespaceTypeDecl{._field_Idents=(*_11108_ns.alloc)._field_Ns, ._field_Kind=jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Token=(*_11118_decl.alloc)._field_Token, ._field_Kind=jule::Any(_11118_decl, &__jule_any_type75)})}), &__jule_any_type91)})); };
			}
		}
		else {
			_case_begin_1a968b68b:;
			{
				_1a3c8baa5_pushErr(_self_.ptr(), (*((*(_106270_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1a968b636:;
	};
	return true;;
}



inline void _1a3c97e68_evalIdentDeclFromIndexing(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3c8982d_Data>* _113247_d, jule::Ptr<_1a3b49435_IndexingExpr>* _113262_i) {
	jule::Ptr<_1a3b61cbb_StructIns> _11337_s = _1a3cbe8eb_Struct((*((*(_113247_d))))._field_Kind.ptr());;
	if ((_11337_s == nullptr)) {
		_1a3c8baa5_pushErr(_self_.ptr(), (*((*((*(_113262_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_113247_d))))._field_Kind), &__jule_any_type4)}));
		(*(_113247_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a3b3d748_IdentTypeDecl> _114011_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_113262_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a969c7ac:;
			{
				jule::Ptr<_1a3b43c8c_IdentExpr> _11438_expr = (*((*((*(_113262_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a3b43c8c_IdentExpr>();;
				_114011_decl=jule::new_ptr<_1a3b3d748_IdentTypeDecl>(_1a3b3d748_IdentTypeDecl{._field_Token=(*_11438_expr.alloc)._field_Token, ._field_Ident=(*_11438_expr.alloc)._field_Ident, ._field_Binded=(*(_11438_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1a969db98:;
			{
				jule::Ptr<_1a3b451ab_NsSelectionExpr> _11508_expr = (*((*((*(_113262_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a3b451ab_NsSelectionExpr>();;
				_114011_decl=jule::new_ptr<_1a3b3d748_IdentTypeDecl>(_1a3b3d748_IdentTypeDecl{._field_Token=(*(_11508_expr))._field_Ident, ._field_Ident=(*((*_11508_expr.alloc)._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1a969cd2e:;
			{
				_1a3c8baa5_pushErr(_self_, (*((*(_113262_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_113247_d))=nullptr;
				return;;
			}
		}
		_match_end_1a969ccc9:;
	};
	if ((!(_1a3c97b05_pushGenericsFromData(_self_, &((*(_114011_decl))._field_Generics), &((*((*(_113262_i))))._field_Index))))) {
		(*(_113247_d))=nullptr;
		return;;
	};
	_11337_s=({ auto _wrap_copy = _1a3c9e964_typeChecker(_self_); _1a3cd1a2e_fromStruct(&_wrap_copy, &(_114011_decl), &((*(_11337_s))._field_Decl)); });
	if ((_11337_s == nullptr)) {
		(*(_113247_d))=nullptr;
		return;;
	};
	(*(*((*(_113247_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_11337_s, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _1a3c9841e_checkGenericFn(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b770cd_FnIns>* _117536_f, jule::Ptr<_1a3b27a62_Token>* _117552_et, jule::Any* _117569_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a3b770cd_FnIns> _11767_old = (*(_117536_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a3c24411_checkGenericFn((*(_self_))._field_s, _117536_f, _117552_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_1a3cb6706_updateModelToGenericIns(_117569_model, _117536_f);
		_1a908783a_updateRefer(_1a3c8eaa8_getOwnerRefers(_self_), &(_11767_old), _117536_f);
	};
	return __jule_func_result;;
}



inline void _1a3c98782_evalFnGenericFromIndexing(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3c8982d_Data>* _119147_d, jule::Ptr<_1a3b49435_IndexingExpr>* _119162_i) {
	jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> _11927_generics = jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1a3c97b05_pushGenericsFromData(_self_, &(_11927_generics), &((*((*(_119162_i))))._field_Index))))) {
		(*(_119147_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a3b770cd_FnIns> _11987_f = _1a3cbe665_Fn((*((*(_119147_d))))._field_Kind.ptr());;
	jule::I64 _11997_genericsLen = 0LL;;
	if (((*(_11987_f))._field_Decl != nullptr)) {
		_11997_genericsLen=(*(*(_11987_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1a3c0ccbd_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _11997_genericsLen, _11927_generics.len(), (*((*((*(_119162_i))))._field_Expr))._field_Token)))) {
		(*(_119147_d))=nullptr;
		return;;
	};
	(*_11987_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1a3cb9341_InsGeneric>>::alloc(0LL, (*(*(_11987_f))._field_Decl.alloc)._field_Generics.len());
	{
		auto expr = &(_11927_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a908da3e:;
		if (it != expr_end) {
			jule::Ptr<_1a3b3d13d_TypeDecl> _121015_g = *it;
			{
				jule::Ptr<_1a3c8982d_Data> _12118_k = _1a3c9eca5_evalType(_self_, _121015_g);;
				if ((_12118_k == nullptr)) {
					(*(_119147_d))=nullptr;
					return;;
				};
				(*_11987_f.alloc)._field_Generics=jule::append((*_11987_f.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a3cb9341_InsGeneric>>::make({jule::new_ptr<_1a3cb9341_InsGeneric>(_1a3cb9341_InsGeneric{._field_Kind=(*(_12118_k))._field_Kind, })}));
			}
			_iter_next_1a908da3e:;
			++it;
			goto _iter_begin_1a908da3e;
		}
		_iter_end_1a908da3e:;
	};
	if (_1a3b78563_IsBuiltin(_11987_f)) {
		return;;
	};
	jule::Bool _12233_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a3c9841e_checkGenericFn(_self_, &(_11987_f), &((*(*((*(_119162_i))))._field_Expr.alloc)._field_Token), &((*((*(_119147_d))))._field_Model));
		_12233_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_12233_ok) {
		(*(*((*(_119147_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_11987_f, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data1);
	} else {
		(*(_119147_d))=nullptr;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c98ac3_evalIndexing(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b49435_IndexingExpr> _123133_i) {
	jule::Ptr<_1a3cbac27_TypeKind> _12327_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12327_prefix;
	});;
	jule::Ptr<_1a3c8982d_Data> _12367_d = _1a3ca89a1_evalExprKind(_self_, (*((*(_123133_i))._field_Expr))._field_Kind);;
	if ((_12367_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_12367_d))._field_Decl) {
		_1a3c97e68_evalIdentDeclFromIndexing(_self_, &(_12367_d), &(_123133_i));
		return _12367_d;;
	};
	if ((_1a3cbe665_Fn((*(_12367_d))._field_Kind.ptr()) != nullptr)) {
		_1a3c98782_evalFnGenericFromIndexing(_self_, &(_12367_d), &(_123133_i));
		return _12367_d;;
	};
	_1a3c8982d_Data _12527_oldData = (*(_12367_d));;
	jule::Ptr<_1a3c8982d_Data> _12547_index = _1a3ca97b5_evalExpr(_self_, (*_123133_i.alloc)._field_Index);;
	if ((_12547_index == nullptr)) {
		return nullptr;;
	};
	(*(_12367_d))._field_Decl=false;
	_1a3c97253_toIndexing(_self_, &(_12367_d), &(_12547_index), &(_123133_i));
	if (_1a3c8a235_IsConst(_12367_d.ptr())) {
		(*(_12367_d))._field_Decl=false;
		(*(_12367_d))._field_Model=jule::Any((*(_12367_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_12367_d))._field_Decl) {
		(*(_12367_d))._field_Decl=false;
	} else {
		(*(_12367_d))._field_Model=jule::Any(jule::new_ptr<_1a3b68a81_IndexingExprModel>(_1a3b68a81_IndexingExprModel{._field_Token=(*_123133_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1a3c8982d_Data>(_12527_oldData), ._field_Index=_12547_index}), &__jule_any_type45);
	};
	return _12367_d;;
}



inline __jule_tuple_x_1a3c8982d_Data__jule_tuple_x_1a3c8982d_Data _1a3c98e14_evalSlicingExprs(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b49a95_SlicingExpr>* _128538_s) {
	__jule_tuple_x_1a3c8982d_Data__jule_tuple_x_1a3c8982d_Data __jule_func_result;
	jule::Ptr<_1a3cbac27_TypeKind> _12867_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12867_prefix;
	});;
	jule::Ptr<_1a3c8982d_Data> _129011_l = nullptr;;
	jule::Ptr<_1a3c8982d_Data> _129111_r = nullptr;;
	if (((*((*(_128538_s))))._field_Start != nullptr)) {
		_129011_l=_1a3ca97b5_evalExpr(_self_, (*((*(_128538_s))))._field_Start);
		if ((_129011_l != nullptr)) {
			_1a3c95790_checkIntegerIndexingByData(_self_, &(_129011_l), (*((*(_128538_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129011_l=jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34ed4_primInt, ._field_Constant=static__1b57480dd_NewI64(0LL)});
		(*((*(_129011_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*_129011_l.alloc)._field_Model=jule::Any((*_129011_l.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_128538_s))))._field_To != nullptr)) {
		_129111_r=_1a3ca97b5_evalExpr(_self_, (*((*(_128538_s))))._field_To);
		if ((_129111_r != nullptr)) {
			_1a3c95790_checkIntegerIndexingByData(_self_, &(_129111_r), (*((*(_128538_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129011_l;
	__jule_func_result.__jule_result_arg1 = _129111_r;
	return __jule_func_result;;
}



inline void _1a3c991bc_slicingArr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _132127_d) {
	jule::Ptr<_1a3cbac27_TypeKind> _13227_elemType = (*(_1a3cbe148_Arr((*((*(_132127_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_132127_d))))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3cc7d00_Slc>(_1a3cc7d00_Slc{._field_Elem=_13227_elemType}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data22)});
	(*((*(_132127_d))))._field_Lvalue=false;
	(*((*(_132127_d))))._field_Mutable=((*((*(_132127_d))))._field_Mutable || (!(_1a3cbc5a8_Mutable(_13227_elemType.ptr()))));
}



inline void _1a3c995da_slicingStr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _133627_d, jule::Ptr<_1a3c8982d_Data>* _133638_l, jule::Ptr<_1a3c8982d_Data>* _133649_r) {
	(*((*(_133627_d))))._field_Lvalue=false;
	(*((*(_133627_d))))._field_Mutable=true;
	if ((!(_1a3c8a235_IsConst((*(_133627_d)).ptr())))) {
		return;;
	};
	if ((((*(_133638_l)) == nullptr) || ((*(_133649_r)) == nullptr))) {
		(*((*(_133627_d))))._field_Constant=nullptr;
		(*((*(_133627_d))))._field_untyped=false;
		return;;
	};
	if ((_1a3c8a235_IsConst((*(_133638_l)).ptr()) && _1a3c8a235_IsConst((*(_133649_r)).ptr()))) {
		jule::I64 _13504_left = _1b574a343_AsI64((*((*(_133638_l))))._field_Constant.ptr());;
		if ((_13504_left < 0LL)) {
			return;;
		};
		jule::Str _13554_s = _1b5749d26_ReadStr((*((*(_133627_d))))._field_Constant);;
		jule::I64 _13568_right = static_cast<jule::I64>(0LL);;
		if (((*(_133649_r)) == nullptr)) {
			_13568_right=static_cast<jule::I64>(_13554_s.len());
		} else {
			_13568_right=_1b574a343_AsI64((*((*(_133649_r))))._field_Constant);
		};
		if ((_13504_left > _13568_right)) {
			return;;
		};
		_1b574b432_SetStr((*((*(_133627_d))))._field_Constant, _13554_s.slice(_13504_left, _13568_right));
		(*((*(_133627_d))))._field_Decl=true;
	} else {
		(*((*(_133627_d))))._field_Constant=nullptr;
		(*((*(_133627_d))))._field_untyped=false;
	};
}



inline void _1a3c99ab3_checkSlicing(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _137433_d, jule::Ptr<_1a3c8982d_Data>* _137444_l, jule::Ptr<_1a3c8982d_Data>* _137455_r, jule::Ptr<_1a3b49a95_SlicingExpr>* _137466_s) {
	{
		
		if ((_1a3cbe148_Arr((*((*(_137433_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a90a8509:;
			{
				_1a3c991bc_slicingArr(_self_, _137433_d);
				return;;
			}
		}
		else if ((_1a3cbe3ce_Slc((*((*(_137433_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a90a85a3:;
			{
				return;;
			}
		}
		else if ((_1a3cbd378_Prim((*((*(_137433_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a90a8619:;
			{
				jule::Ptr<_1a3cc3801_Prim> _13824_prim = _1a3cbd378_Prim((*((*(_137433_d))))._field_Kind);;
				{
					
					if (_1a3cc6c88_IsStr(_13824_prim.ptr())) {
						_case_begin_1a90aad9c:;
						{
							_1a3c995da_slicingStr(_self_, _137433_d, _137444_l, _137455_r);
							return;;
						}
					}
					_match_end_1a90aad03:;
				};
			}
		}
		_match_end_1a90a83d8:;
	};
	_1a3c8baa5_pushErr(_self_, (*((*(_137466_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_137433_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c99e04_evalSlicing(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b49a95_SlicingExpr> _139332_s) {
	jule::Ptr<_1a3c8982d_Data> _13947_d = _1a3ca97b5_evalExpr(_self_, (*(_139332_s))._field_Expr);;
	if ((_13947_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a3c8982d_Data> _13997_l;
	jule::Ptr<_1a3c8982d_Data> _139914_r;
	({
		__jule_tuple_x_1a3c8982d_Data__jule_tuple_x_1a3c8982d_Data __jule_assign_result = _1a3c98e14_evalSlicingExprs(_self_, &(_139332_s));
		_13997_l = __jule_assign_result.__jule_result_arg0;
		_139914_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13997_l == nullptr)) {
		return _13947_d;;
	};
	(*(_13947_d))._field_Decl=false;
	_1a3c99ab3_checkSlicing(_self_, &(_13947_d), &(_13997_l), &(_139914_r), &(_139332_s));
	if (_1a3c8a235_IsConst(_13947_d.ptr())) {
		(*(_13947_d))._field_Decl=false;
		(*(_13947_d))._field_Model=jule::Any((*(_13947_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_13947_d))._field_Decl) {
		(*(_13947_d))._field_Decl=false;
	} else {
		jule::Ptr<_1a3b69e4a_SlicingExprModel> _14178_model = jule::new_ptr<_1a3b69e4a_SlicingExprModel>(_1a3b69e4a_SlicingExprModel{._field_Token=(*_139332_s.alloc)._field_Token, ._field_Expr=(*(_13947_d))._field_Model, ._field_Left=(*(_13997_l))._field_Model, });;
		if ((_139914_r != nullptr)) {
			(*(_14178_model))._field_Right=(*_139914_r.alloc)._field_Model;
		};
		(*(_13947_d))._field_Model=jule::Any(_14178_model, &__jule_any_type92);
	};
	return _13947_d;;
}



inline void _1a3c9a322_castPtr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind> _143027_t, jule::Ptr<_1a3c8982d_Data> _143045_d, jule::Ptr<_1a3b27a62_Token> _143055_errorToken) {
	(*(_143045_d))._field_Constant=nullptr;
	(*_143045_d.alloc)._field_untyped=false;
	jule::Ptr<_1a3cc732c_Sptr> _14333_sptr = _1a3cbd60e_Sptr((*_143045_d.alloc)._field_Kind.ptr());;
	if ((_14333_sptr != nullptr)) {
		if ((!(_1a3cbb431_Equal((*(_1a3cbd895_Ptr(_143027_t.ptr())))._field_Elem, (*_14333_sptr.alloc)._field_Elem)))) {
			_1a3c8baa5_pushErr(_self_, _143055_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_143045_d))._field_Kind), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str(_143027_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1a3c8c59a_isUnsafe(_self_)))) {
		_1a3c8baa5_pushErr(_self_, _143055_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3cc3801_Prim> _14463_prim = _1a3cbd378_Prim((*(_143045_d))._field_Kind);;
	if (((_1a3cbd895_Ptr((*(_143045_d))._field_Kind) == nullptr) && ((_14463_prim == nullptr) || (!(_1b57470ba_IsInt(_1a3cc3b42_Str(_14463_prim.ptr()))))))) {
		_1a3c8baa5_pushErr(_self_, _143055_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_143045_d))._field_Kind), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str(_143027_t), &__jule_any_type4)}));
	};
}



inline void _1a3c9a740_castStruct(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind> _145230_t, jule::Ptr<_1a3c8982d_Data> _145248_d, jule::Ptr<_1a3b27a62_Token> _145258_errorToken) {
	(*(_145248_d))._field_Constant=nullptr;
	(*_145248_d.alloc)._field_untyped=false;
	jule::Ptr<_1a3b87a7d_Trait> _14557_tr = _1a3cbeb82_Trait((*_145248_d.alloc)._field_Kind.ptr());;
	if ((_14557_tr == nullptr)) {
		_1a3c8baa5_pushErr(_self_, _145258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_145248_d))._field_Kind), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str(_145230_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1a3b61cbb_StructIns> _14617_s = _1a3cbe8eb_Struct(_145230_t);;
	_1a90bbb8d_pushReference(_self_, &(_14617_s));
	if ((!(_1a3b6067c_IsImplements((*(_14617_s))._field_Decl.ptr(), _14557_tr)))) {
		_1a3c8baa5_pushErr(_self_, _145258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_145248_d))._field_Kind), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str(_145230_t), &__jule_any_type4)}));
	};
}



inline void _1a3c9ab5d_castRef(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind> _146927_t, jule::Ptr<_1a3c8982d_Data> _146945_d, jule::Ptr<_1a3b27a62_Token> _146955_errorToken) {
	(*(_146945_d))._field_Constant=nullptr;
	(*_146945_d.alloc)._field_untyped=false;
	jule::Ptr<_1a3cc732c_Sptr> _14727_sptr = _1a3cbd60e_Sptr(_146927_t.ptr());;
	jule::Ptr<_1a3ccaae4_Ptr> _14747_ptr = _1a3cbd895_Ptr((*_146945_d.alloc)._field_Kind.ptr());;
	if (((_14747_ptr != nullptr) && _1a3cbb431_Equal((*(_14727_sptr))._field_Elem, (*_14747_ptr.alloc)._field_Elem))) {
		if ((!(_1a3c8c59a_isUnsafe(_self_)))) {
			_1a3c8baa5_pushErr(_self_, _146955_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1a3cbe8eb_Struct((*(_14727_sptr))._field_Elem) != nullptr)) {
		_1a3c9a740_castStruct(_self_, (*_14727_sptr.alloc)._field_Elem, _146945_d, _146955_errorToken);
		return;;
	};
	_1a3c8baa5_pushErr(_self_, _146955_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_146945_d))._field_Kind), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str(_146927_t), &__jule_any_type4)}));
}



inline void _1a3c9b07b_castSlc(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind> _149227_t, jule::Ptr<_1a3c8982d_Data> _149245_d, jule::Ptr<_1a3b27a62_Token> _149255_errorToken) {
	jule::Ptr<_1b5747b9d_Const> _14933_c = (*(_149245_d))._field_Constant;;
	(*_149245_d.alloc)._field_Constant=nullptr;
	(*_149245_d.alloc)._field_untyped=false;
	if ((_1a3cbdb2b_Enum((*_149245_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1a3cbd378_Prim((*((*(_1a3cbdb2b_Enum((*(_149245_d))._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1a3cc6c88_IsStr(_1a3cbd378_Prim((*((*(_1a3cbdb2b_Enum((*(_149245_d))._field_Kind.ptr())))._field_Kind))._field_Kind).ptr()))))) {
			_1a3c8baa5_pushErr(_self_, _149255_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_149245_d))._field_Kind), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str(_149227_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1a3cbd378_Prim((*_149245_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1a3cc6c88_IsStr(_1a3cbd378_Prim((*(_149245_d))._field_Kind).ptr()))))) {
		_1a3c8baa5_pushErr(_self_, _149255_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_149245_d))._field_Kind), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str(_149227_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_149227_t=(*(_1a3cbe3ce_Slc(_149227_t.ptr())))._field_Elem;
	jule::Ptr<_1a3cc3801_Prim> _15083_prim = _1a3cbd378_Prim(_149227_t);;
	if (((_15083_prim == nullptr) || ((!(_1a3cc51e8_IsU8(_15083_prim.ptr()))) && (!(_1a3cc4bcb_IsI32(_15083_prim.ptr())))))) {
		_1a3c8baa5_pushErr(_self_, _149255_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*_149245_d.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str(_149227_t), &__jule_any_type4)}));
		return;;
	};
	if ((_14933_c != nullptr)) {
		{
			
			if (_1a3cc51e8_IsU8(_15083_prim.ptr())) {
				_case_begin_1a66dd757:;
				{
					jule::Str _15185_s = _1b5749d26_ReadStr(_14933_c);;
					jule::Ptr<_1a3b685ca_SliceExprModel> _15199_model = jule::new_ptr<_1a3b685ca_SliceExprModel>(_1a3b685ca_SliceExprModel{._field_ElemKind=_149227_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _15185_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_15185_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a6e35333:;
						if (it != expr_end) {
							jule::U8 *_152312_b = it;
							{
								jule::Ptr<_1b5747b9d_Const> _152410_bc = static__1b57483a7_NewU64(static_cast<jule::U64>((*(_152312_b))));;
								(*(_152410_bc))._field_Kind=(*(_15083_prim))._field_Kind;
								(*(_15199_model))._field_Elems=jule::append((*_15199_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_152410_bc, &__jule_any_type19)}));
							}
							_iter_next_1a6e35333:;
							++it;
							goto _iter_begin_1a6e35333;
						}
						_iter_end_1a6e35333:;
					};
					(*_149245_d.alloc)._field_Model=jule::Any(_15199_model, &__jule_any_type77);
					(*_149245_d.alloc)._field_Decl=true;
				}
			}
			else if (_1a3cc4bcb_IsI32(_15083_prim.ptr())) {
				_case_begin_1a66dd801:;
				{
					jule::Slice<jule::I32> _15315_runes = static_cast<jule::Slice<jule::I32>>(_1b5749d26_ReadStr(_14933_c));;
					jule::Ptr<_1a3b685ca_SliceExprModel> _15329_model = jule::new_ptr<_1a3b685ca_SliceExprModel>(_1a3b685ca_SliceExprModel{._field_ElemKind=_149227_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _15315_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_15315_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a6cbd430:;
						if (it != expr_end) {
							jule::I32 *_153612_r = it;
							{
								jule::Ptr<_1b5747b9d_Const> _153710_rc = static__1b57480dd_NewI64(static_cast<jule::I64>((*(_153612_r))));;
								(*(_153710_rc))._field_Kind=(*(_15083_prim))._field_Kind;
								(*(_15329_model))._field_Elems=jule::append((*_15329_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_153710_rc, &__jule_any_type19)}));
							}
							_iter_next_1a6cbd430:;
							++it;
							goto _iter_begin_1a6cbd430;
						}
						_iter_end_1a6cbd430:;
					};
					(*_149245_d.alloc)._field_Model=jule::Any(_15329_model, &__jule_any_type77);
					(*_149245_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1a66dd67a:;
		};
	};
}



inline void _1a3c9b3de_castStr(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data> _154727_d, jule::Ptr<_1a3b27a62_Token> _154737_errorToken) {
	if ((_1a3cbdb2b_Enum((*(_154727_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a3b8a289_Enum> _15498_e = _1a3cbdb2b_Enum((*(_154727_d))._field_Kind);;
		if (((_1a3cbd378_Prim((*((*(_15498_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1a3cc6c88_IsStr(_1a3cbd378_Prim((*((*(_15498_e))._field_Kind))._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1b5747b9d_Const> _15553_c = (*_154727_d.alloc)._field_Constant;;
	(*_154727_d.alloc)._field_Constant=nullptr;
	(*_154727_d.alloc)._field_untyped=false;
	if ((_1a3cbd378_Prim((*(_154727_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1a3cc3801_Prim> _15594_prim = _1a3cbd378_Prim((*(_154727_d))._field_Kind);;
		if (((!(_1a3cc51e8_IsU8(_15594_prim.ptr()))) && (!(_1a3cc4bcb_IsI32(_15594_prim))))) {
			_1a3c8baa5_pushErr(_self_, _154737_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*(_154727_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
		if ((_15553_c != nullptr)) {
			{
				
				if (_1a3cc51e8_IsU8(_15594_prim)) {
					_case_begin_1a6cc649e:;
					{
						(*_154727_d.alloc)._field_Constant=static__1b574893a_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1b574a5c9_AsU64(_15553_c))));
						(*_154727_d.alloc)._field_Model=jule::Any((*_154727_d.alloc)._field_Constant, &__jule_any_type19);
						(*_154727_d.alloc)._field_Decl=true;
					}
				}
				else if (_1a3cc4bcb_IsI32(_15594_prim)) {
					_case_begin_1a6cc6548:;
					{
						(*_154727_d.alloc)._field_Constant=static__1b574893a_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1b574a343_AsI64(_15553_c))));
						(*_154727_d.alloc)._field_Model=jule::Any((*_154727_d.alloc)._field_Constant, &__jule_any_type19);
						(*_154727_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1a6cc638e:;
			};
		};
		return;;
	};
	jule::Ptr<_1a3cc7d00_Slc> _15807_s = _1a3cbe3ce_Slc((*(_154727_d))._field_Kind);;
	if ((_15807_s == nullptr)) {
		_1a3c8baa5_pushErr(_self_, _154737_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*(_154727_d))._field_Kind), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1a3cbac27_TypeKind> _15867_t = (*(_15807_s))._field_Elem;;
	jule::Ptr<_1a3cc3801_Prim> _15873_prim = _1a3cbd378_Prim(_15867_t.ptr());;
	if (((_15873_prim == nullptr) || ((!(_1a3cc51e8_IsU8(_15873_prim.ptr()))) && (!(_1a3cc4bcb_IsI32(_15873_prim.ptr())))))) {
		_1a3c8baa5_pushErr(_self_, _154737_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*(_154727_d))._field_Kind), &__jule_any_type4)}));
		return;;
	};
}



inline void _1a3c9b80c_castInt(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind> _159427_t, jule::Ptr<_1a3c8982d_Data> _159445_d, jule::Ptr<_1a3b27a62_Token> _159455_errorToken) {
	if (_1a3c8a235_IsConst(_159445_d.ptr())) {
		jule::Ptr<_1a3cc3801_Prim> _15964_prim = _1a3cbd378_Prim(_159427_t.ptr());;
		{
			
			if (_1b57469e3_IsSigInt((*(_15964_prim))._field_Kind)) {
				_case_begin_1a66e6683:;
				{
					_1b574ab18_SetI64((*_159445_d.alloc)._field_Constant.ptr(), _1b574a343_AsI64((*(_159445_d))._field_Constant));
				}
			}
			else if (_1b5746d01_IsUnsigInt((*(_15964_prim))._field_Kind)) {
				_case_begin_1a66e672c:;
				{
					_1b574adc1_SetU64((*_159445_d.alloc)._field_Constant.ptr(), _1b574a5c9_AsU64((*(_159445_d))._field_Constant));
				}
			}
			_match_end_1a66e660b:;
		};
	} else {
		(*(_159445_d))._field_Constant=nullptr;
		(*_159445_d.alloc)._field_untyped=false;
	};
	if ((_1a3cbdb2b_Enum((*(_159445_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a3b8a289_Enum> _16094_e = _1a3cbdb2b_Enum((*(_159445_d))._field_Kind);;
		if (_1b5747692_IsNum(_1a3cbb0e0_Str((*((*(_16094_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1a3cbd60e_Sptr((*(_159445_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1a3cc3801_Prim> _16164_prim = _1a3cbd378_Prim(_159427_t.ptr());;
		if ((!(_1a3cc676b_IsUintptr(_16164_prim.ptr())))) {
			_1a3c8baa5_pushErr(_self_, _159455_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_159445_d))._field_Kind), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str(_159427_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1a3cbd895_Ptr((*(_159445_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1a3cc3801_Prim> _16234_prim = _1a3cbd378_Prim(_159427_t);;
		if (_1a3cc676b_IsUintptr(_16234_prim.ptr())) {
		} else if ((!(_1a3c8c59a_isUnsafe(_self_)))) {
			_1a3c8baa5_pushErr(_self_, _159455_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1a3cc3801_Prim> _16323_prim = _1a3cbd378_Prim((*(_159445_d))._field_Kind);;
	if (((_16323_prim != nullptr) && _1b5747692_IsNum(_1a3cc3b42_Str(_16323_prim)))) {
		return;;
	};
	_1a3c8baa5_pushErr(_self_, _159455_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_159445_d))._field_Kind), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str(_159427_t), &__jule_any_type4)}));
}



inline void _1a3c9bc2a_castNum(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind> _164027_t, jule::Ptr<_1a3c8982d_Data> _164045_d, jule::Ptr<_1a3b27a62_Token> _164055_errorToken) {
	if (_1a3c8a235_IsConst(_164045_d.ptr())) {
		jule::Ptr<_1a3cc3801_Prim> _16424_prim = _1a3cbd378_Prim(_164027_t.ptr());;
		{
			
			if (_1b574740b_IsFloat((*(_16424_prim))._field_Kind)) {
				_case_begin_1a670299c:;
				{
					_1b574b6da_SetF64((*_164045_d.alloc)._field_Constant.ptr(), _1b574a860_AsF64((*(_164045_d))._field_Constant));
				}
			}
			else if (_1b57469e3_IsSigInt((*(_16424_prim))._field_Kind)) {
				_case_begin_1a6702a46:;
				{
					_1b574ab18_SetI64((*_164045_d.alloc)._field_Constant.ptr(), _1b574a343_AsI64((*(_164045_d))._field_Constant));
				}
			}
			else if (_1b5746d01_IsUnsigInt((*(_16424_prim))._field_Kind)) {
				_case_begin_1a6702aac:;
				{
					_1b574adc1_SetU64((*_164045_d.alloc)._field_Constant.ptr(), _1b574a5c9_AsU64((*(_164045_d))._field_Constant));
				}
			}
			_match_end_1a67028d1:;
		};
	} else {
		(*(_164045_d))._field_Constant=nullptr;
		(*_164045_d.alloc)._field_untyped=false;
	};
	if ((_1a3cbdb2b_Enum((*(_164045_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a3b8a289_Enum> _16574_e = _1a3cbdb2b_Enum((*(_164045_d))._field_Kind);;
		if (_1b5747692_IsNum(_1a3cbb0e0_Str((*((*(_16574_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a3cc3801_Prim> _16633_prim = _1a3cbd378_Prim((*(_164045_d))._field_Kind);;
	if (((_16633_prim != nullptr) && _1b5747692_IsNum(_1a3cc3b42_Str(_16633_prim)))) {
		return;;
	};
	_1a3c8baa5_pushErr(_self_, _164055_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_164045_d))._field_Kind), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str(_164027_t.ptr()), &__jule_any_type4)}));
}



inline void _1a3c9c148_castPrim(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind> _167128_t, jule::Ptr<_1a3c8982d_Data> _167146_d, jule::Ptr<_1a3b27a62_Token> _167156_errorToken) {
	jule::Ptr<_1a3cc3801_Prim> _16723_prim = _1a3cbd378_Prim(_167128_t.ptr());;
	{
		
		if (_1a3cc701e_IsAny(_16723_prim.ptr())) {
			_case_begin_1a670ae5b:;
			{
				(*(_167146_d))._field_Constant=nullptr;
				(*_167146_d.alloc)._field_untyped=false;
			}
		}
		else if (_1a3cc6c88_IsStr(_16723_prim.ptr())) {
			_case_begin_1a670ab1a:;
			{
				_1a3c9b3de_castStr(_self_, _167146_d, _167156_errorToken);
			}
		}
		else if (_1b57470ba_IsInt(_1a3cc3b42_Str(_16723_prim.ptr()))) {
			_case_begin_1a670ab81:;
			{
				_1a3c9b80c_castInt(_self_, _167128_t, _167146_d, _167156_errorToken);
			}
		}
		else if (_1b5747692_IsNum(_1a3cc3b42_Str(_16723_prim.ptr()))) {
			_case_begin_1a670abe7:;
			{
				_1a3c9bc2a_castNum(_self_, _167128_t, _167146_d, _167156_errorToken);
			}
		}
		else {
			_case_begin_1a670aaa4:;
			{
				_1a3c8baa5_pushErr(_self_, _167156_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str(_167128_t), &__jule_any_type4)}));
			}
		}
		_match_end_1a670aa3d:;
	};
}



inline void _1a3c9c4ab_castConstant(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _168933_t, jule::Ptr<_1a3c8982d_Data>* _168952_d) {
	if ((((*(_168952_d)) == nullptr) || (!(_1a3c8a235_IsConst((*(_168952_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1a3cc3801_Prim> _16933_prim = _1a3cbd378_Prim((*(_168933_t)).ptr());;
	_1a3cb61d9_castConstByType(&((*(_16933_prim))._field_Kind), _168952_d);
	(*((*(_168952_d))))._field_Model=jule::Any((*((*(_168952_d))))._field_Constant, &__jule_any_type19);
}



inline void _1a3c9c8c9_castTypeEnum(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _169833_t, jule::Ptr<_1a3c8982d_Data>* _169852_d, jule::Ptr<_1a3b27a62_Token>* _169867_errorToken) {
	jule::I64 _16993_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a3c14c09_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_169852_d))))._field_Kind), _169833_t, _169867_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _16993_n);;
		_1a3c8baa5_pushErr(_self_, (*(_169867_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_169852_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*(_169833_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_169852_d))))._field_Constant=nullptr;
	(*((*(_169852_d))))._field_untyped=false;
}



inline void _1a3c9cce7_castTypeEnumT(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _170834_t, jule::Ptr<_1a3c8982d_Data>* _170853_d, jule::Ptr<_1a3b27a62_Token>* _170868_errorToken) {
	jule::I64 _17093_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a3c14c09_checkTypeCompatibility((*(_self_))._field_s, _170834_t, &((*((*(_170853_d))))._field_Kind), _170868_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17093_n);;
		_1a3c8baa5_pushErr(_self_, (*(_170868_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_170853_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*(_170834_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_170853_d))))._field_Constant=nullptr;
	(*((*(_170853_d))))._field_untyped=false;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c9d29d_evalCastByTypeNData(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3cbac27_TypeKind> _171839_t, jule::Ptr<_1a3c8982d_Data> _171857_d, jule::Ptr<_1a3b27a62_Token> _171871_errorToken) {
	if (((_171857_d != nullptr) && (*_171857_d.alloc)._field_Decl)) {
		_1a3c8baa5_pushErr(_self_, _171871_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1a3c89c18_IsNil(_171857_d)) {
			_case_begin_1a96ab36a:;
			{
				if ((!(_1a3cbcac5_NilCompatible(_171839_t.ptr())))) {
					_1a3c8baa5_pushErr(_self_, _171871_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str(_171839_t), &__jule_any_type4)}));
				};
				(*_171857_d.alloc)._field_Constant=nullptr;
				(*_171857_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1a3cbd378_Prim((*_171857_d.alloc)._field_Kind.ptr()) != nullptr) && _1a3cc701e_IsAny(_1a3cbd378_Prim((*(_171857_d))._field_Kind).ptr()))) {
			_case_begin_1a96ab106:;
			{
				if ((_1a3cbdb2b_Enum(_171839_t.ptr()) != nullptr)) {
					_1a3c8baa5_pushErr(_self_, _171871_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1a3c8be18_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1a3cbddb2_TypeEnum(_171839_t.ptr()) != nullptr)) {
					_1a3c8baa5_pushErr(_self_, _171871_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*_171857_d.alloc)._field_Constant=nullptr;
				(*_171857_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1a3cbddb2_TypeEnum((*_171857_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a96ab16c:;
			{
				_1a3c9c8c9_castTypeEnum(_self_, &(_171839_t), &(_171857_d), &(_171871_errorToken));
			}
		}
		else if ((_1a3cbddb2_TypeEnum(_171839_t.ptr()) != nullptr)) {
			_case_begin_1a96ab1d3:;
			{
				_1a3c9cce7_castTypeEnumT(_self_, &(_171839_t), &(_171857_d), &(_171871_errorToken));
			}
		}
		else if ((_1a3cbd895_Ptr(_171839_t.ptr()) != nullptr)) {
			_case_begin_1a96ab249:;
			{
				_1a3c9a322_castPtr(_self_, _171839_t, _171857_d, _171871_errorToken);
			}
		}
		else if ((_1a3cbd60e_Sptr(_171839_t.ptr()) != nullptr)) {
			_case_begin_1a96abe09:;
			{
				_1a3c9ab5d_castRef(_self_, _171839_t, _171857_d, _171871_errorToken);
			}
		}
		else if ((_1a3cbe3ce_Slc(_171839_t.ptr()) != nullptr)) {
			_case_begin_1a96abe70:;
			{
				_1a3c9b07b_castSlc(_self_, _171839_t, _171857_d, _171871_errorToken);
			}
		}
		else if ((_1a3cbe8eb_Struct(_171839_t.ptr()) != nullptr)) {
			_case_begin_1a96abed6:;
			{
				_1a3c9a740_castStruct(_self_, _171839_t, _171857_d, _171871_errorToken);
			}
		}
		else if ((_1a3cbd378_Prim(_171839_t.ptr()) != nullptr)) {
			_case_begin_1a96ac04c:;
			{
				_1a3c9c148_castPrim(_self_, _171839_t, _171857_d, _171871_errorToken);
				_1a3c9c4ab_castConstant(_self_, &(_171839_t), &(_171857_d));
			}
		}
		else {
			_case_begin_1a96aaed5:;
			{
				_1a3c8baa5_pushErr(_self_, _171871_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str(_171839_t.ptr()), &__jule_any_type4)}));
				_171857_d=nullptr;
			}
		}
		_match_end_1a96aae3b:;
	};
	if ((_171857_d == nullptr)) {
		return nullptr;;
	};
	(*_171857_d.alloc)._field_Mutable=((*_171857_d.alloc)._field_Mutable || (!(_1a3cbc5a8_Mutable((*_171857_d.alloc)._field_Kind.ptr()))));
	if (((!((*_171857_d.alloc)._field_Decl)) && ((_1a3cbdb2b_Enum((*(_171857_d))._field_Kind) == nullptr) || (!(_1a3cbb431_Equal((*((*(_1a3cbdb2b_Enum((*(_171857_d))._field_Kind)))._field_Kind))._field_Kind, _171839_t)))))) {
		_1a3cb54c4_applyCastKind(&(_171857_d), &(_171839_t), &(_171871_errorToken));
		(*((*_171857_d.alloc)._field_Model.cast_ptr<_1a3b6784e_CastingExprModel>(&__jule_any_type93)))._field_Token=_171871_errorToken;
	} else {
		(*_171857_d.alloc)._field_Kind=_171839_t;
	};
	(*_171857_d.alloc)._field_Decl=false;
	(*_171857_d.alloc)._field_Lvalue=false;
	(*_171857_d.alloc)._field_untyped=false;
	if (_1a3c8a235_IsConst(_171857_d)) {
		(*((*_171857_d.alloc)._field_Constant))._field_Kind=(*(_1a3cbd378_Prim(_171839_t.ptr())))._field_Kind;
	};
	return _171857_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c9d754_evalCastT(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3cbac27_TypeKind>* _179131_t, jule::Ptr<_1a3b42472_Expr>* _179150_e, jule::Ptr<_1a3b27a62_Token>* _179165_et) {
	jule::Ptr<_1a3cbac27_TypeKind> _17927_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_17927_prefix;
	});;
	if ((_1a3cbe3ce_Slc((*(_179131_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_179150_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type94) {
				_case_begin_1a96bc1c2:;
				{
					(*_self_.alloc)._field_prefix=(*(_179131_t));
				}
			}
			_match_end_1a96bc15b:;
		};
	};
	jule::Ptr<_1a3c8982d_Data> _18017_d = _1a3ca97b5_evalExpr(_self_, (*(_179150_e)));;
	if (((_18017_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18017_d;;
	};
	return _1a3c9d29d_evalCastByTypeNData(_self_, (*(_179131_t)), _18017_d, (*(_179165_et)));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c9da95_evalCast(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b44cd2_CastExpr> _180829_c) {
	jule::Ptr<_1a3cc2de9_TypeSymbol> _18097_t = _1a3b7bad8_buildType((*(_180829_c))._field_Kind);;
	jule::Bool _18103_ok = _1a3c12410_checkType((*(_self_))._field_s, &(_18097_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18103_ok))) {
		return nullptr;;
	};
	return _1a3c9d754_evalCastT(_self_, &((*(_18097_t))._field_Kind), &((*_180829_c.alloc)._field_Expr), &((*((*_180829_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c9ddd6_evalNsSelection(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b451ab_NsSelectionExpr> _181731_s) {
	jule::Str _18183_path = _1a3cd776b_buildLinkPathByTokens(&((*(_181731_s))._field_Ns));;
	jule::Ptr<_1a3bd86d3_ImportInfo> _18197_imp = ((_1a3cda818_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a3cd8b02_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>>((void*)__jule_anon_1a96c2815, jule::Ptr<__jule_anon_1a96c2815_ctx>::make(__jule_anon_1a96c2815_ctx{._181731_s=_181731_s,._18183_path=_18183_path}).as<jule::Uintptr>(), __jule_anon_1a96c2815_ctx_handler));;
	if ((_18197_imp == nullptr)) {
		_1a3c8baa5_pushErr(_self_, (*(_181731_s))._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18183_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait _18317_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_18197_imp, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data1);
	;
	_1a3c8c314_disallowBuiltin(_self_);
	jule::Any _18367_def = _1a3c8e822_getDef(_self_, &((*((*_181731_s.alloc)._field_Ident))._field_Kind), false);;
	_1a3c8c116_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_18317_lookup;
	jule::Ptr<_1a3c8982d_Data> _18397_d = _1a3c939d0_evalDef(_self_, &(_18367_def), (*_181731_s.alloc)._field_Ident);;
	return _18397_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c9e38c_evalStructLitExplicit(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b61cbb_StructIns> _184342_s, jule::Slice<jule::Ptr<_1a3b42472_Expr>> _18447_exprs, jule::Ptr<_1a3b27a62_Token> _184427_errorToken) {
	jule::Bool _18453_ok = _1a3c0ccbd_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_184342_s))._field_Decl))._field_Generics.len(), (*_184342_s.alloc)._field_Generics.len(), _184427_errorToken);;
	if ((!(_18453_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_184342_s.alloc)._field_Decl))) {
		_1a3c8baa5_pushErr(_self_, _184427_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(*(_184342_s))._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
	};
	_1a90bbb8d_pushReference(_self_, &(_184342_s));
	_1a3c91bcb_checkDeprecated(_self_, &((*(*(_184342_s))._field_Decl.alloc)._field_Directives), _184427_errorToken);
	_1a3c7c90e_structLitChecker _18587_slc = _1a3c7c90e_structLitChecker{._field_e=_self_, ._field_errorToken=_184427_errorToken, ._field_s=_184342_s, };;
	_1a3c7e14c_check(&_18587_slc, &(_18447_exprs));
	jule::Ptr<_1a3c8982d_Data> _18657_d = jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_184342_s, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1a3b66ebe_StructLitExprModel>(_1a3b66ebe_StructLitExprModel{._field_Strct=_184342_s, ._field_Args=_18587_slc._field_args}), &__jule_any_type95), });;
	if ((*(*(_184342_s))._field_Decl.alloc)._field_Binded) {
		(*((*(_18657_d))._field_Kind))._field_BindIdent=(*(*(_184342_s))._field_Decl.alloc)._field_Ident;
	};
	return _18657_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c9e6cd_evalStructLit(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b474bb_StructLit> _188134_lit) {
	jule::Ptr<_1a3cc2de9_TypeSymbol> _18827_t = _1a3b7bad8_buildType((*(_188134_lit))._field_Kind);;
	jule::Bool _18833_ok = _1a3c12410_checkType((*(_self_))._field_s, &(_18827_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18833_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a3b61cbb_StructIns> _18887_s = _1a3cbe8eb_Struct((*(_18827_t))._field_Kind.ptr());;
	if ((_18887_s == nullptr)) {
		if ((_1a3cbd60e_Sptr((*(_18827_t))._field_Kind) != nullptr)) {
			_18887_s=_1a3cbe8eb_Struct((*(_1a3cbd60e_Sptr((*(_18827_t))._field_Kind)))._field_Elem.ptr());
			if ((_18887_s != nullptr)) {
				goto _julec_label_1a96d36a0;
			};
		};
		_1a3c8baa5_pushErr(_self_, (*((*_188134_lit.alloc)._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1a96d36a0:;
	jule::Ptr<_1a3c8982d_Data> _19017_d = _1a3c9e38c_evalStructLitExplicit(_self_, _18887_s, (*_188134_lit.alloc)._field_Exprs, (*(*(_188134_lit))._field_Kind.alloc)._field_Token);;
	if ((_1a3cbd60e_Sptr((*(_18827_t))._field_Kind) != nullptr)) {
		jule::Ptr<_1a3b66ebe_StructLitExprModel> _19038_model = (*(_19017_d))._field_Model.cast_ptr<_1a3b66ebe_StructLitExprModel>(&__jule_any_type95);;
		_1a3cb3aee_makeStructLitAlloc(&(_19017_d), &(_19038_model));
	};
	return _19017_d;;
}



inline _1a3cccad5_typeChecker _1a3c9e964_typeChecker(_1a3c8b555_Eval* _self_) {
	return _1a3c111ab_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3c9eca5_evalType(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b3d13d_TypeDecl> _191328_t) {
	jule::Ptr<_1a3cc2de9_TypeSymbol> _19147_tk = _1a3b7bad8_buildType(_191328_t);;
	jule::Bool _19153_ok = _1a3c12410_checkType((*(_self_))._field_s, &(_19147_tk), (*(_self_))._field_lookup);;
	if ((!(_19153_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=(*(_19147_tk))._field_Kind, ._field_Model=jule::Any((*_19147_tk.alloc)._field_Kind, &__jule_any_type84), ._field_Decl=true, });;
}



inline void _1a3ca0118_callTypeFn(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b4619b_FnCallExpr>* _192632_fc, jule::Ptr<_1a3c8982d_Data>* _192654_d) {
	if (((*((*(_192632_fc))))._field_Args.len() < 1LL)) {
		_1a3c8baa5_pushErr(_self_.ptr(), (*((*(_192632_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_192632_fc))))._field_Args.len() > 1LL)) {
		_1a3c8baa5_pushErr(_self_.ptr(), (*((*((*(_192632_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_192654_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_192632_fc))))._field_IsCo) {
		_1a3c8baa5_pushErr(_self_.ptr(), (*((*(_192632_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_192654_d))=nullptr;
		return;;
	} else if (((*((*(_192632_fc))))._field_Exception != nullptr)) {
		_1a3c8baa5_pushErr(_self_.ptr(), (*((*(_192632_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_192654_d))=nullptr;
		return;;
	};
	if (((*((*(_192632_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1a3b42472_Expr> _19428_arg = (*((*(_192632_fc))))._field_Args[0LL];;
		(*(_192654_d))=_1a3c9d754_evalCastT(_self_, &((*((*(_192654_d))))._field_Kind), &(_19428_arg), &((*(_19428_arg))._field_Token));
		return;;
	};
	if (((*(_192654_d)) != nullptr)) {
		(*((*(_192654_d))))._field_Decl=false;
	};
}



inline void _1a3ca047b_callBuiltinFn(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b4619b_FnCallExpr>* _195235_fc, jule::Ptr<_1a3c8982d_Data>* _195257_d) {
	if ((!(_1a3b46520_Unhandled((*(_195235_fc)).ptr())))) {
		_1a3c8baa5_pushErr(_self_.ptr(), (*((*(_195235_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_195257_d))=(*(_1a3cbe665_Fn((*((*(_195257_d))))._field_Kind.ptr())))._field_caller(&(_self_), _195235_fc, _195257_d);
	if (((*(_195257_d)) == nullptr)) {
		return;;
	};
	(*((*(_195257_d))))._field_Mutable=true;
}



inline void _1a3ca07de_checkFnOfConcurrentCall(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b770cd_FnIns>* _196440_f, jule::Ptr<_1a3b27a62_Token> _196451_errorToken) {
	if (_1a3c8c59a_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_196440_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96e3539:;
		if (it != expr_end) {
			jule::Ptr<_1a3b76055_ParamIns> *_196810_p = it;
			{
				if (_1a3b72c44_IsSelf((*((*(_196810_p))))._field_Decl.ptr())) {
					if ((!(_1a3b72eca_IsRef((*((*(_196810_p))))._field_Decl)))) {
						_1a3c8baa5_pushErr(_self_, _196451_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1a3c8be18_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(*((*(_196810_p))))._field_Decl.alloc)._field_Reference) {
					_1a3c8baa5_pushErr(_self_, _196451_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1a3c8be18_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1a96e3539:;
			++it;
			goto _iter_begin_1a96e3539;
		}
		_iter_end_1a96e3539:;
	};
}



inline void _1a3ca0c0c_processExceptionalHandler(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b770cd_FnIns>* _198346_f, jule::Ptr<_1a3b4619b_FnCallExpr>* _198362_fc, jule::Ptr<_1a3c8982d_Data>* _198384_d) {
	jule::Bool _19843_resultNeeded = ((!(_1a3b74570_IsVoid((*((*(_198346_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1a3bbdb08_scopeChecker> _198511_csc = nullptr;;
	jule::Ptr<_1a3bb664a_Scope> _198611_ch = nullptr;;
	jule::Ptr<_1a3b68201_FnCallExprModel> _19887_model = (*((*(_198384_d))))._field_Model.cast_ptr<_1a3b68201_FnCallExprModel>(&__jule_any_type33);;
	jule::Ptr<_1a3bbdb08_scopeChecker> _19927_sc = (*(_self_))._field_lookup.cast_ptr<_1a3bbdb08_scopeChecker>((jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0);;
	_198511_csc=_1a3bd0b92_newChildChecker(_19927_sc);
	if (_19843_resultNeeded) {
		(*(_198511_csc))._field_result=(*(_198346_f));
	};
	_198611_ch=_1a3bc3ee8_getChild(_19927_sc);
	(*((*((*(_198362_fc))))._field_Exception))._field_Parent=(*_19927_sc.alloc)._field_tree;
	(*((*_198511_csc.alloc)._field_table))._field_Vars=jule::append((*(*(_198511_csc))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a3c31c26_Var>>::make({_1a3cb3e73_buildErrorVar(&(_198611_ch), _198362_fc)}));
	_1a3bc4416_checkChildSsc(_19927_sc, &((*((*(_198362_fc))))._field_Exception), &(_198611_ch), &(_198511_csc));
	(*(_19887_model))._field_Assigned=_19843_resultNeeded;
	(*_19887_model.alloc)._field_Except=_198611_ch;
	if ((_19843_resultNeeded && ((*_198511_csc.alloc)._field_result != nullptr))) {
		_1a3c8baa5_pushErr(_self_, (*((*(_198362_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1a3ca1070_callFn(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b4619b_FnCallExpr>* _201028_fc, jule::Ptr<_1a3c8982d_Data>* _201050_d) {
	jule::Ptr<_1a3b770cd_FnIns> _20117_f = _1a3cbe665_Fn((*((*(_201050_d))))._field_Kind.ptr());;
	if (_1a3b78563_IsBuiltin(_20117_f.ptr())) {
		_1a3ca047b_callBuiltinFn(_self_, _201028_fc, _201050_d);
		return;;
	};
	if ((_1a3c8c831_isGlobal(_self_) && (*((*_20117_f.alloc)._field_Decl))._field_Exceptional)) {
		_1a3c8baa5_pushErr(_self_, (*((*(_201028_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1a3c8be18_pushSuggestion(_self_, jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_201050_d))=nullptr;
		return;;
	};
	if (((!(_1a3b74806_IsMethod((*(_20117_f))._field_Decl))) && _1a3cd6847_hasDirective(&((*(*(_20117_f))._field_Decl.alloc)._field_Directives), jule::Str::lit("test", 4)))) {
		_1a3c8baa5_pushErr(_self_, (*((*(_201028_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_201050_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_201050_d))))._field_Mutable)) && _1a3b74806_IsMethod((*(_20117_f))._field_Decl)) && (!((*(*(_20117_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_20117_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1a3c8baa5_pushErr(_self_, (*((*(_201028_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1a3b66ebe_StructLitExprModel> _20375_lit = _1a3cb742c_isLitBased(&((*((*(_201050_d))))._field_Model));;
			if ((_20375_lit == nullptr)) {
				_1a3c8baa5_pushErr(_self_, (*((*(_201028_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1a3c7c425_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_20375_lit));
			};
		};
	} else if (((!(_1a3c8c59a_isUnsafe(_self_))) && (*(*(_20117_f))._field_Decl.alloc)._field_Unsafety)) {
		_1a3c8baa5_pushErr(_self_, (*((*(_201028_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _20497_dynamicAnnotation = ((((*(*(_20117_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_20117_f.alloc)._field_Generics.len() == 0LL)) && ((*_20117_f.alloc)._field_Params.len() > 0LL));;
	if (_20497_dynamicAnnotation) {
		(*_20117_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1a3cb9341_InsGeneric>>::alloc((*(*(_20117_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_20117_f))._field_Decl.alloc)._field_Generics.len());
	} else if (((*_20117_f.alloc)._field_Generics.len() != (*(*(_20117_f))._field_Decl.alloc)._field_Generics.len())) {
		_1a3c0ccbd_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*(_20117_f))._field_Decl.alloc)._field_Generics.len(), (*_20117_f.alloc)._field_Generics.len(), (*((*(_201028_fc))))._field_Token);
		(*(_201050_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a3c08b54_Sema> _20587_old = (*_self_.alloc)._field_s;;
	if (((*(*(_20117_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_20117_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_20587_old != (*_self_.alloc)._field_s)) {
			(*(_20587_old))._field_errors=jule::append((*_20587_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_20587_old;
	});;
	_1a3c799c7_fnCallArgChecker _20717_fcac = _1a3c799c7_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_201028_fc))))._field_Args, ._field_errorToken=(*((*(_201028_fc))))._field_Token, ._field_dynamicAnnotation=_20497_dynamicAnnotation, };;
	if ((!(_20497_dynamicAnnotation))) {
		if ((!((*_20117_f.alloc)._field_reloaded))) {
			jule::Bool _20805_ok = _1a3c17723_reloadFnInsTypes((*(_self_))._field_s, _20117_f);;
			(*_20117_f.alloc)._field_reloaded=true;
			if ((!(_20805_ok))) {
				(*(_201050_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1a3b770cd_FnIns> _20878_existInstance = _1a3b75b6a_appendInstance((*(_20117_f))._field_Decl, &(_20117_f));;
		if ((_20878_existInstance != nullptr)) {
			_20117_f=_20878_existInstance;
		};
	} else if ((!(_1a3c15e80_buildFnNonGenericTypeKinds((*(_self_))._field_s, &(_20117_f), &(_20717_fcac._field_ignored))))) {
		(*(_201050_d))=nullptr;
		return;;
	};
	_20717_fcac._field_f=_20117_f;
	jule::Bool _20987_ok = false;;
	if (((*(*(_20117_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_20587_old, (*_self_.alloc)._field_s);
		_20987_ok=_1a3c7c07e_check(&_20717_fcac);
		std::swap(_20587_old, (*_self_.alloc)._field_s);
	} else {
		_20987_ok=_1a3c7c07e_check(&_20717_fcac);
	};
	if (_20497_dynamicAnnotation) {
		if ((!(_20987_ok))) {
			(*(_201050_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a3c9841e_checkGenericFn(_self_, &(_20117_f), &((*((*(_201028_fc))))._field_Token), &((*((*(_201050_d))))._field_Model));
			_20987_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_20987_ok))) {
			(*(_201050_d))=nullptr;
			return;;
		};
	};
	jule::Any _21197_callModel = (*((*(_201050_d))))._field_Model;;
	if (_1a3b74570_IsVoid((*(_20117_f))._field_Decl)) {
		(*(_201050_d))=_1a3cb56d3_buildVoidData();
	} else {
		(*((*(_201050_d))))._field_Kind=(*_20117_f.alloc)._field_Result;
		(*((*(_201050_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1a3b68201_FnCallExprModel> _21287_model = jule::new_ptr<_1a3b68201_FnCallExprModel>(_1a3b68201_FnCallExprModel{._field_Token=(*((*(_201028_fc))))._field_Token, ._field_Func=_20117_f, ._field_IsCo=(*((*(_201028_fc))))._field_IsCo, ._field_Expr=_21197_callModel, ._field_Args=_20717_fcac._field_argModels, });;
	(*((*(_201050_d))))._field_Model=jule::Any(_21287_model, &__jule_any_type33);
	(*((*(_201050_d))))._field_Mutable=true;
	if ((*(*(_20117_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_201028_fc))))._field_IsCo) {
			_1a3c0b78e_pushErr((*(_self_))._field_s, (*((*(_201028_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1a3c0bb02_pushSuggestion((*(_self_))._field_s, jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1a3b46520_Unhandled((*(_201028_fc)).ptr())) {
				_case_begin_1a971965e:;
				{
					_1a3c8baa5_pushErr(_self_, (*((*(_201028_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1a3c8be18_pushSuggestion(_self_, jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1a3b467a6_Ignored((*(_201028_fc)).ptr())) {
				_case_begin_1a9719351:;
				{
					goto _match_end_1a97180ec;
				}
			}
			else {
				_case_begin_1a9718185:;
				{
					_1a3ca0c0c_processExceptionalHandler(_self_, &(_20117_f), _201028_fc, _201050_d);
				}
			}
			_match_end_1a97180ec:;
		};
	} else if ((!(_1a3b46520_Unhandled((*(_201028_fc)).ptr())))) {
		_1a3c8baa5_pushErr(_self_, (*((*(_201028_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_201028_fc))))._field_IsCo) {
		_1a3ca07de_checkFnOfConcurrentCall(_self_, &((*(_21287_model))._field_Func), (*((*(_201028_fc))))._field_Token);
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca13b1_evalFnCall(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b4619b_FnCallExpr> _216331_fc) {
	jule::Ptr<_1a3cbac27_TypeKind> _21647_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_21647_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_216331_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a971dbc4:;
			{
				if ((*((*((*(_216331_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1a3e38966_builtinCallerError(&(_self_), &(_216331_fc));;
				};
			}
		}
		_match_end_1a971db5d:;
	};
	jule::Ptr<_1a3c8982d_Data> _21777_d = _1a3ca89a1_evalExprKind(_self_, (*((*(_216331_fc))._field_Expr))._field_Kind);;
	if ((_21777_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_21777_d))._field_Decl) {
		_1a3ca0118_callTypeFn(_self_, &(_216331_fc), &(_21777_d));
		return _21777_d;;
	};
	if ((_1a3cbe665_Fn((*(_21777_d))._field_Kind.ptr()) == nullptr)) {
		_1a3c8baa5_pushErr(_self_, (*_216331_fc.alloc)._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a3ca1070_callFn(_self_, &(_216331_fc), &(_21777_d));
	return _21777_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca17ac_evalEnumStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b8a289_Enum> _219634_enm, jule::Ptr<_1a3b27a62_Token> _219650_ident) {
	jule::Ptr<_1a3b8971c_EnumItem> _21977_item = _1a3b8ad7d_FindItem(_219634_enm.ptr(), (*(_219650_ident))._field_Kind);;
	if ((_21977_item == nullptr)) {
		_1a3c8baa5_pushErr(_self_, _219650_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_219634_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_219650_ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _1a3cb7163_evalEnumStatic(&(_219634_enm), &(_21977_item), &(_219650_ident));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca1ba8_evalTypeEnumStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b8b994_TypeEnum> _220438_enm, jule::Ptr<_1a3b27a62_Token> _220454_ident) {
	jule::Ptr<_1a3b8b3bc_TypeEnumItem> _22057_item = _1a3b8c555_FindItem(_220438_enm.ptr(), (*(_220454_ident))._field_Kind);;
	if ((_22057_item == nullptr)) {
		_1a3c8baa5_pushErr(_self_, _220454_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_220438_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_220454_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1a3cbdb2b_Enum((*((*(_22057_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9727271:;
			{
				return _1a3c901a2__evalEnum(_self_, _1a3cbdb2b_Enum((*((*(_22057_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1a3cbddb2_TypeEnum((*((*(_22057_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9725505:;
			{
				return _1a3c908de__evalTypeEnum(_self_, _1a3cbddb2_TypeEnum((*((*(_22057_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1a3cbe8eb_Struct((*((*(_22057_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a972556b:;
			{
				return _1a3c9112b__evalStruct(_self_, _1a3cbe8eb_Struct((*((*(_22057_item))._field_Kind))._field_Kind));;
			}
		}
		else {
			_case_begin_1a972548e:;
			{
				jule::Ptr<_1a3c8982d_Data> _22188_d = jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=(*((*(_22057_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_22188_d))._field_Model=jule::Any((*_22188_d.alloc)._field_Kind, &__jule_any_type84);
				return _22188_d;;
			}
		}
		_match_end_1a9725659:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca20a4_evalStructStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b61cbb_StructIns> _222736_s, jule::Ptr<_1a3b27a62_Token> _222751_ident) {
	jule::Ptr<_1a3c8982d_Data> _22287_d = jule::new_ptr<_1a3c8982d_Data>();;
	;
	jule::Ptr<_1a3b740ec_Fn> _22327_method = _1a3b62d33_FindMethod(_222736_s.ptr(), (*(_222751_ident))._field_Kind, true);;
	if ((_22327_method != nullptr)) {
		if ((!(_1a3c0beed_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_22327_method.alloc)._field_Public, (*_22327_method.alloc)._field_Token)))) {
			_1a3c8baa5_pushErr(_self_, _222751_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_222751_ident.alloc)._field_Kind, &__jule_any_type4)}));
			_1a3c8be18_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a3b770cd_FnIns> _22398_ins = _1a3b7585c_instance(_22327_method);;
		(*(_22398_ins))._field_Owner=_222736_s;
		_1a94a11d7_pushReference(_self_, &(_22398_ins));
		(*_22287_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a3b6b215_StructStaticIdentExprModel>(_1a3b6b215_StructStaticIdentExprModel{._field_Structure=_222736_s, ._field_Expr=(*_22287_d.alloc)._field_Model, ._field_Method=_22398_ins}), &__jule_any_type96);
		(*_22287_d.alloc)._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_22398_ins, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data1)});
		return _22287_d;;
	};
	jule::Ptr<_1a3c31c26_Var> _22537_sttc = _1a3b634b5_FindStatic(_222736_s, (*_222751_ident.alloc)._field_Kind);;
	if ((_22537_sttc != nullptr)) {
		return _1a3c931d8_evalVar(_self_, _22537_sttc, _222751_ident);;
	};
	_1a3c8baa5_pushErr(_self_, _222751_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_222736_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*_222751_ident.alloc)._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca255a_evalTraitSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data> _226237_d, jule::Ptr<_1a3b87a7d_Trait> _226251_trt, jule::Ptr<_1a3b27a62_Token> _226268_ident) {
	jule::Ptr<_1a3b740ec_Fn> _22637_f = _1a3b8872c_FindMethod(_226251_trt.ptr(), (*(_226268_ident))._field_Kind);;
	if ((_22637_f == nullptr)) {
		_1a3c8baa5_pushErr(_self_, _226268_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_226251_trt.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_226268_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3b7585c_instance(_22637_f), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data1)}), ._field_Model=jule::Any(jule::new_ptr<_1a3b6a4cd_TraitSubIdentExprModel>(_1a3b6a4cd_TraitSubIdentExprModel{._field_Token=_226268_ident, ._field_Expr=(*(_226237_d))._field_Model, ._field_Method=_22637_f, ._field_Trt=_226251_trt}), &__jule_any_type97), });;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca2abb_evalStructSubIdentField(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _228244_d, jule::Ptr<_1a3b61cbb_StructIns>* _228259_s, jule::Ptr<_1a3b27a62_Token>* _228279_tok, jule::Ptr<_1a3b6121b_FieldIns>* _228297_f) {
	jule::Ptr<_1a3b6ad6e_StructSubIdentExprModel> _22837_model = jule::new_ptr<_1a3b6ad6e_StructSubIdentExprModel>(_1a3b6ad6e_StructSubIdentExprModel{._field_Token=(*(_228279_tok)), ._field_Expr=jule::new_ptr<_1a3c8982d_Data>((*((*(_228244_d))))), ._field_Field=(*(_228297_f)), ._field_Owner=(*(_228259_s))});;
	(*((*(_228244_d))))._field_Model=jule::Any(_22837_model, &__jule_any_type98);
	(*((*(_228244_d))))._field_Kind=(*((*(_228297_f))))._field_Kind;
	(*((*(_228244_d))))._field_Lvalue=true;
	if (((*((*((*(_228297_f))))._field_Decl))._field_Mutable && (!((*((*(_228244_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)) {
				_case_begin_1a973897a:;
				{
					jule::Ptr<_1a3bbdb08_scopeChecker> _22985_scope = _1a3bc2238_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a3bbdb08_scopeChecker>((jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0));;
					(*((*(_228244_d))))._field_Mutable=(((*(_22985_scope))._field_owner != nullptr) && ((*(*(_22985_scope))._field_owner.alloc)._field_Owner == (*(_228259_s))));
				}
			}
			_match_end_1a9738925:;
		};
	};
	return (*(_228244_d));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca312c_evalStructSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data> _230538_d, jule::Ptr<_1a3b61cbb_StructIns> _230552_s, jule::Ptr<_1a3b45585_SubIdentExpr> _230571_si, jule::Bool _230590_ref) {
	jule::Ptr<_1a3b6121b_FieldIns> _23067_f = _1a3b63174_FindField(_230552_s.ptr(), (*((*(_230571_si))._field_Ident))._field_Kind);;
	if ((_23067_f != nullptr)) {
		if ((!(_1a3c0beed_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_23067_f.alloc)._field_Decl))._field_Public, (*(*(_23067_f))._field_Decl.alloc)._field_Token)))) {
			_1a3c8baa5_pushErr(_self_, (*_230571_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*(_23067_f))._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
			_1a3c8be18_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1a3ca2abb_evalStructSubIdentField(_self_, &(_230538_d), &(_230552_s), &((*_230571_si.alloc)._field_Ident), &(_23067_f));;
	};
	;
	jule::Ptr<_1a3b740ec_Fn> _23167_m = _1a3b62d33_FindMethod(_230552_s, (*(*(_230571_si))._field_Ident.alloc)._field_Kind, false);;
	if ((_23167_m == nullptr)) {
		_1a3c8baa5_pushErr(_self_, (*_230571_si.alloc)._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_230552_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(*(_230571_si))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1a3c0beed_isAccessibleDefine((*(_self_))._field_s, (*(_23167_m))._field_Public, (*(_23167_m))._field_Token)))) {
		_1a3c8baa5_pushErr(_self_, (*_230571_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_23167_m))._field_Ident, &__jule_any_type4)}));
		_1a3c8be18_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1a3b72eca_IsRef((*(_23167_m))._field_Params[0LL].ptr()) && (!(_230590_ref)))) {
		_1a3c8baa5_pushErr(_self_, (*_230571_si.alloc)._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1a3c91bcb_checkDeprecated(_self_, &((*(_23167_m))._field_Directives), (*_230571_si.alloc)._field_Ident);
	jule::Ptr<_1a3b770cd_FnIns> _23327_ins = _1a3b7585c_instance(_23167_m);;
	(*(_23327_ins))._field_Owner=_230552_s;
	_1a94a11d7_pushReference(_self_, &(_23327_ins));
	jule::Ptr<_1a3c8982d_Data> _23357_model = jule::new_ptr<_1a3c8982d_Data>((*(_230538_d)));;
	(*_230538_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a3b6ad6e_StructSubIdentExprModel>(_1a3b6ad6e_StructSubIdentExprModel{._field_Token=(*_230571_si.alloc)._field_Ident, ._field_Expr=_23357_model, ._field_Method=_23327_ins, ._field_Owner=_230552_s}), &__jule_any_type98);
	(*_230538_d.alloc)._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_23327_ins, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data1)});
	return _230538_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca346d_evalIntTypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _234633_ident) {
	;
	{
		auto &_match_expr{ (*(_234633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a95b0769:;
			{
				jule::Ptr<_1b5747b9d_Const> _23508_c = static__1b57480dd_NewI64(_1b574312c_MaxI(jule::Str::lit("int", 3)));;
				(*(_23508_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e34ed4_primInt, ._field_Model=jule::Any(_23508_c, &__jule_any_type19), ._field_Constant=_23508_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a95b1270:;
			{
				jule::Ptr<_1b5747b9d_Const> _23598_c = static__1b57480dd_NewI64(static_cast<jule::I64>(_1b5743737_Min(jule::Str::lit("int", 3))));;
				(*(_23598_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e34ed4_primInt, ._field_Model=jule::Any(_23598_c, &__jule_any_type19), ._field_Constant=_23598_c});;
			}
		}
		else {
			_case_begin_1a95aee1c:;
			{
				_1a3c8baa5_pushErr(_self_, _234633_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_234633_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a95b03b2:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca37ae_evalUintTypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _237334_ident) {
	;
	{
		auto &_match_expr{ (*(_237334_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a95b4570:;
			{
				jule::Ptr<_1b5747b9d_Const> _23778_c = static__1b57483a7_NewU64(_1b57433e6_MaxU(jule::Str::lit("uint", 4)));;
				(*(_23778_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e34b1b_primUint, ._field_Model=jule::Any(_23778_c, &__jule_any_type19), ._field_Constant=_23778_c});;
			}
		}
		else {
			_case_begin_1a95b3e65:;
			{
				_1a3c8baa5_pushErr(_self_, _237334_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_237334_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a95b41b8:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca3b00_evalI8TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _239132_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_239132_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a95b7782:;
			{
				jule::Ptr<_1b5747b9d_Const> _23978_c = static__1b57480dd_NewI64(127LL);;
				(*(_23978_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e35226_primI8, ._field_Model=jule::Any(_23978_c, &__jule_any_type19), ._field_Constant=_23978_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a95b8288:;
			{
				jule::Ptr<_1b5747b9d_Const> _24068_c = static__1b57480dd_NewI64(-128LL);;
				(*(_24068_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e35226_primI8, ._field_Model=jule::Any(_24068_c, &__jule_any_type19), ._field_Constant=_24068_c});;
			}
		}
		else {
			_case_begin_1a95b6ece:;
			{
				_1a3c8baa5_pushErr(_self_, _239132_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_239132_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a95b73ec:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca3e41_evalI16TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _242033_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_242033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a9741400:;
			{
				jule::Ptr<_1b5747b9d_Const> _24268_c = static__1b57480dd_NewI64(32767LL);;
				(*(_24268_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e354bd_primI16, ._field_Model=jule::Any(_24268_c, &__jule_any_type19), ._field_Constant=_24268_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a9741e06:;
			{
				jule::Ptr<_1b5747b9d_Const> _24358_c = static__1b57480dd_NewI64(-32768LL);;
				(*(_24358_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e354bd_primI16, ._field_Model=jule::Any(_24358_c, &__jule_any_type19), ._field_Constant=_24358_c});;
			}
		}
		else {
			_case_begin_1a9740b4c:;
			{
				_1a3c8baa5_pushErr(_self_, _242033_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_242033_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a974106a:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca4282_evalI32TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _244933_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_244933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a97456bd:;
			{
				jule::Ptr<_1b5747b9d_Const> _24558_c = static__1b57480dd_NewI64(2147483647LL);;
				(*(_24558_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e35776_primI32, ._field_Model=jule::Any(_24558_c, &__jule_any_type19), ._field_Constant=_24558_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a97461c4:;
			{
				jule::Ptr<_1b5747b9d_Const> _24648_c = static__1b57480dd_NewI64(-2147483648LL);;
				(*(_24648_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e35776_primI32, ._field_Model=jule::Any(_24648_c, &__jule_any_type19), ._field_Constant=_24648_c});;
			}
		}
		else {
			_case_begin_1a9744e1a:;
			{
				_1a3c8baa5_pushErr(_self_, _244933_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_244933_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9745338:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca45c3_evalI64TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _247833_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_247833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a974998b:;
			{
				jule::Ptr<_1b5747b9d_Const> _24848_c = static__1b57480dd_NewI64(jule::MAX_I64);;
				(*(_24848_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e35a2e_primI64, ._field_Model=jule::Any(_24848_c, &__jule_any_type19), ._field_Constant=_24848_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a974a492:;
			{
				jule::Ptr<_1b5747b9d_Const> _24938_c = static__1b57480dd_NewI64(jule::MIN_I64);;
				(*(_24938_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e35a2e_primI64, ._field_Model=jule::Any(_24938_c, &__jule_any_type19), ._field_Constant=_24938_c});;
			}
		}
		else {
			_case_begin_1a97491d8:;
			{
				_1a3c8baa5_pushErr(_self_, _247833_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_247833_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9749606:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca4914_evalU8TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _250732_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_250732_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a974d880:;
			{
				jule::Ptr<_1b5747b9d_Const> _25128_c = static__1b57483a7_NewU64(255LLU);;
				(*(_25128_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e35cd7_primU8, ._field_Model=jule::Any(_25128_c, &__jule_any_type19), ._field_Constant=_25128_c});;
			}
		}
		else {
			_case_begin_1a974d088:;
			{
				_1a3c8baa5_pushErr(_self_, _250732_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_250732_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a974d484:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca4c55_evalU16TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _252633_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_252633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a975160d:;
			{
				jule::Ptr<_1b5747b9d_Const> _25318_c = static__1b57483a7_NewU64(65535LLU);;
				(*(_25318_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e36090_primU16, ._field_Model=jule::Any(_25318_c, &__jule_any_type19), ._field_Constant=_25318_c});;
			}
		}
		else {
			_case_begin_1a9750d16:;
			{
				_1a3c8baa5_pushErr(_self_, _252633_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_252633_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9751212:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca5096_evalU32TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _254533_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_254533_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a975438b:;
			{
				jule::Ptr<_1b5747b9d_Const> _25508_c = static__1b57483a7_NewU64(4294967295LLU);;
				(*(_25508_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e36348_primU32, ._field_Model=jule::Any(_25508_c, &__jule_any_type19), ._field_Constant=_25508_c});;
			}
		}
		else {
			_case_begin_1a9753a94:;
			{
				_1a3c8baa5_pushErr(_self_, _254533_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_254533_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9753e90:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca53d7_evalU64TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _256433_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_256433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a9757119:;
			{
				jule::Ptr<_1b5747b9d_Const> _25698_c = static__1b57483a7_NewU64(jule::MAX_U64);;
				(*(_25698_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e36832_primU64, ._field_Model=jule::Any(_25698_c, &__jule_any_type19), ._field_Constant=_25698_c});;
			}
		}
		else {
			_case_begin_1a9756822:;
			{
				_1a3c8baa5_pushErr(_self_, _256433_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_256433_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9756c1d:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca5728_evalF32TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _258333_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_258333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a975a5b2:;
			{
				jule::Ptr<_1b5747b9d_Const> _25908_c = static__1b5748c04_NewF64(340282346638528860000000000000000000000.0);;
				(*(_25908_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e36a74_primF32, ._field_Model=jule::Any(_25908_c, &__jule_any_type19), ._field_Constant=_25908_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a975b0b8:;
			{
				jule::Ptr<_1b5747b9d_Const> _25998_c = static__1b5748c04_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_25998_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e36a74_primF32, ._field_Model=jule::Any(_25998_c, &__jule_any_type19), ._field_Constant=_25998_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1a975b12e:;
			{
				jule::Ptr<_1b5747b9d_Const> _26088_c = static__1b5748c04_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_26088_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e36a74_primF32, ._field_Model=jule::Any(_26088_c, &__jule_any_type19), ._field_Constant=_26088_c});;
			}
		}
		else {
			_case_begin_1a9759d86:;
			{
				_1a3c8baa5_pushErr(_self_, _258333_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_258333_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a975a20a:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca5a69_evalF64TypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b27a62_Token> _262233_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_262233_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a9760d59:;
			{
				jule::Ptr<_1b5747b9d_Const> _26298_c = static__1b5748c04_NewF64(jule::MAX_F64);;
				(*(_26298_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e36c83_primF64, ._field_Model=jule::Any(_26298_c, &__jule_any_type19), ._field_Constant=_26298_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a9761860:;
			{
				jule::Ptr<_1b5747b9d_Const> _26388_c = static__1b5748c04_NewF64(jule::MIN_F64);;
				(*(_26388_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e36c83_primF64, ._field_Model=jule::Any(_26388_c, &__jule_any_type19), ._field_Constant=_26388_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1a97618c6:;
			{
				jule::Ptr<_1b5747b9d_Const> _26478_c = static__1b5748c04_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_26478_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_untyped=true, ._field_Kind=_1a3e36c83_primF64, ._field_Model=jule::Any(_26478_c, &__jule_any_type19), ._field_Constant=_26478_c});;
			}
		}
		else {
			_case_begin_1a976062d:;
			{
				_1a3c8baa5_pushErr(_self_, _262233_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_262233_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a97609a2:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca5e65_evalPrimStatic(_1a3c8b555_Eval* _self_, jule::Str _266130_kind, jule::Ptr<_1a3b27a62_Token> _266141_ident) {
	{
		auto &_match_expr{ _266130_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1a9765545:;
			{
				return _1a3ca346d_evalIntTypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1a9765ee6:;
			{
				return _1a3ca37ae_evalUintTypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1a976605c:;
			{
				return _1a3ca3b00_evalI8TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a9765226:;
			{
				return _1a3ca3e41_evalI16TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a976528c:;
			{
				return _1a3ca4282_evalI32TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a9765303:;
			{
				return _1a3ca45c3_evalI64TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1a9765369:;
			{
				return _1a3ca4914_evalU8TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a976614a:;
			{
				return _1a3ca4c55_evalU16TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1a97661b1:;
			{
				return _1a3ca5096_evalU32TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1a9766227:;
			{
				return _1a3ca53d7_evalU64TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a976628d:;
			{
				return _1a3ca5728_evalF32TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a9766304:;
			{
				return _1a3ca5a69_evalF64TypeStatic(_self_, _266141_ident);;
			}
		}
		else {
			_case_begin_1a9761aa2:;
			{
				_1a3c8baa5_pushErr(_self_, _266141_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_266130_kind, &__jule_any_type4),jule::Any((*(_266141_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9761b29:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca6361_evalTypeStatic(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data> _269334_d, jule::Ptr<_1a3b45585_SubIdentExpr> _269348_si) {
	{
		
		if ((_1a3cbd378_Prim((*(_269334_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a976a825:;
			{
				return _1a3ca5e65_evalPrimStatic(_self_, _1a3cc3b42_Str(_1a3cbd378_Prim((*(_269334_d))._field_Kind).ptr()), (*(_269348_si))._field_Ident);;
			}
		}
		else if ((_1a3cbdb2b_Enum((*(_269334_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a976b628:;
			{
				return _1a3ca17ac_evalEnumStatic(_self_, _1a3cbdb2b_Enum((*(_269334_d))._field_Kind), (*(_269348_si))._field_Ident);;
			}
		}
		else if ((_1a3cbddb2_TypeEnum((*(_269334_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a976b68e:;
			{
				return _1a3ca1ba8_evalTypeEnumStatic(_self_, _1a3cbddb2_TypeEnum((*(_269334_d))._field_Kind), (*(_269348_si))._field_Ident);;
			}
		}
		else if ((_1a3cbe8eb_Struct((*(_269334_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a976a4c3:;
			{
				return _1a3ca20a4_evalStructStatic(_self_, _1a3cbe8eb_Struct((*(_269334_d))._field_Kind), (*(_269348_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1a976a45c:;
			{
				_1a3c8baa5_pushErr(_self_, (*(_269348_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_269334_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a976a3a2:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a9773564_comptimeObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b9e4ac_comptimeTypeInfo>* _270954_ct, jule::Ptr<_1a3c8982d_Data>* _270974_d, jule::Ptr<_1a3b45585_SubIdentExpr>* _270985_si) {
	jule::Ptr<_1a3c8982d_Data> _27107_cd = _1a3ba56b1_subIdent((*(_270954_ct)), &((*((*((*(_270985_si))))._field_Ident))._field_Kind));;
	if ((_27107_cd == nullptr)) {
		_1a3c8baa5_pushErr(_self_, (*((*(_270985_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_270974_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_270985_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27107_cd;;
}

inline jule::Ptr<_1a3c8982d_Data> _1a9777bb7_comptimeObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b90657_comptimeStructField>* _270954_ct, jule::Ptr<_1a3c8982d_Data>* _270974_d, jule::Ptr<_1a3b45585_SubIdentExpr>* _270985_si) {
	jule::Ptr<_1a3c8982d_Data> _27107_cd = _1a3b9200a_subIdent((*(_270954_ct)), &((*((*((*(_270985_si))))._field_Ident))._field_Kind));;
	if ((_27107_cd == nullptr)) {
		_1a3c8baa5_pushErr(_self_, (*((*(_270985_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_270974_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_270985_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27107_cd;;
}

inline jule::Ptr<_1a3c8982d_Data> _1a977c2c6_comptimeObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b96bbe_comptimeEnumField>* _270954_ct, jule::Ptr<_1a3c8982d_Data>* _270974_d, jule::Ptr<_1a3b45585_SubIdentExpr>* _270985_si) {
	jule::Ptr<_1a3c8982d_Data> _27107_cd = _1a3b97c58_subIdent((*(_270954_ct)), &((*((*((*(_270985_si))))._field_Ident))._field_Kind));;
	if ((_27107_cd == nullptr)) {
		_1a3c8baa5_pushErr(_self_, (*((*(_270985_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_270974_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_270985_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27107_cd;;
}

inline jule::Ptr<_1a3c8982d_Data> _1a9781929_comptimeObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b99661_comptimeParam>* _270954_ct, jule::Ptr<_1a3c8982d_Data>* _270974_d, jule::Ptr<_1a3b45585_SubIdentExpr>* _270985_si) {
	jule::Ptr<_1a3c8982d_Data> _27107_cd = _1a3b9b5b9_subIdent((*(_270954_ct)), &((*((*((*(_270985_si))))._field_Ident))._field_Kind));;
	if ((_27107_cd == nullptr)) {
		_1a3c8baa5_pushErr(_self_, (*((*(_270985_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_270974_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_270985_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27107_cd;;
}

inline jule::Ptr<_1a3c8982d_Data> _1a97862ad_comptimeObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3b93913_comptimeStatic>* _270954_ct, jule::Ptr<_1a3c8982d_Data>* _270974_d, jule::Ptr<_1a3b45585_SubIdentExpr>* _270985_si) {
	jule::Ptr<_1a3c8982d_Data> _27107_cd = _1a3b9533d_subIdent((*(_270954_ct)), &((*((*((*(_270985_si))))._field_Ident))._field_Kind));;
	if ((_27107_cd == nullptr)) {
		_1a3c8baa5_pushErr(_self_, (*((*(_270985_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_270974_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_270985_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27107_cd;;
}

inline jule::Ptr<_1a3c8982d_Data> _1a978a8bc_comptimeObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3ba59be_comptimeValue>* _270954_ct, jule::Ptr<_1a3c8982d_Data>* _270974_d, jule::Ptr<_1a3b45585_SubIdentExpr>* _270985_si) {
	jule::Ptr<_1a3c8982d_Data> _27107_cd = _1a3ba8010_subIdent((*(_270954_ct)), &((*((*((*(_270985_si))))._field_Ident))._field_Kind));;
	if ((_27107_cd == nullptr)) {
		_1a3c8baa5_pushErr(_self_, (*((*(_270985_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_270974_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_270985_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27107_cd;;
}

inline jule::Ptr<_1a3c8982d_Data> _1a978eecb_comptimeObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3ba9918_comptimeFile>* _270954_ct, jule::Ptr<_1a3c8982d_Data>* _270974_d, jule::Ptr<_1a3b45585_SubIdentExpr>* _270985_si) {
	jule::Ptr<_1a3c8982d_Data> _27107_cd = _1a3bab354_subIdent((*(_270954_ct)), &((*((*((*(_270985_si))))._field_Ident))._field_Kind));;
	if ((_27107_cd == nullptr)) {
		_1a3c8baa5_pushErr(_self_, (*((*(_270985_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_270974_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_270985_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27107_cd;;
}



inline __jule_tuple_x_1a3c8982d_Data__jule_tuple_bool _1a3ca6c13_tryComptimeObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data>* _271743_d, jule::Ptr<_1a3b45585_SubIdentExpr> _271757_si) {
	__jule_tuple_x_1a3c8982d_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1a3cc1c3e_comptimeTypeInfo((*((*(_271743_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9771980:;
			{
				jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _27208_ct = _1a3cc1c3e_comptimeTypeInfo((*((*(_271743_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a9773564_comptimeObjSubIdent(_self_, &(_27208_ct), _271743_d, &(_271757_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a3cc0952_comptimeStructField((*((*(_271743_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9771573:;
			{
				jule::Ptr<_1a3b90657_comptimeStructField> _27238_ct = _1a3cc0952_comptimeStructField((*((*(_271743_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a9777bb7_comptimeObjSubIdent(_self_, &(_27238_ct), _271743_d, &(_271757_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a3cc0e6e_comptimeEnumField((*((*(_271743_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a97715ea:;
			{
				jule::Ptr<_1a3b96bbe_comptimeEnumField> _27268_ct = _1a3cc0e6e_comptimeEnumField((*((*(_271743_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a977c2c6_comptimeObjSubIdent(_self_, &(_27268_ct), _271743_d, &(_271757_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a3cc148b_comptimeParam((*((*(_271743_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9771672:;
			{
				jule::Ptr<_1a3b99661_comptimeParam> _27298_ct = _1a3cc148b_comptimeParam((*((*(_271743_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a9781929_comptimeObjSubIdent(_self_, &(_27298_ct), _271743_d, &(_271757_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a3cc225b_comptimeStatic((*((*(_271743_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a97716e9:;
			{
				jule::Ptr<_1a3b93913_comptimeStatic> _27328_ct = _1a3cc225b_comptimeStatic((*((*(_271743_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a97862ad_comptimeObjSubIdent(_self_, &(_27328_ct), _271743_d, &(_271757_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a3cc24e2_comptimeValue((*((*(_271743_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9771771:;
			{
				jule::Ptr<_1a3ba59be_comptimeValue> _27358_ct = _1a3cc24e2_comptimeValue((*((*(_271743_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a978a8bc_comptimeObjSubIdent(_self_, &(_27358_ct), _271743_d, &(_271757_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a3cc2778_comptimeFile((*((*(_271743_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a97717e8:;
			{
				jule::Ptr<_1a3ba9918_comptimeFile> _27388_ct = _1a3cc2778_comptimeFile((*((*(_271743_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a978eecb_comptimeObjSubIdent(_self_, &(_27388_ct), _271743_d, &(_271757_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a977150c:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a9771463:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca710e_evalObjSubIdent(_1a3c8b555_Eval* _self_, jule::Ptr<_1a3c8982d_Data> _274535_d, jule::Ptr<_1a3b45585_SubIdentExpr> _274549_si) {
	if (_1a3b2a449_IsIgnoreIdent((*((*(_274549_si))._field_Ident))._field_Kind)) {
		_1a3c8baa5_pushErr(_self_, (*_274549_si.alloc)._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1a3c8982d_Data> _27528_compData;
		jule::Bool _275218_ok;
		({
			__jule_tuple_x_1a3c8982d_Data__jule_tuple_bool __jule_assign_result = _1a3ca6c13_tryComptimeObjSubIdent(_self_, &(_274535_d), _274549_si);
			_27528_compData = __jule_assign_result.__jule_result_arg0;
			_275218_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_275218_ok) {
			return _27528_compData;;
		};
	};
	jule::Ptr<_1a3cbac27_TypeKind> _27587_kind = (*(_274535_d))._field_Kind;;
	{
		
		if ((_1a3cbd895_Ptr((*_274535_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9795135:;
			{
				jule::Ptr<_1a3ccaae4_Ptr> _27614_ptr = _1a3cbd895_Ptr((*(_274535_d))._field_Kind);;
				if (_1a3ccb62d_IsUnsafe(_27614_ptr.ptr())) {
					goto _match_end_1a979508b;
				};
				if ((!(_1a3c8c59a_isUnsafe(_self_)))) {
					_1a3c8baa5_pushErr(_self_, (*_274549_si.alloc)._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_27587_kind=(*(_1a3cbd895_Ptr((*(_274535_d))._field_Kind)))._field_Elem;
				_1a3cb7718_makeImplicitDeref(&(_274535_d), (*_274549_si.alloc)._field_Ident);
			}
		}
		else if ((_1a3cbd60e_Sptr((*_274535_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a97951ce:;
			{
				_27587_kind=(*(_1a3cbd60e_Sptr((*(_274535_d))._field_Kind)))._field_Elem;
				_1a3cb7718_makeImplicitDeref(&(_274535_d), (*_274549_si.alloc)._field_Ident);
			}
		}
		_match_end_1a979508b:;
	};
	{
		
		if ((_1a3cbeb82_Trait((*_274535_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9795641:;
			{
				return _1a3ca255a_evalTraitSubIdent(_self_, _274535_d, _1a3cbeb82_Trait((*(_274535_d))._field_Kind), (*_274549_si.alloc)._field_Ident);;
			}
		}
		else if ((_1a3cbe8eb_Struct(_27587_kind.ptr()) != nullptr)) {
			_case_begin_1a97987cb:;
			{
				jule::Ptr<_1a3b61cbb_StructIns> _27794_s = _1a3cbe8eb_Struct(_27587_kind);;
				if (_1a3cb498a_isInstancedStruct(_27794_s)) {
					jule::Bool _27819_usedReferenceElem = (_1a3cbd60e_Sptr((*_274535_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1a3ca312c_evalStructSubIdent(_self_, _274535_d, _1a3cbe8eb_Struct(_27587_kind), _274549_si, _27819_usedReferenceElem);;
				};
			}
		}
		_match_end_1a9798ba5:;
	};
	_1a3c8baa5_pushErr(_self_, (*_274549_si.alloc)._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*_274535_d.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca7450_evalSubIdent(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b45585_SubIdentExpr> _278933_si) {
	jule::Ptr<_1a3cbac27_TypeKind> _27907_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_27907_prefix;
	});;
	jule::Ptr<_1a3c8982d_Data> _27937_d = _1a3ca89a1_evalExprKind(_self_, (*((*(_278933_si))._field_Expr))._field_Kind);;
	if ((_27937_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_27937_d))._field_Decl) {
		return _1a3ca6361_evalTypeStatic(_self_, _27937_d, _278933_si);;
	};
	return _1a3ca710e_evalObjSubIdent(_self_, _27937_d, _278933_si);;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca7791_evalTuple(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b43066_TupleExpr> _280330_tup) {
	jule::Ptr<_1a3cc88e4_Tuple> _28047_tupT = jule::new_ptr<_1a3cc88e4_Tuple>();;
	(*_28047_tupT.alloc)._field_Types=jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>>::alloc(0LL, (*(_280330_tup))._field_Expr.len());
	jule::Ptr<_1a3b6b8db_TupleExprModel> _28077_model = jule::new_ptr<_1a3b6b8db_TupleExprModel>(_1a3b6b8db_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1a3c8982d_Data>>::alloc(0LL, (*_280330_tup.alloc)._field_Expr.len())});;
	jule::Bool _28117_ok = true;;
	{
		auto expr = &((*_280330_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97a3671:;
		if (it != expr_end) {
			jule::Ptr<_1a3b42472_Expr> _281215_expr = *it;
			{
				jule::Ptr<_1a3c8982d_Data> _28138_d = _1a3ca97b5_evalExpr(_self_, _281215_expr);;
				if ((_28138_d == nullptr)) {
					_28117_ok=false;
					goto _iter_next_1a97a3671;
				};
				(*_28047_tupT.alloc)._field_Types=jule::append((*_28047_tupT.alloc)._field_Types,jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>>::make({(*(_28138_d))._field_Kind}));
				(*(_28077_model))._field_Datas=jule::append((*_28077_model.alloc)._field_Datas,jule::Slice<jule::Ptr<_1a3c8982d_Data>>::make({_28138_d}));
			}
			_iter_next_1a97a3671:;
			++it;
			goto _iter_begin_1a97a3671;
		}
		_iter_end_1a97a3671:;
	};
	if ((!(_28117_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_28047_tupT, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data23)}), ._field_Model=jule::Any(_28077_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca7b8c_evalMap(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3cc9494_Map> _283228_m, jule::Ptr<_1a3b47972_BraceLit> _283241_lit) {
	jule::Ptr<_1a3b698b7_MapExprModel> _28337_model = jule::new_ptr<_1a3b698b7_MapExprModel>(_1a3b698b7_MapExprModel{._field_KeyKind=(*(_283228_m))._field_Key, ._field_ValKind=(*_283228_m.alloc)._field_Val, });;
	{
		auto expr = &((*(_283241_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97a7433:;
		if (it != expr_end) {
			jule::Ptr<_1a3b42472_Expr> _283815_expr = *it;
			{
				{
					auto &_match_expr{ (*(_283815_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type79) {
						_case_begin_1a97a89c8:;
						{
							goto _match_end_1a97a7d29;
						}
					}
					else {
						_case_begin_1a97a7d7e:;
						{
							_1a3c8baa5_pushErr(_self_.ptr(), (*(_283241_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1a97a7d29:;
				};
				jule::Ptr<_1a3b4829c_KeyValPair> _28488_pair = (*(_283815_expr))._field_Kind.cast_ptr<_1a3b4829c_KeyValPair>(&__jule_any_type79);;
				jule::Ptr<_1a3c8982d_Data> _28508_key = _1a3ca97b5_evalExpr(_self_, (*(_28488_pair))._field_Key);;
				if ((_28508_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1a3c8982d_Data> _28558_val = _1a3ca97b5_evalExpr(_self_, (*_28488_pair.alloc)._field_Val);;
				if ((_28558_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1a3c18636_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_283228_m.alloc)._field_Key), &(_28508_key), &((*((*_28488_pair.alloc)._field_Key))._field_Token))) {
					_1a3c1429c_checkAssignType((*(_self_))._field_s, false, &((*_283228_m.alloc)._field_Key), &(_28508_key), (*(*(_28488_pair))._field_Key.alloc)._field_Token);
				};
				if (_1a3c18636_checkValidityForInitExpr((*(_self_))._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_283228_m.alloc)._field_Val), &(_28558_val), &((*((*_28488_pair.alloc)._field_Val))._field_Token))) {
					_1a3c1429c_checkAssignType((*(_self_))._field_s, false, &((*_283228_m.alloc)._field_Val), &(_28558_val), (*(*(_28488_pair))._field_Val.alloc)._field_Token);
				};
				(*(_28337_model))._field_Entries=jule::append((*_28337_model.alloc)._field_Entries,jule::Slice<jule::Ptr<_1a3b69411_KeyValPairExprModel>>::make({jule::new_ptr<_1a3b69411_KeyValPairExprModel>(_1a3b69411_KeyValPairExprModel{._field_Key=(*(_28508_key))._field_Model, ._field_Val=(*(_28558_val))._field_Model})}));
			}
			_iter_next_1a97a7433:;
			++it;
			goto _iter_begin_1a97a7433;
		}
		_iter_end_1a97a7433:;
	};
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_283228_m, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Model=jule::Any(_28337_model, &__jule_any_type99), });;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca7ecd_evalBraceLit(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b47972_BraceLit> _288133_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1a97b221d:;
			{
				_1a3c8baa5_pushErr(_self_, (*(_288133_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a3cbee18_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a97b2284:;
			{
				return _1a3ca7b8c_evalMap(_self_, _1a3cbee18_Map((*(_self_))._field_prefix), _288133_lit);;
			}
		}
		else if ((_1a3cbe8eb_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a97b22ea:;
			{
				return _1a3c9e38c_evalStructLitExplicit(_self_, _1a3cbe8eb_Struct((*(_self_))._field_prefix), (*(_288133_lit))._field_Exprs, (*_288133_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1a97b155d:;
			{
				_1a3c8baa5_pushErr(_self_.ptr(), (*(_288133_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a97b145e:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca831e_evalAnonFunc(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b4eced_FnDecl> _289633_decl) {
	_1a3cccad5_typeChecker _28977_tc = _1a3cccad5_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, };;
	jule::Ptr<_1a3b770cd_FnIns> _29027_ins = _1a3cd47ac_buildFunc(&_28977_tc, _289633_decl);;
	if ((_29027_ins == nullptr)) {
		return nullptr;;
	};
	(*(_29027_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1a3c31c26_Var>> _29077_captured = jule::Slice<jule::Ptr<_1a3c31c26_Var>>::alloc(0LL, 0LL);;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)) {
			_case_begin_1a97b6a3b:;
			{
				jule::Ptr<_1a3bbdb08_scopeChecker> _29108_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1a3bbdb08_scopeChecker>((jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0);;
				jule::Ptr<_1a3bbdb08_scopeChecker> _29118_scc = _1a3bd0b92_newChildChecker(_29108_sc);;
				(*(_29118_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a3bbc585_scopeLabel>>>(nullptr);
				(*_29118_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a3bbcb18_scopeGoto>>>(nullptr);
				(*_29118_scc.alloc)._field_owner=_29027_ins;
				(*_29118_scc.alloc)._field_childIndex=0LL;
				(*_29118_scc.alloc)._field_it=0LLU;
				(*_29118_scc.alloc)._field_cse=0LLU;
				(*_29118_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1a3c31c26_Var>>>)((&(_29077_captured))));
				_1a3c2b968_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_29027_ins), &(_29118_scc));
			}
		}
		else {
			_case_begin_1a97b79e8:;
			{
				_1a3c2c084_checkFnIns((*_self_.alloc)._field_s, &(_29027_ins));
			}
		}
		_match_end_1a97b7993:;
	};
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_29027_ins, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data1)}), ._field_Model=jule::Any(jule::new_ptr<_1a3b69037_AnonFnExprModel>(_1a3b69037_AnonFnExprModel{._field_Captured=_29077_captured, ._field_Func=_29027_ins, ._field_Global=_1a3c8c831_isGlobal(_self_)}), &__jule_any_type100), });;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca8660_evalBinary(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b45a3b_BinaryExpr> _293431_op) {
	_1a3cabc18_binaryEval _29357_bs = static__1a3cac2bd_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1a3cc3801_Prim> _29384_prim = _1a3cbd378_Prim((*(_self_))._field_prefix);;
		if (((_29384_prim == nullptr) || (!(_1b5747692_IsNum(_1a3cc3b42_Str(_29384_prim.ptr())))))) {
			jule::Ptr<_1a3cbac27_TypeKind> _29409_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_29409_prefix;
			});;
			return _1a3cb2c96_eval(&_29357_bs, &(_293431_op));;
		};
	};
	return _1a3cb2c96_eval(&_29357_bs, &(_293431_op));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca89a1_evalExprKind(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Any _294933_kind) {
	{
		auto &_match_expr{ _294933_kind };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1a97c61dd:;
			{
				jule::Ptr<_1a3b4273b_RangeExpr> _29528_e = _294933_kind.unsafe_cast_ptr<_1a3b4273b_RangeExpr>();;
				return _1a3ca89a1_evalExprKind(_self_, (*((*(_29528_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1a97c641e:;
			{
				return _1a3c8e0d5_evalLit(_self_.ptr(), _294933_kind.cast_ptr<_1a3b4340c_LitExpr>(&__jule_any_type102));;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a97c6485:;
			{
				return _1a3c93d21_evalIdent(_self_.ptr(), _294933_kind.cast_ptr<_1a3b43c8c_IdentExpr>(&__jule_any_type44));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a97c64eb:;
			{
				return _1a3c94162_evalUnary(_self_, _294933_kind.cast_ptr<_1a3b4452e_UnaryExpr>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a97c6562:;
			{
				return _1a3c944a3_evalVariadic(_self_, _294933_kind.cast_ptr<_1a3b44908_VariadicExpr>(&__jule_any_type76));;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1a97c65c8:;
			{
				return _1a3c947e4_evalUnsafe(_self_, _294933_kind.cast_ptr<_1a3b437d6_UnsafeExpr>(&__jule_any_type103));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1a97c663e:;
			{
				return _1a3c9542c_evalSliceExpr(_self_, _294933_kind.cast_ptr<_1a3b489c8_SliceExpr>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1a97c69e6:;
			{
				return _1a3c98ac3_evalIndexing(_self_, _294933_kind.cast_ptr<_1a3b49435_IndexingExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1a97c6a5c:;
			{
				return _1a3c99e04_evalSlicing(_self_, _294933_kind.cast_ptr<_1a3b49a95_SlicingExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1a97c6ac3:;
			{
				return _1a3c9da95_evalCast(_self_, _294933_kind.cast_ptr<_1a3b44cd2_CastExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1a97c6b39:;
			{
				return _1a3c9ddd6_evalNsSelection(_self_.ptr(), _294933_kind.cast_ptr<_1a3b451ab_NsSelectionExpr>(&__jule_any_type90));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1a97c6bb1:;
			{
				return _1a3c9e6cd_evalStructLit(_self_, _294933_kind.cast_ptr<_1a3b474bb_StructLit>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1a97c6c38:;
			{
				return _1a3c9eca5_evalType(_self_.ptr(), _294933_kind.cast_ptr<_1a3b3d13d_TypeDecl>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1a97c6cb0:;
			{
				return _1a3ca13b1_evalFnCall(_self_, _294933_kind.cast_ptr<_1a3b4619b_FnCallExpr>(&__jule_any_type82));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a97c6d37:;
			{
				return _1a3ca7450_evalSubIdent(_self_, _294933_kind.cast_ptr<_1a3b45585_SubIdentExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1a97c6dae:;
			{
				return _1a3ca7791_evalTuple(_self_, _294933_kind.cast_ptr<_1a3b43066_TupleExpr>(&__jule_any_type80));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1a97c6e36:;
			{
				return _1a3ca7ecd_evalBraceLit(_self_, _294933_kind.cast_ptr<_1a3b47972_BraceLit>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a97c6ead:;
			{
				return _1a3ca831e_evalAnonFunc(_self_, _294933_kind.cast_ptr<_1a3b4eced_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1a97c7035:;
			{
				return _1a3ca8660_evalBinary(_self_, _294933_kind.cast_ptr<_1a3b45a3b_BinaryExpr>(&__jule_any_type109));;
			}
		}
		else {
			_case_begin_1a97c63a8:;
			{
				return nullptr;;
			}
		}
		_match_end_1a97c6353:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca8ce2_eval1(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b42472_Expr> _299726_expr) {
	jule::Ptr<_1a3c8982d_Data> _29987_d = _1a3ca89a1_evalExprKind(_self_, (*(_299726_expr))._field_Kind);;
	if (((_29987_d == nullptr) || ((*(_29987_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1a3cbe665_Fn((*(_29987_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a90cc63d:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _30058_f = _1a3cbe665_Fn((*(_29987_d))._field_Kind.ptr());;
				if (_1a3b78563_IsBuiltin(_30058_f.ptr())) {
					_1a3c0b78e_pushErr((*_self_.alloc)._field_s.ptr(), (*_299726_expr.alloc)._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1a90cbc36;
				};
				if (((*_30058_f.alloc)._field_Generics.len() != (*((*_30058_f.alloc)._field_Decl))._field_Generics.len())) {
					_1a3c0b78e_pushErr((*(_self_))._field_s, (*_299726_expr.alloc)._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				} else if (((!((*((*_30058_f.alloc)._field_Decl))._field_Statically)) && _1a3b74806_IsMethod((*(_30058_f))._field_Decl))) {
					_1a3c0b78e_pushErr((*(_self_))._field_s, (*_299726_expr.alloc)._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				} else {
					(*_30058_f.alloc)._field_AsAnon=true;
				};
			}
		}
		_match_end_1a90cbc36:;
	};
	return _29987_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca9133_eval(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b42472_Expr> _302525_expr) {
	jule::Ptr<_1a3c8982d_Data> _30267_d = _1a3ca8ce2_eval1(_self_, _302525_expr);;
	if ((_30267_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1a3cc0435_comptime((*(_30267_d))._field_Kind.ptr()))) {
		_1a3c0b78e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_302525_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _30267_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca9474_evalExpr1(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b42472_Expr> _304030_expr) {
	jule::Ptr<_1a3c8982d_Data> _30417_d = _1a3ca8ce2_eval1(_self_, _304030_expr);;
	{
		
		if ((_30417_d == nullptr)) {
			_case_begin_1a992e8b8:;
			{
				return nullptr;;
			}
		}
		else if ((*(_30417_d))._field_Decl) {
			_case_begin_1a992e962:;
			{
				_1a3c8baa5_pushErr(_self_, (*(_304030_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1a992e841:;
			{
				return _30417_d;;
			}
		}
		_match_end_1a992e7ca:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3ca97b5_evalExpr(jule::Ptr<_1a3c8b555_Eval> _self_, jule::Ptr<_1a3b42472_Expr> _305629_expr) {
	jule::Ptr<_1a3c8982d_Data> _30577_d = _1a3ca9133_eval(_self_, _305629_expr);;
	{
		
		if ((_30577_d == nullptr)) {
			_case_begin_1a99317aa:;
			{
				return nullptr;;
			}
		}
		else if ((*(_30577_d))._field_Decl) {
			_case_begin_1a9931854:;
			{
				_1a3c8baa5_pushErr(_self_, (*(_305629_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1a9931733:;
			{
				return _30577_d;;
			}
		}
		_match_end_1a99316bc:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3c8b555_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3ca9c7c_unaryEval_eq(_1a3ca9c7c_unaryEval *_self_, _1a3ca9c7c_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _1a3ca9c7c_unaryEval static__1a3caa1bc_new(jule::Ptr<_1a3c8b555_Eval> _307720_e) {
	return _1a3ca9c7c_unaryEval{._field_e=_307720_e, };;
}



inline void _1a3caa3ba_minus(_1a3ca9c7c_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1a99334d2:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a3cbd378_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a99338bc:;
			{
				if ((!(_1b5747692_IsNum(_1a3cbb0e0_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a3cbe8eb_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9933191:;
			{
				if (((*(_1a3cbe8eb_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a993312a:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a9933070:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a3c8a235_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b574c6a8_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a9937bce:;
				{
					_1b574b6da_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1b574a0ac_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1b574bb6e_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a9937cbc:;
				{
					_1b574ab18_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1b5749573_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1b574be05_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a993788d:;
				{
					_1b574ab18_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1b574a343_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1a9937816:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3115:5"));;
				}
			}
			_match_end_1a993776c:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a3b665ea_UnaryExprModel>(_1a3b665ea_UnaryExprModel{._field_Expr=jule::new_ptr<_1a3c8982d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a3caa5b8_plus(_1a3ca9c7c_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1a993d344:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a3cbd378_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a993d72e:;
			{
				if ((!(_1b5747692_IsNum(_1a3cbb0e0_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a3cbe8eb_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a993d003:;
			{
				if (((*(_1a3cbe8eb_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a993ce8c:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a993cd8d:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a3c8a235_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b574c6a8_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a9942a41:;
				{
					_1b574b6da_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1b574a0ac_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1b574bb6e_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a9942b2e:;
				{
					_1b574ab18_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1b5749573_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1b574be05_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a9942700:;
				{
					_1b574ab18_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1b574a343_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1a9942678:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3160:5"));;
				}
			}
			_match_end_1a99425ce:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a3b665ea_UnaryExprModel>(_1a3b665ea_UnaryExprModel{._field_Expr=jule::new_ptr<_1a3c8982d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a3caa7b6_caret(_1a3ca9c7c_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1a9948184:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a3cbd378_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a994856e:;
			{
				if ((!(_1b57470ba_IsInt(_1a3cbb0e0_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a3cbe8eb_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9947d43:;
			{
				if (((*(_1a3cbe8eb_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a9947ccc:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a9947bcd:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a3c8a235_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b574bb6e_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a994c870:;
				{
					_1b574ab18_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1b5749573_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1b574be05_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a994c95d:;
				{
					_1b574adc1_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1b5749809_ReadU64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1a994c4b8:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3203:5"));;
				}
			}
			_match_end_1a994c41e:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a3b665ea_UnaryExprModel>(_1a3b665ea_UnaryExprModel{._field_Expr=jule::new_ptr<_1a3c8982d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a3caa9b4_excl(_1a3ca9c7c_unaryEval* _self_) {
	jule::Ptr<_1a3cc3801_Prim> _32173_t = _1a3cbd378_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_32173_t == nullptr) || (!(_1a3cc6a02_IsBool(_32173_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a3c8a235_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b574c18b_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a9953ada:;
				{
					_1b574b179_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1b5749a90_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1a9953733:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3231:5"));;
				}
			}
			_match_end_1a9953678:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a3b665ea_UnaryExprModel>(_1a3b665ea_UnaryExprModel{._field_Expr=jule::new_ptr<_1a3c8982d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a3caabb2_star(_1a3ca9c7c_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1a3b665ea_UnaryExprModel>(_1a3b665ea_UnaryExprModel{._field_Expr=jule::new_ptr<_1a3c8982d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1a3cbd895_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a995743a:;
			{
				if ((!(_1a3c8c59a_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1a3c8baa5_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a3ccaae4_Ptr> _32568_t = _1a3cbd895_Ptr((*((*(_self_))._field_d))._field_Kind);;
				if (_1a3ccb62d_IsUnsafe(_32568_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_32568_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1a3cbd60e_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9957825:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1a3cbd60e_Sptr((*((*(_self_))._field_d))._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1a9957083:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a99560a4:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1a3caadb0_amper(_1a3ca9c7c_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a9960a09:;
			{
				jule::Ptr<_1a3b66ebe_StructLitExprModel> _32788_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1a3b66ebe_StructLitExprModel>();;
				_1a3cb3aee_makeStructLitAlloc(&((*(_self_))._field_d), &(_32788_lit));
			}
		}
		else {
			_case_begin_1a995ce8a:;
			{
				{
					
					if (_1a3cd6b11_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1a995d84d:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3ccaae4_Ptr>(_1a3ccaae4_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data26)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a3b665ea_UnaryExprModel>(_1a3b665ea_UnaryExprModel{._field_Expr=jule::new_ptr<_1a3c8982d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1a995ca8e:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1a995d41e:;
				};
			}
		}
		_match_end_1a995ce35:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1a3cab0ad_typeDecl(_1a3ca9c7c_unaryEval* _self_) {
	_1a3cccad5_typeChecker _33037_tc = _1a3cccad5_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a9964557:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd2ec5_buildPtrFromType(&_33037_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data26)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a9966070:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd2843_buildSptrFromType(&_33037_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data21)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else {
			_case_begin_1a9963b72:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a99641b1:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1a3cab2ab_evalData(_1a3ca9c7c_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a9969bde:;
			{
				jule::Ptr<_1a3cbac27_TypeKind> _33288_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1a3ca9133_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_33288_prefix;
			}
		}
		else {
			_case_begin_1a9964227:;
			{
				(*(_self_))._field_d=_1a3ca9133_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1a99697e3:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cab5ec_eval(_1a3ca9c7c_unaryEval* _self_, jule::Ptr<_1a3b4452e_UnaryExpr> _333724_u) {
	(*(_self_))._field_u=_333724_u;
	_1a3cab2ab_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1a3cab0ad_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1a3cbac27_TypeKind> _33483_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1a996e364:;
			{
				_1a3caa3ba_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1a996e3ca:;
			{
				_1a3caa5b8_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a996e441:;
			{
				_1a3caa7b6_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1a996e4a7:;
			{
				_1a3caa9b4_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a996e51d:;
			{
				_1a3caabb2_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a996e584:;
			{
				_1a3caadb0_amper(_self_);
			}
		}
		else {
			_case_begin_1a996dd25:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1a996e2ed:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1a996ea7e:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str(_33483_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1a3c8a235_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1a996ca27:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1a9971597:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3ca9c7c_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3cabc18_binaryEval_eq(_1a3cabc18_binaryEval *_self_, _1a3cabc18_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _1a3cabc18_binaryEval static__1a3cac2bd_newPlain(jule::Ptr<_1a3c8b555_Eval> _338525_e) {
	return _1a3cabc18_binaryEval{._field_e=_338525_e, };;
}



inline _1a3cabc18_binaryEval static__1a3cac642_new(jule::Ptr<_1a3c8b555_Eval> _339120_e, jule::Ptr<_1a3b27a62_Token> _339134_op) {
	return _1a3cabc18_binaryEval{._field_e=_339120_e, ._field_op=_339134_op};;
}



inline jule::Bool _1a3cac8c8_checkTypeCompatibility(_1a3cabc18_binaryEval* _self_) {
	return _1a3c155cd_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1a3cacb5e_checkStructCommonOperatorCompatibility(_1a3cabc18_binaryEval* _self_) {
	jule::Ptr<_1a3b770cd_FnIns> _340511_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1a9976d0b:;
			{
				_340511_overload=(*(_1a3cbe8eb_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a99769ba:;
			{
				_340511_overload=(*(_1a3cbe8eb_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1a9976a31:;
			{
				_340511_overload=(*(_1a3cbe8eb_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1a9976a97:;
			{
				_340511_overload=(*(_1a3cbe8eb_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1a9976b0d:;
			{
				_340511_overload=(*(_1a3cbe8eb_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a9976b74:;
			{
				_340511_overload=(*(_1a3cbe8eb_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a9976bda:;
			{
				_340511_overload=(*(_1a3cbe8eb_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a99782e6:;
			{
				_340511_overload=(*(_1a3cbe8eb_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1a997835c:;
			{
				_340511_overload=(*(_1a3cbe8eb_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a99783c3:;
			{
				_340511_overload=(*(_1a3cbe8eb_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1a9976459:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1a9976954:;
	};
	if ((_340511_overload == nullptr)) {
		_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1a3b76055_ParamIns> _34377_p = (*(_340511_overload))._field_Params[1LL];;
	return _1a3c1429c_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_34377_p))._field_Decl))._field_Reference, &((*_34377_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cacde5_evalComptimeTypeInfo(_1a3cabc18_binaryEval* _self_) {
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _34427_r = _1a3cc1c3e_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_34427_r == nullptr)) {
		_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _34477_l = _1a3cc1c3e_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1a9986e81:;
			{
				jule::Ptr<_1b5747b9d_Const> _34508_constant = static__1b5748671_NewBool(_1a3cbb431_Equal((*(_34477_l))._field_base, (*(_34427_r))._field_base));;
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, ._field_Model=jule::Any(_34508_constant, &__jule_any_type19), ._field_Constant=_34508_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a9988317:;
			{
				jule::Ptr<_1b5747b9d_Const> _34578_constant = static__1b5748671_NewBool((!(_1a3cbb431_Equal((*(_34477_l))._field_base, (*(_34427_r))._field_base))));;
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, ._field_Model=jule::Any(_34578_constant, &__jule_any_type19), ._field_Constant=_34578_constant});;
			}
		}
		else {
			_case_begin_1a99867dd:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9986ac9:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cad17b_evalNil(_1a3cabc18_binaryEval* _self_) {
	if ((!(_1a3cbcac5_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a998cae1:;
			{
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		else {
			_case_begin_1a998a957:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a998c739:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cad412_evalEnum(_1a3cabc18_binaryEval* _self_) {
	jule::Ptr<_1a3b8a289_Enum> _34887_enm = _1a3cbdb2b_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a998edbd:;
			{
				jule::Ptr<_1a3cbac27_TypeKind> _34928_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1a3cbdb2b_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
					_34928_rkind=(*((*(_1a3cbdb2b_Enum((*((*(_self_))._field_r))._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1a3c14c09_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_34887_enm))._field_Kind.alloc)._field_Kind), &(_34928_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		_match_end_1a998ed57:;
	};
	if (((_1a3cbdb2b_Enum((*((*(_self_))._field_r))._field_Kind) == nullptr) || (_34887_enm != _1a3cbdb2b_Enum((*((*(_self_))._field_r))._field_Kind)))) {
		_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_34887_enm))._field_Ident, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a9995874:;
			{
				if ((!(_1b5747692_IsNum(_1a3cbb0e0_Str((*(*(_34887_enm))._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_34887_enm.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a99968a8:;
			{
				jule::Ptr<_1a3b8971c_EnumItem> _35224_first = (*_34887_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1b574bb6e_IsI64((*((*((*(_35224_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1a9999e94:;
						{
							if ((_1b5749573_ReadI64((*((*((*(_35224_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1a999eeaa;
							};
							goto _julec_label_1a999b1a4;
						}
					}
					else if (_1b574be05_IsU64((*((*((*(_35224_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1a999a082:;
						{
							if ((_1b5749809_ReadU64((*((*((*(_35224_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1a999eeaa;
							};
							goto _julec_label_1a999b1a4;
						}
					}
					else {
						_case_begin_1a9999adc:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3535:5"));;
						}
					}
					_match_end_1a9999a76:;
				};
				_julec_label_1a999b1a4:;
				_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*_34887_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1a3c8be18_pushSuggestion((*(_self_))._field_e, jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1a999eeaa:;
				goto _case_begin_1a999691e;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a999691e:;
			{
				if (((_1a3cbd378_Prim((*(*(_34887_enm))._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_1b57470ba_IsInt(_1a3cc3b42_Str(_1a3cbd378_Prim((*((*(_34887_enm))._field_Kind))._field_Kind).ptr())))))) {
					_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_34887_enm.alloc)._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a99923ed:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_34887_enm.alloc)._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a99954bc:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cad698_evalTypeEnum(_1a3cabc18_binaryEval* _self_) {
	jule::Ptr<_1a3b8b994_TypeEnum> _35557_enm = _1a3cbddb2_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1a3cac8c8_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a99a4c18:;
			{
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		else {
			_case_begin_1a99a409c:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3b8bcd5_Str(_35557_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a99a481c:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cad92e_evalSptr(_1a3cabc18_binaryEval* _self_) {
	if ((!(_1a3cac8c8_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a99a7105:;
			{
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		else {
			_case_begin_1a99a606b:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a99a6c4d:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cadbb5_evalPtr(_1a3cabc18_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a99a9338:;
			{
				if ((!(_1a3cac8c8_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1a99aa6be:;
			{
				if ((_1a3cbd895_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1a3ccb62d_IsUnsafe(_1a3cbd895_Ptr((*((*(_self_))._field_l))._field_Kind).ptr())) {
					_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4)}));
				};
				if ((!(_1a3cb4c87_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a99a8a52:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a99a88a9:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cade4b_evalArr(_1a3cabc18_binaryEval* _self_) {
	if ((!(_1a3cac8c8_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a99b1dce:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_1a3b770cd_FnIns> _36329_f = _1a3b755c6_instanceForce(_1b5707ec1_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), jule::Str::lit("arrayCmp", 8)));;
					(*(_36329_f))._field_Generics=jule::append((*_36329_f.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a3cb9341_InsGeneric>>::make({jule::new_ptr<_1a3cb9341_InsGeneric>(_1a3cb9341_InsGeneric{._field_Kind=(*(_1a3cbe148_Arr((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Elem, })}));
					jule::Bool _36345_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a3c24411_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_36329_f), &((*(_self_))._field_op));
						_36345_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_36345_ok))) {
						jule::panic(jule::Str::lit("arrayCmp evaluation failed, this is an implementation mistake", 61) + jule::Str("\nlocation: std/jule/sema/eval.jule:3636:6"));;
					};
				};
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		else {
			_case_begin_1a99ac0c7:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a99b1a27:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cae1d2_evalSlc(_1a3cabc18_binaryEval* _self_) {
	if ((!(_1a3cac8c8_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a99b7c09:;
			{
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		else {
			_case_begin_1a99b74de:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a99b7852:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cae468_evalStruct(_1a3cabc18_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1a99b9579:;
			{
				if (((*(_1a3cbe8eb_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a99b9b95:;
			{
				if (((*(_1a3cbe8eb_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1a99b9c0b:;
			{
				if (((*(_1a3cbe8eb_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a99b9c72:;
			{
				if (((*(_1a3cbe8eb_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a99b9cd8:;
			{
				if ((!(_1a3cac8c8_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		_match_end_1a99b94ad:;
	};
	if ((!(_1a3cacb5e_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cae6ee_evalTrait(_1a3cabc18_binaryEval* _self_) {
	if ((!(_1a3cac8c8_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a99c5b3a:;
			{
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		else {
			_case_begin_1a99c5002:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a99c5783:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cae985_evalAny(_1a3cabc18_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a99c7d6d:;
			{
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		else {
			_case_begin_1a99c7587:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a99c73de:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3caec1b_evalBool(_1a3cabc18_binaryEval* _self_) {
	if ((!(_1a3cac8c8_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1a99ca06d:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a99c8ed4:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a99c9bb6:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3caeea2_evalStr(_1a3cabc18_binaryEval* _self_) {
	jule::Str _37637_rk = _1a3cbb0e0_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_37637_rk.equal("str", 3))) {
		_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_37637_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1a99cdd41:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a99cebcc:;
			{
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		else {
			_case_begin_1a99ccb42:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a99cd945:;
	};
}



inline void _1a3cb01a0_setTypeToGreater(_1a3cabc18_binaryEval* _self_) {
	jule::Ptr<_1a3cc3801_Prim> _37883_lp = _1a3cbd378_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1a3cc3801_Prim> _37893_rp = _1a3cbd378_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (_1a3c8a235_IsConst((*(_self_))._field_l)) {
		if ((!(_1a3c8a235_IsConst((*(_self_))._field_r.ptr())))) {
			(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
			(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_37893_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1a99d4660;
	};
	if (_1a3c8a235_IsConst((*(_self_))._field_r)) {
		(*(*((*(_self_))._field_r))._field_Constant.alloc)._field_Kind=(*(_37883_lp))._field_Kind;
		return;;
	};
	_julec_label_1a99d4660:;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*(*(_self_))._field_r.alloc)._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1a3c8a235_IsConst((*(_self_))._field_l)) {
			(*(*((*(_self_))._field_l))._field_Constant.alloc)._field_Kind=(*_37893_rp.alloc)._field_Kind;
		};
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
		return;;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return;;
	};
	if (_1b574587c_IsGreater((*_37893_rp.alloc)._field_Kind, (*_37883_lp.alloc)._field_Kind)) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1a3c8a235_IsConst((*(_self_))._field_l)) {
			(*(*((*(_self_))._field_l))._field_Constant.alloc)._field_Kind=(*_37893_rp.alloc)._field_Kind;
		};
	};
}



inline void _1a3cb0458_checkModData(_1a3cabc18_binaryEval* _self_, jule::Ptr<_1a3c8982d_Data>* _382133_d) {
	if ((!(_1a3c8a235_IsConst((*(_382133_d)).ptr())))) {
		if (((_1a3cbd378_Prim((*((*(_382133_d))))._field_Kind.ptr()) == nullptr) || (!(_1b57470ba_IsInt((*(_1a3cbd378_Prim((*((*(_382133_d))))._field_Kind)))._field_Kind))))) {
			_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1a3c707c0_sigAssignable(jule::Str::lit("i64", 3), _382133_d)) {
			_case_begin_1a99dc47b:;
			{
				_1b574ab18_SetI64((*((*(_382133_d))))._field_Constant.ptr(), _1b574a343_AsI64((*((*(_382133_d))))._field_Constant));
			}
		}
		else if (_1a3c70b88_unsigAssignable(jule::Str::lit("u64", 3), _382133_d)) {
			_case_begin_1a99dc15c:;
			{
				_1b574adc1_SetU64((*((*(_382133_d))))._field_Constant.ptr(), _1b574a5c9_AsU64((*((*(_382133_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1a99dc0e6:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a99dc080:;
	};
}



inline void _1a3cb0656_mod(_1a3cabc18_binaryEval* _self_) {
	_1a3cb0458_checkModData(_self_, &((*(_self_))._field_l));
	_1a3cb0458_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1a3cb0a52_numbersAreCompatibile(_1a3cabc18_binaryEval* _self_, jule::Str* _384334_lk, jule::Str* _384344_rk) {
	if ((!(_1b5747692_IsNum((*(_384344_rk)))))) {
		return false;;
	};
	if ((_1a3c8a235_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if ((*(_384334_lk)).equal("f32", 3)) {
		if ((_1a3c8a235_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1a3c7044b_floatAssignable(_384334_lk, &((*(_self_))._field_r));;
		};
		return (*(_384344_rk)).equal("f32", 3);;
	};
	if ((*(_384334_lk)).equal("f64", 3)) {
		if ((_1a3c8a235_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1a3c7044b_floatAssignable(_384334_lk, &((*(_self_))._field_r));;
		};
		return (*(_384344_rk)).equal("f64", 3);;
	};
	if ((_1a3c8a235_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1a3c7100c_intAssignable((*(_384334_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_384334_lk)) == (*(_384344_rk)));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cb0cd8_evalFloat(_1a3cabc18_binaryEval* _self_) {
	jule::Str _38693_lk = (*(_1a3cbd378_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38703_rk = (*(_1a3cbd378_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1a3cb0a52_numbersAreCompatibile(_self_, &(_38693_lk), &(_38703_rk))))) {
		_1a3c15127_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a99e7387:;
			{
				if (((!(_1a3c8a235_IsConst((*(_self_))._field_l))) || (!(_1a3c7100c_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38693_lk, &__jule_any_type4),jule::Any(_38703_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1a3c8a235_IsConst((*(_self_))._field_r.ptr()))) || (!(_1a3c7100c_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38693_lk, &__jule_any_type4),jule::Any(_38703_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1b574ab18_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1b574a343_AsI64((*((*(_self_))._field_l))._field_Constant));
				_1b574adc1_SetU64((*((*(_self_))._field_r))._field_Constant, _1b574a5c9_AsU64((*((*(_self_))._field_r))._field_Constant));
				if ((!(_1a3cb45b1_isOkForShifting(&((*(_self_))._field_r))))) {
					_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1a99e7321:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a99e740e:;
			{
				_1a3cb01a0_setTypeToGreater(_self_);
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		_match_end_1a99e94aa:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1a99ee757:;
			{
				_1a3cb01a0_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a9a0045b:;
			{
				if ((!(_1b57470ba_IsInt(_38703_rk)))) {
					_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38693_lk, &__jule_any_type4),jule::Any(_38703_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1a3cb0656_mod(_self_);
				_1a3cb01a0_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1a99e7ad5:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a99edba7:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cb106e_evalInt(_1a3cabc18_binaryEval* _self_) {
	jule::Str _39333_lk = (*(_1a3cbd378_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _39343_rk = (*(_1a3cbd378_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a9a03e87:;
			{
				if (((!(_1b57470ba_IsInt(_39333_lk))) || (!(_1b57470ba_IsInt(_39343_rk))))) {
					_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_39333_lk, &__jule_any_type4),jule::Any(_39343_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1a3cb45b1_isOkForShifting(&((*(_self_))._field_r))))) {
					_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1a9a04273:;
	};
	if ((!(_1a3cb0a52_numbersAreCompatibile(_self_, &(_39333_lk), &(_39343_rk))))) {
		_1a3c15127_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a9a07aa1:;
			{
				return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e345aa_primBool, });;
			}
		}
		_match_end_1a9a07a3a:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a9a09366:;
			{
				_1a3cb01a0_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a9a0a06a:;
			{
				_1a3cb0656_mod(_self_);
				_1a3cb01a0_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a9a07b8e:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9a08e6a:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cb1305_evalPrim(_1a3cabc18_binaryEval* _self_) {
	jule::Ptr<_1a3cc3801_Prim> _39903_prim = _1a3cbd378_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1a3cc6a02_IsBool(_39903_prim.ptr())) {
			_case_begin_1a9a0c743:;
			{
				return _1a3caec1b_evalBool(_self_);;
			}
		}
		else if (_1a3cc6c88_IsStr(_39903_prim.ptr())) {
			_case_begin_1a9a0c7dc:;
			{
				return _1a3caeea2_evalStr(_self_);;
			}
		}
		_match_end_1a9a0c6bb:;
	};
	if ((_1a3cbd378_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a3cc3b42_Str(_39903_prim.ptr()), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_1b574740b_IsFloat((*_39903_prim.alloc)._field_Kind)) {
			_case_begin_1a9a1025c:;
			{
				return _1a3cb0cd8_evalFloat(_self_);;
			}
		}
		else if (_1b57470ba_IsInt((*_39903_prim.alloc)._field_Kind)) {
			_case_begin_1a9a102e5:;
			{
				return _1a3cb106e_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1a9a101e6:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9a0d920:;
	};
}



inline void _1a3cb1503_checkSpecialCases(_1a3cabc18_binaryEval* _self_) {
	if (((!(_1a3cbc322_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1a3cbbd05_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4)}));
	} else if (((!(_1a3cbc322_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1a3cbbd05_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cb1789_evalOp(_1a3cabc18_binaryEval* _self_) {
	_1a3cb1503_checkSpecialCases(_self_);
	{
		
		if (_1a3cbc08b_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1a9a15b36:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1a3cc1c3e_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a16ebc:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a9a17033;
			}
		}
		else if ((_1a3cc1c3e_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a17033:;
			{
				return _1a3cacde5_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1a3cbd378_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1a3cc701e_IsAny(_1a3cbd378_Prim((*((*(_self_))._field_r))._field_Kind).ptr()))) {
			_case_begin_1a9a1598d:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a9a15a04;
			}
		}
		else if (_1a3cbbd05_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1a9a15a04:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a9a17121;
			}
		}
		else if (_1a3cbbd05_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1a9a17121:;
			{
				return _1a3cad17b_evalNil(_self_);;
			}
		}
		else if (((_1a3cbd378_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1a3cc701e_IsAny(_1a3cbd378_Prim((*((*(_self_))._field_l))._field_Kind).ptr()))) {
			_case_begin_1a9a17187:;
			{
				return _1a3cae985_evalAny(_self_);;
			}
		}
		else if ((_1a3cbddb2_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a171ed:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a9a17264;
			}
		}
		else if ((_1a3cbddb2_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a17264:;
			{
				return _1a3cad698_evalTypeEnum(_self_);;
			}
		}
		else if ((_1a3cbdb2b_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a172ca:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a9a17341;
			}
		}
		else if ((_1a3cbdb2b_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a17341:;
			{
				return _1a3cad412_evalEnum(_self_);;
			}
		}
		else if ((_1a3cbd60e_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a173a7:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a9a1741d;
			}
		}
		else if ((_1a3cbd60e_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a1741d:;
			{
				return _1a3cad92e_evalSptr(_self_);;
			}
		}
		else if ((_1a3cbd895_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a17484:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a9a174ea;
			}
		}
		else if ((_1a3cbd895_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a174ea:;
			{
				return _1a3cadbb5_evalPtr(_self_);;
			}
		}
		else if ((_1a3cbe148_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a17561:;
			{
				return _1a3cade4b_evalArr(_self_);;
			}
		}
		else if ((_1a3cbe3ce_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a175c7:;
			{
				return _1a3cae1d2_evalSlc(_self_);;
			}
		}
		else if ((_1a3cbeb82_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a1763d:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a9a176a4;
			}
		}
		else if ((_1a3cbeb82_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a176a4:;
			{
				return _1a3cae6ee_evalTrait(_self_);;
			}
		}
		else if ((_1a3cbe8eb_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a1771a:;
			{
				return _1a3cae468_evalStruct(_self_);;
			}
		}
		else if ((_1a3cbd378_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a17781:;
			{
				return _1a3cb1305_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1a9a15394:;
			{
				_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9a1576d:;
	};
}



inline void _1a3cb1a42_evalConst(_1a3cabc18_binaryEval* _self_, jule::Ptr<_1a3c8982d_Data>* _408130_d) {
	{
		
		if (((*(_408130_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1a9a2a5eb:;
			{
				return;;
			}
		}
		else if ((!(_1a3c8a235_IsConst((*(_self_))._field_l.ptr()))) || (!(_1a3c8a235_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1a9a2ab90:;
			{
				(*((*(_408130_d))))._field_Constant=nullptr;
				(*((*(_408130_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1a9a2a4ec:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1a9a2ac6c:;
			{
				(*((*(_408130_d))))._field_Constant=static__1b5748671_NewBool(_1b574d753_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a9a2d19d:;
			{
				(*((*(_408130_d))))._field_Constant=static__1b5748671_NewBool((!(_1b574d753_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1a9a2d214:;
			{
				(*((*(_408130_d))))._field_Constant=static__1b5748671_NewBool(_1b574d412_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1a9a2d27a:;
			{
				(*((*(_408130_d))))._field_Constant=static__1b5748671_NewBool(_1b574d0c1_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1a9a2d2e1:;
			{
				(*((*(_408130_d))))._field_Constant=static__1b5748671_NewBool(_1b574e226_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1a9a2d357:;
			{
				(*((*(_408130_d))))._field_Constant=static__1b5748671_NewBool(_1b574da94_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a9a2d3ce:;
			{
				(*((*(_408130_d))))._field_Constant=static__1b5748671_NewBool(_1b574e567_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a9a2d456:;
			{
				(*((*(_408130_d))))._field_Constant=static__1b5748671_NewBool(_1b574ddd5_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1a9a2d4cd:;
			{
				_1b574e8a8_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_408130_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1a9a2d555:;
			{
				_1b574ebe9_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_408130_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a9a2d5cc:;
			{
				_1b575003a_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_408130_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1a9a2d654:;
			{
				jule::Bool _41214_ok = _1b575037b_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_41214_ok)) && (_1b574a860_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_408130_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1a3cc3801_Prim> _41268_prim = _1a3cbd378_Prim((*((*(_408130_d))))._field_Kind.ptr());;
				{
					
					if (_1b57469e3_IsSigInt((*(_41268_prim))._field_Kind)) {
						_case_begin_1a9a3e6cb:;
						{
							_1b574ab18_SetI64((*((*(_408130_d))))._field_Constant, _1b574a343_AsI64((*((*(_408130_d))))._field_Constant));
						}
					}
					else if (_1b5746d01_IsUnsigInt((*(_41268_prim))._field_Kind)) {
						_case_begin_1a9a3e775:;
						{
							_1b574adc1_SetU64((*((*(_408130_d))))._field_Constant, _1b574a5c9_AsU64((*((*(_408130_d))))._field_Constant));
						}
					}
					_match_end_1a9a3e665:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a9a2d6cb:;
			{
				jule::Bool _41344_ok = _1b57506bc_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_41344_ok)) && (_1b574a860_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_408130_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1a9a2d753:;
			{
				_1b5750d4e_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_408130_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a9a2d7ca:;
			{
				_1b5750a0d_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_408130_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a9a2d852:;
			{
				_1b5751190_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_408130_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1a9a2d8c9:;
			{
				_1b57514d1_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_408130_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a9a2d951:;
			{
				_1b5751822_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_408130_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1a9a2c499:;
	};
	(*((*(_408130_d))))._field_Model=jule::Any((*((*(_408130_d))))._field_Constant, &__jule_any_type19);
	_1a3cb5ded_applyCastModelByEnum(_408130_d, _1a3cbdb2b_Enum((*((*(_408130_d))))._field_Kind.ptr()), &((*(_self_))._field_op));
}



inline void _1a3cb1cea_checkData(_1a3cabc18_binaryEval* _self_, jule::Ptr<_1a3c8982d_Data>* _415930_d) {
	jule::Ptr<_1a3b770cd_FnIns> _41603_f = _1a3cbe665_Fn((*((*(_415930_d))))._field_Kind.ptr());;
	if ((((_41603_f != nullptr) && ((*_41603_f.alloc)._field_Decl != nullptr)) && _1a3b74806_IsMethod((*(_41603_f))._field_Decl))) {
		_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1a3cb1ee8_checkDatas(_1a3cabc18_binaryEval* _self_) {
	_1a3cb1cea_checkData(_self_, &((*(_self_))._field_l));
	_1a3cb1cea_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1a3cb22a1_setModel(_1a3cabc18_binaryEval* _self_, jule::Ptr<_1a3c8982d_Data>* _417129_d) {
	if (_1a3c8a235_IsConst((*(_417129_d)).ptr())) {
		if (((_1a3c8a235_IsConst((*(_self_))._field_l.ptr()) && _1a3c8a235_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1a3c8982d_Data> _41807_l;
	jule::Ptr<_1a3c8982d_Data> _418014_r;
	({
		jule::Ptr<_1a3c8982d_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1a3c8982d_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_41807_l = ___jule_assign_arg;
		_418014_r = _1___jule_assign_arg;
	});
	if ((!(_1a3c8a576_GoodOperand(_41807_l, &(_418014_r))))) {
		std::swap(_41807_l, _418014_r);
	};
	(*((*(_417129_d))))._field_Model=jule::Any(jule::new_ptr<_1a3b66221_BinaryExprModel>(_1a3b66221_BinaryExprModel{._field_Left=jule::new_ptr<_1a3b65c26_OperandExprModel>(_1a3b65c26_OperandExprModel{._field_Kind=(*_41807_l.alloc)._field_Kind, ._field_Model=(*_41807_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1a3b65c26_OperandExprModel>(_1a3b65c26_OperandExprModel{._field_Kind=(*_418014_r.alloc)._field_Kind, ._field_Model=(*_418014_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1a3cb2559_postEval(_1a3cabc18_binaryEval* _self_, jule::Ptr<_1a3c8982d_Data>* _419829_d) {
	(*((*(_419829_d))))._field_Lvalue=false;
	_1a3cb22a1_setModel(_self_, _419829_d);
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cb2955_solveExplicit(_1a3cabc18_binaryEval* _self_, jule::Ptr<_1a3c8982d_Data>* _420334_l, jule::Ptr<_1a3c8982d_Data>* _420349_r) {
	({
		jule::Ptr<_1a3c8982d_Data> ___jule_assign_arg = (*(_420334_l));
		jule::Ptr<_1a3c8982d_Data> _1___jule_assign_arg = (*(_420349_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a3cb1ee8_checkDatas(_self_);
	jule::Ptr<_1a3c8982d_Data> _42087_d = _1a3cb1789_evalOp(_self_);;
	({
		jule::Ptr<_1a3c8982d_Data> ___jule_assign_arg = (*(_420334_l));
		jule::Ptr<_1a3c8982d_Data> _1___jule_assign_arg = (*(_420349_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a3cb1a42_evalConst(_self_, &(_42087_d));
	if ((_42087_d != nullptr)) {
		(*_42087_d.alloc)._field_Mutable=true;
		_1a3cb2559_postEval(_self_, &(_42087_d));
	};
	return _42087_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cb2c96_eval(_1a3cabc18_binaryEval* _self_, jule::Ptr<_1a3b45a3b_BinaryExpr>* _422325_op) {
	if (((*((*((*(_422325_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1a3c8baa5_pushErr((*(_self_))._field_e.ptr(), (*((*(_422325_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1a3c8be18_pushSuggestion((*(_self_))._field_e, jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3c8982d_Data> _42307_l = _1a3ca9474_evalExpr1((*(_self_))._field_e, (*((*(_422325_op))))._field_Left);;
	if (((_42307_l == nullptr) || ((*(_42307_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1a3cbac27_TypeKind> _42357_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_42307_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_42357_prefix;
	});;
	jule::Ptr<_1a3c8982d_Data> _42387_r = _1a3ca9474_evalExpr1((*(_self_))._field_e, (*((*(_422325_op))))._field_Right);;
	if (((_42387_r == nullptr) || ((*(_42387_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_422325_op))))._field_Op;
	jule::Ptr<_1a3c8982d_Data> _42457_d = _1a3cb2955_solveExplicit(_self_, &(_42307_l), &(_42387_r));;
	if ((((_42457_d != nullptr) && (*(_42307_l))._field_IsRune) && (*(_42387_r))._field_IsRune)) {
		(*_42457_d.alloc)._field_IsRune=true;
	};
	return _42457_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3cabc18_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3cb9341_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3cb9e35_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3cbac27_TypeKind_eq(_1a3cbac27_TypeKind *_self_, _1a3cbac27_TypeKind _other_) {
	return 
		(_self_->_field_BindIdent == _other_._field_BindIdent) &&
		(_self_->_field_Generic == _self_->_field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1a3cbb0e0_Str(_1a3cbac27_TypeKind* _self_) {
	if (_1a3cbbd05_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1e7be2632_StrBuilder _747_kind = static__1e7be28eb_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_1e7beb262_WriteStr(&_747_kind, jule::Str::lit("...", 3));
	};
	if (_1a3cbba6e_Binded(_self_)) {
		_1e7beb262_WriteStr(&_747_kind, jule::Str::lit("cpp.", 4));
		_1e7beb262_WriteStr(&_747_kind, (*(_self_))._field_BindIdent);
	} else {
		_1e7beb262_WriteStr(&_747_kind, ((_1a3cba771_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1a3cba2cb_Str((*(_self_))._field_Kind.data));
	};
	return _1e7beba59_Str(&_747_kind);;
}



inline jule::Bool _1a3cbb431_Equal(jule::Ptr<_1a3cbac27_TypeKind> _self_, jule::Ptr<_1a3cbac27_TypeKind> _9018_other) {
	if (_1a3cbbd05_IsNil(_self_.ptr())) {
		return _1a3cbbd05_IsNil(_9018_other.ptr());;
	};
	if (_1a3cbba6e_Binded(_self_)) {
		return (_1a3cbba6e_Binded(_9018_other) && ((*_self_.alloc)._field_BindIdent == (*_9018_other.alloc)._field_BindIdent));;
	};
	return ((_1a3cba771_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1a3cba61c_Equal((*_self_.alloc)._field_Kind.data, _9018_other);;
}



inline jule::Bool _1a3cbba6e_Binded(_1a3cbac27_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1a3cbbd05_IsNil(_1a3cbac27_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1a3cbc08b_Void(_1a3cbac27_TypeKind* _self_) {
	jule::Ptr<_1a3cc3801_Prim> _1103_prim = _1a3cbd378_Prim(_self_);;
	return ((_1103_prim != nullptr) && (*(_1103_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1a3cbc322_Comparable(_1a3cbac27_TypeKind* _self_) {
	{
		_1a3cbac27_TypeKind* _1178__self = _self_;;
		if ((_1a3cbe8eb_Struct(_1178__self) != nullptr)) {
			return (*(_1a3cbe8eb_Struct(_1178__self)))._field_Comparable;;
		};
		return (((_1a3cbee18_Map(_1178__self) == nullptr) && (_1a3cbe3ce_Slc(_1178__self) == nullptr)) && (_1a3cbe665_Fn(_1178__self) == nullptr));;
	};
}



inline jule::Bool _1a3cbc5a8_Mutable(_1a3cbac27_TypeKind* _self_) {
	{
		_1a3cbac27_TypeKind* _1288__self = _self_;;
		if ((_1a3cbe8eb_Struct(_1288__self) != nullptr)) {
			return (*(_1a3cbe8eb_Struct(_1288__self)))._field_Mutable;;
		};
		if ((_1a3cbeb82_Trait(_1288__self) != nullptr)) {
			return true;;
		};
		if ((_1a3cbd378_Prim(_1288__self) != nullptr)) {
			jule::Ptr<_1a3cc3801_Prim> _1365_p = _1a3cbd378_Prim(_1288__self);;
			return _1a3cc701e_IsAny(_1365_p.ptr());;
		};
		if ((_1a3cbe148_Arr(_1288__self) != nullptr)) {
			return _1a3cbc5a8_Mutable((*(_1a3cbe148_Arr(_1288__self)))._field_Elem.ptr());;
		};
		return (((_1a3cbe3ce_Slc(_1288__self) != nullptr) || (_1a3cbd895_Ptr(_1288__self) != nullptr)) || (_1a3cbd60e_Sptr(_1288__self) != nullptr));;
	};
}



inline jule::Bool _1a3cbc83e_Ordered(_1a3cbac27_TypeKind* _self_) {
	{
		_1a3cbac27_TypeKind* _1518__self = _self_;;
		jule::Ptr<_1a3cc3801_Prim> _1524_prim = _1a3cbd378_Prim(_1518__self);;
		if ((_1524_prim != nullptr)) {
			return (_1b5747692_IsNum((*_1524_prim.alloc)._field_Kind) || _1a3cc6c88_IsStr(_1524_prim));;
		};
		if ((_1a3cbd895_Ptr(_1518__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1a3b61cbb_StructIns> _1594_s = _1a3cbe8eb_Struct(_1518__self);;
		if ((_1594_s != nullptr)) {
			return (((((*_1594_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1594_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1594_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1594_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1a3b8a289_Enum> _1664_enm = _1a3cbdb2b_Enum(_1518__self);;
		if ((_1664_enm != nullptr)) {
			return _1b5747692_IsNum(_1a3cbb0e0_Str((*((*_1664_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1a3cbcac5_NilCompatible(_1a3cbac27_TypeKind* _self_) {
	{
		_1a3cbac27_TypeKind* _1778__self = _self_;;
		jule::Ptr<_1a3cc3801_Prim> _1794_prim = _1a3cbd378_Prim(_1778__self);;
		if (((_1794_prim != nullptr) && _1a3cc701e_IsAny(_1794_prim))) {
			return true;;
		};
		return (((((((_1a3cbbd05_IsNil(_1778__self) || (_1a3cbe665_Fn(_1778__self) != nullptr)) || (_1a3cbd60e_Sptr(_1778__self) != nullptr)) || (_1a3cbd895_Ptr(_1778__self) != nullptr)) || (_1a3cbeb82_Trait(_1778__self) != nullptr)) || (_1a3cbe3ce_Slc(_1778__self) != nullptr)) || (_1a3cbee18_Map(_1778__self) != nullptr)) || (_1a3cbddb2_TypeEnum(_1778__self) != nullptr));;
	};
}



inline jule::Bool _1a3cbcd5b_PerformsRC(_1a3cbac27_TypeKind* _self_) {
	{
		_1a3cbac27_TypeKind* _1988__self = _self_;;
		jule::Ptr<_1a3cc3801_Prim> _1994_prim = _1a3cbd378_Prim(_1988__self);;
		if ((_1994_prim != nullptr)) {
			return (_1a3cc701e_IsAny(_1994_prim) || _1a3cc6c88_IsStr(_1994_prim));;
		};
		return (((_1a3cbd60e_Sptr(_1988__self) != nullptr) || (_1a3cbe3ce_Slc(_1988__self) != nullptr)) || (_1a3cbeb82_Trait(_1988__self) != nullptr));;
	};
}



inline jule::Bool _1a3cbd0e2_Variadicable(_1a3cbac27_TypeKind* _self_) {
	{
		_1a3cbac27_TypeKind* _2108__self = _self_;;
		return (_1a3cbe3ce_Slc(_2108__self) != nullptr);;
	};
}



inline jule::Ptr<_1a3cc3801_Prim> _1a3cbd378_Prim(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)) {
			_case_begin_1a9a78b44:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3cc3801_Prim>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1a9a91b29:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9a91ac4:;
	};
}



inline jule::Ptr<_1a3cc732c_Sptr> _1a3cbd60e_Sptr(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data21)) {
			_case_begin_1a9a92762:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3cc732c_Sptr>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1a9a92993:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9a9293d:;
	};
}



inline jule::Ptr<_1a3ccaae4_Ptr> _1a3cbd895_Ptr(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data26)) {
			_case_begin_1a9a93488:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3ccaae4_Ptr>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1a9a936db:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9a93686:;
	};
}



inline jule::Ptr<_1a3b8a289_Enum> _1a3cbdb2b_Enum(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data3)) {
			_case_begin_1a9a941d1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3b8a289_Enum>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1a9a94412:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9a943ac:;
	};
}



inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3cbddb2_TypeEnum(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data4)) {
			_case_begin_1a9a94e07:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3b8b994_TypeEnum>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1a9a9515a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9a95105:;
	};
}



inline jule::Ptr<_1a3cca121_Arr> _1a3cbe148_Arr(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data25)) {
			_case_begin_1a9a95b50:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3cca121_Arr>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1a9a95da3:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9a95d4d:;
	};
}



inline jule::Ptr<_1a3cc7d00_Slc> _1a3cbe3ce_Slc(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data22)) {
			_case_begin_1a9a96898:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3cc7d00_Slc>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1a9a96aeb:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9a96a96:;
	};
}



inline jule::Ptr<_1a3b770cd_FnIns> _1a3cbe665_Fn(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data1)) {
			_case_begin_1a9a975e1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3b770cd_FnIns>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1a9a97822:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9a977bc:;
	};
}



inline jule::Ptr<_1a3b61cbb_StructIns> _1a3cbe8eb_Struct(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0)) {
			_case_begin_1a9a98317:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3b61cbb_StructIns>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1a9a98548:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9a984e3:;
	};
}



inline jule::Ptr<_1a3b87a7d_Trait> _1a3cbeb82_Trait(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data2)) {
			_case_begin_1a9a9903d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3b87a7d_Trait>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1a9a99291:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9a9923b:;
	};
}



inline jule::Ptr<_1a3cc9494_Map> _1a3cbee18_Map(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data24)) {
			_case_begin_1a9a99c86:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3cc9494_Map>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1a9a99ed9:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9a99e84:;
	};
}



inline jule::Ptr<_1a3cc88e4_Tuple> _1a3cc019e_Tup(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data23)) {
			_case_begin_1a9a9a9ce:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3cc88e4_Tuple>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1a9a9ac10:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9a9abaa:;
	};
}



inline jule::Bool _1a3cc0435_comptime(_1a3cbac27_TypeKind* _self_) {
	return (((((((((((((_1a3cc19a8_comptimeTypeInfos(_self_) != nullptr) || (_1a3cc1c3e_comptimeTypeInfo(_self_) != nullptr)) || (_1a3cc06bb_comptimeStructFields(_self_) != nullptr)) || (_1a3cc0952_comptimeStructField(_self_) != nullptr)) || (_1a3cc0bd8_comptimeEnumFields(_self_) != nullptr)) || (_1a3cc0e6e_comptimeEnumField(_self_) != nullptr)) || (_1a3cc1ec5_comptimeStatics(_self_) != nullptr)) || (_1a3cc225b_comptimeStatic(_self_) != nullptr)) || (_1a3cc1205_comptimeParams(_self_) != nullptr)) || (_1a3cc148b_comptimeParam(_self_) != nullptr)) || (_1a3cc24e2_comptimeValue(_self_) != nullptr)) || (_1a3cc2a0e_comptimeFiles(_self_) != nullptr)) || (_1a3cc2778_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1a3b92318_comptimeStructFields> _1a3cc06bb_comptimeStructFields(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data7)) {
			_case_begin_1a9a9b89d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3b92318_comptimeStructFields>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1a9aa0275:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9aa0220:;
	};
}



inline jule::Ptr<_1a3b90657_comptimeStructField> _1a3cc0952_comptimeStructField(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data6)) {
			_case_begin_1a9aa08b3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3b90657_comptimeStructField>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1a9aa0b16:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9aa0ab1:;
	};
}



inline jule::Ptr<_1a3b98066_comptimeEnumFields> _1a3cc0bd8_comptimeEnumFields(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data11)) {
			_case_begin_1a9aa1661:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3b98066_comptimeEnumFields>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1a9aa184d:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9aa17e8:;
	};
}



inline jule::Ptr<_1a3b96bbe_comptimeEnumField> _1a3cc0e6e_comptimeEnumField(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data10)) {
			_case_begin_1a9aa2332:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3b96bbe_comptimeEnumField>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1a9aa2585:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9aa2530:;
	};
}



inline jule::Ptr<_1a3b9b7ea_comptimeParams> _1a3cc1205_comptimeParams(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data13)) {
			_case_begin_1a9aa30d0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3b9b7ea_comptimeParams>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1a9aa32bc:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9aa3267:;
	};
}



inline jule::Ptr<_1a3b99661_comptimeParam> _1a3cc148b_comptimeParam(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data12)) {
			_case_begin_1a9aa3d06:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3b99661_comptimeParam>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1a9aa4004:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9aa3e9e:;
	};
}



inline jule::Ptr<_1a3b8eb84_comptimeRange> _1a3cc1722_comptimeRange(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data5)) {
			_case_begin_1a9aa49e9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3b8eb84_comptimeRange>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1a9aa4c2a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9aa4bc5:;
	};
}



inline jule::Ptr<_1a3b9cdb2_comptimeTypeInfos> _1a3cc19a8_comptimeTypeInfos(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data14)) {
			_case_begin_1a9aa5720:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3b9cdb2_comptimeTypeInfos>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1a9aa5951:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9aa58eb:;
	};
}



inline jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _1a3cc1c3e_comptimeTypeInfo(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data15)) {
			_case_begin_1a9aa6446:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3b9e4ac_comptimeTypeInfo>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1a9aa6699:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9aa6644:;
	};
}



inline jule::Ptr<_1a3b955c4_comptimeStatics> _1a3cc1ec5_comptimeStatics(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data9)) {
			_case_begin_1a9aa71e4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3b955c4_comptimeStatics>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1a9aa73d1:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9aa737b:;
	};
}



inline jule::Ptr<_1a3b93913_comptimeStatic> _1a3cc225b_comptimeStatic(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data8)) {
			_case_begin_1a9aa7e1a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3b93913_comptimeStatic>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1a9aa8118:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9aa80b3:;
	};
}



inline jule::Ptr<_1a3ba59be_comptimeValue> _1a3cc24e2_comptimeValue(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data16)) {
			_case_begin_1a9aa8b0d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3ba59be_comptimeValue>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1a9aa8d3e:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9aa8cd9:;
	};
}



inline jule::Ptr<_1a3ba9918_comptimeFile> _1a3cc2778_comptimeFile(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data18)) {
			_case_begin_1a9aa9889:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3ba9918_comptimeFile>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1a9aa9a87:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9aa9a32:;
	};
}



inline jule::Ptr<_1a3ba831d_comptimeFiles> _1a3cc2a0e_comptimeFiles(_1a3cbac27_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data17)) {
			_case_begin_1a9aaa5d2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a3ba831d_comptimeFiles>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1a9aaa7d0:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9aaa77a:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3cbac27_TypeKind _Src) {
	_Stream << _1a3cbb0e0_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3cc2de9_TypeSymbol_eq(_1a3cc2de9_TypeSymbol *_self_, _1a3cc2de9_TypeSymbol _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Bool _1a3cc326d_checked(_1a3cc2de9_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3cc2de9_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3cc3801_Prim_eq(_1a3cc3801_Prim *_self_, _1a3cc3801_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _1a3cc3b42_Str(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1a3cc3e83_Equal(jule::Ptr<_1a3cc3801_Prim> _self_, jule::Ptr<_1a3cbac27_TypeKind> _50818_other) {
	jule::Ptr<_1a3cc3801_Prim> _5093_prim = _1a3cbd378_Prim(_50818_other.ptr());;
	if ((_5093_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5093_prim))._field_Kind);;
}



inline jule::Bool _1a3cc4428_IsConstraint(_1a3cc3801_Prim* _self_) {
	return ((((!(_1a3cc6c88_IsStr(_self_))) && (!(_1a3cc701e_IsAny(_self_)))) && (!(_1a3cc6a02_IsBool(_self_)))) && (!(_1b5747692_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1a3cc46ae_IsI8(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1a3cc4945_IsI16(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1a3cc4bcb_IsI32(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1a3cc4e62_IsI64(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1a3cc51e8_IsU8(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1a3cc547e_IsU16(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1a3cc5715_IsU32(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1a3cc599b_IsU64(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1a3cc5c32_IsF32(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1a3cc5eb8_IsF64(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1a3cc624e_IsInt(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1a3cc64d5_IsUint(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1a3cc676b_IsUintptr(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1a3cc6a02_IsBool(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1a3cc6c88_IsStr(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1a3cc701e_IsAny(_1a3cc3801_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3cc3801_Prim _Src) {
	_Stream << _1a3cc3b42_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3cc732c_Sptr_eq(_1a3cc732c_Sptr *_self_, _1a3cc732c_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a3cc76a1_Str(_1a3cc732c_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1a3cbb0e0_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a3cc79e2_Equal(jule::Ptr<_1a3cc732c_Sptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _58518_other) {
	jule::Ptr<_1a3cc732c_Sptr> _5863_sptr = _1a3cbd60e_Sptr(_58518_other.ptr());;
	if ((_5863_sptr == nullptr)) {
		return false;;
	};
	return _1a3cbb431_Equal((*(_self_))._field_Elem, (*(_5863_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3cc732c_Sptr _Src) {
	_Stream << _1a3cc76a1_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3cc7d00_Slc_eq(_1a3cc7d00_Slc *_self_, _1a3cc7d00_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a3cc8284_Str(_1a3cc7d00_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1a3cbb0e0_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a3cc85c5_Equal(jule::Ptr<_1a3cc7d00_Slc> _self_, jule::Ptr<_1a3cbac27_TypeKind> _60418_other) {
	jule::Ptr<_1a3cc7d00_Slc> _6053_slc = _1a3cbe3ce_Slc(_60418_other.ptr());;
	if ((_6053_slc == nullptr)) {
		return false;;
	};
	return _1a3cbb431_Equal((*(_self_))._field_Elem, (*(_6053_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3cc7d00_Slc _Src) {
	_Stream << _1a3cc8284_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a3cc8c68_Str(_1a3cc88e4_Tuple* _self_) {
	_1e7be2632_StrBuilder _6217_s = static__1e7be28eb_New(16LL);;
	_1e7beb51a_WriteByte(&_6217_s, '(');
	_1e7beb262_WriteStr(&_6217_s, _1a3cbb0e0_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a9abaceb:;
		if (it != expr_end) {
			jule::Ptr<_1a3cbac27_TypeKind> *_62410_t = it;
			{
				_1e7beb51a_WriteByte(&_6217_s, ',');
				_1e7beb262_WriteStr(&_6217_s, _1a3cbb0e0_Str((*(_62410_t)).ptr()));
			}
			_iter_next_1a9abaceb:;
			++it;
			goto _iter_begin_1a9abaceb;
		}
		_iter_end_1a9abaceb:;
	};
	_1e7beb51a_WriteByte(&_6217_s, ')');
	return _1e7beba59_Str(&_6217_s);;
}



inline jule::Bool _1a3cc90a9_Equal(jule::Ptr<_1a3cc88e4_Tuple> _self_, jule::Ptr<_1a3cbac27_TypeKind> _63318_other) {
	jule::Ptr<_1a3cc88e4_Tuple> _6343_tup = _1a3cc019e_Tup(_63318_other.ptr());;
	if ((_6343_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6343_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _6417_i = 0LL;;
	for (; (_6417_i < (*_self_.alloc)._field_Types.len()); (_6417_i)++) {
		{
			if ((!(_1a3cbb431_Equal((*(_self_))._field_Types[_6417_i], (*(_6343_tup))._field_Types[_6417_i])))) {
				return false;;
			};
		}
	_iter_next_1a9abd13e:;
	}
	_iter_end_1a9abd13e:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3cc88e4_Tuple _Src) {
	_Stream << _1a3cc8c68_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3cc9494_Map_eq(_1a3cc9494_Map *_self_, _1a3cc9494_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _1a3cc9818_Str(_1a3cc9494_Map* _self_) {
	_1e7be2632_StrBuilder _6617_s = static__1e7be28eb_New(16LL);;
	_1e7beb262_WriteStr(&_6617_s, jule::Str::lit("map[", 4));
	_1e7beb262_WriteStr(&_6617_s, _1a3cbb0e0_Str((*(_self_))._field_Key.ptr()));
	_1e7beb51a_WriteByte(&_6617_s, ']');
	_1e7beb262_WriteStr(&_6617_s, _1a3cbb0e0_Str((*(_self_))._field_Val.ptr()));
	return _1e7beba59_Str(&_6617_s);;
}



inline jule::Bool _1a3cc9b59_Equal(jule::Ptr<_1a3cc9494_Map> _self_, jule::Ptr<_1a3cbac27_TypeKind> _67018_other) {
	jule::Ptr<_1a3cc9494_Map> _6713_m = _1a3cbee18_Map(_67018_other.ptr());;
	if ((_6713_m == nullptr)) {
		return false;;
	};
	return (_1a3cbb431_Equal((*(_self_))._field_Key, (*(_6713_m))._field_Key) && _1a3cbb431_Equal((*_self_.alloc)._field_Val, (*(_6713_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3cc9494_Map _Src) {
	_Stream << _1a3cc9818_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3cca121_Arr_eq(_1a3cca121_Arr *_self_, _1a3cca121_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _1a3cca495_Str(_1a3cca121_Arr* _self_) {
	_1e7be2632_StrBuilder _6897_s = static__1e7be28eb_New(16LL);;
	_1e7beb51a_WriteByte(&_6897_s, '[');
	_1e7beb262_WriteStr(&_6897_s, _1b5739d16_Itoa((*(_self_))._field_N));
	_1e7beb51a_WriteByte(&_6897_s, ']');
	_1e7beb262_WriteStr(&_6897_s, _1a3cbb0e0_Str((*(_self_))._field_Elem.ptr()));
	return _1e7beba59_Str(&_6897_s);;
}



inline jule::Bool _1a3cca7d6_Equal(jule::Ptr<_1a3cca121_Arr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _69818_other) {
	jule::Ptr<_1a3cca121_Arr> _6993_arr = _1a3cbe148_Arr(_69818_other.ptr());;
	if ((_6993_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6993_arr))._field_N) && _1a3cbb431_Equal((*_self_.alloc)._field_Elem, (*(_6993_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3cca121_Arr _Src) {
	_Stream << _1a3cca495_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3ccaae4_Ptr_eq(_1a3ccaae4_Ptr *_self_, _1a3ccaae4_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1a3ccae68_Str(_1a3ccaae4_Ptr* _self_) {
	if (_1a3ccb62d_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1a3cbb0e0_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a3ccb2a9_Equal(jule::Ptr<_1a3ccaae4_Ptr> _self_, jule::Ptr<_1a3cbac27_TypeKind> _72218_other) {
	jule::Ptr<_1a3ccaae4_Ptr> _7233_ptr = _1a3cbd895_Ptr(_72218_other.ptr());;
	{
		
		if ((_7233_ptr == nullptr)) {
			_case_begin_1a9ac9cd8:;
			{
				return false;;
			}
		}
		else if (_1a3ccb62d_IsUnsafe(_7233_ptr.ptr())) {
			_case_begin_1a9ac9689:;
			{
				return _1a3ccb62d_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1a9ac9227:;
			{
				return _1a3cbb431_Equal((*(_self_))._field_Elem, (*(_7233_ptr))._field_Elem);;
			}
		}
		_match_end_1a9ac91b1:;
	};
}



inline jule::Bool _1a3ccb62d_IsUnsafe(_1a3ccaae4_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3ccaae4_Ptr _Src) {
	_Stream << _1a3ccae68_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a3ccbae5_referencer_eq(_1a3ccbae5_referencer *_self_, _1a3ccbae5_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3ccbae5_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1a3ccd322_pushErr(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b27a62_Token> _81223_token, jule::Str _81238_fmt, jule::Slice<jule::Any> _81251_args) {
	_1a3c0b78e_pushErr((*(_self_))._field_s.ptr(), _81223_token, _81238_fmt, _81251_args);
}



inline void _1a3ccd520_allowBuiltin(_1a3cccad5_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a3ccd71d_disallowBuiltin(_1a3cccad5_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1a9acde30_pushReference(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b61cbb_StructIns>* _82437_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1a90be036_Exist((*(_self_))._field_refers.ptr(), (*(_82437_t)))) {
		return;;
	};
	_1a3b7b049_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82437_t)), &__jule_any_type9));
}

inline void _1a9ad1828_pushReference(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b87a7d_Trait>* _82437_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1a9ad3561_Exist((*(_self_))._field_refers.ptr(), (*(_82437_t)))) {
		return;;
	};
	_1a3b7b049_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82437_t)), &__jule_any_type10));
}



inline void _1a3ccdc7e_pushReferenceByKind(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _83440_k) {
	{
		
		if ((_1a3cbe8eb_Struct((*(_83440_k)).ptr()) != nullptr)) {
			_case_begin_1a9acca66:;
			{
				jule::Ptr<_1a3b61cbb_StructIns> _8378_t = _1a3cbe8eb_Struct((*(_83440_k)).ptr());;
				_1a9acde30_pushReference(_self_, &(_8378_t));
			}
		}
		else if ((_1a3cbeb82_Trait((*(_83440_k)).ptr()) != nullptr)) {
			_case_begin_1a9accb10:;
			{
				jule::Ptr<_1a3b87a7d_Trait> _8408_t = _1a3cbeb82_Trait((*(_83440_k)).ptr());;
				_1a9ad1828_pushReference(_self_, &(_8408_t));
			}
		}
		_match_end_1a9acc956:;
	};
}



inline void _1a3cce19c_pushCycleError(_1a3cccad5_typeChecker* _self_, jule::Any _84526_def1, jule::Any _84537_def2, _1e7be2632_StrBuilder* _84553_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8473_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1a9ad5860, nullptr, nullptr);;
	jule::Str _8573_m = _1e7beba59_Str(_84553_message);;
	jule::Str _8583_def1Ident = _8473_getIdent(&(_84526_def1));;
	jule::Str _8593_def2Ident = _8473_getIdent(&(_84537_def2));;
	jule::Str _8603_refersTo = _1e7c9543d_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8583_def1Ident, &__jule_any_type4),jule::Any(_8593_def2Ident, &__jule_any_type4)}));;
	_1e7beb262_WriteStr(_84553_message, _1e7bc876c_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1e7beb262_WriteStr(_84553_message, _8603_refersTo);
	_1e7beb51a_WriteByte(_84553_message, '\n');
	_1e7beb262_WriteStr(_84553_message, _8573_m);
}



inline jule::Bool _1a3cce598_checkCrossCycle(_1a3cccad5_typeChecker* _self_, jule::Any _86727_decl, _1e7be2632_StrBuilder* _86743_message) {
	{
		auto &_match_expr{ _86727_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a9ad9a2e:;
			{
				jule::Ptr<_1a3cb9e35_TypeAlias> _8704_ta = _86727_decl.unsafe_cast_ptr<_1a3cb9e35_TypeAlias>();;
				{
					auto expr = &((*(_8704_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9ada9ca:;
					if (it != expr_end) {
						jule::Any *_87111_d = it;
						{
							{
								
								if (((*(_87111_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1a9adb2c2:;
									{
										_1a3cce19c_pushCycleError(_self_, jule::Any(_8704_ta, &__jule_any_type66), (*(_87111_d)), _86743_message);
										return false;;
									}
								}
								else if ((!(_1a3cce598_checkCrossCycle(_self_, (*(_87111_d)), _86743_message)))) {
									_case_begin_1a9adb35a:;
									{
										_1a3cce19c_pushCycleError(_self_, jule::Any(_8704_ta, &__jule_any_type66), (*(_87111_d)), _86743_message);
										return false;;
									}
								}
								_match_end_1a9adb1c3:;
							};
						}
						_iter_next_1a9ada9ca:;
						++it;
						goto _iter_begin_1a9ada9ca;
					}
					_iter_end_1a9ada9ca:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a9ad9897:;
			{
				jule::Ptr<_1a3b5e03d_Struct> _8824_s = _86727_decl.unsafe_cast_ptr<_1a3b5e03d_Struct>();;
				{
					auto expr = &((*(_8824_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9adcd1d:;
					if (it != expr_end) {
						jule::Ptr<_1a3b5e03d_Struct> *_88311_d = it;
						{
							{
								
								if ((__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*(_88311_d))))) {
									_case_begin_1a9add615:;
									{
										_1a3cce19c_pushCycleError(_self_, jule::Any(_8824_s, &__jule_any_type65), jule::Any((*(_88311_d)), &__jule_any_type65), _86743_message);
										return false;;
									}
								}
								else if ((!(_1a3cce598_checkCrossCycle(_self_, jule::Any((*(_88311_d)), &__jule_any_type65), _86743_message)))) {
									_case_begin_1a9add69d:;
									{
										_1a3cce19c_pushCycleError(_self_, jule::Any(_8824_s, &__jule_any_type65), jule::Any((*(_88311_d)), &__jule_any_type65), _86743_message);
										return false;;
									}
								}
								_match_end_1a9add516:;
							};
						}
						_iter_next_1a9adcd1d:;
						++it;
						goto _iter_begin_1a9adcd1d;
					}
					_iter_end_1a9adcd1d:;
				};
			}
		}
		_match_end_1a9ad99c9:;
	};
	return true;;
}



inline jule::Bool _1a3cce994_checkIllegalCycles(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl>* _90135_ident, jule::Any _90162_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _90162_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a9ae06d3:;
			{
				if ((*(_90162_decl.unsafe_cast_ptr<_1a3b5e03d_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a9add13c:;
			{
				if ((*(_90162_decl.unsafe_cast_ptr<_1a3cb9e35_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a9add1b4:;
	};
	if ((_90162_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1a3ccd322_pushErr(_self_, (*((*(_90135_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1e7be2632_StrBuilder _9247_message = static__1e7be28eb_New(32LL);;
	if ((!(_1a3cce598_checkCrossCycle(_self_, _90162_decl, &(_9247_message))))) {
		jule::Str _9278_errMsg = _1e7beba59_Str(&_9247_message);;
		_1e7bebc57_Clear(&_9247_message);
		_1a3cce19c_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _90162_decl, &(_9247_message));
		_9278_errMsg+=_1e7beba59_Str(&_9247_message);
		_1a3ccd322_pushErr(_self_, (*((*(_90135_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_9278_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a9ae5111:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_90162_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a9ae4660:;
			{
				{
					auto &_match_expr{ _90162_decl };
					
					if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1a9ae59b3:;
						{
							jule::Ptr<_1a3b5e03d_Struct> _9439_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a3b5e03d_Struct>();;
							(*(_9439_s))._field_Depends=jule::append((*_9439_s.alloc)._field_Depends,jule::Slice<jule::Ptr<_1a3b5e03d_Struct>>::make({_90162_decl.cast_ptr<_1a3b5e03d_Struct>(&__jule_any_type65)}));
						}
					}
					_match_end_1a9ae594c:;
				};
			}
		}
		_match_end_1a9ae50ab:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1a3cced90_fromTypeAlias(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl>* _95130_decl, jule::Ptr<_1a3cb9e35_TypeAlias>* _95157_ta) {
	if ((!(_1a3c0beed_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_95157_ta))))._field_Public, (*((*(_95157_ta))))._field_Token)))) {
		_1a3ccd322_pushErr(_self_, (*((*(_95130_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_95130_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_95157_ta))))._field_Used=true;
	if (((*((*(_95130_decl))))._field_Generics.len() > 0LL)) {
		_1a3ccd322_pushErr(_self_, (*((*(_95130_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_95130_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9aeac0a:;
			if (it != expr_end) {
				jule::Ptr<_1a3cb9e35_TypeAlias> _96811_bg = *it;
				{
					if (((_96811_bg == (*(_95157_ta))) || (((*((*((*(_95157_ta))))._field_Kind))._field_Kind != nullptr) && _1a3cbb431_Equal((*((*((*(_95157_ta))))._field_Kind))._field_Kind, (*(*(_96811_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1a9aeac0a;
					};
				}
				_iter_next_1a9aeac0a:;
				++it;
				goto _iter_begin_1a9aeac0a;
			}
			_iter_end_1a9aeac0a:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9aeced7:;
			if (it != expr_end) {
				jule::Ptr<_1a3cb9e35_TypeAlias> _97911_bg = *it;
				{
					if ((_97911_bg == (*(_95157_ta)))) {
						_1a3ccd322_pushErr(_self_, (*((*(_95130_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_95130_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_95157_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a9aed8bc:;
						if (it != expr_end) {
							jule::Ptr<_1a3cb9e35_TypeAlias> _98412_dg = *it;
							{
								if ((_97911_bg == _98412_dg)) {
									_1a3ccd322_pushErr(_self_, (*((*(_95130_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_95130_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1a9aed8bc:;
							++it;
							goto _iter_begin_1a9aed8bc;
						}
						_iter_end_1a9aed8bc:;
					};
				}
				_iter_next_1a9aeced7:;
				++it;
				goto _iter_begin_1a9aeced7;
			}
			_iter_end_1a9aeced7:;
		};
	};
	jule::Bool _9937_ok = _1a3cce994_checkIllegalCycles(_self_, _95130_decl, jule::Any((*(_95157_ta)), &__jule_any_type66));;
	if ((!(_9937_ok))) {
		return nullptr;;
	};
	if (((*(*((*(_95157_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		_9937_ok=_1a3c18a32_checkTypeAliasDeclKind((*(_self_))._field_s, _95157_ta, (*(_self_))._field_lookup);
		if ((!(_9937_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_95157_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>::make({(*(_95157_ta))}));
	};
	jule::Ptr<_1a3cbac27_TypeKind> _10127_tk = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Generic=(*((*(_95157_ta))))._field_Generic, ._field_Kind=(*(*((*((*(_95157_ta))))._field_Kind))._field_Kind.alloc)._field_Kind});;
	_1a3ccdc7e_pushReferenceByKind(_self_, &(_10127_tk));
	if ((*((*(_95157_ta))))._field_Binded) {
		(*(_10127_tk))._field_BindIdent=(*((*(_95157_ta))))._field_Ident;
	} else {
		(*(_10127_tk))._field_BindIdent=(*(*((*((*(_95157_ta))))._field_Kind))._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait(_10127_tk, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data19);;
}



inline jule::Ptr<_1a3b8a289_Enum> _1a3cd028b_fromEnum(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl>* _102525_decl, jule::Ptr<_1a3b8a289_Enum>* _102552_e) {
	if ((!(_1a3c0beed_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102552_e))))._field_Public, (*((*(_102552_e))))._field_Token)))) {
		_1a3ccd322_pushErr(_self_, (*((*(_102525_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102525_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102525_decl))))._field_Generics.len() > 0LL)) {
		_1a3ccd322_pushErr(_self_, (*((*(_102525_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102525_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102552_e));;
}



inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3cd0687_fromTypeEnum(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl>* _103729_decl, jule::Ptr<_1a3b8b994_TypeEnum>* _103756_e) {
	if ((!(_1a3c0beed_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103756_e))))._field_Public, (*((*(_103756_e))))._field_Token)))) {
		_1a3ccd322_pushErr(_self_, (*((*(_103729_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103729_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103729_decl))))._field_Generics.len() > 0LL)) {
		_1a3ccd322_pushErr(_self_, (*((*(_103729_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103729_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103756_e));;
}



inline jule::Ptr<_1a3b87a7d_Trait> _1a3cd0a83_fromTrait(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl>* _104926_decl, jule::Ptr<_1a3b87a7d_Trait>* _104953_t) {
	if ((!(_1a3c0beed_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104953_t))))._field_Public, (*((*(_104953_t))))._field_Token)))) {
		_1a3ccd322_pushErr(_self_, (*((*(_104926_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104926_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104926_decl))))._field_Generics.len() > 0LL)) {
		_1a3ccd322_pushErr(_self_, (*((*(_104926_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104926_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1a9ad1828_pushReference(_self_, _104953_t);
	return (*(_104953_t));;
}



inline jule::Bool _1a3cd0e7e_checkStructIns(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b61cbb_StructIns>* _106235_ins, jule::Ptr<_1a3b27a62_Token>* _106257_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_106235_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_106235_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type65_compare((*(*(_self_))._field_referencer.alloc)._field_owner, (*((*(_106235_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1a3c25522_precheckStructIns((*(_self_))._field_s, _106235_ins, (*(_106257_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_106235_ins))))._field_Generics.len() > 0LL)) {
		_1a3c2ada7_checkStructInsOperators((*(_self_))._field_s, (*(_106235_ins)));
		_1a3c257ca_checkStructIns((*(_self_))._field_s, _106235_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a3cd1237_appendUsedStructReference(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b5e03d_Struct>* _108346_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a95c5e99:;
			{
				jule::Ptr<_1a3b5e03d_Struct> _10898_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a3b5e03d_Struct>();;
				if ((!(_1a3b609bd_IsUses(_10898_refS.ptr(), (*(_108346_s)))))) {
					(*_10898_refS.alloc)._field_Uses=jule::append((*_10898_refS.alloc)._field_Uses,jule::Slice<jule::Ptr<_1a3b5e03d_Struct>>::make({(*(_108346_s))}));
				};
			}
		}
		_match_end_1a95c5e44:;
	};
}



inline jule::Ptr<_1a3b61cbb_StructIns> _1a3cd1633_buildStructInstance(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl>* _109640_decl, jule::Ptr<_1a3b5e03d_Struct>* _109667_s) {
	jule::Ptr<_1a3ccbae5_referencer> _10987_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> _11007_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)) {
				_case_begin_1a95c8e7a:;
				{
					jule::Ptr<_1a3bbdb08_scopeChecker> _11079_sc = (*(_self_))._field_lookup.cast_ptr<_1a3bbdb08_scopeChecker>((jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0);;
					jule::Ptr<_1a3bbdb08_scopeChecker> _11089_hard = _1a3bc2238_getHardRoot(_11079_sc);;
					if ((((*((*(_11089_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*(_11089_hard))._field_owner.alloc)._field_Owner))._field_Decl != (*(_109667_s))))) {
						goto _match_end_1a95c8e25;
					};
					jule::I64 _11125_n = ((*(*(_11089_hard))._field_owner.alloc)._field_Generics.len() + (*((*(*(_11089_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11089_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11125_n);
				}
			}
			_match_end_1a95c8e25:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11227_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1a3b61cbb_StructIns> _11267_ins = _1a3b5e4a0_instance((*(_109667_s)));;
	(*(_11267_ins))._field_Generics=jule::Slice<jule::Ptr<_1a3cb9341_InsGeneric>>::alloc(0LL, (*((*(_109640_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109640_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95ce29e:;
		if (it != expr_end) {
			jule::Ptr<_1a3b3d13d_TypeDecl> _112815_g = *it;
			{
				jule::Ptr<_1a3cbac27_TypeKind> _11298_kind = _1a3cd4e3e_build(_self_, &((*(_112815_g))._field_Kind));;
				if ((_11298_kind == nullptr)) {
					return nullptr;;
				};
				(*_11267_ins.alloc)._field_Generics=jule::append((*_11267_ins.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a3cb9341_InsGeneric>>::make({jule::new_ptr<_1a3cb9341_InsGeneric>(_1a3cb9341_InsGeneric{._field_Kind=_11298_kind, })}));
			}
			_iter_next_1a95ce29e:;
			++it;
			goto _iter_begin_1a95ce29e;
		}
		_iter_end_1a95ce29e:;
	};
	(*(_self_))._field_lookup=_11227_lookup;
	(*(_self_))._field_bannedGenerics=_11007_bannedGenerics;
	(*(_self_))._field_referencer=_10987_referencer;
	return _11267_ins;;
}



inline jule::Ptr<_1a3b61cbb_StructIns> _1a3cd1a2e_fromStruct(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl>* _114431_decl, jule::Ptr<_1a3b5e03d_Struct>* _114458_s) {
	if ((!(_1a3c0beed_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_114458_s))))._field_Public, (*((*(_114458_s))))._field_Token)))) {
		_1a3ccd322_pushErr(_self_, (*((*(_114431_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_114431_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_114431_decl))))._field_Generics.len() > 0LL)) {
			_1a3ccd322_pushErr(_self_, (*((*(_114431_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1a3b61cbb_StructIns>(_1a3b61cbb_StructIns{._field_Decl=(*(_114458_s)), });;
	};
	jule::Bool _11627_ok = _1a3cce994_checkIllegalCycles(_self_, _114431_decl, jule::Any((*(_114458_s)), &__jule_any_type65));;
	if ((!(_11627_ok))) {
		return nullptr;;
	};
	_1a3cd1237_appendUsedStructReference(_self_, _114458_s);
	jule::Ptr<_1a3b61cbb_StructIns> _11687_ins = _1a3cd1633_buildStructInstance(_self_, _114431_decl, _114458_s);;
	if ((_11687_ins == nullptr)) {
		return nullptr;;
	};
	_11627_ok=_1a3c0ccbd_checkGenericQuantity((*(_self_))._field_s, (*((*(_11687_ins))._field_Decl))._field_Generics.len(), (*(_11687_ins))._field_Generics.len(), (*((*(_114431_decl))))._field_Token);
	if ((!(_11627_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a3b61cbb_StructIns> _11787_existInstance = _1a3b5e7ad_appendInstance((*(_114458_s)).ptr(), &(_11687_ins));;
	if ((_11787_existInstance != nullptr)) {
		if ((!(_1a3c16c2d_checkConstraintsStruct((*(_self_))._field_s, &(_11687_ins), &((*((*(_114431_decl))))._field_Token), _11787_existInstance)))) {
			return nullptr;;
		};
		_1a9acde30_pushReference(_self_, &(_11787_existInstance));
		return _11787_existInstance;;
	};
	if ((!(_1a3cd0e7e_checkStructIns(_self_, &(_11687_ins), &((*((*(_114431_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1a9acde30_pushReference(_self_, &(_11687_ins));
	return _11687_ins;;
}



inline jule::Trait _1a3cd1d70_getDef(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl>* _120227_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95d8b8d:;
		if (it != expr_end) {
			jule::Ptr<_1a3b4a348_GenericDecl> _120310_g = *it;
			{
				if (((*(_120310_g))._field_Ident == (*((*(_120227_decl))))._field_Ident)) {
					return jule::Trait(_1a3cd7b45_buildPrimType((*_120310_g.alloc)._field_Ident), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20);;
				};
			}
			_iter_next_1a95d8b8d:;
			++it;
			goto _iter_begin_1a95d8b8d;
		}
		_iter_end_1a95d8b8d:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95d8ece:;
		if (it != expr_end) {
			jule::Ptr<_1a3cb9e35_TypeAlias> _120915_g = *it;
			{
				if (((*(_120915_g))._field_Ident == (*((*(_120227_decl))))._field_Ident)) {
					if (((*((*(_120227_decl))))._field_Generics.len() > 0LL)) {
						_1a3ccd322_pushErr(_self_, (*((*(_120227_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_120227_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1a3b61cbb_StructIns> _12159_st = _1a3cbe8eb_Struct((*((*_120915_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_12159_st != nullptr)) {
						jule::Bool _12176_ok = _1a3cce994_checkIllegalCycles(_self_, _120227_decl, jule::Any((*_12159_st.alloc)._field_Decl, &__jule_any_type65));;
						if ((!(_12176_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_120915_g))._field_Kind))._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1a95d8ece:;
			++it;
			goto _iter_begin_1a95d8ece;
		}
		_iter_end_1a95d8ece:;
	};
	if ((!((*((*(_120227_decl))))._field_Binded))) {
		jule::Ptr<_1a3b8a289_Enum> _12278_e = ((_1a3cda818_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a3cda373_FindEnum((*(_self_))._field_lookup.data, (*((*(_120227_decl))))._field_Ident);;
		if ((_12278_e != nullptr)) {
			return jule::Trait(_1a3cd028b_fromEnum(_self_, _120227_decl, &(_12278_e)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data3);;
		};
		jule::Ptr<_1a3b8b994_TypeEnum> _12328_te = ((_1a3cda818_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a3cda6b4_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_120227_decl))))._field_Ident);;
		if ((_12328_te != nullptr)) {
			return jule::Trait(_1a3cd0687_fromTypeEnum(_self_, _120227_decl, &(_12328_te)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data4);;
		};
		jule::Ptr<_1a3b87a7d_Trait> _12378_t = ((_1a3cda818_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a3cda032_FindTrait((*(_self_))._field_lookup.data, (*((*(_120227_decl))))._field_Ident);;
		if ((_12378_t != nullptr)) {
			return jule::Trait(_1a3cd0a83_fromTrait(_self_, _120227_decl, &(_12378_t)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1a3ccd322_pushErr(_self_, (*((*(_120227_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3b5e03d_Struct> _12467_s = ((_1a3cda818_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a3cd97e5_FindStruct((*(_self_))._field_lookup.data, (*((*(_120227_decl))))._field_Ident, (*((*(_120227_decl))))._field_Binded);;
	if ((_12467_s != nullptr)) {
		return jule::Trait(_1a3cd1a2e_fromStruct(_self_, _120227_decl, &(_12467_s)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0);;
	};
	jule::Ptr<_1a3cb9e35_TypeAlias> _12517_ta = ((_1a3cda818_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a3cd93e9_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_120227_decl))))._field_Ident, (*((*(_120227_decl))))._field_Binded);;
	if (((_12517_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12517_ta=_1a3e37338_findBuiltinTypeAlias((*((*(_120227_decl))))._field_Ident);
	};
	if ((_12517_ta != nullptr)) {
		return _1a3cced90_fromTypeAlias(_self_, _120227_decl, &(_12517_ta));;
	};
	_1a3ccd322_pushErr(_self_, (*((*(_120227_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_120227_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait _1a3cd21b1_buildIdent(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d748_IdentTypeDecl> _126330_decl) {
	return _1a3cd1d70_getDef(_self_, &(_126330_decl));;
}



inline jule::Trait _1a3cd2502_buildSubIdent(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3da12_SubIdentTypeDecl> _126733_decl) {
	jule::Trait _12687_ident = _1a3cd21b1_buildIdent(_self_, (*(_126733_decl))._field_Idents[0LL]);;
	if ((_12687_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _12687_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data4)) {
			_case_begin_1a83db70b:;
			{
				goto _match_end_1a95e6b9b;
			}
		}
		else {
			_case_begin_1a95e6c01:;
			{
				_1a3ccd322_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a95e6b9b:;
	};
	jule::Ptr<_1a3b8b994_TypeEnum> _12797_t = _12687_ident.cast_ptr<_1a3b8b994_TypeEnum>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1a3b3d748_IdentTypeDecl>> _12807_idents = (*_126733_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_12807_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8841303:;
		if (it != expr_end) {
			jule::I64 _12817_i = it - expr->begin();
			jule::Ptr<_1a3b3d748_IdentTypeDecl> _128110_id = *it;
			{
				jule::Ptr<_1a3b8b3bc_TypeEnumItem> _12828_item = _1a3b8c555_FindItem(_12797_t.ptr(), (*(_128110_id))._field_Ident);;
				if ((_12828_item == nullptr)) {
					_1a3ccd322_pushErr(_self_, (*_128110_id.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_12797_t.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_128110_id.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_12807_idents.len() - _12817_i) == 1LL)) {
					_1a3ccdc7e_pushReferenceByKind(_self_, &((*((*(_12828_item))._field_Kind))._field_Kind));
					return jule::Trait((*(*(_12828_item))._field_Kind.alloc)._field_Kind, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data19);;
				};
				_12797_t=_1a3cbddb2_TypeEnum((*(*(_12828_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_12797_t == nullptr)) {
					_1a3ccd322_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1a8841303:;
			++it;
			_12817_i++;
			goto _iter_begin_1a8841303;
		}
		_iter_end_1a8841303:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3cc732c_Sptr> _1a3cd2843_buildSptrFromType(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _130138_elem) {
	{
		
		if (((*(_130138_elem)) == nullptr)) {
			_case_begin_1a91b4d1e:;
			{
				return nullptr;;
			}
		}
		else if ((_1a3cbe8eb_Struct((*(_130138_elem)).ptr()) != nullptr)) {
			_case_begin_1a91b4db8:;
			{
				jule::Ptr<_1a3b61cbb_StructIns> _13074_s = _1a3cbe8eb_Struct((*(_130138_elem)).ptr());;
				if ((((*(_13074_s))._field_Decl != nullptr) && (*(*(_13074_s))._field_Decl.alloc)._field_Binded)) {
					_1a3ccd322_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1a3cbe148_Arr((*(_130138_elem)).ptr()) != nullptr) && (*(_1a3cbe148_Arr((*(_130138_elem)).ptr())))._field_Auto)) {
			_case_begin_1a91b4e2e:;
			{
				_1a3ccd322_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a91b4bba:;
	};
	return jule::new_ptr<_1a3cc732c_Sptr>(_1a3cc732c_Sptr{._field_Elem=(*(_130138_elem))});;
}



inline jule::Ptr<_1a3cc732c_Sptr> _1a3cd2b84_buildSptr(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3e1d8_SptrTypeDecl> _132129_decl) {
	jule::Bool _13223_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13223_cycleRisk;
	});;
	jule::Ptr<_1a3cbac27_TypeKind> _13267_elem = _1a3cd5280_checkDecl(_self_, &((*(_132129_decl))._field_Elem));;
	return _1a3cd2843_buildSptrFromType(_self_, &(_13267_elem));;
}



inline jule::Ptr<_1a3ccaae4_Ptr> _1a3cd2ec5_buildPtrFromType(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _133037_elem) {
	{
		
		if (((*(_133037_elem)) == nullptr)) {
			_case_begin_1a83e01e3:;
			{
				return nullptr;;
			}
		}
		else if (((_1a3cbe148_Arr((*(_133037_elem)).ptr()) != nullptr) && (*(_1a3cbe148_Arr((*(_133037_elem)).ptr())))._field_Auto)) {
			_case_begin_1a83e028c:;
			{
				_1a3ccd322_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1a3ccaae4_Ptr>();;
			}
		}
		_match_end_1a83e00d3:;
	};
	return jule::new_ptr<_1a3ccaae4_Ptr>(_1a3ccaae4_Ptr{._field_Elem=(*(_133037_elem))});;
}



inline jule::Ptr<_1a3ccaae4_Ptr> _1a3cd3316_buildPtr(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3eb67_PtrTypeDecl> _134528_decl) {
	jule::Bool _13463_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13463_cycleRisk;
	});;
	jule::Ptr<_1a3cbac27_TypeKind> _135011_elem = nullptr;;
	if ((!(_1a3b3eeca_IsUnsafe(_134528_decl.ptr())))) {
		_135011_elem=_1a3cd5280_checkDecl(_self_, &((*_134528_decl.alloc)._field_Elem));
		return _1a3cd2ec5_buildPtrFromType(_self_, &(_135011_elem));;
	};
	return jule::new_ptr<_1a3ccaae4_Ptr>(_1a3ccaae4_Ptr{._field_Elem=_135011_elem});;
}



inline jule::Ptr<_1a3cc7d00_Slc> _1a3cd3657_buildSlc(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3e56d_SlcTypeDecl> _136228_decl) {
	jule::Bool _13633_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13633_cycleRisk;
	});;
	jule::Ptr<_1a3cbac27_TypeKind> _13677_elem = _1a3cd5280_checkDecl(_self_, &((*(_136228_decl))._field_Elem));;
	{
		
		if ((_13677_elem == nullptr)) {
			_case_begin_1a83e5319:;
			{
				return nullptr;;
			}
		}
		else if (((_1a3cbe148_Arr(_13677_elem.ptr()) != nullptr) && (*(_1a3cbe148_Arr(_13677_elem)))._field_Auto)) {
			_case_begin_1a83e53b3:;
			{
				_1a3ccd322_pushErr(_self_, (*((*_136228_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a83e52b4:;
	};
	return jule::new_ptr<_1a3cc7d00_Slc>(_1a3cc7d00_Slc{._field_Elem=_13677_elem});;
}



inline jule::Ptr<_1a3cca121_Arr> _1a3cd3998_buildArr(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b40409_ArrTypeDecl> _138328_decl) {
	jule::I64 _13847_n = 0LL;;
	if ((!(_1a3b4076c_AutoSized(_138328_decl.ptr())))) {
		jule::Ptr<_1a3c8982d_Data> _13878_size = _1a3ca97b5_evalExpr(_1a3c13c3b_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_138328_decl.alloc)._field_Size);;
		if ((_13878_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1a3c8a235_IsConst(_13878_size.ptr())))) {
			_1a3ccd322_pushErr(_self_, (*((*_138328_decl.alloc)._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1a3cbd378_Prim((*(_13878_size))._field_Kind.ptr()) == nullptr) || (!(_1b57470ba_IsInt((*(_1a3cbd378_Prim((*(_13878_size))._field_Kind)))._field_Kind))))) {
			_1a3ccd322_pushErr(_self_, (*((*_138328_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_13847_n=static_cast<jule::I64>(_1b574a343_AsI64((*(_13878_size))._field_Constant.ptr()));
		if ((_13847_n < 0LL)) {
			_1a3ccd322_pushErr(_self_, (*((*_138328_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14055_max = _1b574312c_MaxI(jule::Str::lit("int", 3));;
			if (((_1b573b09d_BitSize != 64LL) && (static_cast<jule::I64>(_13847_n) > _14055_max))) {
				_1a3ccd322_pushErr(_self_, (*((*_138328_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1a3cb6c34_constoa(&((*(_13878_size))._field_Constant)), &__jule_any_type4),jule::Any(_1b5739a4c_FmtInt(_14055_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1a3cbac27_TypeKind> _14147_elem = _1a3cd5280_checkDecl(_self_, &((*_138328_decl.alloc)._field_Elem));;
	{
		
		if ((_14147_elem == nullptr)) {
			_case_begin_1a83eee7d:;
			{
				return nullptr;;
			}
		}
		else if (((_1a3cbe148_Arr(_14147_elem.ptr()) != nullptr) && (*(_1a3cbe148_Arr(_14147_elem)))._field_Auto)) {
			_case_begin_1a8400005:;
			{
				_1a3ccd322_pushErr(_self_, (*((*_138328_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a83ed399:;
	};
	return jule::new_ptr<_1a3cca121_Arr>(_1a3cca121_Arr{._field_Auto=_1a3b4076c_AutoSized(_138328_decl), ._field_N=_13847_n, ._field_Elem=_14147_elem});;
}



inline jule::Ptr<_1a3cc9494_Map> _1a3cd3cd9_buildMap(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b40b57_MapTypeDecl> _143228_decl) {
	jule::Bool _14333_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14333_cycleRisk;
	});;
	jule::Ptr<_1a3cbac27_TypeKind> _14377_key = _1a3cd5280_checkDecl(_self_, &((*(_143228_decl))._field_Key));;
	if ((_14377_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a3cbac27_TypeKind> _14427_val = _1a3cd5280_checkDecl(_self_, &((*_143228_decl.alloc)._field_Val));;
	if ((_14427_val == nullptr)) {
		return nullptr;;
	};
	if ((_1a3cbdb2b_Enum(_14427_val.ptr()) != nullptr)) {
		_1a3ccd322_pushErr(_self_, (*((*_143228_decl.alloc)._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1a3cc9494_Map>(_1a3cc9494_Map{._field_Key=_14377_key, ._field_Val=_14427_val});;
}



inline jule::Ptr<_1a3cc88e4_Tuple> _1a3cd412a_buildTuple(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3e86a_TupleTypeDecl> _145630_decl) {
	jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>> _14577_types = jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>>::alloc(0LL, (*(_145630_decl))._field_Types.len());;
	{
		auto expr = &((*_145630_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8406490:;
		if (it != expr_end) {
			jule::Ptr<_1a3b3d13d_TypeDecl> _145815_t = *it;
			{
				jule::Ptr<_1a3cbac27_TypeKind> _14598_kind = _1a3cd5280_checkDecl(_self_, &(_145815_t));;
				if ((_14598_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>> &__jule_push_dest = _14577_types; __jule_push_dest.push(_14598_kind); };
			}
			_iter_next_1a8406490:;
			++it;
			goto _iter_begin_1a8406490;
		}
		_iter_end_1a8406490:;
	};
	return jule::new_ptr<_1a3cc88e4_Tuple>(_1a3cc88e4_Tuple{._field_Types=_14577_types});;
}



inline jule::Bool _1a3cd446b_checkFuncTypes(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b770cd_FnIns>* _146935_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146935_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8407eca:;
		if (it != expr_end) {
			jule::Ptr<_1a3b76055_ParamIns> _147015_p = *it;
			{
				(*(_147015_p))._field_Kind=_1a3cd4e3e_build(_self_, &((*((*((*((*_147015_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_147015_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1a3c173d2_checkFnParamKind((*(_self_))._field_s, &(_147015_p));
			}
			_iter_next_1a8407eca:;
			++it;
			goto _iter_begin_1a8407eca;
		}
		_iter_end_1a8407eca:;
	};
	if ((!(_1a3b74570_IsVoid((*((*(_146935_f))))._field_Decl.ptr())))) {
		(*((*(_146935_f))))._field_Result=_1a3cd4e3e_build(_self_, &((*(*((*((*((*((*(_146935_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_146935_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3b770cd_FnIns> _1a3cd47ac_buildFunc(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b4eced_FnDecl> _148729_decl) {
	jule::Bool _14883_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14883_cycleRisk;
	});;
	if (((*(_148729_decl))._field_Generics.len() > 0LL)) {
		_1a3ccd322_pushErr(_self_, (*_148729_decl.alloc)._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3b740ec_Fn> _14977_f = _1a3b7d700_buildFunc(_148729_decl);;
	jule::I64 _14993_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1a3c216c7_checkAnonFuncDecl((*(_self_))._field_s, &(_14977_f));
	if ((_14993_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a3b770cd_FnIns> _15057_ins = _1a3b755c6_instanceForce(_14977_f);;
	(*(_15057_ins))._field_Anon=true;
	(*_15057_ins.alloc)._field_AsAnon=true;
	jule::Bool _15093_ok = _1a3cd446b_checkFuncTypes(_self_, &(_15057_ins));;
	if ((!(_15093_ok))) {
		return nullptr;;
	};
	return _15057_ins;;
}



inline jule::Trait _1a3cd4aed_buildByNamespace(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3dddb_NamespaceTypeDecl> _151736_decl) {
	jule::Str _15183_path = _1a3cd776b_buildLinkPathByTokens(&((*(_151736_decl))._field_Idents));;
	jule::Ptr<_1a3bd86d3_ImportInfo> _15197_imp = ((_1a3cda818_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a3cd8b02_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>>((void*)__jule_anon_1a8412677, jule::Ptr<__jule_anon_1a8412677_ctx>::make(__jule_anon_1a8412677_ctx{._151736_decl=_151736_decl,._15183_path=_15183_path}).as<jule::Uintptr>(), __jule_anon_1a8412677_ctx_handler));;
	jule::Str _15263_selfIdent = jule::Str::lit("self", 4);;
	if (((_15197_imp == nullptr) || (!(_1a3bdac24_isLookupable(_15197_imp.ptr(), &(_15263_selfIdent)))))) {
		_1a3ccd322_pushErr(_self_, (*(_151736_decl))._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15183_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1a3ccd71d_disallowBuiltin(_self_);
	jule::Trait _15337_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15197_imp, (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data1);
	jule::Ptr<_1a3cbac27_TypeKind> _15357_kind = _1a3cd5280_checkDecl(_self_, &((*_151736_decl.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15337_lookup;
	_1a3ccd520_allowBuiltin(_self_);
	return jule::Trait(_15357_kind, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data19);;
}



inline jule::Ptr<_1a3cbac27_TypeKind> _1a3cd4e3e_build(_1a3cccad5_typeChecker* _self_, jule::Any* _154126_declKind) {
	jule::Trait _154211_kind = nullptr;;
	{
		auto &_match_expr{ (*(_154126_declKind)) };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1a8418161:;
			{
				jule::Trait _15458_t = _1a3cd21b1_buildIdent(_self_, (*(_154126_declKind)).cast_ptr<_1a3b3d748_IdentTypeDecl>(&__jule_any_type75));;
				if ((_15458_t != nullptr)) {
					_154211_kind=_15458_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1a841757d:;
			{
				jule::Trait _15508_t = _1a3cd2502_buildSubIdent(_self_, (*(_154126_declKind)).cast_ptr<_1a3b3da12_SubIdentTypeDecl>(&__jule_any_type87));;
				if ((_15508_t != nullptr)) {
					_154211_kind=_15508_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1a8417726:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a3cc732c_Sptr> _15568_t = _1a3cd2b84_buildSptr(_self_, (*(_154126_declKind)).cast_ptr<_1a3b3e1d8_SptrTypeDecl>(&__jule_any_type72));;
				if ((_15568_t != nullptr)) {
					_154211_kind=jule::Trait(_15568_t, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a841778c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a3ccaae4_Ptr> _15628_t = _1a3cd3316_buildPtr(_self_, (*(_154126_declKind)).cast_ptr<_1a3b3eb67_PtrTypeDecl>(&__jule_any_type71));;
				if ((_15628_t != nullptr)) {
					_154211_kind=jule::Trait(_15628_t, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a8417803:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a3cc7d00_Slc> _15688_t = _1a3cd3657_buildSlc(_self_, (*(_154126_declKind)).cast_ptr<_1a3b3e56d_SlcTypeDecl>(&__jule_any_type70));;
				if ((_15688_t != nullptr)) {
					_154211_kind=jule::Trait(_15688_t, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1a8417869:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a3cca121_Arr> _15748_t = _1a3cd3998_buildArr(_self_, (*(_154126_declKind)).cast_ptr<_1a3b40409_ArrTypeDecl>(&__jule_any_type69));;
				if ((_15748_t != nullptr)) {
					_154211_kind=jule::Trait(_15748_t, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a84178d0:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a3cc9494_Map> _15808_t = _1a3cd3cd9_buildMap(_self_, (*(_154126_declKind)).cast_ptr<_1a3b40b57_MapTypeDecl>(&__jule_any_type73));;
				if ((_15808_t != nullptr)) {
					_154211_kind=jule::Trait(_15808_t, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a8417946:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a3cc88e4_Tuple> _15868_t = _1a3cd412a_buildTuple(_self_, (*(_154126_declKind)).cast_ptr<_1a3b3e86a_TupleTypeDecl>(&__jule_any_type74));;
				if ((_15868_t != nullptr)) {
					_154211_kind=jule::Trait(_15868_t, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a841822c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a3b770cd_FnIns> _15928_t = _1a3cd47ac_buildFunc(_self_, (*(_154126_declKind)).cast_ptr<_1a3b4eced_FnDecl>(&__jule_any_type14));;
				if ((_15928_t != nullptr)) {
					_154211_kind=jule::Trait(_15928_t, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a8418293:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _15988_t = _1a3cd4aed_buildByNamespace(_self_, (*(_154126_declKind)).cast_ptr<_1a3b3dddb_NamespaceTypeDecl>(&__jule_any_type91));;
				if ((_15988_t != nullptr)) {
					_154211_kind=_15988_t;
				};
			}
		}
		else {
			_case_begin_1a84176b0:;
			{
				_1a3ccd322_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a841765a:;
	};
	if ((_154211_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _154211_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data19)) {
			_case_begin_1a9b1004e:;
			{
				return _154211_kind.cast_ptr<_1a3cbac27_TypeKind>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1a9b06144:;
			{
				jule::Ptr<_1a3cbac27_TypeKind> _16138_tk = jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=_154211_kind});;
				{
					auto &_match_expr{ _154211_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)) {
						_case_begin_1a9b0d459:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16138_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0)) {
						_case_begin_1a9b0d2e4:;
						{
							jule::Ptr<_1a3b61cbb_StructIns> _16205_s = _154211_kind.cast_ptr<_1a3b61cbb_StructIns>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0);;
							if ((((*(_16205_s))._field_Decl != nullptr) && (*(*(_16205_s))._field_Decl.alloc)._field_Binded)) {
								(*(_16138_tk))._field_BindIdent=(*(*(_16205_s))._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1a9b0d404:;
				};
				return _16138_tk;;
			}
		}
		_match_end_1a9b0c920:;
	};
}



inline jule::Ptr<_1a3cbac27_TypeKind> _1a3cd5280_checkDecl(_1a3cccad5_typeChecker* _self_, jule::Ptr<_1a3b3d13d_TypeDecl>* _162930_decl) {
	jule::Ptr<_1a3b27a62_Token> _16317_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162930_decl))))._field_Token;
	jule::Ptr<_1a3cbac27_TypeKind> _16347_kind = _1a3cd4e3e_build(_self_, &((*((*(_162930_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16317_errorToken;
	return _16347_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3cccad5_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3cd578b_identTypeLookup_eq(_1a3cd578b_identTypeLookup *_self_, _1a3cd578b_identTypeLookup _other_) { return true; }

inline jule::Bool static__1a3cd5bcb_prim(jule::Str* _165618_ident, jule::Ptr<_1a3cc3801_Prim> _165630_t) {
	return ((*(_165630_t))._field_Kind == (*(_165618_ident)));;
}



inline jule::Bool static__1a3cd6050_exist(jule::Str* _166019_ident, jule::Ptr<_1a3cbac27_TypeKind>* _166036_k) {
	{
		
		if ((_1a3cbd378_Prim((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9b15285:;
			{
				return static__1a3cd5bcb_prim(_166019_ident, _1a3cbd378_Prim((*(_166036_k)).ptr()));;
			}
		}
		else if ((_1a3cbd60e_Sptr((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9b1530c:;
			{
				jule::Ptr<_1a3cc732c_Sptr> _16658_sptr = _1a3cbd60e_Sptr((*(_166036_k)).ptr());;
				return static__1a3cd6050_exist(_166019_ident, &((*(_16658_sptr))._field_Elem));;
			}
		}
		else if ((_1a3cbd895_Ptr((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9b15384:;
			{
				jule::Ptr<_1a3ccaae4_Ptr> _16688_ptr = _1a3cbd895_Ptr((*(_166036_k)).ptr());;
				return static__1a3cd6050_exist(_166019_ident, &((*(_16688_ptr))._field_Elem));;
			}
		}
		else if ((_1a3cbe3ce_Slc((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9b1540b:;
			{
				jule::Ptr<_1a3cc7d00_Slc> _16718_slc = _1a3cbe3ce_Slc((*(_166036_k)).ptr());;
				return static__1a3cd6050_exist(_166019_ident, &((*(_16718_slc))._field_Elem));;
			}
		}
		else if ((_1a3cbe148_Arr((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9b155c6:;
			{
				jule::Ptr<_1a3cca121_Arr> _16748_arr = _1a3cbe148_Arr((*(_166036_k)).ptr());;
				return static__1a3cd6050_exist(_166019_ident, &((*(_16748_arr))._field_Elem));;
			}
		}
		else if ((_1a3cbee18_Map((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9b1563c:;
			{
				jule::Ptr<_1a3cc9494_Map> _16778_m = _1a3cbee18_Map((*(_166036_k)).ptr());;
				return (static__1a3cd6050_exist(_166019_ident, &((*(_16778_m))._field_Key)) || static__1a3cd6050_exist(_166019_ident, &((*_16778_m.alloc)._field_Val)));;
			}
		}
		else if ((_1a3cbe8eb_Struct((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9b156a3:;
			{
				jule::Ptr<_1a3b61cbb_StructIns> _16818_s = _1a3cbe8eb_Struct((*(_166036_k)).ptr());;
				{
					auto expr = &((*(_16818_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9b1c776:;
					if (it != expr_end) {
						jule::Ptr<_1a3cb9341_InsGeneric> _168216_g = *it;
						{
							if (static__1a3cd6050_exist(_166019_ident, &((*(_168216_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1a9b1c776:;
						++it;
						goto _iter_begin_1a9b1c776;
					}
					_iter_end_1a9b1c776:;
				};
				return false;;
			}
		}
		else if ((_1a3cbe665_Fn((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9b15719:;
			{
				jule::Ptr<_1a3b770cd_FnIns> _16898_f = _1a3cbe665_Fn((*(_166036_k)).ptr());;
				{
					auto expr = &((*(_16898_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9b1e39e:;
					if (it != expr_end) {
						jule::Ptr<_1a3b76055_ParamIns> _169016_p = *it;
						{
							if (_1a3b72c44_IsSelf((*(_169016_p))._field_Decl.ptr())) {
								goto _iter_next_1a9b1e39e;
							};
							if (static__1a3cd6050_exist(_166019_ident, &((*_169016_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1a9b1e39e:;
						++it;
						goto _iter_begin_1a9b1e39e;
					}
					_iter_end_1a9b1e39e:;
				};
				if (((*_16898_f.alloc)._field_Result != nullptr)) {
					return static__1a3cd6050_exist(_166019_ident, &((*_16898_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1a3cc019e_Tup((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9b15791:;
			{
				jule::Ptr<_1a3cc88e4_Tuple> _17038_tup = _1a3cc019e_Tup((*(_166036_k)).ptr());;
				{
					auto expr = &((*(_17038_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9b21bba:;
					if (it != expr_end) {
						jule::Ptr<_1a3cbac27_TypeKind> _170416_t = *it;
						{
							if (static__1a3cd6050_exist(_166019_ident, &(_170416_t))) {
								return true;;
							};
						}
						_iter_next_1a9b21bba:;
						++it;
						goto _iter_begin_1a9b21bba;
					}
					_iter_end_1a9b21bba:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1a9b15164:;
			{
				return false;;
			}
		}
		_match_end_1a9b15065:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a3cd578b_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a55a639b_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a55ec106_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1a55ed118_stop(_1a55ec997_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1a55ed39e_stopped(_1a55ec997_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1a55ed635_finished(_1a55ec997_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1a55ed8bb_isLastSt(_1a55ec997_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1a55edc2e_pushErr(_1a55ec997_scopeParser* _self_, jule::Ptr<_1a3b27a62_Token> _18823_token, jule::Str _18838_fmt) {
	_1a561b9c7_pushErr((*(_self_))._field_p.ptr(), _18823_token, _18838_fmt, jule::Slice<jule::Any>());
}



inline void _1a55ee092_pushSuggestion(_1a55ec997_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args) {
	_1a561bd3a_pushSuggestion((*(_self_))._field_p.ptr(), _19330_fmt, _19343_args);
}



inline void _1a55ee34a_insertAsNext(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _19733_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1a55ec106_stmt>(_1a55ec106_stmt{._field_tokens=(*(_19733_tokens)), });
}



inline jule::Ptr<_1a55ec106_stmt> _1a55ee5d1_next(_1a55ec997_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1a3b4d15e_ScopeTree> _1a55ee9cc_buildScope(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _20731_tokens, jule::Ptr<_1a3b27a62_Token> _20753_end) {
	jule::Ptr<_1a3b4d15e_ScopeTree> _2087_s = _1a55ead80_newScope();;
	(*(_2087_s))._field_Parent=(*(_self_))._field_s;
	(*_2087_s.alloc)._field_End=_20753_end;
	_1a55ec997_scopeParser _2117_ssp = _1a55ec997_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1a5609850_build(&_2117_ssp, _20731_tokens, &(_2087_s));
	return _2087_s;;
}



inline jule::Ptr<_1a3b50ea8_VarDecl> _1a55eed1d_buildVarSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _21831_tokens) {
	jule::Ptr<_1a3b50ea8_VarDecl> _2197_v = _1a561e799_buildVar((*(_self_))._field_p, (*(_21831_tokens)));;
	if ((_2197_v != nullptr)) {
		(*_2197_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _2197_v;;
}



inline jule::Ptr<_1a3b51382_RetSt> _1a560015e_buildRetSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _22630_tokens) {
	jule::Ptr<_1a3b51382_RetSt> _2277_st = jule::new_ptr<_1a3b51382_RetSt>(_1a3b51382_RetSt{._field_Token=_22630_tokens[0LL], });;
	if ((_22630_tokens.len() > 1LL)) {
		(_22630_tokens).mut_slice(1LL);;
		(*(_2277_st))._field_Expr=_1a561c17b_buildExpr((*(_self_))._field_p, &(_22630_tokens));
	};
	return _2277_st;;
}



inline jule::Ptr<_1a3b51b02_Iter> _1a56004a0_buildWhileNextIter(_1a55ec997_scopeParser* _self_, jule::Ptr<_1a55ec106_stmt>* _23739_s) {
	jule::Ptr<_1a3b51b02_Iter> _2387_it = jule::new_ptr<_1a3b51b02_Iter>(_1a3b51b02_Iter{._field_Token=(*((*(_23739_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _2417_tokens = (*((*(_23739_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1a3b5242c_WhileKind> _2427_kind = jule::new_ptr<_1a3b5242c_WhileKind>();;
	if ((_2417_tokens.len() > 0LL)) {
		(*_2427_kind.alloc)._field_Expr=_1a561c17b_buildExpr((*(_self_))._field_p, &(_2417_tokens));
	};
	if (_1a55ed8bb_isLastSt(_self_)) {
		_1a55edc2e_pushErr(_self_, (*(_2387_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_2417_tokens=(*(_1a55ee5d1_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _2547_stTokens = _1a56161db_getBlockExpr(&(_2417_tokens));;
	if ((_2547_stTokens.len() > 0LL)) {
		jule::Ptr<_1a55ec106_stmt> _2568_stmt = jule::new_ptr<_1a55ec106_stmt>(_1a55ec106_stmt{._field_tokens=_2547_stTokens, ._field_terminated=(*((*(_23739_s))))._field_terminated});;
		(*_2427_kind.alloc)._field_NextToken=_2547_stTokens[0LL];
		(*_2427_kind.alloc)._field_Next=_1a56094dc_buildSt(_self_, &(_2568_stmt));
	};
	jule::I64 _2647_i = _2547_stTokens.len();;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _2657_blockTokens = _1a56196c8_range(&(_2647_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_2417_tokens));;
	if ((_2657_blockTokens == nullptr)) {
		_1a55ed118_stop(_self_);
		_1a55edc2e_pushErr(_self_, (*_2387_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1a55ee092_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2647_i < _2417_tokens.len())) {
		_1a55edc2e_pushErr(_self_, _2417_tokens[_2647_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_2387_it.alloc)._field_Scope=_1a55ee9cc_buildScope(_self_, &(_2657_blockTokens), _2417_tokens[(_2647_i - 1LL)]);
	(*_2387_it.alloc)._field_Kind=jule::Any(_2427_kind, &__jule_any_type36);
	return _2387_it;;
}



inline jule::Ptr<_1a3b5242c_WhileKind> _1a56007e1_buildWhileIterKind(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _28239_tokens) {
	return jule::new_ptr<_1a3b5242c_WhileKind>(_1a3b5242c_WhileKind{._field_Expr=_1a561c17b_buildExpr((*(_self_))._field_p, _28239_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _1a5600b32_getRangeKindKeysTokens(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _28843_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _2897_vars;
	jule::Slice<_1e7c94ecb_Log> _28913_errs;
	({
		__jule_tuple_ssx_1a3b27a62_Token__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a5619e48_parts(_28843_toks, static_cast<jule::U64>(5LLU), true);
		_2897_vars = __jule_assign_result.__jule_result_arg0;
		_28913_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_28913_errs);
	return _2897_vars;;
}



inline jule::Ptr<_1a3b50ea8_VarDecl> _1a5600e73_buildRangeKindKey(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _29438_tokens) {
	if (((*(_29438_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a3b50ea8_VarDecl> _2987_key = jule::new_ptr<_1a3b50ea8_VarDecl>(_1a3b50ea8_VarDecl{._field_Token=(*(_29438_tokens))[0LL], ._field_Setter=(*(_29438_tokens))[0LL], });;
	if (((*((*(_2987_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_2987_key.alloc)._field_Mutable=true;
		if (((*(_29438_tokens)).len() == 1LL)) {
			_1a55edc2e_pushErr(_self_, (*_2987_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*_2987_key.alloc)._field_Token=(*(_29438_tokens))[1LL];
	} else if (((*(_29438_tokens)).len() > 1LL)) {
		_1a55edc2e_pushErr(_self_, (*(_29438_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_2987_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a55edc2e_pushErr(_self_, (*_2987_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		_1a55ee092_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_2987_key.alloc)._field_Ident=(*(*(_2987_key))._field_Token.alloc)._field_Kind;
	return _2987_key;;
}



inline jule::Slice<jule::Ptr<_1a3b50ea8_VarDecl>> _1a56012b4_buildRangeKindKeys(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>>* _32039_parts) {
	jule::Slice<jule::Ptr<_1a3b50ea8_VarDecl>> _32111_keys = nullptr;;
	{
		auto expr = _32039_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a960335b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3b27a62_Token>> _32215_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3b50ea8_VarDecl>> &__jule_push_dest = _32111_keys; __jule_push_dest.push(_1a5600e73_buildRangeKindKey(_self_, &(_32215_tokens))); };
			}
			_iter_next_1a960335b:;
			++it;
			goto _iter_begin_1a960335b;
		}
		_iter_end_1a960335b:;
	};
	return _32111_keys;;
}



inline void _1a5601627_setupRangeKindKeysPlain(_1a55ec997_scopeParser* _self_, jule::Ptr<_1a3b52d34_RangeKind>* _32844_rng, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _32866_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _3297_keyTokens = _1a5600b32_getRangeKindKeysTokens(_self_, _32866_tokens);;
	if ((_3297_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_3297_keyTokens.len() > 2LL)) {
		_1a55edc2e_pushErr(_self_, (*((*(_32844_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1a3b50ea8_VarDecl>> _3367_keys = _1a56012b4_buildRangeKindKeys(_self_, &(_3297_keyTokens));;
	(*((*(_32844_rng))))._field_KeyA=_3367_keys[0LL];
	if ((_3367_keys.len() > 1LL)) {
		(*((*(_32844_rng))))._field_KeyB=_3367_keys[1LL];
	};
}



inline void _1a560198a_setupRangeKindKeysExplicit(_1a55ec997_scopeParser* _self_, jule::Ptr<_1a3b52d34_RangeKind>* _34347_rng, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _34369_tokens) {
	jule::I64 _3447_i = 0LL;;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _3457_rang = _1a56196c8_range(&(_3447_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34369_tokens);;
	if ((_3447_i < (*(_34369_tokens)).len())) {
		_1a55edc2e_pushErr(_self_, (*((*(_34347_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1a5601627_setupRangeKindKeysPlain(_self_, _34347_rng, &(_3457_rang));
}



inline void _1a5601ced_setupRangeKindKeys(_1a55ec997_scopeParser* _self_, jule::Ptr<_1a3b52d34_RangeKind>* _35239_rng, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _35261_tokens) {
	if (((*((*(_35261_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1a560198a_setupRangeKindKeysExplicit(_self_, _35239_rng, _35261_tokens);
		return;;
	};
	_1a5601627_setupRangeKindKeysPlain(_self_, _35239_rng, _35261_tokens);
}



inline jule::Ptr<_1a3b52d34_RangeKind> _1a56022a4_buildRangeIterKind(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _36039_var_tokens, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _3618_exprTokens, jule::Ptr<_1a3b27a62_Token>* _36135_inToken) {
	jule::Ptr<_1a3b52d34_RangeKind> _3627_rng = jule::new_ptr<_1a3b52d34_RangeKind>(_1a3b52d34_RangeKind{._field_InToken=(*(_36135_inToken)), });;
	if (((*(_3618_exprTokens)).len() == 0LL)) {
		_1a55edc2e_pushErr(_self_, (*(_3627_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _3627_rng;;
	};
	(*_3627_rng.alloc)._field_Expr=_1a561c17b_buildExpr((*(_self_))._field_p, _3618_exprTokens);
	if (((*(_36039_var_tokens)).len() > 0LL)) {
		_1a5601ced_setupRangeKindKeys(_self_, &(_3627_rng), _36039_var_tokens);
	};
	return _3627_rng;;
}



inline jule::Any _1a56026a0_buildCommonIterKind(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _37640_tokens, jule::Ptr<_1a3b27a62_Token>* _37659_err_tok) {
	jule::I64 _3777_braceN = 0LL;;
	{
		auto expr = _37640_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a91bd9c6:;
		if (it != expr_end) {
			jule::I64 _3788_i = it - expr->begin();
			jule::Ptr<_1a3b27a62_Token> _37815_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37815_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a91be477:;
						{
							(_3777_braceN)++;
							goto _iter_next_1a91bd9c6;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a91be851:;
						{
							(_3777_braceN)--;
						}
					}
					_match_end_1a91be763:;
				};
				if ((_3777_braceN != 0LL)) {
					goto _iter_next_1a91bd9c6;
				};
				{
					auto &_match_expr{ (*(_37815_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1a91c0a50:;
						{
							jule::Slice<jule::Ptr<_1a3b27a62_Token>> _3959_declTokens = (*(_37640_tokens)).slice(0LL, _3788_i);;
							jule::Slice<jule::Ptr<_1a3b27a62_Token>> _3969_exprTokens = (*(_37640_tokens)).slice((_3788_i + 1LL));;
							return jule::Any(_1a56022a4_buildRangeIterKind(_self_, &(_3959_declTokens), &(_3969_exprTokens), &(_37815_tok)), &__jule_any_type38);;
						}
					}
					_match_end_1a91c1039:;
				};
			}
			_iter_next_1a91bd9c6:;
			++it;
			_3788_i++;
			goto _iter_begin_1a91bd9c6;
		}
		_iter_end_1a91bd9c6:;
	};
	return jule::Any(_1a56007e1_buildWhileIterKind(_self_, _37640_tokens), &__jule_any_type36);;
}



inline jule::Ptr<_1a3b51b02_Iter> _1a56029e1_buildCommonIter(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _40335_tokens) {
	jule::Ptr<_1a3b51b02_Iter> _4047_it = jule::new_ptr<_1a3b51b02_Iter>(_1a3b51b02_Iter{._field_Token=_40335_tokens[0LL], });;
	(_40335_tokens).mut_slice(1LL);;
	if ((_40335_tokens.len() == 0LL)) {
		_1a55ed118_stop(_self_);
		_1a55edc2e_pushErr(_self_, (*(_4047_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1a55ee092_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _4147_exprTokens = _1a56161db_getBlockExpr(&(_40335_tokens));;
	if ((_4147_exprTokens.len() > 0LL)) {
		(*_4047_it.alloc)._field_Kind=_1a56026a0_buildCommonIterKind(_self_, &(_4147_exprTokens), &((*_4047_it.alloc)._field_Token));
	};
	jule::I64 _4187_i = _4147_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _4197_scopeTokens = _1a56196c8_range(&(_4187_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40335_tokens));;
	if ((_4197_scopeTokens == nullptr)) {
		_1a55ed118_stop(_self_);
		_1a55edc2e_pushErr(_self_, (*_4047_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1a55ee092_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_4187_i < _40335_tokens.len())) {
		_1a55edc2e_pushErr(_self_, _40335_tokens[_4187_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_4047_it.alloc)._field_Scope=_1a55ee9cc_buildScope(_self_, &(_4197_scopeTokens), _40335_tokens[(_4187_i - 1LL)]);
	return _4047_it;;
}



inline jule::Ptr<_1a3b51b02_Iter> _1a5602d32_buildIterSt(_1a55ec997_scopeParser* _self_, jule::Ptr<_1a55ec106_stmt>* _43332_st) {
	if ((*((*(_43332_st))))._field_terminated) {
		return _1a56004a0_buildWhileNextIter(_self_, _43332_st);;
	};
	return _1a56029e1_buildCommonIter(_self_, (*((*(_43332_st))))._field_tokens);;
}



inline jule::Ptr<_1a3b5320d_BreakSt> _1a5603173_buildBreakSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _44033_tokens) {
	jule::Ptr<_1a3b5320d_BreakSt> _4417_brk = jule::new_ptr<_1a3b5320d_BreakSt>(_1a3b5320d_BreakSt{._field_Token=(*(_44033_tokens))[0LL], });;
	if (((*(_44033_tokens)).len() > 1LL)) {
		if (((*((*(_44033_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a55edc2e_pushErr(_self_, (*(_44033_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1a55ee092_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_4417_brk))._field_Label=(*(_44033_tokens))[1LL];
			if (((*(_44033_tokens)).len() > 2LL)) {
				_1a55edc2e_pushErr(_self_, (*(_44033_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _4417_brk;;
}



inline jule::Ptr<_1a3b535d7_ContSt> _1a56034b4_buildContSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _45832_tokens) {
	jule::Ptr<_1a3b535d7_ContSt> _4597_cont = jule::new_ptr<_1a3b535d7_ContSt>(_1a3b535d7_ContSt{._field_Token=(*(_45832_tokens))[0LL], });;
	if (((*(_45832_tokens)).len() > 1LL)) {
		if (((*((*(_45832_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a55edc2e_pushErr(_self_, (*(_45832_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1a55ee092_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_4597_cont))._field_Label=(*(_45832_tokens))[1LL];
			if (((*(_45832_tokens)).len() > 2LL)) {
				_1a55edc2e_pushErr(_self_, (*(_45832_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _4597_cont;;
}



inline jule::Ptr<_1a3b53a8d_If> _1a5603805_buildIf(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _47628_tokens) {
	jule::Ptr<_1a3b53a8d_If> _4777_model = jule::new_ptr<_1a3b53a8d_If>(_1a3b53a8d_If{._field_Token=(*(_47628_tokens))[0LL], });;
	((*(_47628_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _4817_exprTokens = _1a56161db_getBlockExpr(_47628_tokens);;
	jule::I64 _4827_i = 0LL;;
	if ((_4817_exprTokens.len() == 0LL)) {
		_1a55edc2e_pushErr(_self_, (*(_4777_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_4827_i=_4817_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _4887_scopeTokens = _1a56196c8_range(&(_4827_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47628_tokens);;
	if ((_4887_scopeTokens == nullptr)) {
		_1a55ed118_stop(_self_);
		_1a55edc2e_pushErr(_self_, (*(_4777_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1a55ee092_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3b27a62_Token> _4957_end = (*(_47628_tokens))[(_4827_i - 1LL)];;
	if ((_4827_i < (*(_47628_tokens)).len())) {
		if (((*((*(_47628_tokens))[_4827_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47628_tokens))).mut_slice(_4827_i);;
		} else {
			_1a55edc2e_pushErr(_self_, (*(_47628_tokens))[_4827_i], jule::Str::lit("invalid syntax", 14));
			(*(_47628_tokens))=nullptr;
		};
	};
	(*_4777_model.alloc)._field_Expr=_1a561c17b_buildExpr((*(_self_))._field_p, &(_4817_exprTokens));
	(*_4777_model.alloc)._field_Scope=_1a55ee9cc_buildScope(_self_, &(_4887_scopeTokens), _4957_end);
	return _4777_model;;
}



inline jule::Ptr<_1a3b53e67_Else> _1a5603b46_buildElse(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _50930_tokens) {
	jule::Ptr<_1a3b53e67_Else> _5107_els = jule::new_ptr<_1a3b53e67_Else>(_1a3b53e67_Else{._field_Token=(*(_50930_tokens))[0LL], });;
	((*(_50930_tokens))).mut_slice(1LL);;
	jule::I64 _5147_i = 0LL;;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _5157_scopeTokens = _1a56196c8_range(&(_5147_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50930_tokens);;
	if ((_5157_scopeTokens == nullptr)) {
		if ((_5147_i < (*(_50930_tokens)).len())) {
			_1a55edc2e_pushErr(_self_, (*(_5107_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1a55ed118_stop(_self_);
			_1a55edc2e_pushErr(_self_, (*(_5107_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1a55ee092_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_5147_i < (*(_50930_tokens)).len())) {
		_1a55edc2e_pushErr(_self_, (*(_50930_tokens))[_5147_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_5107_els))._field_Scope=_1a55ee9cc_buildScope(_self_, &(_5157_scopeTokens), (*(_50930_tokens))[(_5147_i - 1LL)]);
	return _5107_els;;
}



inline jule::Ptr<_1a3b5441d_Conditional> _1a5603e87_buildIfElseChain(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _53336_tokens) {
	jule::Ptr<_1a3b5441d_Conditional> _5347_chain = jule::new_ptr<_1a3b5441d_Conditional>(_1a3b5441d_Conditional{._field_Head=_1a5603805_buildIf(_self_, &(_53336_tokens)), });;
	if (((*(_5347_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53336_tokens.len() != 0LL)) {
		{
			if (((*(_53336_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1a841dd15;
			};
			if (((_53336_tokens.len() > 1LL) && ((*(_53336_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53336_tokens).mut_slice(1LL);;
				jule::Ptr<_1a3b53a8d_If> _5469_elif = _1a5603805_buildIf(_self_, &(_53336_tokens));;
				(*_5347_chain.alloc)._field_Tail=jule::append((*_5347_chain.alloc)._field_Tail,jule::Slice<jule::Ptr<_1a3b53a8d_If>>::make({_5469_elif}));
				goto _iter_next_1a841dd15;
			};
			(*_5347_chain.alloc)._field_Default=_1a5603b46_buildElse(_self_, &(_53336_tokens));
			goto _iter_end_1a841dd15;
		}
	_iter_next_1a841dd15:;
	}
	_iter_end_1a841dd15:;;
	return _5347_chain;;
}



inline jule::Ptr<_1a3b42472_Expr> _1a56042c8_buildCoCallSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _55633_tokens) {
	jule::Ptr<_1a3b27a62_Token> _5573_token = _55633_tokens[0LL];;
	(_55633_tokens).mut_slice(1LL);;
	jule::Ptr<_1a3b42472_Expr> _5597_e = _1a561c17b_buildExpr((*(_self_))._field_p, &(_55633_tokens));;
	if ((_5597_e == nullptr)) {
		return _5597_e;;
	};
	{
		auto &_match_expr{ (*(_5597_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1a97d48a0:;
			{
				(*((*(_5597_e))._field_Kind.unsafe_cast_ptr<_1a3b4619b_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1a97d4dcd:;
			{
				_1a55edc2e_pushErr(_self_, _5573_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1a97d4d78:;
	};
	return _5597_e;;
}



inline jule::Ptr<_1a3b4aaeb_GotoSt> _1a5604619_buildGotoSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _57232_tokens) {
	jule::Ptr<_1a3b4aaeb_GotoSt> _5737_gt = jule::new_ptr<_1a3b4aaeb_GotoSt>(_1a3b4aaeb_GotoSt{._field_Token=(*(_57232_tokens))[0LL], });;
	if (((*(_57232_tokens)).len() == 1LL)) {
		_1a55edc2e_pushErr(_self_, (*(_5737_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57232_tokens)).len() > 2LL)) {
		_1a55edc2e_pushErr(_self_, (*(_57232_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1a3b27a62_Token> _5827_identToken = (*(_57232_tokens))[1LL];;
	if (((*(_5827_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a55edc2e_pushErr(_self_, _5827_identToken, jule::Str::lit("invalid syntax", 14));
		_1a55ee092_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _5737_gt;;
	};
	(*(_5737_gt))._field_Label=_5827_identToken;
	return _5737_gt;;
}



inline jule::Ptr<_1a3b4ade8_FallSt> _1a560495a_buildFallSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _59232_tokens) {
	jule::Ptr<_1a3b4ade8_FallSt> _5937_fll = jule::new_ptr<_1a3b4ade8_FallSt>(_1a3b4ade8_FallSt{._field_Token=(*(_59232_tokens))[0LL]});;
	if (((*(_59232_tokens)).len() > 1LL)) {
		_1a55edc2e_pushErr(_self_, (*(_59232_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _5937_fll;;
}



inline jule::Ptr<_1a3b54b5a_TypeAliasDecl> _1a5604c9b_buildTypeAliasSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _60237_tokens) {
	jule::Ptr<_1a3b54b5a_TypeAliasDecl> _6037_tad = _1a561d91e_buildTypeAliasDecl((*(_self_))._field_p, _60237_tokens);;
	(*(_6037_tad))._field_Scope=(*(_self_))._field_s;
	return _6037_tad;;
}



inline void _1a5605274_pushCaseExpr(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _60832_tokens, jule::Ptr<_1a3b27a62_Token> _60854_token, jule::Bool _6093_typeMatch, jule::Slice<jule::Ptr<_1a3b42472_Expr>>* _60925_exprs) {
	if ((_60832_tokens.len() == 0LL)) {
		return;;
	};
	if (_6093_typeMatch) {
		jule::I64 _6148_i = 0LL;;
		jule::Ptr<_1a3b3d13d_TypeDecl> _6158_t;
		jule::Bool _61511_ok;
		({
			__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType((*(_self_))._field_p, &(_60832_tokens), (&(_6148_i)), true);
			_6158_t = __jule_assign_result.__jule_result_arg0;
			_61511_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61511_ok) {
			{ jule::Slice<jule::Ptr<_1a3b42472_Expr>> &__jule_push_dest = (*(_60925_exprs)); __jule_push_dest.push(jule::new_ptr<_1a3b42472_Expr>(_1a3b42472_Expr{._field_Token=_60832_tokens[0LL], ._field_End=_60832_tokens[(_60832_tokens.len() - 1LL)], ._field_Kind=jule::Any(_6158_t, &__jule_any_type89)})); };
			if ((_6148_i < _60832_tokens.len())) {
				_1a55edc2e_pushErr(_self_, _60832_tokens[_6148_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a3b42472_Expr>> &__jule_push_dest = (*(_60925_exprs)); __jule_push_dest.push(_1a561c17b_buildExpr((*(_self_))._field_p, &(_60832_tokens))); };
}



inline __jule_tuple_sx_1a3b42472_Expr__jule_tuple_bool _1a560572a_buildCaseExprs(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _63135_tokens, jule::Ptr<_1a3b27a62_Token>* _63158_colon, jule::Bool _63173_typeMatch) {
	__jule_tuple_sx_1a3b42472_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1a3b42472_Expr>> _6327_exprs = jule::Slice<jule::Ptr<_1a3b42472_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _6337_braceN = 0LL;;
	jule::I64 _6347_j = 0LL;;
	{
		auto expr = _63135_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97e137e:;
		if (it != expr_end) {
			jule::I64 _6358_i = it - expr->begin();
			jule::Ptr<_1a3b27a62_Token> _63515_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63515_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1a97e26d2:;
						{
							(_6337_braceN)++;
							goto _iter_next_1a97e137e;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1a97e2aab:;
						{
							(_6337_braceN)--;
							goto _iter_next_1a97e137e;
						}
					}
					_match_end_1a97e29bd:;
				};
				if ((_6337_braceN != 0LL)) {
					goto _iter_next_1a97e137e;
				};
				{
					
					if (((*(_63515_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1a97e422d:;
						{
							jule::Slice<jule::Ptr<_1a3b27a62_Token>> _6545_exprTokens = (*(_63135_tokens)).slice(_6347_j, _6358_i);;
							if ((_6545_exprTokens.len() == 0LL)) {
								_1a55edc2e_pushErr(_self_, _63515_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1a5605274_pushCaseExpr(_self_, (*(_63135_tokens)).slice(_6347_j, _6358_i), _63515_tok, _63173_typeMatch, &(_6327_exprs));
							};
							_6347_j=(_6358_i + 1LL);
						}
					}
					else if (((*(_63515_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1a97e4294:;
						{
							(*(_63158_colon))=_63515_tok;
							_1a5605274_pushCaseExpr(_self_, (*(_63135_tokens)).slice(_6347_j, _6358_i), _63515_tok, _63173_typeMatch, &(_6327_exprs));
							((*(_63135_tokens))).mut_slice((_6358_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _6327_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6358_i - _6347_j) == 0LL) || (_6327_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1a97e411d:;
				};
			}
			_iter_next_1a97e137e:;
			++it;
			_6358_i++;
			goto _iter_begin_1a97e137e;
		}
		_iter_end_1a97e137e:;
	};
	_1a55edc2e_pushErr(_self_, (*(_63135_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_63135_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3b4d15e_ScopeTree> _1a5605a6b_buildCaseScope(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _67335_tokens) {
	jule::I64 _6747_n = 0LL;;
	for (;;) {
		{
			jule::I64 _6768_i = 0LL;;
			jule::Slice<jule::Ptr<_1a3b27a62_Token>> _6778_next;
			({
				__jule_tuple_sx_1a3b27a62_Token__jule_tuple_bool __jule_assign_result = _1a55ebcc6_skipSt(&(_6768_i), (*(_67335_tokens)).slice(_6747_n));
				_6778_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6778_next.len() == 0LL)) {
				goto _iter_end_1a97e7d47;
			};
			jule::Ptr<_1a3b27a62_Token> _6814_tok = _6778_next[0LL];;
			if (((*(_6814_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_6747_n+=_6768_i;
				goto _iter_next_1a97e7d47;
			};
			jule::Slice<jule::Ptr<_1a3b27a62_Token>> _6868_scopeTokens = (*(_67335_tokens)).slice(0LL, _6747_n);;
			jule::Ptr<_1a3b4d15e_ScopeTree> _6878_scope = _1a55ee9cc_buildScope(_self_, &(_6868_scopeTokens), (*(_67335_tokens))[_6747_n]);;
			((*(_67335_tokens))).mut_slice(_6747_n);;
			return _6878_scope;;
		}
	_iter_next_1a97e7d47:;
	}
	_iter_end_1a97e7d47:;;
	jule::Ptr<_1a3b27a62_Token> _69111_end;;
	if (((*(_67335_tokens)).len() > 0LL)) {
		_69111_end=(*(_67335_tokens))[((*(_67335_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1a3b4d15e_ScopeTree> _6957_scope = _1a55ee9cc_buildScope(_self_, _67335_tokens, _69111_end);;
	(*(_67335_tokens))=nullptr;
	return _6957_scope;;
}



inline __jule_tuple_x_1a3b55111_Case__jule_tuple_bool _1a5605e67_buildCase(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _70030_tokens, jule::Bool _70048_typeMatch) {
	__jule_tuple_x_1a3b55111_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a3b55111_Case> _7017_c = jule::new_ptr<_1a3b55111_Case>(_1a3b55111_Case{._field_Token=(*(_70030_tokens))[0LL], });;
	((*(_70030_tokens))).mut_slice(1LL);;
	jule::Ptr<_1a3b27a62_Token> _70511_colon = nullptr;;
	jule::Bool _70612_ok;
	({
		__jule_tuple_sx_1a3b42472_Expr__jule_tuple_bool __jule_assign_result = _1a560572a_buildCaseExprs(_self_, _70030_tokens, &(_70511_colon), _70048_typeMatch);
		(*(_7017_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_70612_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_7017_c.alloc)._field_Scope=_1a5605a6b_buildCaseScope(_self_, _70030_tokens);
	if (((*((*_7017_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_7017_c))._field_Scope.alloc)._field_End=_70511_colon;
	};
	jule::Bool _7113_isDefault = (_70612_ok && ((*_7017_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _7017_c;
	__jule_func_result.__jule_result_arg1 = _7113_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a3b55111_Case__jule_tuple_x_1a3b53e67_Else _1a5606363_buildCases(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _71530_tokens, jule::Bool _71548_typeMatch) {
	__jule_tuple_sx_1a3b55111_Case__jule_tuple_x_1a3b53e67_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1a3b55111_Case>> _71611_cases = nullptr;;
	jule::Ptr<_1a3b53e67_Else> _71711_def = nullptr;;
	jule::Bool _7187_defNotLast = false;;
	while ((_71530_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1a3b27a62_Token> _7208_tok = _71530_tokens[0LL];;
			if (((*(_7208_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1a55edc2e_pushErr(_self_, _7208_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1a9801405;
			};
			jule::Ptr<_1a3b55111_Case> _7258_c;
			jule::Bool _72511_isDefault;
			({
				__jule_tuple_x_1a3b55111_Case__jule_tuple_bool __jule_assign_result = _1a5605e67_buildCase(_self_, &(_71530_tokens), _71548_typeMatch);
				_7258_c = __jule_assign_result.__jule_result_arg0;
				_72511_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72511_isDefault) {
				(*(_7258_c))._field_Token=_7208_tok;
				if ((_71711_def == nullptr)) {
					_71711_def=jule::new_ptr<_1a3b53e67_Else>(_1a3b53e67_Else{._field_Token=(*_7258_c.alloc)._field_Token, ._field_Scope=(*_7258_c.alloc)._field_Scope});
				} else {
					_1a55edc2e_pushErr(_self_, _7208_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_7187_defNotLast=(_7187_defNotLast || (_71711_def != nullptr));
				{ jule::Slice<jule::Ptr<_1a3b55111_Case>> &__jule_push_dest = _71611_cases; __jule_push_dest.push(_7258_c); };
			};
		}
	_iter_next_1a9801405:;
	}
	_iter_end_1a9801405:;;
	if (_7187_defNotLast) {
		_1a55edc2e_pushErr(_self_, (*(_71711_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71611_cases;
	__jule_func_result.__jule_result_arg1 = _71711_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3b5592a_MatchCase> _1a56066a4_buildMatchCase(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _74934_tokens) {
	jule::Ptr<_1a3b5592a_MatchCase> _7507_m = jule::new_ptr<_1a3b5592a_MatchCase>(_1a3b5592a_MatchCase{._field_Token=_74934_tokens[0LL], });;
	(_74934_tokens).mut_slice(1LL);;
	if (((_74934_tokens.len() > 0LL) && ((*(_74934_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_7507_m))._field_TypeMatch=true;
		(_74934_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _7607_exprTokens = _1a56161db_getBlockExpr(&(_74934_tokens));;
	if ((_7607_exprTokens.len() > 0LL)) {
		(*_7507_m.alloc)._field_Expr=_1a561c17b_buildExpr((*(_self_))._field_p, &(_7607_exprTokens));
	} else if ((*_7507_m.alloc)._field_TypeMatch) {
		_1a55edc2e_pushErr(_self_, (*_7507_m.alloc)._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I64 _7677_i = _7607_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _7687_blockToks = _1a56196c8_range(&(_7677_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74934_tokens));;
	if ((_7687_blockToks == nullptr)) {
		_1a55ed118_stop(_self_);
		_1a55edc2e_pushErr(_self_, (*_7507_m.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1a55ee092_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7677_i < _74934_tokens.len())) {
		_1a55edc2e_pushErr(_self_, _74934_tokens[_7677_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_7507_m.alloc)._field_End=_74934_tokens[(_7677_i - 1LL)];
	({
		__jule_tuple_sx_1a3b55111_Case__jule_tuple_x_1a3b53e67_Else __jule_assign_result = _1a5606363_buildCases(_self_, _7687_blockToks, (*_7507_m.alloc)._field_TypeMatch);
		(*_7507_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7507_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7507_m;;
}



inline jule::Ptr<_1a3b4d15e_ScopeTree> _1a56069e5_buildScopeSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _78232_tokens) {
	jule::Bool _7837_isUnsafe = false;;
	jule::Bool _7847_isDeferred = false;;
	jule::Ptr<_1a3b27a62_Token> _7857_token = _78232_tokens[0LL];;
	if (((*(_7857_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_7837_isUnsafe=true;
		(_78232_tokens).mut_slice(1LL);;
		if ((_78232_tokens.len() == 0LL)) {
			_1a55edc2e_pushErr(_self_, _7857_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_7857_token=_78232_tokens[0LL];
		if (((*_7857_token.alloc)._field_Id == static_cast<jule::U64>(33LLU))) {
			_7847_isDeferred=true;
			(_78232_tokens).mut_slice(1LL);;
			if ((_78232_tokens.len() == 0LL)) {
				_1a55edc2e_pushErr(_self_, _7857_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_7857_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_7847_isDeferred=true;
		(_78232_tokens).mut_slice(1LL);;
		if ((_78232_tokens.len() == 0LL)) {
			_1a55edc2e_pushErr(_self_, _7857_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _8117_i = 0LL;;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _8127_scopeTokens = _1a56196c8_range(&(_8117_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78232_tokens));;
	if ((_8127_scopeTokens == nullptr)) {
		_1a55edc2e_pushErr(_self_, _7857_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_8117_i < _78232_tokens.len())) {
		_1a55edc2e_pushErr(_self_, _78232_tokens[_8117_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1a3b4d15e_ScopeTree> _8197_scope = _1a55ee9cc_buildScope(_self_, &(_8127_scopeTokens), _78232_tokens[(_8117_i - 1LL)]);;
	(*(_8197_scope))._field_Unsafety=_7837_isUnsafe;
	(*_8197_scope.alloc)._field_Deferred=_7847_isDeferred;
	return _8197_scope;;
}



inline jule::Ptr<_1a3b4a722_LabelSt> _1a5606d36_buildLabelSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _82533_tokens) {
	jule::Ptr<_1a3b4a722_LabelSt> _8267_lbl = jule::new_ptr<_1a3b4a722_LabelSt>(_1a3b4a722_LabelSt{._field_Token=(*(_82533_tokens))[0LL], ._field_Ident=(*((*(_82533_tokens))[0LL]))._field_Kind});;
	if (((*(_82533_tokens)).len() > 2LL)) {
		((*(_82533_tokens))).mut_slice(2LL);;
		_1a55ee34a_insertAsNext(_self_, _82533_tokens);
	};
	return _8267_lbl;;
}



inline __jule_tuple__1a3b4c79b_StmtData__jule_tuple_bool _1a5607177_buildIdSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _84030_tokens) {
	__jule_tuple__1a3b4c79b_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84030_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a3b27a62_Token> _8457_token = (*(_84030_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8457_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1a9816c89:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1a5606d36_buildLabelSt(_self_, _84030_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a98178e4:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a5617b27_assignInfo> _1a56074b8_buildAssignInfo(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _85436_tokens) {
	jule::Ptr<_1a5617b27_assignInfo> _8557_info = jule::new_ptr<_1a5617b27_assignInfo>(_1a5617b27_assignInfo{._field_ok=true});;
	jule::I64 _8587_braceN = 0LL;;
	{
		auto expr = _85436_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9819132:;
		if (it != expr_end) {
			jule::I64 _8598_i = it - expr->begin();
			jule::Ptr<_1a3b27a62_Token> _85915_token = *it;
			{
				{
					auto &_match_expr{ (*(_85915_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a9819ab1:;
						{
							(_8587_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a9819e68:;
						{
							(_8587_braceN)--;
						}
					}
					_match_end_1a9819d7a:;
				};
				{
					
					if ((_8587_braceN > 0LL)) {
						_case_begin_1a981b101:;
						{
							goto _iter_next_1a9819132;
						}
					}
					else if (((!(_1a3b2c8ad_IsAssignOp((*(_85915_token))._field_Id))) && ((*_85915_token.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1a981b167:;
						{
							goto _iter_next_1a9819132;
						}
					}
					_match_end_1a981b09b:;
				};
				(*(_8557_info))._field_l=(*(_85436_tokens)).slice(0LL, _8598_i);
				if (((*_8557_info.alloc)._field_l.len() == 0LL)) {
					(*_8557_info.alloc)._field_ok=false;
				};
				(*_8557_info.alloc)._field_setter=_85915_token;
				if (((_8598_i + 1LL) >= (*(_85436_tokens)).len())) {
					(*_8557_info.alloc)._field_r=nullptr;
					(*_8557_info.alloc)._field_ok=_1a3b2c5e4_IsPostfixOp((*((*_8557_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1a9819132;
				};
				(*_8557_info.alloc)._field_r=(*(_85436_tokens)).slice((_8598_i + 1LL));
				if (_1a3b2c5e4_IsPostfixOp((*(*(_8557_info))._field_setter.alloc)._field_Id)) {
					if (((*_8557_info.alloc)._field_r.len() > 0LL)) {
						_1a55edc2e_pushErr(_self_, (*(_8557_info))._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*_8557_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1a9819132;
			}
			_iter_next_1a9819132:;
			++it;
			_8598_i++;
			goto _iter_begin_1a9819132;
		}
		_iter_end_1a9819132:;
	};
	return _8557_info;;
}



inline jule::Ptr<_1a3b4b558_AssignLeft> _1a5607809_buildAssignL(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _89933_tokens) {
	jule::Ptr<_1a3b4b558_AssignLeft> _9007_l = jule::new_ptr<_1a3b4b558_AssignLeft>(_1a3b4b558_AssignLeft{._field_Token=(*(_89933_tokens))[0LL], });;
	if (((*((*(_89933_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_9007_l))._field_Ident=(*((*_9007_l.alloc)._field_Token))._field_Kind;
	};
	(*_9007_l.alloc)._field_Expr=_1a561c17b_buildExpr((*(_self_))._field_p, _89933_tokens);
	return _9007_l;;
}



inline jule::Slice<jule::Ptr<_1a3b4b558_AssignLeft>> _1a5607b4a_buildAssignLs(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>>* _91034_parts) {
	jule::Slice<jule::Ptr<_1a3b4b558_AssignLeft>> _91111_lefts = nullptr;;
	{
		auto expr = _91034_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9823b53:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3b27a62_Token>> _91215_part = *it;
			{
				jule::Ptr<_1a3b4b558_AssignLeft> _9138_l = _1a5607809_buildAssignL(_self_, &(_91215_part));;
				{ jule::Slice<jule::Ptr<_1a3b4b558_AssignLeft>> &__jule_push_dest = _91111_lefts; __jule_push_dest.push(_9138_l); };
			}
			_iter_next_1a9823b53:;
			++it;
			goto _iter_begin_1a9823b53;
		}
		_iter_end_1a9823b53:;
	};
	return _91111_lefts;;
}



inline __jule_tuple__1a3b4c79b_StmtData__jule_tuple_bool _1a5607e8b_buildPlainAssign(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _91937_tokens) {
	__jule_tuple__1a3b4c79b_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a5617b27_assignInfo> _9207_info = _1a56074b8_buildAssignInfo(_self_, _91937_tokens);;
	if ((!((*(_9207_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3b4badb_AssignSt> _9257_assign = jule::new_ptr<_1a3b4badb_AssignSt>(_1a3b4badb_AssignSt{._field_Setter=(*_9207_info.alloc)._field_setter, });;
	if (((*((*_9207_info.alloc)._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_9257_assign))._field_Declarative=true;
		(*_9257_assign.alloc)._field_Right=_1a561c17b_buildExpr((*(_self_))._field_p, &((*_9207_info.alloc)._field_r));
		jule::Bool _9334_ok = _1a5608387_buildDeclAssign1(_self_, &((*_9207_info.alloc)._field_l), &(_9257_assign));;
		if ((!(_9334_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_9257_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_9257_assign, &__jule_any_type58);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1a3b4b558_AssignLeft> _9428_left = (*(_9257_assign))._field_Left[0LL];;
		jule::Ptr<_1a3b50ea8_VarDecl> _9438_decl = jule::new_ptr<_1a3b50ea8_VarDecl>(_1a3b50ea8_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9428_left))._field_Token, ._field_Setter=(*_9257_assign.alloc)._field_Setter, ._field_Ident=(*_9428_left.alloc)._field_Ident, ._field_Mutable=(*_9428_left.alloc)._field_Mutable, ._field_Reference=(*_9428_left.alloc)._field_Reference, ._field_Expr=(*_9257_assign.alloc)._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_9438_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _9557_parts;
	jule::Slice<_1e7c94ecb_Log> _95514_errs;
	({
		__jule_tuple_ssx_1a3b27a62_Token__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a5619e48_parts(&((*_9207_info.alloc)._field_l), static_cast<jule::U64>(5LLU), true);
		_9557_parts = __jule_assign_result.__jule_result_arg0;
		_95514_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95514_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_95514_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_9257_assign.alloc)._field_Left=_1a5607b4a_buildAssignLs(_self_, &(_9557_parts));
	if (((*_9207_info.alloc)._field_r != nullptr)) {
		(*_9257_assign.alloc)._field_Right=_1a561c17b_buildExpr((*(_self_))._field_p, &((*_9207_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_9257_assign, &__jule_any_type58);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1a5608387_buildDeclAssign1(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _96937_lefts, jule::Ptr<_1a3b4badb_AssignSt>* _96959_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _9717_parts;
	jule::Slice<_1e7c94ecb_Log> _97114_errs;
	({
		__jule_tuple_ssx_1a3b27a62_Token__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a5619e48_parts(_96937_lefts, static_cast<jule::U64>(5LLU), true);
		_9717_parts = __jule_assign_result.__jule_result_arg0;
		_97114_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97114_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_97114_errs);
		return false;;
	};
	{
		auto expr = &(_9717_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9cdb3c3:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3b27a62_Token>> _97715_part = *it;
			{
				jule::Bool _9788_isMut = false;;
				jule::Bool _9798_isRef = false;;
				jule::Ptr<_1a3b27a62_Token> _9814_token = _97715_part[0LL];;
				if (((*(_9814_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_9788_isMut=true;
					(_97715_part).mut_slice(1LL);;
					if ((_97715_part.len() == 0LL)) {
						_1a55edc2e_pushErr(_self_, _9814_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if (((*(_97715_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_9798_isRef=true;
					(_97715_part).mut_slice(1LL);;
					if ((_97715_part.len() == 0LL)) {
						_1a55edc2e_pushErr(_self_, _9814_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if ((((*(_97715_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_97715_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1a55edc2e_pushErr(_self_, _9814_token, jule::Str::lit("invalid syntax", 14));
					return false;;
				};
				jule::Ptr<_1a3b4b558_AssignLeft> _10058_l = _1a5607809_buildAssignL(_self_, &(_97715_part));;
				(*(_10058_l))._field_Mutable=_9788_isMut;
				(*_10058_l.alloc)._field_Reference=_9798_isRef;
				{ jule::Slice<jule::Ptr<_1a3b4b558_AssignLeft>> &__jule_push_dest = (*((*(_96959_assign))))._field_Left; __jule_push_dest.push(_10058_l); };
			}
			_iter_next_1a9cdb3c3:;
			++it;
			goto _iter_begin_1a9cdb3c3;
		}
		_iter_end_1a9cdb3c3:;
	};
	return true;;
}



inline __jule_tuple_x_1a3b4badb_AssignSt__jule_tuple_bool _1a56086c8_buildDeclAssign(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _101435_tokens) {
	__jule_tuple_x_1a3b4badb_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101435_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101435_tokens).mut_slice(1LL);;
	jule::Ptr<_1a3b27a62_Token> _10207_token = _101435_tokens[0LL];;
	if (((*(_10207_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3b4badb_AssignSt> _10257_assign = jule::new_ptr<_1a3b4badb_AssignSt>(_1a3b4badb_AssignSt{._field_Declarative=true, });;
	jule::I64 _10297_i = 0LL;;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _10307_rang = _1a56196c8_range(&(_10297_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_101435_tokens));;
	if ((_10307_rang == nullptr)) {
		_1a55edc2e_pushErr(_self_, _10207_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10297_i + 1LL) < _101435_tokens.len())) {
		(*(_10257_assign))._field_Setter=_101435_tokens[_10297_i];
		if (((*((*_10257_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a55edc2e_pushErr(_self_, (*_10257_assign.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_10297_i)++;
		jule::Slice<jule::Ptr<_1a3b27a62_Token>> _10408_exprTokens = _101435_tokens.slice(_10297_i);;
		(*_10257_assign.alloc)._field_Right=_1a561c17b_buildExpr((*(_self_))._field_p, &(_10408_exprTokens));
	};
	jule::Bool _10443_ok = _1a5608387_buildDeclAssign1(_self_, &(_10307_rang), &(_10257_assign));;
	__jule_func_result.__jule_result_arg0 = _10257_assign;
	__jule_func_result.__jule_result_arg1 = _10443_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1a3b4c79b_StmtData__jule_tuple_bool _1a5608a19_buildAssignSt(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _104834_tokens) {
	__jule_tuple__1a3b4c79b_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1a5617ece_checkAssignTokens(_104834_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_104834_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a9cea24a:;
			{
				({
					__jule_tuple_x_1a3b4badb_AssignSt__jule_tuple_bool __jule_assign_result = _1a56086c8_buildDeclAssign(_self_, (*(_104834_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type58);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1a9ce93c0:;
			{
				({
					__jule_tuple__1a3b4c79b_StmtData__jule_tuple_bool __jule_assign_result = _1a5607e8b_buildPlainAssign(_self_, _104834_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1a9ce9865:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a3b42d46_UseExpr> _1a5608d5a_buildUseExpr(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _106133_tokens) {
	if (((*(_106133_tokens)).len() == 1LL)) {
		_1a55edc2e_pushErr(_self_, (*(_106133_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1a3b42d46_UseExpr> _10667_ue = jule::new_ptr<_1a3b42d46_UseExpr>(_1a3b42d46_UseExpr{._field_Token=(*(_106133_tokens))[0LL], });;
	((*(_106133_tokens))).mut_slice(1LL);;
	(*(_10667_ue))._field_Expr=_1a561c17b_buildExpr((*(_self_))._field_p, _106133_tokens);
	return _10667_ue;;
}



inline jule::Any _1a560919b_buildConstSt(_1a55ec997_scopeParser* _self_, jule::Ptr<_1a55ec106_stmt>* _107433_st) {
	if (((*((*(_107433_st))))._field_tokens.len() == 1LL)) {
		_1a55edc2e_pushErr(_self_, (*((*(_107433_st))))._field_tokens[0LL], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107433_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1a9cee5b2:;
			{
				((*((*(_107433_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a3b51b02_Iter> _10828_iter = _1a5602d32_buildIterSt(_self_, _107433_st);;
				if ((_10828_iter != nullptr)) {
					(*_10828_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10828_iter, &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a9cee3d6:;
			{
				((*((*(_107433_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a3b5592a_MatchCase> _10898_mt = _1a56066a4_buildMatchCase(_self_, (*((*(_107433_st))))._field_tokens);;
				if ((_10898_mt != nullptr)) {
					(*_10898_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10898_mt, &__jule_any_type59);;
			}
		}
		else {
			_case_begin_1a9cece1d:;
			{
				return jule::Any(_1a55eed1d_buildVarSt(_self_, &((*((*(_107433_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1a9cede1e:;
	};
}



inline jule::Any _1a56094dc_buildSt(_1a55ec997_scopeParser* _self_, jule::Ptr<_1a55ec106_stmt>* _109928_st) {
	jule::Ptr<_1a3b27a62_Token> _11007_token = (*((*(_109928_st))))._field_tokens[0LL];;
	if (((*(_11007_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _11028_s;
		jule::Bool _110211_ok;
		({
			__jule_tuple__1a3b4c79b_StmtData__jule_tuple_bool __jule_assign_result = _1a5607177_buildIdSt(_self_, &((*((*(_109928_st))))._field_tokens));
			_11028_s = __jule_assign_result.__jule_result_arg0;
			_110211_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110211_ok) {
			return _11028_s;;
		};
	};
	jule::Any _11087_s;
	jule::Bool _110810_ok;
	({
		__jule_tuple__1a3b4c79b_StmtData__jule_tuple_bool __jule_assign_result = _1a5608a19_buildAssignSt(_self_, &((*((*(_109928_st))))._field_tokens));
		_11087_s = __jule_assign_result.__jule_result_arg0;
		_110810_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_110810_ok) {
		return _11087_s;;
	};
	{
		auto &_match_expr{ (*(_11007_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1a9d05189:;
			{
				return jule::Any(_1a5608d5a_buildUseExpr(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1a9d0562e:;
			{
				return _1a560919b_buildConstSt(_self_, _109928_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1a9d05695:;
			{
				return jule::Any(_1a55eed1d_buildVarSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a9d0570b:;
			{
				return jule::Any(_1a560015e_buildRetSt(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1a9d05772:;
			{
				return jule::Any(_1a5602d32_buildIterSt(_self_, _109928_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a9d057e9:;
			{
				return jule::Any(_1a5603173_buildBreakSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1a9d05871:;
			{
				return jule::Any(_1a56034b4_buildContSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1a9d058e8:;
			{
				return jule::Any(_1a5603e87_buildIfElseChain(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1a9d05970:;
			{
				return jule::Any(_1a56042c8_buildCoCallSt(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1a9d059e7:;
			{
				return jule::Any(_1a5604619_buildGotoSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1a9d05a6e:;
			{
				return jule::Any(_1a560495a_buildFallSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a9d05ae6:;
			{
				return jule::Any(_1a5604c9b_buildTypeAliasSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a9d05b6d:;
			{
				return jule::Any(_1a56066a4_buildMatchCase(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a9d05be5:;
			{
				if (((*((*(_109928_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1a9d05475;
				};
				if ((((*((*((*(_109928_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_109928_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1a56069e5_buildScopeSt(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type51);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a9d05c6c:;
			{
				return jule::Any(_1a56069e5_buildScopeSt(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1a9d05ce4:;
			{
				return jule::Any(_1a56069e5_buildScopeSt(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		_match_end_1a9d05475:;
	};
	jule::Ptr<_1a3b42472_Expr> _11557_expr = _1a561c17b_buildExpr((*(_self_))._field_p, &((*((*(_109928_st))))._field_tokens));;
	if ((_11557_expr != nullptr)) {
		return jule::Any(_11557_expr, &__jule_any_type52);;
	};
	_1a55edc2e_pushErr(_self_, _11007_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1a5609850_build(_1a55ec997_scopeParser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _116326_tokens, jule::Ptr<_1a3b4d15e_ScopeTree>* _116349_s) {
	if (((*(_116349_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1a55ec4ad_splitStmts(_116326_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116349_s));
	while (((!(_1a55ed8bb_isLastSt(_self_))) && (!(_1a55ed635_finished(_self_))))) {
		{
			jule::Ptr<_1a55ec106_stmt> _11718_st = _1a55ee5d1_next(_self_);;
			jule::Any _11728_data = _1a56094dc_buildSt(_self_, &(_11718_st));;
			if ((_11728_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,jule::Slice<_1a3b4c9ee_Stmt>::make({_1a3b4c9ee_Stmt{._field_Token=(*(_11718_st))._field_tokens[0LL], ._field_Data=_11728_data}}));
			};
			if (_1a55ed39e_stopped(_self_)) {
				goto _iter_end_1a9d13054;
			};
		}
	_iter_next_1a9d13054:;
	}
	_iter_end_1a9d13054:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a55ec997_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a560a3bc_exprBuilder_eq(_1a560a3bc_exprBuilder *_self_, _1a560a3bc_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _1a560aba3_pushErr(_1a560a3bc_exprBuilder* _self_, jule::Ptr<_1a3b27a62_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args) {
	_1a561b9c7_pushErr((*(_self_))._field_p.ptr(), _4523_token, _4538_fmt, _4551_args);
}



inline void _1a560b016_pushSuggestion(_1a560a3bc_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args) {
	_1a561bd3a_pushSuggestion((*(_self_))._field_p.ptr(), _5030_fmt, _5043_args);
}



inline jule::Ptr<_1a3b43066_TupleExpr> _1a560b357_buildTuple(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>>* _5431_parts) {
	jule::Ptr<_1a3b43066_TupleExpr> _557_tuple = jule::new_ptr<_1a3b43066_TupleExpr>(_1a3b43066_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1a3b42472_Expr>>::alloc(0LL, (*(_5431_parts)).len())});;
	{
		auto expr = _5431_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d37c8d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3b27a62_Token>> _5815_part = *it;
			{
				(*(_557_tuple))._field_Expr=jule::append((*_557_tuple.alloc)._field_Expr,jule::Slice<jule::Ptr<_1a3b42472_Expr>>::make({_1a561574b_buildFromTokens(_self_, _5815_part)}));
			}
			_iter_next_1a9d37c8d:;
			++it;
			goto _iter_begin_1a9d37c8d;
		}
		_iter_end_1a9d37c8d:;
	};
	return _557_tuple;;
}



inline jule::Ptr<_1a3b4340c_LitExpr> _1a560b698_buildLit(_1a560a3bc_exprBuilder* _self_, jule::Ptr<_1a3b27a62_Token> _6424_token) {
	return jule::new_ptr<_1a3b4340c_LitExpr>(_1a3b4340c_LitExpr{._field_Token=_6424_token, ._field_Value=(*(_6424_token))._field_Kind});;
}



inline jule::Any _1a560bd2a_buildSingle(_1a560a3bc_exprBuilder* _self_, jule::Ptr<_1a3b27a62_Token> _7531_token) {
	{
		auto &_match_expr{ (*(_7531_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1a9d39c07:;
			{
				return jule::Any(_1a560b698_buildLit(_self_, _7531_token), &__jule_any_type102);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1a9d39c7e:;
			{
				return jule::Any(jule::new_ptr<_1a3b44908_VariadicExpr>(_1a3b44908_VariadicExpr{._field_Token=_7531_token, }), &__jule_any_type76);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1a9d39ce5:;
			{
				return jule::Any(_1a5616b37_buildIdentExpr(&(_7531_token)), &__jule_any_type44);;
			}
		}
		_match_end_1a9d39b4c:;
	};
	_1a560aba3_pushErr(_self_, _7531_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a3b43c8c_IdentExpr> _1a560c16b_buildBindIdent(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _9235_tokens) {
	if (((*((*(_9235_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9235_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1a560aba3_pushErr(_self_, (*(_9235_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a560b016_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3b27a62_Token> _1007_token = (*(_9235_tokens))[2LL];;
	if (((*(_1007_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a560aba3_pushErr(_self_, (*(_9235_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a560b016_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3b43c8c_IdentExpr> _1067_expr = _1a5616b37_buildIdentExpr(&(_1007_token));;
	(*(_1067_expr))._field_Binded=true;
	return _1067_expr;;
}



inline jule::Ptr<_1a3b4452e_UnaryExpr> _1a560c4ac_buildUnary(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _11130_tokens) {
	jule::Ptr<_1a3b27a62_Token> _1127_op = _11130_tokens[0LL];;
	if ((_11130_tokens.len() == 1LL)) {
		_1a560aba3_pushErr(_self_, _1127_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1a3b2829e_IsUnaryOp((*(_1127_op))._field_Id)))) {
		_1a560aba3_pushErr(_self_, _1127_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*_1127_op.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11130_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1a3b4452e_UnaryExpr>(_1a3b4452e_UnaryExpr{._field_Op=_1127_op, ._field_Expr=_1a561574b_buildFromTokens(_self_, _11130_tokens)});;
}



inline jule::Ptr<_1a3b45585_SubIdentExpr> _1a560c7ed_buildObjSubIdent(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _13236_tokens) {
	jule::I64 _1337_i = (_13236_tokens.len() - 1LL);;
	jule::Ptr<_1a3b27a62_Token> _1347_identToken = _13236_tokens[_1337_i];;
	(_1337_i)--;
	(_13236_tokens).mut_slice(0LL, _1337_i);;
	if ((_13236_tokens.len() == 0LL)) {
		_1a560aba3_pushErr(_self_, _1347_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a3b45585_SubIdentExpr>(_1a3b45585_SubIdentExpr{._field_Expr=_1a561574b_buildFromTokens(_self_, _13236_tokens), ._field_Ident=_1347_identToken});;
}



inline jule::Ptr<_1a3b451ab_NsSelectionExpr> _1a560cb3e_buildNsSubIdent(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _14736_tokens) {
	jule::Ptr<_1a3b451ab_NsSelectionExpr> _1487_ns = jule::new_ptr<_1a3b451ab_NsSelectionExpr>();;
	if ((((*(_14736_tokens)).len() == 3LL) && ((*((*(_14736_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*_1487_ns.alloc)._field_Ns=(*(_14736_tokens)).slice(0LL, 1LL);
		(*_1487_ns.alloc)._field_Ident=(*(_14736_tokens))[2LL];
	} else {
		{
			auto expr = _14736_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9d460cb:;
			if (it != expr_end) {
				jule::I64 _1549_i = it - expr->begin();
				jule::Ptr<_1a3b27a62_Token> _15416_token = *it;
				{
					if (((_1549_i & 1LL) == 0LL)) {
						if (((*(_15416_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1a560aba3_pushErr(_self_, _15416_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_1a560b016_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						(*_1487_ns.alloc)._field_Ns=jule::append((*_1487_ns.alloc)._field_Ns,jule::Slice<jule::Ptr<_1a3b27a62_Token>>::make({_15416_token}));
					} else if (((*(_15416_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1a560aba3_pushErr(_self_, _15416_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a560b016_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1a9d460cb:;
				++it;
				_1549_i++;
				goto _iter_begin_1a9d460cb;
			}
			_iter_end_1a9d460cb:;
		};
		(*_1487_ns.alloc)._field_Ident=(*_1487_ns.alloc)._field_Ns[((*_1487_ns.alloc)._field_Ns.len() - 1LL)];
		((*(_1487_ns))._field_Ns).mut_slice(0LL, ((*(_1487_ns))._field_Ns.len() - 1LL));;
	};
	return _1487_ns;;
}



inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a560ce80_buildType(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _17230_tokens) {
	jule::I64 _1737_i = 0LL;;
	jule::Ptr<_1a3b3d13d_TypeDecl> _1747_t;
	jule::Bool _17410_ok;
	({
		__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType((*(_self_))._field_p, _17230_tokens, (&(_1737_i)), false);
		_1747_t = __jule_assign_result.__jule_result_arg0;
		_17410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17410_ok))) {
		_1a560aba3_pushErr(_self_, (*(_17230_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1737_i < (*(_17230_tokens)).len())) {
		_1a560aba3_pushErr(_self_, (*(_17230_tokens))[_1737_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _1747_t;;
}



inline jule::Any _1a560d2c1_buildSubIdent(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _18634_tokens) {
	jule::I64 _1873_i = ((*(_18634_tokens)).len() - 2LL);;
	jule::Ptr<_1a3b27a62_Token> _1883_token = (*(_18634_tokens))[_1873_i];;
	{
		auto &_match_expr{ (*(_1883_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1a9d53e63:;
			{
				return jule::Any(_1a560c7ed_buildObjSubIdent(_self_, (*(_18634_tokens))), &__jule_any_type86);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a9d5456d:;
			{
				return jule::Any(_1a560cb3e_buildNsSubIdent(_self_, _18634_tokens), &__jule_any_type90);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1a9d545d4:;
			{
				return jule::Any(_1a560ce80_buildType(_self_, _18634_tokens), &__jule_any_type89);;
			}
		}
		_match_end_1a9d541e9:;
	};
	if (_1a56172ca_isAnonFnHead(_18634_tokens)) {
		return jule::Any(_1a560ce80_buildType(_self_, _18634_tokens), &__jule_any_type89);;
	};
	_1a560aba3_pushErr(_self_, _1883_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a3b44908_VariadicExpr> _1a560d612_buildVariadic(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _20833_tokens) {
	jule::Ptr<_1a3b27a62_Token> _2097_token = _20833_tokens[(_20833_tokens.len() - 1LL)];;
	(_20833_tokens).mut_slice(0LL, (_20833_tokens.len() - 1LL));;
	return jule::new_ptr<_1a3b44908_VariadicExpr>(_1a3b44908_VariadicExpr{._field_Token=_2097_token, ._field_Expr=_1a561574b_buildFromTokens(_self_, _20833_tokens)});;
}



inline jule::Ptr<_1a3b4273b_RangeExpr> _1a560d953_buildBetweenParentheses(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _21743_tokens) {
	if ((_21743_tokens.len() == 2LL)) {
		_1a560aba3_pushErr(_self_, _21743_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1a560b016_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21743_tokens).mut_slice(1LL, (_21743_tokens.len() - 1LL));;
	return jule::new_ptr<_1a3b4273b_RangeExpr>(_1a3b4273b_RangeExpr{._field_Expr=_1a561574b_buildFromTokens(_self_, _21743_tokens)});;
}



inline jule::Ptr<_1a3b44cd2_CastExpr> _1a560dc94_tryBuildCast(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _22933_tokens) {
	jule::I64 _2307_rangeN = 0LL;;
	{
		auto expr = _22933_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d59c5a:;
		if (it != expr_end) {
			jule::I64 _2317_i = it - expr->begin();
			jule::Ptr<_1a3b27a62_Token> _23110_token = *it;
			{
				{
					auto &_match_expr{ (*(_23110_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a9d5a750:;
						{
							(_2307_rangeN)++;
							goto _iter_next_1a9d59c5a;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a9d5ab29:;
						{
							(_2307_rangeN)--;
						}
					}
					_match_end_1a9d5aa3b:;
				};
				if ((_2307_rangeN > 0LL)) {
					goto _iter_next_1a9d59c5a;
				} else if (((_2317_i + 1LL) == (*(_22933_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1a3b27a62_Token>> _2508_typeTokens = (*(_22933_tokens)).slice(0LL, (_2317_i + 1LL));;
				jule::Slice<jule::Ptr<_1a3b27a62_Token>> _2518_exprTokens = (*(_22933_tokens)).slice((_2317_i + 1LL));;
				if ((_2518_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1a3b27a62_Token> _2584_tok = _2518_exprTokens[0LL];;
				if (((*(_2584_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1a3b44cd2_CastExpr> _2638_cast = jule::new_ptr<_1a3b44cd2_CastExpr>(_1a3b44cd2_CastExpr{});;
				if ((_2518_exprTokens.len() == 2LL)) {
					_1a560aba3_pushErr(_self_, _2518_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1a560b016_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_2508_typeTokens.len() == 2LL)) {
					_1a560aba3_pushErr(_self_, _2508_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1a560b016_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_2508_typeTokens).mut_slice(1LL, (_2508_typeTokens.len() - 1LL));;
					jule::I64 _2779_typeIndex = 0LL;;
					jule::Ptr<_1a3b3d13d_TypeDecl> _2789_t;
					jule::Bool _27812_ok;
					({
						__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType((*(_self_))._field_p, &(_2508_typeTokens), (&(_2779_typeIndex)), true);
						_2789_t = __jule_assign_result.__jule_result_arg0;
						_27812_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27812_ok && (_2779_typeIndex < _2508_typeTokens.len()))) {
						_1a560aba3_pushErr(_self_, _2508_typeTokens[_2779_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27812_ok))) {
						return _2638_cast;;
					};
					(*(_2638_cast))._field_Kind=_2789_t;
					if ((_2518_exprTokens.len() > 2LL)) {
						jule::I64 _28810_j = 0LL;;
						_1a56196c8_range(&(_28810_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_2518_exprTokens));
						if ((_28810_j < _2518_exprTokens.len())) {
							return nullptr;;
						};
						(_2518_exprTokens).mut_slice(0LL, _28810_j);;
						(*_2638_cast.alloc)._field_Expr=_1a561574b_buildFromTokens(_self_, _2518_exprTokens);
					};
				};
				return _2638_cast;;
			}
			_iter_next_1a9d59c5a:;
			++it;
			_2317_i++;
			goto _iter_begin_1a9d59c5a;
		}
		_iter_end_1a9d59c5a:;
	};
	return nullptr;;
}



inline void _1a560e1b2_pushArg(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b42472_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _30347_tokens, jule::Ptr<_1a3b27a62_Token> _30365_err_token) {
	if ((_30347_tokens.len() == 0LL)) {
		_1a560aba3_pushErr(_self_, _30365_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a560b016_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a3b42472_Expr>> &__jule_push_dest = (*(_30328_args)); __jule_push_dest.push(_1a561574b_buildFromTokens(_self_, _30347_tokens)); };
}



inline jule::Slice<jule::Ptr<_1a3b42472_Expr>> _1a560e503_buildArgs(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _31229_tokens) {
	if ((_31229_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3b42472_Expr>> _31811_args = nullptr;;
	jule::I64 _3197_last = 0LL;;
	jule::I64 _3207_rangeN = 0LL;;
	(_31229_tokens).mut_slice(1LL, (_31229_tokens.len() - 1LL));;
	{
		auto expr = &(_31229_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d6841c:;
		if (it != expr_end) {
			jule::I64 _3227_i = it - expr->begin();
			jule::Ptr<_1a3b27a62_Token> _32210_token = *it;
			{
				{
					auto &_match_expr{ (*(_32210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a9d68c25:;
						{
							(_3207_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a9d690ee:;
						{
							(_3207_rangeN)--;
						}
					}
					_match_end_1a9d69011:;
				};
				if (((_3207_rangeN > 0LL) || ((*(_32210_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1a9d6841c;
				};
				_1a560e1b2_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last, _3227_i), _32210_token);
				_3197_last=(_3227_i + 1LL);
			}
			_iter_next_1a9d6841c:;
			++it;
			_3227_i++;
			goto _iter_begin_1a9d6841c;
		}
		_iter_end_1a9d6841c:;
	};
	if ((_3197_last < _31229_tokens.len())) {
		if ((_3197_last == 0LL)) {
			if ((_31229_tokens.len() > 0LL)) {
				_1a560e1b2_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[_3197_last]);
			};
		} else {
			_1a560e1b2_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[(_3197_last - 1LL)]);
		};
	};
	return _31811_args;;
}



inline jule::Ptr<_1a3b4619b_FnCallExpr> _1a560ecea_buildFnCall(_1a560a3bc_exprBuilder* _self_, jule::Ptr<_1a3b27a62_Token>* _37832_token, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _37873_args) {
	return jule::new_ptr<_1a3b4619b_FnCallExpr>(_1a3b4619b_FnCallExpr{._field_Token=(*(_37832_token)), ._field_Expr=_1a561574b_buildFromTokens(_self_, (*(_37852_expr))), ._field_Args=_1a560e503_buildArgs(_self_, (*(_37873_args))), });;
}



inline jule::Any _1a561013b_buildParenthesesRange(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _38642_tokens) {
	jule::Ptr<_1a3b27a62_Token> _3877_token = (*(_38642_tokens))[0LL];;
	if (((*(_3877_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1a3b44cd2_CastExpr> _3898_expr = _1a560dc94_tryBuildCast(_self_, _38642_tokens);;
		if ((_3898_expr != nullptr)) {
			return jule::Any(_3898_expr, &__jule_any_type106);;
		};
	};
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _3947_exprTokens;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _39423_argsTokens;
	({
		__jule_tuple_sx_1a3b27a62_Token__jule_tuple_sx_1a3b27a62_Token __jule_assign_result = _1a5619992_rangeLast(_38642_tokens);
		_3947_exprTokens = __jule_assign_result.__jule_result_arg0;
		_39423_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3947_exprTokens.len() == 0LL)) {
		return jule::Any(_1a560d953_buildBetweenParentheses(_self_, _39423_argsTokens), &__jule_any_type101);;
	};
	if (_1a56172ca_isAnonFnHead(&(_3947_exprTokens))) {
		return jule::Any(_1a560ce80_buildType(_self_, _38642_tokens), &__jule_any_type89);;
	};
	return jule::Any(_1a560ecea_buildFnCall(_self_, &(_3877_token), &(_3947_exprTokens), &(_39423_argsTokens)), &__jule_any_type82);;
}



inline jule::Ptr<_1a3b437d6_UnsafeExpr> _1a561047c_buildUnsafeExpr(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _40835_tokens) {
	jule::Ptr<_1a3b27a62_Token> _4097_token = _40835_tokens[0LL];;
	(_40835_tokens).mut_slice(1LL);;
	jule::I64 _4117_i = 0LL;;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _4127_rangeTokens = _1a56196c8_range(&(_4117_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40835_tokens));;
	if ((_4127_rangeTokens.len() == 0LL)) {
		_1a560aba3_pushErr(_self_, _40835_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a3b437d6_UnsafeExpr>(_1a3b437d6_UnsafeExpr{._field_Token=_4097_token, ._field_Expr=_1a561574b_buildFromTokens(_self_, _4127_rangeTokens)});;
}



inline jule::Ptr<_1a3b4eced_FnDecl> _1a56107bd_buildAnonFn(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _42332_tokens) {
	jule::Ptr<_1a3b4eced_FnDecl> _4247_f = _1a5622b65_buildFn((*(_self_))._field_p, _42332_tokens, false, false);;
	if ((!(_1a3b50161_IsAnon(_4247_f.ptr())))) {
		_1a560aba3_pushErr(_self_, (*_4247_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a560b016_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _4247_f;;
}



inline jule::Any _1a5610b0e_buildUnsafe(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _43232_tokens) {
	{
		auto &_match_expr{ (*((*(_43232_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a9d7b540:;
			{
				return jule::Any(_1a56107bd_buildAnonFn(_self_, _43232_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1a9d7a907:;
			{
				return jule::Any(_1a561047c_buildUnsafeExpr(_self_, (*(_43232_tokens))), &__jule_any_type103);;
			}
		}
		_match_end_1a9d7ad47:;
	};
}



inline void _1a561102c_pushRangeLitPart(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _44236_part, jule::Ptr<_1a3b27a62_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>>* _44328_parts) {
	if ((_44236_part.len() == 0LL)) {
		_1a560aba3_pushErr(_self_, _4433_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a560b016_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> &__jule_push_dest = (*(_44328_parts)); __jule_push_dest.push(_44236_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _1a561136d_getBraceRangeLitExprParts(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _45345_tokens) {
	if ((_45345_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _45911_parts = nullptr;;
	jule::I64 _4617_last = 0LL;;
	jule::I64 _4627_rangeN = 0LL;;
	(_45345_tokens).mut_slice(1LL, (_45345_tokens.len() - 1LL));;
	{
		auto expr = &(_45345_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d7ee7d:;
		if (it != expr_end) {
			jule::I64 _4647_i = it - expr->begin();
			jule::Ptr<_1a3b27a62_Token> _46410_token = *it;
			{
				{
					auto &_match_expr{ (*(_46410_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a9d80786:;
						{
							(_4627_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a9d80b60:;
						{
							(_4627_rangeN)--;
						}
					}
					_match_end_1a9d80a72:;
				};
				if (((_4627_rangeN > 0LL) || ((*(_46410_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1a9d7ee7d;
				};
				_1a561102c_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last, _4647_i), _46410_token, &(_45911_parts));
				_4617_last=(_4647_i + 1LL);
			}
			_iter_next_1a9d7ee7d:;
			++it;
			_4647_i++;
			goto _iter_begin_1a9d7ee7d;
		}
		_iter_end_1a9d7ee7d:;
	};
	if ((_4617_last < _45345_tokens.len())) {
		if ((_4617_last == 0LL)) {
			if ((_45345_tokens.len() > 0LL)) {
				_1a561102c_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[_4617_last], &(_45911_parts));
			};
		} else {
			_1a561102c_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[(_4617_last - 1LL)], &(_45911_parts));
		};
	};
	return _45911_parts;;
}



inline jule::Ptr<_1a3b46b91_FieldExprPair> _1a56116ae_buildFieldExprPair(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _49538_tokens) {
	if (((_49538_tokens.len() - 2LL) == 0LL)) {
		_1a560aba3_pushErr(_self_, _49538_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3b46b91_FieldExprPair> _5007_pair = jule::new_ptr<_1a3b46b91_FieldExprPair>(_1a3b46b91_FieldExprPair{._field_Field=_49538_tokens[0LL], });;
	(_49538_tokens).mut_slice(2LL);;
	(*(_5007_pair))._field_Expr=_1a561574b_buildFromTokens(_self_, _49538_tokens);
	return _5007_pair;;
}



inline jule::Ptr<_1a3b42472_Expr> _1a5611a00_buildStructLitExpr(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _50839_tokens) {
	jule::Ptr<_1a3b27a62_Token> _5097_token = (*(_50839_tokens))[0LL];;
	if ((((*(_5097_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_50839_tokens)).len() > 1LL))) {
		_5097_token=(*(_50839_tokens))[1LL];
		if (((*_5097_token.alloc)._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1a3b42472_Expr>(_1a3b42472_Expr{._field_Token=_5097_token, ._field_End=(*(_50839_tokens))[((*(_50839_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1a56116ae_buildFieldExprPair(_self_, (*(_50839_tokens))), &__jule_any_type78)});;
		};
	};
	return _1a561574b_buildFromTokens(_self_, (*(_50839_tokens)));;
}



inline jule::Slice<jule::Ptr<_1a3b42472_Expr>> _1a5611d41_buildStructLitExprs(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _52340_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _5247_parts = _1a561136d_getBraceRangeLitExprParts(_self_, (*(_52340_tokens)));;
	if ((_5247_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3b42472_Expr>> _5297_pairs = jule::Slice<jule::Ptr<_1a3b42472_Expr>>::alloc(0LL, _5247_parts.len());;
	{
		auto expr = &(_5247_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d89460:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3b27a62_Token>> _53015_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3b42472_Expr>> &__jule_push_dest = _5297_pairs; __jule_push_dest.push(_1a5611a00_buildStructLitExpr(_self_, &(_53015_part))); };
			}
			_iter_next_1a9d89460:;
			++it;
			goto _iter_begin_1a9d89460;
		}
		_iter_end_1a9d89460:;
	};
	return _5297_pairs;;
}



inline jule::Ptr<_1a3b474bb_StructLit> _1a5612182_buildTypedStructLiteral(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _53643_tokens) {
	jule::I64 _5377_i = 0LL;;
	jule::Ptr<_1a3b3d13d_TypeDecl> _5387_t;
	jule::Bool _53810_ok;
	({
		__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType((*(_self_))._field_p, &(_53643_tokens), (&(_5377_i)), true);
		_5387_t = __jule_assign_result.__jule_result_arg0;
		_53810_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_53810_ok))) {
		return nullptr;;
	} else if ((_5377_i >= _53643_tokens.len())) {
		_1a560aba3_pushErr(_self_, _53643_tokens[_5377_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_53643_tokens).mut_slice(_5377_i);;
	jule::Ptr<_1a3b27a62_Token> _5473_token = _53643_tokens[0LL];;
	if (((*(_5473_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1a560aba3_pushErr(_self_, _5473_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a3b474bb_StructLit>(_1a3b474bb_StructLit{._field_End=_53643_tokens[(_53643_tokens.len() - 1LL)], ._field_Kind=_5387_t, ._field_Exprs=_1a5611d41_buildStructLitExprs(_self_, &(_53643_tokens))});;
}



inline jule::Ptr<_1a3b42472_Expr> _1a56124c3_buildBraceLitPart(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _56038_tokens) {
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _5617_l;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _56114_r;
	({
		__jule_tuple_sx_1a3b27a62_Token__jule_tuple_sx_1a3b27a62_Token __jule_assign_result = _1a56165a4_splitDelim(_56038_tokens, static_cast<jule::U64>(8LLU));
		_5617_l = __jule_assign_result.__jule_result_arg0;
		_56114_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5617_l != nullptr)) {
		return jule::new_ptr<_1a3b42472_Expr>(_1a3b42472_Expr{._field_Token=(*(_56038_tokens))[0LL], ._field_End=(*(_56038_tokens))[((*(_56038_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1a3b4829c_KeyValPair>(_1a3b4829c_KeyValPair{._field_Key=_1a561574b_buildFromTokens(_self_, _5617_l), ._field_Val=_1a561574b_buildFromTokens(_self_, _56114_r), ._field_Colon=(*(_56038_tokens))[_5617_l.len()]}), &__jule_any_type79)});;
	};
	return _1a561574b_buildFromTokens(_self_, (*(_56038_tokens)));;
}



inline jule::Ptr<_1a3b47972_BraceLit> _1a5612814_buildBraceLit(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _57734_tokens) {
	jule::Ptr<_1a3b47972_BraceLit> _5787_lit = jule::new_ptr<_1a3b47972_BraceLit>(_1a3b47972_BraceLit{._field_Token=(*(_57734_tokens))[0LL], ._field_End=(*(_57734_tokens))[((*(_57734_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _5837_parts = _1a561136d_getBraceRangeLitExprParts(_self_, (*(_57734_tokens)));;
	if ((_5837_parts == nullptr)) {
		return _5787_lit;;
	};
	(*(_5787_lit))._field_Exprs=jule::Slice<jule::Ptr<_1a3b42472_Expr>>::alloc(0LL, _5837_parts.len());
	{
		auto expr = &(_5837_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d93ca5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3b27a62_Token>> _58915_part = *it;
			{
				(*_5787_lit.alloc)._field_Exprs=jule::append((*_5787_lit.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a3b42472_Expr>>::make({_1a56124c3_buildBraceLitPart(_self_, &(_58915_part))}));
			}
			_iter_next_1a9d93ca5:;
			++it;
			goto _iter_begin_1a9d93ca5;
		}
		_iter_end_1a9d93ca5:;
	};
	return _5787_lit;;
}



inline jule::Any _1a5612b55_buildBraceRange(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _59636_tokens) {
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _5977_exprTokens;
	jule::I64 _59719_rangeN;
	({
		__jule_tuple_sx_1a3b27a62_Token__jule_tuple_int __jule_assign_result = _1a5616e01_getRangeExprTokens(_59636_tokens);
		_5977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_59719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5977_exprTokens.len() == 0LL)) {
			_case_begin_1a9d958cd:;
			{
				return jule::Any(_1a5612814_buildBraceLit(_self_, _59636_tokens), &__jule_any_type108);;
			}
		}
		else if ((_59719_rangeN > 0LL)) {
			_case_begin_1a9d95977:;
			{
				_1a560aba3_pushErr(_self_, (*(_59636_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9d95845:;
	};
	jule::Ptr<_1a3b27a62_Token> _6083_elseToken = _5977_exprTokens[(_5977_exprTokens.len() - 1LL)];;
	if (((*(_5977_exprTokens[(_5977_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_5977_exprTokens).mut_slice(0LL, (_5977_exprTokens.len() - 1LL));;
		jule::Any _6118_d = _1a56150b9_build(_self_, &(_5977_exprTokens));;
		if ((_6118_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _6118_d };
			
			if (_match_expr.type == &__jule_any_type82) {
				_case_begin_1a9d991a6:;
				{
					((*(_59636_tokens))).mut_slice((_5977_exprTokens.len() + 1LL));;
					jule::I64 _6189_i = 0LL;;
					jule::Slice<jule::Ptr<_1a3b27a62_Token>> _6199_rangeTokens = _1a56196c8_range(&(_6189_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _59636_tokens);;
					jule::Ptr<_1a3b4619b_FnCallExpr> _6209_model = _6118_d.unsafe_cast_ptr<_1a3b4619b_FnCallExpr>();;
					if (_1a3b467a6_Ignored(_6209_model.ptr())) {
						_1a560aba3_pushErr(_self_, _6083_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a560b016_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*_6209_model.alloc)._field_Exception=_1a561cb71_buildScope((*(_self_))._field_p, &(_6199_rangeTokens), (*(_59636_tokens))[(_6189_i - 1LL)]);
					return _6118_d;;
				}
			}
			else {
				_case_begin_1a9d986d3:;
				{
					_1a560aba3_pushErr(_self_, _5977_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1a9d9867d:;
		};
	};
	{
		auto &_match_expr{ (*(_5977_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a9d9d30e:;
			{
				return _1a5610b0e_buildUnsafe(_self_, _59636_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a9d9d375:;
			{
				return jule::Any(_1a56107bd_buildAnonFn(_self_, _59636_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1a9d9d3db:;
			{
				return jule::Any(_1a5612182_buildTypedStructLiteral(_self_, (*(_59636_tokens))), &__jule_any_type107);;
			}
		}
		else {
			_case_begin_1a9d98749:;
			{
				_1a560aba3_pushErr(_self_, _5977_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9d9c781:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _1a5612e96_getEnumerableParts(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _64838_tokens) {
	(_64838_tokens).mut_slice(1LL, (_64838_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _6507_parts;
	jule::Slice<_1e7c94ecb_Log> _65014_errors;
	({
		__jule_tuple_ssx_1a3b27a62_Token__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a5619e48_parts(&(_64838_tokens), static_cast<jule::U64>(5LLU), true);
		_6507_parts = __jule_assign_result.__jule_result_arg0;
		_65014_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_65014_errors);
	return _6507_parts;;
}



inline jule::Ptr<_1a3b489c8_SliceExpr> _1a56132d7_buildSlice(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _65530_tokens) {
	jule::Ptr<_1a3b489c8_SliceExpr> _6567_slc = jule::new_ptr<_1a3b489c8_SliceExpr>(_1a3b489c8_SliceExpr{._field_Token=_65530_tokens[0LL], ._field_End=_65530_tokens[(_65530_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _6617_parts = _1a5612e96_getEnumerableParts(_self_, _65530_tokens);;
	if ((_6617_parts.len() == 0LL)) {
		return _6567_slc;;
	};
	(*(_6567_slc))._field_Exprs=jule::Slice<jule::Ptr<_1a3b42472_Expr>>::alloc(0LL, _6617_parts.len());
	{
		auto expr = &(_6617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9da318d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3b27a62_Token>> _66715_p = *it;
			{
				if ((_66715_p.len() == 0LL)) {
					goto _iter_next_1a9da318d;
				};
				(*_6567_slc.alloc)._field_Exprs=jule::append((*_6567_slc.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a3b42472_Expr>>::make({_1a561574b_buildFromTokens(_self_, _66715_p)}));
			}
			_iter_next_1a9da318d:;
			++it;
			goto _iter_begin_1a9da318d;
		}
		_iter_end_1a9da318d:;
	};
	return _6567_slc;;
}



inline jule::Ptr<_1a3b49435_IndexingExpr> _1a561378d_buildIndexing(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _6787_tokens, jule::Ptr<_1a3b27a62_Token> _67829_errorToken) {
	jule::Ptr<_1a3b27a62_Token> _6797_end = _6787_tokens[(_6787_tokens.len() - 1LL)];;
	(_6787_tokens).mut_slice(1LL, (_6787_tokens.len() - 1LL));;
	if ((_6787_tokens.len() == 0LL)) {
		_1a560aba3_pushErr(_self_, _67829_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3b42472_Expr> _6857_expr = _1a561574b_buildFromTokens(_self_, _67733_exprTokens);;
	if ((_6857_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a3b42472_Expr> _6897_index = _1a561574b_buildFromTokens(_self_, _6787_tokens);;
	if ((_6897_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a3b49435_IndexingExpr>(_1a3b49435_IndexingExpr{._field_Token=_67829_errorToken, ._field_End=_6797_end, ._field_Expr=_6857_expr, ._field_Index=_6897_index});;
}



inline jule::Ptr<_1a3b49a95_SlicingExpr> _1a5613da9_buildSlicing(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _70160_start, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _7028_to, jule::Ptr<_1a3b27a62_Token>* _70227_errorToken, jule::Ptr<_1a3b27a62_Token> _70251_end) {
	jule::Ptr<_1a3b49a95_SlicingExpr> _7037_slc = jule::new_ptr<_1a3b49a95_SlicingExpr>(_1a3b49a95_SlicingExpr{._field_Token=(*(_70227_errorToken)), ._field_End=_70251_end, ._field_Expr=_1a561574b_buildFromTokens(_self_, (*(_70133_exprTokens))), });;
	if (((*(_70160_start)).len() > 0LL)) {
		(*(_7037_slc))._field_Start=_1a561574b_buildFromTokens(_self_, (*(_70160_start)));
	};
	if (((*(_7028_to)).len() > 0LL)) {
		(*_7037_slc.alloc)._field_To=_1a561574b_buildFromTokens(_self_, (*(_7028_to)));
	};
	return _7037_slc;;
}



inline jule::Any _1a56141ea_buildBracketRange(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _71737_tokens) {
	jule::Ptr<_1a3b27a62_Token> _7187_errorToken = _71737_tokens[0LL];;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _7197_exprTokens;
	jule::I64 _71919_rangeN;
	({
		__jule_tuple_sx_1a3b27a62_Token__jule_tuple_int __jule_assign_result = _1a5616e01_getRangeExprTokens(&(_71737_tokens));
		_7197_exprTokens = __jule_assign_result.__jule_result_arg0;
		_71919_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_7197_exprTokens.len() == 0LL)) {
		return jule::Any(_1a56132d7_buildSlice(_self_, _71737_tokens), &__jule_any_type94);;
	} else if ((_71919_rangeN > 0LL)) {
		_1a560aba3_pushErr(_self_, _7187_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_71737_tokens).mut_slice(_7197_exprTokens.len());;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _7347_splitTokens = _71737_tokens.slice(1LL, (_71737_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _7357_start;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _73518_to;
	({
		__jule_tuple_sx_1a3b27a62_Token__jule_tuple_sx_1a3b27a62_Token __jule_assign_result = _1a56165a4_splitDelim(&(_7347_splitTokens), static_cast<jule::U64>(8LLU));
		_7357_start = __jule_assign_result.__jule_result_arg0;
		_73518_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7357_start != nullptr) || (_73518_to != nullptr))) {
		return jule::Any(_1a5613da9_buildSlicing(_self_, &(_7197_exprTokens), &(_7357_start), &(_73518_to), &(_7187_errorToken), _71737_tokens[(_71737_tokens.len() - 1LL)]), &__jule_any_type105);;
	};
	return jule::Any(_1a561378d_buildIndexing(_self_, _7197_exprTokens, _71737_tokens, _7187_errorToken), &__jule_any_type104);;
}



inline jule::Any _1a561453b_buildExclRight(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _74235_tokens) {
	jule::Ptr<_1a3b27a62_Token> _7433_token = (*(_74235_tokens))[((*(_74235_tokens)).len() - 1LL)];;
	((*(_74235_tokens))).mut_slice(0LL, ((*(_74235_tokens)).len() - 1LL));;
	jule::Any _7457_d = _1a56150b9_build(_self_, _74235_tokens);;
	if ((_7457_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7457_d };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1a9db1223:;
			{
				(*(_7457_d.unsafe_cast_ptr<_1a3b4619b_FnCallExpr>()))._field_Exception=jule::new_ptr<_1a3b4d15e_ScopeTree>(_1a3b4d15e_ScopeTree{._field_Deferred=true, });
				return _7457_d;;
			}
		}
		_match_end_1a9db11bd:;
	};
	_1a560aba3_pushErr(_self_, _7433_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a561487c_buildData(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _76030_tokens) {
	{
		auto _match_expr{ (*(_76030_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a9db2851:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a9db28c8:;
			{
				return _1a560bd2a_buildSingle(_self_, (*(_76030_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a9db293e:;
			{
				if (((*((*(_76030_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1a560c16b_buildBindIdent(_self_, _76030_tokens), &__jule_any_type44);;
				};
			}
		}
		_match_end_1a9db26a8:;
	};
	jule::Ptr<_1a3b27a62_Token> _7727_token = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
	if (((*(_7727_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1a560d612_buildVariadic(_self_, (*(_76030_tokens))), &__jule_any_type76);;
	};
	_7727_token=(*(_76030_tokens))[0LL];
	if (_1a3b2829e_IsUnaryOp((*_7727_token.alloc)._field_Id)) {
		if (((*(_76030_tokens)).len() > 1LL)) {
			_7727_token=(*(_76030_tokens))[1LL];
			if (((*_7727_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1a560ce80_buildType(_self_, _76030_tokens), &__jule_any_type89);;
			};
		};
		return jule::Any(_1a560c4ac_buildUnary(_self_, (*(_76030_tokens))), &__jule_any_type88);;
	};
	if (((*(_76030_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7727_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1a9db7405:;
				{
					if (((*(_76030_tokens)).len() > 3LL)) {
						jule::Ptr<_1a3b27a62_Token> _7986_t = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
						if (((*(_7986_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1a9db735b;
						};
					};
					jule::Ptr<_1a3b27a62_Token> _8045_next = (*(_76030_tokens))[1LL];;
					if (((*(_8045_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1a9db735b;
					};
					return jule::Any(_1a560ce80_buildType(_self_, _76030_tokens), &__jule_any_type89);;
				}
			}
			_match_end_1a9db735b:;
		};
	};
	_7727_token=(*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7727_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a9dba5b2:;
			{
				return _1a560d2c1_buildSubIdent(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1a9dba639:;
			{
				return _1a561453b_buildExclRight(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1a9dba6a0:;
			{
				return _1a561013b_buildParenthesesRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1a9dba716:;
			{
				return _1a5612b55_buildBraceRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1a9dba77c:;
			{
				return _1a56141ea_buildBracketRange(_self_, (*(_76030_tokens)));;
			}
		}
		_match_end_1a9dba55c:;
	};
	_1a560aba3_pushErr(_self_, _7727_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a5614c78_buildBinary(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _82932_tokens, jule::I64 _82950_i) {
	jule::Ptr<_1a3b27a62_Token> _8307_op = (*(_82932_tokens))[_82950_i];;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _8317_leftTokens = (*(_82932_tokens)).slice(0LL, _82950_i);;
	if ((_1a5615b14_isTypeOp(&((*(_8307_op))._field_Id)) && _1a5615e22_isTypeRange(&(_8317_leftTokens)))) {
		return jule::Any(_1a560ce80_buildType(_self_, _82932_tokens), &__jule_any_type89);;
	};
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _8367_rightTokens = (*(_82932_tokens)).slice((_82950_i + 1LL));;
	if ((_8317_leftTokens.len() == 0LL)) {
		_1a560aba3_pushErr(_self_, (*(_82932_tokens))[_82950_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a560b016_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8367_rightTokens.len() == 0LL)) {
		_1a560aba3_pushErr(_self_, (*(_82932_tokens))[_82950_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a560b016_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1a3b45a3b_BinaryExpr>(_1a3b45a3b_BinaryExpr{._field_Left=_1a561574b_buildFromTokens(_self_, _8317_leftTokens), ._field_Right=_1a561574b_buildFromTokens(_self_, _8367_rightTokens), ._field_Op=_8307_op}), &__jule_any_type109);;
}



inline jule::Any _1a56150b9_build(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _85426_tokens) {
	if (((*((*(_85426_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1a560ce80_buildType(_self_, _85426_tokens), &__jule_any_type89);;
	};
	jule::I64 _8583_i = _1a561686d_findLowestPrecOp(_85426_tokens);;
	if ((_8583_i == -1LL)) {
		return _1a561487c_buildData(_self_, _85426_tokens);;
	};
	return _1a5614c78_buildBinary(_self_, _85426_tokens, _8583_i);;
}



inline jule::Any _1a561540a_buildKind(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _86530_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _8667_parts;
	jule::Slice<_1e7c94ecb_Log> _86614_errors;
	({
		__jule_tuple_ssx_1a3b27a62_Token__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a5619e48_parts(_86530_tokens, static_cast<jule::U64>(5LLU), true);
		_8667_parts = __jule_assign_result.__jule_result_arg0;
		_86614_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86614_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_86614_errors);
		return nullptr;;
	} else if ((_8667_parts.len() > 1LL)) {
		return jule::Any(_1a560b357_buildTuple(_self_, &(_8667_parts)), &__jule_any_type80);;
	};
	return _1a56150b9_build(_self_, _86530_tokens);;
}



inline jule::Ptr<_1a3b42472_Expr> _1a561574b_buildFromTokens(_1a560a3bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _87635_tokens) {
	if ((_87635_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8807_kind = _1a561540a_buildKind(_self_, &(_87635_tokens));;
	if ((_8807_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a3b42472_Expr>(_1a3b42472_Expr{._field_Token=_87635_tokens[0LL], ._field_End=_87635_tokens[(_87635_tokens.len() - 1LL)], ._field_Kind=_8807_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1a560a3bc_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5617b27_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1a561b323_stop(_1a561b026_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1a561b5a9_stopped(_1a561b026_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1a561b9c7_pushErr(_1a561b026_parser* _self_, jule::Ptr<_1a3b27a62_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args) {
	{ jule::Slice<_1e7c94ecb_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a561a60d_compilerErr(&(_20823_token), &(_20838_fmt), _20851_args)); };
}



inline void _1a561bd3a_pushSuggestion(_1a561b026_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args) {
	{
		_1a561a9a4_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _21330_fmt, _21343_args);
	};
}



inline jule::Ptr<_1a3b42472_Expr> _1a561c17b_buildExpr(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _21731_tokens) {
	return _1a561574b_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_21731_tokens)));;
}



inline jule::Ptr<_1a3b3c55a_Directive> _1a561c4bc_buildDirective(_1a561b026_parser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _22134_tokens) {
	if ((_22134_tokens.len() == 1LL)) {
		_1a561b9c7_pushErr(_self_, _22134_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_22134_tokens[1LL]))._field_Column != ((*(_22134_tokens[0LL]))._field_Column + 1LL))) {
		_1a561b9c7_pushErr(_self_, _22134_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a3b3c55a_Directive>(_1a3b3c55a_Directive{._field_Tag=_22134_tokens[1LL], ._field_Args=_22134_tokens.slice(2LL)});;
}



inline void _1a561c775_pushDirective(_1a561b026_parser* _self_, jule::Ptr<_1a3b3c55a_Directive> _23633_d) {
	if ((_23633_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9de7347:;
		if (it != expr_end) {
			jule::Ptr<_1a3b3c55a_Directive> _24110_pd = *it;
			{
				if (((*((*(_23633_d))._field_Tag))._field_Kind == (*(*(_24110_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1a9de7347:;
			++it;
			goto _iter_begin_1a9de7347;
		}
		_iter_end_1a9de7347:;
	};
	{ jule::Slice<jule::Ptr<_1a3b3c55a_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_23633_d); };
}



inline jule::Ptr<_1a3b4d15e_ScopeTree> _1a561cb71_buildScope(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _24932_tokens, jule::Ptr<_1a3b27a62_Token> _24954_end) {
	jule::Ptr<_1a3b4d15e_ScopeTree> _2507_s = _1a55ead80_newScope();;
	(*(_2507_s))._field_End=_24954_end;
	_1a55ec997_scopeParser _2527_sp = _1a55ec997_scopeParser{._field_p=_self_, };;
	_1a5609850_build(&_2527_sp, _24932_tokens, &(_2507_s));
	return _2507_s;;
}



inline __jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool _1a561d127__buildType(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _25939_tokens, jule::I64* _2607_i, jule::Bool _26016_err) {
	__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1a562d148_typeBuilder _2617_tb = _1a562d148_typeBuilder{._field_p=_self_, ._field_tokens=(*(_25939_tokens)), ._field_i=_2607_i, ._field_err=_26016_err};;
	__jule_func_result = std::move(_1a5631129_build(&_2617_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool _1a561d5cd_buildType(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _27138_tokens, jule::I64* _2727_i, jule::Bool _27216_err) {
	__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a3b27a62_Token> _2733_token = (*(_27138_tokens))[(*(_2727_i))];;
	jule::Ptr<_1a3b3d13d_TypeDecl> _2747_t;
	jule::Bool _27410_ok;
	({
		__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d127__buildType(_self_, _27138_tokens, _2727_i, _27216_err);
		_2747_t = __jule_assign_result.__jule_result_arg0;
		_27410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_27216_err && (!(_27410_ok)))) {
		_1a561b9c7_pushErr(_self_, _2733_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2747_t;
	__jule_func_result.__jule_result_arg1 = _27410_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3b54b5a_TypeAliasDecl> _1a561d91e_buildTypeAliasDecl(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _28140_tokens) {
	jule::I64 _2827_i = 1LL;;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1a561b9c7_pushErr(_self_.ptr(), (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3b54b5a_TypeAliasDecl> _2877_tad = jule::new_ptr<_1a3b54b5a_TypeAliasDecl>(_1a3b54b5a_TypeAliasDecl{._field_Token=(*(_28140_tokens))[1LL], ._field_Ident=(*((*(_28140_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1a3b27a62_Token> _2917_token = (*(_28140_tokens))[_2827_i];;
	if (((*(_2917_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a561b9c7_pushErr(_self_, _2917_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1a561b9c7_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	_2917_token=(*(_28140_tokens))[_2827_i];
	if (((*_2917_token.alloc)._field_Id != static_cast<jule::U64>(8LLU))) {
		_1a561b9c7_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1a561b9c7_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	jule::Ptr<_1a3b3d13d_TypeDecl> _3127_t;
	jule::Bool _31210_ok;
	({
		__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType(_self_, _28140_tokens, (&(_2827_i)), true);
		_3127_t = __jule_assign_result.__jule_result_arg0;
		_31210_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2877_tad))._field_Kind=_3127_t;
	if ((_31210_ok && (_2827_i < (*(_28140_tokens)).len()))) {
		_1a561b9c7_pushErr(_self_, (*(_28140_tokens))[_2827_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_2877_tad.alloc)._field_Public=_1a3c05b40_IsPub((*_2877_tad.alloc)._field_Ident);
	return _2877_tad;;
}



inline void _1a561dc82_buildVarTypeAndExpr(jule::Ptr<_1a561b026_parser> _self_, jule::Ptr<_1a3b50ea8_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _32159_tokens) {
	jule::I64 _3227_i = 0LL;;
	jule::Ptr<_1a3b27a62_Token> _3237_tok = (*(_32159_tokens))[_3227_i];;
	if (((*(_3237_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_3227_i)++;
		if (((_3227_i >= (*(_32159_tokens)).len()) || ((*((*(_32159_tokens))[_3227_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1a561b9c7_pushErr(_self_.ptr(), _3237_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1a3b3d13d_TypeDecl> _3308_t;
		jule::Bool _33011_ok;
		({
			__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType(_self_, _32159_tokens, (&(_3227_i)), true);
			_3308_t = __jule_assign_result.__jule_result_arg0;
			_33011_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_33011_ok) {
			(*((*(_32141_v))))._field_Kind=_3308_t;
			if ((_3227_i >= (*(_32159_tokens)).len())) {
				return;;
			};
			_3237_tok=(*(_32159_tokens))[_3227_i];
		};
	};
	if (((*_3237_tok.alloc)._field_Id != static_cast<jule::U64>(71LLU))) {
		_1a561b9c7_pushErr(_self_, _3237_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Setter=_3237_tok;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _3467_exprTokens = (*(_32159_tokens)).slice((_3227_i + 1LL));;
	if ((_3467_exprTokens.len() == 0LL)) {
		_1a561b9c7_pushErr(_self_, _3237_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Expr=_1a561c17b_buildExpr(_self_, &(_3467_exprTokens));
}



inline void _1a561e0e5_buildVarCommon(jule::Ptr<_1a561b026_parser> _self_, jule::Ptr<_1a3b50ea8_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _35453_tokens) {
	(*((*(_35436_v))))._field_Token=_35453_tokens[0LL];
	if (((*((*((*(_35436_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a561b9c7_pushErr(_self_.ptr(), (*((*(_35436_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35436_v))))._field_Ident=(*(*((*(_35436_v))))._field_Token.alloc)._field_Kind;
	(*((*(_35436_v))))._field_Public=_1a3c05b40_IsPub((*((*(_35436_v))))._field_Ident);
	(*((*(_35436_v))))._field_Kind=nullptr;
	if ((_35453_tokens.len() > 1LL)) {
		(_35453_tokens).mut_slice(1LL);;
		_1a561dc82_buildVarTypeAndExpr(_self_, _35436_v, &(_35453_tokens));
	};
}



inline void _1a561e458_buildVarBegin(_1a561b026_parser* _self_, jule::Ptr<_1a3b50ea8_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _37052_tokens) {
	jule::Ptr<_1a3b27a62_Token> _3713_tok = (*(_37052_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3713_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a9e121b9:;
			{
				(*((*(_37034_v))))._field_Statically=true;
				goto _case_begin_1a9e11d45;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a9e11d45:;
			{
				if (((*(_37052_tokens)).len() == 1LL)) {
					(*(_37052_tokens))=nullptr;
					_1a561b9c7_pushErr(_self_, _3713_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				((*(_37052_tokens))).mut_slice(1LL);;
				if (((*((*(_37052_tokens))[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_37034_v))))._field_Mutable=true;
					((*(_37052_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1a9e11a37:;
			{
				(*((*(_37034_v))))._field_Constant=true;
				((*(_37052_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1a9e11707:;
			{
				(*(_37052_tokens))=nullptr;
				_1a561b9c7_pushErr(_self_, _3713_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9e119d2:;
	};
}



inline jule::Ptr<_1a3b50ea8_VarDecl> _1a561e799_buildVar(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _39829_tokens) {
	jule::Ptr<_1a3b50ea8_VarDecl> _3997_v = jule::new_ptr<_1a3b50ea8_VarDecl>(_1a3b50ea8_VarDecl{._field_Token=_39829_tokens[0LL], });;
	_1a561e458_buildVarBegin(_self_.ptr(), &(_3997_v), &(_39829_tokens));
	if ((_39829_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_39829_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_3997_v))._field_Reference=true;
		if ((_39829_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_39829_tokens).mut_slice(1LL);;
	};
	_1a561e0e5_buildVarCommon(_self_, &(_3997_v), _39829_tokens);
	return _3997_v;;
}



inline jule::Ptr<_1a3b4a348_GenericDecl> _1a561eada_buildGeneric(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _41734_tokens) {
	jule::Ptr<_1a3b4a348_GenericDecl> _4187_g = jule::new_ptr<_1a3b4a348_GenericDecl>(_1a3b4a348_GenericDecl{._field_Token=(*(_41734_tokens))[0LL], });;
	if (((*((*(_4187_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a561b9c7_pushErr(_self_.ptr(), (*_4187_g.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_4187_g.alloc)._field_Ident=(*(*(_4187_g))._field_Token.alloc)._field_Kind;
	if (((*(_41734_tokens)).len() > 1LL)) {
		if (((*((*(_41734_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1a561b9c7_pushErr(_self_, (*(_41734_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_41734_tokens)).len() == 2LL)) {
			_1a561b9c7_pushErr(_self_, (*(_41734_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1a3b27a62_Token>> _4358_constraintTokens = (*(_41734_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _4368_parts;
		jule::Slice<_1e7c94ecb_Log> _43615_errors;
		({
			__jule_tuple_ssx_1a3b27a62_Token__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a5619e48_parts(&(_4358_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_4368_parts = __jule_assign_result.__jule_result_arg0;
			_43615_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_43615_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_43615_errors);
			return nullptr;;
		};
		(*_4187_g.alloc)._field_Constraint=jule::new_ptr<_1a3b49d92_Constraint>(_1a3b49d92_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>>::alloc(0LL, _4368_parts.len())});
		{
			auto expr = &(_4368_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a960c189:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1a3b27a62_Token>> _44216_part = *it;
				{
					jule::I64 _4439_i = 0LL;;
					jule::Ptr<_1a3b3d13d_TypeDecl> _4449_kind;
					({
						__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType(_self_, &(_44216_part), (&(_4439_i)), true);
						_4449_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_4187_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_4187_g))._field_Constraint.alloc)._field_Mask,jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>>::make({_4449_kind}));
					if ((_4439_i < _44216_part.len())) {
						_1a561b9c7_pushErr(_self_, _44216_part[_4439_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1a960c189:;
				++it;
				goto _iter_begin_1a960c189;
			}
			_iter_end_1a960c189:;
		};
	};
	return _4187_g;;
}



inline jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>> _1a561eed6_buildGenerics(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _45435_tokens, jule::Ptr<_1a3b27a62_Token>* _45454_errorToken) {
	if (((*(_45435_tokens)).len() == 0LL)) {
		_1a561b9c7_pushErr(_self_.ptr(), (*(_45454_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _4607_parts;
	jule::Slice<_1e7c94ecb_Log> _46014_errors;
	({
		__jule_tuple_ssx_1a3b27a62_Token__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a5619e48_parts(_45435_tokens, static_cast<jule::U64>(5LLU), true);
		_4607_parts = __jule_assign_result.__jule_result_arg0;
		_46014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_46014_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_46014_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>> _4667_generics = jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>>::alloc(0LL, _4607_parts.len());;
	{
		auto expr = &(_4607_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a960e653:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3b27a62_Token>> _46715_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>> &__jule_push_dest = _4667_generics; __jule_push_dest.push(_1a561eada_buildGeneric(_self_, &(_46715_part))); };
			}
			_iter_next_1a960e653:;
			++it;
			goto _iter_begin_1a960e653;
		}
		_iter_end_1a960e653:;
	};
	return _4667_generics;;
}



inline jule::Ptr<_1a3b4d89b_ParamDecl> _1a5620327_buildSelfParam(_1a561b026_parser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _47434_tokens) {
	if ((_47434_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a3b4d89b_ParamDecl> _4797_param = jule::new_ptr<_1a3b4d89b_ParamDecl>();;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_4797_param.alloc)._field_Mutable=true;
		if ((_47434_tokens.len() == 1LL)) {
			_1a561b9c7_pushErr(_self_, _47434_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	_1e7be2632_StrBuilder _4917_ident = static__1e7be28eb_New(5LL);;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_1e7beb262_WriteStr(&_4917_ident, jule::Str::lit("&", 1));
		if ((_47434_tokens.len() == 1LL)) {
			_1a561b9c7_pushErr(_self_, _47434_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_1e7beb262_WriteStr(&_4917_ident, jule::Str::lit("self", 4));
		(*_4797_param.alloc)._field_Token=_47434_tokens[0LL];
		if ((_47434_tokens.len() != 1LL)) {
			_1a561b9c7_pushErr(_self_, _47434_tokens[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*_4797_param.alloc)._field_Ident=_1e7beba59_Str(&_4917_ident);
	return _4797_param;;
}



inline void _1a5620745_paramTypeBegin(_1a561b026_parser* _self_, jule::Ptr<_1a3b4d89b_ParamDecl>* _51435_param, jule::I64* _51459_i, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _51468_tokens) {
	for (; ((*(_51459_i)) < (*(_51468_tokens)).len()); ((*(_51459_i)))++) {
		{
			jule::Ptr<_1a3b27a62_Token> _5164_token = (*(_51468_tokens))[(*(_51459_i))];;
			if (((*(_5164_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_51435_param))))._field_Variadic) {
				_1a561b9c7_pushErr(_self_, _5164_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1a9611633;
			};
			(*((*(_51435_param))))._field_Variadic=true;
		}
	_iter_next_1a9611633:;
	}
	_iter_end_1a9611633:;;
}



inline void _1a5620aa8_buildParamType(jule::Ptr<_1a561b026_parser> _self_, jule::Ptr<_1a3b4d89b_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _52960_tokens) {
	jule::I64 _5307_i = 0LL;;
	_1a5620745_paramTypeBegin(_self_.ptr(), _52936_param, &(_5307_i), _52960_tokens);
	if ((_5307_i >= (*(_52960_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType(_self_, _52960_tokens, (&(_5307_i)), true);
		(*((*(_52936_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_5307_i < (*(_52960_tokens)).len())) {
		_1a561b9c7_pushErr(_self_, (*(_52960_tokens))[_5307_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a5620e1b_buildParamBody(jule::Ptr<_1a561b026_parser> _self_, jule::Ptr<_1a3b4d89b_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _54259_tokens) {
	jule::Ptr<_1a3b27a62_Token> _5437_tok = _54259_tokens[0LL];;
	if ((_54259_tokens.len() == 1LL)) {
		(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
		return;;
	} else if ((_54259_tokens.len() < 3LL)) {
		_1a561b9c7_pushErr(_self_.ptr(), _5437_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_54259_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_54236_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1a5620aa8_buildParamType(_self_, _54236_param, &(_54259_tokens));
		return;;
	};
	(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
	(_54259_tokens).mut_slice(2LL);;
	_1a5620aa8_buildParamType(_self_, _54236_param, &(_54259_tokens));
}



inline jule::Ptr<_1a3b4d89b_ParamDecl> _1a562125c_buildParam(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _56231_tokens) {
	jule::Ptr<_1a3b4d89b_ParamDecl> _5637_param = jule::new_ptr<_1a3b4d89b_ParamDecl>(_1a3b4d89b_ParamDecl{._field_Token=_56231_tokens[0LL], });;
	if (((*((*(_5637_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_5637_param.alloc)._field_Mutable=true;
		if ((_56231_tokens.len() == 1LL)) {
			_1a561b9c7_pushErr(_self_.ptr(), _56231_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_56231_tokens).mut_slice(1LL);;
		(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
	};
	if ((_56231_tokens.len() >= 3LL)) {
		if (((*(*(_5637_param))._field_Token.alloc)._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_56231_tokens.len() == 1LL)) {
				_1a561b9c7_pushErr(_self_, _56231_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_56231_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_56231_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*_5637_param.alloc)._field_Reference=true;
				(_56231_tokens).mut_slice(1LL);;
				(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
			};
		};
	};
	if (((*(*(_5637_param))._field_Token.alloc)._field_Id != static_cast<jule::U64>(1LLU))) {
		(*_5637_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1a5620aa8_buildParamType(_self_, &(_5637_param), &(_56231_tokens));
	} else {
		_1a5620e1b_buildParamBody(_self_, &(_5637_param), _56231_tokens);
	};
	return _5637_param;;
}



inline void _1a5621515_checkParams(_1a561b026_parser* _self_, jule::Slice<jule::Ptr<_1a3b4d89b_ParamDecl>>* _60532_params) {
	{
		auto expr = _60532_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9835637:;
		if (it != expr_end) {
			jule::Ptr<_1a3b4d89b_ParamDecl> _60615_param = *it;
			{
				if ((_1a3b4dc20_IsSelf(_60615_param.ptr()) || ((*_60615_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1a9835637;
				};
				if (((*_60615_param.alloc)._field_Token == nullptr)) {
					_1a561b9c7_pushErr(_self_, (*_60615_param.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*_60615_param.alloc)._field_Kind=jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a3b3d748_IdentTypeDecl>(_1a3b3d748_IdentTypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Ident=(*((*_60615_param.alloc)._field_Token))._field_Kind, }), &__jule_any_type75)});
					(*_60615_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1a9835637:;
			++it;
			goto _iter_begin_1a9835637;
		}
		_iter_end_1a9835637:;
	};
}



inline jule::Slice<jule::Ptr<_1a3b4d89b_ParamDecl>> _1a5621911_buildParams(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _62533_tokens, jule::Bool _62551_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _6267_parts;
	jule::Slice<_1e7c94ecb_Log> _62614_errs;
	({
		__jule_tuple_ssx_1a3b27a62_Token__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a5619e48_parts(_62533_tokens, static_cast<jule::U64>(5LLU), true);
		_6267_parts = __jule_assign_result.__jule_result_arg0;
		_62614_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_62614_errs);
	if ((_6267_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3b4d89b_ParamDecl>> _63211_params = nullptr;;
	if ((_62551_method && (_6267_parts.len() > 0LL))) {
		jule::Ptr<_1a3b4d89b_ParamDecl> _6348_param = _1a5620327_buildSelfParam(_self_, _6267_parts[0LL]);;
		if (((_6348_param != nullptr) && _1a3b4dc20_IsSelf(_6348_param))) {
			{ jule::Slice<jule::Ptr<_1a3b4d89b_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6348_param); };
			(_6267_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_6267_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a983be13:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3b27a62_Token>> _64115_part = *it;
			{
				if ((_64115_part.len() == 0LL)) {
					goto _iter_next_1a983be13;
				};
				jule::Ptr<_1a3b4d89b_ParamDecl> _6458_param = _1a562125c_buildParam(_self_, _64115_part);;
				if ((_6458_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1a3b4d89b_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6458_param); };
				};
			}
			_iter_next_1a983be13:;
			++it;
			goto _iter_begin_1a983be13;
		}
		_iter_end_1a983be13:;
	};
	_1a5621515_checkParams(_self_, &(_63211_params));
	return _63211_params;;
}



inline __jule_tuple_x_1a3b41031_RetTypeDecl__jule_tuple_bool _1a5621d0c_buildMultiRetType(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _65539_tokens, jule::I64* _65562_i) {
	__jule_tuple_x_1a3b41031_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a3b41031_RetTypeDecl>();
	((*(_65562_i)))++;
	if (((*(_65562_i)) >= (*(_65539_tokens)).len())) {
		((*(_65562_i)))--;
		({
			__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType(_self_, _65539_tokens, (&((*(_65562_i)))), false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_65562_i)))--;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _6657_rangeTokens = _1a56196c8_range(_65562_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _65539_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _6677_parts;
	jule::Slice<_1e7c94ecb_Log> _66714_errs;
	({
		__jule_tuple_ssx_1a3b27a62_Token__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a5619e48_parts(&(_6657_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_6677_parts = __jule_assign_result.__jule_result_arg0;
		_66714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_66714_errs);
	if ((_6677_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> _6737_types = jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>>::alloc(0LL, _6677_parts.len());;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::Slice<jule::Ptr<_1a3b27a62_Token>>::alloc(0LL, _6677_parts.len());
	{
		auto expr = &(_6677_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a91d46bd:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3b27a62_Token>> _67515_part = *it;
			{
				if ((_67515_part.len() == 0LL)) {
					goto _iter_next_1a91d46bd;
				};
				jule::Ptr<_1a3b27a62_Token> _6798_token = _67515_part[0LL];;
				jule::I64 _6808_offset = 0LL;;
				if ((_67515_part.len() > 1LL)) {
					_6798_token=_67515_part[1LL];
					if (((*(_6798_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_6808_offset=2LL;
						if ((_67515_part.len() < 3LL)) {
							_1a561b9c7_pushErr(_self_, _6798_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1a91d46bd;
						};
					};
				};
				_6798_token=_67515_part[0LL];
				if ((_6808_offset != 2LL)) {
					jule::Ptr<_1a3b27a62_Token> _6969_newToken = jule::new_ptr<_1a3b27a62_Token>((*_6798_token.alloc));;
					(*_6969_newToken.alloc)._field_Kind=jule::Str::lit("<anonymous>", 11);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a3b27a62_Token>>::make({_6969_newToken}));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a3b27a62_Token>>::make({_6798_token}));
				};
				jule::Ptr<_1a3b3d13d_TypeDecl> _7038_tk;
				({
					__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType(_self_, &(_67515_part), (&(_6808_offset)), true);
					_7038_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6808_offset < _67515_part.len())) {
					_1a561b9c7_pushErr(_self_, _67515_part[_6808_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> &__jule_push_dest = _6737_types; __jule_push_dest.push(_7038_tk); };
			}
			_iter_next_1a91d46bd:;
			++it;
			goto _iter_begin_1a91d46bd;
		}
		_iter_end_1a91d46bd:;
	};
	if ((_6737_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Token=(*(_65539_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1a3b3e86a_TupleTypeDecl>(_1a3b3e86a_TupleTypeDecl{._field_Types=_6737_types}), &__jule_any_type74)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6737_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a3b41031_RetTypeDecl__jule_tuple_bool _1a5622208_buildRetType(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _72634_tokens, jule::I64* _72657_i) {
	__jule_tuple_x_1a3b41031_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a3b41031_RetTypeDecl>();
	if (((*(_72657_i)) >= (*(_72634_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a3b27a62_Token> _7327_token = (*(_72634_tokens))[(*(_72657_i))];;
	{
		auto &_match_expr{ (*(_7327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1a9e2ccd9:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1a9e2cd61:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1a9e2cdc7:;
			{
				if ((((*(_72657_i)) + 1LL) >= (*(_72634_tokens)).len())) {
					_1a561b9c7_pushErr(_self_.ptr(), _7327_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_72657_i)))++;
				_7327_token=(*(_72634_tokens))[(*(_72657_i))];
				{
					auto &_match_expr{ (*(_7327_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a9e2e0e8:;
						{
							({
								__jule_tuple_x_1a3b41031_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a5621d0c_buildMultiRetType(_self_, _72634_tokens, _72657_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1a9e2ecca:;
						{
							_1a561b9c7_pushErr(_self_, _7327_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1a9e2ec42:;
				};
				({
					__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType(_self_, _72634_tokens, (&((*(_72657_i)))), true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1a9e2cc84:;
	};
	((*(_72657_i)))++;
	_1a561b9c7_pushErr(_self_.ptr(), _7327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1a3b4eced_FnDecl> _1a56226ae_buildFnPrototype(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _76538_tokens, jule::I64* _76561_i, jule::Bool _76569_method) {
	jule::Ptr<_1a3b4eced_FnDecl> _7667_f = jule::new_ptr<_1a3b4eced_FnDecl>(_1a3b4eced_FnDecl{._field_Token=(*(_76538_tokens))[(*(_76561_i))], });;
	if (((*((*(_7667_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*_7667_f.alloc)._field_Statically=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1a561b9c7_pushErr(_self_.ptr(), (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	if (((*(*(_7667_f))._field_Token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		(*_7667_f.alloc)._field_Unsafety=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1a561b9c7_pushErr(_self_, (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	((*(_76561_i)))++;
	if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
		_1a561b9c7_pushErr(_self_, (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3b27a62_Token> _7993_tok = (*(_76538_tokens))[(*(_76561_i))];;
	if (((*(_7993_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1a561b9c7_pushErr(_self_, (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Ident=(*_7993_tok.alloc)._field_Kind;
	} else {
		(*_7667_f.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1a3b27a62_Token> _8113_errorToken = (*(_76538_tokens))[(*(_76561_i))];;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _8127_genericsTokens = _1a56196c8_range(_76561_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _76538_tokens);;
	if ((_8127_genericsTokens != nullptr)) {
		(*_7667_f.alloc)._field_Generics=_1a561eed6_buildGenerics(_self_, &(_8127_genericsTokens), &(_8113_errorToken));
	};
	if (((*((*(_76538_tokens))[(*(_76561_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1a561b9c7_pushErr(_self_, (*(_76538_tokens))[(*(_76561_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _8227_paramsToks = _1a56196c8_range(_76561_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _76538_tokens);;
	if ((_8227_paramsToks.len() > 0LL)) {
		(*_7667_f.alloc)._field_Params=_1a5621911_buildParams(_self_, &(_8227_paramsToks), _76569_method);
	};
	if (((*(_76561_i)) < (*(_76538_tokens)).len())) {
		jule::Ptr<_1a3b27a62_Token> _8284_token = (*(_76538_tokens))[(*(_76561_i))];;
		if (((*(_8284_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*_7667_f.alloc)._field_Exceptional=true;
			((*(_76561_i)))++;
		};
	};
	(*_7667_f.alloc)._field_Public=_1a3c05b40_IsPub((*_7667_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1a3b41031_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a5622208_buildRetType(_self_, _76538_tokens, _76561_i);
		(*_7667_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7667_f;;
}



inline jule::Ptr<_1a3b4eced_FnDecl> _1a5622b65_buildFn(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype) {
	jule::I64 _8437_i = 0LL;;
	jule::Ptr<_1a3b4eced_FnDecl> _8447_f = _1a56226ae_buildFnPrototype(_self_, _84229_tokens, &(_8437_i), _84247_method);;
	if (_84261_prototype) {
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1a561b9c7_pushErr(_self_, (*(_84229_tokens))[(_8437_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _8447_f;;
	} else if ((_8447_f == nullptr)) {
		return _8447_f;;
	};
	if ((_8437_i >= (*(_84229_tokens)).len())) {
		_1a561b323_stop(_self_);
		_1a561b9c7_pushErr(_self_, (*(_8447_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _8607_blockTokens = _1a56196c8_range(&(_8437_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _84229_tokens);;
	if ((_8607_blockTokens != nullptr)) {
		(*_8447_f.alloc)._field_Scope=_1a561cb71_buildScope(_self_, &(_8607_blockTokens), (*(_84229_tokens))[(_8437_i - 1LL)]);
		(*((*_8447_f.alloc)._field_Scope))._field_Unsafety=(*_8447_f.alloc)._field_Unsafety;
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1a561b9c7_pushErr(_self_, (*(_84229_tokens))[_8437_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1a561b323_stop(_self_);
		_1a561b9c7_pushErr(_self_, (*_8447_f.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8447_f;;
}



inline jule::Slice<jule::Ptr<_1a3b27a62_Token>> _1a5622ea6_getUseDeclSelectors(_1a561b026_parser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _87639_tokens) {
	jule::I64 _8777_i = 0LL;;
	_87639_tokens=_1a56196c8_range(&(_8777_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_87639_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _8797_parts;
	jule::Slice<_1e7c94ecb_Log> _87914_errs;
	({
		__jule_tuple_ssx_1a3b27a62_Token__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a5619e48_parts(&(_87639_tokens), static_cast<jule::U64>(5LLU), true);
		_8797_parts = __jule_assign_result.__jule_result_arg0;
		_87914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_87914_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_87914_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _8857_selectors = jule::Slice<jule::Ptr<_1a3b27a62_Token>>::alloc(0LL, _8797_parts.len());;
	{
		auto expr = &(_8797_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e48321:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3b27a62_Token>> _88615_part = *it;
			{
				if ((_88615_part.len() > 1LL)) {
					_1a561b9c7_pushErr(_self_, _88615_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a3b27a62_Token> _8908_tok = _88615_part[0LL];;
				if ((((*(_8908_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*_8908_tok.alloc)._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1a561b9c7_pushErr(_self_, _8908_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1a9e48321;
				};
				{ jule::Slice<jule::Ptr<_1a3b27a62_Token>> &__jule_push_dest = _8857_selectors; __jule_push_dest.push(_8908_tok); };
			}
			_iter_next_1a9e48321:;
			++it;
			goto _iter_begin_1a9e48321;
		}
		_iter_end_1a9e48321:;
	};
	return _8857_selectors;;
}



inline void _1a5623319_buildBindUseDecl(_1a561b026_parser* _self_, jule::Ptr<_1a3b56244_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _90154_tokens) {
	if (((*(_90154_tokens)).len() > 1LL)) {
		_1a561b9c7_pushErr(_self_, (*(_90154_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3b27a62_Token> _9053_token = (*(_90154_tokens))[0LL];;
	if ((((*(_9053_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*_9053_token.alloc)._field_Kind[0LL] != '`') && ((*_9053_token.alloc)._field_Kind[0LL] != '\"')))) {
		_1a561b9c7_pushErr(_self_, _9053_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_90137_decl))))._field_Binded=true;
	(*((*(_90137_decl))))._field_LinkPath=(*_9053_token.alloc)._field_Kind.slice(1LL, ((*_9053_token.alloc)._field_Kind.len() - 1LL));
}



inline jule::Str _1a562365a_useDeclTokstoa(_1a561b026_parser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _91431_tokens) {
	jule::I64 _9157_n = 0LL;;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e50889:;
		if (it != expr_end) {
			jule::Ptr<_1a3b27a62_Token> *_91610_token = it;
			{
				if ((((*((*(_91610_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_91610_token)).alloc)._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1a561b9c7_pushErr(_self_, (*(_91610_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_9157_n+=(*(*(_91610_token)).alloc)._field_Kind.len();
			}
			_iter_next_1a9e50889:;
			++it;
			goto _iter_begin_1a9e50889;
		}
		_iter_end_1a9e50889:;
	};
	_1e7be2632_StrBuilder _9227_s = static__1e7be28eb_New(_9157_n);;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e50735:;
		if (it != expr_end) {
			jule::Ptr<_1a3b27a62_Token> *_92310_token = it;
			{
				_1e7beb262_WriteStr(&_9227_s, (*((*(_92310_token))))._field_Kind);
			}
			_iter_next_1a9e50735:;
			++it;
			goto _iter_begin_1a9e50735;
		}
		_iter_end_1a9e50735:;
	};
	return _1e7beba59_Str(&_9227_s);;
}



inline void _1a56239bd_buildStdUseDecl(_1a561b026_parser* _self_, jule::Ptr<_1a3b56244_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _92956_tokens) {
	(*((*(_92936_decl))))._field_Std=true;
	jule::Ptr<_1a3b27a62_Token> _9327_token = _92956_tokens[0LL];;
	if ((_92956_tokens.len() < 3LL)) {
		_1a561b9c7_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_92956_tokens).mut_slice(2LL);;
	_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_9327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a9e5533e:;
			{
				_1a561b9c7_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1a9e553b6:;
			{
				jule::Slice<jule::Ptr<_1a3b27a62_Token>> _94512_selectors = nullptr;;
				({
					__jule_tuple_sx_1a3b27a62_Token__jule_tuple_sx_1a3b27a62_Token __jule_assign_result = _1a5619992_rangeLast(&(_92956_tokens));
					_92956_tokens = __jule_assign_result.__jule_result_arg0;
					_94512_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_92936_decl))))._field_Selected=_1a5622ea6_getUseDeclSelectors(_self_, _94512_selectors);
				if ((_92956_tokens.len() == 0LL)) {
					_1a561b9c7_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a561b9c7_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1a561b9c7_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a9e5542c:;
			{
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1a561b9c7_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a561b9c7_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1a561b9c7_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_92936_decl))))._field_Full=true;
			}
		}
		_match_end_1a9e552d9:;
	};
	if (((_92956_tokens.len() == 1LL) && ((*(_92956_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_92936_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_92936_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1a562365a_useDeclTokstoa(_self_, &(_92956_tokens)));
	};
}



inline void _1a5623d31_buildIdentUseDecl(_1a561b026_parser* _self_, jule::Ptr<_1a3b56244_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _98758_tokens) {
	(*((*(_98738_decl))))._field_Std=false;
	jule::Ptr<_1a3b27a62_Token> _9907_token = _98758_tokens[(_98758_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_9907_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a9e5de08:;
			{
				_1a561b9c7_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1a9e5ed60:;
			{
				jule::Slice<jule::Ptr<_1a3b27a62_Token>> _99612_selectors = nullptr;;
				({
					__jule_tuple_sx_1a3b27a62_Token__jule_tuple_sx_1a3b27a62_Token __jule_assign_result = _1a5619992_rangeLast(&(_98758_tokens));
					_98758_tokens = __jule_assign_result.__jule_result_arg0;
					_99612_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_98738_decl))))._field_Selected=_1a5622ea6_getUseDeclSelectors(_self_, _99612_selectors);
				if ((_98758_tokens.len() == 0LL)) {
					_1a561b9c7_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a561b9c7_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1a561b9c7_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a9e5edc6:;
			{
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1a561b9c7_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a561b9c7_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1a561b9c7_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_98738_decl))))._field_Full=true;
			}
		}
		_match_end_1a9e5ec3e:;
	};
	(*((*(_98738_decl))))._field_LinkPath=_1a562365a_useDeclTokstoa(_self_, &(_98758_tokens));
}



inline void _1a5624194_parseUseDecl(_1a561b026_parser* _self_, jule::Ptr<_1a3b56244_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _103553_tokens) {
	if ((*((*(_103533_decl))))._field_Binded) {
		_1a5623319_buildBindUseDecl(_self_, _103533_decl, &(_103553_tokens));
		return;;
	};
	jule::Ptr<_1a3b27a62_Token> _10417_token = _103553_tokens[0LL];;
	if (((*(_10417_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a561b9c7_pushErr(_self_, _10417_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_103553_tokens.len() > 2LL) && ((*(_103553_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_103533_decl))))._field_Alias=(*_10417_token.alloc)._field_Kind;
		if (((*(_103553_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a561b9c7_pushErr(_self_, _10417_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_103553_tokens).mut_slice(2LL);;
		_10417_token=_103553_tokens[0LL];
	};
	;
	{
		
		if ((*(_10417_token))._field_Kind.equal("std", 3)) {
			_case_begin_1a9e6c037:;
			{
				_1a56239bd_buildStdUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		else {
			_case_begin_1a9e6bb80:;
			{
				_1a5623d31_buildIdentUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		_match_end_1a9e6bb19:;
	};
}



inline jule::Ptr<_1a3b56244_UseDecl> _1a5624590_buildUseDecl(_1a561b026_parser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _106932_tokens, jule::Bool _106950_binded) {
	jule::Ptr<_1a3b56244_UseDecl> _10707_decl = jule::new_ptr<_1a3b56244_UseDecl>(_1a3b56244_UseDecl{._field_Token=_106932_tokens[0LL], ._field_Binded=_106950_binded, });;
	if ((_106932_tokens.len() < 2LL)) {
		_1a561b9c7_pushErr(_self_, (*(_10707_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_106932_tokens).mut_slice(1LL);;
	_1a5624194_parseUseDecl(_self_, &(_10707_decl), _106932_tokens);
	return _10707_decl;;
}



inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a562498b_buildTypeEnumItemKind(jule::Ptr<_1a561b026_parser> _self_, jule::I64* _108343_i, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _108356_tokens) {
	jule::I64 _10847_braceN = 0LL;;
	jule::I64 _10853_exprStart = (*(_108343_i));;
	for (; ((*(_108343_i)) < (*(_108356_tokens)).len()); ((*(_108343_i)))++) {
		{
			jule::Ptr<_1a3b27a62_Token> _10874_t = (*(_108356_tokens))[(*(_108343_i))];;
			{
				auto &_match_expr{ (*(_10874_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1a9e7105d:;
					{
						(_10847_braceN)++;
						goto _iter_next_1a9e704e1;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1a9e7136b:;
					{
						(_10847_braceN)--;
					}
				}
				_match_end_1a9e71316:;
			};
			if ((_10847_braceN > 0LL)) {
				goto _iter_next_1a9e704e1;
			};
			if ((((*(_10874_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_108343_i)) + 1LL) >= (*(_108356_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a3b27a62_Token>> _110313_kindTokens = nullptr;;
				if (((*_10874_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart, (*(_108343_i)));
				} else {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart);
				};
				jule::I64 _11099_j = 0LL;;
				jule::Ptr<_1a3b3d13d_TypeDecl> _11109_kind;
				({
					__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType(_self_, &(_110313_kindTokens), (&(_11099_j)), true);
					_11109_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_11099_j < _110313_kindTokens.len())) {
					_1a561b9c7_pushErr(_self_, _110313_kindTokens[_11099_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _11109_kind;;
			};
		}
	_iter_next_1a9e704e1:;
	}
	_iter_end_1a9e704e1:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a3b57ad6_TypeEnumItemDecl>> _1a5624ccc_buildTypeEnumItems(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _112040_tokens) {
	jule::Slice<jule::Ptr<_1a3b57ad6_TypeEnumItemDecl>> _11217_items = jule::Slice<jule::Ptr<_1a3b57ad6_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _11227_i = 0LL;;
	for (; (_11227_i < (*(_112040_tokens)).len()); (_11227_i)++) {
		{
			jule::Ptr<_1a3b27a62_Token> _11248_t = (*(_112040_tokens))[_11227_i];;
			jule::Ptr<_1a3b57ad6_TypeEnumItemDecl> _11258_item = jule::new_ptr<_1a3b57ad6_TypeEnumItemDecl>();;
			(*_11258_item.alloc)._field_Token=_11248_t;
			if ((((*((*_11258_item.alloc)._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_112040_tokens)).len() - _11227_i) > 2LL))) {
				_11248_t=(*(_112040_tokens))[(_11227_i + 1LL)];
				if (((*(_11248_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*_11258_item.alloc)._field_Ident=(*(*(_11258_item))._field_Token.alloc)._field_Kind;
					_11227_i+=2LL;
					if (((_11227_i >= (*(_112040_tokens)).len()) || ((*((*(_112040_tokens))[_11227_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1a561b9c7_pushErr(_self_.ptr(), _11248_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1a9e761c8;
					};
				};
			};
			(*_11258_item.alloc)._field_Kind=_1a562498b_buildTypeEnumItemKind(_self_, &(_11227_i), _112040_tokens);
			{ jule::Slice<jule::Ptr<_1a3b57ad6_TypeEnumItemDecl>> &__jule_push_dest = _11217_items; __jule_push_dest.push(_11258_item); };
		}
	_iter_next_1a9e761c8:;
	}
	_iter_end_1a9e761c8:;;
	return _11217_items;;
}



inline jule::Ptr<_1a3b58246_TypeEnumDecl> _1a562511d_buildTypeEnumDecl(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _114439_tokens) {
	jule::I64 _11457_i = 1LL;;
	jule::Ptr<_1a3b58246_TypeEnumDecl> _11467_e = jule::new_ptr<_1a3b58246_TypeEnumDecl>(_1a3b58246_TypeEnumDecl{._field_Token=(*(_114439_tokens))[_11457_i], });;
	if (((*((*(_11467_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a561b9c7_pushErr(_self_.ptr(), (*_11467_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Ident=(*(*(_11467_e))._field_Token.alloc)._field_Kind;
	_11457_i+=3LL;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _11567_itemTokens = _1a56196c8_range(&(_11457_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _114439_tokens);;
	if ((_11567_itemTokens == nullptr)) {
		_1a561b323_stop(_self_);
		_1a561b9c7_pushErr(_self_, (*_11467_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _11467_e;;
	} else if ((_11457_i < (*(_114439_tokens)).len())) {
		_1a561b9c7_pushErr(_self_, (*(_114439_tokens))[_11457_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Public=_1a3c05b40_IsPub((*_11467_e.alloc)._field_Ident);
	(*_11467_e.alloc)._field_End=(*(_114439_tokens))[(_11457_i - 1LL)];
	(*_11467_e.alloc)._field_Items=_1a5624ccc_buildTypeEnumItems(_self_, &(_11567_itemTokens));
	return _11467_e;;
}



inline jule::Ptr<_1a3b42472_Expr> _1a5625519_buildEnumItemExpr(jule::Ptr<_1a561b026_parser> _self_, jule::I64* _117139_i, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _117152_tokens) {
	jule::I64 _11727_braceN = 0LL;;
	jule::I64 _11733_exprStart = (*(_117139_i));;
	for (; ((*(_117139_i)) < (*(_117152_tokens)).len()); ((*(_117139_i)))++) {
		{
			jule::Ptr<_1a3b27a62_Token> _11754_t = (*(_117152_tokens))[(*(_117139_i))];;
			{
				auto &_match_expr{ (*(_11754_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1a9e83db7:;
					{
						(_11727_braceN)++;
						goto _iter_next_1a9e8334a;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1a9e841c5:;
					{
						(_11727_braceN)--;
					}
				}
				_match_end_1a9e84170:;
			};
			if ((_11727_braceN > 0LL)) {
				goto _iter_next_1a9e8334a;
			};
			if ((((*(_11754_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_117139_i)) + 1LL) >= (*(_117152_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a3b27a62_Token>> _119113_exprTokens = nullptr;;
				if (((*_11754_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart, (*(_117139_i)));
				} else {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart);
				};
				return _1a561c17b_buildExpr(_self_, &(_119113_exprTokens));;
			};
		}
	_iter_next_1a9e8334a:;
	}
	_iter_end_1a9e8334a:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a3b566ea_EnumItemDecl>> _1a562585a_buildEnumItems(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _120336_tokens) {
	jule::Slice<jule::Ptr<_1a3b566ea_EnumItemDecl>> _12047_items = jule::Slice<jule::Ptr<_1a3b566ea_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _12057_i = 0LL;;
	for (; (_12057_i < (*(_120336_tokens)).len()); (_12057_i)++) {
		{
			jule::Ptr<_1a3b27a62_Token> _12078_t = (*(_120336_tokens))[_12057_i];;
			jule::Ptr<_1a3b566ea_EnumItemDecl> _12088_item = jule::new_ptr<_1a3b566ea_EnumItemDecl>();;
			(*_12088_item.alloc)._field_Token=_12078_t;
			if (((*((*_12088_item.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1a561b9c7_pushErr(_self_.ptr(), (*_12088_item.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*_12088_item.alloc)._field_Ident=(*(*(_12088_item))._field_Token.alloc)._field_Kind;
			if ((((_12057_i + 1LL) >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[(_12057_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_12057_i + 1LL) < (*(_120336_tokens)).len())) {
					(_12057_i)++;
				};
				{ jule::Slice<jule::Ptr<_1a3b566ea_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
				goto _iter_next_1a9e87c56;
			};
			(_12057_i)++;
			_12078_t=(*(_120336_tokens))[_12057_i];
			(_12057_i)++;
			if (((*(_12078_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1a561b9c7_pushErr(_self_, _12078_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1a9e87c56;
			};
			if (((_12057_i >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[_12057_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1a561b9c7_pushErr(_self_, _12078_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1a9e87c56;
			};
			(*_12088_item.alloc)._field_Expr=_1a5625519_buildEnumItemExpr(_self_, &(_12057_i), _120336_tokens);
			{ jule::Slice<jule::Ptr<_1a3b566ea_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
		}
	_iter_next_1a9e87c56:;
	}
	_iter_end_1a9e87c56:;;
	return _12047_items;;
}



inline jule::Ptr<_1a3b572ab_EnumDecl> _1a5625b9b_buildEnumDecl(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _124035_tokens) {
	if (((*(_124035_tokens)).len() < 3LL)) {
		_1a561b9c7_pushErr(_self_.ptr(), (*(_124035_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3b572ab_EnumDecl> _12457_e = jule::new_ptr<_1a3b572ab_EnumDecl>(_1a3b572ab_EnumDecl{._field_Token=(*(_124035_tokens))[1LL], });;
	if (((*((*(_12457_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a561b9c7_pushErr(_self_, (*_12457_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Ident=(*(*(_12457_e))._field_Token.alloc)._field_Kind;
	jule::I64 _12537_i = 2LL;;
	if (((*((*(_124035_tokens))[_12537_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_12537_i)++;
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1a561b9c7_pushErr(_self_, (*(_124035_tokens))[(_12537_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _12457_e;;
		};
		({
			__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType(_self_, _124035_tokens, (&(_12537_i)), true);
			(*_12457_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1a561b323_stop(_self_);
			_1a561b9c7_pushErr(_self_, (*_12457_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _12457_e;;
		};
	} else {
		(*_12457_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _12707_itemTokens = _1a56196c8_range(&(_12537_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _124035_tokens);;
	if ((_12707_itemTokens == nullptr)) {
		_1a561b323_stop(_self_);
		_1a561b9c7_pushErr(_self_, (*_12457_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _12457_e;;
	} else if ((_12537_i < (*(_124035_tokens)).len())) {
		_1a561b9c7_pushErr(_self_, (*(_124035_tokens))[_12537_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Public=_1a3c05b40_IsPub((*_12457_e.alloc)._field_Ident);
	(*_12457_e.alloc)._field_End=(*(_124035_tokens))[(_12537_i - 1LL)];
	(*_12457_e.alloc)._field_Items=_1a562585a_buildEnumItems(_self_, &(_12707_itemTokens));
	return _12457_e;;
}



inline jule::Any _1a5625edc_buildNodeEnumDecl(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _128539_tokens) {
	if ((((*(_128539_tokens)).len() > 3LL) && ((*((*(_128539_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_128539_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1a562511d_buildTypeEnumDecl(_self_, _128539_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1a5625b9b_buildEnumDecl(_self_, _128539_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1a3b58510_FieldDecl> _1a562632d_buildField(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _129431_tokens) {
	jule::Ptr<_1a3b58510_FieldDecl> _12957_f = jule::new_ptr<_1a3b58510_FieldDecl>();;
	(*_12957_f.alloc)._field_Mutable=((*(_129431_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*_12957_f.alloc)._field_Mutable) {
		if ((_129431_tokens.len() == 1LL)) {
			_1a561b9c7_pushErr(_self_.ptr(), _129431_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(1LL);;
	};
	(*_12957_f.alloc)._field_Token=_129431_tokens[0LL];
	if (((*((*_12957_f.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a561b9c7_pushErr(_self_, (*_12957_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_12957_f.alloc)._field_Ident=(*(*(_12957_f))._field_Token.alloc)._field_Kind;
	if ((_129431_tokens.len() == 1LL)) {
		_1a561b9c7_pushErr(_self_, _129431_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_129431_tokens.len() < 3LL) || ((*(_129431_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1a561b9c7_pushErr(_self_, _129431_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_129431_tokens).mut_slice(2LL);;
	jule::I64 _13237_i = 0LL;;
	({
		__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType(_self_, &(_129431_tokens), (&(_13237_i)), true);
		(*_12957_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_13237_i < _129431_tokens.len())) {
		jule::Ptr<_1a3b27a62_Token> _13264_token = _129431_tokens[_13237_i];;
		if (((*(_13264_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a561b9c7_pushErr(_self_, _129431_tokens[_13237_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13237_i)++;
		if ((_13237_i >= _129431_tokens.len())) {
			_1a561b9c7_pushErr(_self_, _13264_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(_13237_i);;
		(*_12957_f.alloc)._field_Default=_1a561c17b_buildExpr(_self_, &(_129431_tokens));
	};
	(*_12957_f.alloc)._field_Public=_1a3c05b40_IsPub((*_12957_f.alloc)._field_Ident);
	return _12957_f;;
}



inline jule::Slice<jule::Ptr<_1a3b58510_FieldDecl>> _1a562666e_buildStructDeclFields(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _134342_tokens) {
	jule::Slice<jule::Ptr<_1a3b58510_FieldDecl>> _134411_fields = nullptr;;
	jule::Slice<jule::Ptr<_1a55ec106_stmt>> _13457_stmts = _1a55ec4ad_splitStmts(&(_134342_tokens));;
	{
		auto expr = &(_13457_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9626c20:;
		if (it != expr_end) {
			jule::Ptr<_1a55ec106_stmt> _134615_stmt = *it;
			{
				_134342_tokens=(*(_134615_stmt))._field_tokens;
				jule::Ptr<_1a3b58510_FieldDecl> _13488_f = _1a562632d_buildField(_self_, _134342_tokens);;
				{ jule::Slice<jule::Ptr<_1a3b58510_FieldDecl>> &__jule_push_dest = _134411_fields; __jule_push_dest.push(_13488_f); };
			}
			_iter_next_1a9626c20:;
			++it;
			goto _iter_begin_1a9626c20;
		}
		_iter_end_1a9626c20:;
	};
	return _134411_fields;;
}



inline jule::Ptr<_1a3b58e06_StructDecl> _1a56269b0_buildStructDecl(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _135437_tokens) {
	if (((*(_135437_tokens)).len() < 3LL)) {
		_1a561b9c7_pushErr(_self_.ptr(), (*(_135437_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _13607_i = 1LL;;
	jule::Ptr<_1a3b58e06_StructDecl> _13617_s = jule::new_ptr<_1a3b58e06_StructDecl>(_1a3b58e06_StructDecl{._field_Token=(*(_135437_tokens))[_13607_i], });;
	if (((*((*(_13617_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a561b9c7_pushErr(_self_, (*_13617_s.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_13607_i)++;
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1a561b9c7_pushErr(_self_, (*(_135437_tokens))[_13607_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	(*_13617_s.alloc)._field_Ident=(*(*(_13617_s))._field_Token.alloc)._field_Kind;
	jule::Ptr<_1a3b27a62_Token> _13753_errorToken = (*(_135437_tokens))[_13607_i];;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _13767_genericsTokens = _1a56196c8_range(&(_13607_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _135437_tokens);;
	if ((_13767_genericsTokens != nullptr)) {
		(*_13617_s.alloc)._field_Generics=_1a561eed6_buildGenerics(_self_, &(_13767_genericsTokens), &(_13753_errorToken));
	};
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1a561b9c7_pushErr(_self_, (*(_135437_tokens))[(_13607_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _13867_bodyTokens = _1a56196c8_range(&(_13607_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _135437_tokens);;
	if ((_13867_bodyTokens == nullptr)) {
		_1a561b323_stop(_self_);
		_1a561b9c7_pushErr(_self_, (*_13617_s.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	if ((_13607_i < (*(_135437_tokens)).len())) {
		_1a561b9c7_pushErr(_self_, (*(_135437_tokens))[_13607_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_13617_s.alloc)._field_Public=_1a3c05b40_IsPub((*_13617_s.alloc)._field_Ident);
	(*_13617_s.alloc)._field_Fields=_1a562666e_buildStructDeclFields(_self_, _13867_bodyTokens);
	(*_13617_s.alloc)._field_End=(*(_135437_tokens))[(_13607_i - 1LL)];
	return _13617_s;;
}



inline void _1a5626c68_checkMethodReceiver(_1a561b026_parser* _self_, jule::Ptr<_1a3b4eced_FnDecl>* _140236_f) {
	if ((*((*(_140236_f))))._field_Statically) {
		if ((((*((*(_140236_f))))._field_Params.len() > 0LL) && _1a3b4dc20_IsSelf((*((*(_140236_f))))._field_Params[0LL].ptr()))) {
			_1a561b9c7_pushErr(_self_, (*((*(_140236_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_140236_f))))._field_Params.len() == 0LL)) {
		_1a561b9c7_pushErr(_self_, (*((*(_140236_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a3b4d89b_ParamDecl> _14143_param = (*((*(_140236_f))))._field_Params[0LL];;
	if ((!(_1a3b4dc20_IsSelf(_14143_param.ptr())))) {
		_1a561b9c7_pushErr(_self_, (*((*(_140236_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a56270cb_buildTraitBody(jule::Ptr<_1a561b026_parser> _self_, jule::Ptr<_1a3b59643_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _142155_tokens) {
	jule::Slice<jule::Ptr<_1a55ec106_stmt>> _14227_stmts = _1a55ec4ad_splitStmts(&(_142155_tokens));;
	{
		auto expr = &(_14227_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96376c0:;
		if (it != expr_end) {
			jule::Ptr<_1a55ec106_stmt> _142315_stmt = *it;
			{
				_142155_tokens=(*(_142315_stmt))._field_tokens;
				if ((_142155_tokens.len() == 0LL)) {
					goto _iter_next_1a96376c0;
				};
				{
					auto &_match_expr{ (*(_142155_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1a963b174:;
						{
							jule::Ptr<_1a3b4eced_FnDecl> _14309_f = _1a5622b65_buildFn(_self_, &(_142155_tokens), true, true);;
							if ((_14309_f == nullptr)) {
								goto _match_end_1a9638946;
							};
							_1a5626c68_checkMethodReceiver(_self_, &(_14309_f));
							if (((*(_14309_f))._field_Generics.len() > 0LL)) {
								_1a561b9c7_pushErr(_self_, (*(_14309_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a3b4eced_FnDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Methods; __jule_push_dest.push(_14309_f); };
						}
					}
					else {
						_case_begin_1a963824d:;
						{
							jule::I64 _14409_i = 0LL;;
							jule::Ptr<_1a3b3d13d_TypeDecl> _14419_ti;
							jule::Bool _144113_ok;
							({
								__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType(_self_, &(_142155_tokens), (&(_14409_i)), true);
								_14419_ti = __jule_assign_result.__jule_result_arg0;
								_144113_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144113_ok))) {
								goto _match_end_1a9638946;
							};
							if ((_14409_i < _142155_tokens.len())) {
								_1a561b9c7_pushErr(_self_, _142155_tokens[_14409_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Inherits; __jule_push_dest.push(_14419_ti); };
						}
					}
					_match_end_1a9638946:;
				};
			}
			_iter_next_1a96376c0:;
			++it;
			goto _iter_begin_1a96376c0;
		}
		_iter_end_1a96376c0:;
	};
}



inline jule::Ptr<_1a3b59643_TraitDecl> _1a562741c_buildTraitDecl(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _145336_tokens) {
	if (((*(_145336_tokens)).len() < 3LL)) {
		_1a561b9c7_pushErr(_self_.ptr(), (*(_145336_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3b59643_TraitDecl> _14587_t = jule::new_ptr<_1a3b59643_TraitDecl>(_1a3b59643_TraitDecl{._field_Token=(*(_145336_tokens))[1LL], });;
	if (((*((*(_14587_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a561b9c7_pushErr(_self_, (*_14587_t.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Ident=(*(*(_14587_t))._field_Token.alloc)._field_Kind;
	jule::I64 _14667_i = 2LL;;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _14677_bodyTokens = _1a56196c8_range(&(_14667_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _145336_tokens);;
	if ((_14677_bodyTokens == nullptr)) {
		_1a561b323_stop(_self_);
		_1a561b9c7_pushErr(_self_, (*_14587_t.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14667_i < (*(_145336_tokens)).len())) {
		_1a561b9c7_pushErr(_self_, (*(_145336_tokens))[_14667_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Public=_1a3c05b40_IsPub((*_14587_t.alloc)._field_Ident);
	_1a56270cb_buildTraitBody(_self_, &(_14587_t), _14677_bodyTokens);
	(*_14587_t.alloc)._field_End=(*(_145336_tokens))[(_14667_i - 1LL)];
	return _14587_t;;
}



inline jule::Ptr<_1a3b4eced_FnDecl> _1a562775d_buildBindFn(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _148332_tokens) {
	(_148332_tokens).mut_slice(1LL);;
	jule::Ptr<_1a3b4eced_FnDecl> _14857_f = _1a5622b65_buildFn(_self_, &(_148332_tokens), false, true);;
	if ((_14857_f != nullptr)) {
		(*_14857_f.alloc)._field_Public=false;
		(*_14857_f.alloc)._field_Binded=true;
	};
	return _14857_f;;
}



inline jule::Ptr<_1a3b50ea8_VarDecl> _1a5627a9e_buildBindVar(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _149333_tokens) {
	(_149333_tokens).mut_slice(1LL);;
	jule::Ptr<_1a3b50ea8_VarDecl> _14957_v = _1a561e799_buildVar(_self_, _149333_tokens);;
	if ((_14957_v != nullptr)) {
		(*_14957_v.alloc)._field_Public=false;
		(*_14957_v.alloc)._field_Binded=true;
		if (((*_14957_v.alloc)._field_Expr != nullptr)) {
			_1a561b9c7_pushErr(_self_, (*_14957_v.alloc)._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _14957_v;;
}



inline jule::Ptr<_1a3b58e06_StructDecl> _1a5627de0_buildBindStruct(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _150636_tokens) {
	(_150636_tokens).mut_slice(1LL);;
	jule::Ptr<_1a3b58e06_StructDecl> _15087_s = _1a56269b0_buildStructDecl(_self_, &(_150636_tokens));;
	if ((_15087_s != nullptr)) {
		(*_15087_s.alloc)._field_Public=false;
		{
			auto expr = &((*_15087_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a964a21b:;
			if (it != expr_end) {
				jule::Ptr<_1a3b58510_FieldDecl> _151116_f = *it;
				{
					(*(_151116_f))._field_Public=true;
				}
				_iter_next_1a964a21b:;
				++it;
				goto _iter_begin_1a964a21b;
			}
			_iter_end_1a964a21b:;
		};
		(*_15087_s.alloc)._field_Binded=true;
	};
	return _15087_s;;
}



inline jule::Ptr<_1a3b54b5a_TypeAliasDecl> _1a5628231_buildBindTypeAlias(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _152039_tokens) {
	(_152039_tokens).mut_slice(1LL);;
	jule::Ptr<_1a3b54b5a_TypeAliasDecl> _15227_t = _1a561d91e_buildTypeAliasDecl(_self_, &(_152039_tokens));;
	if ((_15227_t != nullptr)) {
		(*_15227_t.alloc)._field_Public=false;
		(*_15227_t.alloc)._field_Binded=true;
	};
	return _15227_t;;
}



inline jule::Ptr<_1a3b56244_UseDecl> _1a5628572_buildBindUse(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _153033_tokens) {
	if ((_153033_tokens.len() == 1LL)) {
		_1a561b9c7_pushErr(_self_.ptr(), _153033_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_153033_tokens).mut_slice(1LL);;
	;
	return _1a5624590_buildUseDecl(_self_, _153033_tokens, true);;
}



inline jule::Any _1a56288b3_buildBind(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _154131_tokens) {
	jule::Ptr<_1a3b27a62_Token> _15427_token = (*(_154131_tokens))[0LL];;
	if (((*(_154131_tokens)).len() == 1LL)) {
		_1a561b9c7_pushErr(_self_.ptr(), _15427_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_15427_token=(*(_154131_tokens))[1LL];
	{
		auto &_match_expr{ (*(_15427_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a9650ee1:;
			{
				return jule::Any(_1a562775d_buildBindFn(_self_, (*(_154131_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a9651057:;
			{
				return jule::Any(_1a5627a9e_buildBindVar(_self_, (*(_154131_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1a9650b6c:;
			{
				return jule::Any(_1a5627de0_buildBindStruct(_self_, (*(_154131_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a9650be4:;
			{
				return jule::Any(_1a5628231_buildBindTypeAlias(_self_, (*(_154131_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1a965060b:;
			{
				_1a561b9c7_pushErr(_self_, _15427_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9650b06:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b4eced_FnDecl> _1a5628c04_getMethod(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _156531_tokens) {
	jule::I64 _15667_i = 0LL;;
	jule::Ptr<_1a3b27a62_Token> _15677_token = (*(_156531_tokens))[_15667_i];;
	if (((*(_15677_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1a561b9c7_pushErr(_self_.ptr(), _15677_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1a561b9c7_pushErr(_self_, _15677_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id != static_cast<jule::U64>(29LLU))) {
		_1a561b9c7_pushErr(_self_, _15677_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a5622b65_buildFn(_self_, _156531_tokens, true, false);;
}



inline void _1a5629067_parseImplBody(jule::Ptr<_1a561b026_parser> _self_, jule::Ptr<_1a3b59ca3_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _159452_tokens) {
	jule::Slice<jule::Ptr<_1a55ec106_stmt>> _15957_stmts = _1a55ec4ad_splitStmts(_159452_tokens);;
	{
		auto expr = &(_15957_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96589cc:;
		if (it != expr_end) {
			jule::Ptr<_1a55ec106_stmt> _159615_stmt = *it;
			{
				(*(_159452_tokens))=(*(_159615_stmt))._field_tokens;
				jule::Ptr<_1a3b27a62_Token> _15988_token = (*(_159452_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1a96590a4:;
						{
							_1a561c775_pushDirective(_self_.ptr(), _1a561c4bc_buildDirective(_self_, (*(_159452_tokens))));
							goto _iter_next_1a96589cc;
						}
					}
					_match_end_1a9659bdc:;
				};
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1a965ae0d:;
						{
							jule::Ptr<_1a3b50ea8_VarDecl> _16079_v = _1a561e799_buildVar(_self_, (*(_159452_tokens)));;
							if ((_16079_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1a3b50ea8_VarDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Statics; __jule_push_dest.push(_16079_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1a965ae74:;
						{
							jule::Ptr<_1a3b4eced_FnDecl> _16149_f = _1a5628c04_getMethod(_self_, _159452_tokens);;
							if ((_16149_f != nullptr)) {
								_1a5626c68_checkMethodReceiver(_self_, &(_16149_f));
								_1a56299a2_applyFnMeta(_self_, &(_16149_f));
								{ jule::Slice<jule::Ptr<_1a3b4eced_FnDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Methods; __jule_push_dest.push(_16149_f); };
							};
						}
					}
					else {
						_case_begin_1a9659d30:;
						{
							_1a561b9c7_pushErr(_self_, _15988_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1a96589cc;
						}
					}
					_match_end_1a965a2e7:;
				};
			}
			_iter_next_1a96589cc:;
			++it;
			goto _iter_begin_1a96589cc;
		}
		_iter_end_1a96589cc:;
	};
}



inline jule::Ptr<_1a3b59ca3_Impl> _1a56293a8_buildImpl(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _162730_tokens) {
	jule::Ptr<_1a3b27a62_Token> _16287_token = _162730_tokens[0LL];;
	if ((_162730_tokens.len() < 2LL)) {
		_1a561b9c7_pushErr(_self_.ptr(), _16287_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _16347_i = 1LL;;
	jule::Ptr<_1a3b3d13d_TypeDecl> _16367_base;
	jule::Bool _163617_ok;
	({
		__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		_16367_base = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1a561b9c7_pushErr(_self_, _16287_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3b59ca3_Impl> _16457_ipl = jule::new_ptr<_1a3b59ca3_Impl>(_1a3b59ca3_Impl{._field_Base=_16367_base, });;
	_16287_token=_162730_tokens[_16347_i];
	if (((*(_16287_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*_16287_token.alloc)._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_16457_ipl))._field_Base, (*_16457_ipl.alloc)._field_Dest);
			goto _julec_label_1a9eb1b2b;
		};
		_1a561b323_stop(_self_);
		_1a561b9c7_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_16347_i)++;
	if ((_16347_i >= _162730_tokens.len())) {
		_1a561b323_stop(_self_);
		_1a561b9c7_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		(*_16457_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1a561b323_stop(_self_);
		_1a561b9c7_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1a9eb1b2b:;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _16837_bodyTokens = _1a56196c8_range(&(_16347_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_162730_tokens));;
	if ((_16837_bodyTokens == nullptr)) {
		_1a561b323_stop(_self_);
		_1a561b9c7_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16347_i < _162730_tokens.len())) {
		_1a561b9c7_pushErr(_self_, _162730_tokens[_16347_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_16457_ipl.alloc)._field_End=_162730_tokens[(_16347_i - 1LL)];
	_1a5629067_parseImplBody(_self_, &(_16457_ipl), &(_16837_bodyTokens));
	return _16457_ipl;;
}



inline jule::Any _1a56296e9_buildNodeData(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _169835_tokens) {
	jule::Ptr<_1a3b27a62_Token> _16997_token = (*(_169835_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_16997_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a9eb69cc:;
			{
				jule::Ptr<_1a3b4eced_FnDecl> _17038_f = _1a5622b65_buildFn(_self_, _169835_tokens, false, false);;
				if ((_17038_f != nullptr)) {
					(*_17038_f.alloc)._field_Global=true;
				};
				return jule::Any(_17038_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a9eb70c6:;
			{
				return jule::Any(_1a561e799_buildVar(_self_, (*(_169835_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a9eb713c:;
			{
				return jule::Any(_1a561d91e_buildTypeAliasDecl(_self_, _169835_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1a9eb65e2:;
			{
				return _1a5625edc_buildNodeEnumDecl(_self_, _169835_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1a9eb6658:;
			{
				return jule::Any(_1a56269b0_buildStructDecl(_self_, _169835_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1a9eb66be:;
			{
				return jule::Any(_1a562741c_buildTraitDecl(_self_, _169835_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1a9eb6735:;
			{
				return jule::Any(_1a56293a8_buildImpl(_self_, (*(_169835_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1a9eb679b:;
			{
				return _1a56288b3_buildBind(_self_, _169835_tokens);;
			}
		}
		else {
			_case_begin_1a9eb6306:;
			{
				_1a561b9c7_pushErr(_self_.ptr(), _16997_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9eb658c:;
	};
}



inline void _1a56299a2_applyFnMeta(_1a561b026_parser* _self_, jule::Ptr<_1a3b4eced_FnDecl>* _173132_f) {
	(*((*(_173132_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1a5629c5a_applyMeta(_1a561b026_parser* _self_, _1a3b3c13c_Node* _173630_node) {
	{
		auto &_match_expr{ (*(_173630_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a9ebd066:;
			{
				jule::Ptr<_1a3b50ea8_VarDecl> _17398_v = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1a3b50ea8_VarDecl>();;
				if ((_17398_v == nullptr)) {
					return;;
				};
				(*(_17398_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a9ebccd0:;
			{
				jule::Ptr<_1a3b4eced_FnDecl> _17468_f = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1a3b4eced_FnDecl>();;
				if ((_17468_f == nullptr)) {
					return;;
				};
				_1a56299a2_applyFnMeta(_self_, &(_17468_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a9ebd110:;
			{
				jule::Ptr<_1a3b58e06_StructDecl> _17528_sd = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1a3b58e06_StructDecl>();;
				if ((_17528_sd == nullptr)) {
					return;;
				};
				(*(_17528_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1a9ebcede:;
	};
}



inline void _1a562a013_pushUseDecl(jule::Ptr<_1a561b026_parser> _self_, jule::Ptr<_1a3b56244_UseDecl>* _176133_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,jule::Slice<jule::Ptr<_1a3b56244_UseDecl>>::make({(*(_176133_decl))}));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1a561b9c7_pushErr(_self_, (*((*(_176133_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1a561bd3a_pushSuggestion(_self_, jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a562a354_pushMetaNodes(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _176935_tokens) {
	{
		auto &_match_expr{ (*((*(_176935_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1a9ec4402:;
			{
				;
				jule::Ptr<_1a3b56244_UseDecl> _17738_decl = _1a5624590_buildUseDecl(_self_.ptr(), (*(_176935_tokens)), false);;
				_1a562a013_pushUseDecl(_self_, &(_17738_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1a9ec4479:;
			{
				if ((((*(_176935_tokens)).len() > 1LL) && ((*((*(_176935_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1a3b56244_UseDecl> _17789_decl = _1a5628572_buildBindUse(_self_, (*(_176935_tokens)));;
					_1a562a013_pushUseDecl(_self_, &(_17789_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1a9ec44e0:;
			{
				_1a561c775_pushDirective(_self_.ptr(), _1a561c4bc_buildDirective(_self_, (*(_176935_tokens))));
				return true;;
			}
		}
		_match_end_1a9ec4303:;
	};
	return false;;
}



inline _1a3b3c13c_Node _1a562a695_parseNode(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _178931_st) {
	_1a3b3c13c_Node _17907_node = _1a3b3c13c_Node{._field_Token=(*(_178931_st))[0LL], };;
	if (_1a562a354_pushMetaNodes(_self_, _178931_st)) {
		return _17907_node;;
	};
	jule::Any _17987_data = _1a56296e9_buildNodeData(_self_, _178931_st);;
	if ((_17987_data == nullptr)) {
		return _17907_node;;
	};
	_17907_node._field_Data=_17987_data;
	_1a5629c5a_applyMeta(_self_, &(_17907_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1a561b9c7_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _17907_node;;
}



inline void _1a562a94d_appendNode(jule::Ptr<_1a561b026_parser> _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _181332_st) {
	if (((*(_181332_st)).len() == 0LL)) {
		return;;
	};
	_1a3b3c13c_Node _18177_node = _1a562a695_parseNode(_self_, _181332_st);;
	if (((_18177_node._field_Data != nullptr) && (!(_1a561b5a9_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,jule::Slice<_1a3b3c13c_Node>::make({_18177_node}));
	};
}



inline void _1a562ae26_removeRange(_1a561b026_parser* _self_, jule::I64 _182327_i, jule::U64 _182335_id, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _182349_tokens, jule::Slice<jule::I64>* _182372_ranges) {
	jule::U64 _18243_close = _1a561a1ce_getCloseOfBrace(_182335_id);;
	for (; (_182327_i >= 0LL); (_182327_i)--) {
		{
			jule::Ptr<_1a3b27a62_Token> _18264_tok = (*(_182349_tokens))[(*(_182372_ranges))[_182327_i]];;
			if (((*(_18264_tok))._field_Id != _18243_close)) {
				goto _iter_next_1a6712715;
			};
			(*(_182372_ranges))=jule::append((*(_182372_ranges)).slice(0LL, _182327_i),(*(_182372_ranges)).slice((_182327_i + 1LL)));
			goto _iter_end_1a6712715;
		}
	_iter_next_1a6712715:;
	}
	_iter_end_1a6712715:;;
}



inline void _1a562b344_pushWrongOrderCloseErr(_1a561b026_parser* _self_, jule::Ptr<_1a3b27a62_Token>* _183539_t, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _183551_tokens, jule::Slice<jule::I64>* _183570_ranges) {
	{
		auto &_match_expr{ (*((*(_183551_tokens))[(*(_183570_ranges))[((*(_183570_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1a6714a25:;
			{
				_1a561b9c7_pushErr(_self_, (*(_183539_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1a6714a9c:;
			{
				_1a561b9c7_pushErr(_self_, (*(_183539_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1a6714b13:;
			{
				_1a561b9c7_pushErr(_self_, (*(_183539_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a6714926:;
	};
}



inline void _1a562b81c_pushRangeClose(_1a561b026_parser* _self_, jule::Ptr<_1a3b27a62_Token> _184630_t, jule::U64 _184641_left, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _184657_tokens, jule::Slice<jule::I64>* _184680_ranges) {
	jule::I64 _18473_n = (*(_184680_ranges)).len();;
	if ((_18473_n == 0LL)) {
		{
			auto &_match_expr{ (*(_184630_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1a67176e8:;
				{
					_1a561b9c7_pushErr(_self_, _184630_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1a6717770:;
				{
					_1a561b9c7_pushErr(_self_, _184630_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1a67177d6:;
				{
					_1a561b9c7_pushErr(_self_, _184630_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1a671763d:;
		};
		return;;
	} else if (((*((*(_184657_tokens))[(*(_184680_ranges))[(_18473_n - 1LL)]]))._field_Id != _184641_left)) {
		_1a562b344_pushWrongOrderCloseErr(_self_, &(_184630_t), _184657_tokens, _184680_ranges);
	};
	_1a562ae26_removeRange(_self_, (_18473_n - 1LL), (*(_184630_t))._field_Id, _184657_tokens, _184680_ranges);
}



inline void _1a562bac5_checkRanges(_1a561b026_parser* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _186428_tokens) {
	jule::Slice<jule::I64> _186511_ranges = nullptr;;
	{
		auto expr = _186428_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a671992b:;
		if (it != expr_end) {
			jule::I64 _18677_i = it - expr->begin();
			jule::Ptr<_1a3b27a62_Token> *_186710_token = it;
			{
				{
					auto &_match_expr{ (*((*(_186710_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1a671b664:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _186511_ranges; __jule_push_dest.push(_18677_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a671b6ec:;
						{
							_1a562b81c_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(74LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1a671b763:;
						{
							_1a562b81c_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(72LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1a671b7c9:;
						{
							_1a562b81c_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(76LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					_match_end_1a671b5a9:;
				};
			}
			_iter_next_1a671992b:;
			++it;
			_18677_i++;
			goto _iter_begin_1a671992b;
		}
		_iter_end_1a671992b:;
	};
	{
		auto expr = &(_186511_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a671a8a5:;
		if (it != expr_end) {
			jule::I64 _188210_i = *it;
			{
				jule::Ptr<_1a3b27a62_Token> _18834_token = (*(_186428_tokens))[_188210_i];;
				{
					auto &_match_expr{ (*(_18834_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a671e645:;
						{
							_1a561b9c7_pushErr(_self_, _18834_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1a671e6ab:;
						{
							_1a561b9c7_pushErr(_self_, _18834_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1a671e722:;
						{
							_1a561b9c7_pushErr(_self_, _18834_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1a671e5e0:;
				};
			}
			_iter_next_1a671a8a5:;
			++it;
			goto _iter_begin_1a671a8a5;
		}
		_iter_end_1a671a8a5:;
	};
}



inline void _1a562bd7d_parse(jule::Ptr<_1a561b026_parser> _self_, jule::Ptr<_1a3b2d2e8_File>* _189527_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1a3b3b180_Ast>(_1a3b3b180_Ast{._field_File=(*(_189527_f)), });
	(*_self_.alloc)._field_ep=jule::new_ptr<_1a560a3bc_exprBuilder>(_1a560a3bc_exprBuilder{._field_p=_self_});
	_1a562bac5_checkRanges(_self_, &((*((*(_189527_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a55ec106_stmt>> _19087_stmts = _1a55ec4ad_splitStmts(&((*((*(_189527_f))))._field_Tokens));;
	jule::I64 _19117_i = 0LL;;
	for (; (_19117_i < _19087_stmts.len()); (_19117_i)++) {
		{
			jule::Ptr<_1a55ec106_stmt> _19138_stmt = _19087_stmts[_19117_i];;
			if (((*(_19138_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_19138_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1a6722eb7;
			};
			if ((!(_1e7c96c36_IsTopDirective((*((*_19138_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1a6722eb7;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,jule::Slice<jule::Ptr<_1a3b3c55a_Directive>>::make({_1a561c4bc_buildDirective(_self_, (*_19138_stmt.alloc)._field_tokens)}));
		}
	_iter_next_1a6722eb7:;
	}
	_iter_end_1a6722eb7:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_19117_i < _19087_stmts.len()) && (!(_1a561b5a9_stopped(_self_)))); (_19117_i)++) {
		{
			_1a562a94d_appendNode(_self_, &((*(_19087_stmts[_19117_i]))._field_tokens));
		}
	_iter_next_1a672632d:;
	}
	_iter_end_1a672632d:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1a561b9c7_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a561b026_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1a562d6dc_pushErr(_1a562d148_typeBuilder* _self_, jule::Ptr<_1a3b27a62_Token> _4123_token, jule::Str _4138_fmt) {
	if ((*(_self_))._field_err) {
		_1a561b9c7_pushErr((*(_self_))._field_p.ptr(), _4123_token, _4138_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1a562da50_pushSuggestion(_1a562d148_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args) {
	if ((*(_self_))._field_err) {
		_1a561bd3a_pushSuggestion((*(_self_))._field_p.ptr(), _4830_fmt, _4843_args);
	};
}



inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a562dcd6_buildNamespace(_1a562d148_typeBuilder* _self_) {
	jule::Ptr<_1a3b3d13d_TypeDecl> _557_t = jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1a3b3dddb_NamespaceTypeDecl> _597_nst = jule::new_ptr<_1a3b3dddb_NamespaceTypeDecl>();;
	jule::I64 _607_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1a3b27a62_Token> _628_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_607_n & 1LL) == 0LL)) {
				if (((*(_628_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1a562d6dc_pushErr(_self_, _628_token, jule::Str::lit("invalid syntax", 14));
					_1a562da50_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				(*_597_nst.alloc)._field_Idents=jule::append((*_597_nst.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a3b27a62_Token>>::make({_628_token}));
			} else if (((*(_628_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1a672bad6;
			};
			(_607_n)++;
		}
	_iter_next_1a672bad6:;
	}
	_iter_end_1a672bad6:;;
	((*(_597_nst))._field_Idents).mut_slice(0LL, ((*(_597_nst))._field_Idents.len() - 1LL));;
	((*((*(_self_))._field_i)))--;
	(*_597_nst.alloc)._field_Kind=_1a562e589_buildIdent(_self_);
	(*(_557_t))._field_Kind=jule::Any(_597_nst, &__jule_any_type91);
	return _557_t;;
}



inline jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> _1a562e06c_buildGenerics(_1a562d148_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a3b27a62_Token> _883_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_883_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _937_parts = _1a562e303_identGenerics(_self_);;
	if ((_937_parts.len() == 0LL)) {
		_1a562d6dc_pushErr(_self_, _883_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> _997_types = jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>>::alloc(0LL, _937_parts.len());;
	{
		auto expr = &(_937_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1158b7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3b27a62_Token>> _10015_part = *it;
			{
				jule::I64 _1018_j = 0LL;;
				jule::Ptr<_1a3b3d13d_TypeDecl> _1028_t;
				({
					__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType((*(_self_))._field_p, &(_10015_part), (&(_1018_j)), true);
					_1028_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_1018_j < _10015_part.len())) {
					_1a562d6dc_pushErr(_self_, _10015_part[_1018_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>> &__jule_push_dest = _997_types; __jule_push_dest.push(_1028_t); };
			}
			_iter_next_1aa1158b7:;
			++it;
			goto _iter_begin_1aa1158b7;
		}
		_iter_end_1aa1158b7:;
	};
	return _997_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _1a562e303_identGenerics(_1a562d148_typeBuilder* _self_) {
	jule::I64 _1123_first = (*((*(_self_))._field_i));;
	jule::I64 _1137_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1a3b27a62_Token> _1154_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1154_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1aa119712:;
					{
						(_1137_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1aa119a20:;
					{
						(_1137_rangeN)--;
					}
				}
				_match_end_1aa1199ba:;
			};
			if ((_1137_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1aa1188a9;
			};
		}
	_iter_next_1aa1188a9:;
	}
	_iter_end_1aa1188a9:;;
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _1277_tokens = (*(_self_))._field_tokens.slice((_1123_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _1287_parts;
	jule::Slice<_1e7c94ecb_Log> _12814_errors;
	({
		__jule_tuple_ssx_1a3b27a62_Token__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a5619e48_parts(&(_1277_tokens), static_cast<jule::U64>(5LLU), true);
		_1287_parts = __jule_assign_result.__jule_result_arg0;
		_12814_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12814_errors);
	};
	return _1287_parts;;
}



inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a562e589_buildIdent(_1a562d148_typeBuilder* _self_) {
	jule::Bool _1367_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1367_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1a562dcd6_buildNamespace(_self_);;
	};
	jule::Ptr<_1a3b27a62_Token> _1407_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a3b3d748_IdentTypeDecl> _1417_it = jule::new_ptr<_1a3b3d748_IdentTypeDecl>(_1a3b3d748_IdentTypeDecl{._field_Token=_1407_token, ._field_Ident=(*(_1407_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a3b3d13d_TypeDecl> _1477_itd = jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1417_it, &__jule_any_type75)});;
	if (((!(_1367_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_1417_it))._field_Generics=_1a562e06c_buildGenerics(_self_);
		return _1477_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1a562d6dc_pushErr(_self_, _1407_token, jule::Str::lit("invalid syntax", 14));
		return _1477_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a562d6dc_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _1477_itd;;
	};
	jule::Ptr<_1a3b3da12_SubIdentTypeDecl> _1647_sit = jule::new_ptr<_1a3b3da12_SubIdentTypeDecl>();;
	(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a3b3d748_IdentTypeDecl>>::make({_1417_it}));
	jule::Ptr<_1a3b3d13d_TypeDecl> _1667_ident = _1a562e589_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1667_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1aa1255ca:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a3b3d748_IdentTypeDecl>>::make({(*(_1667_ident))._field_Kind.cast_ptr<_1a3b3d748_IdentTypeDecl>(&__jule_any_type75)}));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1aa11ebe0:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,(*((*(_1667_ident))._field_Kind.unsafe_cast_ptr<_1a3b3da12_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1aa1232ed:;
	};
	return jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1647_sit, &__jule_any_type87)});;
}



inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a562e820_buildCppLink(_1a562d148_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1a562d6dc_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1a3b3d13d_TypeDecl> _1857_t = _1a562e589_buildIdent(_self_);;
	(*((*(_1857_t))._field_Kind.cast_ptr<_1a3b3d748_IdentTypeDecl>(&__jule_any_type75)))._field_Binded=true;
	return _1857_t;;
}



inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a562eaa6_buildFn(_1a562d148_typeBuilder* _self_) {
	jule::Ptr<_1a3b27a62_Token> _1917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a3b4eced_FnDecl> _1927_f = _1a56226ae_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1927_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a3b50161_IsAnon(_1927_f.ptr())))) {
		_1a562d6dc_pushErr(_self_, (*(_1927_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Token=_1917_token, ._field_Kind=jule::Any(_1927_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a562ed3c_buildPtr(_1a562d148_typeBuilder* _self_) {
	jule::Ptr<_1a3b27a62_Token> _2067_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a562d6dc_pushErr(_self_, _2067_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1a3b3eb67_PtrTypeDecl>(_1a3b3eb67_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type71)});;
	};
	jule::Ptr<_1a3b3d13d_TypeDecl> _2237_elem = _1a5630d93_step(_self_);;
	if ((_2237_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1a3b3eb67_PtrTypeDecl>(_1a3b3eb67_PtrTypeDecl{._field_Elem=_2237_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a56300c3_buildSptr(_1a562d148_typeBuilder* _self_) {
	jule::Ptr<_1a3b27a62_Token> _2377_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a562d6dc_pushErr(_self_, _2377_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a3b3d13d_TypeDecl> _2447_elem = _1a5630d93_step(_self_);;
	if ((_2447_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Token=_2377_token, ._field_Kind=jule::Any(jule::new_ptr<_1a3b3e1d8_SptrTypeDecl>(_1a3b3e1d8_SptrTypeDecl{._field_Elem=_2447_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a5630359_buildSlc(_1a562d148_typeBuilder* _self_) {
	jule::Ptr<_1a3b27a62_Token> _2587_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a3b3d13d_TypeDecl> _2607_elem = _1a5630d93_step(_self_);;
	if ((_2607_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Token=_2587_token, ._field_Kind=jule::Any(jule::new_ptr<_1a3b3e56d_SlcTypeDecl>(_1a3b3e56d_SlcTypeDecl{._field_Elem=_2607_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a56305e0_buildArr(_1a562d148_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _2737_exprTokens = _1a56196c8_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a562d6dc_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1a3b3d13d_TypeDecl> _2797_elem = _1a5630d93_step(_self_);;
	if ((_2797_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a3b40409_ArrTypeDecl> _2847_arrt = jule::new_ptr<_1a3b40409_ArrTypeDecl>(_1a3b40409_ArrTypeDecl{._field_Elem=_2797_elem, });;
	jule::Ptr<_1a3b27a62_Token> _2887_token = _2737_exprTokens[0LL];;
	if (((_2737_exprTokens.len() == 1LL) && ((*(_2887_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_2847_arrt))._field_Size=_1a561c17b_buildExpr((*(_self_))._field_p, &(_2737_exprTokens));
	};
	return jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Token=_2887_token, ._field_Kind=jule::Any(_2847_arrt, &__jule_any_type69)});;
}



inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a5630876_buildMap(_1a562d148_typeBuilder* _self_) {
	jule::Ptr<_1a3b27a62_Token> _3027_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a562d6dc_pushErr(_self_, _3027_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _3107_keyTokens = _1a56196c8_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a562d6dc_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_3107_keyTokens.len() == 0LL)) {
		_1a562d6dc_pushErr(_self_, _3027_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1a3b40b57_MapTypeDecl> _3197_mapt = jule::new_ptr<_1a3b40b57_MapTypeDecl>();;
	jule::I64 _3207_j = 0LL;;
	jule::Ptr<_1a3b3d13d_TypeDecl> _3217_keyt;
	jule::Bool _32117_ok;
	({
		__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType((*(_self_))._field_p, &(_3107_keyTokens), (&(_3207_j)), (*(_self_))._field_err);
		_3217_keyt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	} else if ((_3207_j < _3107_keyTokens.len())) {
		_1a562d6dc_pushErr(_self_, _3107_keyTokens[_3207_j], jule::Str::lit("invalid syntax", 14));
	};
	(*_3197_mapt.alloc)._field_Key=_3217_keyt;
	jule::Ptr<_1a3b3d13d_TypeDecl> _3297_valt;
	({
		__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_assign_result = _1a561d5cd_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3297_valt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	};
	(*_3197_mapt.alloc)._field_Val=_3297_valt;
	return jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Token=_3027_mapToken, ._field_Kind=jule::Any(_3197_mapt, &__jule_any_type73)});;
}



inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a5630b0c_buildEnumerable(_1a562d148_typeBuilder* _self_) {
	jule::Ptr<_1a3b27a62_Token> _3417_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1a562d6dc_pushErr(_self_, _3417_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3417_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3417_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1a5630359_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1a56305e0_buildArr(_self_);;
}



inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a5630d93_step(_1a562d148_typeBuilder* _self_) {
	jule::Ptr<_1a3b27a62_Token> _3563_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3563_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1aa145595:;
			{
				return _1a562e589_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1aa1459e6:;
			{
				return _1a562e820_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1aa145b17:;
			{
				return _1a562eaa6_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa145287:;
			{
				return _1a562ed3c_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aa1452ed:;
			{
				return _1a56300c3_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1aa145364:;
			{
				return jule::new_ptr<_1a3b3d13d_TypeDecl>(_1a3b3d13d_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1a3b3e1d8_SptrTypeDecl>(_1a3b3e1d8_SptrTypeDecl{._field_Elem=_1a56300c3_buildSptr(_self_)}), &__jule_any_type72)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1aa1453ca:;
			{
				return _1a5630b0c_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1aa145452:;
			{
				return _1a5630876_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1aa144e68:;
			{
				((*((*(_self_))._field_i)))++;
				_1a562d6dc_pushErr(_self_, _3563_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1aa145232:;
	};
}



inline __jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool _1a5631129_build(_1a562d148_typeBuilder* _self_) {
	__jule_tuple_x_1a3b3d13d_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a3b3d13d_TypeDecl> _3887_root = _1a5630d93_step(_self_);;
	if ((_3887_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1a562c884_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3887_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a562d148_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a414da49_CompileInfo_eq(_1a414da49_CompileInfo *_self_, _1a414da49_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}



std::ostream &operator<<(std::ostream &_Stream, _1a414da49_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1a4150573_pushErr(_1a4150023_directiveEval* _self_, jule::Ptr<_1a3b27a62_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args) {
	{ jule::Slice<_1e7c94ecb_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1e7c94ecb_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_1e7c9543d_Logf(_2134_fmt, _2147_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _1a415096e_splitOperans(_1a4150023_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _3346_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _347_parts = jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _357_i = 0LL;;
	jule::I64 _367_rangeN = 0LL;;
	jule::I64 _377_last = 0LL;;
	for (; (_357_i < ((*(_3346_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1a3b27a62_Token> _394_b = (*(_3346_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aa16a5ba:;
					{
						(_367_rangeN)++;
						goto _iter_next_1aa169b3b;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aa16a8c8:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1aa16a873:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1aa169b3b;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1aa169b3b:;
	}
	_iter_end_1aa169b3b:;;
	if ((_377_last < (*(_3346_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last)); };
	} else {
		_1a4150573_pushErr(_self_, (*(_3346_tokens))[(_377_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1a4150cb0_evalDirectiveIdent(_1a4150023_directiveEval* _self_, jule::Str _6430_ident) {
	if ((_6430_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa16d777:;
		if (it != expr_end) {
			jule::Str *_6810_var = it;
			{
				if (((*(_6810_var)) == _6430_ident)) {
					return true;;
				};
			}
			_iter_next_1aa16d777:;
			++it;
			goto _iter_begin_1aa16d777;
		}
		_iter_end_1aa16d777:;
	};
	return false;;
}



inline jule::Bool _1a4151101_evalDirectivePart(_1a4150023_directiveEval* _self_, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _7837_part) {
	jule::Bool _793_logicalNot = ((*(_7837_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_793_logicalNot) {
		(_7837_part).mut_slice(1LL);;
	};
	if ((_7837_part.len() > 1LL)) {
		_1a4150573_pushErr(_self_, _7837_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _897_result = _1a4150cb0_evalDirectiveIdent(_self_, (*(_7837_part[0LL]))._field_Kind);;
	if (_793_logicalNot) {
		_897_result=(!(_897_result));
	};
	return _897_result;;
}



inline jule::Bool _1a4151387_eval(_1a4150023_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1a4150573_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _1027_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _1047_logicalOrParts = _1a415096e_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_1047_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_1047_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa173bab:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a3b27a62_Token>> _10915_part = *it;
			{
				jule::Bool _1108_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> _1118_logicalAndParts = _1a415096e_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10915_part));;
				if ((_1118_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1118_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa175383:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1a3b27a62_Token>> _11616_andPart = *it;
						{
							jule::Ptr<_1a3b27a62_Token> _1175_first = _11616_andPart[0LL];;
							if (((*(_1175_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1a3b27a62_Token> _1196_end = _11616_andPart[(_11616_andPart.len() - 1LL)];;
								if (((*(_1196_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1a4150573_pushErr(_self_, _1175_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11616_andPart).mut_slice(1LL, (_11616_andPart.len() - 1LL));;
							};
							_1108_and=(_1108_and && _1a4151101_evalDirectivePart(_self_, _11616_andPart));
						}
						_iter_next_1aa175383:;
						++it;
						goto _iter_begin_1aa175383;
					}
					_iter_end_1aa175383:;
				};
				_1027_result=(_1027_result || _1108_and);
			}
			_iter_next_1aa173bab:;
			++it;
			goto _iter_begin_1aa173bab;
		}
		_iter_end_1aa173bab:;
	};
	return _1027_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a4150023_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a563227e_JuleImporter> static__1a563267a_New(_1a414da49_CompileInfo _5816_info) {
	jule::Ptr<_1a563227e_JuleImporter> _597_imp = jule::new_ptr<_1a563227e_JuleImporter>(_1a563227e_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_2121271ce_PathStdlib}), });;
	_1a414e3c9_initVars(&((*(_597_imp))._field_vars), &(_5816_info));
	return _597_imp;;
}



inline jule::Slice<jule::Ptr<_1a3bd86d3_ImportInfo>> _1a5632911_AllPackages(_1a563227e_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1a5632d51_SetModPath(_1a563227e_JuleImporter* _self_, jule::Str _7526_path) {
	(*(_self_))._field_mod=_7526_path;
}



inline jule::Str _1a56330d7_GetModPath(_1a563227e_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1a5633428_ModById(_1a563227e_JuleImporter* _self_, jule::I64 _8319_id) {
	return (*(_self_))._field_mods[_8319_id];;
}



inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a5633769_GetImport(_1a563227e_JuleImporter* _self_, jule::Str _8725_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa17b9d8:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _8815_p = *it;
			{
				if (((*(_8815_p))._field_Path == _8725_path)) {
					return _8815_p;;
				};
			}
			_iter_next_1aa17b9d8:;
			++it;
			goto _iter_begin_1aa17b9d8;
		}
		_iter_end_1aa17b9d8:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a3b3b180_Ast__jule_tuple_s_1e7c94ecb_Log _1a5633b65_ImportPackage(_1a563227e_JuleImporter* _self_, jule::Str _9629_path, jule::Bool _9640_updateMod) {
	__jule_tuple_sx_1a3b3b180_Ast__jule_tuple_s_1e7c94ecb_Log __jule_func_result;
	jule::Slice<jule::Ptr<_212303e27_DirEntry>> _977_dirents = ({
		auto except = static__1e7c03038_Read(_9629_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1e7c94ecb_Log>::make({_1a5631c95_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9629_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_212303e27_DirEntry>>(nullptr);});
	});;
	if (_9640_updateMod) {
		jule::Str _1024_newMod = _1a3c05029_FindModuleFileDeep(_9629_path);;
		if ((_1024_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_1024_newMod;
			jule::Slice<_1e7c94ecb_Log> _1059_errs = _1a3c052e3_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_1059_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _1059_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1a3b3b180_Ast>> _1127_asts = jule::Slice<jule::Ptr<_1a3b3b180_Ast>>::alloc(0LL, _977_dirents.len());;
	{
		auto expr = &(_977_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa17d138:;
		if (it != expr_end) {
			jule::Ptr<_212303e27_DirEntry> _11310_dirent = *it;
			{
				if ((_2123082b1_IsDir((*(_11310_dirent))._field_Stat.ptr()) || (!(_1e7bc8ea9_HasSuffix((*_11310_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1aa17d138;
				};
				jule::Str _1194__path = _1e7beee03_Join(jule::Slice<jule::Str>::make({_9629_path,(*_11310_dirent.alloc)._field_Name}));;
				jule::Ptr<_1a3b2d2e8_File> _1208_file = _1a3b2e6c3_NewFileSet(_1194__path);;
				_1a3b2d716_Fill(_1208_file.ptr(), _1a5631987_readBuff((*_1208_file.alloc)._field_Path));
				jule::Slice<_1e7c94ecb_Log> _1228_errors = _1a3b3aba7_Lex(_1208_file, static_cast<jule::I64>(0LL));;
				if ((_1228_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1228_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1a55a639b_FileInfo> _1278_finfo = _1a55e9d4b_ParseFile(_1208_file);;
				if (((*(_1278_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1278_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1b71e2da5_isPassFileAnnotation((*_11310_dirent.alloc)._field_Name)))) {
					goto _iter_next_1aa17d138;
				};
				jule::Bool _1374_r;
				jule::Slice<_1e7c94ecb_Log> _13711_logs;
				({
					__jule_tuple_bool__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a563434c_isPassBuildDirectives(_self_, &((*_1278_finfo.alloc)._field_Ast));
					_1374_r = __jule_assign_result.__jule_result_arg0;
					_13711_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13711_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13711_logs;
					return __jule_func_result;;
				};
				if ((!(_1374_r))) {
					goto _iter_next_1aa17d138;
				};
				{ jule::Slice<jule::Ptr<_1a3b3b180_Ast>> &__jule_push_dest = _1127_asts; __jule_push_dest.push((*_1278_finfo.alloc)._field_Ast); };
			}
			_iter_next_1aa17d138:;
			++it;
			goto _iter_begin_1aa17d138;
		}
		_iter_end_1aa17d138:;
	};
	__jule_func_result.__jule_result_arg0 = _1127_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a5633e1d_Imported(_1a563227e_JuleImporter* _self_, jule::Ptr<_1a3bd86d3_ImportInfo> _15328_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa180cb7:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _15510_p = *it;
			{
				if ((((*(_15510_p))._field_Binded == (*(_15328_imp))._field_Binded) && ((*_15510_p.alloc)._field_LinkPath == (*_15328_imp.alloc)._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1aa180cb7:;
			++it;
			goto _iter_begin_1aa180cb7;
		}
		_iter_end_1aa180cb7:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa18831e:;
			if (it != expr_end) {
				jule::I64 _1628_i = it - expr->begin();
				jule::Str _16211_mod = *it;
				{
					if (((*(_self_))._field_mod == _16211_mod)) {
						(*_15328_imp.alloc)._field_ModId=_1628_i;
						goto _julec_label_1aa188990;
					};
				}
				_iter_next_1aa18831e:;
				++it;
				_1628_i++;
				goto _iter_begin_1aa18831e;
			}
			_iter_end_1aa18831e:;
		};
		(*_15328_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1aa188990:;
	};
	{ jule::Slice<jule::Ptr<_1a3bd86d3_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15328_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1e7c94ecb_Log _1a563434c_isPassBuildDirectives(_1a563227e_JuleImporter* _self_, jule::Ptr<_1a3b3b180_Ast>* _17942_file) {
	__jule_tuple_bool__jule_tuple_s_1e7c94ecb_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17942_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa18b3cc:;
		if (it != expr_end) {
			jule::Ptr<_1a3b3c55a_Directive> _18015_td = *it;
			{
				if ((!(*((*(_18015_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1aa18b3cc;
				};
				_1a4150023_directiveEval _1848_de = _1a4150023_directiveEval{._field_d=_18015_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1884_result = _1a4151387_eval(&_1848_de);;
				if ((_1848_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1848_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1884_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1aa18b3cc:;
			++it;
			goto _iter_begin_1aa18b3cc;
		}
		_iter_end_1aa18b3cc:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a563227e_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5638c8b_ExprInspector> static__1a56390ee_New(void) {
	return jule::new_ptr<_1a5638c8b_ExprInspector>();;
}



inline void _1a56393a7_args(_1a5638c8b_ExprInspector* _self_, jule::Slice<jule::Any> _5724_args) {
	{
		auto expr = &(_5724_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1d2d3b:;
		if (it != expr_end) {
			jule::Any _5815_arg = *it;
			{
				_1a5639660_inspect(_self_, &(_5815_arg));
			}
			_iter_next_1aa1d2d3b:;
			++it;
			goto _iter_begin_1aa1d2d3b;
		}
		_iter_end_1aa1d2d3b:;
	};
}



inline void _1a5639660_inspect(_1a5638c8b_ExprInspector* _self_, jule::Any* _6328_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_6328_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_6328_m)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1aa1d4227:;
			{
				jule::Ptr<_1a3b66221_BinaryExprModel> _718_b = (*(_6328_m)).cast_ptr<_1a3b66221_BinaryExprModel>(&__jule_any_type111);;
				_1a5639660_inspect(_self_, &((*((*(_718_b))._field_Left))._field_Model));
				_1a5639660_inspect(_self_, &((*((*_718_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aa1d437b:;
			{
				jule::Ptr<_1a3b665ea_UnaryExprModel> _758_u = (*(_6328_m)).cast_ptr<_1a3b665ea_UnaryExprModel>(&__jule_any_type110);;
				_1a5639660_inspect(_self_, &((*((*(_758_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1aa1d428d:;
			{
				jule::Ptr<_1a3b66ebe_StructLitExprModel> _788_lit = (*(_6328_m)).cast_ptr<_1a3b66ebe_StructLitExprModel>(&__jule_any_type95);;
				{
					auto expr = &((*(_788_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa1d8803:;
					if (it != expr_end) {
						jule::I64 _798_i = it - expr->begin();
						{
							_1a5639660_inspect(_self_, &((*((*((*(_788_lit))._field_Args[_798_i]))._field_Expr))._field_Model));
						}
						_iter_next_1aa1d8803:;
						++it;
						_798_i++;
						goto _iter_begin_1aa1d8803;
					}
					_iter_end_1aa1d8803:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1aa1d4667:;
			{
				jule::Ptr<_1a3b66ebe_StructLitExprModel> _838_lit = (*((*(_6328_m)).cast_ptr<_1a3b672bb_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
				{
					auto expr = &((*(_838_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa1da294:;
					if (it != expr_end) {
						jule::I64 _848_i = it - expr->begin();
						{
							_1a5639660_inspect(_self_, &((*((*((*(_838_lit))._field_Args[_848_i]))._field_Expr))._field_Model));
						}
						_iter_next_1aa1da294:;
						++it;
						_848_i++;
						goto _iter_begin_1aa1da294;
					}
					_iter_end_1aa1da294:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1aa1d46cd:;
			{
				jule::Ptr<_1a3b6784e_CastingExprModel> _888_c = (*(_6328_m)).cast_ptr<_1a3b6784e_CastingExprModel>(&__jule_any_type93);;
				_1a5639660_inspect(_self_, &((*((*(_888_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aa1d4744:;
			{
				jule::Ptr<_1a3b68201_FnCallExprModel> _918_fc = (*(_6328_m)).cast_ptr<_1a3b68201_FnCallExprModel>(&__jule_any_type33);;
				_1a5639660_inspect(_self_, &((*(_918_fc))._field_Expr));
				_1a56393a7_args(_self_, (*_918_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1aa1d47bb:;
			{
				jule::Ptr<_1a3b685ca_SliceExprModel> _958_s = (*(_6328_m)).cast_ptr<_1a3b685ca_SliceExprModel>(&__jule_any_type77);;
				_1a56393a7_args(_self_, (*(_958_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1aa1d4843:;
			{
				jule::Ptr<_1a3b6b5de_ArrayExprModel> _988_a = (*(_6328_m)).cast_ptr<_1a3b6b5de_ArrayExprModel>(&__jule_any_type85);;
				_1a56393a7_args(_self_, (*(_988_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1aa1d48ba:;
			{
				jule::Ptr<_1a3b68a81_IndexingExprModel> _1018_i = (*(_6328_m)).cast_ptr<_1a3b68a81_IndexingExprModel>(&__jule_any_type45);;
				_1a5639660_inspect(_self_, &((*((*(_1018_i))._field_Expr))._field_Model));
				_1a5639660_inspect(_self_, &((*((*_1018_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1aa1d4942:;
			{
				jule::Ptr<_1a3b698b7_MapExprModel> _1058_mp = (*(_6328_m)).cast_ptr<_1a3b698b7_MapExprModel>(&__jule_any_type99);;
				{
					auto expr = &((*(_1058_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9e9865c:;
					if (it != expr_end) {
						jule::I64 _1068_i = it - expr->begin();
						{
							_1a5639660_inspect(_self_, &((*((*(_1058_mp))._field_Entries[_1068_i]))._field_Key));
							_1a5639660_inspect(_self_, &((*((*(_1058_mp))._field_Entries[_1068_i]))._field_Val));
						}
						_iter_next_1a9e9865c:;
						++it;
						_1068_i++;
						goto _iter_begin_1a9e9865c;
					}
					_iter_end_1a9e9865c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1aa1d49b9:;
			{
				jule::Ptr<_1a3b69e4a_SlicingExprModel> _1118_s = (*(_6328_m)).cast_ptr<_1a3b69e4a_SlicingExprModel>(&__jule_any_type92);;
				_1a5639660_inspect(_self_, &((*(_1118_s))._field_Expr));
				_1a5639660_inspect(_self_, &((*_1118_s.alloc)._field_Left));
				if (((*_1118_s.alloc)._field_Right != nullptr)) {
					_1a5639660_inspect(_self_, &((*_1118_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1aa1d4a41:;
			{
				jule::Ptr<_1a3b6a4cd_TraitSubIdentExprModel> _1188_t = (*(_6328_m)).cast_ptr<_1a3b6a4cd_TraitSubIdentExprModel>(&__jule_any_type97);;
				_1a5639660_inspect(_self_, &((*(_1188_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa1d4ab8:;
			{
				jule::Ptr<_1a3b6ad6e_StructSubIdentExprModel> _1218_s = (*(_6328_m)).cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>(&__jule_any_type98);;
				_1a5639660_inspect(_self_, &((*((*(_1218_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1aa1d4b40:;
			{
				jule::Ptr<_1a3b6b8db_TupleExprModel> _1248_t = (*(_6328_m)).cast_ptr<_1a3b6b8db_TupleExprModel>(&__jule_any_type81);;
				{
					auto expr = &((*(_1248_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9e9b484:;
					if (it != expr_end) {
						jule::I64 _1258_i = it - expr->begin();
						{
							_1a5639660_inspect(_self_, &((*((*(_1248_t))._field_Datas[_1258_i]))._field_Model));
						}
						_iter_next_1a9e9b484:;
						++it;
						_1258_i++;
						goto _iter_begin_1a9e9b484;
					}
					_iter_end_1a9e9b484:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1aa1d4bb7:;
			{
				jule::Ptr<_1a3b6c568_BuiltinNewCallExprModel> _1298_b = (*(_6328_m)).cast_ptr<_1a3b6c568_BuiltinNewCallExprModel>(&__jule_any_type113);;
				if (((*(_1298_b))._field_Init != nullptr)) {
					_1a5639660_inspect(_self_, &((*_1298_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1aa1d4c3e:;
			{
				jule::Ptr<_1a3b6bcb5_BuiltinOutCallExprModel> _1348_c = (*(_6328_m)).cast_ptr<_1a3b6bcb5_BuiltinOutCallExprModel>(&__jule_any_type26);;
				_1a5639660_inspect(_self_, &((*(_1348_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1aa1d4cb6:;
			{
				jule::Ptr<_1a3b6c18e_BuiltinOutlnCallExprModel> _1378_c = (*(_6328_m)).cast_ptr<_1a3b6c18e_BuiltinOutlnCallExprModel>(&__jule_any_type27);;
				_1a5639660_inspect(_self_, &((*(_1378_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1aa1d4d3d:;
			{
				jule::Ptr<_1a3b6c942_BuiltinPanicCallExprModel> _1408_c = (*(_6328_m)).cast_ptr<_1a3b6c942_BuiltinPanicCallExprModel>(&__jule_any_type28);;
				_1a5639660_inspect(_self_, &((*(_1408_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1aa1d4db5:;
			{
				jule::Ptr<_1a3b6cde8_BuiltinAssertCallExprModel> _1438_c = (*(_6328_m)).cast_ptr<_1a3b6cde8_BuiltinAssertCallExprModel>(&__jule_any_type29);;
				_1a5639660_inspect(_self_, &((*(_1438_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1aa1d4e3c:;
			{
				jule::Ptr<_1a3b6e9ee_BuiltinErrorCallExprModel> _1468_c = (*(_6328_m)).cast_ptr<_1a3b6e9ee_BuiltinErrorCallExprModel>(&__jule_any_type22);;
				_1a5639660_inspect(_self_, &((*((*(_1468_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1aa1d4eb4:;
			{
				jule::Ptr<_1a3b6d39e_BuiltinMakeCallExprModel> _1498_b = (*(_6328_m)).cast_ptr<_1a3b6d39e_BuiltinMakeCallExprModel>(&__jule_any_type114);;
				if (((*(_1498_b))._field_Len != nullptr)) {
					_1a5639660_inspect(_self_, &((*_1498_b.alloc)._field_Len));
				};
				if (((*_1498_b.alloc)._field_Cap != nullptr)) {
					_1a5639660_inspect(_self_, &((*_1498_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1aa1d503b:;
			{
				jule::Ptr<_1a3b6d778_BuiltinAppendCallExprModel> _1578_b = (*(_6328_m)).cast_ptr<_1a3b6d778_BuiltinAppendCallExprModel>(&__jule_any_type25);;
				_1a5639660_inspect(_self_, &((*(_1578_b))._field_Dest));
				_1a5639660_inspect(_self_, &((*_1578_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1aa1d50b3:;
			{
				jule::Ptr<_1a3b6da75_BuiltinLenCallExprModel> _1618_l = (*(_6328_m)).cast_ptr<_1a3b6da75_BuiltinLenCallExprModel>(&__jule_any_type115);;
				_1a5639660_inspect(_self_, &((*((*(_1618_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1aa1d513a:;
			{
				jule::Ptr<_1a3b6dd72_BuiltinCapCallExprModel> _1648_c = (*(_6328_m)).cast_ptr<_1a3b6dd72_BuiltinCapCallExprModel>(&__jule_any_type116);;
				_1a5639660_inspect(_self_, &((*((*(_1648_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1aa1d51b2:;
			{
				jule::Ptr<_1a3b6e24b_BuiltinDeleteCallExprModel> _1678_b = (*(_6328_m)).cast_ptr<_1a3b6e24b_BuiltinDeleteCallExprModel>(&__jule_any_type31);;
				_1a5639660_inspect(_self_, &((*((*(_1678_b))._field_Dest))._field_Model));
				if (((*_1678_b.alloc)._field_Key != nullptr)) {
					_1a5639660_inspect(_self_, &((*(*(_1678_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1aa1d5239:;
			{
				jule::Ptr<_1a3b701a3_SizeofExprModel> _1738_s = (*(_6328_m)).cast_ptr<_1a3b701a3_SizeofExprModel>(&__jule_any_type117);;
				_1a5639660_inspect(_self_, &((*(_1738_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1aa1d52b1:;
			{
				jule::Ptr<_1a3b70390_AlignofExprModel> _1768_a = (*(_6328_m)).cast_ptr<_1a3b70390_AlignofExprModel>(&__jule_any_type118);;
				_1a5639660_inspect(_self_, &((*(_1768_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1aa1d5338:;
			{
				jule::Ptr<_1a3b70934_IntegratedToStrExprModel> _1798_i = (*(_6328_m)).cast_ptr<_1a3b70934_IntegratedToStrExprModel>(&__jule_any_type119);;
				_1a5639660_inspect(_self_, &((*(_1798_i))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1aa1d53b0:;
			{
				jule::Ptr<_1a3b7110a_FreeExprModel> _1828_f = (*(_6328_m)).cast_ptr<_1a3b7110a_FreeExprModel>(&__jule_any_type32);;
				_1a5639660_inspect(_self_, &((*(_1828_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1aa1d5437:;
			{
				jule::Ptr<_1a3b70d0d_BackendEmitExprModel> _1858_e = (*(_6328_m)).cast_ptr<_1a3b70d0d_BackendEmitExprModel>(&__jule_any_type24);;
				_1a56393a7_args(_self_, (*(_1858_e))._field_Exprs);
			}
		}
		_match_end_1aa1d41c2:;
	};
}



inline void _1a56399c3_Inspect(_1a5638c8b_ExprInspector* _self_, jule::Any* _19328_m, jule::Fn<void,jule::Any*> _19342_f) {
	(*(_self_))._field_handler=_19342_f;
	_1a5639660_inspect(_self_, _19328_m);
}





std::ostream &operator<<(std::ostream &_Stream, _1a5638c8b_ExprInspector _Src) {
	_Stream << "ExprInspector{";
	_Stream << "SkipChild:" << _Src._field_SkipChild << ", ";
	_Stream << "handler:" << _Src._field_handler;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5644eea_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a512ebe4_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5130112_ObjectDeadCode> static__1a51305a7_new(jule::Ptr<_1a5634c54_IR>* _3521_ir) {
	return jule::new_ptr<_1a5130112_ObjectDeadCode>(_1a5130112_ObjectDeadCode{._field_ir=(*(_3521_ir))});;
}



inline jule::Bool _1aa2bb30e_isLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3b87a7d_Trait>* _4127_t) {
	jule::Slice<jule::Ptr<_1a3b87a7d_Trait>> _4211_live = nullptr;;
	{
		
{
			_case_begin_1aa2bd025:;
			{
				_4211_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1aa2bcd8d:;
	};
	{
		auto expr = &(_4211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2be0c0:;
		if (it != expr_end) {
			jule::I64 _537_i = it - expr->begin();
			{
				if ((_4211_live[_537_i] == (*(_4127_t)))) {
					return true;;
				};
			}
			_iter_next_1aa2be0c0:;
			++it;
			_537_i++;
			goto _iter_begin_1aa2be0c0;
		}
		_iter_end_1aa2be0c0:;
	};
	return false;;
}

inline jule::Bool _1aa2c1c60_isLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3b770cd_FnIns>* _4127_t) {
	jule::Slice<jule::Ptr<_1a3b770cd_FnIns>> _4211_live = nullptr;;
	{
		
{
			_case_begin_1aa2c3855:;
			{
				_4211_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1aa2c379a:;
	};
	{
		auto expr = &(_4211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2c3800:;
		if (it != expr_end) {
			jule::I64 _537_i = it - expr->begin();
			{
				if ((_4211_live[_537_i] == (*(_4127_t)))) {
					return true;;
				};
			}
			_iter_next_1aa2c3800:;
			++it;
			_537_i++;
			goto _iter_begin_1aa2c3800;
		}
		_iter_end_1aa2c3800:;
	};
	return false;;
}

inline jule::Bool _1aa2c7aac_isLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _4127_t) {
	jule::Slice<jule::Ptr<_1a3b61cbb_StructIns>> _4211_live = nullptr;;
	{
		
{
			_case_begin_1aa2cc474:;
			{
				_4211_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1aa2cc353:;
	};
	{
		auto expr = &(_4211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2cd3dc:;
		if (it != expr_end) {
			jule::I64 _537_i = it - expr->begin();
			{
				if ((_4211_live[_537_i] == (*(_4127_t)))) {
					return true;;
				};
			}
			_iter_next_1aa2cd3dc:;
			++it;
			_537_i++;
			goto _iter_begin_1aa2cd3dc;
		}
		_iter_end_1aa2cd3dc:;
	};
	return false;;
}

inline jule::Bool _1aa2ced06_isLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3c31c26_Var>* _4127_t) {
	jule::Slice<jule::Ptr<_1a3c31c26_Var>> _4211_live = nullptr;;
	{
		
{
			_case_begin_1aa2d16ba:;
			{
				_4211_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1aa2d1841:;
	};
	{
		auto expr = &(_4211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2d2226:;
		if (it != expr_end) {
			jule::I64 _537_i = it - expr->begin();
			{
				if ((_4211_live[_537_i] == (*(_4127_t)))) {
					return true;;
				};
			}
			_iter_next_1aa2d2226:;
			++it;
			_537_i++;
			goto _iter_begin_1aa2d2226;
		}
		_iter_end_1aa2d2226:;
	};
	return false;;
}



inline void _1aa2bb6a5_pushLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3b87a7d_Trait> _6132_t) {
	{
		
{
			_case_begin_1aa2c0137:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,jule::Slice<jule::Ptr<_1a3b87a7d_Trait>>::make({_6132_t}));
			}
		}
		_match_end_1aa2be488:;
	};
}

inline void _1aa2c2106_pushLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3b770cd_FnIns> _6132_t) {
	{
		
{
			_case_begin_1aa2c5dda:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a3b770cd_FnIns>>::make({_6132_t}));
			}
		}
		_match_end_1aa2c54e4:;
	};
}

inline void _1aa2c8162_pushLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3b61cbb_StructIns> _6132_t) {
	{
		
{
			_case_begin_1aa2c97e5:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,jule::Slice<jule::Ptr<_1a3b61cbb_StructIns>>::make({_6132_t}));
			}
		}
		_match_end_1aa2c8b68:;
	};
}

inline void _1aa2d019c_pushLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3c31c26_Var> _6132_t) {
	{
		
{
			_case_begin_1aa2d3de8:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,jule::Slice<jule::Ptr<_1a3c31c26_Var>>::make({_6132_t}));
			}
		}
		_match_end_1aa2d336a:;
	};
}



inline void _1a5130e59_setReferencesAsLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3b7a257_ReferenceStack>* _7441_rs) {
	if (((*(_7441_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _787_i = 0LL;;
	for (; (_787_i < _1a3b7a950_Len((*(_7441_rs)).ptr())); (_787_i)++) {
		{
			jule::Any _808_ref = _1a3b7ac91_At((*(_7441_rs)).ptr(), _787_i);;
			{
				auto &_match_expr{ _808_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1aa2ba011:;
					{
						jule::Ptr<_1a3b87a7d_Trait> _839_t = _808_ref.unsafe_cast_ptr<_1a3b87a7d_Trait>();;
						if (_1aa2bb30e_isLive(_self_, &(_839_t))) {
							goto _iter_next_1aa2b9230;
						};
						_1aa2bb6a5_pushLive(_self_, _839_t);
						{
							auto expr = &((*(_839_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1aa2bac8c:;
							if (it != expr_end) {
								jule::Ptr<_1a3b740ec_Fn> _8817_ins = *it;
								{
									{
										auto expr = &((*(_8817_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1aa2c0225:;
										if (it != expr_end) {
											jule::Ptr<_1a3b770cd_FnIns> _8918_mins = *it;
											{
												if (_1aa2c1c60_isLive(_self_, &(_8918_mins))) {
													goto _iter_next_1aa2c0225;
												};
												_1aa2c2106_pushLive(_self_, _8918_mins);
												_1a5130e59_setReferencesAsLive(_self_, &((*(_8918_mins))._field_Refers));
											}
											_iter_next_1aa2c0225:;
											++it;
											goto _iter_begin_1aa2c0225;
										}
										_iter_end_1aa2c0225:;
									};
								}
								_iter_next_1aa2bac8c:;
								++it;
								goto _iter_begin_1aa2bac8c;
							}
							_iter_end_1aa2bac8c:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1aa2b9d46:;
					{
						jule::Ptr<_1a3b770cd_FnIns> _989_f = _808_ref.unsafe_cast_ptr<_1a3b770cd_FnIns>();;
						if (_1aa2c1c60_isLive(_self_, &(_989_f))) {
							goto _match_end_1aa2b9dbd;
						};
						if ((((*(_989_f))._field_Owner != nullptr) && (!((*((*_989_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1aa2c7aac_isLive(_self_, &((*_989_f.alloc)._field_Owner))))) {
								_1aa2c8162_pushLive(_self_, (*_989_f.alloc)._field_Owner);
								_1a5130e59_setReferencesAsLive(_self_, &((*(*(_989_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1aa2c2106_pushLive(_self_, _989_f);
						_1a5130e59_setReferencesAsLive(_self_, &((*_989_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1aa2ba077:;
					{
						jule::Ptr<_1a3c31c26_Var> _1119_v = _808_ref.unsafe_cast_ptr<_1a3c31c26_Var>();;
						if (_1aa2ced06_isLive(_self_, &(_1119_v))) {
							goto _match_end_1aa2b9dbd;
						};
						_1aa2d019c_pushLive(_self_, _1119_v);
						_1a5130e59_setReferencesAsLive(_self_, &((*(_1119_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1aa2ba0dd:;
					{
						jule::Ptr<_1a3b61cbb_StructIns> _1189_s = _808_ref.unsafe_cast_ptr<_1a3b61cbb_StructIns>();;
						if (_1aa2c7aac_isLive(_self_, &(_1189_s))) {
							goto _match_end_1aa2b9dbd;
						};
						_1aa2c8162_pushLive(_self_, _1189_s);
						_1a5130e59_setReferencesAsLive(_self_, &((*(_1189_s))._field_Refers));
						{
							auto expr = &((*_1189_s.alloc)._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1aa2d625d:;
							if (it != expr_end) {
								jule::Ptr<_1a3b740ec_Fn> _12417_m = *it;
								{
									{
										auto expr = &((*(_12417_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1aa2d6e40:;
										if (it != expr_end) {
											jule::Ptr<_1a3b770cd_FnIns> _12518_ins = *it;
											{
												if (_1aa2c1c60_isLive(_self_, &(_12518_ins))) {
													goto _iter_next_1aa2d6e40;
												};
												if (_1a56418dc_IsTraitMethod(&(_1189_s), &(_12518_ins))) {
													_1aa2c2106_pushLive(_self_, _12518_ins);
													_1a5130e59_setReferencesAsLive(_self_, &((*(_12518_ins))._field_Refers));
												};
												;
												;
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Eq)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Gt)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_GtEq)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Lt)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_LtEq)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Shl)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Shr)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Add)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Sub)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Div)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Mul)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Mod)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitAnd)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitOr)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitXor)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Neg)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Pos)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitNot)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_AddAssign)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_SubAssign)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_DivAssign)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_MulAssign)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_ModAssign)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_ShlAssign)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_ShrAssign)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitOrAssign)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitAndAssign)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitXorAssign)) {
														_1aa2c2106_pushLive(_self_, _12518_ins);
														_1a5130e59_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
											}
											_iter_next_1aa2d6e40:;
											++it;
											goto _iter_begin_1aa2d6e40;
										}
										_iter_end_1aa2d6e40:;
									};
								}
								_iter_next_1aa2d625d:;
								++it;
								goto _iter_begin_1aa2d625d;
							}
							_iter_end_1aa2d625d:;
						};
					}
				}
				_match_end_1aa2b9dbd:;
			};
		}
	_iter_next_1aa2b9230:;
	}
	_iter_end_1aa2b9230:;;
}



inline void _1a5131212_inits(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3bdb609_Package>* _15627_pkg) {
	{
		auto expr = &((*((*(_15627_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2d9074:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _15715_file = *it;
			{
				{
					auto expr = &((*(_15715_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa2d6c97:;
					if (it != expr_end) {
						jule::Ptr<_1a3b740ec_Fn> _15816_f = *it;
						{
							if ((*(_15816_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1a3b770cd_FnIns> _16010_ins = (*(_15816_f))._field_Instances[0LL];;
								(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a3b770cd_FnIns>>::make({_16010_ins}));
								_1a5130e59_setReferencesAsLive(_self_, &((*(_16010_ins))._field_Refers));
							};
						}
						_iter_next_1aa2d6c97:;
						++it;
						goto _iter_begin_1aa2d6c97;
					}
					_iter_end_1aa2d6c97:;
				};
			}
			_iter_next_1aa2d9074:;
			++it;
			goto _iter_begin_1aa2d9074;
		}
		_iter_end_1aa2d9074:;
	};
}



inline void _1a51314ba_collectLivePackage(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3bdb609_Package>* _16840_pkg) {
	_1a5131212_inits(_self_, _16840_pkg);
	if (_21212ea22_Test) {
		{
			auto expr = &((*((*(_16840_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa3058ba:;
			if (it != expr_end) {
				jule::Ptr<_1a3c844b5_SymbolTable> _17416_file = *it;
				{
					{
						auto expr = &((*(_17416_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa306305:;
						if (it != expr_end) {
							jule::Ptr<_1a3b740ec_Fn> _17517_f = *it;
							{
								if (_1a564312a_HasDirective(&((*(_17517_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1a3b770cd_FnIns> _17711_ins = (*_17517_f.alloc)._field_Instances[0LL];;
									(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a3b770cd_FnIns>>::make({_17711_ins}));
									_1a5130e59_setReferencesAsLive(_self_, &((*(_17711_ins))._field_Refers));
								};
							}
							_iter_next_1aa306305:;
							++it;
							goto _iter_begin_1aa306305;
						}
						_iter_end_1aa306305:;
					};
				}
				_iter_next_1aa3058ba:;
				++it;
				goto _iter_begin_1aa3058ba;
			}
			_iter_end_1aa3058ba:;
		};
	};
}



inline void _1a51316b8_collectLive(jule::Ptr<_1a5130112_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa30626c:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _18715_used = *it;
			{
				if ((!((*(_18715_used))._field_Binded))) {
					_1a51314ba_collectLivePackage(_self_, &((*_18715_used.alloc)._field_Package));
				};
			}
			_iter_next_1aa30626c:;
			++it;
			goto _iter_begin_1aa30626c;
		}
		_iter_end_1aa30626c:;
	};
	_1a51314ba_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1a3b740ec_Fn> _1957_main = _1a3bdcb8d_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1a3b770cd_FnIns> _1967_ins = (*(_1957_main))._field_Instances[0LL];;
	(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a3b770cd_FnIns>>::make({_1967_ins}));
	_1a5130e59_setReferencesAsLive(_self_, &((*(_1967_ins))._field_Refers));
}



inline void _1a5131971_removeDeadGlobals(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a3c31c26_Var>>* _20139_vars) {
	jule::I64 _2027_i = 0LL;;
	while ((_2027_i < (*(_20139_vars)).len())) {
		{
			jule::Ptr<_1a3c31c26_Var> _2044_v = (*(_20139_vars))[_2027_i];;
			if (_1aa2ced06_isLive(_self_, &(_2044_v))) {
				(_2027_i)++;
				goto _iter_next_1aa30c53c;
			};
			(*(_20139_vars))=jule::append((*(_20139_vars)).slice(0LL, _2027_i),(*(_20139_vars)).slice((_2027_i + 1LL)));
		}
	_iter_next_1aa30c53c:;
	}
	_iter_end_1aa30c53c:;;
}



inline void _1a5131c29_removeDeadFns(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a3b740ec_Fn>>* _21335_funcs) {
	jule::I64 _2147_i = 0LL;;
	while ((_2147_i < (*(_21335_funcs)).len())) {
		{
			jule::Ptr<_1a3b740ec_Fn> _2168_f = (*(_21335_funcs))[_2147_i];;
			jule::I64 _2178_j = 0LL;;
			while ((_2178_j < (*(_2168_f))._field_Instances.len())) {
				{
					jule::Ptr<_1a3b770cd_FnIns> _2195_ins = (*(_2168_f))._field_Instances[_2178_j];;
					if (_1aa2c1c60_isLive(_self_, &(_2195_ins))) {
						(_2178_j)++;
						goto _iter_next_1aa30ec8c;
					};
					(*_2168_f.alloc)._field_Instances=jule::append((*_2168_f.alloc)._field_Instances.slice(0LL, _2178_j),(*_2168_f.alloc)._field_Instances.slice((_2178_j + 1LL)));
				}
			_iter_next_1aa30ec8c:;
			}
			_iter_end_1aa30ec8c:;;
			if (((*_2168_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_21335_funcs))=jule::append((*(_21335_funcs)).slice(0LL, _2147_i),(*(_21335_funcs)).slice((_2147_i + 1LL)));
				goto _iter_next_1aa30e0dd;
			};
			(_2147_i)++;
		}
	_iter_next_1aa30e0dd:;
	}
	_iter_end_1aa30e0dd:;;
}



inline void _1a5131ed2_removeDeadStructs(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a3b5e03d_Struct>>* _23439_structs) {
	jule::I64 _2357_i = 0LL;;
	while ((_2357_i < (*(_23439_structs)).len())) {
		{
			jule::Ptr<_1a3b5e03d_Struct> _2378_s = (*(_23439_structs))[_2357_i];;
			jule::I64 _2388_j = 0LL;;
			while ((_2388_j < (*(_2378_s))._field_Instances.len())) {
				{
					jule::Ptr<_1a3b61cbb_StructIns> _2409_ins = (*(_2378_s))._field_Instances[_2388_j];;
					_1a5131c29_removeDeadFns(_self_, &((*(_2409_ins))._field_Methods));
					if ((((*_2409_ins.alloc)._field_Methods.len() != 0LL) || _1aa2c7aac_isLive(_self_, &(_2409_ins)))) {
						(_2388_j)++;
						goto _iter_next_1aa3139c7;
					};
					(*_2378_s.alloc)._field_Instances=jule::append((*_2378_s.alloc)._field_Instances.slice(0LL, _2388_j),(*_2378_s.alloc)._field_Instances.slice((_2388_j + 1LL)));
				}
			_iter_next_1aa3139c7:;
			}
			_iter_end_1aa3139c7:;;
			if (((*_2378_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_23439_structs))=jule::append((*(_23439_structs)).slice(0LL, _2357_i),(*(_23439_structs)).slice((_2357_i + 1LL)));
				goto _iter_next_1aa312d28;
			};
			(_2357_i)++;
		}
	_iter_next_1aa312d28:;
	}
	_iter_end_1aa312d28:;;
}



inline void _1a513228a_removeDeadTraits(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a3b87a7d_Trait>>* _25638_traits) {
	jule::I64 _2577_i = 0LL;;
	while ((_2577_i < (*(_25638_traits)).len())) {
		{
			jule::Ptr<_1a3b87a7d_Trait> _2598_t = (*(_25638_traits))[_2577_i];;
			if ((!(_1aa2bb30e_isLive(_self_, &(_2598_t))))) {
				(*(_25638_traits))=jule::append((*(_25638_traits)).slice(0LL, _2577_i),(*(_25638_traits)).slice((_2577_i + 1LL)));
				goto _iter_next_1aa3175be;
			};
			jule::I64 _2648_j = 0LL;;
			while ((_2648_j < (*(_2598_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1a3b5e03d_Struct> _2665_s = (*(_2598_t))._field_Implemented[_2648_j];;
					if (((*(_2665_s))._field_Instances.len() > 0LL)) {
						(_2648_j)++;
						goto _iter_next_1aa317ee8;
					};
					(*_2598_t.alloc)._field_Implemented=jule::append((*_2598_t.alloc)._field_Implemented.slice(0LL, _2648_j),(*_2598_t.alloc)._field_Implemented.slice((_2648_j + 1LL)));
				}
			_iter_next_1aa317ee8:;
			}
			_iter_end_1aa317ee8:;;
			(_2577_i)++;
		}
	_iter_next_1aa3175be:;
	}
	_iter_end_1aa3175be:;;
}



inline void _1a5132543_removeDeadsFile(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3c844b5_SymbolTable>* _27737_file) {
	_1a5131c29_removeDeadFns(_self_, &((*((*(_27737_file))))._field_Funcs));
	_1a5131ed2_removeDeadStructs(_self_, &((*((*(_27737_file))))._field_Structs));
	_1a513228a_removeDeadTraits(_self_, &((*((*(_27737_file))))._field_Traits));
	_1a5131971_removeDeadGlobals(_self_, &((*((*(_27737_file))))._field_Vars));
}



inline void _1a51327eb_removeDeadsPackage(jule::Ptr<_1a5130112_ObjectDeadCode> _self_, jule::Ptr<_1a3bdb609_Package>* _28440_pkg) {
	{
		auto expr = &((*((*(_28440_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa31cb68:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _28515_file = *it;
			{
				_1a5132543_removeDeadsFile(_self_, &(_28515_file));
			}
			_iter_next_1aa31cb68:;
			++it;
			goto _iter_begin_1aa31cb68;
		}
		_iter_end_1aa31cb68:;
	};
}



inline void _1a51329e9_removeDeads(jule::Ptr<_1a5130112_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa31d3d8:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _29115_used = *it;
			{
				if (((!((*(_29115_used))._field_Binded)) && (!(_1a564213a_IsImplicitImport(_29115_used))))) {
					_1a51327eb_removeDeadsPackage(_self_, &((*_29115_used.alloc)._field_Package));
				};
			}
			_iter_next_1aa31d3d8:;
			++it;
			goto _iter_begin_1aa31d3d8;
		}
		_iter_end_1aa31d3d8:;
	};
	_1a51327eb_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1a5132be7_elimanate(jule::Ptr<_1a5130112_ObjectDeadCode> _self_) {
	_1a51316b8_collectLive(_self_);
	_1a51329e9_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a5130112_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a5133c5e_scopeDeadCode_eq(_1a5133c5e_scopeDeadCode *_self_, _1a5133c5e_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _1a5134248_optimizeChild(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb664a_Scope>* _3935_s) {
	jule::Ptr<_1a5133c5e_scopeDeadCode> _407_sdc = jule::new_ptr<_1a5133c5e_scopeDeadCode>(_1a5133c5e_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3935_s)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1a5136b63_optimizeStmts(_407_sdc);
	};
}



inline void _1a5134501_optimizeBodyChildExceptional(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb664a_Scope>* _4950_s) {
	jule::Ptr<_1a5133c5e_scopeDeadCode> _507_sdc = jule::new_ptr<_1a5133c5e_scopeDeadCode>(_1a5133c5e_scopeDeadCode{._field_s=(*(_4950_s)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1a5136b63_optimizeStmts(_507_sdc);
	};
}



inline void _1a51347a9_optimizeBodyChild(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb664a_Scope>* _5939_s) {
	jule::Ptr<_1a5133c5e_scopeDeadCode> _607_sdc = jule::new_ptr<_1a5133c5e_scopeDeadCode>(_1a5133c5e_scopeDeadCode{._field_s=(*(_5939_s)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1a5136b63_optimizeStmts(_607_sdc);
	};
}



inline void _1a5134a62_optimizeExprModel(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Any* _6839_model) {
	_1a51383e5_exprDeadCode _693_edc = static__1a513878b_new(&(_self_));;
	_1a5138a44_optimize(&_693_edc, _6839_model);
}



inline void _1a5134c60_eliminateFollowed(_1a5133c5e_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1a5133c5e_scopeDeadCode> _807_parent = (*(_self_))._field_parent;;
	while ((_807_parent != nullptr)) {
		{
			{
				((*((*(_807_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_807_parent))._field_i + 1LL));;
			};
			_807_parent=(*_807_parent.alloc)._field_parent;
		}
	_iter_next_1aa32dccd:;
	}
	_iter_end_1aa32dccd:;;
}



inline void _1a5135018_pushGoto(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb93b7_GotoSt> _8929_gt) {
	jule::I64 _907_i = 0LL;;
	for (; (_907_i < (*((*(_self_))._field_labels)).len()); (_907_i)++) {
		{
			if (((*(_8929_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_907_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1aa332199:;
	}
	_iter_end_1aa332199:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),jule::Slice<jule::Ptr<_1a3bb93b7_GotoSt>>::make({_8929_gt}));
}



inline void _1a51352c1_pushLabel(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb8edd_Label> _9930_l) {
	jule::I64 _1007_i = 0LL;;
	while ((_1007_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_9930_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_1007_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_1007_i), (*((*(_self_))._field_gotos)).slice((_1007_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1aa334377;
			};
			(_1007_i)++;
		}
	_iter_next_1aa334377:;
	}
	_iter_end_1aa334377:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),jule::Slice<jule::Ptr<_1a3bb8edd_Label>>::make({_9930_l}));
}



inline void _1a5135579_optimizeRangeIter(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb8482_RangeIter> _11238_it) {
	_1a5134a62_optimizeExprModel(_self_, &((*((*(_11238_it))._field_Expr))._field_Model));
	_1a51347a9_optimizeBodyChild(_self_, &((*_11238_it.alloc)._field_Scope));
}



inline void _1a5135832_optimizeWhileIter(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb7a36_WhileIter> _11738_it) {
	_1a5134a62_optimizeExprModel(_self_, &((*(_11738_it))._field_Expr));
	if (((*_11738_it.alloc)._field_Next != nullptr)) {
		_1a5136965_optimizeStmt(_self_, (*_11738_it.alloc)._field_Next);
	};
	_1a51347a9_optimizeBodyChild(_self_, &((*_11738_it.alloc)._field_Scope));
}



inline void _1a5135ada_optimizeInfIter(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb7580_InfIter> _12536_it) {
	_1a51347a9_optimizeBodyChild(_self_, &((*(_12536_it))._field_Scope));
}



inline void _1a5135d93_optimizeConditional(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb7283_Conditional> _12940_c) {
	{
		auto expr = &((*(_12940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa33b1d6:;
		if (it != expr_end) {
			jule::Ptr<_1a3bb6a68_If> _13015_case = *it;
			{
				if ((_13015_case != nullptr)) {
					_1a5134a62_optimizeExprModel(_self_, &((*_13015_case.alloc)._field_Expr));
					_1a51347a9_optimizeBodyChild(_self_, &((*_13015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1aa33b1d6:;
			++it;
			goto _iter_begin_1aa33b1d6;
		}
		_iter_end_1aa33b1d6:;
	};
	if (((*_12940_c.alloc)._field_Default != nullptr)) {
		if (((*_12940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1a5134248_optimizeChild(_self_, &((*(*(_12940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1a51347a9_optimizeBodyChild(_self_, &((*(*(_12940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a513614b_optimizeMatch(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bba85d_Match> _14734_m) {
	{
		auto expr = &((*(_14734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa33e717:;
		if (it != expr_end) {
			jule::Ptr<_1a3bbb386_Case> _14815_case = *it;
			{
				{
					auto expr = &((*(_14815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa340185:;
					if (it != expr_end) {
						jule::Ptr<_1a3c8982d_Data> _14916_expr = *it;
						{
							_1a5134a62_optimizeExprModel(_self_, &((*(_14916_expr))._field_Model));
						}
						_iter_next_1aa340185:;
						++it;
						goto _iter_begin_1aa340185;
					}
					_iter_end_1aa340185:;
				};
				_1a51347a9_optimizeBodyChild(_self_, &((*_14815_case.alloc)._field_Scope));
			}
			_iter_next_1aa33e717:;
			++it;
			goto _iter_begin_1aa33e717;
		}
		_iter_end_1aa33e717:;
	};
	if (((*_14734_m.alloc)._field_Default != nullptr)) {
		if (((*_14734_m.alloc)._field_Cases.len() == 0LL)) {
			_1a5134248_optimizeChild(_self_, &((*(*(_14734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1a51347a9_optimizeBodyChild(_self_, &((*(*(_14734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a5136404_optimizeAssign(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bb9c47_Assign> _16535_assign) {
	_1a5134a62_optimizeExprModel(_self_, &((*((*(_16535_assign))._field_Left))._field_Model));
	_1a5134a62_optimizeExprModel(_self_, &((*((*_16535_assign.alloc)._field_Right))._field_Model));
}



inline void _1a51366ac_optimizeMultiAssign(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Ptr<_1a3bba1ed_MultiAssign> _17040_assign) {
	{
		auto expr = &((*(_17040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa34450d:;
		if (it != expr_end) {
			jule::Ptr<_1a3c8982d_Data> _17115_l = *it;
			{
				if ((_17115_l != nullptr)) {
					_1a5134a62_optimizeExprModel(_self_, &((*_17115_l.alloc)._field_Model));
				};
			}
			_iter_next_1aa34450d:;
			++it;
			goto _iter_begin_1aa34450d;
		}
		_iter_end_1aa34450d:;
	};
	_1a5134a62_optimizeExprModel(_self_, &((*_17040_assign.alloc)._field_Right));
}



inline void _1a5136965_optimizeStmt(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_, jule::Any _17933_st) {
	{
		auto &_match_expr{ _17933_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1aa34617a:;
			{
				jule::Ptr<_1a3bb664a_Scope> _1828_scope = _17933_st.unsafe_cast_ptr<_1a3bb664a_Scope>();;
				if ((*(_1828_scope))._field_Deferred) {
					_1a5136e93_eliminateDeadCodeOfScope(_1828_scope);
				} else {
					_1a5134248_optimizeChild(_self_, &(_1828_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1aa345e05:;
			{
				_1a5135579_optimizeRangeIter(_self_, _17933_st.cast_ptr<_1a3bb8482_RangeIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1aa346202:;
			{
				_1a5135832_optimizeWhileIter(_self_, _17933_st.cast_ptr<_1a3bb7a36_WhileIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1aa346279:;
			{
				_1a5135ada_optimizeInfIter(_self_, _17933_st.cast_ptr<_1a3bb7580_InfIter>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1aa346301:;
			{
				_1a5135d93_optimizeConditional(_self_, _17933_st.cast_ptr<_1a3bb7283_Conditional>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1aa346378:;
			{
				_1a513614b_optimizeMatch(_self_, _17933_st.cast_ptr<_1a3bba85d_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1aa346400:;
			{
				_1a5136404_optimizeAssign(_self_, _17933_st.cast_ptr<_1a3bb9c47_Assign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1aa346477:;
			{
				_1a51366ac_optimizeMultiAssign(_self_, _17933_st.cast_ptr<_1a3bba1ed_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aa3464ee:;
			{
				jule::Ptr<_1a3c8982d_Data> _2038_d = _17933_st.unsafe_cast_ptr<_1a3c8982d_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1aa346037;
				};
				{
					auto &_match_expr{ (*(_2038_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type28) {
						_case_begin_1aa34c2b3:;
						{
							_1a5134c60_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1aa34c549:;
						{
							_1a5134a62_optimizeExprModel(_self_, &((*(_2038_d))._field_Model));
						}
					}
					_match_end_1aa34c4e4:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1aa346576:;
			{
				_1a5134c60_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1aa3465ed:;
			{
				_1a5135018_pushGoto(_self_, _17933_st.cast_ptr<_1a3bb93b7_GotoSt>(&__jule_any_type41));
				_1a5134c60_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1aa346675:;
			{
				_1a51352c1_pushLabel(_self_, _17933_st.cast_ptr<_1a3bb8edd_Label>(&__jule_any_type20));
			}
		}
		_match_end_1aa346037:;
	};
}



inline void _1a5136b63_optimizeStmts(jule::Ptr<_1a5133c5e_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a5136965_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1aa34ee75:;
	}
	_iter_end_1aa34ee75:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5133c5e_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a51383e5_exprDeadCode_eq(_1a51383e5_exprDeadCode *_self_, _1a51383e5_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _1a51383e5_exprDeadCode static__1a513878b_new(jule::Ptr<_1a5133c5e_scopeDeadCode>* _1821_s) {
	return _1a51383e5_exprDeadCode{._field_s=(*(_1821_s))};;
}



inline void _1a5138a44_optimize(_1a51383e5_exprDeadCode* _self_, jule::Any* _2425_model) {
	jule::Ptr<_1a5638c8b_ExprInspector> _257_inspector = static__1a56390ee_New();;
	_1a56399c3_Inspect(_257_inspector.ptr(), _2425_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1aa352a5a, jule::Ptr<__jule_anon_1aa352a5a_ctx>::make(__jule_anon_1aa352a5a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa352a5a_ctx_handler));
}





std::ostream &operator<<(std::ostream &_Stream, _1a51383e5_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3e45049_ExceptionalForwardingExprModel_eq(_1a3e45049_ExceptionalForwardingExprModel *_self_, _1a3e45049_ExceptionalForwardingExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3e45049_ExceptionalForwardingExprModel _Src) {
	_Stream << "ExceptionalForwardingExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3e453bd_SwapExprModel_eq(_1a3e453bd_SwapExprModel *_self_, _1a3e453bd_SwapExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3e453bd_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3e45797_EmptyCompareExprModel_eq(_1a3e45797_EmptyCompareExprModel *_self_, _1a3e45797_EmptyCompareExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3e45797_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3e45b1b_RefExprModel_eq(_1a3e45b1b_RefExprModel *_self_, _1a3e45b1b_RefExprModel _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3e45b1b_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3e4608e_StrCompExprModel_eq(_1a3e4608e_StrCompExprModel *_self_, _1a3e4608e_StrCompExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3e4608e_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3e46622_MutSlicingExprModel_eq(_1a3e46622_MutSlicingExprModel *_self_, _1a3e46622_MutSlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3e46622_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3e4691e_UnsafeBinaryExprModel_eq(_1a3e4691e_UnsafeBinaryExprModel *_self_, _1a3e4691e_UnsafeBinaryExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3e4691e_UnsafeBinaryExprModel _Src) {
	_Stream << "UnsafeBinaryExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3e46ca4_UnsafeIndexingExprModel_eq(_1a3e46ca4_UnsafeIndexingExprModel *_self_, _1a3e46ca4_UnsafeIndexingExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3e46ca4_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3e4717d_PushToSliceExprModel_eq(_1a3e4717d_PushToSliceExprModel *_self_, _1a3e4717d_PushToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3e4717d_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3e47557_AppendToSliceExprModel_eq(_1a3e47557_AppendToSliceExprModel *_self_, _1a3e47557_AppendToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3e47557_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3e47931_StrRuneIter_eq(_1a3e47931_StrRuneIter *_self_, _1a3e47931_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3e47931_StrRuneIter _Src) {
	_Stream << "StrRuneIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3e47c2d_UnsafeDerefExprModel_eq(_1a3e47c2d_UnsafeDerefExprModel *_self_, _1a3e47c2d_UnsafeDerefExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3e47c2d_UnsafeDerefExprModel _Src) {
	_Stream << "UnsafeDerefExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3e4802a_UnsafeCastingExprModel_eq(_1a3e4802a_UnsafeCastingExprModel *_self_, _1a3e4802a_UnsafeCastingExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3e4802a_UnsafeCastingExprModel _Src) {
	_Stream << "UnsafeCastingExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a3e48c0c_nilVar_eq(_1a3e48c0c_nilVar *_self_, _1a3e48c0c_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}



std::ostream &operator<<(std::ostream &_Stream, _1a3e48c0c_nilVar _Src) {
	_Stream << "nilVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "safe:" << _Src._field_safe;
	_Stream << "}";
	return _Stream;
}



inline void _1a3e494b0_pushVar(_1a3e4904d_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe) {
	if (((!(_1a565b8d5_Access)) || (_2923_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8446ce9:;
		if (it != expr_end) {
			_1a3e48c0c_nilVar _3415_v = *it;
			{
				if ((_3415_v._field_var == _2923_var)) {
					_3415_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1a8446ce9:;
			++it;
			goto _iter_begin_1a8446ce9;
		}
		_iter_end_1a8446ce9:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8446aa7:;
		if (it != expr_end) {
			_1a3e48c0c_nilVar _4115_v = *it;
			{
				if ((_4115_v._field_var == 0LLU)) {
					_4115_v._field_var=_2923_var;
					_4115_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1a8446aa7:;
			++it;
			goto _iter_begin_1a8446aa7;
		}
		_iter_end_1a8446aa7:;
	};
	{ jule::Slice<_1a3e48c0c_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a3e48c0c_nilVar{._field_var=_2923_var, ._field_safe=_2937_safe}); };
}



inline jule::Bool _1a3e49801_removeVar(_1a3e4904d_nils* _self_, jule::Uintptr _5225_var) {
	if ((_5225_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8449505:;
			if (it != expr_end) {
				_1a3e48c0c_nilVar _5416_v = *it;
				{
					if ((_5416_v._field_var == _5225_var)) {
						_5416_v._field_var=0LLU;
						_5416_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1a8449505:;
				++it;
				goto _iter_begin_1a8449505;
			}
			_iter_end_1a8449505:;
		};
	};
	return false;;
}



inline jule::Bool _1a3e49b42_isSafe(_1a3e4904d_nils* _self_, jule::Uintptr _6622_var) {
	if ((_6622_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a844ab66:;
			if (it != expr_end) {
				_1a3e48c0c_nilVar _6811_v = *it;
				{
					if ((_6811_v._field_var == _6622_var)) {
						return _6811_v._field_safe;;
					};
				}
				_iter_next_1a844ab66:;
				++it;
				goto _iter_begin_1a844ab66;
			}
			_iter_end_1a844ab66:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a3e4904d_nils _Src) {
	_Stream << "nils{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a564679e_scopeOptimizer_eq(_1a564679e_scopeOptimizer *_self_, _1a564679e_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1a564679e_scopeOptimizer> static__1a5646d21_new(jule::Ptr<_1a3bb664a_Scope> _5120_scope) {
	jule::Ptr<_1a564679e_scopeOptimizer> _527_sc = jule::new_ptr<_1a564679e_scopeOptimizer>(_1a564679e_scopeOptimizer{._field_scope=_5120_scope, ._field_data=jule::new_ptr<_1a565665a_data>(_1a565665a_data{._field_boundary=jule::new_ptr<_1a56580da_boundary>(), ._field_nils=jule::new_ptr<_1a3e4904d_nils>(), ._field_dynamic=jule::new_ptr<_1a56539cb_dynamic>()})});;
	return _527_sc;;
}



inline void _1a56470c9_setCurrentStmt(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Any _6335_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_6335_stmt))))));
}



inline void _1a56472c7_removeCurrent(jule::Ptr<_1a564679e_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1a564755d_isLastStmt(jule::Ptr<_1a564679e_scopeOptimizer> _self_) {
	jule::Ptr<_1a564679e_scopeOptimizer> _737_r = _self_;;
	for (; (_737_r != nullptr); _737_r=(*_737_r.alloc)._field_parent) {
		{
			if ((((*((*_737_r.alloc)._field_scope))._field_Stmts.len() - (*_737_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1a8457dd7:;
	}
	_iter_end_1a8457dd7:;;
	return true;;
}



inline jule::Bool _1a56477e4_isIter(jule::Ptr<_1a564679e_scopeOptimizer> _self_) {
	jule::Ptr<_1a564679e_scopeOptimizer> _837_r = (*(_self_))._field_parent;;
	for (; (_837_r != nullptr); _837_r=(*_837_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_837_r))._field_scope))._field_Stmts[(*(_837_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type35) {
					_case_begin_1a845a648:;
					{
						return true;;
					}
				}
				_match_end_1a845a5b0:;
			};
		}
	_iter_next_1a84599cc:;
	}
	_iter_end_1a84599cc:;;
	return false;;
}



inline void _1a5647a9c_optimizeData(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3c8982d_Data> _9533_d) {
	{
		auto &_match_expr{ (*(_9533_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a845b858:;
			{
				jule::Ptr<_1a3b68201_FnCallExprModel> _988_m = (*(_9533_d))._field_Model.unsafe_cast_ptr<_1a3b68201_FnCallExprModel>();;
				if (_2121303d5_Production) {
					if (((!(_1a3b78563_IsBuiltin((*(_988_m))._field_Func.ptr()))) && _1a5641c61_IsStdPackage(&((*((*((*((*(*(_988_m))._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1a56470c9_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1a564da2b_optimizeData(&((*(_9533_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1a565cd59_Exceptional && (*(*((*(_988_m))._field_Func))._field_Decl.alloc)._field_Exceptional) && ((*_988_m.alloc)._field_Except != nullptr)) && ((*(*(_988_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1a56408b9_IsForwarded(&((*_988_m.alloc)._field_Except))) && _1a564755d_isLastStmt(_self_)) && (!(_1a56477e4_isIter(_self_))))) {
					_1a56470c9_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a3e45049_ExceptionalForwardingExprModel>(_1a3e45049_ExceptionalForwardingExprModel{._field_Expr=_988_m}), &__jule_any_type120));
				};
				return;;
			}
		}
		_match_end_1a845b7e2:;
	};
	static__1a564da2b_optimizeData(&((*_9533_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1a5647d55_optimizeVar(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3c31c26_Var> _12132_v) {
	if (((*(_12132_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1a3e4a6ae_isNilValidType((*((*_12132_v.alloc)._field_Kind))._field_Kind)) && _1a3e4a3e5_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_12132_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1a3e494b0_pushVar((*((*(_self_))._field_data))._field_nils, _1a3e4aa00_getNilVar(jule::Any(_12132_v, &__jule_any_type8)), true);
		};
		if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1a3cbac27_TypeKind> _1309_kind = _1a56552a2_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_12132_v))._field_Kind.alloc)._field_Kind, (*(*((*(_12132_v))._field_Value))._field_Data.alloc)._field_Model);;
			if ((_1309_kind != nullptr)) {
				if (_1a5654d73_isDynamicValidType((*(*(_12132_v))._field_Kind.alloc)._field_Kind)) {
					_1a5653e3d_pushVar((*((*(_self_))._field_data))._field_dynamic, _1a56555e3_getDynamicVar(jule::Any(_12132_v, &__jule_any_type8)), _1309_kind);
				};
			};
		};
		static__1a564da2b_optimizeData(&((*(*((*(_12132_v))._field_Value))._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1a564810d_optimizeConditional(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb7283_Conditional> _14240_c) {
	_1a5656160_dataCheckpoint _1437_checkpoint = _1a56569ce_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8469ea4:;
		if (it != expr_end) {
			jule::Ptr<_1a3bb6a68_If> _14415_elif = *it;
			{
				static__1a564da2b_optimizeData(&((*(_14415_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1a564ac8c_optimizeChild(_self_, (*_14415_elif.alloc)._field_Scope);
				if ((((*(_14240_c))._field_Elifs.len() > 1LL) || ((*_14240_c.alloc)._field_Default != nullptr))) {
					_1a5656c87_loadCheckpoint((*(_self_))._field_data, &(_1437_checkpoint));
				};
			}
			_iter_next_1a8469ea4:;
			++it;
			goto _iter_begin_1a8469ea4;
		}
		_iter_end_1a8469ea4:;
	};
	if (((*_14240_c.alloc)._field_Default != nullptr)) {
		_1a564ac8c_optimizeChild(_self_, (*(*(_14240_c))._field_Default.alloc)._field_Scope);
		_1a5656c87_loadCheckpoint((*(_self_))._field_data, &(_1437_checkpoint));
	};
	if ((!(_1a565c30e_Cond))) {
		return;;
	};
	jule::Bool _1607_constCase = false;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a846dae0:;
		if (it != expr_end) {
			jule::I64 _1638_i = it - expr->begin();
			jule::Ptr<_1a3bb6a68_If> _16315_elif = *it;
			{
				if ((!(_1a564b353_isConstantValidConditionalCase(&(_16315_elif))))) {
					goto _iter_next_1a846dae0;
				};
				_1607_constCase=true;
				((*(_14240_c))._field_Elifs).mut_slice(0LL, _1638_i);;
				(*_14240_c.alloc)._field_Default=jule::new_ptr<_1a3bb6d65_Else>(_1a3bb6d65_Else{._field_Scope=(*(_16315_elif))._field_Scope});
				goto _iter_end_1a846dae0;
			}
			_iter_next_1a846dae0:;
			++it;
			_1638_i++;
			goto _iter_begin_1a846dae0;
		}
		_iter_end_1a846dae0:;
	};
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a3bb6a68_If>* _1807_i = (&((*(_14240_c))._field_Elifs[0LL]));;
	jule::Ptr<_1a3bb6a68_If>* _1813_end = (&((*_14240_c.alloc)._field_Elifs[((*_14240_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1807_i <= _1813_end); (_1807_i)++) {
		{
			{
				if (_1a564bc6b_isUnreachableConditionalCase(&((*(_1807_i))))) {
					(*(_1807_i))=nullptr;
				};
			};
		}
	_iter_next_1a8471780:;
	}
	_iter_end_1a8471780:;;
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1607_constCase))) {
		return;;
	};
	jule::I64 _1997_only = -1LL;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8473aa1:;
		if (it != expr_end) {
			jule::I64 _2007_j = it - expr->begin();
			jule::Ptr<_1a3bb6a68_If> _20010_elif = *it;
			{
				if ((_20010_elif != nullptr)) {
					if ((_1997_only != -1LL)) {
						return;;
					};
					_1997_only=_2007_j;
				};
			}
			_iter_next_1a8473aa1:;
			++it;
			_2007_j++;
			goto _iter_begin_1a8473aa1;
		}
		_iter_end_1a8473aa1:;
	};
	if ((_1997_only != -1LL)) {
		_1a56470c9_setCurrentStmt(_self_, jule::Any((*((*_14240_c.alloc)._field_Elifs[_1997_only]))._field_Scope, &__jule_any_type21));
	};
}



inline void _1a564852b_buildDefaultConstantTrueCase(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bbb386_Case> _21649_case, jule::I64* _21667_i, jule::Ptr<_1a3bba85d_Match>* _21680_m) {
	(*(_21649_case))._field_Exprs=nullptr;
	jule::I64 _2183_start = (*(_21667_i));;
	_julec_label_1a847608c:;
	for (;;) {
		{
			if (((*((*_21649_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1a8476125;
			};
			jule::Any *_2249_stmt = &((*(*(_21649_case))._field_Scope.alloc)._field_Stmts[((*(*(_21649_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_2249_stmt)) };
				
				if (_match_expr.type == &__jule_any_type48) {
					_case_begin_1a8478754:;
					{
						((*(_21667_i)))++;
						if (((*(_21667_i)) >= (*((*(_21680_m))))._field_Cases.len())) {
							(*(_2249_stmt))=jule::Any((*((*((*(_21680_m))))._field_Default))._field_Scope, &__jule_any_type21);
							goto _iter_end_1a8476125;
						};
						_21649_case=(*((*(_21680_m))))._field_Cases[(*(_21667_i))];
						(*(_2249_stmt))=jule::Any((*_21649_case.alloc)._field_Scope, &__jule_any_type21);
					}
				}
				else {
					_case_begin_1a8478864:;
					{
						goto _iter_end_1a8476125;
					}
				}
				_match_end_1a84786ee:;
			};
		}
	_iter_next_1a8476125:;
	}
	_iter_end_1a8476125:;;
	(*((*(_21680_m))))._field_Default=(*((*(_21680_m))))._field_Cases[_2183_start];
	((*((*(_21680_m))))._field_Cases).mut_slice(0LL, _2183_start);;
}



inline void _1a56487d4_optimizeMatch(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bba85d_Match> _24234_m) {
	jule::Uintptr _2437_var = 0LLU;;
	if ((_1a565d3ba_Dynamic && (*(_24234_m))._field_TypeMatch)) {
		_2437_var=_1a56555e3_getDynamicVar((*((*_24234_m.alloc)._field_Expr))._field_Model);
	};
	_1a5656160_dataCheckpoint _2477_checkpoint = _1a56569ce_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a847cdeb:;
		if (it != expr_end) {
			jule::Ptr<_1a3bbb386_Case> _24815_case = *it;
			{
				{
					auto expr = &((*(_24815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a847d7d1:;
					if (it != expr_end) {
						jule::Ptr<_1a3c8982d_Data> _24916_expr = *it;
						{
							static__1a564da2b_optimizeData(&((*(_24916_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1a847d7d1:;
						++it;
						goto _iter_begin_1a847d7d1;
					}
					_iter_end_1a847d7d1:;
				};
				if ((((*_24815_case.alloc)._field_Exprs.len() == 1LL) && ((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1a3cbac27_TypeKind> _2549_kind = _1a56552a2_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_24815_case))._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_2549_kind != nullptr)) {
						_1a5653e3d_pushVar((*((*(_self_))._field_data))._field_dynamic, _2437_var, _2549_kind);
					} else {
						_1a565427e_removeVar((*((*(_self_))._field_data))._field_dynamic, _2437_var);
					};
				};
				_1a564ac8c_optimizeChild(_self_, (*_24815_case.alloc)._field_Scope);
				if ((((*_24234_m.alloc)._field_Cases.len() > 1LL) || ((*_24234_m.alloc)._field_Default != nullptr))) {
					_1a5656c87_loadCheckpoint((*(_self_))._field_data, &(_2477_checkpoint));
				};
			}
			_iter_next_1a847cdeb:;
			++it;
			goto _iter_begin_1a847cdeb;
		}
		_iter_end_1a847cdeb:;
	};
	if (((*_24234_m.alloc)._field_Default != nullptr)) {
		_1a564ac8c_optimizeChild(_self_, (*(*(_24234_m))._field_Default.alloc)._field_Scope);
		_1a5656c87_loadCheckpoint((*(_self_))._field_data, &(_2477_checkpoint));
	};
	if ((!(_1a565c30e_Cond))) {
		return;;
	};
	jule::Bool _2757_constCase = false;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8485354:;
		if (it != expr_end) {
			jule::I64 _27812_i = it - expr->begin();
			jule::Ptr<_1a3bbb386_Case> _27819_case = *it;
			{
				if ((!(_1a564b92a_isConstantValidMatchCase(&(_27819_case))))) {
					goto _iter_next_1a8485354;
				};
				_2757_constCase=true;
				_1a564852b_buildDefaultConstantTrueCase(_self_, _27819_case, &(_27812_i), &(_24234_m));
				goto _iter_end_1a8485354;
			}
			_iter_next_1a8485354:;
			++it;
			_27812_i++;
			goto _iter_begin_1a8485354;
		}
		_iter_end_1a8485354:;
	};
	if (((*_24234_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a3bbb386_Case>* _2927_i = (&((*(_24234_m))._field_Cases[0LL]));;
	jule::Ptr<_1a3bbb386_Case>* _2933_end = (&((*_24234_m.alloc)._field_Cases[((*_24234_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2927_i <= _2933_end); (_2927_i)++) {
		{
			{
				if (_1a564c002_isUnreachableMatchCase(&((*(_2927_i))))) {
					(*(_2927_i))=nullptr;
				};
			};
		}
	_iter_next_1a8487e4a:;
	}
	_iter_end_1a8487e4a:;;
	if ((!(_2757_constCase))) {
		return;;
	};
	jule::I64 _3077_only = -1LL;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84891d2:;
		if (it != expr_end) {
			jule::I64 _3087_j = it - expr->begin();
			jule::Ptr<_1a3bbb386_Case> _30810_case = *it;
			{
				if ((_30810_case != nullptr)) {
					if ((_3077_only != -1LL)) {
						return;;
					};
					_3077_only=_3087_j;
				};
			}
			_iter_next_1a84891d2:;
			++it;
			_3087_j++;
			goto _iter_begin_1a84891d2;
		}
		_iter_end_1a84891d2:;
	};
	if ((_3077_only != -1LL)) {
		_1a56470c9_setCurrentStmt(_self_, jule::Any((*((*_24234_m.alloc)._field_Cases[_3077_only]))._field_Scope, &__jule_any_type21));
	};
}



inline void _1a5648a8c_optimizeRangeIter(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb8482_RangeIter> _32438_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_32438_it))._field_KeyA != nullptr))) {
		_1a565854c_pushVar((*((*(_self_))._field_data))._field_boundary, _1a565a51b_getBoundaryVar((*((*_32438_it.alloc)._field_Expr))._field_Model), jule::Any((*_32438_it.alloc)._field_KeyA, &__jule_any_type8));
	};
	_1a564ac8c_optimizeChild(_self_, (*_32438_it.alloc)._field_Scope);
	if (_1a565d112_Iter) {
		{
			auto &_match_expr{ (*((*(_32438_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1a848dd41:;
				{
					jule::Ptr<_1a3b6784e_CastingExprModel> _3369_cem = (*((*(_32438_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a3b6784e_CastingExprModel>();;
					jule::Ptr<_1a3cc3801_Prim> _3375_eprim = _1a3cbd378_Prim((*(_3369_cem))._field_ExprKind.ptr());;
					if (((_3375_eprim == nullptr) || (!(_1a3cc6c88_IsStr(_3375_eprim.ptr()))))) {
						goto _match_end_1a848dcca;
					};
					jule::Ptr<_1a3cc7d00_Slc> _3419_s = _1a3cbe3ce_Slc((*_3369_cem.alloc)._field_Kind.ptr());;
					if ((_3419_s == nullptr)) {
						goto _match_end_1a848dcca;
					};
					jule::Ptr<_1a3cc3801_Prim> _3455_prim = _1a3cbd378_Prim((*(_3419_s))._field_Elem.ptr());;
					if ((_3455_prim == nullptr)) {
						goto _match_end_1a848dcca;
					};
					{
						
						if (_1a3cc51e8_IsU8(_3455_prim.ptr())) {
							_case_begin_1a84926e6:;
							{
								(*_32438_it.alloc)._field_Expr=(*_3369_cem.alloc)._field_Expr;
							}
						}
						else if (_1a3cc4bcb_IsI32(_3455_prim.ptr())) {
							_case_begin_1a849287d:;
							{
								static__1a564da2b_optimizeData(&((*((*_3369_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1a56470c9_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a3e47931_StrRuneIter>(_1a3e47931_StrRuneIter{._field_Expr=(*_3369_cem.alloc)._field_Expr, ._field_Base=_32438_it}), &__jule_any_type121));
								return;;
							}
						}
						_match_end_1a849251a:;
					};
				}
			}
			_match_end_1a848dcca:;
		};
	};
	static__1a564da2b_optimizeData(&((*(*(_32438_it))._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1a5648d45_optimizeWhileIter(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb7a36_WhileIter> _36938_it) {
	static__1a564da2b_optimizeData(&((*(_36938_it))._field_Expr), &((*(_self_))._field_data));
	_1a564a9d4_optimizeStmt(_self_, (*_36938_it.alloc)._field_Next);
	_1a564ac8c_optimizeChild(_self_, (*_36938_it.alloc)._field_Scope);
}



inline jule::Bool _1a5649186_substr(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb9c47_Assign> _37527_a) {
	if (((*((*(_37527_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37527_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a849782d:;
			{
				jule::Ptr<_1a3b69e4a_SlicingExprModel> _3818_sem = (*((*(_37527_a))._field_Right))._field_Model.unsafe_cast_ptr<_1a3b69e4a_SlicingExprModel>();;
				if (_1a3e44411_equalModels((*((*_37527_a.alloc)._field_Left))._field_Model, (*(_3818_sem))._field_Expr)) {
					_1a56470c9_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a3e46622_MutSlicingExprModel>(_1a3e46622_MutSlicingExprModel{._field_Token=(*_3818_sem.alloc)._field_Token, ._field_Expr=(*_3818_sem.alloc)._field_Expr, ._field_Left=(*_3818_sem.alloc)._field_Left, ._field_Right=(*_3818_sem.alloc)._field_Right}), &__jule_any_type122));
					return true;;
				};
			}
		}
		_match_end_1a84977b7:;
	};
	return false;;
}



inline jule::Bool _1a56494c7_strAssign(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb9c47_Assign> _39530_a) {
	if ((!(_1a565c551_Str))) {
		return false;;
	};
	jule::Ptr<_1a3cc3801_Prim> _3993_lp = _1a3cbd378_Prim((*((*(_39530_a))._field_Left))._field_Kind.ptr());;
	if (((_3993_lp == nullptr) || (!(_1a3cc6c88_IsStr(_3993_lp.ptr()))))) {
		return false;;
	};
	return _1a5649186_substr(_self_, _39530_a);;
}



inline jule::Bool _1a5649818_sliceAssign(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb9c47_Assign> _40632_a) {
	if (((!(_1a565c7e8_Slice)) || (_1a3cbe3ce_Slc((*((*(_40632_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1a5649186_substr(_self_, _40632_a);;
}



inline void _1a5649ac1_optimizePostfix(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb9791_Postfix> _41436_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1a5659bbe_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_41436_postfix))._field_Expr);
	};
	static__1a564da2b_optimizeData(&((*_41436_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1a5649d79_optimizeAssign(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb9c47_Assign> _42135_assign) {
	if ((((*((*(_42135_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1a3e44411_equalModels((*((*_42135_assign.alloc)._field_Left))._field_Model, (*((*_42135_assign.alloc)._field_Right))._field_Model))) {
		_1a56472c7_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1a5659e88_isBoundaryRiskyType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
			_1a5659bbe_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
		if (_1a3e4a3e5_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_42135_assign))._field_Right.alloc)._field_Model)) {
			if (_1a3e4a6ae_isNilValidType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
				;
				_1a3e494b0_pushVar((*((*(_self_))._field_data))._field_nils, _1a3e4aa00_getNilVar((*(*(_42135_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1a3e4a02c_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1a3cbac27_TypeKind> _4458_kind = _1a56552a2_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_42135_assign))._field_Right.alloc)._field_Kind, (*(*(_42135_assign))._field_Right.alloc)._field_Model);;
		if ((_4458_kind != nullptr)) {
			if (_1a5654d73_isDynamicValidType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
				_1a5653e3d_pushVar((*((*(_self_))._field_data))._field_dynamic, _1a56555e3_getDynamicVar((*(*(_42135_assign))._field_Left.alloc)._field_Model), _4458_kind);
			};
		} else {
			_1a5654a65_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1a56494c7_strAssign(_self_, _42135_assign) || _1a5649818_sliceAssign(_self_, _42135_assign)) {
			_case_begin_1a84aa81e:;
			{
				return;;
			}
		}
		_match_end_1a84a8ae7:;
	};
	static__1a564da2b_optimizeData(&((*(*(_42135_assign))._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1a564da2b_optimizeData(&((*(*(_42135_assign))._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1a84ac755:;
			{
				if (((!(_1a565b62c_Math)) || (_1a3cbe8eb_Struct((*(*(_42135_assign))._field_Left.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1a84ac6de;
				};
				jule::U64 _4714_oldId;
				jule::Str _47111_oldKind;
				({
					jule::U64 ___jule_assign_arg = (*(*(_42135_assign))._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_42135_assign))._field_Op.alloc)._field_Kind;
					_4714_oldId = ___jule_assign_arg;
					_47111_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1a84b0505:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(63LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=jule::Str::lit("/", 1);
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1a84b056b:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(64LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=jule::Str::lit("%", 1);
						}
					}
					else {
						_case_begin_1a84aeca7:;
						{
							jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:480:5"));;
						}
					}
					_match_end_1a84b00c6:;
				};
				jule::Ptr<_1a3b66221_BinaryExprModel> _4828_b = jule::new_ptr<_1a3b66221_BinaryExprModel>(_1a3b66221_BinaryExprModel{._field_Left=(*_42135_assign.alloc)._field_Left, ._field_Right=(*_42135_assign.alloc)._field_Right, ._field_Op=(*_42135_assign.alloc)._field_Op});;
				jule::Any _4878_model = jule::Any(_4828_b, &__jule_any_type111);;
				static__1a564da2b_optimizeData(&(_4878_model), &((*_self_.alloc)._field_data));
				{
					auto &_match_expr{ (*(((jule::Any*)((&(_4878_model)))))) };
					
					if (_match_expr.type == &__jule_any_type123) {
						_case_begin_1a84b410d:;
						{
							(*_42135_assign.alloc)._field_Right=jule::new_ptr<_1a3b65c26_OperandExprModel>((*(*(_42135_assign))._field_Right.alloc));
							(*(_4828_b))._field_Op=jule::new_ptr<_1a3b27a62_Token>((*(*(_4828_b))._field_Op.alloc));
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(71LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=jule::Str::lit("=", 1);
							(*(*(_42135_assign))._field_Right.alloc)._field_Model=_4878_model;
							return;;
						}
					}
					_match_end_1a84b4086:;
				};
				(*(*(_42135_assign))._field_Op.alloc)._field_Id=_4714_oldId;
				(*(*(_42135_assign))._field_Op.alloc)._field_Kind=_47111_oldKind;
				return;;
			}
		}
		_match_end_1a84ac6de:;
	};
	if (_1a565b330_Append) {
		{
			auto &_match_expr{ (*((*(_42135_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type25) {
				_case_begin_1aa1dcbd1:;
				{
					jule::Ptr<_1a3b6d778_BuiltinAppendCallExprModel> _5089_m = (*(*(_42135_assign))._field_Right.alloc)._field_Model.cast_ptr<_1a3b6d778_BuiltinAppendCallExprModel>(&__jule_any_type25);;
					if ((!(_1a5652898_areSameLvalueExprModel(&((*(*(_42135_assign))._field_Left.alloc)._field_Model), &((*(_5089_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5089_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type77) {
							_case_begin_1aa1de1cc:;
							{
								_1a56470c9_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a3e4717d_PushToSliceExprModel>(_1a3e4717d_PushToSliceExprModel{._field_Dest=(*_5089_m.alloc)._field_Dest, ._field_Elems=(*(_5089_m))._field_Elements.unsafe_cast_ptr<_1a3b685ca_SliceExprModel>()}), &__jule_any_type124));
							}
						}
						else {
							_case_begin_1aa1de9c4:;
							{
								_1a56470c9_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a3e47557_AppendToSliceExprModel>(_1a3e47557_AppendToSliceExprModel{._field_Dest=(*(*(_42135_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*_5089_m.alloc)._field_Elements}), &__jule_any_type125));
							}
						}
						_match_end_1aa1de96e:;
					};
				}
			}
			_match_end_1aa1dcb6a:;
		};
	};
}



inline jule::Bool _1a564a1ba_tryOptimizeSwap(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bba1ed_MultiAssign>* _53037_assign) {
	if (((((!(_1a565caa1_Assign)) || ((*((*(_53037_assign))))._field_Left.len() != 2LL)) || ((*((*(_53037_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_53037_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a3b6b8db_TupleExprModel> _53511_tup;;
	{
		auto &_match_expr{ (*((*(_53037_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1aa1e39d9:;
			{
				_53511_tup=(*((*(_53037_assign))))._field_Right.unsafe_cast_ptr<_1a3b6b8db_TupleExprModel>();
			}
		}
		_match_end_1aa1e3973:;
	};
	if (((_53511_tup == nullptr) || ((*(_53511_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1a3e44411_equalModels((*((*((*(_53037_assign))))._field_Left[0LL]))._field_Model, (*((*(_53511_tup))._field_Datas[0LL]))._field_Model) && _1a3e44411_equalModels((*((*((*(_53037_assign))))._field_Left[1LL]))._field_Model, (*((*(_53511_tup))._field_Datas[1LL]))._field_Model))) {
		_1a56472c7_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1a3e44411_equalModels((*((*((*(_53037_assign))))._field_Left[0LL]))._field_Model, (*((*(_53511_tup))._field_Datas[1LL]))._field_Model))) || (!(_1a3e44411_equalModels((*((*((*(_53037_assign))))._field_Left[1LL]))._field_Model, (*((*(_53511_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1a3e453bd_SwapExprModel> _5577_model = jule::new_ptr<_1a3e453bd_SwapExprModel>(_1a3e453bd_SwapExprModel{._field_Left=(*((*(_53037_assign))))._field_Left[0LL], ._field_Right=(*((*(_53037_assign))))._field_Left[1LL]});;
	static__1a564da2b_optimizeData(&((*((*(_5577_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1a564da2b_optimizeData(&((*((*_5577_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1a56470c9_setCurrentStmt(_self_, jule::Any(_5577_model, &__jule_any_type126));
	return true;;
}



inline void _1a564a473_optimizeMultiAssign(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bba1ed_MultiAssign> _56740_assign) {
	if (_1a564a1ba_tryOptimizeSwap(_self_, &(_56740_assign))) {
		return;;
	};
	jule::Ptr<_1a3b6b8db_TupleExprModel> _5747_tup = static_cast<jule::Ptr<_1a3b6b8db_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_56740_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1aa1ec4d7:;
			{
				_5747_tup=(*(_56740_assign))._field_Right.unsafe_cast_ptr<_1a3b6b8db_TupleExprModel>();
			}
		}
		_match_end_1aa1ec471:;
	};
	{
		auto expr = &((*(_56740_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1eb618:;
		if (it != expr_end) {
			jule::I64 _5798_i = it - expr->begin();
			jule::Ptr<_1a3c8982d_Data> _57915_l = *it;
			{
				if ((_57915_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1a5659e88_isBoundaryRiskyType((*_57915_l.alloc)._field_Kind)) {
							_1a5659bbe_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*_57915_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_5747_tup != nullptr) && _1a3e4a3e5_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_5747_tup.alloc)._field_Datas[_5798_i]))._field_Model))) {
							if (_1a3e4a6ae_isNilValidType((*_57915_l.alloc)._field_Kind)) {
								;
								_1a3e494b0_pushVar((*((*(_self_))._field_data))._field_nils, _1a3e4aa00_getNilVar((*_57915_l.alloc)._field_Model), true);
							};
						} else {
							_1a3e4a02c_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*_57915_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_5747_tup != nullptr))) {
						jule::Ptr<_1a3cbac27_TypeKind> _59710_kind = _1a56552a2_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_5747_tup.alloc)._field_Datas[_5798_i]))._field_Kind, (*((*(_5747_tup))._field_Datas[_5798_i]))._field_Model);;
						if ((_59710_kind != nullptr)) {
							if (_1a5654d73_isDynamicValidType((*_57915_l.alloc)._field_Kind)) {
								_1a5653e3d_pushVar((*((*(_self_))._field_data))._field_dynamic, _1a56555e3_getDynamicVar((*_57915_l.alloc)._field_Model), _59710_kind);
							};
						} else {
							_1a5654a65_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*_57915_l.alloc)._field_Model);
						};
					};
					static__1a564da2b_optimizeData(&((*_57915_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1aa1eb618:;
			++it;
			_5798_i++;
			goto _iter_begin_1aa1eb618;
		}
		_iter_end_1aa1eb618:;
	};
	static__1a564da2b_optimizeData(&((*_56740_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1a564a72b_optimizeRet(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bbbe25_RetSt> _61332_r) {
	static__1a564da2b_optimizeData(&((*(_61332_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1a565cd59_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_61332_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aa208317:;
			{
				goto _match_end_1aa20867a;
			}
		}
		else {
			_case_begin_1aa2086d0:;
			{
				return;;
			}
		}
		_match_end_1aa20867a:;
	};
	jule::Ptr<_1a3b68201_FnCallExprModel> _6277_fc = (*_61332_r.alloc)._field_Expr.cast_ptr<_1a3b68201_FnCallExprModel>(&__jule_any_type33);;
	if (((((!((*((*((*(_6277_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_6277_fc.alloc)._field_Except == nullptr)) || ((*((*_6277_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1a56408b9_IsForwarded(&((*_6277_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1a56470c9_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a3e45049_ExceptionalForwardingExprModel>(_1a3e45049_ExceptionalForwardingExprModel{._field_Expr=_6277_fc}), &__jule_any_type120));
}



inline void _1a564a9d4_optimizeStmt(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Any _63733_stmt) {
	{
		auto &_match_expr{ _63733_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1aa20bb23:;
			{
				_1a564ac8c_optimizeChild(_self_, _63733_stmt.cast_ptr<_1a3bb664a_Scope>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aa20b86a:;
			{
				_1a5647a9c_optimizeData(_self_, _63733_stmt.cast_ptr<_1a3c8982d_Data>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa20bb89:;
			{
				_1a5647d55_optimizeVar(_self_, _63733_stmt.cast_ptr<_1a3c31c26_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1aa20bc00:;
			{
				_1a564810d_optimizeConditional(_self_, _63733_stmt.cast_ptr<_1a3bb7283_Conditional>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1aa20bc66:;
			{
				_1a5648a8c_optimizeRangeIter(_self_, _63733_stmt.cast_ptr<_1a3bb8482_RangeIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1aa20bcdd:;
			{
				_1a5648d45_optimizeWhileIter(_self_, _63733_stmt.cast_ptr<_1a3bb7a36_WhileIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1aa20bd65:;
			{
				_1a564ac8c_optimizeChild(_self_, (*(_63733_stmt.unsafe_cast_ptr<_1a3bb7580_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1aa20bddc:;
			{
				_1a5649d79_optimizeAssign(_self_, _63733_stmt.cast_ptr<_1a3bb9c47_Assign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1aa20be64:;
			{
				_1a564a473_optimizeMultiAssign(_self_, _63733_stmt.cast_ptr<_1a3bba1ed_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1aa20bedb:;
			{
				_1a56487d4_optimizeMatch(_self_, _63733_stmt.cast_ptr<_1a3bba85d_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1aa20c063:;
			{
				_1a564a72b_optimizeRet(_self_, _63733_stmt.cast_ptr<_1a3bbbe25_RetSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aa20c0da:;
			{
				_1a5649ac1_optimizePostfix(_self_, _63733_stmt.cast_ptr<_1a3bb9791_Postfix>(&__jule_any_type42));
			}
		}
		_match_end_1aa20b9d0:;
	};
}



inline void _1a564ac8c_optimizeChild(jule::Ptr<_1a564679e_scopeOptimizer> _self_, jule::Ptr<_1a3bb664a_Scope> _66634_child) {
	jule::Ptr<_1a564679e_scopeOptimizer> _6677_so = static__1a5646d21_new(_66634_child);;
	(*(_6677_so))._field_parent=_self_;
	(*_6677_so.alloc)._field_data=(*(_self_))._field_data;
	_1a564ae8a_optimize(_6677_so);
}



inline void _1a564ae8a_optimize(jule::Ptr<_1a564679e_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a564a9d4_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1a984613c:;
	}
	_iter_end_1a984613c:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a564679e_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a564d29a_exprOptimizer_eq(_1a564d29a_exprOptimizer *_self_, _1a564d29a_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector);
}

inline void static__1a564d740_optimize(jule::Any* _3626_model) {
	static__1a564da2b_optimizeData(_3626_model, &(_1a5655c64_emptyData));
}



inline void static__1a564da2b_optimizeData(jule::Any* _4030_model, jule::Ptr<_1a565665a_data>* _4053_d) {
	if (_1a513910a_exprEnabled) {
		jule::Ptr<_1a564d29a_exprOptimizer> _438_exop = jule::new_ptr<_1a564d29a_exprOptimizer>(_1a564d29a_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_4030_model)), ._field_data=(*(_4053_d)), ._field_inspector=static__1a56390ee_New()});;
		_1a565205c_do(_438_exop.ptr());
	};
}



inline jule::Bool _1a564dd6c_selfCmpCond(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66221_BinaryExprModel>* _5228_m) {
	if ((!(_1a3e44411_equalModels((*((*((*(_5228_m))))._field_Left))._field_Model, (*((*((*(_5228_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_5228_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a98542e3:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1b5748671_NewBool(true), &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1a98546de:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1b5748671_NewBool(false), &__jule_any_type19);
				return true;;
			}
		}
		else {
			_case_begin_1a98531b0:;
			{
				return false;;
			}
		}
		_match_end_1a985427c:;
	};
}



inline jule::Bool _1a564e1ad_boolCond(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66221_BinaryExprModel>* _7625_m) {
	jule::Ptr<_1a3cc3801_Prim> _773_lp = _1a3cbd378_Prim((*((*((*(_7625_m))))._field_Left))._field_Kind.ptr());;
	if (((_773_lp == nullptr) || (!(_1a3cc6a02_IsBool(_773_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_7625_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a9858a9a:;
			{
				std::swap((*((*(_7625_m))))._field_Left, (*((*(_7625_m))))._field_Right);
			}
		}
		else {
			_case_begin_1a9857ca8:;
			{
				{
					auto &_match_expr{ (*((*((*(_7625_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1a9857093:;
						{
							goto _match_end_1a98585c2;
						}
					}
					else {
						_case_begin_1a9858627:;
						{
							return false;;
						}
					}
					_match_end_1a98585c2:;
				};
			}
		}
		_match_end_1a9857c53:;
	};
	jule::Ptr<_1b5747b9d_Const> _947_c = (*((*((*(_7625_m))))._field_Right))._field_Model.cast_ptr<_1b5747b9d_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*((*(_7625_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1a985a6b2:;
			{
				if (_1b5749a90_ReadBool(_947_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_7625_m))))._field_Left.alloc)._field_Model;
				} else {
					_1b574b179_SetBool(_947_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_947_c, &__jule_any_type19);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1a985a75b:;
			{
				if (_1b5749a90_ReadBool(_947_c.ptr())) {
					_1b574b179_SetBool(_947_c, true);
					(*((*(_self_))._field_model))=jule::Any(_947_c, &__jule_any_type19);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_7625_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1a9858825:;
		}
		_match_end_1a985a63a:;
	};
	return false;;
}



inline jule::Bool _1a564e4ee_strCond(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66221_BinaryExprModel> _12923_m) {
	jule::Ptr<_1a3cc3801_Prim> _1303_lp = _1a3cbd378_Prim((*((*(_12923_m))._field_Left))._field_Kind.ptr());;
	if (((_1303_lp == nullptr) || (!(_1a3cc6c88_IsStr(_1303_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_12923_m.alloc)._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*(*(_12923_m))._field_Op.alloc)._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_12923_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a98622bd:;
			{
				std::swap((*_12923_m.alloc)._field_Left, (*_12923_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1a98614cb:;
			{
				{
					auto &_match_expr{ (*((*(_12923_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1a9860046:;
						{
							goto _match_end_1a9861ce5;
						}
					}
					else {
						_case_begin_1a9861d4a:;
						{
							return false;;
						}
					}
					_match_end_1a9861ce5:;
				};
			}
		}
		_match_end_1a9861476:;
	};
	jule::Ptr<_1b5747b9d_Const> _1507_c = (*((*_12923_m.alloc)._field_Right))._field_Model.cast_ptr<_1b5747b9d_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_12923_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1a9862059:;
			{
				if ((_1b5749d26_ReadStr(_1507_c.ptr())).empty()) {
					jule::Any _1549_model = jule::Any(jule::new_ptr<_1a3e45797_EmptyCompareExprModel>(_1a3e45797_EmptyCompareExprModel{._field_Expr=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1549_model))))));
					goto _match_end_1a9863ce7;
				};
				jule::Any _1618_model = jule::Any(jule::new_ptr<_1a3e4608e_StrCompExprModel>(_1a3e4608e_StrCompExprModel{._field_Left=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Right=_1507_c, ._field_NotEq=false}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1618_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a9863d91:;
			{
				if ((_1b5749d26_ReadStr(_1507_c.ptr())).empty()) {
					jule::Any _1699_model = jule::Any(jule::new_ptr<_1a3e45797_EmptyCompareExprModel>(_1a3e45797_EmptyCompareExprModel{._field_Expr=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1699_model))))));
					goto _match_end_1a9863ce7;
				};
				jule::Any _1768_model = jule::Any(jule::new_ptr<_1a3e4608e_StrCompExprModel>(_1a3e4608e_StrCompExprModel{._field_Left=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Right=_1507_c, ._field_NotEq=true}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1768_model))))));
			}
		}
		_match_end_1a9863ce7:;
	};
	return true;;
}



inline jule::Bool _1a564e9a5_tryNeutralElement1(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66221_BinaryExprModel>* _18635_m, jule::Ptr<_1b5747b9d_Const> _18660_c, jule::Ptr<_1a3b65c26_OperandExprModel>* _18672_nc) {
	if (_1b574c422_IsStr(_18660_c.ptr())) {
		if ((!(_1a565c551_Str))) {
			return false;;
		};
		if (((_1b5749d26_ReadStr(_18660_c.ptr())).empty() && ((*((*((*(_18635_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_18672_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1a565b62c_Math)) || (_1b574a860_AsF64(_18660_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_18635_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a986c98d:;
			{
				if (((*(_18672_nc)) == (*((*(_18635_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_18672_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_18660_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a986d64d:;
			{
				_1b574ab18_SetI64(_18660_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_18660_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1a986d6b4:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_18672_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1a986d51b:;
	};
	return false;;
}



inline jule::Bool _1a564ece6_tryNeutralElement(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66221_BinaryExprModel>* _23034_m) {
	{
		auto &_match_expr{ (*((*((*(_23034_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a9871b3a:;
			{
				jule::Ptr<_1b5747b9d_Const> _2348_c = (*((*((*(_23034_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1b5747b9d_Const>();;
				return _1a564e9a5_tryNeutralElement1(_self_, _23034_m, _2348_c, &((*((*(_23034_m))))._field_Right));;
			}
		}
		_match_end_1a9871ac4:;
	};
	{
		auto &_match_expr{ (*((*((*(_23034_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a98720ad:;
			{
				jule::Ptr<_1b5747b9d_Const> _2398_c = (*((*((*(_23034_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1b5747b9d_Const>();;
				return _1a564e9a5_tryNeutralElement1(_self_, _23034_m, _2398_c, &((*((*(_23034_m))))._field_Left));;
			}
		}
		_match_end_1a9872047:;
	};
	return false;;
}



inline void _1a565009e_checkBinaryForBoundary(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66221_BinaryExprModel>* _24539_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_24539_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a9875556:;
			{
				jule::Ptr<_1a3b6da75_BuiltinLenCallExprModel> _2518_blc = (*((*((*(_24539_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1a3b6da75_BuiltinLenCallExprModel>();;
				if ((!(_1a565a252_isBoundaryValidType((*((*(_2518_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_24539_m))))._field_Op))._field_Id != static_cast<jule::U64>(70LLU)) && ((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24539_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24539_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1a98787bd:;
							{
								jule::Ptr<_1b5747b9d_Const> _26310_c = jule::new_ptr<_1b5747b9d_Const>((*((*((*((*(_24539_m))))._field_Right))._field_Model.cast_ptr<_1b5747b9d_Const>(&__jule_any_type19))));;
								_1b574ebe9_Sub(_26310_c, (*(static__1b57480dd_NewI64(1LL))));
								_1a565854c_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a565a51b_getBoundaryVar((*(*(_2518_blc))._field_Expr.alloc)._field_Model), jule::Any(_26310_c, &__jule_any_type19));
							}
						}
						_match_end_1a9878757:;
					};
					return;;
				};
				_1a565854c_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a565a51b_getBoundaryVar((*(*(_2518_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24539_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1a98754e0:;
	};
	{
		auto &_match_expr{ (*((*((*(_24539_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a9875ac8:;
			{
				jule::Ptr<_1a3b6da75_BuiltinLenCallExprModel> _2748_blc = (*((*((*(_24539_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1a3b6da75_BuiltinLenCallExprModel>();;
				if ((!(_1a565a252_isBoundaryValidType((*(*(_2748_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(69LLU)) && ((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24539_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24539_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1a9880242:;
							{
								jule::Ptr<_1b5747b9d_Const> _28610_c = jule::new_ptr<_1b5747b9d_Const>((*((*((*((*(_24539_m))))._field_Left))._field_Model.cast_ptr<_1b5747b9d_Const>(&__jule_any_type19))));;
								_1b574ebe9_Sub(_28610_c, (*(static__1b57480dd_NewI64(1LL))));
								_1a565854c_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a565a51b_getBoundaryVar((*(*(_2748_blc))._field_Expr.alloc)._field_Model), jule::Any(_28610_c, &__jule_any_type19));
							}
						}
						_match_end_1a98801cb:;
					};
					return;;
				};
				_1a565854c_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a565a51b_getBoundaryVar((*(*(_2748_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24539_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1a9875a62:;
	};
}



inline void _1a5650357_checkBinaryForNil(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66221_BinaryExprModel>* _29734_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _3017_var = _1a3e4aa00_getNilVar((*((*((*(_29734_m))))._field_Left))._field_Model);;
	if ((_3017_var != 0LLU)) {
		if ((!(_1a3e4a6ae_isNilValidType((*(*((*(_29734_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29734_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1a9885a94:;
				{
					_1a3e494b0_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3017_var, ((*((*((*(_29734_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1a9885a2d:;
		};
		return;;
	};
	_3017_var=_1a3e4aa00_getNilVar((*((*((*(_29734_m))))._field_Right))._field_Model);
	if ((_3017_var != 0LLU)) {
		if ((!(_1a3e4a6ae_isNilValidType((*(*((*(_29734_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29734_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1a9888239:;
				{
					_1a3e494b0_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3017_var, ((*(*((*(_29734_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1a98881c3:;
		};
		return;;
	};
}



inline void _1a5650610_binary(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66221_BinaryExprModel> _32922_m) {
	_1a565009e_checkBinaryForBoundary(_self_, &(_32922_m));
	_1a5650357_checkBinaryForNil(_self_, &(_32922_m));
	if (_1a565c30e_Cond) {
		{
			
			if (_1a564e4ee_strCond(_self_, _32922_m) || _1a564e1ad_boolCond(_self_, &(_32922_m)) || _1a564dd6c_selfCmpCond(_self_, &(_32922_m))) {
				_case_begin_1a988a15e:;
				{
					return;;
				}
			}
			_match_end_1a988a03d:;
		};
	};
	if (_1a564ece6_tryNeutralElement(_self_, &(_32922_m))) {
		return;;
	};
	if ((!(_1a565b62c_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32922_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a988ae95:;
			{
				goto _match_end_1a988b35d;
			}
		}
		else {
			_case_begin_1a988b3b3:;
			{
				return;;
			}
		}
		_match_end_1a988b35d:;
	};
	jule::Ptr<_1a3cc3801_Prim> _3623_lp = _1a3cbd378_Prim((*((*(_32922_m))._field_Left))._field_Kind.ptr());;
	if ((_3623_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3cc3801_Prim> _3663_rp = _1a3cbd378_Prim((*((*(_32922_m))._field_Right))._field_Kind);;
	if ((_3663_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32922_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a988e163:;
			{
				jule::Bool _3734_ok;
				jule::U64 _3738_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a56524d0_checkForBitShiftOpt(&((*_32922_m.alloc)._field_Left), &((*_32922_m.alloc)._field_Right));
					_3734_ok = __jule_assign_result.__jule_result_arg0;
					_3738_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3734_ok) {
					(*((*_32922_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_1b5747b9d_Const> _3779_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1b5747b9d_Const>(&__jule_any_type19);;
					_1b574adc1_SetU64(_3779_c.ptr(), _3738_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1a988dc67:;
			{
				jule::Bool _3844_ok;
				jule::U64 _3848_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a56524d0_checkForBitShiftOpt(&((*_32922_m.alloc)._field_Left), &((*_32922_m.alloc)._field_Right));
					_3844_ok = __jule_assign_result.__jule_result_arg0;
					_3848_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3844_ok) {
					(*((*_32922_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_1b5747b9d_Const> _3889_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1b5747b9d_Const>(&__jule_any_type19);;
					_1b574adc1_SetU64(_3889_c.ptr(), _3848_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a988dcde:;
			{
				jule::Ptr<_1b5747b9d_Const> _3958_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1b5747b9d_Const>(&__jule_any_type19);;
				if ((_1b574a860_AsF64(_3958_c.ptr()) == 2LL)) {
					(*((*_32922_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=jule::Str::lit("&", 1);
					_1b574ab18_SetI64(_3958_c, 1LL);
					return;;
				};
			}
		}
		else {
			_case_begin_1a988d89e:;
			{
				return;;
			}
		}
		_match_end_1a988dc01:;
	};
	jule::Any _4107_model = jule::Any(jule::new_ptr<_1a3e4691e_UnsafeBinaryExprModel>(_1a3e4691e_UnsafeBinaryExprModel{._field_Node=_32922_m}), &__jule_any_type123);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4107_model))))));
}



inline void _1a56508b8_unary(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b665ea_UnaryExprModel> _41421_m) {
	if ((!(_1a565be46_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_41421_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a9897ca4:;
			{
				{
					auto &_match_expr{ (*((*(_41421_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1a98990d5:;
						{
							jule::Ptr<_1a3b665ea_UnaryExprModel> _4229_um = (*((*(_41421_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a3b665ea_UnaryExprModel>();;
							if (((*((*(_4229_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_4229_um.alloc)._field_Expr))._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1a989906e:;
				};
				if ((!(_1a565b8d5_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1a3e4a6ae_isNilValidType((*(*(_41421_m))._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _4365_var = _1a3e4aa00_getNilVar((*(*(_41421_m))._field_Expr.alloc)._field_Model);;
					if (_1a3e49b42_isSafe((*((*(_self_))._field_data))._field_nils, _4365_var)) {
						jule::Any _43810_model = jule::Any(jule::new_ptr<_1a3e47c2d_UnsafeDerefExprModel>(_1a3e47c2d_UnsafeDerefExprModel{._field_Base=_41421_m}), &__jule_any_type129);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_43810_model))))));
						return;;
					};
					_1a3e494b0_pushVar((*((*(_self_))._field_data))._field_nils, _4365_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a9898414:;
			{
				{
					auto &_match_expr{ (*((*(_41421_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1a989ead0:;
						{
							jule::Ptr<_1a3c31c26_Var> _4489_v = (*((*(_41421_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a3c31c26_Var>();;
							if ((*(_4489_v))._field_Reference) {
								jule::Any _45010_model = jule::Any(jule::new_ptr<_1a3e45b1b_RefExprModel>(_1a3e45b1b_RefExprModel{._field_Var=_4489_v}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_45010_model))))));
							};
						}
					}
					_match_end_1a989ea69:;
				};
			}
		}
		_match_end_1a989836a:;
	};
}



inline void _1a5650b71_structureLit(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b66ebe_StructLitExprModel> _45728_m) {
	{
		auto expr = &((*(_45728_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a989ee76:;
		if (it != expr_end) {
			jule::Ptr<_1a3b66b28_StructArgExprModel> _45815_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1a5659e88_isBoundaryRiskyType((*((*(_45815_arg))._field_Expr))._field_Kind)) {
						_1a5659bbe_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_45815_arg, &__jule_any_type131));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1a3e4a02c_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_45815_arg))._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1a5654a65_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_45815_arg))._field_Expr.alloc)._field_Model);
				};
			}
			_iter_next_1a989ee76:;
			++it;
			goto _iter_begin_1a989ee76;
		}
		_iter_end_1a989ee76:;
	};
}



inline void _1a5650e29_casting(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b6784e_CastingExprModel> _47323_m) {
	jule::Bool _4743_valid = _1a5654d73_isDynamicValidType((*(_47323_m))._field_ExprKind);;
	jule::Uintptr _4753_var = _1a56555e3_getDynamicVar((*((*_47323_m.alloc)._field_Expr))._field_Model);;
	if (((_4743_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1a565467a_isFits((*((*(_self_))._field_data))._field_dynamic, _4753_var, (*_47323_m.alloc)._field_Kind))) {
		jule::Any _4778_model = jule::Any(jule::new_ptr<_1a3e4802a_UnsafeCastingExprModel>(_1a3e4802a_UnsafeCastingExprModel{._field_Base=_47323_m}), &__jule_any_type132);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4778_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _4743_valid)) {
		_1a5653e3d_pushVar((*((*(_self_))._field_data))._field_dynamic, _4753_var, (*_47323_m.alloc)._field_Kind);
	};
}



inline void _1a565128c_args(_1a564d29a_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a3b76055_ParamIns>> _48720_params, jule::Slice<jule::Any>* _48746_args) {
	{
		auto expr = _48746_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a98a9e4d:;
		if (it != expr_end) {
			jule::I64 _4888_i = it - expr->begin();
			jule::Any _48815_arg = *it;
			{
				if ((_4888_i >= _48720_params.len())) {
					goto _iter_next_1a98a9e4d;
				};
				jule::Ptr<_1a3b76055_ParamIns> _4928_p = _48720_params[_4888_i];;
				if (((*((*(_4928_p))._field_Decl))._field_Mutable && (*(*(_4928_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1a5659e88_isBoundaryRiskyType((*_4928_p.alloc)._field_Kind)) {
							_1a5659bbe_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _48815_arg);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						_1a3e4a02c_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _48815_arg);
					};
					if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
						_1a5654a65_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _48815_arg);
					};
				};
			}
			_iter_next_1a98a9e4d:;
			++it;
			_4888_i++;
			goto _iter_begin_1a98a9e4d;
		}
		_iter_end_1a98a9e4d:;
	};
}



inline void _1a5651545_scope(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3bb664a_Scope>* _50922_s) {
	jule::Ptr<_1a564679e_scopeOptimizer> _5107_scopt = static__1a5646d21_new((*(_50922_s)));;
	(*(_5107_scopt))._field_data=(*(_self_))._field_data;
	_1a564ae8a_optimize(_5107_scopt);
}



inline void _1a56517ed_funcCall(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b68201_FnCallExprModel> _51524_m) {
	_1a565128c_args(_self_, (*((*(_51524_m))._field_Func))._field_Params, &((*_51524_m.alloc)._field_Args));
	if (((*_51524_m.alloc)._field_Except != nullptr)) {
		_1a5651545_scope(_self_, &((*_51524_m.alloc)._field_Except));
	};
}



inline void _1a5651aa6_indexing(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b68a81_IndexingExprModel> _52224_m) {
	if ((!(_1a565b8d5_Access))) {
		return;;
	};
	jule::Bool _5273_array = (_1a3cbe148_Arr((*((*(_52224_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_5273_array && _1a3c8a235_IsConst((*_52224_m.alloc)._field_Index.ptr()))) {
		jule::Any _5308_model = jule::Any(jule::new_ptr<_1a3e46ca4_UnsafeIndexingExprModel>(_1a3e46ca4_UnsafeIndexingExprModel{._field_Node=_52224_m}), &__jule_any_type133);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5308_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1a565a252_isBoundaryValidType((*(*(_52224_m))._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _5364_var = _1a565a51b_getBoundaryVar((*(*(_52224_m))._field_Expr.alloc)._field_Model);;
		if (_1a5658c89_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _5364_var, (*(*(_52224_m))._field_Index.alloc)._field_Model)) {
			jule::Any _5389_model = jule::Any(jule::new_ptr<_1a3e46ca4_UnsafeIndexingExprModel>(_1a3e46ca4_UnsafeIndexingExprModel{._field_Node=_52224_m}), &__jule_any_type133);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5389_model))))));
			return;;
		};
		_1a565854c_pushVar((*((*(_self_))._field_data))._field_boundary, _5364_var, (*(*(_52224_m))._field_Index.alloc)._field_Model);
	};
}



inline void _1a5651d5e_anonFunc(_1a564d29a_exprOptimizer* _self_, jule::Ptr<_1a3b69037_AnonFnExprModel> _54624_m) {
	_1a5651545_scope(_self_, &((*((*(_54624_m))._field_Func))._field_Scope));
}



inline void _1a565205c_do(_1a564d29a_exprOptimizer* _self_) {
	_1a56399c3_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1a98b91d2, jule::Ptr<__jule_anon_1a98b91d2_ctx>::make(__jule_anon_1a98b91d2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a98b91d2_ctx_handler));
}





std::ostream &operator<<(std::ostream &_Stream, _1a564d29a_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "inspector:" << _Src._field_inspector;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a565368a_dynamicVar_eq(_1a565368a_dynamicVar *_self_, _1a565368a_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1a565368a_dynamicVar _Src) {
	_Stream << "dynamicVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline void _1a5653e3d_pushVar(jule::Ptr<_1a56539cb_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1a3cbac27_TypeKind> _3242_kind) {
	if (((!(_1a565d3ba_Dynamic)) || (_3224_var == 0LLU))) {
		return;;
	};
	_3242_kind=_1a56552a2_isTypeGuaranteedDynamicData(&(_self_), _3242_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a98c8851:;
		if (it != expr_end) {
			_1a565368a_dynamicVar _3815_v = *it;
			{
				if ((_3815_v._field_var == _3224_var)) {
					_3815_v._field_kind=_3242_kind;
					return;;
				};
			}
			_iter_next_1a98c8851:;
			++it;
			goto _iter_begin_1a98c8851;
		}
		_iter_end_1a98c8851:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a98c9313:;
		if (it != expr_end) {
			_1a565368a_dynamicVar _4515_v = *it;
			{
				if ((_4515_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _3224_var;
						jule::Ptr<_1a3cbac27_TypeKind> _1___jule_assign_arg = _3242_kind;
						_4515_v._field_var = ___jule_assign_arg;
						_4515_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1a98c9313:;
			++it;
			goto _iter_begin_1a98c9313;
		}
		_iter_end_1a98c9313:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,jule::Slice<_1a565368a_dynamicVar>::make({_1a565368a_dynamicVar{._field_var=_3224_var, ._field_kind=_3242_kind}}));
}



inline jule::Bool _1a565427e_removeVar(_1a56539cb_dynamic* _self_, jule::Uintptr _5525_var) {
	if ((_5525_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a98cb4be:;
			if (it != expr_end) {
				_1a565368a_dynamicVar _5716_v = *it;
				{
					if ((_5716_v._field_var == _5525_var)) {
						_5716_v._field_var=0LLU;
						_5716_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1a98cb4be:;
				++it;
				goto _iter_begin_1a98cb4be;
			}
			_iter_end_1a98cb4be:;
		};
	};
	return false;;
}



inline jule::Bool _1a565467a_isFits(_1a56539cb_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1a3cbac27_TypeKind> _6936_kind) {
	if ((_6922_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a98ccd50:;
			if (it != expr_end) {
				_1a565368a_dynamicVar _7111_v = *it;
				{
					if ((_7111_v._field_var == _6922_var)) {
						return ((_7111_v._field_kind != nullptr) && _1a3cbb431_Equal(_7111_v._field_kind, _6936_kind));;
					};
				}
				_iter_next_1a98ccd50:;
				++it;
				goto _iter_begin_1a98ccd50;
			}
			_iter_end_1a98ccd50:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a56539cb_dynamic _Src) {
	_Stream << "dynamic{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a565665a_data_eq(_1a565665a_data *_self_, _1a565665a_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}

inline _1a5656160_dataCheckpoint _1a56569ce_getCheckpoint(_1a565665a_data* _self_) {
	_1a5656160_dataCheckpoint _257_c = _1a5656160_dataCheckpoint{};;
	_257_c._field_boundary._field_vars=jule::append(jule::Slice<_1a5657c99_boundaryVar>::alloc(0LL, 0LL),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_257_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a98cec20:;
		if (it != expr_end) {
			jule::I64 _277_i = it - expr->begin();
			{
				_257_c._field_boundary._field_vars[_277_i]._field_maxSize=jule::append(jule::Slice<jule::Any>::alloc(0LL, 0LL, jule::Any(nullptr)),_257_c._field_boundary._field_vars[_277_i]._field_maxSize);
			}
			_iter_next_1a98cec20:;
			++it;
			_277_i++;
			goto _iter_begin_1a98cec20;
		}
		_iter_end_1a98cec20:;
	};
	_257_c._field_nils._field_vars=jule::append(jule::Slice<_1a3e48c0c_nilVar>::alloc(0LL, 0LL),(*((*(_self_))._field_nils))._field_vars);
	_257_c._field_dynamic._field_vars=jule::append(jule::Slice<_1a565368a_dynamicVar>::alloc(0LL, 0LL),(*((*(_self_))._field_dynamic))._field_vars);
	return _257_c;;
}



inline void _1a5656c87_loadCheckpoint(_1a565665a_data* _self_, _1a5656160_dataCheckpoint* _3535_c) {
	(*((*(_self_))._field_boundary))=(*(_3535_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3535_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3535_c))._field_dynamic;
}





std::ostream &operator<<(std::ostream &_Stream, _1a565665a_data _Src) {
	_Stream << "data{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5657c99_boundaryVar _Src) {
	_Stream << "boundaryVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "maxSize:" << _Src._field_maxSize;
	_Stream << "}";
	return _Stream;
}



inline void _1a565854c_pushVar(_1a56580da_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize) {
	if (((!(_1a565b8d5_Access)) || (_2423_var == 0LLU))) {
		return;;
	};
	if ((!(_1a5659152_isValidBoundaryInfo(_2441_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a98e3d44:;
		if (it != expr_end) {
			_1a5657c99_boundaryVar _3215_v = *it;
			{
				if ((_3215_v._field_var == _2423_var)) {
					{
						auto expr = &(_3215_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a98e4aae:;
						if (it != expr_end) {
							jule::I64 _349_i = it - expr->begin();
							jule::Any _3412_max = *it;
							{
								if (_1a565988e_fitsSize(_2441_maxSize, _3412_max)) {
									_3215_v._field_maxSize[_349_i]=_2441_maxSize;
									return;;
								};
							}
							_iter_next_1a98e4aae:;
							++it;
							_349_i++;
							goto _iter_begin_1a98e4aae;
						}
						_iter_end_1a98e4aae:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3215_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1a98e3d44:;
			++it;
			goto _iter_begin_1a98e3d44;
		}
		_iter_end_1a98e3d44:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a98e4680:;
		if (it != expr_end) {
			_1a5657c99_boundaryVar _4615_v = *it;
			{
				if ((_4615_v._field_var == 0LLU)) {
					_4615_v._field_var=_2423_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4615_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1a98e4680:;
			++it;
			goto _iter_begin_1a98e4680;
		}
		_iter_end_1a98e4680:;
	};
	{ jule::Slice<_1a5657c99_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a5657c99_boundaryVar{._field_var=_2423_var, ._field_maxSize=jule::Slice<jule::Any>::make({_2441_maxSize})}); };
}



inline jule::Bool _1a5658c89_fitsMaxSize(_1a56580da_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr) {
	if ((_7127_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a98e9443:;
			if (it != expr_end) {
				_1a5657c99_boundaryVar _7311_v = *it;
				{
					if ((_7311_v._field_var == _7127_var)) {
						return (_1a565951a_fitsMaxSize(_7311_v._field_maxSize, _7141_expr) != -1LL);;
					};
				}
				_iter_next_1a98e9443:;
				++it;
				goto _iter_begin_1a98e9443;
			}
			_iter_end_1a98e9443:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a56580da_boundary _Src) {
	_Stream << "boundary{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a51395e4_Optimizer_eq(_1a51395e4_Optimizer *_self_, _1a51395e4_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_1a51395e4_Optimizer> static__1a5139a67_New(jule::Ptr<_1a5634c54_IR>* _2621_ir) {
	return jule::new_ptr<_1a51395e4_Optimizer>(_1a51395e4_Optimizer{._field_ir=(*(_2621_ir))});;
}



inline void _1a5139d20_optimizeGlobal(_1a51395e4_Optimizer* _self_, jule::Ptr<_1a3c31c26_Var>* _3235_v) {
	if ((!((*((*(_3235_v))))._field_Binded))) {
		static__1a564d740_optimize(&((*((*((*((*(_3235_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1a513a0c8_optimizeFunction(_1a51395e4_Optimizer* _self_, jule::Ptr<_1a3b740ec_Fn>* _3837_func) {
	if ((*((*(_3837_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3837_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a98ee734:;
		if (it != expr_end) {
			jule::Ptr<_1a3b770cd_FnIns> _4215_ins = *it;
			{
				jule::Ptr<_1a564679e_scopeOptimizer> _438_so = static__1a5646d21_new((*(_4215_ins))._field_Scope);;
				_1a564ae8a_optimize(_438_so);
			}
			_iter_next_1a98ee734:;
			++it;
			goto _iter_begin_1a98ee734;
		}
		_iter_end_1a98ee734:;
	};
}



inline void _1a513a381_optimizeStruct(_1a51395e4_Optimizer* _self_, jule::Ptr<_1a3b5e03d_Struct>* _4835_s) {
	if ((*((*(_4835_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4835_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9900dd9:;
		if (it != expr_end) {
			jule::Ptr<_1a3b61cbb_StructIns> _5215_ins = *it;
			{
				{
					auto expr = &((*(_5215_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a99017d0:;
					if (it != expr_end) {
						jule::Ptr<_1a3b6121b_FieldIns> _5316_f = *it;
						{
							if (((*(_5316_f))._field_Default != nullptr)) {
								static__1a564d740_optimize(&((*(*(_5316_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1a99017d0:;
						++it;
						goto _iter_begin_1a99017d0;
					}
					_iter_end_1a99017d0:;
				};
				{
					auto expr = &((*_5215_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9901c20:;
					if (it != expr_end) {
						jule::Ptr<_1a3b740ec_Fn> _5816_m = *it;
						{
							_1a513a0c8_optimizeFunction(_self_, &(_5816_m));
						}
						_iter_next_1a9901c20:;
						++it;
						goto _iter_begin_1a9901c20;
					}
					_iter_end_1a9901c20:;
				};
			}
			_iter_next_1a9900dd9:;
			++it;
			goto _iter_begin_1a9900dd9;
		}
		_iter_end_1a9900dd9:;
	};
}



inline void _1a513a639_optimizeGlobals(_1a51395e4_Optimizer* _self_, jule::Ptr<_1a3bdb609_Package>* _6436_p) {
	{
		auto expr = &((*((*(_6436_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9903040:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _6515_f = *it;
			{
				{
					auto expr = &((*(_6515_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9903d43:;
					if (it != expr_end) {
						jule::Ptr<_1a3c31c26_Var> _6616_v = *it;
						{
							_1a5139d20_optimizeGlobal(_self_, &(_6616_v));
						}
						_iter_next_1a9903d43:;
						++it;
						goto _iter_begin_1a9903d43;
					}
					_iter_end_1a9903d43:;
				};
			}
			_iter_next_1a9903040:;
			++it;
			goto _iter_begin_1a9903040;
		}
		_iter_end_1a9903040:;
	};
}



inline void _1a513a8e2_optimizeFunctions(_1a51395e4_Optimizer* _self_, jule::Ptr<_1a3bdb609_Package>* _7238_p) {
	{
		auto expr = &((*((*(_7238_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99043c6:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _7315_f = *it;
			{
				{
					auto expr = &((*(_7315_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9905240:;
					if (it != expr_end) {
						jule::Ptr<_1a3b740ec_Fn> _7416_func = *it;
						{
							_1a513a0c8_optimizeFunction(_self_, &(_7416_func));
						}
						_iter_next_1a9905240:;
						++it;
						goto _iter_begin_1a9905240;
					}
					_iter_end_1a9905240:;
				};
			}
			_iter_next_1a99043c6:;
			++it;
			goto _iter_begin_1a99043c6;
		}
		_iter_end_1a99043c6:;
	};
}



inline void _1a513ab9a_optimizeStructs(_1a51395e4_Optimizer* _self_, jule::Ptr<_1a3bdb609_Package>* _8036_p) {
	{
		auto expr = &((*((*(_8036_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99057c3:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _8115_f = *it;
			{
				{
					auto expr = &((*(_8115_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a990663c:;
					if (it != expr_end) {
						jule::Ptr<_1a3b5e03d_Struct> _8216_s = *it;
						{
							_1a513a381_optimizeStruct(_self_, &(_8216_s));
						}
						_iter_next_1a990663c:;
						++it;
						goto _iter_begin_1a990663c;
					}
					_iter_end_1a990663c:;
				};
			}
			_iter_next_1a99057c3:;
			++it;
			goto _iter_begin_1a99057c3;
		}
		_iter_end_1a99057c3:;
	};
}



inline void _1a513ae53_optimizePackage(_1a51395e4_Optimizer* _self_, jule::Ptr<_1a3bdb609_Package>* _8836_p) {
	_1a513a639_optimizeGlobals(_self_, _8836_p);
	_1a513a8e2_optimizeFunctions(_self_, _8836_p);
	_1a513ab9a_optimizeStructs(_self_, _8836_p);
}



inline void _1a513b151_Optimize(_1a51395e4_Optimizer* _self_) {
	_1a513b3e8_detectEnabled();
	if (_1a565b077_Deadcode) {
		_1a5133027_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1a51393e6_scopeEnabled || _1a513910a_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a990862d:;
			if (it != expr_end) {
				jule::Ptr<_1a3bd86d3_ImportInfo> _10416_u = *it;
				{
					if ((!((*(_10416_u))._field_Binded))) {
						_1a513ae53_optimizePackage(_self_, &((*_10416_u.alloc)._field_Package));
					};
				}
				_iter_next_1a990862d:;
				++it;
				goto _iter_begin_1a990862d;
			}
			_iter_end_1a990862d:;
		};
		_1a513ae53_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1a565b077_Deadcode) {
		_1a5137b31_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a51395e4_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a5160a38_AnsiEscape_eq(_1a5160a38_AnsiEscape *_self_, _1a5160a38_AnsiEscape _other_) { return true; }

inline void static__1a513b838_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1a515e8b1_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::out(_1918_escape);
	jule::out(_1931_text);
	static__1a513b838_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1a5160a38_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a51620ab_Logger_eq(_1a51620ab_Logger *_self_, _1a51620ab_Logger _other_) { return true; }

inline void static__1a5162386_LogFlat(_1e7c94ecb_Log* _1421_l) {
	jule::outln((*(_1421_l))._field_Text);
}



inline void static__1a51625b7_LogError(_1e7c94ecb_Log* _1922_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1922_l))._field_Text);
	static__1a513b838_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1922_l))._field_Path);
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1b5739d16_Itoa((*(_1922_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1b5739d16_Itoa((*(_1922_l))._field_Column));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _1e7bd57ac_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_1e7bd4338_Replace(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1), -1LL);
		jule::I64 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _434_row = _1b5739d16_Itoa((*(_1922_l))._field_Row);;
		jule::out(_434_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_388_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_1e7bc876c_Repeat(jule::Str::lit(" ", 1), _434_row.len()));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_1e7bc876c_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset)));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_1e7bc876c_Repeat(jule::Str::lit(" ", 1), _434_row.len()));
			jule::out(jule::Str::lit(" | ", 3));
			static__1a515e8b1_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1922_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1a51627e8_Log(_1e7c94ecb_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1a991247d:;
			{
				static__1a5162386_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1a99155d5:;
			{
				static__1a51625b7_LogError(_6417_l);
			}
		}
		_match_end_1a99154e7:;
	};
}



inline void static__1a5162a29_PrintLogs(jule::Slice<_1e7c94ecb_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99160b9:;
		if (it != expr_end) {
			_1e7c94ecb_Log *_7510_l = it;
			{
				static__1a51627e8_Log(_7510_l);
			}
			_iter_next_1a99160b9:;
			++it;
			goto _iter_begin_1a99160b9;
		}
		_iter_end_1a99160b9:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_1b5739d16_Itoa((*(_7423_logs)).len()));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1a51620ab_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a5da9ab1_AbsTime_eq(_1a5da9ab1_AbsTime *_self_, _1a5da9ab1_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}



std::ostream &operator<<(std::ostream &_Stream, _1a5da9ab1_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a5daa287_Time_eq(_1a5daa287_Time *_self_, _1a5daa287_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _1a5daa287_Time static__1a5daa63e_Unix(jule::U64 _9117_sec) {
	return _1a5daa287_Time{._field_sec=_9117_sec};;
}



inline _1a5daa287_Time static__1a5daa84d_Now(void) {
	return static__1a5daa63e_Unix(_1a5dac377_unix());;
}



inline _1a5da9ab1_AbsTime _1a5dac036_Abs(_1a5daa287_Time* _self_) {
	jule::U64 _1273_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (((_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (365LLU + _1607_leap))) {
		_1647_yDay-=(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_1a5da9022_mdays[static_cast<jule::I64>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_1a5da9022_mdays[static_cast<jule::I64>(_1697_months)];
		}
	_iter_next_1aa3e8a79:;
	}
	_iter_end_1aa3e8a79:;;
	_1a5da9ab1_AbsTime _1747_t = _1a5da9ab1_AbsTime{};;
	_1747_t._field_Year=((((_1547_remYears + (4LLU * _1487_qCycles)) + (100LLU * _1427_cCycles)) + (400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(jule::div(_1297_remSecs,60LLU) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5daa287_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a5cd7dc9_scopeCoder_eq(_1a5cd7dc9_scopeCoder *_self_, _1a5cd7dc9_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_1a5cd7dc9_scopeCoder> static__1a5cd855b_new(jule::Ptr<_1a5db5abc_ObjectCoder>* _7321_oc) {
	return jule::new_ptr<_1a5cd7dc9_scopeCoder>(_1a5cd7dc9_scopeCoder{._field_oc=(*(_7321_oc))});;
}



inline void _1aa491182_iterHead(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb8482_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5db6727_addIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a565ac7a_Copy && _1a5ce09a3_isCopyOptimizable(&((*((*(_8029_it))))._field_Expr)))) {
		(*(_8041_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_8029_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1aa4944e8:;
				{
					jule::Ptr<_1a3c31c26_Var> _895_v = (*((*((*(_8029_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1a3c31c26_Var>();;
					if ((*(_895_v))._field_Reference) {
						_1a5d0272e_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
						goto _match_end_1aa494b58;
					};
					goto _case_begin_1aa494bad;
				}
			}
			else {
				_case_begin_1aa494bad:;
				{
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a5d0272e_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1aa494b58:;
		};
	} else {
		_1a5ce7d62_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_8041_ref))) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_8041_ref))) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, _8052_begin);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1a5db6727_addIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
}



inline void _1a5cd8c32_rangeIndexIter(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb8482_RangeIter>* _12936_it) {
	_1e7be2632_StrBuilder _1307_sb = static__1e7be28eb_New(64LL);;
	static__1a5d0b2a4_iterBegin(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1323_begin = _1e7beba59_Str(&_1307_sb);;
	_1e7bebc57_Clear(&_1307_sb);
	static__1a5d0b87b_iterNext(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1353_next = _1e7beba59_Str(&_1307_sb);;
	jule::Bool _1377_ref = false;;
	_1aa491182_iterHead(_self_, _12936_it, &(_1377_ref), _1323_begin);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		_1a5dbccb1_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12936_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1aa4a1b32, jule::Ptr<__jule_anon_1aa4a1b32_ctx>::make(__jule_anon_1aa4a1b32_ctx{._self_=_self_,._1377_ref=_1377_ref}).as<jule::Uintptr>(), __jule_anon_1aa4a1b32_ctx_handler));
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5db6b23_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12936_it))))._field_KeyB != nullptr)) {
		(*(*((*(_12936_it))))._field_KeyB.alloc)._field_Reference=(_1a565ac7a_Copy && _1a5ce0d6b_isIterCopyOptimizable(&((*((*(_12936_it))))._field_Expr), &((*((*(_12936_it))))._field_KeyB)));
		_1a5dbccb1_varInitExpr((*(_self_))._field_oc, &((*((*(_12936_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1aa4a55e7, jule::Ptr<__jule_anon_1aa4a55e7_ctx>::make(__jule_anon_1aa4a55e7_ctx{._self_=_self_,._12936_it=_12936_it}).as<jule::Uintptr>(), __jule_anon_1aa4a55e7_ctx_handler));
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5db6b23_indent((*(_self_))._field_oc);
	};
	_1a5cdec16_scope(_self_, (*((*(_12936_it))))._field_Scope);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, _1353_next);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1a5db6b23_indent((*(_self_))._field_oc);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		static__1a5d0aeb8_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_12936_it))))._field_KeyA);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1a5db6b23_indent((*(_self_))._field_oc);
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a5db6271_write((*(_self_))._field_oc, _1323_begin);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a5db6b23_indent((*(_self_))._field_oc);
	static__1a5d0b590_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_12936_it))));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a5cd8eda_rangeHashmapIter(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb8482_RangeIter>* _19638_it) {
	_1e7be2632_StrBuilder _1977_sb = static__1e7be28eb_New(64LL);;
	static__1a5d0b2a4_iterBegin(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _1993_begin = _1e7beba59_Str(&_1977_sb);;
	_1e7bebc57_Clear(&_1977_sb);
	static__1a5d0b87b_iterNext(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _2023_next = _1e7beba59_Str(&_1977_sb);;
	jule::Bool _2047_ref = false;;
	_1aa491182_iterHead(_self_, _19638_it, &(_2047_ref), _1993_begin);
	if (((*((*(_19638_it))))._field_KeyA != nullptr)) {
		_1a5dbccb1_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19638_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1aa4b4abd, jule::Ptr<__jule_anon_1aa4b4abd_ctx>::make(__jule_anon_1aa4b4abd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa4b4abd_ctx_handler));
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5db6b23_indent((*(_self_))._field_oc);
	};
	if (((*((*(_19638_it))))._field_KeyB != nullptr)) {
		_1a5dbccb1_varInitExpr((*(_self_))._field_oc, &((*((*(_19638_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1aa4b7043, jule::Ptr<__jule_anon_1aa4b7043_ctx>::make(__jule_anon_1aa4b7043_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa4b7043_ctx_handler));
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5db6b23_indent((*(_self_))._field_oc);
	};
	_1a5cdec16_scope(_self_, (*((*(_19638_it))))._field_Scope);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, _2023_next);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a5db6271_write((*(_self_))._field_oc, _1993_begin);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a5db6b23_indent((*(_self_))._field_oc);
	static__1a5d0b590_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_19638_it))));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a5cd9293_strRuneIter(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3e47931_StrRuneIter> _24332_it) {
	_1e7be2632_StrBuilder _2447_sb = static__1e7be28eb_New(64LL);;
	static__1a5d0b2a4_iterBegin(&(_2447_sb), static_cast<jule::Uintptr>((*(_24332_it))._field_Base));
	jule::Str _2463_begin = _1e7beba59_Str(&_2447_sb);;
	_1e7bebc57_Clear(&_2447_sb);
	static__1a5d0b87b_iterNext(&(_2447_sb), static_cast<jule::Uintptr>((*_24332_it.alloc)._field_Base));
	jule::Str _2493_next = _1e7beba59_Str(&_2447_sb);;
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5db6727_addIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	jule::Bool _2557_ref = false;;
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a565ac7a_Copy && _1a5ce09a3_isCopyOptimizable(&((*_24332_it.alloc)._field_Expr)))) {
		_2557_ref=true;
		{
			auto &_match_expr{ (*((*(_24332_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1aa4c4e52:;
				{
					jule::Ptr<_1a3c31c26_Var> _2615_v = (*((*(_24332_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a3c31c26_Var>();;
					if ((*(_2615_v))._field_Reference) {
						_1a5d0272e_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1aa4c55b2;
					};
					goto _case_begin_1aa4c5617;
				}
			}
			else {
				_case_begin_1aa4c5617:;
				{
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a5d0272e_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1aa4c55b2:;
		};
	} else {
		_1a5ce7d62_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("char *it = expr", 15));
	if (_2557_ref) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("operator char*();\n", 18));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("const char *end = it + expr", 27));
	if (_2557_ref) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1a5db6b23_indent((*(_self_))._field_oc);
	if (((*((*_24332_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1a5dbccb1_varInitExpr((*(_self_))._field_oc, &((*(*(_24332_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1aa4d0c71, jule::Ptr<__jule_anon_1aa4d0c71_ctx>::make(__jule_anon_1aa4d0c71_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa4d0c71_ctx_handler));
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5db6b23_indent((*(_self_))._field_oc);
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("std::size_t len;\n", 17));
	_1a5db6b23_indent((*(_self_))._field_oc);
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1a5dbccb1_varInitExpr((*(_self_))._field_oc, &((*(*(_24332_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5db6b23_indent((*(_self_))._field_oc);
	};
	_1a5db6271_write((*(_self_))._field_oc, _2463_begin);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("std::tie(", 9));
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		static__1a5d0aeb8_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24332_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("std::ignore", 11));
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", len) = jule::utf8_decode_rune_str(it, end - it", 48));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1a5db6727_addIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5cdec16_scope(_self_, (*(*(_24332_it))._field_Base.alloc)._field_Scope);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, _2493_next);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1a5db6b23_indent((*(_self_))._field_oc);
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1a5d0aeb8_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24332_it))._field_Base.alloc)._field_KeyA);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1a5db6b23_indent((*(_self_))._field_oc);
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a5db6271_write((*(_self_))._field_oc, _2463_begin);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a5cd954b_ifCase(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb6a68_If> _35127_i) {
	if (((*(_35127_i))._field_Expr != nullptr)) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1a5ce7d62_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_35127_i.alloc)._field_Expr);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1a5cdec16_scope(_self_, (*_35127_i.alloc)._field_Scope);
}



inline void _1a5cd9804_conditional(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb7283_Conditional> _36032_c) {
	jule::Bool _3617_writed = false;;
	{
		auto expr = &((*(_36032_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4e5bcb:;
		if (it != expr_end) {
			jule::Ptr<_1a3bb6a68_If> _36215_elif = *it;
			{
				if ((_36215_elif == nullptr)) {
					goto _iter_next_1aa4e5bcb;
				};
				if (_3617_writed) {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_3617_writed=true;
				_1a5cd954b_ifCase(_self_, _36215_elif);
			}
			_iter_next_1aa4e5bcb:;
			++it;
			goto _iter_begin_1aa4e5bcb;
		}
		_iter_end_1aa4e5bcb:;
	};
	if (((*_36032_c.alloc)._field_Default != nullptr)) {
		if (_3617_writed) {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1a5cdec16_scope(_self_, (*(*(_36032_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1a5cd9aac_infIter(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb7580_InfIter> _38028_it) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1a5db6727_addIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5cdec16_scope(_self_, (*(_38028_it))._field_Scope);
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5db6b23_indent((*(_self_))._field_oc);
	static__1a5d0b87b_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38028_it));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a5db6b23_indent((*(_self_))._field_oc);
	static__1a5d0b590_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38028_it));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a5cd9d65_whileIter(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb7a36_WhileIter> _39730_it) {
	if ((((*(_39730_it))._field_Expr != nullptr) && ((*_39730_it.alloc)._field_Next == nullptr))) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1a5ce7d62_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39730_it.alloc)._field_Expr);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39730_it))._field_Expr != nullptr)) {
			_1a5ce7d62_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39730_it.alloc)._field_Expr);
		};
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*_39730_it.alloc)._field_Next != nullptr)) {
			_1a5cde6a5_st(_self_, (*_39730_it.alloc)._field_Next);
		};
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39730_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5db6727_addIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5cdec16_scope(_self_, (*_39730_it.alloc)._field_Scope);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	static__1a5d0b87b_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39730_it));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a5db6b23_indent((*(_self_))._field_oc);
	static__1a5d0b590_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39730_it));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a5cda11d_rangeIter(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb8482_RangeIter> _43630_it) {
	{
		
		if ((_1a3cbe3ce_Slc((*((*(_43630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9eedddd:;
			{
				_1a5cd8c32_rangeIndexIter(_self_, &(_43630_it));
			}
		}
		else if ((_1a3cbe148_Arr((*((*(_43630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9eeda9c:;
			{
				_1a5cd8c32_rangeIndexIter(_self_, &(_43630_it));
			}
		}
		else if ((_1a3cbee18_Map((*((*(_43630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9eedb13:;
			{
				_1a5cd8eda_rangeHashmapIter(_self_, &(_43630_it));
			}
		}
		else {
			_case_begin_1a9eeda36:;
			{
				_1a5cd8c32_rangeIndexIter(_self_, &(_43630_it));
			}
		}
		_match_end_1a9eed937:;
	};
}



inline void _1a5cda3c6_cont(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb8817_ContSt> _44921_c) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a5d0b87b_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_44921_c))._field_It);
}



inline void _1a5cda67e_label(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb8edd_Label> _45422_l) {
	static__1a5d0bb67_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45422_l));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1a5cda937_gotoSt(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb93b7_GotoSt> _45923_gt) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a5d0bb67_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_45923_gt))._field_Label));
}



inline void _1a5cdabe0_postfix(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb9791_Postfix> _46428_p) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a5ce7d62_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_46428_p))._field_Expr);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1a5db6271_write((*(_self_))._field_oc, (*_46428_p.alloc)._field_Op);
}



inline void _1a5cdae98_divByZeroAssign(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb9c47_Assign> _47136_a) {
	_1a5ce7d62_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_47136_a))._field_Left))._field_Model);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a5ce5ec5_divByZeroBinary((*((*(_self_))._field_oc))._field_ec, &((*_47136_a.alloc)._field_Op), &((*_47136_a.alloc)._field_Left), &((*_47136_a.alloc)._field_Right));
}



inline void _1a5cdb471_operatorOverloadingAssign(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _47747_s, jule::Ptr<_1a3b65c26_OperandExprModel>* _47773_l, jule::Ptr<_1a3b65c26_OperandExprModel>* _4788_r, jule::U64 _47836_op) {
	;
	jule::Ptr<_1a3b770cd_FnIns> _4803_f = _1a5644417_FindOperator(_47747_s, _47836_op, false);;
	if ((_4803_f == nullptr)) {
		jule::panic(jule::Str::lit("binary operator overloading is not exist, this is an implementation mistake", 75) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:482:4"));;
	};
	static__1a5d09c42_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_4803_f));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1a5ce7d62_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_47773_l))))._field_Model);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a5ce7d62_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_4788_r))))._field_Model);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5cdb729_assign(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb9c47_Assign> _49227_a) {
	{
		auto &_match_expr{ (*((*(_49227_a))._field_Op))._field_Kind };
		
		if (_match_expr == jule::Str::lit("/=", 2) || _match_expr == jule::Str::lit("%=", 2)) {
			_case_begin_1aa00eea9:;
			{
				if ((_1a3cbe8eb_Struct((*((*(_49227_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1a5cdae98_divByZeroAssign(_self_, _49227_a);
					return;;
				};
			}
		}
		_match_end_1aa00edee:;
	};
	if ((((*((*_49227_a.alloc)._field_Op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1a3cbe8eb_Struct((*((*(_49227_a))._field_Left))._field_Kind) != nullptr))) {
		jule::Ptr<_1a3b61cbb_StructIns> _5038_s = _1a3cbe8eb_Struct((*((*(_49227_a))._field_Left))._field_Kind);;
		_1a5cdb471_operatorOverloadingAssign(_self_, &(_5038_s), &((*_49227_a.alloc)._field_Left), &((*_49227_a.alloc)._field_Right), (*(*(_49227_a))._field_Op.alloc)._field_Id);
		return;;
	};
	_1a5ce7d62_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(*(_49227_a))._field_Left.alloc)._field_Model);
	_1a5db6271_write((*(_self_))._field_oc, (*(*(_49227_a))._field_Op.alloc)._field_Kind);
	_1a5ce7d62_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_49227_a.alloc)._field_Right))._field_Model);
}



inline void _1a5cdb9d2_mapLookupAssign(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bba1ed_MultiAssign>* _51337_a) {
	jule::Ptr<_1a3b68a81_IndexingExprModel> _5147_iem = (*((*(_51337_a))))._field_Right.cast_ptr<_1a3b68a81_IndexingExprModel>(&__jule_any_type45);;
	_1a5ce7d62_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_5147_iem))._field_Expr))._field_Model);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".lookup(", 8));
	_1a5ce7d62_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_5147_iem.alloc)._field_Index))._field_Model);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_51337_a))))._field_Left[0LL] != nullptr)) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1a5ce7d62_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_51337_a))))._field_Left[0LL]))._field_Model);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_51337_a))))._field_Left[1LL] != nullptr)) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1a5ce7d62_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_51337_a))))._field_Left[1LL]))._field_Model);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5cdbc8a_multiAssignTup(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bba1ed_MultiAssign>* _53636_a) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a5db6727_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1a3b6b8db_TupleExprModel> _5407_tup = (*((*(_53636_a))))._field_Right.cast_ptr<_1a3b6b8db_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_5407_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa02012e:;
		if (it != expr_end) {
			jule::I64 _5428_i = it - expr->begin();
			jule::Ptr<_1a3c8982d_Data> _54215_r = *it;
			{
				_1a5db6b23_indent((*(_self_))._field_oc);
				jule::Ptr<_1a3c8982d_Data> _5448_l = (*((*(_53636_a))))._field_Left[_5428_i];;
				if ((_5448_l != nullptr)) {
					{
						auto &_match_expr{ (*(_5448_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1aa022e34:;
							{
								jule::Ptr<_1a3c31c26_Var> _54810_v = (*(_5448_l))._field_Model.unsafe_cast_ptr<_1a3c31c26_Var>();;
								if (((*(_54810_v))._field_Reference && (!(_1a3c32100_IsInitialized(_54810_v))))) {
									static__1a5d0aeb8_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _54810_v);
									_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1a5ce7d62_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_54215_r))._field_Model);
									_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_53636_a))))._field_Left[_5428_i]=nullptr;
									goto _iter_next_1aa02012e;
								};
							}
						}
						_match_end_1aa022dce:;
					};
					_1a5dca74c_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_5448_l.alloc)._field_Kind);
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1a5d09219_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a5cd766a_assignArgName, static_cast<jule::Uintptr>(_5428_i));
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1a5ce7d62_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_54215_r.alloc)._field_Model);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1aa02012e:;
			++it;
			_5428_i++;
			goto _iter_begin_1aa02012e;
		}
		_iter_end_1aa02012e:;
	};
	{
		auto expr = &((*((*(_53636_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa028d4c:;
		if (it != expr_end) {
			jule::I64 _5698_i = it - expr->begin();
			jule::Ptr<_1a3c8982d_Data> _56915_l = *it;
			{
				if ((_56915_l == nullptr)) {
					goto _iter_next_1aa028d4c;
				};
				_1a5db6b23_indent((*(_self_))._field_oc);
				_1a5ce7d62_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_56915_l))._field_Model);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1a5d09219_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a5cd766a_assignArgName, static_cast<jule::Uintptr>(_5698_i));
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1aa028d4c:;
			++it;
			_5698_i++;
			goto _iter_begin_1aa028d4c;
		}
		_iter_end_1aa028d4c:;
	};
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a5cdc043_multiAssignFn(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bba1ed_MultiAssign>* _58535_a) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a5db6727_addIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	jule::Ptr<_1a3b68201_FnCallExprModel> _5907_f = (*((*(_58535_a))))._field_Right.cast_ptr<_1a3b68201_FnCallExprModel>(&__jule_any_type33);;
	_1a5dd06ec_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_5907_f))._field_Func))._field_Result));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1a5ce7d62_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_58535_a))))._field_Right);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1a3cc88e4_Tuple> _5967_tup = _1a3cc019e_Tup((*(*(_5907_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_58535_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa03374c:;
		if (it != expr_end) {
			jule::I64 _5978_i = it - expr->begin();
			jule::Ptr<_1a3c8982d_Data> _59715_l = *it;
			{
				if ((_59715_l != nullptr)) {
					;
					_1a5db6b23_indent((*(_self_))._field_oc);
					_1a5ce7d62_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_59715_l.alloc)._field_Model);
					{
						
						if (_1a3cbb431_Equal((*(_5967_tup))._field_Types[_5978_i], (*_59715_l.alloc)._field_Kind)) {
							_case_begin_1aa03e02c:;
							{
								_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
								_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_5978_i));
							}
						}
						else if (_1a5640e91_IsAny(&((*_59715_l.alloc)._field_Kind))) {
							_case_begin_1aa03ae3b:;
							{
								_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
								_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_5978_i));
								_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
								_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_1a5db7937_pushAnyType((*(_self_))._field_oc, (*(_5967_tup))._field_Types[_5978_i])));
								_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1aa034cae:;
							{
								if ((_1a3cbeb82_Trait((*(_5967_tup))._field_Types[_5978_i].ptr()) != nullptr)) {
									_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
									jule::Ptr<_1a3b87a7d_Trait> _61611_t1 = _1a3cbeb82_Trait((*_59715_l.alloc)._field_Kind.ptr());;
									jule::Ptr<_1a3b87a7d_Trait> _61711_t2 = _1a3cbeb82_Trait((*(_5967_tup))._field_Types[_5978_i].ptr());;
									_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
									_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_5978_i));
									_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
									_1a5db830b_pushAndWriteMaskMapper((*(_self_))._field_oc, _61611_t1, _61711_t2);
									_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
									goto _match_end_1aa035cd2;
								};
								jule::Ptr<_1a3b87a7d_Trait> _6256_t = _1a3cbeb82_Trait((*(_59715_l))._field_Kind);;
								_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
								_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_5978_i));
								_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
								static__1a5d0a02d_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _6256_t);
								_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
								_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_1a5643ed8_FindTraitTypeOffset(_6256_t, (*(_5967_tup))._field_Types[_5978_i])));
								_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						_match_end_1aa035cd2:;
					};
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1aa03374c:;
			++it;
			_5978_i++;
			goto _iter_begin_1aa03374c;
		}
		_iter_end_1aa03374c:;
	};
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a5cdc2eb_multiAssign(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bba1ed_MultiAssign> _64332_a) {
	{
		auto expr = &((*(_64332_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa044a6b:;
		if (it != expr_end) {
			jule::Ptr<_1a3c31c26_Var> _64615_d = *it;
			{
				_1a5dbccb1_varInitExpr((*(_self_))._field_oc, &(_64615_d), nullptr);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1a5db6b23_indent((*(_self_))._field_oc);
			}
			_iter_next_1aa044a6b:;
			++it;
			goto _iter_begin_1aa044a6b;
		}
		_iter_end_1aa044a6b:;
	};
	{
		auto &_match_expr{ (*(_64332_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1aa045286:;
			{
				_1a5cdb9d2_mapLookupAssign(_self_, &(_64332_a));
				return;;
			}
		}
		_match_end_1aa045231:;
	};
	{
		auto &_match_expr{ (*(_64332_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1aa04751e:;
			{
				_1a5cdbc8a_multiAssignTup(_self_, &(_64332_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aa046c6b:;
			{
				_1a5cdc043_multiAssignFn(_self_, &(_64332_a));
			}
		}
		else {
			_case_begin_1aa046c05:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:665:4"));;
			}
		}
		_match_end_1aa046ba0:;
	};
}



inline jule::Fn<void> _1a5cdc63c_matchExpr(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bba85d_Match> _66930_m) {
	if ((!(_1a3c8a235_IsConst((*(_66930_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1aa049114, jule::Ptr<__jule_anon_1aa049114_ctx>::make(__jule_anon_1aa049114_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa049114_ctx_handler);;
	};
	if (((!(_1b574c18b_IsBool((*(*(_66930_m))._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1b5749a90_ReadBool((*((*(_66930_m))._field_Expr))._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1aa04a423, jule::Ptr<__jule_anon_1aa04a423_ctx>::make(__jule_anon_1aa04a423_ctx{._self_=_self_,._66930_m=_66930_m}).as<jule::Uintptr>(), __jule_anon_1aa04a423_ctx_handler);;
	};
	return nullptr;;
}



inline void _1a5cdc9a0_case(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bba85d_Match> _67925_m, jule::Ptr<_1a3bbb386_Case> _67940_c) {
	if ((((*(_67940_c))._field_Exprs.len() != 0LL) && (!((*(_67925_m))._field_Comptime)))) {
		if ((((*_67925_m.alloc)._field_Cases.len() > 0LL) && ((*(_67925_m))._field_Cases[0LL] == _67940_c))) {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_67940_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa04e548:;
			if (it != expr_end) {
				jule::I64 _6869_i = it - expr->begin();
				jule::Ptr<_1a3c8982d_Data> _68616_expr = *it;
				{
					{
						
						if ((!((*_67925_m.alloc)._field_TypeMatch))) {
							_case_begin_1aa057e8b:;
							{
								jule::Fn<void> _6896_caseExpr = _1a5cdc63c_matchExpr(_self_, _67925_m);;
								if (_1a3c8a576_GoodOperand((*_67925_m.alloc)._field_Expr.ptr(), &(_68616_expr))) {
									if ((_6896_caseExpr != nullptr)) {
										_6896_caseExpr();
										_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1a5ce7d62_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_68616_expr))._field_Model);
								} else {
									_1a5ce7d62_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_68616_expr))._field_Model);
									if ((_6896_caseExpr != nullptr)) {
										_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_6896_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1aa05022a:;
							{
								_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1a3cbac27_TypeKind> _70510_tk = (*(_68616_expr))._field_Model.cast_ptr<_1a3cbac27_TypeKind>(&__jule_any_type84);;
								if ((_1a3cbeb82_Trait((*((*_67925_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1a5ce4831_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1a3cbd60e_Sptr((*(_68616_expr))._field_Kind) != nullptr));
									_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1a5d0a02d_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a3cbeb82_Trait((*((*(_67925_m))._field_Expr))._field_Kind));
									_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_1a5643ed8_FindTraitTypeOffset(_1a3cbeb82_Trait((*((*(_67925_m))._field_Expr))._field_Kind), (*_68616_expr.alloc)._field_Kind)));
									_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _7157_j = _1a5db7937_pushAnyType((*(_self_))._field_oc, _70510_tk);;
									_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_7157_j));
								};
							}
						}
						_match_end_1aa05012b:;
					};
					if ((((*_67940_c.alloc)._field_Exprs.len() - _6869_i) > 1LL)) {
						_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1aa04e548:;
				++it;
				_6869_i++;
				goto _iter_begin_1aa04e548;
			}
			_iter_end_1aa04e548:;
		};
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_67925_m))._field_Default == _67940_c) && ((*_67925_m.alloc)._field_Cases.len() != 0LL))) {
		_1a5db6b23_indent((*(_self_))._field_oc);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1a5db6727_addIndent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5db6b23_indent((*(_self_))._field_oc);
	static__1a5d0c23e_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_67940_c));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_67940_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1a5db6b23_indent((*(_self_))._field_oc);
		_1a5cdec16_scope(_self_, (*_67940_c.alloc)._field_Scope);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a5cdcc58_matchSt(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bba85d_Match> _74928_m) {
	if ((((*(_74928_m))._field_Cases.len() == 0LL) && ((*_74928_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_74928_m.alloc)._field_Comptime && (((*_74928_m.alloc)._field_Default == nullptr) || ((*((*((*_74928_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5db6727_addIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	if (((!((*_74928_m.alloc)._field_Comptime)) && (!(_1a3c8a235_IsConst((*_74928_m.alloc)._field_Expr.ptr()))))) {
		if ((_1a565ac7a_Copy && _1a5ce09a3_isCopyOptimizable(&((*_74928_m.alloc)._field_Expr)))) {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1a5ce7d62_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_74928_m))._field_Expr.alloc)._field_Model);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1a5db6b23_indent((*(_self_))._field_oc);
	};
	if (((*_74928_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_74928_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa06a9e8:;
			if (it != expr_end) {
				jule::Ptr<_1a3bbb386_Case> _77716_c = *it;
				{
					if ((_77716_c == nullptr)) {
						goto _iter_next_1aa06a9e8;
					};
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1a5db6b23_indent((*(_self_))._field_oc);
					_1a5cdc9a0_case(_self_, _74928_m, _77716_c);
				}
				_iter_next_1aa06a9e8:;
				++it;
				goto _iter_begin_1aa06a9e8;
			}
			_iter_end_1aa06a9e8:;
		};
	};
	if (((*_74928_m.alloc)._field_Default != nullptr)) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a5cdc9a0_case(_self_, _74928_m, (*_74928_m.alloc)._field_Default);
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5db6b23_indent((*(_self_))._field_oc);
	static__1a5d0be53_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_74928_m));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a5cdd011_fallSt(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bbba7e_FallSt> _80423_f) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a5d0c23e_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_80423_f))._field_DestCase);
}



inline void _1a5cdd2b9_breakSt(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb8be1_BreakSt> _80924_b) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_80924_b))._field_It != 0LLU)) {
		static__1a5d0b590_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_80924_b.alloc)._field_It);
	} else {
		static__1a5d0be53_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_80924_b))._field_Mtch);
	};
}



inline void _1a5cdd572_setResult(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bbbe25_RetSt> _81830_r) {
	if (((*((*((*((*(_81830_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1a5ce7d62_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_81830_r.alloc)._field_Expr);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1a5db6b23_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_81830_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1aa075948:;
			{
				jule::Slice<jule::Ptr<_1a3c8982d_Data>> _8288_datas = (*((*(_81830_r))._field_Expr.unsafe_cast_ptr<_1a3b6b8db_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_8288_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa34cb76:;
					if (it != expr_end) {
						jule::I64 _8298_i = it - expr->begin();
						jule::Ptr<_1a3c8982d_Data> _82911_data = *it;
						{
							_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_8298_i));
							_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1a5ce7d62_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_82911_data))._field_Model);
							_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1a5db6b23_indent((*(_self_))._field_oc);
						}
						_iter_next_1aa34cb76:;
						++it;
						_8298_i++;
						goto _iter_begin_1aa34cb76;
					}
					_iter_end_1aa34cb76:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aa0785d8:;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1a5d0272e_model((*((*(_self_))._field_oc))._field_ec, (*_81830_r.alloc)._field_Expr);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1aa07820e:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:842:4"));;
			}
		}
		_match_end_1aa0781a9:;
	};
}



inline void _1a5cdd82a_retSt(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bbbe25_RetSt> _84626_r) {
	if (_1a3b74570_IsVoid((*((*(_84626_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_84626_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_84626_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_84626_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1a5dca74c_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_84626_r))._field_Func.alloc)._field_Result);
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1a5ce7d62_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_84626_r.alloc)._field_Expr);
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1a5ce7d62_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_84626_r.alloc)._field_Expr);
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_84626_r))._field_Expr != nullptr)) {
		_1a5cdd572_setResult(_self_, _84626_r);
	};
	if ((*((*((*_84626_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1a5dd06ec_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_84626_r))._field_Func.alloc)._field_Result));
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1a5cddad3_var(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3c31c26_Var> _88224_v) {
	if ((!((*(_88224_v))._field_Constant))) {
		_1a5dbd069_var((*(_self_))._field_oc, _88224_v);
	};
}



inline void _1a5cddd8b_mutSlicing(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3e46622_MutSlicingExprModel> _88831_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a5ce7d62_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_88831_m))._field_Expr);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_2121303d5_Production))) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a5db85b4_locInfo((*(_self_))._field_oc, &((*_88831_m.alloc)._field_Token));
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a5ce7d62_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_88831_m.alloc)._field_Left);
	if (((*_88831_m.alloc)._field_Right != nullptr)) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a5ce7d62_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_88831_m.alloc)._field_Right);
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1a5cde144_swap(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3e453bd_SwapExprModel> _90525_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1a5ce7d62_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_90525_m))._field_Left))._field_Model);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a5ce7d62_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_90525_m.alloc)._field_Right))._field_Model);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5cde3ec_exceptionalForwarding(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3e45049_ExceptionalForwardingExprModel> _91342_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1a5ce9a45_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_91342_m))._field_Expr));
}



inline void _1a5cde6a5_st(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Any _91923_st) {
	if ((_91923_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _91923_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1aa389ce5:;
			{
				_1a5cdec16_scope(_self_, _91923_st.cast_ptr<_1a3bb664a_Scope>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa38a07b:;
			{
				_1a5cddad3_var(_self_, _91923_st.cast_ptr<_1a3c31c26_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aa38a0e2:;
			{
				_1a5d0272e_model((*((*(_self_))._field_oc))._field_ec, (*(_91923_st.unsafe_cast_ptr<_1a3c8982d_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1aa38a851:;
			{
				_1a5cd9804_conditional(_self_, _91923_st.cast_ptr<_1a3bb7283_Conditional>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1aa38a8b7:;
			{
				_1a5cd9aac_infIter(_self_, _91923_st.cast_ptr<_1a3bb7580_InfIter>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1aa38a92d:;
			{
				_1a5cd9d65_whileIter(_self_, _91923_st.cast_ptr<_1a3bb7a36_WhileIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1aa38a994:;
			{
				_1a5cda11d_rangeIter(_self_, _91923_st.cast_ptr<_1a3bb8482_RangeIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1aa38aa0a:;
			{
				_1a5cda3c6_cont(_self_, _91923_st.cast_ptr<_1a3bb8817_ContSt>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1aa38aa71:;
			{
				_1a5cda67e_label(_self_, _91923_st.cast_ptr<_1a3bb8edd_Label>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1aa38aad7:;
			{
				_1a5cda937_gotoSt(_self_, _91923_st.cast_ptr<_1a3bb93b7_GotoSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aa38ab4d:;
			{
				_1a5cdabe0_postfix(_self_, _91923_st.cast_ptr<_1a3bb9791_Postfix>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1aa38abb4:;
			{
				_1a5cdb729_assign(_self_, _91923_st.cast_ptr<_1a3bb9c47_Assign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1aa38ac2a:;
			{
				_1a5cdc2eb_multiAssign(_self_, _91923_st.cast_ptr<_1a3bba1ed_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1aa38ac91:;
			{
				_1a5cdcc58_matchSt(_self_, _91923_st.cast_ptr<_1a3bba85d_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1aa38ad18:;
			{
				_1a5cdd011_fallSt(_self_, _91923_st.cast_ptr<_1a3bbba7e_FallSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1aa38ad90:;
			{
				_1a5cdd2b9_breakSt(_self_, _91923_st.cast_ptr<_1a3bb8be1_BreakSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1aa38ae17:;
			{
				_1a5cdd82a_retSt(_self_, _91923_st.cast_ptr<_1a3bbbe25_RetSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1aa38ae8e:;
			{
				_1a5ceee57_pushToSlice((*((*(_self_))._field_oc))._field_ec, _91923_st.cast_ptr<_1a3e4717d_PushToSliceExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1aa38b016:;
			{
				_1a5d00210_appendToSlice((*((*(_self_))._field_oc))._field_ec, _91923_st.cast_ptr<_1a3e47557_AppendToSliceExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1aa38b08d:;
			{
				_1a5cddd8b_mutSlicing(_self_, _91923_st.cast_ptr<_1a3e46622_MutSlicingExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1aa38b115:;
			{
				_1a5cde144_swap(_self_, _91923_st.cast_ptr<_1a3e453bd_SwapExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1aa38b18c:;
			{
				_1a5cde3ec_exceptionalForwarding(_self_, _91923_st.cast_ptr<_1a3e45049_ExceptionalForwardingExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1aa38b214:;
			{
				_1a5cd9293_strRuneIter(_self_, _91923_st.cast_ptr<_1a3e47931_StrRuneIter>(&__jule_any_type121));
			}
		}
		else {
			_case_begin_1aa389b08:;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1aa389971:;
	};
}



inline void _1a5cde95d_scopeStmts(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb664a_Scope>* _97532_s) {
	{
		auto expr = &((*((*(_97532_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa38d029:;
		if (it != expr_end) {
			jule::Any _97615_st = *it;
			{
				_1a5db6b23_indent((*(_self_))._field_oc);
				_1a5cde6a5_st(_self_, _97615_st);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1aa38d029:;
			++it;
			goto _iter_begin_1aa38d029;
		}
		_iter_end_1aa38d029:;
	};
}



inline void _1a5cdec16_scope(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3bb664a_Scope> _98426_s) {
	_1a5db6727_addIndent((*(_self_))._field_oc);
	if ((*(_98426_s))._field_Deferred) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5cde95d_scopeStmts(_self_, &(_98426_s));
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*_98426_s.alloc)._field_Deferred) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1a5cdeebe_commonFuncScope(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3b770cd_FnIns>* _99937_f) {
	if ((!(_1a3b74570_IsVoid((*((*(_99937_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1a3cc88e4_Tuple> _10018_tup = _1a3cc019e_Tup((*((*(_99937_f))))._field_Result.ptr());;
		if ((_10018_tup != nullptr)) {
			_1a5db6b23_indent((*(_self_))._field_oc);
			_1a5dd0026_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _10018_tup);
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_10018_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1aa396285:;
				if (it != expr_end) {
					jule::I64 _100610_i = it - expr->begin();
					jule::Ptr<_1a3cbac27_TypeKind> _100617_t = *it;
					{
						if (_1a5dd2369_shouldInitialized(&(_100617_t))) {
							_1a5db6b23_indent((*(_self_))._field_oc);
							_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_100610_i));
							_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1a5d029d7_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _100617_t);
							_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1aa396285:;
					++it;
					_100610_i++;
					goto _iter_begin_1aa396285;
				}
				_iter_end_1aa396285:;
			};
		} else if (((*((*(*((*(_99937_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1a5db6b23_indent((*(_self_))._field_oc);
			_1a5dca74c_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_99937_f))))._field_Result);
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1a5dd2369_shouldInitialized(&((*((*(_99937_f))))._field_Result))) {
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1a5d029d7_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_99937_f))))._field_Result);
			};
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1a5cde95d_scopeStmts(_self_, &((*((*(_99937_f))))._field_Scope));
	if (((*(*((*(_99937_f))))._field_Decl.alloc)._field_Exceptional && _1a3b74570_IsVoid((*((*(_99937_f))))._field_Decl))) {
		_1a5db6b23_indent((*_self_.alloc)._field_oc);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1a5ce0332_anonFuncScope(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3b69037_AnonFnExprModel> _103934_m, jule::Str _103955_ident) {
	if (((*((*(_103934_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _10433_closure = _1a56412d2_IsClosure(&(_103934_m));;
	if (_10433_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a3c31c26_Var>>>::make({jule::__new_closure<jule::Bool,jule::Ptr<_1a3c31c26_Var>>((void*)__jule_anon_1aa3a357d, jule::Ptr<__jule_anon_1aa3a357d_ctx>::make(__jule_anon_1aa3a357d_ctx{._self_=_self_,._103934_m=_103934_m}).as<jule::Uintptr>(), __jule_anon_1aa3a357d_ctx_handler)}));
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5db6727_addIndent((*(_self_))._field_oc);
	if (_10433_closure) {
		_1a5db6b23_indent((*(_self_))._field_oc);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1a5db6271_write((*(_self_))._field_oc, _103955_ident);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1a5db6271_write((*(_self_))._field_oc, _103955_ident);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1a5cdeebe_commonFuncScope(_self_, &((*_103934_m.alloc)._field_Func));
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_10433_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1a5ce05da_funcScope(jule::Ptr<_1a5cd7dc9_scopeCoder> _self_, jule::Ptr<_1a3b770cd_FnIns> _107130_f) {
	if (((*(_107130_f))._field_Scope == nullptr)) {
		return;;
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5db6727_addIndent((*(_self_))._field_oc);
	_1a5cdeebe_commonFuncScope(_self_, &(_107130_f));
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1a5cd7dc9_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5ce3e07_exprCoder> static__1a5ce42c0_new(jule::Ptr<_1a5db5abc_ObjectCoder>* _11521_oc) {
	return jule::new_ptr<_1a5ce3e07_exprCoder>(_1a5ce3e07_exprCoder{._field_oc=(*(_11521_oc)), });;
}



inline void _1a5ce4578_string(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1b5747b9d_Const>* _12124_c) {
	jule::Str _1223_content = _1b5749d26_ReadStr((*(_12124_c)).ptr());;
	if ((_1223_content.len() == 0LL)) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1273_len = _1b5739a4c_FmtInt(static_cast<jule::I64>(_1223_content.len()), 10LL);;
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1a5d037c9_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1223_content);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a5db6271_write((*(_self_))._field_oc, _1273_len);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5ce4831_boolean(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Bool _13624_b) {
	if (_13624_b) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1a5ce4a2e_nilLit(jule::Ptr<_1a5ce3e07_exprCoder> _self_) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1a5ce4d70_ftoaSpecialCases(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::F64* _14834_x) {
	{
		
		if (_1b557dd58_IsNaN((*(_14834_x)))) {
			_case_begin_1aa53904e:;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1b557e4da_IsInf((*(_14834_x)), 1LL)) {
			_case_begin_1aa5390e8:;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1b557e4da_IsInf((*(_14834_x)), -1LL)) {
			_case_begin_1aa539170:;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1aa538eb6:;
			{
				return false;;
			}
		}
		_match_end_1aa538db7:;
	};
	return true;;
}



inline void _1a5ce5128_float32(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1b5747b9d_Const>* _16225_c) {
	jule::F64 _1633_x = _1b574a860_AsF64((*(_16225_c)).ptr());;
	if (_1a5ce4d70_ftoaSpecialCases(_self_, &(_1633_x))) {
		return;;
	};
	{
		
		if ((_1633_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1aa53d284:;
			{
				_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1633_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1aa53c34e:;
			{
				_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1aa53c2d8:;
			{
				_1a5d03b70_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1633_x, 32LL);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1aa53c1a6:;
	};
}



inline void _1a5ce53d1_float64(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1b5747b9d_Const>* _18125_c) {
	jule::F64 _1823_x = _1b574a860_AsF64((*(_18125_c)).ptr());;
	if (_1a5ce4d70_ftoaSpecialCases(_self_, &(_1823_x))) {
		return;;
	};
	{
		
		if ((_1823_x == jule::MAX_F64)) {
			_case_begin_1aa540c15:;
			{
				_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1823_x == jule::MIN_F64)) {
			_case_begin_1aa54083b:;
			{
				_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1aa5407c5:;
			{
				_1a5d03b70_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1823_x, 64LL);
			}
		}
		_match_end_1aa540693:;
	};
}



inline void _1a5ce5689_constant(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1b5747b9d_Const> _19929_c) {
	{
		
		if (_1b574c422_IsStr(_19929_c.ptr())) {
			_case_begin_1aa542a6e:;
			{
				_1a5ce4578_string(_self_, &(_19929_c));
			}
		}
		else if (_1b574c18b_IsBool(_19929_c.ptr())) {
			_case_begin_1aa542ad5:;
			{
				_1a5ce4831_boolean(_self_, _1b5749a90_ReadBool(_19929_c));
			}
		}
		else if (_1b574c6a8_IsF64(_19929_c.ptr())) {
			_case_begin_1aa542b4b:;
			{
				{
					
					if ((*(_19929_c))._field_Kind.equal("f32", 3)) {
						_case_begin_1aa545522:;
						{
							_1a5ce5128_float32(_self_, &(_19929_c));
						}
					}
					else {
						_case_begin_1aa54518c:;
						{
							_1a5ce53d1_float64(_self_, &(_19929_c));
						}
					}
					_match_end_1aa54508d:;
				};
			}
		}
		else if (_1b574bb6e_IsI64(_19929_c.ptr())) {
			_case_begin_1aa542bb2:;
			{
				_1a5d03e5b_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1b5749573_ReadI64(_19929_c));
			}
		}
		else if (_1b574be05_IsU64(_19929_c.ptr())) {
			_case_begin_1aa542c28:;
			{
				_1a5d04247_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1b5749809_ReadU64(_19929_c));
			}
		}
		else if (_1b574c93e_IsNil(_19929_c.ptr())) {
			_case_begin_1aa542c8e:;
			{
				_1a5ce4a2e_nilLit(_self_);
			}
		}
		else {
			_case_begin_1aa542a08:;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1aa542909:;
	};
}



inline void _1a5ce5aa7_operatorOverloadingUnary(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _22346_s, jule::U64 _22361_op, jule::Any _22378_e) {
	;
	jule::Ptr<_1a3b770cd_FnIns> _2253_f = _1a5644417_FindOperator(_22346_s, _22361_op, true);;
	if ((_2253_f == nullptr)) {
		jule::panic(jule::Str::lit("unary operator overloading is not exist, this is an implementation mistake", 74) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:227:4"));;
	};
	static__1a5d09c42_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_2253_f));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1a5ce7d62_possibleRefExpr(_self_, _22378_e);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5ce5ec5_divByZeroBinary(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b27a62_Token>* _23533_op, jule::Ptr<_1a3b65c26_OperandExprModel>* _23550_l, jule::Ptr<_1a3b65c26_OperandExprModel>* _23577_r) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_23533_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1aa54b68d:;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1aa54c12d:;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1aa54c095:;
	};
	if ((!(_2121303d5_Production))) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a5db85b4_locInfo((*(_self_))._field_oc, _23533_op);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\",", 2));
	};
	_1a5ce7d62_possibleRefExpr(_self_, (*((*(_23550_l))))._field_Model);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1a5ce7d62_possibleRefExpr(_self_, (*((*(_23577_r))))._field_Model);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5ce66bd__unsafeBinary(jule::Ptr<_1a5ce3e07_exprCoder> _self_, _1e7be2632_StrBuilder* _25735_buf, jule::Str* _25753_l, jule::Str* _25762_r, jule::Ptr<_1a3cbac27_TypeKind>* _2588_lk, jule::Ptr<_1a3cbac27_TypeKind>* _25828_rk, jule::U64 _25843_op, jule::Str _25856_kind) {
	if ((_1a3cbe8eb_Struct((*(_2588_lk)).ptr()) != nullptr)) {
		jule::Ptr<_1a3b61cbb_StructIns> _2618_s = _1a3cbe8eb_Struct((*(_2588_lk)).ptr());;
		_1a5d04896_operatorOverloadingBinary(_25735_buf, &(_2618_s), _25753_l, _25762_r, _25843_op, _25856_kind);
		return;;
	};
	if (((_25843_op == static_cast<jule::U64>(50LLU)) || (_25843_op == static_cast<jule::U64>(51LLU)))) {
		{
			
			if (_1a5640e91_IsAny(_2588_lk)) {
				_case_begin_1aa553cc2:;
				{
					if (((!(_1a3cbbd05_IsNil((*(_25828_rk)).ptr()))) && (!(_1a5640e91_IsAny(_25828_rk))))) {
						_1e7beb51a_WriteByte(_25735_buf, '(');
						if ((_25843_op == static_cast<jule::U64>(51LLU))) {
							_1e7beb51a_WriteByte(_25735_buf, '!');
						};
						jule::I64 _2776_i = _1a5db7937_pushAnyType((*(_self_))._field_oc, (*(_25828_rk)));;
						_1e7beb262_WriteStr(_25735_buf, jule::Str::lit("__jule_any_type", 15));
						_1e7beb262_WriteStr(_25735_buf, _1b5739d16_Itoa(_2776_i));
						_1e7beb262_WriteStr(_25735_buf, jule::Str::lit("_compare(", 9));
						_1e7beb262_WriteStr(_25735_buf, (*(_25753_l)));
						_1e7beb262_WriteStr(_25735_buf, jule::Str::lit(", ", 2));
						_1e7beb262_WriteStr(_25735_buf, (*(_25762_r)));
						_1e7beb262_WriteStr(_25735_buf, jule::Str::lit("))", 2));
						return;;
					};
				}
			}
			else if ((_1a3cbe148_Arr((*(_2588_lk)).ptr()) != nullptr)) {
				_case_begin_1aa553d6b:;
				{
					jule::Ptr<_1a3cca121_Arr> _2905_arr = _1a3cbe148_Arr((*(_2588_lk)).ptr());;
					jule::Ptr<_1a3b740ec_Fn> _2919_f = _1a3e4b171_RuntimeFindFn(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), jule::Str::lit("arrayCmp", 8));;
					jule::Ptr<_1a3b770cd_FnIns> _2929_ins = _1a564478b_FindGenericInstance(&(_2919_f), jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>>::make({(*(_2905_arr))._field_Elem}));;
					static__1a5d09c42_funcIns(_25735_buf, &(_2929_ins));
					if ((_25843_op == static_cast<jule::U64>(51LLU))) {
						_1e7beb51a_WriteByte(_25735_buf, '!');
					};
					_1e7beb51a_WriteByte(_25735_buf, '(');
					_1e7beb262_WriteStr(_25735_buf, (*(_25753_l)));
					_1e7beb262_WriteStr(_25735_buf, jule::Str::lit(".begin(), ", 10));
					_1e7beb262_WriteStr(_25735_buf, (*(_25762_r)));
					_1e7beb262_WriteStr(_25735_buf, jule::Str::lit(".begin(), ", 10));
					_1e7beb262_WriteStr(_25735_buf, _1b5739d16_Itoa((*_2905_arr.alloc)._field_N));
					_1e7beb51a_WriteByte(_25735_buf, ')');
					return;;
				}
			}
			_match_end_1aa553be5:;
		};
	};
	_1e7beb51a_WriteByte(_25735_buf, '(');
	_1e7beb262_WriteStr(_25735_buf, (*(_25753_l)));
	_1e7beb51a_WriteByte(_25735_buf, ' ');
	_1e7beb262_WriteStr(_25735_buf, _25856_kind);
	_1e7beb51a_WriteByte(_25735_buf, ' ');
	_1e7beb262_WriteStr(_25735_buf, (*(_25762_r)));
	_1e7beb51a_WriteByte(_25735_buf, ')');
}



inline void _1a5ce6976_unsafeBinary(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b66221_BinaryExprModel> _31633_m) {
	jule::I64 _3173_i = _1e7bebedd_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _3187_oldbuf = _1e7bec50a_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_1a5ce7d62_possibleRefExpr(_self_, (*((*(_31633_m))._field_Left))._field_Model);
	jule::Str _3203_l = static_cast<jule::Str>(_1e7bec50a_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_3173_i));;
	{
		_1e7bec7b3_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _3187_oldbuf);
	};
	_1a5ce7d62_possibleRefExpr(_self_, (*((*_31633_m.alloc)._field_Right))._field_Model);
	jule::Str _3233_r = static_cast<jule::Str>(_1e7bec50a_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_3173_i));;
	{
		_1e7bec7b3_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _3187_oldbuf);
	};
	_1a5ce66bd__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3203_l), &(_3233_r), &((*(*(_31633_m))._field_Left.alloc)._field_Kind), &((*(*(_31633_m))._field_Right.alloc)._field_Kind), (*((*_31633_m.alloc)._field_Op))._field_Id, (*(*(_31633_m))._field_Op.alloc)._field_Kind);
}



inline void _1a5ce6c2e_binary(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b66221_BinaryExprModel> _32827_m) {
	{
		auto &_match_expr{ (*((*(_32827_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1aa564893:;
			{
				if ((_1a3cbe8eb_Struct((*((*(_32827_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1a5ce5ec5_divByZeroBinary(_self_, &((*_32827_m.alloc)._field_Op), &((*_32827_m.alloc)._field_Left), &((*_32827_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1aa5647d8:;
	};
	_1a5ce6976_unsafeBinary(_self_, _32827_m);
}



inline void _1a5ce6ed7_var(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3c31c26_Var> _34024_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa566b1a:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1a3c31c26_Var>> _34110_prefix = *it;
			{
				if (_34110_prefix(_34024_m)) {
					return;;
				};
			}
			_iter_next_1aa566b1a:;
			++it;
			goto _iter_begin_1aa566b1a;
		}
		_iter_end_1aa566b1a:;
	};
	if ((*(_34024_m))._field_Binded) {
		jule::Ptr<_1a3b3c55a_Directive> _3474_d = _1a5642c62_FindDirective(&((*_34024_m.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_3474_d != nullptr)) {
			_1a5db6529_writeBytes((*_self_.alloc)._field_oc, _1a5dc2d93_concatAllParts((*_3474_d.alloc)._field_Args));
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a5d0aeb8_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _34024_m);
}



inline void _1a5ce7290_structureIns(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns> _35633_m) {
	_1a5dc8a03_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _35633_m);
}



inline void _1a5ce7548_unary(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b665ea_UnaryExprModel> _36026_m) {
	if ((_1a3cbe8eb_Struct((*((*(_36026_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a3b61cbb_StructIns> _3638_s = _1a3cbe8eb_Struct((*((*(_36026_m))._field_Expr))._field_Kind);;
		_1a5ce5aa7_operatorOverloadingUnary(_self_, &(_3638_s), (*((*_36026_m.alloc)._field_Op))._field_Id, (*(*(_36026_m))._field_Expr.alloc)._field_Model);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_36026_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aa56bdc8:;
			{
				_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit("(~(", 3));
				_1a5ce7d62_possibleRefExpr(_self_, (*(*(_36026_m))._field_Expr.alloc)._field_Model);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa56d5e4:;
			{
				if ((_2121303d5_Production || (_1a3cbd60e_Sptr((*((*(_36026_m))._field_Expr))._field_Kind) == nullptr))) {
					goto _match_end_1aa56d55b;
				};
				_1a5ce7d62_possibleRefExpr(_self_, (*(*(_36026_m))._field_Expr.alloc)._field_Model);
				_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1a5db85b4_locInfo((*(_self_))._field_oc, &((*_36026_m.alloc)._field_Op));
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1aa56d55b:;
	};
	_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1a5db6271_write((*(_self_))._field_oc, (*(*(_36026_m))._field_Op.alloc)._field_Kind);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a5ce7d62_possibleRefExpr(_self_, (*(*(_36026_m))._field_Expr.alloc)._field_Model);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a5ce7801_structureLit(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b66ebe_StructLitExprModel> _39133_m) {
	if ((*((*((*(_39133_m))._field_Strct))._field_Decl))._field_Binded) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1a5dc8a03_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_39133_m.alloc)._field_Strct);
	if ((*(*((*(_39133_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	if (((*_39133_m.alloc)._field_Args.len() > 0LL)) {
		_julec_label_1aa578885:;
		{
			auto expr = &((*(*(_39133_m))._field_Strct.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa578a2d:;
			if (it != expr_end) {
				jule::I64 _4048_i = it - expr->begin();
				jule::Ptr<_1a3b6121b_FieldIns> _40411_f = *it;
				{
					{
						auto expr = &((*_39133_m.alloc)._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa579886:;
						if (it != expr_end) {
							jule::Ptr<_1a3b66b28_StructArgExprModel> _40517_arg = *it;
							{
								if (((*(_40517_arg))._field_Field == _40411_f)) {
									_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
									static__1a5d0abcc_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_40517_arg.alloc)._field_Field))._field_Decl));
									_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
									_1a5ce7d62_possibleRefExpr(_self_, (*((*_40517_arg.alloc)._field_Expr))._field_Model);
									if ((((*(*(_39133_m))._field_Strct.alloc)._field_Fields.len() - _4048_i) > 1LL)) {
										_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1aa578a2d;
								};
							}
							_iter_next_1aa579886:;
							++it;
							goto _iter_begin_1aa579886;
						}
						_iter_end_1aa579886:;
					};
				}
				_iter_next_1aa578a2d:;
				++it;
				_4048_i++;
				goto _iter_begin_1aa578a2d;
			}
			_iter_end_1aa578a2d:;
		};
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a5ce7aa9_allocStructure(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b672bb_AllocStructLitExprModel> _42235_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1a5d0a8e1_structureIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_42235_m))._field_Lit))._field_Strct));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a5ce7801_structureLit(_self_, (*_42235_m.alloc)._field_Lit);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5ce7d62_possibleRefExpr(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Any _43032_expr) {
	{
		auto &_match_expr{ _43032_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa581be0:;
			{
				jule::Ptr<_1a3c31c26_Var> _4334_v = _43032_expr.unsafe_cast_ptr<_1a3c31c26_Var>();;
				if ((*(_4334_v))._field_Reference) {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1a5d0272e_model(_self_, _43032_expr);
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1aa581b8a:;
	};
	_1a5d0272e_model(_self_, _43032_expr);
}



inline void _1a5ce8280_castTraitFromTrait(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6784e_CastingExprModel>* _44440_m, jule::Ptr<_1a3b87a7d_Trait> _44466_t1, jule::Ptr<_1a3b87a7d_Trait> _44482_t2) {
	_1a5ce7d62_possibleRefExpr(_self_, (*((*((*(_44440_m))))._field_Expr))._field_Model);
	_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1a5db830b_pushAndWriteMaskMapper((*(_self_))._field_oc, _44466_t1, _44482_t2);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5ce8538_casting(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6784e_CastingExprModel> _45728_m) {
	{
		
		if (_1a5640e91_IsAny(&((*(_45728_m))._field_Kind))) {
			_case_begin_1aa5867a5:;
			{
				if (_1a3cbbd05_IsNil((*_45728_m.alloc)._field_ExprKind.ptr())) {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1a3cbddb2_TypeEnum((*(_45728_m))._field_ExprKind) != nullptr)) {
					_1a5ce7d62_possibleRefExpr(_self_, (*((*_45728_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I64 _4684_i = _1a5db7937_pushAnyType((*(_self_))._field_oc, (*_45728_m.alloc)._field_ExprKind);;
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_45728_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1aa5897a8:;
						{
							jule::Ptr<_1a3cc3801_Prim> _4725_prim = _1a3cbd378_Prim((*(_45728_m))._field_ExprKind);;
							if (((_4725_prim != nullptr) && _1b57470ba_IsInt((*_4725_prim.alloc)._field_Kind))) {
								_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1a5dc6270_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _4725_prim);
								_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1a5ce7d62_possibleRefExpr(_self_, (*(*(_45728_m))._field_Expr.alloc)._field_Model);
								_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1aa58a688;
							};
							goto _case_begin_1aa58a6dd;
						}
					}
					else {
						_case_begin_1aa58a6dd:;
						{
							_1a5ce7d62_possibleRefExpr(_self_, (*(*(_45728_m))._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1aa58a688:;
				};
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_4684_i));
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1a5640e91_IsAny(&((*(_45728_m))._field_ExprKind))) {
			_case_begin_1aa58684e:;
			{
				_1a5ce7d62_possibleRefExpr(_self_, (*((*_45728_m.alloc)._field_Expr))._field_Model);
				_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a3cbd60e_Sptr((*_45728_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a5dca74c_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a3cbd60e_Sptr((*(_45728_m))._field_Kind)))._field_Elem);
				} else {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1a5dca74c_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_45728_m.alloc)._field_Kind);
				};
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_2121303d5_Production))) {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a5db85b4_locInfo((*(_self_))._field_oc, &((*_45728_m.alloc)._field_Token));
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_1a5db7937_pushAnyType((*(_self_))._field_oc, (*_45728_m.alloc)._field_Kind)));
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a3cbd895_Ptr((*(_45728_m))._field_ExprKind.ptr()) != nullptr) || (_1a3cbd895_Ptr((*_45728_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa5868b5:;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1a5dca74c_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_45728_m.alloc)._field_Kind);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1a5ce7d62_possibleRefExpr(_self_, (*((*_45728_m.alloc)._field_Expr))._field_Model);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1a3cbeb82_Trait((*(_45728_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1aa58692b:;
			{
				if ((_1a3cbeb82_Trait((*_45728_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a5ce8280_castTraitFromTrait(_self_, &(_45728_m), _1a3cbeb82_Trait((*(_45728_m))._field_Kind), _1a3cbeb82_Trait((*(_45728_m))._field_ExprKind));
					return;;
				};
				_1a5ce7d62_possibleRefExpr(_self_, (*((*_45728_m.alloc)._field_Expr))._field_Model);
				_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a3cbd60e_Sptr((*(_45728_m))._field_Kind) != nullptr)) {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a5dca74c_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a3cbd60e_Sptr((*(_45728_m))._field_Kind)))._field_Elem);
				} else {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1a5dca74c_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_45728_m.alloc)._field_Kind);
				};
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_2121303d5_Production))) {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a5db85b4_locInfo((*(_self_))._field_oc, &((*_45728_m.alloc)._field_Token));
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1a5d0a02d_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a3cbeb82_Trait((*(_45728_m))._field_ExprKind));
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_1a5643ed8_FindTraitTypeOffset(_1a3cbeb82_Trait((*(_45728_m))._field_ExprKind), (*_45728_m.alloc)._field_Kind)));
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a3cbeb82_Trait((*(_45728_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa586992:;
			{
				_1a5dca74c_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_45728_m.alloc)._field_Kind);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1a5ce7d62_possibleRefExpr(_self_, (*((*_45728_m.alloc)._field_Expr))._field_Model);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1a5d0a02d_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a3cbeb82_Trait((*(_45728_m))._field_Kind));
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_1a5643ed8_FindTraitTypeOffset(_1a3cbeb82_Trait((*(_45728_m))._field_Kind), (*_45728_m.alloc)._field_ExprKind)));
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1aa58662e:;
	};
	jule::Ptr<_1a3cc3801_Prim> _5543_prim = _1a3cbd378_Prim((*(_45728_m))._field_Kind.ptr());;
	jule::Ptr<_1a3cc3801_Prim> _5553_eprim = _1a3cbd378_Prim((*_45728_m.alloc)._field_ExprKind.ptr());;
	if ((((_5553_eprim != nullptr) && (_5543_prim != nullptr)) && _1a3cc6c88_IsStr(_5543_prim))) {
		if (_1a3cc51e8_IsU8(_5553_eprim)) {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1a5ce7d62_possibleRefExpr(_self_, (*((*_45728_m.alloc)._field_Expr))._field_Model);
		_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1a5dca74c_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_45728_m.alloc)._field_Kind);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a5ce7d62_possibleRefExpr(_self_, (*(*(_45728_m))._field_Expr.alloc)._field_Model);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5ce87e1_models(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Slice<jule::Any> _57327_args) {
	if ((_57327_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_57327_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5b4b02:;
		if (it != expr_end) {
			jule::I64 _5778_i = it - expr->begin();
			jule::Any _57715_a = *it;
			{
				_1a5ce7d62_possibleRefExpr(_self_, _57715_a);
				if (((_57327_args.len() - _5778_i) > 1LL)) {
					_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1aa5b4b02:;
			++it;
			_5778_i++;
			goto _iter_begin_1aa5b4b02;
		}
		_iter_end_1aa5b4b02:;
	};
}



inline void _1a5ce8a99_args(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b68201_FnCallExprModel>* _58526_m) {
	jule::I64 _5867_j = 0LL;;
	if (((((*((*((*(_58526_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_58526_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_58526_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1a3b72c44_IsSelf((*((*((*((*(_58526_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_5867_j)++;
	};
	{
		auto expr = &((*((*(_58526_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5b7cc0:;
		if (it != expr_end) {
			jule::I64 _5917_i = it - expr->begin();
			jule::Any _59110_arg = *it;
			{
				jule::Ptr<_1a3b76055_ParamIns> _5924_p = (*(*((*(_58526_m))))._field_Func.alloc)._field_Params[_5867_j];;
				if ((((*(_5924_p))._field_Decl != nullptr) && (*(*(_5924_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _59110_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1aa5baab4:;
							{
								jule::Ptr<_1a3c31c26_Var> _5966_v = _59110_arg.unsafe_cast_ptr<_1a3c31c26_Var>();;
								if ((*(_5966_v))._field_Reference) {
									_1a5d0272e_model(_self_, _59110_arg);
									goto _julec_label_1aa5ba50e;
								};
							}
						}
						_match_end_1aa5baa5e:;
					};
					_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1a5d0272e_model(_self_, _59110_arg);
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1aa5ba50e;
				};
				_1a5ce7d62_possibleRefExpr(_self_, _59110_arg);
				_julec_label_1aa5ba50e:;
				if ((((*((*(_58526_m))))._field_Args.len() - _5917_i) > 1LL)) {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_5867_j)++;
			}
			_iter_next_1aa5b7cc0:;
			++it;
			_5917_i++;
			goto _iter_begin_1aa5b7cc0;
		}
		_iter_end_1aa5b7cc0:;
	};
}



inline void _1a5ce8d52_modelForCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Any _61633_expr) {
	{
		auto &_match_expr{ _61633_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1aa5c08ee:;
			{
				_1a5cec3c7_funcIns(_self_, _61633_expr.cast_ptr<_1a3b770cd_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa5c0756:;
			{
				jule::Ptr<_1a3b6ad6e_StructSubIdentExprModel> _6228_ssie = _61633_expr.unsafe_cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>();;
				if (((*(_6228_ssie))._field_Method != nullptr)) {
					_1a5cec3c7_funcIns(_self_, (*_6228_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1aa5c0888:;
	};
	_1a5ce7d62_possibleRefExpr(_self_, _61633_expr);
}



inline void _1a5ce910a_pushCallInf(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b68201_FnCallExprModel>* _63129_m) {
	if ((_2121303d5_Production || (!((*((*((*(_63129_m))))._field_Func))._field_Anon)))) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_63129_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_63129_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1aa5c442a:;
				{
					if ((*((*((*((*((*((*(_63129_m))))._field_Expr.unsafe_cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1aa5c43c5:;
		};
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1a5db85b4_locInfo((*(_self_))._field_oc, &((*((*(_63129_m))))._field_Token));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_63129_m))))._field_Args.len() != 0LL)) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1a5ce944b_isWrapped(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b68201_FnCallExprModel>* _65431_m) {
	if ((((!(_1a3b78563_IsBuiltin((*((*(_65431_m))))._field_Func.ptr()))) && ((*((*(*((*(_65431_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1a3b72c44_IsSelf((*((*((*((*(_65431_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_65431_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1aa5c9188:;
				{
					jule::Ptr<_1a3b6ad6e_StructSubIdentExprModel> _6589_ssie = (*((*(_65431_m))))._field_Expr.unsafe_cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>();;
					{
						
						if (_1a3b72eca_IsRef((*((*((*((*(_65431_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1a3cbd60e_Sptr((*((*(_6589_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1aa5cad6b:;
							{
								goto _match_end_1aa5ca0ce;
							}
						}
						else {
							_case_begin_1aa5ca145:;
							{
								if ((_1a3cbe8eb_Struct((*((*(_6589_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*(_6589_ssie))._field_Expr.alloc)._field_Lvalue))) {
										_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1a5d0272e_model(_self_, (*(*(_6589_ssie))._field_Expr.alloc)._field_Model);
										_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1aa5ca0ce:;
					};
				}
			}
			_match_end_1aa5c9133:;
		};
	};
	return false;;
}



inline jule::Bool _1a5ce978c_writeReceiver(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Any _67834_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _67834_m };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aa5d0931:;
			{
				_1a5ce7d62_possibleRefExpr(_self_, (*((*(_67834_m.unsafe_cast_ptr<_1a3b665ea_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1aa5d0b2e:;
			{
				_1a5ce7d62_possibleRefExpr(_self_, (*((*((*(_67834_m.unsafe_cast_ptr<_1a3e47c2d_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aa5d0ab8:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:687:4"));;
			}
		}
		_match_end_1aa5d0a63:;
	};
}



inline void _1a5ce9a45_pureFuncCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b68201_FnCallExprModel>* _69134_m) {
	jule::Bool _6923_wrapped = _1a5ce944b_isWrapped(_self_, _69134_m);;
	_1a5ce8d52_modelForCall(_self_, (*((*(_69134_m))))._field_Expr);
	if ((!(_1a3b78563_IsBuiltin((*((*(_69134_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_69134_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_69134_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1a564312a_HasDirective(&((*(*((*((*(_69134_m))))._field_Func))._field_Decl.alloc)._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_69134_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa5d4c76:;
					if (it != expr_end) {
						jule::I64 _69811_i = it - expr->begin();
						jule::Ptr<_1a3cb9341_InsGeneric> _69818_g = *it;
						{
							_1a5dca74c_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_69818_g))._field_Kind);
							if ((((*(*((*(_69134_m))))._field_Func.alloc)._field_Generics.len() - _69811_i) > 1LL)) {
								_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1aa5d4c76:;
						++it;
						_69811_i++;
						goto _iter_begin_1aa5d4c76;
					}
					_iter_end_1aa5d4c76:;
				};
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1a5ce910a_pushCallInf(_self_, _69134_m);
	if (((*(*((*(_69134_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_69134_m))))._field_Func.alloc)._field_Anon)))) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_69134_m))))._field_Args.len() > 0LL)) {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1a3b78563_IsBuiltin((*((*(_69134_m))))._field_Func))) && ((*(*((*((*(_69134_m))))._field_Func))._field_Decl.alloc)._field_Params.len() > 0LL)) && _1a3b72c44_IsSelf((*((*((*((*(_69134_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_69134_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1aa5db981:;
				{
					jule::Ptr<_1a3b6ad6e_StructSubIdentExprModel> _7229_ssie = (*((*(_69134_m))))._field_Expr.unsafe_cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>();;
					{
						
						if (_1a3b72eca_IsRef((*((*((*((*(_69134_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1aa5e148b:;
							{
								_1a5ce978c_writeReceiver(_self_, (*((*(_7229_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1a3cbd60e_Sptr((*((*(_7229_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1aa5dca4d:;
							{
								jule::Bool _7296_safe = _1a5ce978c_writeReceiver(_self_, (*(*(_7229_ssie))._field_Expr.alloc)._field_Model);;
								if (_7296_safe) {
									_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_2121303d5_Production))) {
										_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
										_1a5db85b4_locInfo((*(_self_))._field_oc, &((*((*(_69134_m))))._field_Token));
										_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									};
									_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1aa5dc9b5:;
							{
								if ((_1a3cbe8eb_Struct((*((*(_7229_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_7229_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1aa5dd2ac:;
											{
												jule::Ptr<_1a3c31c26_Var> _7438_v = (*((*(_7229_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1a3c31c26_Var>();;
												if ((*(_7438_v))._field_Reference) {
													goto _match_end_1aa5dd785;
												};
												goto _case_begin_1aa5dd7da;
											}
										}
										else {
											_case_begin_1aa5dd7da:;
											{
												_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1aa5dd785:;
									};
								};
								if (_6923_wrapped) {
									_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1a3cbd895_Ptr((*((*(_7229_ssie))._field_Expr))._field_Kind) == nullptr)) {
									_1a5d0272e_model(_self_, (*(*(_7229_ssie))._field_Expr.alloc)._field_Model);
								} else {
									_1a5ce7d62_possibleRefExpr(_self_, (*((*((*(*(_7229_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1a3b665ea_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1aa5dc94e:;
					};
					if (((*((*(_69134_m))))._field_Args.len() > 0LL)) {
						_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1aa5db640:;
				{
					_1a5ce7d62_possibleRefExpr(_self_, (*((*((*(_69134_m))))._field_Expr.unsafe_cast_ptr<_1a3b6a4cd_TraitSubIdentExprModel>()))._field_Expr);
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_69134_m))))._field_Args.len() > 0LL)) {
						_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1aa5db91a:;
		};
	};
	_1a5ce8a99_args(_self_, _69134_m);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_6923_wrapped) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1a5ce9ced_coFuncCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b68201_FnCallExprModel>* _78132_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a5db6727_addIndent((*(_self_))._field_oc);
	_1e7be2632_StrBuilder _7847_head = static__1e7be28eb_New(32LL);;
	_1e7beb262_WriteStr(&_7847_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_78132_m))))._field_Func))._field_Owner != nullptr)) {
		_1e7beb262_WriteStr(&_7847_head, jule::Str::lit("_self_", 6));
		if (((*((*(_78132_m))))._field_Args.len() > 0LL)) {
			_1e7beb262_WriteStr(&_7847_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_78132_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa6008da:;
		if (it != expr_end) {
			jule::I64 _7927_i = it - expr->begin();
			jule::Any _79210_arg = *it;
			{
				if ((_7927_i > 0LL)) {
					_1e7beb262_WriteStr(&_7847_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _79210_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1aa601e2a:;
						{
							jule::Ptr<_1a3c31c26_Var> _7989_v = _79210_arg.unsafe_cast_ptr<_1a3c31c26_Var>();;
							static__1a5d0aeb8_var(&(_7847_head), _7989_v);
							goto _iter_next_1aa6008da;
						}
					}
					_match_end_1aa601699:;
				};
				jule::Str _8024_name = (jule::Str::lit("_co_arg_", 8) + _1b5739d16_Itoa(_7927_i));;
				_1e7beb262_WriteStr(&_7847_head, _8024_name);
				_1a5db6b23_indent((*(_self_))._field_oc);
				_1a5dca74c_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(*((*(_78132_m))))._field_Func.alloc)._field_Params[_7927_i]))._field_Kind);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*((*((*(_78132_m))))._field_Func))._field_Params[_7927_i]))._field_Decl))._field_Reference) {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
				};
				_1a5db6271_write((*(_self_))._field_oc, _8024_name);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1a5ce7d62_possibleRefExpr(_self_, _79210_arg);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _8144_argS = jule::Any(_8024_name, &__jule_any_type4);;
				(*((*(_78132_m))))._field_Args[_7927_i]=(*(((jule::Any*)((&(_8144_argS))))));
			}
			_iter_next_1aa6008da:;
			++it;
			_7927_i++;
			goto _iter_begin_1aa6008da;
		}
		_iter_end_1aa6008da:;
	};
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1e7beaea9_Write(&(*(*(_self_))._field_oc.alloc)._field_Buf, _1e7bec50a_Buf(&_7847_head));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1a5db6727_addIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5ce9a45_pureFuncCall(_self_, _78132_m);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a5cea161_writeUseExpr(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b770cd_FnIns>* _83234_f, jule::Ptr<_1a3c8982d_Data> _83249_d) {
	if ((_1a3cc019e_Tup((*(_83249_d))._field_Kind.ptr()) == nullptr)) {
		_1a5ce7d62_possibleRefExpr(_self_, (*_83249_d.alloc)._field_Model);
		_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1a3b6b8db_TupleExprModel> _8387_tup = (*_83249_d.alloc)._field_Model.cast_ptr<_1a3b6b8db_TupleExprModel>(&__jule_any_type81);;
	_1a5dd0026_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1a3cc019e_Tup((*((*(_83234_f))))._field_Result.ptr()));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_8387_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa610554:;
		if (it != expr_end) {
			jule::I64 _8417_i = it - expr->begin();
			jule::Ptr<_1a3c8982d_Data> _84110_data = *it;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_8417_i));
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1a5ce7d62_possibleRefExpr(_self_, (*(_84110_data))._field_Model);
				if ((((*(_8387_tup))._field_Datas.len() - _8417_i) > 1LL)) {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1aa610554:;
			++it;
			_8417_i++;
			goto _iter_begin_1aa610554;
		}
		_iter_end_1aa610554:;
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1a5cea419_funcCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b68201_FnCallExprModel> _85329_m) {
	if ((*(_85329_m))._field_IsCo) {
		_1a5ce9ced_coFuncCall(_self_, &(_85329_m));
		return;;
	};
	if (((_1a3b78563_IsBuiltin((*_85329_m.alloc)._field_Func.ptr()) || (!((*((*(*(_85329_m))._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_85329_m.alloc)._field_Except != nullptr) && ((*(*(_85329_m))._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1a5ce9a45_pureFuncCall(_self_, &(_85329_m));
		return;;
	};
	_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1a5db6727_addIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1a5ce9a45_pureFuncCall(_self_, &(_85329_m));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5db6b23_indent((*(_self_))._field_oc);
	if (((*_85329_m.alloc)._field_Except != nullptr)) {
		if ((((*(*(_85329_m))._field_Func.alloc)._field_Result == nullptr) || (!((*_85329_m.alloc)._field_Assigned)))) {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1a5cdec16_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_85329_m.alloc)._field_Except);
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _8815_forwarded = _1a56408b9_IsForwarded(&((*_85329_m.alloc)._field_Except));;
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_8815_forwarded) {
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _8869_stmt = (*(*(_85329_m))._field_Except.alloc)._field_Stmts[((*(*(_85329_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _8869_stmt };
				
				if (_match_expr.type == &__jule_any_type23) {
					_case_begin_1aa61e145:;
					{
						((*((*(_85329_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_85329_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1a5db6727_addIndent((*(_self_))._field_oc);
						_1a5cde95d_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_85329_m.alloc)._field_Except));
						_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1a5db6b23_indent((*(_self_))._field_oc);
						_1a5cea161_writeUseExpr(_self_, &((*_85329_m.alloc)._field_Func), _8869_stmt.cast_ptr<_1a3c8982d_Data>(&__jule_any_type23));
						_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1a5db6925_doneIndent((*(_self_))._field_oc);
						_1a5db6b23_indent((*(_self_))._field_oc);
						_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1aa620652:;
					{
						_1a5cdec16_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_85329_m.alloc)._field_Except);
					}
				}
				_match_end_1aa6205ec:;
			};
			if (_8815_forwarded) {
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1a5d029d7_initExpr(_self_, (*(*(_85329_m))._field_Func.alloc)._field_Result);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1a5db6925_doneIndent((*(_self_))._field_oc);
	} else {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1a5db85b4_locInfo((*(_self_))._field_oc, &((*_85329_m.alloc)._field_Token));
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1a3b74570_IsVoid((*((*(_85329_m))._field_Func))._field_Decl)))) {
			_1a5db6b23_indent((*(_self_))._field_oc);
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1a5db6925_doneIndent((*(_self_))._field_oc);
	};
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a5cea6c2_slice(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b685ca_SliceExprModel> _92626_m) {
	if (((*(_92626_m))._field_Elems.len() == 0LL)) {
		_1a5dc7b56_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_92626_m.alloc)._field_ElemKind);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1a5dc7b56_asSlice((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_92626_m.alloc)._field_ElemKind);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("::make({", 8));
	_1a5ce87e1_models(_self_, (*_92626_m.alloc)._field_Elems);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a5cea97a_indexing(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b68a81_IndexingExprModel> _93829_m) {
	{
		auto &_match_expr{ (*((*(_93829_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aa631e27:;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_2121303d5_Production))) {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a5db85b4_locInfo((*(_self_))._field_oc, &((*(_93829_m))._field_Token));
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _9494_s = _1b5749d26_ReadStr((*((*(_93829_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1b5747b9d_Const>().ptr());;
				_1a5d037c9_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _9494_s);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_9494_s.len()));
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a5ce7d62_possibleRefExpr(_self_, (*((*_93829_m.alloc)._field_Index))._field_Model);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1aa631dc2:;
	};
	_1a5ce7d62_possibleRefExpr(_self_, (*((*_93829_m.alloc)._field_Expr))._field_Model);
	{
		
		if (_2121303d5_Production || (_1a3cbd895_Ptr((*(*(_93829_m))._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1a3cbee18_Map((*((*(_93829_m))._field_Expr))._field_Kind) != nullptr) || _1a5640bc7_IsExprComesFromBind(&((*_93829_m.alloc)._field_Expr))) {
			_case_begin_1aa63acdd:;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1a5ce7d62_possibleRefExpr(_self_, (*(*(_93829_m))._field_Index.alloc)._field_Model);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1aa631ec1:;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1a5db85b4_locInfo((*(_self_))._field_oc, &((*_93829_m.alloc)._field_Token));
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1a5ce7d62_possibleRefExpr(_self_, (*(*(_93829_m))._field_Index.alloc)._field_Model);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1aa6386d1:;
	};
}



inline void _1a5ceac33_unsafeIndexing(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3e46ca4_UnsafeIndexingExprModel> _97835_m) {
	_1a5ce7d62_possibleRefExpr(_self_, (*((*((*(_97835_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_2121303d5_Production || (_1a3cbd895_Ptr((*(*((*(_97835_m))._field_Node))._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1a3cbee18_Map((*((*((*(_97835_m))._field_Node))._field_Expr))._field_Kind) != nullptr)) {
			_case_begin_1aa63eb27:;
			{
				_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1a5ce7d62_possibleRefExpr(_self_, (*((*(*(_97835_m))._field_Node.alloc)._field_Index))._field_Model);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1aa63dbc0:;
			{
				_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1a5ce7d62_possibleRefExpr(_self_, (*((*(*(_97835_m))._field_Node.alloc)._field_Index))._field_Model);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1aa63e770:;
	};
}



inline void _1a5ceaedb_anonFunc(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b69037_AnonFnExprModel> _99529_m) {
	jule::Bool _9963_closure = _1a56412d2_IsClosure(&(_99529_m));;
	jule::Str _9973_ident = _1a5db75e6_pushAnonFn((*(_self_))._field_oc, &(_99529_m));;
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1a5dca076_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_99529_m))._field_Func);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1a5db6271_write((*(_self_))._field_oc, _9973_ident);
	if (_9963_closure) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1a5db6271_write((*(_self_))._field_oc, _9973_ident);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1a5db6271_write((*(_self_))._field_oc, _9973_ident);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_99529_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa649428:;
			if (it != expr_end) {
				jule::I64 _10099_i = it - expr->begin();
				jule::Ptr<_1a3c31c26_Var> _100916_v = *it;
				{
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1a5d0aeb8_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _100916_v);
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1a5ce6ed7_var(_self_, _100916_v);
					if ((((*_99529_m.alloc)._field_Captured.len() - _10099_i) > 1LL)) {
						_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1aa649428:;
				++it;
				_10099_i++;
				goto _iter_begin_1aa649428;
			}
			_iter_end_1aa649428:;
		};
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1a5db6271_write((*(_self_))._field_oc, _9973_ident);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1a5ceb294_mapExpr(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b698b7_MapExprModel> _102628_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1a5dca74c_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_102628_m))._field_KeyKind);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a5dca74c_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_102628_m.alloc)._field_ValKind);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(">({", 3));
	if (((*_102628_m.alloc)._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*_102628_m.alloc)._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa6527e9:;
			if (it != expr_end) {
				jule::I64 _10339_i = it - expr->begin();
				jule::Ptr<_1a3b69411_KeyValPairExprModel> _103316_pair = *it;
				{
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
					_1a5ce7d62_possibleRefExpr(_self_, (*(_103316_pair))._field_Key);
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					_1a5ce7d62_possibleRefExpr(_self_, (*_103316_pair.alloc)._field_Val);
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					if ((((*_102628_m.alloc)._field_Entries.len() - _10339_i) > 1LL)) {
						_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1aa6527e9:;
				++it;
				_10339_i++;
				goto _iter_begin_1aa6527e9;
			}
			_iter_end_1aa6527e9:;
		};
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a5ceb54c_slicing(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b69e4a_SlicingExprModel> _104728_m) {
	_1a5ce7d62_possibleRefExpr(_self_, (*(_104728_m))._field_Expr);
	_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_2121303d5_Production))) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a5db85b4_locInfo((*(_self_))._field_oc, &((*_104728_m.alloc)._field_Token));
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a5ce7d62_possibleRefExpr(_self_, (*_104728_m.alloc)._field_Left);
	if (((*_104728_m.alloc)._field_Right != nullptr)) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a5ce7d62_possibleRefExpr(_self_, (*_104728_m.alloc)._field_Right);
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5ceb805_traitSub(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6a4cd_TraitSubIdentExprModel> _106329_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1a5d0a02d_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_106329_m))._field_Trt);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1a5ce7d62_possibleRefExpr(_self_, (*_106329_m.alloc)._field_Expr);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_2121303d5_Production))) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a5db85b4_locInfo((*(_self_))._field_oc, &((*_106329_m.alloc)._field_Token));
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1a5d09956_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_106329_m.alloc)._field_Method));
}



inline void _1a5cebaad_structureSub(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6ad6e_StructSubIdentExprModel> _107933_m) {
	_1a5ce7d62_possibleRefExpr(_self_, (*((*(_107933_m))._field_Expr))._field_Model);
	if (((*_107933_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1a5d0abcc_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_107933_m.alloc)._field_Field))._field_Decl));
}



inline void _1a5cebd66_array(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6b5de_ArrayExprModel> _108826_m) {
	_1a5dc8d66_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_108826_m))._field_Kind);
	if (((*_108826_m.alloc)._field_Elems.len() == 0LL)) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_108826_m.alloc)._field_Elems.len() == 2LL) && ((*(_108826_m))._field_Elems[1LL] == nullptr))) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a5ce7d62_possibleRefExpr(_self_, (*(_108826_m))._field_Elems[0LL]);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("({", 2));
	_1a5ce87e1_models(_self_, (*_108826_m.alloc)._field_Elems);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1a5cec11e_funcInsCommon(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b770cd_FnIns> _111134_m) {
	_1a5dca3d9_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _111134_m);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a5cec3c7_funcIns(_self_, _111134_m);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5cec3c7_funcIns(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b770cd_FnIns> _111828_m) {
	if ((((*(_111828_m))._field_Decl != nullptr) && (*(*(_111828_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1a3b3c55a_Directive> _11204_d = _1a5642c62_FindDirective(&((*(*(_111828_m))._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_11204_d != nullptr)) {
			_1a5db6529_writeBytes((*(_self_))._field_oc, _1a5dc2d93_concatAllParts((*_11204_d.alloc)._field_Args));
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a5d09c42_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_111828_m));
}



inline void _1a5cec680_tuple(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6b8db_TupleExprModel> _112926_m) {
	{
		auto expr = &((*_112926_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa66dc66:;
		if (it != expr_end) {
			jule::I64 _11308_i = it - expr->begin();
			jule::Ptr<_1a3c8982d_Data> _113015_d = *it;
			{
				_1a5ce7d62_possibleRefExpr(_self_, (*(_113015_d))._field_Model);
				_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_112926_m))._field_Datas.len() - _11308_i) > 1LL)) {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1a5db6b23_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1aa66dc66:;
			++it;
			_11308_i++;
			goto _iter_begin_1aa66dc66;
		}
		_iter_end_1aa66dc66:;
	};
}



inline void _1a5cec938_newCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6c568_BuiltinNewCallExprModel> _114028_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1a5dca74c_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_114028_m))._field_Kind);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_114028_m.alloc)._field_Init != nullptr)) {
		_1a5ce7d62_possibleRefExpr(_self_, (*_114028_m.alloc)._field_Init);
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5cecbe1_outCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6bcb5_BuiltinOutCallExprModel> _115028_m) {
	if (((*(_115028_m))._field_Debug && _2121303d5_Production)) {
		return;;
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1a5ce7d62_possibleRefExpr(_self_, (*_115028_m.alloc)._field_Expr);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5cece99_outlnCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6c18e_BuiltinOutlnCallExprModel> _115930_m) {
	if (((*(_115930_m))._field_Debug && _2121303d5_Production)) {
		return;;
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1a5ce7d62_possibleRefExpr(_self_, (*_115930_m.alloc)._field_Expr);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5ced252_panicCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6c942_BuiltinPanicCallExprModel> _116830_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1a5ce7d62_possibleRefExpr(_self_, (*(_116830_m))._field_Expr);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1a5db85b4_locInfo((*(_self_))._field_oc, &((*_116830_m.alloc)._field_Token));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a5ced50a_assertCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6cde8_BuiltinAssertCallExprModel> _117631_m) {
	if (_2121303d5_Production) {
		return;;
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1a5ce7d62_possibleRefExpr(_self_, (*(_117631_m))._field_Expr);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1a5d037c9_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_117631_m.alloc)._field_Log);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1a5db85b4_locInfo((*(_self_))._field_oc, &((*_117631_m.alloc)._field_Token));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a5ced7b3_errorCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6e9ee_BuiltinErrorCallExprModel> _118930_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1a3b74570_IsVoid((*((*(_118930_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_118930_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1aa6801c8:;
				{
					jule::Ptr<_1a3c31c26_Var> _11945_v = (*((*(_118930_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a3c31c26_Var>();;
					if ((*(_11945_v))._field_Ident.equal("error", 5)) {
						_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1aa680173:;
		};
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1a5dd06ec_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_118930_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_118930_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1aa68463e:;
				{
					jule::Ptr<_1a3c31c26_Var> _12065_v = (*((*(_118930_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a3c31c26_Var>();;
					if ((*(_12065_v))._field_Ident.equal("error", 5)) {
						_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1aa6845d9:;
		};
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1a5ce7d62_possibleRefExpr(_self_, (*((*(_118930_m))._field_Err))._field_Model);
	jule::I64 _12153_i = _1a5db7937_pushAnyType((*(_self_))._field_oc, (*(*(_118930_m))._field_Err.alloc)._field_Kind);;
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_12153_i));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1a5ceda6b_copyCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6e625_BuiltinCopyCallExprModel> _122129_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1a5ce7d62_possibleRefExpr(_self_, (*((*(_122129_m))._field_Dest))._field_Model);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a5ce7d62_possibleRefExpr(_self_, (*((*_122129_m.alloc)._field_Src))._field_Model);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5cedd24_lenCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6da75_BuiltinLenCallExprModel> _122928_m) {
	_1a5ce7d62_possibleRefExpr(_self_, (*((*(_122928_m))._field_Expr))._field_Model);
	_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1a5cee0cc_capCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6dd72_BuiltinCapCallExprModel> _123428_m) {
	_1a5ce7d62_possibleRefExpr(_self_, (*((*(_123428_m))._field_Expr))._field_Model);
	_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1a5cee385_deleteCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6e24b_BuiltinDeleteCallExprModel> _123931_m) {
	_1a5ce7d62_possibleRefExpr(_self_, (*((*(_123931_m))._field_Dest))._field_Model);
	if (((*_123931_m.alloc)._field_Key != nullptr)) {
		_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(".del(", 5));
		_1a5ce7d62_possibleRefExpr(_self_, (*(*(_123931_m))._field_Key.alloc)._field_Model);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1a5cee63d_makeCallSlice(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6d39e_BuiltinMakeCallExprModel>* _125035_m) {
	jule::Ptr<_1a3cc7d00_Slc> _12517_slice = _1a3cbe3ce_Slc((*((*(_125035_m))))._field_Kind.ptr());;
	_1a5dca74c_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_125035_m))))._field_Kind);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a5ce7d62_possibleRefExpr(_self_, (*((*(_125035_m))))._field_Len);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_125035_m))))._field_Cap != nullptr)) {
		_1a5ce7d62_possibleRefExpr(_self_, (*((*(_125035_m))))._field_Cap);
	} else {
		_1a5ce7d62_possibleRefExpr(_self_, (*((*(_125035_m))))._field_Len);
	};
	if (_1a5dd2369_shouldInitialized(&((*(_12517_slice))._field_Elem))) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a5d029d7_initExpr(_self_, (*_12517_slice.alloc)._field_Elem);
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5cee8e6_makeCallStr(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6d39e_BuiltinMakeCallExprModel>* _126833_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a5ce7d62_possibleRefExpr(_self_, (*((*(_126833_m))))._field_Len);
	if (((*((*(_126833_m))))._field_Cap != nullptr)) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a5ce7d62_possibleRefExpr(_self_, (*((*(_126833_m))))._field_Cap);
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5ceeb9e_makeCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6d39e_BuiltinMakeCallExprModel> _127929_m) {
	if ((_1a3cbe3ce_Slc((*(_127929_m))._field_Kind.ptr()) != nullptr)) {
		_1a5cee63d_makeCallSlice(_self_, &(_127929_m));
		return;;
	};
	_1a5cee8e6_makeCallStr(_self_, &(_127929_m));
}



inline void _1a5ceee57_pushToSlice(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3e4717d_PushToSliceExprModel> _128732_m) {
	;
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1a5dc7b56_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_128732_m))._field_Elems))._field_ElemKind);
	jule::Bool _12957_ptr = false;;
	{
		auto &_match_expr{ (*(_128732_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aa6a1a46:;
			{
				jule::Ptr<_1a3b665ea_UnaryExprModel> _12998_u = (*(_128732_m))._field_Dest.unsafe_cast_ptr<_1a3b665ea_UnaryExprModel>();;
				if ((_1a3cbd895_Ptr((*((*(_12998_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1a5ce7d62_possibleRefExpr(_self_, (*(*(_12998_u))._field_Expr.alloc)._field_Model);
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_12957_ptr=true;
					goto _match_end_1aa6a3790;
				};
				goto _case_begin_1aa6a37e5;
			}
		}
		else {
			_case_begin_1aa6a37e5:;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1a5ce7d62_possibleRefExpr(_self_, (*_128732_m.alloc)._field_Dest);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1aa6a3790:;
	};
	if (((*(*(_128732_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_12957_ptr) {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1a5ce7d62_possibleRefExpr(_self_, (*((*(_128732_m))._field_Elems))._field_Elems[0LL]);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_12957_ptr) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa((*(*(_128732_m))._field_Elems.alloc)._field_Elems.len()));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_128732_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa6aa258:;
		if (it != expr_end) {
			jule::Any _133315_e = *it;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_12957_ptr) {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1a5ce7d62_possibleRefExpr(_self_, _133315_e);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1aa6aa258:;
			++it;
			goto _iter_begin_1aa6aa258;
		}
		_iter_end_1aa6aa258:;
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a5d00210_appendToSlice(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3e47557_AppendToSliceExprModel> _134734_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a5ce7d62_possibleRefExpr(_self_, (*(_134734_m))._field_Dest);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1a5ce7d62_possibleRefExpr(_self_, (*_134734_m.alloc)._field_Slice);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1a5d004b8_appendCall(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6d778_BuiltinAppendCallExprModel> _135531_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1a5ce7d62_possibleRefExpr(_self_, (*(_135531_m))._field_Dest);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1a5ce7d62_possibleRefExpr(_self_, (*_135531_m.alloc)._field_Elements);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5d00771_sizeof(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b701a3_SizeofExprModel> _136327_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1a5ce7d62_possibleRefExpr(_self_, (*(_136327_m))._field_Expr);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5d00a29_alignof(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b70390_AlignofExprModel> _136928_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1a5ce7d62_possibleRefExpr(_self_, (*(_136928_m))._field_Expr);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5d00cd2_runeLit(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b70637_RuneExprModel> _137524_m) {
	if (((*(_137524_m))._field_Code <= 127LL)) {
		_1e7beb51a_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _13788_b = _1a5d031ad_sbtoa(static_cast<jule::U8>((*_137524_m.alloc)._field_Code));;
		if (_13788_b.equal("'", 1)) {
			_1e7beb51a_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
		};
		_1e7beb262_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _13788_b);
		_1e7beb51a_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1a5d03e5b_itoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_137524_m.alloc)._field_Code));
}



inline void _1a5d0108a_structureStatic(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b6b215_StructStaticIdentExprModel> _138936_m) {
	static__1a5d09c42_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_138936_m))._field_Method));
}



inline void _1a5d01343_integratedToStr(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b70934_IntegratedToStrExprModel> _139336_m) {
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1a5ce7d62_possibleRefExpr(_self_, (*(_139336_m))._field_Expr);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a5d015eb_backendEmit(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b70d0d_BackendEmitExprModel> _139932_m) {
	if (((*(_139932_m))._field_Exprs.len() == 0LL)) {
		_1a5db6271_write((*(_self_))._field_oc, (*_139932_m.alloc)._field_Code);
		return;;
	};
	jule::I64 _14043_n = _1e7bebedd_Len(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _14057_args = jule::Slice<jule::Any>::alloc((*_139932_m.alloc)._field_Exprs.len(), (*_139932_m.alloc)._field_Exprs.len());;
	{
		auto expr = &((*_139932_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa6bdb0c:;
		if (it != expr_end) {
			jule::I64 _14068_i = it - expr->begin();
			jule::Any _140615_expr = *it;
			{
				_1a5ce7d62_possibleRefExpr(_self_, _140615_expr);
				jule::Slice<jule::U8> _14088_buf = _1e7bec50a_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_14057_args[_14068_i]=jule::Any(static_cast<jule::Str>(_14088_buf.slice(_14043_n)), &__jule_any_type4);
				{
					_1e7bec7b3_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _14088_buf.slice(0LL, _14043_n));
				};
			}
			_iter_next_1aa6bdb0c:;
			++it;
			_14068_i++;
			goto _iter_begin_1aa6bdb0c;
		}
		_iter_end_1aa6bdb0c:;
	};
	_1a5db6271_write((*(_self_))._field_oc, _1a3e3282d_Format((*_139932_m.alloc)._field_Code, _14057_args));
}



inline void _1a5d018a4_free(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3b7110a_FreeExprModel> _141525_m) {
	_1a5ce7d62_possibleRefExpr(_self_, (*(_141525_m))._field_Expr);
	if (_21212ecca_RC) {
		_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1a5d01b5c_strComp(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3e4608e_StrCompExprModel> _142428_m) {
	if ((*(_142428_m))._field_NotEq) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _14283_s = _1b5749d26_ReadStr((*_142428_m.alloc)._field_Right.ptr());;
	_1a5ce7d62_possibleRefExpr(_self_, (*_142428_m.alloc)._field_Left);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1a5d037c9_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _14283_s);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_14283_s.len()));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_142428_m.alloc)._field_NotEq) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1a5d01e15_emptyCompare(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3e45797_EmptyCompareExprModel> _144033_m) {
	if ((*(_144033_m))._field_Neg) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a5ce7d62_possibleRefExpr(_self_, (*_144033_m.alloc)._field_Expr);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1a5d021bd_unsafeDeref(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3e47c2d_UnsafeDerefExprModel> _144932_m) {
	{
		
		if ((_1a3cbd60e_Sptr((*((*((*(_144932_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa6cc5bb:;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a5ce7d62_possibleRefExpr(_self_, (*(*((*(_144932_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1aa6cc214:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1456:4"));;
			}
		}
		_match_end_1aa6cc115:;
	};
}



inline void _1a5d02476_unsafeCasting(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3e4802a_UnsafeCastingExprModel> _146034_m) {
	{
		
		if (_1a5640e91_IsAny(&((*((*(_146034_m))._field_Base))._field_ExprKind))) {
			_case_begin_1aa6d026c:;
			{
				_1a5ce7d62_possibleRefExpr(_self_, (*((*(*(_146034_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1a3cbd60e_Sptr((*(*(_146034_m))._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1a5dca74c_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1a3cbd60e_Sptr((*((*(_146034_m))._field_Base))._field_Kind)))._field_Elem);
				} else {
					_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1a5dca74c_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_146034_m))._field_Base.alloc)._field_Kind);
				};
				_1a5db6271_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1aa6cedb5:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1473:4"));;
			}
		}
		_match_end_1aa6cecc7:;
	};
}



inline void _1a5d0272e_model(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Any _147726_m) {
	{
		auto &_match_expr{ _147726_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aa6d5937:;
			{
				_1a5db6271_write((*(_self_))._field_oc, _147726_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1aa6d5ad0:;
			{
				_1a5db6271_write((*(_self_))._field_oc, (*(_147726_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1aa6d5b46:;
			{
				_1a5dca74c_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _147726_m.cast_ptr<_1a3cbac27_TypeKind>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aa6d5bac:;
			{
				_1a5ce5689_constant(_self_, _147726_m.cast_ptr<_1b5747b9d_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa6d5c23:;
			{
				_1a5ce6ed7_var(_self_, _147726_m.cast_ptr<_1a3c31c26_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1aa6d5c89:;
			{
				_1a5ce7290_structureIns(_self_, _147726_m.cast_ptr<_1a3b61cbb_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1aa6d5d00:;
			{
				_1a5cec11e_funcInsCommon(_self_, _147726_m.cast_ptr<_1a3b770cd_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1aa6d695a:;
			{
				_1a5ce6976_unsafeBinary(_self_, (*(_147726_m.unsafe_cast_ptr<_1a3e4691e_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1aa6d69c1:;
			{
				_1a5ce6c2e_binary(_self_, _147726_m.cast_ptr<_1a3b66221_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aa6d6a37:;
			{
				_1a5ce7548_unary(_self_, _147726_m.cast_ptr<_1a3b665ea_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1aa6d6a9d:;
			{
				_1a5ce7801_structureLit(_self_, _147726_m.cast_ptr<_1a3b66ebe_StructLitExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1aa6d6b14:;
			{
				_1a5ce7aa9_allocStructure(_self_, _147726_m.cast_ptr<_1a3b672bb_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1aa6d6b7a:;
			{
				_1a5ce8538_casting(_self_, _147726_m.cast_ptr<_1a3b6784e_CastingExprModel>(&__jule_any_type93));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aa6d6be1:;
			{
				_1a5cea419_funcCall(_self_, _147726_m.cast_ptr<_1a3b68201_FnCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1aa6d6c68:;
			{
				_1a5cea6c2_slice(_self_, _147726_m.cast_ptr<_1a3b685ca_SliceExprModel>(&__jule_any_type77));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1aa6d6ce0:;
			{
				_1a5cebd66_array(_self_, _147726_m.cast_ptr<_1a3b6b5de_ArrayExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1aa6d6d67:;
			{
				_1a5ceac33_unsafeIndexing(_self_, _147726_m.cast_ptr<_1a3e46ca4_UnsafeIndexingExprModel>(&__jule_any_type133));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1aa6d6dde:;
			{
				_1a5cea97a_indexing(_self_, _147726_m.cast_ptr<_1a3b68a81_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1aa6d6e66:;
			{
				_1a5ceaedb_anonFunc(_self_, _147726_m.cast_ptr<_1a3b69037_AnonFnExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1aa6d6edd:;
			{
				_1a5ceb294_mapExpr(_self_, _147726_m.cast_ptr<_1a3b698b7_MapExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1aa6d7065:;
			{
				_1a5ceb54c_slicing(_self_, _147726_m.cast_ptr<_1a3b69e4a_SlicingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1aa6d70dc:;
			{
				_1a5ceb805_traitSub(_self_, _147726_m.cast_ptr<_1a3b6a4cd_TraitSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa6d7164:;
			{
				_1a5cebaad_structureSub(_self_, _147726_m.cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1aa6d71db:;
			{
				_1a5cec680_tuple(_self_, _147726_m.cast_ptr<_1a3b6b8db_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1aa6d7263:;
			{
				_1a5cecbe1_outCall(_self_, _147726_m.cast_ptr<_1a3b6bcb5_BuiltinOutCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1aa6d72da:;
			{
				_1a5cece99_outlnCall(_self_, _147726_m.cast_ptr<_1a3b6c18e_BuiltinOutlnCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1aa6d7362:;
			{
				_1a5cec938_newCall(_self_, _147726_m.cast_ptr<_1a3b6c568_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1aa6d73d9:;
			{
				_1a5ced252_panicCall(_self_, _147726_m.cast_ptr<_1a3b6c942_BuiltinPanicCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1aa6d7461:;
			{
				_1a5ced50a_assertCall(_self_, _147726_m.cast_ptr<_1a3b6cde8_BuiltinAssertCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1aa6d74d8:;
			{
				_1a5ced7b3_errorCall(_self_, _147726_m.cast_ptr<_1a3b6e9ee_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1aa6d7560:;
			{
				_1a5ceeb9e_makeCall(_self_, _147726_m.cast_ptr<_1a3b6d39e_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1aa6d75d7:;
			{
				_1a5d004b8_appendCall(_self_, _147726_m.cast_ptr<_1a3b6d778_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1aa6d765e:;
			{
				_1a5ceda6b_copyCall(_self_, _147726_m.cast_ptr<_1a3b6e625_BuiltinCopyCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1aa6d76d6:;
			{
				_1a5cedd24_lenCall(_self_, _147726_m.cast_ptr<_1a3b6da75_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1aa6d775d:;
			{
				_1a5cee0cc_capCall(_self_, _147726_m.cast_ptr<_1a3b6dd72_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1aa6d77d5:;
			{
				_1a5cee385_deleteCall(_self_, _147726_m.cast_ptr<_1a3b6e24b_BuiltinDeleteCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1aa6d785c:;
			{
				_1a5d00771_sizeof(_self_, _147726_m.cast_ptr<_1a3b701a3_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1aa6d78d4:;
			{
				_1a5d00a29_alignof(_self_, _147726_m.cast_ptr<_1a3b70390_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1aa6d795b:;
			{
				_1a5d00cd2_runeLit(_self_, _147726_m.cast_ptr<_1a3b70637_RuneExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1aa6d79d3:;
			{
				_1a5d0108a_structureStatic(_self_, _147726_m.cast_ptr<_1a3b6b215_StructStaticIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1aa6d7a5a:;
			{
				_1a5d01343_integratedToStr(_self_, _147726_m.cast_ptr<_1a3b70934_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1aa6d7ad2:;
			{
				_1a5d015eb_backendEmit(_self_, _147726_m.cast_ptr<_1a3b70d0d_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1aa6d7b59:;
			{
				_1a5d018a4_free(_self_, _147726_m.cast_ptr<_1a3b7110a_FreeExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1aa6d7bd1:;
			{
				_1a5d01b5c_strComp(_self_, _147726_m.cast_ptr<_1a3e4608e_StrCompExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1aa6d7c58:;
			{
				_1a5ce6ed7_var(_self_, (*(_147726_m.unsafe_cast_ptr<_1a3e45b1b_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1aa6d7cd0:;
			{
				_1a5d01e15_emptyCompare(_self_, _147726_m.cast_ptr<_1a3e45797_EmptyCompareExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1aa6d7d57:;
			{
				_1a5d021bd_unsafeDeref(_self_, _147726_m.cast_ptr<_1a3e47c2d_UnsafeDerefExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1aa6d7dce:;
			{
				_1a5d02476_unsafeCasting(_self_, _147726_m.cast_ptr<_1a3e4802a_UnsafeCastingExprModel>(&__jule_any_type132));
			}
		}
		else {
			_case_begin_1aa6d5a69:;
			{
				_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1aa6d5a14:;
	};
}



inline void _1a5d029d7_initExpr(jule::Ptr<_1a5ce3e07_exprCoder> _self_, jule::Ptr<_1a3cbac27_TypeKind> _158029_t) {
	if (_1a3cbcac5_NilCompatible(_158029_t.ptr())) {
		if ((_1a3cbd895_Ptr(_158029_t) != nullptr)) {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1a5dca74c_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _158029_t);
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1a3cc88e4_Tuple> _15907_tup = _1a3cc019e_Tup(_158029_t);;
	if ((_15907_tup != nullptr)) {
		_1a5dd0026_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _15907_tup);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_15907_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa7076e5:;
			if (it != expr_end) {
				jule::I64 _15949_i = it - expr->begin();
				jule::Ptr<_1a3cbac27_TypeKind> _159416_tt = *it;
				{
					if ((!(_1a5dd2369_shouldInitialized(&(_159416_tt))))) {
						goto _iter_next_1aa7076e5;
					};
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1a5db6271_write((*(_self_))._field_oc, _1b5739d16_Itoa(_15949_i));
					_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1a5d029d7_initExpr(_self_, _159416_tt);
					if ((((*_15907_tup.alloc)._field_Types.len() - _15949_i) > 1LL)) {
						_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1aa7076e5:;
				++it;
				_15949_i++;
				goto _iter_begin_1aa7076e5;
			}
			_iter_end_1aa7076e5:;
		};
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1a3b8a289_Enum> _16097_enm = _1a3cbdb2b_Enum(_158029_t);;
	if ((_16097_enm != nullptr)) {
		_1a5d0272e_model(_self_, (*((*((*((*_16097_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1a3cc3801_Prim> _16143_prim = _1a3cbd378_Prim(_158029_t);;
	if ((_16143_prim != nullptr)) {
		if (_1b5747692_IsNum((*_16143_prim.alloc)._field_Kind)) {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1a3cc6a02_IsBool(_16143_prim)) {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1a3cc6c88_IsStr(_16143_prim)) {
			_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1a3cbe148_Arr(_158029_t) != nullptr)) {
		jule::Ptr<_1a3cca121_Arr> _16268_arr = _1a3cbe148_Arr(_158029_t);;
		_1a5dca74c_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _158029_t);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a5d029d7_initExpr(_self_, (*(_16268_arr))._field_Elem);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1a3b61cbb_StructIns> _16337_s = _1a3cbe8eb_Struct(_158029_t);;
	if ((((_16337_s != nullptr) && (*((*_16337_s.alloc)._field_Decl))._field_Binded) && (_1a5642c62_FindDirective(&((*(*(_16337_s))._field_Decl.alloc)._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a5dca74c_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _158029_t);
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1a5dca74c_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _158029_t);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1a5ce3e07_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "varPrefixes:" << _Src._field_varPrefixes;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a5d058db_TestCoder_eq(_1a5d058db_TestCoder *_self_, _1a5d058db_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_1a5d058db_TestCoder> static__1a5d05d5e_New(jule::Ptr<_1a5db5abc_ObjectCoder>* _2921_oc) {
	return jule::new_ptr<_1a5d058db_TestCoder>(_1a5d058db_TestCoder{._field_oc=(*(_2921_oc))});;
}



inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a5d060e5_findTestingPackage(jule::Ptr<_1a5d058db_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa71757e:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _3615_imp = *it;
			{
				if ((*(_3615_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3615_imp;;
				};
			}
			_iter_next_1aa71757e:;
			++it;
			goto _iter_begin_1aa71757e;
		}
		_iter_end_1aa71757e:;
	};
	return nullptr;;
}



inline void _1a5d0639d_appendTest(jule::Ptr<_1a5d058db_TestCoder> _self_, jule::Ptr<_1a3b770cd_FnIns> _4431_f) {
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5d06ada_callTmReset(_self_);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1a5d037c9_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_4431_f))._field_Decl))._field_Ident);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1a5db6b23_indent((*(_self_))._field_oc);
	static__1a5d09c42_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4431_f));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1a5d06656_appendPackageTests(jule::Ptr<_1a5d058db_TestCoder> _self_, jule::Ptr<_1a3bdb609_Package>* _5940_p) {
	{
		auto expr = &((*((*(_5940_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa71dd6b:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _6015_file = *it;
			{
				{
					auto expr = &((*(_6015_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa71e7d9:;
					if (it != expr_end) {
						jule::Ptr<_1a3b740ec_Fn> _6116_f = *it;
						{
							if (_1a564312a_HasDirective(&((*(_6116_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1a5d0639d_appendTest(_self_, (*_6116_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1aa71e7d9:;
						++it;
						goto _iter_begin_1aa71e7d9;
					}
					_iter_end_1aa71e7d9:;
				};
			}
			_iter_next_1aa71dd6b:;
			++it;
			goto _iter_begin_1aa71dd6b;
		}
		_iter_end_1aa71dd6b:;
	};
}



inline jule::Bool _1a5d068dc_readyTestingPackage(jule::Ptr<_1a5d058db_TestCoder> _self_) {
	jule::Ptr<_1a3bd86d3_ImportInfo> _707_p = _1a5d060e5_findTestingPackage(_self_);;
	if ((_707_p == nullptr)) {
		return false;;
	};
	(*_self_.alloc)._field_t=(*(_1a3bd98b0_FindStruct(_707_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*_self_.alloc)._field_tmReset=_1a3b62d33_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1a3b62d33_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1a3b62d33_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1a5d06ada_callTmReset(jule::Ptr<_1a5d058db_TestCoder> _self_) {
	static__1a5d09956_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a5d06cd8_callTmFailed(jule::Ptr<_1a5d058db_TestCoder> _self_) {
	static__1a5d09956_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a5d06ed6_callTmSkipped(jule::Ptr<_1a5d058db_TestCoder> _self_) {
	static__1a5d09956_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a5d071d4_Serialize(jule::Ptr<_1a5d058db_TestCoder> _self_) {
	_1a5dc27cc_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1a5dc226b_end((*(_self_))._field_oc);
	});;
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1a5db6727_addIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	if ((!(_1a5d068dc_readyTestingPackage(_self_)))) {
		_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1a5db6925_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_1e7be2632_StrBuilder _1187_tb = static__1e7be28eb_New(40LL);;
	_1a5dc8a03_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1187_tb), (*_self_.alloc)._field_t);
	_1a5dc6946_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _1e7bec50a_Buf(&_1187_tb));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1a5db6529_writeBytes((*(_self_))._field_oc, _1e7bec50a_Buf(&_1187_tb));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1a5db6727_addIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1a5d06cd8_callTmFailed(_self_);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1a5d06ed6_callTmSkipped(_self_);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1a5d06656_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1a5db6925_doneIndent((*(_self_))._field_oc);
	_1a5db6b23_indent((*(_self_))._field_oc);
	_1a5db6271_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1a5d058db_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a5d08867_identCoder_eq(_1a5d08867_identCoder *_self_, _1a5d08867_identCoder _other_) { return true; }

inline void static__1a5d08d73_writeIdentTo(_1e7be2632_StrBuilder* _3530_buf, jule::Str* _3548_ident) {
	{
		auto expr = _3548_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa210352:;
		if (it != expr_end) {
			jule::U8 *_3610_b = it;
			{
				if (((*(_3610_b)) >= 128LLU)) {
					goto _julec_label_1aa211bd3;
				};
			}
			_iter_next_1aa210352:;
			++it;
			goto _iter_begin_1aa210352;
		}
		_iter_end_1aa210352:;
	};
	_1e7beb262_WriteStr(_3530_buf, (*(_3548_ident)));
	return;;
	_julec_label_1aa211bd3:;
	{
		auto expr = _3548_ident;
		char *it = expr->operator char*();
		const char *end = it + expr->len();
		std::size_t len;
		jule::I32 _4610_r;
		_iter_begin_1aa2120bd:;
		std::tie(_4610_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				if ((_4610_r < 128LL)) {
					_1e7beb51a_WriteByte(_3530_buf, static_cast<jule::U8>(_4610_r));
					goto _iter_next_1aa2120bd;
				};
				_1e7beb262_WriteStr(_3530_buf, _1b5739a4c_FmtInt(static_cast<jule::I64>(_4610_r), 15LL));
			}
			_iter_next_1aa2120bd:;
			it += len;
			goto _iter_begin_1aa2120bd;
		}
	};
}



inline void static__1a5d09219_toOut(_1e7be2632_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr) {
	_1e7beb51a_WriteByte(_6323_buf, '_');
	if ((_6352_addr != 0LLU)) {
		_1e7beb262_WriteStr(_6323_buf, _1b5739684_FmtUint(static_cast<jule::U64>(_6352_addr), 15LL));
		_1e7beb51a_WriteByte(_6323_buf, '_');
	};
	static__1a5d08d73_writeIdentTo(_6323_buf, &(_6340_ident));
}



inline void static__1a5d0966a_toLocal(_1e7be2632_StrBuilder* _7825_buf, jule::I64 _7842_row, jule::I64 _7852_col, jule::Str* _7863_ident) {
	_1e7beb51a_WriteByte(_7825_buf, '_');
	_1e7beb262_WriteStr(_7825_buf, _1b5739d16_Itoa(_7842_row));
	_1e7beb262_WriteStr(_7825_buf, _1b5739d16_Itoa(_7852_col));
	_1e7beb51a_WriteByte(_7825_buf, '_');
	static__1a5d08d73_writeIdentTo(_7825_buf, _7863_ident);
}



inline void static__1a5d09956_func(_1e7be2632_StrBuilder* _8622_buf, jule::Ptr<_1a3b740ec_Fn>* _8640_f) {
	{
		
		if ((*((*(_8640_f))))._field_Binded) {
			_case_begin_1a84bbd08:;
			{
				_1e7beb262_WriteStr(_8622_buf, (*((*(_8640_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8640_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1a84bbda2:;
			{
				_1e7beb262_WriteStr(_8622_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1a3b74806_IsMethod((*(_8640_f)).ptr())) {
			_case_begin_1a84bbe18:;
			{
				if ((*((*(_8640_f))))._field_Statically) {
					_1e7beb262_WriteStr(_8622_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1a84bbba4:;
	};
	static__1a5d09219_toOut(_8622_buf, (*((*(_8640_f))))._field_Ident, static_cast<jule::Uintptr>((*(_8640_f))));
}



inline void static__1a5d09c42_funcIns(_1e7be2632_StrBuilder* _10225_buf, jule::Ptr<_1a3b770cd_FnIns>* _10243_f) {
	if (_1a3b78563_IsBuiltin((*(_10243_f)).ptr())) {
		_1e7beb262_WriteStr(_10225_buf, jule::Str::lit("jule::", 6));
		_1e7beb262_WriteStr(_10225_buf, (*((*((*(_10243_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_10243_f))))._field_Decl.alloc)._field_Binded || ((*((*(_10243_f))))._field_Generics.len() == 0LL))) {
		static__1a5d09956_func(_10225_buf, &((*((*(_10243_f))))._field_Decl));
		return;;
	};
	static__1a5d09219_toOut(_10225_buf, (*(*((*(_10243_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_10243_f))));
}



inline void static__1a5d0a02d_traitDecl(_1e7be2632_StrBuilder* _11727_buf, jule::Ptr<_1a3b87a7d_Trait> _11744_t) {
	static__1a5d09219_toOut(_11727_buf, (*(_11744_t))._field_Ident, static_cast<jule::Uintptr>(_11744_t));
}



inline void static__1a5d0a319_param(_1e7be2632_StrBuilder* _12123_buf, jule::Ptr<_1a3b72628_Param>* _12141_p) {
	if ((_1a3b2a713_IsAnonIdent((*((*(_12141_p))))._field_Ident) || _1a3b2a449_IsIgnoreIdent((*((*(_12141_p))))._field_Ident))) {
		return;;
	};
	if (_1a3b72c44_IsSelf((*(_12141_p)).ptr())) {
		_1e7beb262_WriteStr(_12123_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12141_p))))._field_Token == nullptr)) {
		static__1a5d0966a_toLocal(_12123_buf, 0LL, 0LL, &((*((*(_12141_p))))._field_Ident));
		return;;
	};
	static__1a5d0966a_toLocal(_12123_buf, (*((*((*(_12141_p))))._field_Token))._field_Row, (*((*((*(_12141_p))))._field_Token))._field_Column, &((*((*(_12141_p))))._field_Ident));
}



inline void static__1a5d0a605_structure(_1e7be2632_StrBuilder* _13627_buf, jule::Ptr<_1a3b5e03d_Struct>* _13645_s) {
	if ((*((*(_13645_s))))._field_Binded) {
		if ((!(_1a564312a_HasDirective(&((*((*(_13645_s))))._field_Directives), jule::Str::lit("typedef", 7))))) {
			_1e7beb262_WriteStr(_13627_buf, jule::Str::lit("struct ", 7));
		};
		_1e7beb262_WriteStr(_13627_buf, (*((*(_13645_s))))._field_Ident);
		return;;
	};
	static__1a5d09219_toOut(_13627_buf, (*((*(_13645_s))))._field_Ident, static_cast<jule::Uintptr>((*(_13645_s))));
}



inline void static__1a5d0a8e1_structureIns(_1e7be2632_StrBuilder* _14730_buf, jule::Ptr<_1a3b61cbb_StructIns>* _14748_s) {
	if (((*((*((*(_14748_s))))._field_Decl))._field_Binded || ((*((*(_14748_s))))._field_Generics.len() == 0LL))) {
		static__1a5d0a605_structure(_14730_buf, &((*((*(_14748_s))))._field_Decl));
		return;;
	};
	static__1a5d09219_toOut(_14730_buf, (*(*((*(_14748_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14748_s))));
}



inline void static__1a5d0abcc_field(_1e7be2632_StrBuilder* _15523_buf, jule::Ptr<_1a3b5b117_Field>* _15541_f) {
	if ((*((*((*(_15541_f))))._field_Owner))._field_Binded) {
		_1e7beb262_WriteStr(_15523_buf, (*((*(_15541_f))))._field_Ident);
		return;;
	};
	_1e7beb262_WriteStr(_15523_buf, jule::Str::lit("_field_", 7));
	static__1a5d08d73_writeIdentTo(_15523_buf, &((*((*(_15541_f))))._field_Ident));
}



inline void static__1a5d0aeb8_var(_1e7be2632_StrBuilder* _16521_buf, jule::Ptr<_1a3c31c26_Var> _16542_v) {
	{
		
		if ((*(_16542_v))._field_Binded) {
			_case_begin_1aa801beb:;
			{
				_1e7beb262_WriteStr(_16521_buf, (*_16542_v.alloc)._field_Ident);
			}
		}
		else if ((*(_16542_v))._field_Ident.equal("error", 5)) {
			_case_begin_1aa801c62:;
			{
				_1e7beb262_WriteStr(_16521_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if ((*(_16542_v))._field_Ident.equal("self", 4)) {
			_case_begin_1aa801cc8:;
			{
				_1e7beb262_WriteStr(_16521_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16542_v))._field_RetOrder == -1LL)) {
			_case_begin_1aa801d3e:;
			{
				_1e7beb262_WriteStr(_16521_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16542_v))._field_RetOrder >= 0LL)) {
			_case_begin_1aa801da5:;
			{
				_1e7beb262_WriteStr(_16521_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1e7beb262_WriteStr(_16521_buf, _1b5739d16_Itoa((*_16542_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_16542_v))._field_Scope != nullptr)) {
			_case_begin_1aa801e1b:;
			{
				static__1a5d0966a_toLocal(_16521_buf, (*((*_16542_v.alloc)._field_Token))._field_Row, (*(*(_16542_v))._field_Token.alloc)._field_Column, &((*_16542_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1aa801b85:;
			{
				static__1a5d09219_toOut(_16521_buf, (*(_16542_v))._field_Ident, static_cast<jule::Uintptr>(_16542_v));
			}
		}
		_match_end_1aa801a86:;
	};
}



inline void static__1a5d0b2a4_iterBegin(_1e7be2632_StrBuilder* _18727_buf, jule::Uintptr _18744_it) {
	_1e7beb262_WriteStr(_18727_buf, jule::Str::lit("_iter_begin_", 12));
	_1e7beb262_WriteStr(_18727_buf, _1b5739684_FmtUint(static_cast<jule::U64>(_18744_it), 15LL));
}



inline void static__1a5d0b590_iterEnd(_1e7be2632_StrBuilder* _19225_buf, jule::Uintptr _19242_it) {
	_1e7beb262_WriteStr(_19225_buf, jule::Str::lit("_iter_end_", 10));
	_1e7beb262_WriteStr(_19225_buf, _1b5739684_FmtUint(static_cast<jule::U64>(_19242_it), 15LL));
}



inline void static__1a5d0b87b_iterNext(_1e7be2632_StrBuilder* _19726_buf, jule::Uintptr _19743_it) {
	_1e7beb262_WriteStr(_19726_buf, jule::Str::lit("_iter_next_", 11));
	_1e7beb262_WriteStr(_19726_buf, _1b5739684_FmtUint(static_cast<jule::U64>(_19743_it), 15LL));
}



inline void static__1a5d0bb67_label(_1e7be2632_StrBuilder* _20223_buf, jule::Uintptr _20240_u) {
	_1e7beb262_WriteStr(_20223_buf, jule::Str::lit("_julec_label_", 13));
	_1e7beb262_WriteStr(_20223_buf, _1b5739684_FmtUint(static_cast<jule::U64>(_20240_u), 15LL));
}



inline void static__1a5d0be53_matchEnd(_1e7be2632_StrBuilder* _20726_buf, jule::Uintptr _20743_m) {
	_1e7beb262_WriteStr(_20726_buf, jule::Str::lit("_match_end_", 11));
	_1e7beb262_WriteStr(_20726_buf, _1b5739684_FmtUint(static_cast<jule::U64>(_20743_m), 15LL));
}



inline void static__1a5d0c23e_caseBegin(_1e7be2632_StrBuilder* _21227_buf, jule::Uintptr _21244_c) {
	_1e7beb262_WriteStr(_21227_buf, jule::Str::lit("_case_begin_", 12));
	_1e7beb262_WriteStr(_21227_buf, _1b5739684_FmtUint(static_cast<jule::U64>(_21244_c), 15LL));
}





std::ostream &operator<<(std::ostream &_Stream, _1a5d08867_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a5db3d1d_SerializationInfo_eq(_1a5db3d1d_SerializationInfo *_self_, _1a5db3d1d_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}



std::ostream &operator<<(std::ostream &_Stream, _1a5db3d1d_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a5db423b_traitCast_eq(_1a5db423b_traitCast *_self_, _1a5db423b_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}



std::ostream &operator<<(std::ostream &_Stream, _1a5db423b_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a5db4615_anonHash_eq(_1a5db4615_anonHash *_self_, _1a5db4615_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}



std::ostream &operator<<(std::ostream &_Stream, _1a5db4615_anonHash _Src) {
	_Stream << "anonHash{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5db5abc_ObjectCoder> static__1a5db5eb8_New(jule::Ptr<_1a5634c54_IR>* _11721_ir, _1a5db3d1d_SerializationInfo _11730_info) {
	jule::Ptr<_1a5db5abc_ObjectCoder> _1187_oc = jule::new_ptr<_1a5db5abc_ObjectCoder>(_1a5db5abc_ObjectCoder{._field_ir=(*(_11721_ir)), ._field_info=_11730_info, });;
	(*(_1187_oc))._field_ec=static__1a5ce42c0_new(&(_1187_oc));
	(*_1187_oc.alloc)._field_sc=static__1a5cd855b_new(&(_1187_oc));
	(*_1187_oc.alloc)._field_tc=static__1a5dc5a99_new(&(_1187_oc));
	return _1187_oc;;
}



inline void _1a5db6271_write(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Str _12822_s) {
	_1e7beb262_WriteStr(&(*(_self_))._field_Buf, _12822_s);
}



inline void _1a5db6529_writeBytes(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Slice<jule::U8> _13227_b) {
	_1e7beaea9_Write(&(*(_self_))._field_Buf, _13227_b);
}



inline void _1a5db6727_addIndent(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,jule::Slice<jule::U8>::make({9LLU}));
}



inline void _1a5db6925_doneIndent(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1a5db6b23_indent(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	_1e7beaea9_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I64 _1a5db6e64_findAnyType(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3cbac27_TypeKind>* _15133_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa816a8a:;
		if (it != expr_end) {
			jule::I64 _1528_i = it - expr->begin();
			jule::Ptr<_1a3cbac27_TypeKind> _15215_at = *it;
			{
				if (_1a3cbb431_Equal(_15215_at, (*(_15133_t)))) {
					return _1528_i;;
				};
			}
			_iter_next_1aa816a8a:;
			++it;
			_1528_i++;
			goto _iter_begin_1aa816a8a;
		}
		_iter_end_1aa816a8a:;
	};
	return -1LL;;
}



inline jule::I64 _1a5db72a5_pushDealloc(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3cbac27_TypeKind> _16032_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa817edc:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			jule::Ptr<_1a3cbac27_TypeKind> _16110_dt = *it;
			{
				if (_1a3cbb431_Equal(_16110_dt, _16032_t)) {
					return _1617_i;;
				};
			}
			_iter_next_1aa817edc:;
			++it;
			_1617_i++;
			goto _iter_begin_1aa817edc;
		}
		_iter_end_1aa817edc:;
	};
	jule::I64 _1663_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>>::make({_16032_t}));
	_1e7beb262_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
	_1e7beb262_WriteStr(&(*_self_.alloc)._field_deallocObj, _1b5739d16_Itoa(_1663_i));
	_1e7beb262_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
	_1a5dca74c_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _16032_t);
	_1e7beb262_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
	return _1663_i;;
}



inline jule::Str _1a5db75e6_pushAnonFn(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b69037_AnonFnExprModel>* _17632_m) {
	jule::Str __jule_func_result;
	jule::Bool _1773_closure = _1a56412d2_IsClosure(_17632_m);;
	if (_1773_closure) {
		_1e7beb262_WriteStr(&(*(_self_))._field_anonObj, jule::Str::lit("struct ", 7));
		jule::I64 _1814_l = _1e7bebedd_Len(&(*_self_.alloc)._field_anonObj);;
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anonObj, _1b5739684_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17632_m))))._field_Func)), 15LL));
		__jule_func_result=static_cast<jule::Str>(_1e7bec50a_Buf(&(*_self_.alloc)._field_anonObj).slice(_1814_l));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
		{
			auto expr = &((*((*(_17632_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa81e873:;
			if (it != expr_end) {
				jule::Ptr<_1a3c31c26_Var> _18616_v = *it;
				{
					_1e7beb51a_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
					_1a5dca74c_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_18616_v))._field_Kind))._field_Kind);
					_1e7beb51a_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
					if ((*_18616_v.alloc)._field_Reference) {
						_1e7beb51a_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
					};
					static__1a5d0aeb8_var(&((*_self_.alloc)._field_anonObj), _18616_v);
					_1e7beb262_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
				}
				_iter_next_1aa81e873:;
				++it;
				goto _iter_begin_1aa81e873;
			}
			_iter_end_1aa81e873:;
		};
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1b5739684_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17632_m))))._field_Func)), 15LL);
	};
	(*(_self_))._field_anons=jule::append((*_self_.alloc)._field_anons,jule::Slice<jule::Ptr<_1a5db4615_anonHash>>::make({jule::new_ptr<_1a5db4615_anonHash>(_1a5db4615_anonHash{._field_expr=(*(_17632_m)), ._field_ident=__jule_func_result})}));
	_1a5dbd3cc_anonFuncInsDecl(_self_, _17632_m, __jule_func_result);
	_1e7beb51a_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
	return __jule_func_result;;
}



inline jule::I64 _1a5db7937_pushAnyType(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3cbac27_TypeKind> _21632_t) {
	if ((_1a3cbdb2b_Enum(_21632_t.ptr()) != nullptr)) {
		_21632_t=(*((*(_1a3cbdb2b_Enum(_21632_t)))._field_Kind))._field_Kind;
	};
	jule::I64 _2207_i = _1a5db6e64_findAnyType(_self_, &(_21632_t));;
	if ((_2207_i != -1LL)) {
		return _2207_i;;
	};
	_2207_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>>::make({_21632_t}));
	jule::Str _2263_si = _1b5739d16_Itoa(_2207_i);;
	if ((_1a3cbd60e_Sptr(_21632_t) != nullptr)) {
		_1e7be2632_StrBuilder _2288_elemKind = static__1e7be28eb_New(40LL);;
		_1a5dca74c_kind((*_self_.alloc)._field_tc.ptr(), &(_2288_elemKind), (*(_1a3cbd60e_Sptr(_21632_t)))._field_Elem);
		jule::I64 _2324_di = _1a5db72a5_pushDealloc(_self_, (*(_1a3cbd60e_Sptr(_21632_t)))._field_Elem);;
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _1b5739d16_Itoa(_2324_di));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 50));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1a5dc6946_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _1e7bec50a_Buf(&_2288_elemKind));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _2514_comparable = _1a3cbc322_Comparable(_21632_t);;
		_1e7be2632_StrBuilder _2528_kindB = static__1e7be28eb_New(40LL);;
		_1a5dca74c_kind((*_self_.alloc)._field_tc.ptr(), &(_2528_kindB), _21632_t);
		jule::Str _2544_kind = _1e7beba59_Str(&_2528_kindB);;
		jule::I64 _2574_di = _1a5db72a5_pushDealloc(_self_, _21632_t);;
		if (_2514_comparable) {
			jule::Str _2639_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
			_2639_lmodel+=_2544_kind;
			_2639_lmodel+=jule::Str::lit("*>(", 3);
			jule::Str _2669_rmodel = _2639_lmodel;;
			_2669_rmodel+=jule::Str::lit("other)", 6);
			_2639_lmodel+=jule::Str::lit("alloc)", 6);
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return ", 48));
			_1a5ce66bd__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_2639_lmodel), &(_2669_rmodel), &(_21632_t), &(_21632_t), static_cast<jule::U64>(50LLU), jule::Str::lit("==", 2));
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
		};
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1a3cbd895_Ptr(_21632_t) == nullptr)) {
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _2544_kind);
		} else {
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _2544_kind);
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _1b5739d16_Itoa(_2574_di));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", ", 2));
		if (_2514_comparable) {
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_2514_comparable) {
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _2544_kind);
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
			_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _2207_i;;
}



inline void _1a5db7be0_pushResultIns(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b770cd_FnIns>* _32235_f) {
	jule::Str _3233_s = static_cast<jule::Str>(_1a5dd0a0a_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_32235_f))))._field_Result)));;
	jule::Bool _3246_ok;
	(*_self_.alloc)._field_resultMap.lookup(_3233_s, nullptr, &(_3246_ok));
	if (_3246_ok) {
		return;;
	};
	(*_self_.alloc)._field_resultMap[_3233_s]=false;
	_1e7beb262_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_1e7beb262_WriteStr(&(*_self_.alloc)._field_resultDecls, _3233_s);
	_1e7beb262_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1a3cc019e_Tup((*((*(_32235_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa844953:;
		if (it != expr_end) {
			jule::I64 _3328_i = it - expr->begin();
			jule::Ptr<_1a3cbac27_TypeKind> _33215_t = *it;
			{
				_1e7beb51a_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1a5dca74c_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _33215_t);
				_1e7beb51a_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_1e7beb262_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_1e7beb262_WriteStr(&(*_self_.alloc)._field_resultDecls, _1b5739d16_Itoa(_3328_i));
				_1e7beb262_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1aa844953:;
			++it;
			_3328_i++;
			goto _iter_begin_1aa844953;
		}
		_iter_end_1aa844953:;
	};
	_1e7beb262_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1a5db7e98_pushResult(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b740ec_Fn>* _34332_f) {
	if ((_1a3b74570_IsVoid((*(_34332_f)).ptr()) || ((*((*((*(_34332_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _3477_n = (*((*(_34332_f))))._field_Instances.len();;
	if (((*((*(_34332_f))))._field_Generics.len() == 0LL)) {
		_3477_n=1LL;
	};
	{
		auto expr = (*((*(_34332_f))))._field_Instances.slice(0LL, _3477_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1aa849a02:;
		if (it != expr_end) {
			jule::Ptr<_1a3b770cd_FnIns> _35115_ins = *it;
			{
				_1a5db7be0_pushResultIns(_self_, &(_35115_ins));
			}
			_iter_next_1aa849a02:;
			++it;
			goto _iter_begin_1aa849a02;
		}
		_iter_end_1aa849a02:;
	};
}



inline void _1a5db830b_pushAndWriteMaskMapper(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b87a7d_Trait> _35643_t1, jule::Ptr<_1a3b87a7d_Trait> _35659_t2) {
	_1e7be2632_StrBuilder _3577_ident = static__1e7be28eb_New(32LL);;
	_1e7beb262_WriteStr(&_3577_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_1e7beb262_WriteStr(&_3577_ident, _1b5739684_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_35659_t2)), 15LL));
	_1e7beb262_WriteStr(&_3577_ident, jule::Str::lit("_to_", 4));
	_1e7beb262_WriteStr(&_3577_ident, _1b5739684_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_35643_t1)), 15LL));
	_1e7beaea9_Write(&(*(_self_))._field_Buf, _1e7bec50a_Buf(&_3577_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa84c86d:;
		if (it != expr_end) {
			_1a5db423b_traitCast _36510_m = *it;
			{
				if (((_36510_m._field_t1 == _35643_t1) && (_36510_m._field_t2 == _35659_t2))) {
					return;;
				};
			}
			_iter_next_1aa84c86d:;
			++it;
			goto _iter_begin_1aa84c86d;
		}
		_iter_end_1aa84c86d:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,jule::Slice<_1a5db423b_traitCast>::make({_1a5db423b_traitCast{._field_t1=_35643_t1, ._field_t2=_35659_t2}}));
	;
	_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
	_1e7beaea9_Write(&(*_self_.alloc)._field_anyObj, _1e7bec50a_Buf(&_3577_ident));
	_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
	_1e7be2632_StrBuilder _3797_t1Ident = static__1e7be28eb_New(16LL);;
	_1e7be2632_StrBuilder _3807_t2Ident = static__1e7be28eb_New(16LL);;
	static__1a5d0a02d_traitDecl(&(_3797_t1Ident), _35643_t1);
	static__1a5d0a02d_traitDecl(&(_3807_t2Ident), _35659_t2);
	{
		auto expr = &((*(_35643_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa84ce89:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> _38415_s1 = *it;
			{
				{
					auto expr = &((*(_35659_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa851e6b:;
					if (it != expr_end) {
						jule::Ptr<_1a3b5e03d_Struct> _38511_s2 = *it;
						{
							if ((_38415_s1 == _38511_s2)) {
								{
									auto expr = &((*(_38415_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1aa852d07:;
									if (it != expr_end) {
										jule::Ptr<_1a3b61cbb_StructIns> _38718_s1i = *it;
										{
											jule::I64 _3887_i1 = _1a5643b64_FindTraitTypeOffsetS(_35643_t1, _38718_s1i);;
											jule::I64 _3897_i2 = _1a5643b64_FindTraitTypeOffsetS(_35659_t2, _38718_s1i);;
											_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
											_1e7beaea9_Write(&(*_self_.alloc)._field_anyObj, _1e7bec50a_Buf(&_3807_t2Ident));
											_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _1b5739d16_Itoa(_3897_i2));
											_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
											_1e7beaea9_Write(&(*_self_.alloc)._field_anyObj, _1e7bec50a_Buf(&_3797_t1Ident));
											_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, _1b5739d16_Itoa(_3887_i1));
											_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1aa852d07:;
										++it;
										goto _iter_begin_1aa852d07;
									}
									_iter_end_1aa852d07:;
								};
							};
						}
						_iter_next_1aa851e6b:;
						++it;
						goto _iter_begin_1aa851e6b;
					}
					_iter_end_1aa851e6b:;
				};
			}
			_iter_next_1aa84ce89:;
			++it;
			goto _iter_begin_1aa84ce89;
		}
		_iter_end_1aa84ce89:;
	};
	_1e7beb262_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" jule::panic(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 114));
}



inline void _1a5db85b4_locInfo(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b27a62_Token>* _40725_t) {
	jule::Str *_4084_loc = &((*((*((*(_40725_t))))._field_File))._field_Path);;
	if (_2121303d5_Production) {
		{
			
			if (_1e7bc8b35_HasPrefix((*(_4084_loc)), _2121271ce_PathStdlib)) {
				_case_begin_1aa8582b3:;
				{
					_1a5d03499_cstrBytes(&((*(_self_))._field_Buf), (*(_4084_loc)).slice((_1e7c00ae6_Dir(_2121271ce_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1e7bc8b35_HasPrefix((*(_4084_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1aa8583a1:;
				{
					_1a5d03499_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_4084_loc)).slice((_1e7c00ae6_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1aa857dea:;
				{
					_1a5d03499_cstrBytes(&((*(_self_))._field_Buf), (*(_4084_loc)));
				}
			}
			_match_end_1aa857d2e:;
		};
	} else {
		_1a5d03499_cstrBytes(&((*(_self_))._field_Buf), (*(_4084_loc)));
	};
	_1a5db6271_write(_self_, jule::Str::lit(":", 1));
	_1a5db6271_write(_self_, _1b5739d16_Itoa((*((*(_40725_t))))._field_Row));
	_1a5db6271_write(_self_, jule::Str::lit(":", 1));
	_1a5db6271_write(_self_, _1b5739d16_Itoa((*((*(_40725_t))))._field_Column));
}



inline void _1a5db87b2_head(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	_1a5daa287_Time _4343_time = static__1a5daa84d_Now();;
	_1a5da9ab1_AbsTime _4353_abs = _1a5dac036_Abs(&_4343_time);;
	_1a5db6271_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1a5db6271_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1a5db6271_write(_self_, jule::Str::lit("jule0.0.16 @master", 18));
	_1a5db6271_write(_self_, jule::Str::lit("\n", 1));
	_1a5db6271_write(_self_, jule::Str::lit("// Date: ", 9));
	_1a5db6271_write(_self_, _1b5739684_FmtUint(_4353_abs._field_Day, 10LL));
	_1a5db6271_write(_self_, jule::Str::lit("/", 1));
	_1a5db6271_write(_self_, _1b5739684_FmtUint(_4353_abs._field_Month, 10LL));
	_1a5db6271_write(_self_, jule::Str::lit("/", 1));
	_1a5db6271_write(_self_, _1b5739684_FmtUint(_4353_abs._field_Year, 10LL));
	_1a5db6271_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a5db6271_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1a5db6271_write(_self_, jule::Str::lit(" ", 1));
	_1a5db6271_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1a5db6271_write(_self_, jule::Str::lit("\n\n", 2));
	if (_2121303d5_Production) {
		_1a5db6271_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_21212ecca_RC))) {
		_1a5db6271_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_212130193_Safety))) {
		_1a5db6271_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a5db89b0_links(_self_);
	_1a5db6271_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1a5db6271_write(_self_, _212127a81_PathApi);
	_1a5db6271_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1a5db89b0_links(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa86490c:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _47210_used = *it;
			{
				{
					
					if ((!((*(_47210_used))._field_Binded))) {
						_case_begin_1aa865721:;
						{
							goto _iter_next_1aa86490c;
						}
					}
					else if (_1e7c8794c_IsStdHeaderPath((*(_47210_used))._field_Path)) {
						_case_begin_1aa8657a9:;
						{
							_1a5db6271_write(_self_, jule::Str::lit("#include ", 9));
							_1a5db6271_write(_self_, (*_47210_used.alloc)._field_Path);
							_1a5db6271_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1e7c87b8e_IsValidHeaderExt(_1e7c00189_Ext((*(_47210_used))._field_Path))) {
						_case_begin_1aa865820:;
						{
							_1a5db6271_write(_self_, jule::Str::lit("#include \"", 10));
							_1a5db6271_write(_self_, (*_47210_used.alloc)._field_Path);
							_1a5db6271_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1aa8655cd:;
				};
			}
			_iter_next_1aa86490c:;
			++it;
			goto _iter_begin_1aa86490c;
		}
		_iter_end_1aa86490c:;
	};
}



inline void _1a5db8c68_prepareStructure(_1a5db5abc_ObjectCoder* _self_, jule::Ptr<_1a3b5e03d_Struct>* _48837_s) {
	{
		auto expr = &((*((*(_48837_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa867602:;
		if (it != expr_end) {
			jule::Ptr<_1a3b61cbb_StructIns> _48915_ins = *it;
			{
				{
					auto expr = &((*(_48915_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa86903d:;
					if (it != expr_end) {
						jule::Ptr<_1a3b740ec_Fn> _49016_m = *it;
						{
							if ((*(_49016_m))._field_Statically) {
								goto _iter_next_1aa86903d;
							};
							{
								auto expr = &((*_49016_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aa869a22:;
								if (it != expr_end) {
									jule::Ptr<_1a3b770cd_FnIns> _49417_mins = *it;
									{
										jule::Ptr<_1a3b76055_ParamIns> _49510_p = (*(_49417_mins))._field_Params[0LL];;
										_1e7be2632_StrBuilder _49610_kind = static__1e7be28eb_New(40LL);;
										_1a5dca74c_kind((*(_self_))._field_tc.ptr(), &(_49610_kind), (*(_49510_p))._field_Kind);
										if ((!(_1a3b72eca_IsRef((*_49510_p.alloc)._field_Decl.ptr())))) {
											_1e7beb262_WriteStr(&_49610_kind, jule::Str::lit("*", 1));
										};
										(*_49510_p.alloc)._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5dc4944_customType>(_1a5dc4944_customType{._field_kind=_1e7beba59_Str(&_49610_kind)}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data27)});
									}
									_iter_next_1aa869a22:;
									++it;
									goto _iter_begin_1aa869a22;
								}
								_iter_end_1aa869a22:;
							};
						}
						_iter_next_1aa86903d:;
						++it;
						goto _iter_begin_1aa86903d;
					}
					_iter_end_1aa86903d:;
				};
			}
			_iter_next_1aa867602:;
			++it;
			goto _iter_begin_1aa867602;
		}
		_iter_end_1aa867602:;
	};
}



inline void _1a5db8e66_prepareStructures(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa868ea5:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> _51215_s = *it;
			{
				if (((*(_51215_s))._field_Token != nullptr)) {
					_1a5db8c68_prepareStructure(_self_.ptr(), &(_51215_s));
				};
			}
			_iter_next_1aa868ea5:;
			++it;
			goto _iter_begin_1aa868ea5;
		}
		_iter_end_1aa868ea5:;
	};
}



inline void _1a5db921e_structurePlainDecl(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b5e03d_Struct>* _51940_s) {
	{
		auto expr = &((*((*(_51940_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa86e164:;
		if (it != expr_end) {
			jule::Ptr<_1a3b61cbb_StructIns> _52015_ins = *it;
			{
				_1a5db6271_write(_self_, jule::Str::lit("struct ", 7));
				static__1a5d0a8e1_structureIns(&((*_self_.alloc)._field_Buf), &(_52015_ins));
				_1a5db6271_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1aa86e164:;
			++it;
			goto _iter_begin_1aa86e164;
		}
		_iter_end_1aa86e164:;
	};
}



inline void _1a5db941c_structurePlainDecls(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa87064e:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> _52815_s = *it;
			{
				if (((*(_52815_s))._field_Token != nullptr)) {
					_1a5db921e_structurePlainDecl(_self_, &(_52815_s));
				};
			}
			_iter_next_1aa87064e:;
			++it;
			goto _iter_begin_1aa87064e;
		}
		_iter_end_1aa87064e:;
	};
}



inline void _1a5db96c5_fieldDecl(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b6121b_FieldIns>* _53531_f) {
	_1a5dca74c_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_53531_f))))._field_Kind);
	_1a5db6271_write(_self_, jule::Str::lit(" ", 1));
	static__1a5d0abcc_field(&((*_self_.alloc)._field_Buf), &((*((*(_53531_f))))._field_Decl));
	if (((*((*(_53531_f))))._field_Default == nullptr)) {
		if (_1a5dd2369_shouldInitialized(&((*((*(_53531_f))))._field_Kind))) {
			_1a5db6271_write(_self_, jule::Str::lit(" = ", 3));
			_1a5d029d7_initExpr((*_self_.alloc)._field_ec, (*((*(_53531_f))))._field_Kind);
		};
	} else {
		_1a5db6271_write(_self_, jule::Str::lit(" = ", 3));
		_1a5ce7d62_possibleRefExpr((*_self_.alloc)._field_ec, (*((*((*(_53531_f))))._field_Default))._field_Model);
	};
	_1a5db6271_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a5db997d_structureDestructor(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _55341_s) {
	;
	jule::Ptr<_1a3b740ec_Fn> _5563_disposeMethod = _1a3b62d33_FindMethod((*(_55341_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _5577_disposed = static__1a3c332ee_Dispose(_5563_disposeMethod);;
	if ((!(_5577_disposed))) {
		return;;
	};
	_1a5db6271_write(_self_, jule::Str::lit("~", 1));
	static__1a5d0a8e1_structureIns(&((*_self_.alloc)._field_Buf), _55341_s);
	_1a5db6271_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1a5d09956_func(&((*_self_.alloc)._field_Buf), &(_5563_disposeMethod));
	_1a5db6271_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1a5db9d9b_structureOperatorEq(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Str _56936_ident, jule::Ptr<_1a3b61cbb_StructIns>* _56953_s, jule::Bool _56968_decl) {
	if ((!(_1a5dc346a_defaultEq(_56953_s)))) {
		return;;
	};
	_1a5db6271_write(_self_, jule::Str::lit("\n", 1));
	if (_1a565bb8d_Inline) {
		_1a5db6271_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a5db6271_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_1a5db6271_write(_self_, _56936_ident);
	_1a5db6271_write(_self_, jule::Str::lit("_eq", 3));
	_1a5db6271_write(_self_, jule::Str::lit("(", 1));
	_1a5db6271_write(_self_, _56936_ident);
	_1a5db6271_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_1a5db6271_write(_self_, _56936_ident);
	_1a5db6271_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_56968_decl) {
		_1a5db6271_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_1a5db6271_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_56953_s))))._field_Fields.len() == 0LL)) {
		_1a5db6271_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_1a5db6727_addIndent(_self_);
	_1a5db6271_write(_self_, jule::Str::lit("\n", 1));
	_1a5db6b23_indent(_self_);
	_1a5db6271_write(_self_, jule::Str::lit("return ", 7));
	_1a5db6727_addIndent(_self_);
	jule::Bool _6007_writed = false;;
	jule::Str _6037_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _6047_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_56953_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8808b2:;
		if (it != expr_end) {
			jule::Ptr<_1a3b6121b_FieldIns> _60615_f = *it;
			{
				jule::Ptr<_1a3b61cbb_StructIns> _6084_strct = _1a3cbe8eb_Struct((*(_60615_f))._field_Kind.ptr());;
				if ((((_6084_strct != nullptr) && ((*_6084_strct.alloc)._field_Decl != nullptr)) && (*(*(_6084_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1aa8808b2;
				};
				if (_6007_writed) {
					_1a5db6271_write(_self_, jule::Str::lit(" &&", 3));
				};
				_6007_writed=true;
				_1a5db6271_write(_self_, jule::Str::lit("\n", 1));
				_1a5db6b23_indent(_self_);
				_1e7be2632_StrBuilder _6198_fIdent = static__1e7be28eb_New((*((*_60615_f.alloc)._field_Decl))._field_Ident.len());;
				static__1a5d0abcc_field(&(_6198_fIdent), &((*_60615_f.alloc)._field_Decl));
				_6037_lmodel+=_2123b2018_BytesStr(_1e7bec50a_Buf(&_6198_fIdent));
				_6047_rmodel+=_2123b2018_BytesStr(_1e7bec50a_Buf(&_6198_fIdent));
				_1a5ce66bd__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_6037_lmodel), &(_6047_rmodel), &((*_60615_f.alloc)._field_Kind), &((*_60615_f.alloc)._field_Kind), static_cast<jule::U64>(50LLU), jule::Str::lit("==", 2));
				(_6037_lmodel).mut_slice(0LL, (_6037_lmodel.len() - _1e7bebedd_Len(&_6198_fIdent)));;
				_6047_rmodel=_6037_lmodel.slice(0LL, (_6047_rmodel.len() - _1e7bebedd_Len(&_6198_fIdent)));
			}
			_iter_next_1aa8808b2:;
			++it;
			goto _iter_begin_1aa8808b2;
		}
		_iter_end_1aa8808b2:;
	};
	_1a5db6925_doneIndent(_self_);
	if ((!(_6007_writed))) {
		_1a5db6271_write(_self_, jule::Str::lit("true", 4));
	};
	_1a5db6271_write(_self_, jule::Str::lit(";\n", 2));
	_1a5db6925_doneIndent(_self_);
	_1a5db6b23_indent(_self_);
	_1a5db6271_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _1a5dba20e_structureOperators(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _63740_s, jule::Bool _63755_decl) {
	_1e7be2632_StrBuilder _6387_sb = static__1e7be28eb_New(40LL);;
	static__1a5d0a8e1_structureIns(&(_6387_sb), _63740_s);
	jule::Str _6403_ident = _1e7beba59_Str(&_6387_sb);;
	_1a5db9d9b_structureOperatorEq(_self_, _6403_ident, _63740_s, _63755_decl);
}



inline void _1a5dba4b7_structureInsDecl(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _64638_s) {
	{
		auto expr = &((*((*(_64638_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa889a86:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _64715_m = *it;
			{
				if (_1a5dc31a1_isHeadDecl(&(_64715_m))) {
					_1a5dbb81a_funcDecl(_self_, &(_64715_m), false);
				};
			}
			_iter_next_1aa889a86:;
			++it;
			goto _iter_begin_1aa889a86;
		}
		_iter_end_1aa889a86:;
	};
	_1a5db6271_write(_self_, jule::Str::lit("struct ", 7));
	static__1a5d0a8e1_structureIns(&((*_self_.alloc)._field_Buf), _64638_s);
	_1a5db6271_write(_self_, jule::Str::lit(" {\n", 3));
	_1a5db6727_addIndent(_self_);
	{
		auto expr = &((*((*(_64638_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa88a38e:;
		if (it != expr_end) {
			jule::Ptr<_1a3b6121b_FieldIns> _65815_f = *it;
			{
				_1a5db6b23_indent(_self_);
				_1a5db96c5_fieldDecl(_self_, &(_65815_f));
				_1a5db6271_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1aa88a38e:;
			++it;
			goto _iter_begin_1aa88a38e;
		}
		_iter_end_1aa88a38e:;
	};
	_1a5db6b23_indent(_self_);
	_1a5db997d_structureDestructor(_self_, _64638_s);
	_1a5db6271_write(_self_, jule::Str::lit("\n\n", 2));
	_1a5db6925_doneIndent(_self_);
	_1a5db6b23_indent(_self_);
	_1a5db6271_write(_self_, jule::Str::lit("};", 2));
	;
	_1a5dba20e_structureOperators(_self_, _64638_s, true);
}



inline void _1a5dba770_structureDecl(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b5e03d_Struct>* _67635_s) {
	{
		auto expr = &((*((*(_67635_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8900ec:;
		if (it != expr_end) {
			jule::Ptr<_1a3b61cbb_StructIns> _67715_ins = *it;
			{
				_1a5dba4b7_structureInsDecl(_self_, &(_67715_ins));
			}
			_iter_next_1aa8900ec:;
			++it;
			goto _iter_begin_1aa8900ec;
		}
		_iter_end_1aa8900ec:;
	};
}



inline void _1a5dba96d_structureDecls(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa89086c:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> _68315_s = *it;
			{
				if (((*(_68315_s))._field_Token != nullptr)) {
					_1a5dba770_structureDecl(_self_, &(_68315_s));
					_1a5db6271_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1aa89086c:;
			++it;
			goto _iter_begin_1aa89086c;
		}
		_iter_end_1aa89086c:;
	};
}



inline void _1a5dbab6b_structureMethodDecls(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa89187e:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> _69215_s = *it;
			{
				if (((*(_69215_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_69215_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa89394c:;
						if (it != expr_end) {
							jule::Ptr<_1a3b61cbb_StructIns> _69417_ins = *it;
							{
								{
									auto expr = &((*(_69417_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1aa894387:;
									if (it != expr_end) {
										jule::Ptr<_1a3b740ec_Fn> _69518_m = *it;
										{
											if ((!(_1a5dc31a1_isHeadDecl(&(_69518_m))))) {
												_1a5db7e98_pushResult(_self_, &(_69518_m));
												_1a5dbb81a_funcDecl(_self_, &(_69518_m), false);
											};
										}
										_iter_next_1aa894387:;
										++it;
										goto _iter_begin_1aa894387;
									}
									_iter_end_1aa894387:;
								};
							}
							_iter_next_1aa89394c:;
							++it;
							goto _iter_begin_1aa89394c;
						}
						_iter_end_1aa89394c:;
					};
				};
			}
			_iter_next_1aa89187e:;
			++it;
			goto _iter_begin_1aa89187e;
		}
		_iter_end_1aa89187e:;
	};
}



inline void _1a5dbb144_funcHead(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, _1e7be2632_StrBuilder* _71030_buf, jule::Ptr<_1a3b770cd_FnIns>* _71052_f, jule::Bool _71063_ptr, jule::Str _71074_ident) {
	if ((((!(_71063_ptr)) && _1a565bb8d_Inline) && (!(_1a3b74a8c_IsEntryPoint((*((*(_71052_f))))._field_Decl.ptr()))))) {
		_1e7beb262_WriteStr(_71030_buf, jule::Str::lit("inline ", 7));
	};
	_1a5dc9c13_funcInsResult((*(_self_))._field_tc.ptr(), _71030_buf, _71052_f);
	if (_71063_ptr) {
		_1e7beb262_WriteStr(_71030_buf, jule::Str::lit("(*", 2));
		static__1a5d09c42_funcIns(_71030_buf, _71052_f);
		_1e7beb51a_WriteByte(_71030_buf, ')');
	} else {
		_1e7beb51a_WriteByte(_71030_buf, ' ');
		if ((_71074_ident).empty()) {
			static__1a5d09c42_funcIns(_71030_buf, _71052_f);
		} else {
			_1e7beb262_WriteStr(_71030_buf, _71074_ident);
		};
	};
}



inline void _1a5dbb4a7_funcDeclIns(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b770cd_FnIns>* _72933_f, jule::Bool _72944_ptr) {
	_1a5db6b23_indent(_self_);
	_1a5dbb144_funcHead(_self_, &((*_self_.alloc)._field_Buf), _72933_f, _72944_ptr, jule::Str());
	_1a5dbc94d_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _72933_f);
	_1a5db6271_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1a5dbb81a_funcDecl(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b740ec_Fn>* _73630_f, jule::Bool _73638_ptr) {
	{
		auto expr = &((*((*(_73630_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa89a57a:;
		if (it != expr_end) {
			jule::Ptr<_1a3b770cd_FnIns> _73715_c = *it;
			{
				_1a5dbb4a7_funcDeclIns(_self_, &(_73715_c), _73638_ptr);
			}
			_iter_next_1aa89a57a:;
			++it;
			goto _iter_begin_1aa89a57a;
		}
		_iter_end_1aa89a57a:;
	};
}



inline void _1a5dbbac3_funcDeclTrait(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b740ec_Fn>* _74235_f) {
	{
		auto expr = &((*((*(_74235_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa89b48d:;
		if (it != expr_end) {
			jule::Ptr<_1a3b770cd_FnIns> _74315_c = *it;
			{
				jule::Ptr<_1a3cbac27_TypeKind> _7448_k = (*((*(_74315_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_74315_c))._field_Params[0LL]))._field_Kind=_1a5db3a54_generalGCPtr;
				_1a5dbb4a7_funcDeclIns(_self_, &(_74315_c), true);
				(*((*(_74315_c))._field_Params[0LL]))._field_Kind=_7448_k;
			}
			_iter_next_1aa89b48d:;
			++it;
			goto _iter_begin_1aa89b48d;
		}
		_iter_end_1aa89b48d:;
	};
}



inline void _1a5dbbcc1_funcDecls(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	_1a5637680_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a3bdb609_Package>*>((void*)__jule_anon_1aa89e1a5, jule::Ptr<__jule_anon_1aa89e1a5_ctx>::make(__jule_anon_1aa89e1a5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa89e1a5_ctx_handler));
}



inline void _1a5dbc079_traitDataTypeMethods(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b87a7d_Trait>* _76442_t) {
	_1a563852c_IterTraitMethods(_76442_t, jule::__new_closure<void,jule::Ptr<_1a3b740ec_Fn>*>((void*)__jule_anon_1aa8a06c3, jule::Ptr<__jule_anon_1aa8a06c3_ctx>::make(__jule_anon_1aa8a06c3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa8a06c3_ctx_handler));
}



inline void _1a5dbc277_traitDataTypes(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	_1a5637680_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a3bdb609_Package>*>((void*)__jule_anon_1aa8a5cd3, jule::Ptr<__jule_anon_1aa8a5cd3_ctx>::make(__jule_anon_1aa8a5cd3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa8a5cd3_ctx_handler));
}



inline void _1a5dbc5da_paramIns(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, _1e7be2632_StrBuilder* _80030_buf, jule::Ptr<_1a3b76055_ParamIns>* _80052_p) {
	_1a5dc953c_paramIns((*(_self_))._field_tc.ptr(), _80030_buf, _80052_p);
	_1e7beb51a_WriteByte(_80030_buf, ' ');
	static__1a5d0a319_param(_80030_buf, &((*((*(_80052_p))))._field_Decl));
}



inline void _1a5dbc94d_paramsIns(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, _1e7be2632_StrBuilder* _80631_buf, jule::Ptr<_1a3b770cd_FnIns>* _80653_f) {
	if (((!((*((*(_80653_f))))._field_AsAnon)) && ((*((*(_80653_f))))._field_Params.len() == 0LL))) {
		_1e7beb262_WriteStr(_80631_buf, jule::Str::lit("(void)", 6));
		return;;
	};
	_1e7beb51a_WriteByte(_80631_buf, '(');
	if ((*((*(_80653_f))))._field_AsAnon) {
		_1e7beb262_WriteStr(_80631_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
		if (((*((*(_80653_f))))._field_Params.len() > 0LL)) {
			_1e7beb262_WriteStr(_80631_buf, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_80653_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8ae391:;
		if (it != expr_end) {
			jule::I64 _8188_i = it - expr->begin();
			jule::Ptr<_1a3b76055_ParamIns> _81815_p = *it;
			{
				_1a5dbc5da_paramIns(_self_, _80631_buf, &(_81815_p));
				if ((((*((*(_80653_f))))._field_Params.len() - _8188_i) > 1LL)) {
					_1e7beb262_WriteStr(_80631_buf, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1aa8ae391:;
			++it;
			_8188_i++;
			goto _iter_begin_1aa8ae391;
		}
		_iter_end_1aa8ae391:;
	};
	_1e7beb51a_WriteByte(_80631_buf, ')');
}



inline void _1a5dbccb1_varInitExpr(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3c31c26_Var>* _82733_v, jule::Fn<void> _82742_init) {
	if ((*((*(_82733_v))))._field_Statically) {
		_1a5db6271_write(_self_, jule::Str::lit("static ", 7));
	};
	_1a5dca74c_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_82733_v))))._field_Kind))._field_Kind);
	_1a5db6271_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_82733_v))))._field_Reference) {
		_1a5db6271_write(_self_, jule::Str::lit("*", 1));
	};
	static__1a5d0aeb8_var(&((*_self_.alloc)._field_Buf), (*(_82733_v)));
	if ((_82742_init != nullptr)) {
		_1a5db6271_write(_self_, jule::Str::lit(" = ", 3));
		_82742_init();
	};
	_1a5db6271_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a5dbd069_var(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3c31c26_Var> _84524_v) {
	if (_1a3b2a449_IsIgnoreIdent((*(_84524_v))._field_Ident)) {
		return;;
	};
	if ((((*_84524_v.alloc)._field_Value != nullptr) && ((*(*(_84524_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_84524_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_84524_v.alloc)._field_Reference) {
				_1a5dbccb1_varInitExpr(_self_, &(_84524_v), jule::__new_closure<void>((void*)__jule_anon_1aa8b683d, jule::Ptr<__jule_anon_1aa8b683d_ctx>::make(__jule_anon_1aa8b683d_ctx{._self_=_self_,._84524_v=_84524_v}).as<jule::Uintptr>(), __jule_anon_1aa8b683d_ctx_handler));
			} else {
				_1a5dbccb1_varInitExpr(_self_, &(_84524_v), jule::__new_closure<void>((void*)__jule_anon_1aa8b893e, jule::Ptr<__jule_anon_1aa8b893e_ctx>::make(__jule_anon_1aa8b893e_ctx{._self_=_self_,._84524_v=_84524_v}).as<jule::Uintptr>(), __jule_anon_1aa8b893e_ctx_handler));
			};
			return;;
		};
		_1a5dbccb1_varInitExpr(_self_, &(_84524_v), nullptr);
		return;;
	};
	if ((*_84524_v.alloc)._field_Reference) {
		_1a5dbccb1_varInitExpr(_self_, &(_84524_v), jule::__new_closure<void>((void*)__jule_anon_1aa8bb15b, jule::Ptr<__jule_anon_1aa8bb15b_ctx>::make(__jule_anon_1aa8bb15b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa8bb15b_ctx_handler));
		return;;
	};
	if (_1a5dd2369_shouldInitialized(&((*((*_84524_v.alloc)._field_Kind))._field_Kind))) {
		_1a5dbccb1_varInitExpr(_self_, &(_84524_v), jule::__new_closure<void>((void*)__jule_anon_1aa8bc2d3, jule::Ptr<__jule_anon_1aa8bc2d3_ctx>::make(__jule_anon_1aa8bc2d3_ctx{._self_=_self_,._84524_v=_84524_v}).as<jule::Uintptr>(), __jule_anon_1aa8bc2d3_ctx_handler));
		return;;
	};
	_1a5dbccb1_varInitExpr(_self_, &(_84524_v), nullptr);
}



inline void _1a5dbd3cc_anonFuncInsDecl(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b69037_AnonFnExprModel>* _87637_m, jule::Str _87658_ident) {
	_1a5dbb144_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_87637_m))))._field_Func), false, _87658_ident);
	_1a5dbc94d_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_87637_m))))._field_Func));
	_1e7beb51a_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
}



inline void _1a5dbd740_anonFuncIns(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b69037_AnonFnExprModel>* _88233_m, jule::Str _88254_ident) {
	_1a5dbb144_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_88233_m))))._field_Func), false, _88254_ident);
	_1a5dbc94d_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_88233_m))))._field_Func));
	_1a5db6271_write(_self_, jule::Str::lit(" ", 1));
	_1a5ce0332_anonFuncScope((*_self_.alloc)._field_sc, (*(_88233_m)), _88254_ident);
	if (((*((*((*(_88233_m))))._field_Func))._field_Scope != nullptr)) {
		_1a5db6271_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a5dbdaa3_funcIns(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b770cd_FnIns>* _89229_f, jule::Str _89240_ident) {
	_1a5dbb144_funcHead(_self_, &((*_self_.alloc)._field_Buf), _89229_f, false, _89240_ident);
	_1a5dbc94d_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _89229_f);
	_1a5db6271_write(_self_, jule::Str::lit(" ", 1));
	_1a5ce05da_funcScope((*_self_.alloc)._field_sc, (*(_89229_f)));
	if (((*((*(_89229_f))))._field_Scope != nullptr)) {
		_1a5db6271_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a5dbdd5b_func(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b740ec_Fn>* _90226_f) {
	{
		auto expr = &((*((*(_90226_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8c5ac2:;
		if (it != expr_end) {
			jule::Ptr<_1a3b770cd_FnIns> _90315_ins = *it;
			{
				_1a5dbdaa3_funcIns(_self_, &(_90315_ins), jule::Str());
			}
			_iter_next_1aa8c5ac2:;
			++it;
			goto _iter_begin_1aa8c5ac2;
		}
		_iter_end_1aa8c5ac2:;
	};
}



inline void _1a5dbe1be_funcTrait(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _90827_s, jule::Ptr<_1a3b770cd_FnIns>* _90847_f) {
	(*((*(_90847_f))))._field_Scope=nullptr;
	_1e7be2632_StrBuilder _9117_nident = static__1e7be28eb_New(30LL);;
	_1e7beb262_WriteStr(&_9117_nident, jule::Str::lit("__jule_trait_method_", 20));
	_1e7beb262_WriteStr(&_9117_nident, _1b5739684_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_90847_f)))), 15LL));
	_1e7beb262_WriteStr(&_9117_nident, jule::Str::lit("_", 1));
	_1e7beb262_WriteStr(&_9117_nident, _1b5739684_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_90827_s)))), 15LL));
	jule::Ptr<_1a3cbac27_TypeKind> _9177_k = (*((*((*(_90847_f))))._field_Params[0LL]))._field_Kind;;
	(*((*((*(_90847_f))))._field_Params[0LL]))._field_Kind=_1a5db3a54_generalGCPtr;
	_1a5dbdaa3_funcIns(_self_, _90847_f, _1e7beba59_Str(&_9117_nident));
	(*((*((*(_90847_f))))._field_Params[0LL]))._field_Kind=_9177_k;
}



inline __jule_tuple_x_1a3b770cd_FnIns__jule_tuple_bool _1a5dbe510_findTraitMetMap(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b740ec_Fn>* _92337_m) {
	__jule_tuple_x_1a3b770cd_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a3b770cd_FnIns> _9247_mins = (*((*(_92337_m))))._field_Instances[0LL];;
	{
		auto expr = &((*(_self_))._field_traitMetMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8cb38b:;
		if (it != expr_end) {
			jule::Ptr<_1a3b770cd_FnIns> _92512_f = it->first;
			{
				if (((((*((*(_92512_f))._field_Decl))._field_Public == (*((*(_92337_m))))._field_Public) && ((*(*(_92512_f))._field_Decl.alloc)._field_Ident == (*((*(_92337_m))))._field_Ident)) && _1a3b77c05_EqualFn(_92512_f, &(_9247_mins)))) {
					__jule_func_result.__jule_result_arg0 = _92512_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1aa8cb38b:;
			++it;
			goto _iter_begin_1aa8cb38b;
		}
		_iter_end_1aa8cb38b:;
	};
	__jule_func_result.__jule_result_arg0 = _9247_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1a5dbe873_traitWrapper(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b87a7d_Trait>* _93534_t, jule::Ptr<_1a3b740ec_Fn>* _93550_m) {
	_julec_label_1aa8cda97:;
	{
		auto expr = &((*((*(_93534_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8cdc40:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> _93715_imp = *it;
			{
				jule::Ptr<_1a3b770cd_FnIns> _9388_mepf;
				jule::Bool _93814_exist;
				({
					__jule_tuple_x_1a3b770cd_FnIns__jule_tuple_bool __jule_assign_result = _1a5dbe510_findTraitMetMap(_self_, _93550_m);
					_9388_mepf = __jule_assign_result.__jule_result_arg0;
					_93814_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_93814_exist) {
					jule::Slice<jule::Uintptr> _9419_vals = (*_self_.alloc)._field_traitMetMap[_9388_mepf];;
					{
						auto expr = &(_9419_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa8d0a99:;
						if (it != expr_end) {
							jule::Uintptr _94212_val = *it;
							{
								if ((_94212_val == static_cast<jule::Uintptr>(_93715_imp))) {
									goto _iter_next_1aa8cdc40;
								};
							}
							_iter_next_1aa8d0a99:;
							++it;
							goto _iter_begin_1aa8d0a99;
						}
						_iter_end_1aa8d0a99:;
					};
					(*_self_.alloc)._field_traitMetMap[_9388_mepf]=jule::append(_9419_vals,jule::Slice<jule::Uintptr>::make({static_cast<jule::Uintptr>(_93715_imp)}));
				} else {
					(*_self_.alloc)._field_traitMetMap[_9388_mepf]=jule::append(jule::Slice<jule::Uintptr>::alloc(0LL, 0LL, 0),jule::Slice<jule::Uintptr>::make({static_cast<jule::Uintptr>(_93715_imp)}));
				};
				{
					auto expr = &((*(_93715_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa8d158e:;
					if (it != expr_end) {
						jule::Ptr<_1a3b61cbb_StructIns> _95216_ins = *it;
						{
							_1a5dbe1be_funcTrait(_self_, &(_95216_ins), &(_9388_mepf));
							jule::Ptr<_1a3b740ec_Fn> _9559_sm = _1a3b62d33_FindMethod(_95216_ins.ptr(), (*((*(_93550_m))))._field_Ident, false);;
							if (((_9559_sm == nullptr) || ((*(_9559_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1a5db6727_addIndent(_self_);
							_1a5db6271_write(_self_, jule::Str::lit("{\n", 2));
							_1a5db6b23_indent(_self_);
							if (((*((*(_93550_m))))._field_Exceptional || (!(_1a3b74570_IsVoid((*(_93550_m)).ptr()))))) {
								_1a5db6271_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1a5d09956_func(&((*_self_.alloc)._field_Buf), &(_9559_sm));
							_1a5db6271_write(_self_, jule::Str::lit("(", 1));
							_1a5db6271_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1a5dc8a03_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _95216_ins);
							_1a5db6271_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _9725_ptr = (!(_1a3b72eca_IsRef((*((*(_93550_m))))._field_Params[0LL].ptr())));;
							if (_9725_ptr) {
								_1a5db6271_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_93550_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1aa8d8211:;
								if (it != expr_end) {
									jule::Ptr<_1a3b72628_Param> _97612_mp = *it;
									{
										_1a5db6271_write(_self_, jule::Str::lit(", ", 2));
										static__1a5d0a319_param(&((*_self_.alloc)._field_Buf), &(_97612_mp));
									}
									_iter_next_1aa8d8211:;
									++it;
									goto _iter_begin_1aa8d8211;
								}
								_iter_end_1aa8d8211:;
							};
							_1a5db6271_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1a5db6925_doneIndent(_self_);
						}
						_iter_next_1aa8d158e:;
						++it;
						goto _iter_begin_1aa8d158e;
					}
					_iter_end_1aa8d158e:;
				};
			}
			_iter_next_1aa8cdc40:;
			++it;
			goto _iter_begin_1aa8cdc40;
		}
		_iter_end_1aa8cdc40:;
	};
}



inline void _1a5dbea71_traitWrappers(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	_1a5637680_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a3bdb609_Package>*>((void*)__jule_anon_1aa8da554, jule::Ptr<__jule_anon_1aa8da554_ctx>::make(__jule_anon_1aa8da554_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa8da554_ctx_handler));
}



inline void _1a5dbedd4_traitDataMethods(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b87a7d_Trait>* _100138_t, jule::Ptr<_1a3b61cbb_StructIns> _100149_s) {
	_1a563852c_IterTraitMethods(_100138_t, jule::__new_closure<void,jule::Ptr<_1a3b740ec_Fn>*>((void*)__jule_anon_1aa8db8da, jule::Ptr<__jule_anon_1aa8db8da_ctx>::make(__jule_anon_1aa8db8da_ctx{._self_=_self_,._100149_s=_100149_s}).as<jule::Uintptr>(), __jule_anon_1aa8db8da_ctx_handler));
}



inline void _1a5dc0302_traitData(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b87a7d_Trait>* _101831_t, jule::I64 _101842_i, jule::Ptr<_1a3b61cbb_StructIns>* _101855_s) {
	_1e7be2632_StrBuilder _10197_ident = static__1e7be28eb_New((*((*(_101831_t))))._field_Ident.len());;
	static__1a5d0a02d_traitDecl(&(_10197_ident), (*(_101831_t)));
	_1a5db6271_write(_self_, jule::Str::lit("static ", 7));
	_1a5db6529_writeBytes(_self_, _1e7bec50a_Buf(&_10197_ident));
	_1a5db6271_write(_self_, jule::Str::lit("MptrData ", 9));
	_1a5db6529_writeBytes(_self_, _1e7bec50a_Buf(&_10197_ident));
	_1a5db6271_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1a5db6271_write(_self_, _1b5739d16_Itoa(_101842_i));
	_1a5db6271_write(_self_, jule::Str::lit(" {\n", 3));
	_1a5db6727_addIndent(_self_);
	_1a5db6b23_indent(_self_);
	_1a5db6271_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1a5db6271_write(_self_, _1b5739d16_Itoa(_1a5db72a5_pushDealloc(_self_, jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait((*(_101855_s)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0)}))));
	_1a5db6271_write(_self_, jule::Str::lit(",\n", 2));
	_1a5dbedd4_traitDataMethods(_self_, _101831_t, (*(_101855_s)));
	_1a5db6925_doneIndent(_self_);
	_1a5db6271_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1a5dc0500_traitDatas(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	_1a5637680_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a3bdb609_Package>*>((void*)__jule_anon_1aa8e9321, jule::Ptr<__jule_anon_1aa8e9321_ctx>::make(__jule_anon_1aa8e9321_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa8e9321_ctx_handler));
}



inline void _1a5dc06ed_globals(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8e8a6d:;
		if (it != expr_end) {
			jule::Ptr<_1a3c31c26_Var> _105515_v = *it;
			{
				_1a5dca74c_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_105515_v))._field_Kind))._field_Kind);
				_1a5db6271_write(_self_, jule::Str::lit(" ", 1));
				static__1a5d0aeb8_var(&((*_self_.alloc)._field_Buf), _105515_v);
				_1a5db6271_write(_self_, jule::Str::lit(" = ", 3));
				_1a5d0272e_model((*_self_.alloc)._field_ec, (*((*((*_105515_v.alloc)._field_Value))._field_Data))._field_Model);
				_1a5db6271_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1aa8e8a6d:;
			++it;
			goto _iter_begin_1aa8e8a6d;
		}
		_iter_end_1aa8e8a6d:;
	};
}



inline void _1a5dc08eb_decls(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	_1a5db941c_structurePlainDecls(_self_);
	_1a5dba96d_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_1e7bebedd_Len(&(*_self_.alloc)._field_Buf);
	_1a5dbab6b_structureMethodDecls(_self_);
	_1a5dbbcc1_funcDecls(_self_);
	_1a5db6271_write(_self_, jule::Str::lit("\n\n", 2));
	_1a5dbc277_traitDataTypes(_self_);
	_1a5db6271_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_1e7bebedd_Len(&(*_self_.alloc)._field_Buf);
	_1a5dbea71_traitWrappers(_self_);
	_1a5db6271_write(_self_, jule::Str::lit("\n\n", 2));
	_1a5dc0500_traitDatas(_self_);
	_1a5db6271_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_1e7bebedd_Len(&(*_self_.alloc)._field_Buf);
	_1a5dc06ed_globals(_self_);
}



inline void _1a5dc0ba4_structureMethods(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _108338_s) {
	{
		auto expr = &((*((*(_108338_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa905096:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _108415_f = *it;
			{
				_1a5dbdd5b_func(_self_, &(_108415_f));
				_1a5db6271_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1aa905096:;
			++it;
			goto _iter_begin_1aa905096;
		}
		_iter_end_1aa905096:;
	};
}



inline void _1a5dc0e5c_structureOstream(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _109038_s) {
	_1a5db6b23_indent(_self_);
	_1a5db6271_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	static__1a5d0a8e1_structureIns(&((*_self_.alloc)._field_Buf), _109038_s);
	_1a5db6271_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1a5db6727_addIndent(_self_);
	_1a5db6b23_indent(_self_);
	jule::Ptr<_1a3b740ec_Fn> _10987_fts = _1a3b62d33_FindMethod((*(_109038_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1a3c335a7_Str(_10987_fts)) {
		_1a5db6271_write(_self_, jule::Str::lit("_Stream << ", 11));
		static__1a5d09956_func(&((*_self_.alloc)._field_Buf), &(_10987_fts));
		_1a5db6271_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1a5db6271_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1a5d03499_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*((*(_109038_s))))._field_Decl))._field_Ident);
		_1a5db6271_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_109038_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa909bd3:;
			if (it != expr_end) {
				jule::I64 _11089_i = it - expr->begin();
				jule::Ptr<_1a3b6121b_FieldIns> _110816_f = *it;
				{
					_1a5db6b23_indent(_self_);
					_1a5db6271_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1a5d03499_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*(_110816_f))._field_Decl))._field_Ident);
					_1a5db6271_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1a3b61cbb_StructIns> _11155_strct = _1a3cbe8eb_Struct((*_110816_f.alloc)._field_Kind.ptr());;
					if ((((_11155_strct != nullptr) && ((*_11155_strct.alloc)._field_Decl != nullptr)) && (*(*(_11155_strct))._field_Decl.alloc)._field_Binded)) {
						_1a5db6271_write(_self_, jule::Str::lit(" cpp.", 5));
						static__1a5d0abcc_field(&((*_self_.alloc)._field_Buf), &((*_110816_f.alloc)._field_Decl));
						_1a5db6271_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1a5db6271_write(_self_, jule::Str::lit("\" << _Src.", 10));
						static__1a5d0abcc_field(&((*_self_.alloc)._field_Buf), &((*_110816_f.alloc)._field_Decl));
					};
					if (((_11089_i + 1LL) < (*((*(_109038_s))))._field_Fields.len())) {
						_1a5db6271_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1a5db6271_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1aa909bd3:;
				++it;
				_11089_i++;
				goto _iter_begin_1aa909bd3;
			}
			_iter_end_1aa909bd3:;
		};
		_1a5db6b23_indent(_self_);
		_1a5db6271_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1a5db6b23_indent(_self_);
	_1a5db6271_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1a5db6925_doneIndent(_self_);
	_1a5db6271_write(_self_, jule::Str::lit("}", 1));
}



inline void _1a5dc1215_structureIns(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b61cbb_StructIns>* _114134_s) {
	;
	_1a5dba20e_structureOperators(_self_, _114134_s, false);
	_1a5dc0ba4_structureMethods(_self_, _114134_s);
	_1a5db6271_write(_self_, jule::Str::lit("\n\n", 2));
	_1a5dc0e5c_structureOstream(_self_, _114134_s);
}



inline void _1a5dc14bd_structure(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3b5e03d_Struct>* _114931_s) {
	{
		auto expr = &((*((*(_114931_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa914825:;
		if (it != expr_end) {
			jule::Ptr<_1a3b61cbb_StructIns> _115015_ins = *it;
			{
				_1a5dc1215_structureIns(_self_, &(_115015_ins));
				_1a5db6271_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1aa914825:;
			++it;
			goto _iter_begin_1aa914825;
		}
		_iter_end_1aa914825:;
	};
}



inline void _1a5dc16bb_structures(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa915073:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> _115715_s = *it;
			{
				if (((*(_115715_s))._field_Token != nullptr)) {
					_1a5dc14bd_structure(_self_, &(_115715_s));
					_1a5db6271_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1aa915073:;
			++it;
			goto _iter_begin_1aa915073;
		}
		_iter_end_1aa915073:;
	};
}



inline void _1a5dc18b9_funcs(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	_1a5637680_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a3bdb609_Package>*>((void*)__jule_anon_1aa917b47, jule::Ptr<__jule_anon_1aa917b47_ctx>::make(__jule_anon_1aa917b47_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa917b47_ctx_handler));
}



inline void _1a5dc1b72_pushInit(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, jule::Ptr<_1a3bdb609_Package>* _118130_pkg) {
	_1a56379b0_IterFiles(_118130_pkg, jule::__new_closure<void,jule::Ptr<_1a3c844b5_SymbolTable>*>((void*)__jule_anon_1aa919121, jule::Ptr<__jule_anon_1aa919121_ctx>::make(__jule_anon_1aa919121_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa919121_ctx_handler));
}



inline void _1a5dc1d70_anonHashes(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	_julec_label_1aa91cb2a:;
	jule::Slice<jule::Ptr<_1a5db4615_anonHash>> _11987_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_11987_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa91c630:;
		if (it != expr_end) {
			jule::Ptr<_1a5db4615_anonHash> _120015_h = *it;
			{
				_1a5dbd740_anonFuncIns(_self_, &((*(_120015_h))._field_expr), (*_120015_h.alloc)._field_ident);
			}
			_iter_next_1aa91c630:;
			++it;
			goto _iter_begin_1aa91c630;
		}
		_iter_end_1aa91c630:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1aa91cb2a;
	};
}



inline void _1a5dc206d_initCaller(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	_1a5db6271_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1a5db6727_addIndent(_self_);
	_1a5637680_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1a3bdb609_Package>*>((void*)__jule_anon_1aa921de8, jule::Ptr<__jule_anon_1aa921de8_ctx>::make(__jule_anon_1aa921de8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa921de8_ctx_handler));
	_1a5db6925_doneIndent(_self_);
	_1a5db6271_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1a5dc226b_end(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	_1a5db6271_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_21212ea22_Test) {
		_1a5db6271_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1a5db6271_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1a5db6271_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1a5dc25ce_insertBuf(jule::Ptr<_1a5db5abc_ObjectCoder> _self_, _1e7be2632_StrBuilder* _123831_buf, jule::I64 _123848_pos) {
	if ((_1e7bebedd_Len(_123831_buf) > 0LL)) {
		jule::Slice<jule::U8> _12408_head = jule::Slice<jule::U8>::alloc(0LL, (_1e7bebedd_Len(&(*(_self_))._field_Buf) + _1e7bebedd_Len(_123831_buf)), 0);;
		(_12408_head).append(_1e7bec50a_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, _123848_pos));;
		(_12408_head).append(_1e7bec50a_Buf(_123831_buf));;
		(_12408_head).append(_1e7bec50a_Buf(&(*_self_.alloc)._field_Buf).slice(_123848_pos));;
		{
			_1e7bec7b3_SetBuf(&(*_self_.alloc)._field_Buf, _12408_head);
		};
	};
}



inline void _1a5dc27cc_serializeHead(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	_1a5db8e66_prepareStructures(_self_);
	_1a5db87b2_head(_self_);
	_1a5db6271_write(_self_, jule::Str::lit("\n", 1));
	_1a5dc08eb_decls(_self_);
	_1a5dc25ce_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_1e7bebedd_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_1e7bebedd_Len(&(*_self_.alloc)._field_resultDecls);
	_1a5db6271_write(_self_, jule::Str::lit("\n", 1));
	_1a5dc16bb_structures(_self_);
	_1a5dc18b9_funcs(_self_);
	_1a5dc206d_initCaller(_self_);
	_1a5db6271_write(_self_, jule::Str::lit("\n\n", 2));
	_1a5dc1d70_anonHashes(_self_);
	_1a5dc25ce_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_1e7bebedd_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_1e7bebedd_Len(&(*_self_.alloc)._field_deallocObj);
	_1a5dc25ce_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1e7bebedd_Len(&(*_self_.alloc)._field_anyObj);
	_1a5dc25ce_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1e7bebedd_Len(&(*_self_.alloc)._field_anonObj);
}



inline void _1a5dc29ca_Serialize(jule::Ptr<_1a5db5abc_ObjectCoder> _self_) {
	_1a5dc27cc_serializeHead(_self_);
	_1a5dc226b_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a5db5abc_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Buf:" << _Src._field_Buf << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "anonObj:" << _Src._field_anonObj << ", ";
	_Stream << "deallocObj:" << _Src._field_deallocObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "anons:" << _Src._field_anons << ", ";
	_Stream << "deallocated:" << _Src._field_deallocated << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "traitMetMap:" << _Src._field_traitMetMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos << ", ";
	_Stream << "wrapPos:" << _Src._field_wrapPos;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a5dc4944_customType_eq(_1a5dc4944_customType *_self_, _1a5dc4944_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1a5dc4d0c_Str(_1a5dc4944_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1a5dc514d_Equal(jule::Ptr<_1a5dc4944_customType> _self_, jule::Ptr<_1a3cbac27_TypeKind> _4418_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5dc4944_customType _Src) {
	_Stream << _1a5dc4d0c_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a5dc557c_typeCoder_eq(_1a5dc557c_typeCoder *_self_, _1a5dc557c_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_1a5dc557c_typeCoder> static__1a5dc5a99_new(jule::Ptr<_1a5db5abc_ObjectCoder>* _6921_oc) {
	jule::Ptr<_1a5dc557c_typeCoder> _707_tc = jule::new_ptr<_1a5dc557c_typeCoder>(_1a5dc557c_typeCoder{._field_oc=(*(_6921_oc)), });;
	(*(_707_tc))._field_rc=static__1a5dcd640_new(&(_707_tc));
	return _707_tc;;
}



inline void _1a5dc5e0c_toType(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _7627_buf, jule::Str _7648_id) {
	if ((!_7648_id.equal("uintptr", 7))) {
		_7648_id=_1b573bd7e_RealKindOf(_7648_id);
	};
	_1e7beb262_WriteStr(_7627_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7648_id[0LL]) && (_7648_id[0LL] <= 122LLU))) {
		_1e7beb51a_WriteByte(_7627_buf, (_7648_id[0LL] - 32LLU));
	} else {
		_1e7beb51a_WriteByte(_7627_buf, _7648_id[0LL]);
	};
	_1e7beb262_WriteStr(_7627_buf, _7648_id.slice(1LL));
}



inline void _1a5dc6270_prim(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _9025_buf, jule::Ptr<_1a3cc3801_Prim> _9042_p) {
	_1a5dc5e0c_toType(_self_, _9025_buf, (*(_9042_p))._field_Kind);
}



inline void _1a5dc65d3_tuple(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _9526_buf, jule::Ptr<_1a3cc88e4_Tuple> _9547_t) {
	_1e7beb262_WriteStr(_9526_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_9547_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9399c1:;
		if (it != expr_end) {
			jule::I64 _978_i = it - expr->begin();
			jule::Ptr<_1a3cbac27_TypeKind> _9715_tk = *it;
			{
				_1a5dca74c_kind(_self_, _9526_buf, _9715_tk);
				if ((((*(_9547_t))._field_Types.len() - _978_i) > 1LL)) {
					_1e7beb51a_WriteByte(_9526_buf, ',');
				};
			}
			_iter_next_1aa9399c1:;
			++it;
			_978_i++;
			goto _iter_begin_1aa9399c1;
		}
		_iter_end_1aa9399c1:;
	};
	_1e7beb51a_WriteByte(_9526_buf, '>');
}



inline void _1a5dc6946_asSptr(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem) {
	_1e7beb262_WriteStr(_10727_buf, jule::Str::lit("jule::Ptr<", 10));
	_1e7beaea9_Write(_10727_buf, _10744_elem);
	_1e7beb51a_WriteByte(_10727_buf, '>');
}



inline void _1a5dc6ca9_sptr(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _11425_buf, jule::Ptr<_1a3cc732c_Sptr> _11446_sptr) {
	_1e7beb262_WriteStr(_11425_buf, jule::Str::lit("jule::Ptr<", 10));
	_1a5dca74c_kind(_self_, _11425_buf, (*(_11446_sptr))._field_Elem);
	_1e7beb51a_WriteByte(_11425_buf, '>');
}



inline void _1a5dc711c_ptr(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _12124_buf, jule::Ptr<_1a3ccaae4_Ptr> _12145_p) {
	;
	if (_1a3ccb62d_IsUnsafe(_12145_p.ptr())) {
		_1e7beb262_WriteStr(_12124_buf, jule::Str::lit("void*", 5));
	} else {
		_1a5dca74c_kind(_self_, _12124_buf, (*(_12145_p))._field_Elem);
		_1e7beb262_WriteStr(_12124_buf, jule::Str::lit("*", 1));
	};
}



inline void _1a5dc7480_enumDecl(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _13229_buf, jule::Ptr<_1a3b8a289_Enum> _13250_e) {
	_1a5dca74c_kind(_self_, _13229_buf, (*((*(_13250_e))._field_Kind))._field_Kind);
}



inline void _1a5dc77e3_typeEnumDecl(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _13733_buf, jule::Ptr<_1a3b8b994_TypeEnum> _13754_e) {
	_1e7beb262_WriteStr(_13733_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1a5dc7b56_asSlice(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _14128_buf, jule::Ptr<_1a3cbac27_TypeKind> _14149_elem) {
	_1e7beb262_WriteStr(_14128_buf, jule::Str::lit("jule::Slice<", 12));
	_1a5dca74c_kind(_self_, _14128_buf, _14149_elem);
	_1e7beb51a_WriteByte(_14128_buf, '>');
}



inline void _1a5dc7eb9_slice(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _14826_buf, jule::Ptr<_1a3cc7d00_Slc> _14847_s) {
	_1a5dc7b56_asSlice(_self_, _14826_buf, (*(_14847_s))._field_Elem);
}



inline void _1a5dc832c_mapType(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _15328_buf, jule::Ptr<_1a3cc9494_Map> _15349_m) {
	_1e7beb262_WriteStr(_15328_buf, jule::Str::lit("jule::Map<", 10));
	_1a5dca74c_kind(_self_, _15328_buf, (*(_15349_m))._field_Key);
	_1e7beb51a_WriteByte(_15328_buf, ',');
	_1a5dca74c_kind(_self_, _15328_buf, (*_15349_m.alloc)._field_Val);
	_1e7beb51a_WriteByte(_15328_buf, '>');
}



inline void _1a5dc8a03_structureIns(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _16733_buf, jule::Ptr<_1a3b61cbb_StructIns> _16754_s) {
	if ((!((*((*(_16754_s))._field_Decl))._field_Binded))) {
		static__1a5d0a8e1_structureIns(_16733_buf, &(_16754_s));
		return;;
	};
	jule::Ptr<_1a3b3c55a_Directive> _1723_d = _1a5642c62_FindDirective(&((*(*(_16754_s))._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
	if ((_1723_d != nullptr)) {
		_1e7beaea9_Write(_16733_buf, _1a5dc2d93_concatAllParts((*_1723_d.alloc)._field_Args));
		_1e7beb262_WriteStr(_16733_buf, jule::Str::lit("::", 2));
	};
	static__1a5d0a8e1_structureIns(_16733_buf, &(_16754_s));
	if (((*_16754_s.alloc)._field_Generics.len() > 0LL)) {
		_1e7beb51a_WriteByte(_16733_buf, '<');
		{
			auto expr = &((*_16754_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa94646c:;
			if (it != expr_end) {
				jule::I64 _1809_i = it - expr->begin();
				jule::Ptr<_1a3cb9341_InsGeneric> _18016_g = *it;
				{
					_1a5dca74c_kind(_self_, _16733_buf, (*(_18016_g))._field_Kind);
					if ((((*_16754_s.alloc)._field_Generics.len() - _1809_i) > 1LL)) {
						_1e7beb51a_WriteByte(_16733_buf, ',');
					};
				}
				_iter_next_1aa94646c:;
				++it;
				_1809_i++;
				goto _iter_begin_1aa94646c;
			}
			_iter_end_1aa94646c:;
		};
		_1e7beb51a_WriteByte(_16733_buf, '>');
	};
}



inline void _1a5dc8d66_array(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _19126_buf, jule::Ptr<_1a3cca121_Arr> _19147_a) {
	_1e7beb262_WriteStr(_19126_buf, jule::Str::lit("jule::Array<", 12));
	_1a5dca74c_kind(_self_, _19126_buf, (*(_19147_a))._field_Elem);
	_1e7beb51a_WriteByte(_19126_buf, ',');
	_1e7beb262_WriteStr(_19126_buf, _1b5739d16_Itoa((*_19147_a.alloc)._field_N));
	_1e7beb51a_WriteByte(_19126_buf, '>');
}



inline void _1a5dc953c_paramIns(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _21429_buf, jule::Ptr<_1a3b76055_ParamIns>* _21451_p) {
	if ((*((*((*(_21451_p))))._field_Decl))._field_Variadic) {
		_1e7beb262_WriteStr(_21429_buf, jule::Str::lit("jule::Slice<", 12));
		_1a5dca74c_kind(_self_, _21429_buf, (*((*(_21451_p))))._field_Kind);
		_1e7beb51a_WriteByte(_21429_buf, '>');
	} else {
		_1a5dca74c_kind(_self_, _21429_buf, (*((*(_21451_p))))._field_Kind);
	};
	if ((*((*((*(_21451_p))))._field_Decl))._field_Reference) {
		_1e7beb51a_WriteByte(_21429_buf, '*');
	};
}



inline void _1a5dc9c13_funcInsResult(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _24634_s, jule::Ptr<_1a3b770cd_FnIns>* _24654_f) {
	if (_1a3b74570_IsVoid((*((*(_24654_f))))._field_Decl.ptr())) {
		if ((*(*((*(_24654_f))))._field_Decl.alloc)._field_Exceptional) {
			_1e7beb262_WriteStr(_24634_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_1e7beb262_WriteStr(_24634_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_24654_f))))._field_Decl.alloc)._field_Exceptional) {
		_1e7beb262_WriteStr(_24634_s, jule::Str::lit("jule::Exceptional<", 18));
		_1a5dd06ec_codeMut1((*(_self_))._field_rc.ptr(), _24634_s, &((*((*(_24654_f))))._field_Result));
		_1e7beb51a_WriteByte(_24634_s, '>');
		return;;
	};
	_1a5dd06ec_codeMut1((*(_self_))._field_rc, _24634_s, &((*((*(_24654_f))))._field_Result));
}



inline void _1a5dca076_anonFunc(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _26429_buf, jule::Ptr<_1a3b770cd_FnIns> _26450_f) {
	if ((((*(_26450_f))._field_Result != nullptr) && (_1a3cc019e_Tup((*(_26450_f))._field_Result) != nullptr))) {
		_1a5db7be0_pushResultIns((*(_self_))._field_oc, &(_26450_f));
	};
	_1a5dc9c13_funcInsResult(_self_, _26429_buf, &(_26450_f));
	if (((*_26450_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	_1e7beb51a_WriteByte(_26429_buf, ',');
	{
		auto expr = &((*_26450_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa95da6c:;
		if (it != expr_end) {
			jule::I64 _2738_i = it - expr->begin();
			jule::Ptr<_1a3b76055_ParamIns> _27315_param = *it;
			{
				if (_1a3b72c44_IsSelf((*(_27315_param))._field_Decl.ptr())) {
					goto _iter_next_1aa95da6c;
				};
				_1a5dc953c_paramIns(_self_, _26429_buf, &(_27315_param));
				if ((((*_26450_f.alloc)._field_Params.len() - _2738_i) > 1LL)) {
					_1e7beb51a_WriteByte(_26429_buf, ',');
				};
			}
			_iter_next_1aa95da6c:;
			++it;
			_2738_i++;
			goto _iter_begin_1aa95da6c;
		}
		_iter_end_1aa95da6c:;
	};
}



inline void _1a5dca3d9_func(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _28525_buf, jule::Ptr<_1a3b770cd_FnIns> _28546_f) {
	_1e7beb262_WriteStr(_28525_buf, jule::Str::lit("jule::Fn<", 9));
	_1a5dca076_anonFunc(_self_, _28525_buf, _28546_f);
	_1e7beb51a_WriteByte(_28525_buf, '>');
}



inline void _1a5dca74c_kind(_1a5dc557c_typeCoder* _self_, _1e7be2632_StrBuilder* _29225_buf, jule::Ptr<_1a3cbac27_TypeKind> _29246_k) {
	{
		
		if ((_1a3cbe8eb_Struct(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aa962279:;
			{
				_1a5dc8a03_structureIns(_self_, _29225_buf, _1a3cbe8eb_Struct(_29246_k));
				return;;
			}
		}
		else if (_1a3cbba6e_Binded(_29246_k.ptr())) {
			_case_begin_1aa962323:;
			{
				_1e7beb262_WriteStr(_29225_buf, (*_29246_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1a3cbd378_Prim(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aa962389:;
			{
				_1a5dc6270_prim(_self_, _29225_buf, _1a3cbd378_Prim(_29246_k));
				return;;
			}
		}
		else if ((_1a3cc019e_Tup(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aa962400:;
			{
				_1a5dc65d3_tuple(_self_, _29225_buf, _1a3cc019e_Tup(_29246_k));
				return;;
			}
		}
		else if ((_1a3cbd60e_Sptr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aa962466:;
			{
				_1a5dc6ca9_sptr(_self_, _29225_buf, _1a3cbd60e_Sptr(_29246_k));
				return;;
			}
		}
		else if ((_1a3cbd895_Ptr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aa9624dd:;
			{
				_1a5dc711c_ptr(_self_, _29225_buf, _1a3cbd895_Ptr(_29246_k));
				return;;
			}
		}
		else if ((_1a3cbdb2b_Enum(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aa962565:;
			{
				_1a5dc7480_enumDecl(_self_, _29225_buf, _1a3cbdb2b_Enum(_29246_k));
				return;;
			}
		}
		else if ((_1a3cbddb2_TypeEnum(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aa9625dc:;
			{
				_1a5dc77e3_typeEnumDecl(_self_, _29225_buf, _1a3cbddb2_TypeEnum(_29246_k));
				return;;
			}
		}
		else if ((_1a3cbe3ce_Slc(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aa962664:;
			{
				_1a5dc7eb9_slice(_self_, _29225_buf, _1a3cbe3ce_Slc(_29246_k));
				return;;
			}
		}
		else if ((_1a3cbee18_Map(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aa9626db:;
			{
				_1a5dc832c_mapType(_self_, _29225_buf, _1a3cbee18_Map(_29246_k));
				return;;
			}
		}
		else if ((_1a3cbeb82_Trait(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aa962763:;
			{
				_1e7beb262_WriteStr(_29225_buf, jule::Str::lit("jule::Trait", 11));
				return;;
			}
		}
		else if ((_1a3cbe148_Arr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aa9627da:;
			{
				_1a5dc8d66_array(_self_, _29225_buf, _1a3cbe148_Arr(_29246_k));
				return;;
			}
		}
		else if ((_1a3cbe665_Fn(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aa962862:;
			{
				_1a5dca3d9_func(_self_, _29225_buf, _1a3cbe665_Fn(_29246_k));
				return;;
			}
		}
		_match_end_1aa96209d:;
	};
	{
		auto &_match_expr{ (*(_29246_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data27)) {
			_case_begin_1aa9628ea:;
			{
				_1e7beb262_WriteStr(_29225_buf, (*((*(_29246_k))._field_Kind.cast_ptr<_1a5dc4944_customType>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data27)))._field_kind);
			}
		}
		else {
			_case_begin_1aa96aeec:;
			{
				_1e7beb262_WriteStr(_29225_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1aa96ae97:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a5dc557c_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a5dcd167_resultCoder_eq(_1a5dcd167_resultCoder *_self_, _1a5dcd167_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_1a5dcd167_resultCoder> static__1a5dcd640_new(jule::Ptr<_1a5dc557c_typeCoder>* _35921_tc) {
	return jule::new_ptr<_1a5dcd167_resultCoder>(_1a5dcd167_resultCoder{._field_tc=(*(_35921_tc))});;
}



inline void _1a5dcd9a3_ptr(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _36324_s, jule::Ptr<_1a3ccaae4_Ptr> _36343_p) {
	_1e7beb262_WriteStr(_36324_s, jule::Str::lit("p", 1));
	_1a5dd0389_codeMut(_self_, _36324_s, &((*(_36343_p))._field_Elem));
}



inline void _1a5dcdd16_sptr(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _36825_s, jule::Ptr<_1a3cc732c_Sptr> _36844_p) {
	_1e7beb262_WriteStr(_36825_s, jule::Str::lit("x", 1));
	_1a5dd0389_codeMut(_self_, _36825_s, &((*(_36844_p))._field_Elem));
}



inline void _1a5dce179_mapType(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _37328_s, jule::Ptr<_1a3cc9494_Map> _37347_p) {
	_1e7beb262_WriteStr(_37328_s, jule::Str::lit("m", 1));
	_1a5dd0389_codeMut(_self_, _37328_s, &((*(_37347_p))._field_Key));
	_1a5dd0389_codeMut(_self_, _37328_s, &((*_37347_p.alloc)._field_Val));
}



inline void _1a5dce4dc_slice(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _37926_s, jule::Ptr<_1a3cc7d00_Slc> _37945_slc) {
	_1e7beb262_WriteStr(_37926_s, jule::Str::lit("s", 1));
	_1a5dd0389_codeMut(_self_, _37926_s, &((*(_37945_slc))._field_Elem));
}



inline void _1a5dce850_arr(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _38424_s, jule::Ptr<_1a3cca121_Arr> _38443_arr) {
	_1e7beb262_WriteStr(_38424_s, jule::Str::lit("a", 1));
	_1e7beb262_WriteStr(_38424_s, _1b5739a4c_FmtInt(static_cast<jule::I64>((*(_38443_arr))._field_N), 16LL));
	_1a5dd0389_codeMut(_self_, _38424_s, &((*_38443_arr.alloc)._field_Elem));
}



inline void _1a5dcebb3_func(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _39025_s, jule::Ptr<_1a3b770cd_FnIns> _39044_f) {
	_1e7beb262_WriteStr(_39025_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_39044_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa973477:;
		if (it != expr_end) {
			jule::Ptr<_1a3b76055_ParamIns> _39215_p = *it;
			{
				if ((*((*(_39215_p))._field_Decl))._field_Reference) {
					_1e7beb262_WriteStr(_39025_s, jule::Str::lit("r", 1));
				};
				_1a5dd0389_codeMut(_self_, _39025_s, &((*_39215_p.alloc)._field_Kind));
			}
			_iter_next_1aa973477:;
			++it;
			goto _iter_begin_1aa973477;
		}
		_iter_end_1aa973477:;
	};
	if (((*_39044_f.alloc)._field_Result != nullptr)) {
		_1a5dd0389_codeMut(_self_, _39025_s, &((*_39044_f.alloc)._field_Result));
	};
}



inline void _1a5dd0026_tup(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _40324_s, jule::Ptr<_1a3cc88e4_Tuple> _40343_tup) {
	{
		auto expr = &((*(_40343_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa975ac8:;
		if (it != expr_end) {
			jule::Ptr<_1a3cbac27_TypeKind> _40415_t = *it;
			{
				_1e7beb262_WriteStr(_40324_s, jule::Str::lit("__jule_tuple_", 13));
				_1a5dd0389_codeMut(_self_, _40324_s, &(_40415_t));
			}
			_iter_next_1aa975ac8:;
			++it;
			goto _iter_begin_1aa975ac8;
		}
		_iter_end_1aa975ac8:;
	};
}



inline void _1a5dd0389_codeMut(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _41028_s, jule::Ptr<_1a3cbac27_TypeKind>* _41048_t) {
	{
		auto &_match_expr{ (*((*(_41048_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data26)) {
			_case_begin_1aa976cd8:;
			{
				_1a5dcd9a3_ptr(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a3ccaae4_Ptr>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data21)) {
			_case_begin_1aa977503:;
			{
				_1a5dcdd16_sptr(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a3cc732c_Sptr>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data21));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data24)) {
			_case_begin_1aa977190:;
			{
				_1a5dce179_mapType(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a3cc9494_Map>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data22)) {
			_case_begin_1aa977206:;
			{
				_1a5dce4dc_slice(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a3cc7d00_Slc>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data22));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data25)) {
			_case_begin_1aa97726c:;
			{
				_1a5dce850_arr(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a3cca121_Arr>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data25));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data1)) {
			_case_begin_1aa9772d3:;
			{
				_1a5dcebb3_func(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a3b770cd_FnIns>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data3)) {
			_case_begin_1aa977745:;
			{
				jule::Ptr<_1a3b8a289_Enum> _4254_te = (*((*(_41048_t))))._field_Kind.cast_ptr<_1a3b8a289_Enum>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data3);;
				static__1a5d09219_toOut(_41028_s, (*(_4254_te))._field_Ident, static_cast<jule::Uintptr>(_4254_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data4)) {
			_case_begin_1aa9777ab:;
			{
				jule::Ptr<_1a3b8b994_TypeEnum> _4284_te = (*((*(_41048_t))))._field_Kind.cast_ptr<_1a3b8b994_TypeEnum>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data4);;
				static__1a5d09219_toOut(_41028_s, (*(_4284_te))._field_Ident, static_cast<jule::Uintptr>(_4284_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0)) {
			_case_begin_1aa977822:;
			{
				jule::Ptr<_1a3b61cbb_StructIns> _4318_si = (*((*(_41048_t))))._field_Kind.cast_ptr<_1a3b61cbb_StructIns>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0);;
				static__1a5d0a8e1_structureIns(_41028_s, &(_4318_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data2)) {
			_case_begin_1aa977888:;
			{
				jule::Ptr<_1a3b87a7d_Trait> _4348_trt = (*((*(_41048_t))))._field_Kind.cast_ptr<_1a3b87a7d_Trait>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data2);;
				static__1a5d0a02d_traitDecl(_41028_s, _4348_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)) {
			_case_begin_1aa977910:;
			{
				_1e7beb262_WriteStr(_41028_s, (*((*((*(_41048_t))))._field_Kind.cast_ptr<_1a3cc3801_Prim>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cba771_Kind_mptr_data23)) {
			_case_begin_1aa977987:;
			{
				_1a5dd0026_tup(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a3cc88e4_Tuple>((jule::Trait::Type*)&_1a3cba771_Kind_mptr_data23));
			}
		}
		else {
			_case_begin_1aa977129:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:441:4"));;
			}
		}
		_match_end_1aa9770c4:;
	};
}



inline void _1a5dd06ec_codeMut1(_1a5dcd167_resultCoder* _self_, _1e7be2632_StrBuilder* _44529_s, jule::Ptr<_1a3cbac27_TypeKind>* _44549_t) {
	jule::Ptr<_1a3cc88e4_Tuple> _4467_tup = _1a3cc019e_Tup((*(_44549_t)).ptr());;
	if ((_4467_tup != nullptr)) {
		_1a5dd0026_tup(_self_, _44529_s, _4467_tup);
	} else {
		_1a5dca74c_kind((*(_self_))._field_tc.ptr(), _44529_s, (*(_44549_t)));
	};
}



inline jule::Slice<jule::U8> _1a5dd0a0a_code(_1a5dcd167_resultCoder* _self_, jule::Ptr<_1a3cbac27_TypeKind>* _45425_t) {
	_1e7be2632_StrBuilder _4557_s = static__1e7be28eb_New(20LL);;
	_1a5dd0389_codeMut(_self_, &(_4557_s), _45425_t);
	return _1e7bec50a_Buf(&_4557_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5dcd167_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1aa98371d_Flag_eq(_1aa98371d_Flag *_self_, _1aa98371d_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1aa983b3b_Name(_1aa98371d_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aa983c90_What(_1aa98371d_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aa983de4_Reset(_1aa98371d_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aa984048_Short(_1aa98371d_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa98371d_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}


inline jule::Bool _1aa9872c1_Flag_eq(_1aa9872c1_Flag *_self_, _1aa9872c1_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1aa986e4c_Name(_1aa9872c1_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aa9875ac_What(_1aa9872c1_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aa987700_Reset(_1aa9872c1_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aa987843_Short(_1aa9872c1_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa9872c1_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}


inline jule::Bool _1aa98a934_Flag_eq(_1aa98a934_Flag *_self_, _1aa98a934_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1aa98a5b0_Name(_1aa98a934_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aa98ac20_What(_1aa98a934_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aa98ad63_Reset(_1aa98a934_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aa98aea6_Short(_1aa98a934_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa98a934_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}


inline jule::Bool _1aa98e0db_Flag_eq(_1aa98e0db_Flag *_self_, _1aa98e0db_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1aa98dc67_Name(_1aa98e0db_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aa98e3c7_What(_1aa98e0db_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aa98e51a_Reset(_1aa98e0db_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aa98e65d_Short(_1aa98e0db_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa98e0db_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}


inline jule::Bool _1aa99274e_Flag_eq(_1aa99274e_Flag *_self_, _1aa99274e_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1aa9923ca_Name(_1aa99274e_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aa992a3a_What(_1aa99274e_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aa992b7d_Reset(_1aa99274e_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aa992cc1_Short(_1aa99274e_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aa99274e_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a61031d3_FlagSet> static__1a61034be_New(void) {
	return jule::new_ptr<_1a61031d3_FlagSet>(_1a61031d3_FlagSet{._field_flags=jule::Slice<jule::Trait>::alloc(0LL, 20LL)});;
}



inline jule::Trait _1a6103975_FindFlag(_1a61031d3_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa99c6e3:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1a6101610_CommonFlagMptrData*)_7215_flag.safe_type())->_1a6100c91_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1aa99c6e3:;
			++it;
			goto _iter_begin_1aa99c6e3;
		}
		_iter_end_1aa99c6e3:;
	};
	return nullptr;;
}



inline jule::Trait _1a6103cb6_FindFlagShort(_1a61031d3_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa99d56d:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1a6101610_CommonFlagMptrData*)_8215_flag.safe_type())->_1a6101027_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1aa99d56d:;
			++it;
			goto _iter_begin_1aa99d56d;
		}
		_iter_end_1aa99d56d:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a610438d_Parse(_1a61031d3_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1a6105b97_argParser _1167_ap = _1a6105b97_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, };;
	({
		auto except = _1a6107193_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1aa99274e_Flag> _1aaa0ada0_addFlagCommon(_1a61031d3_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1a6103975_FindFlag(_self_, _13132_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1a6103cb6_FindFlagShort(_self_, _13143_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1aa99274e_Flag> _1407_flag = jule::new_ptr<_1aa99274e_Flag>(_1aa99274e_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_what=_13156_what, });;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1a6101610_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1aa98e0db_Flag> _1aa215753_addFlagCommon(_1a61031d3_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1a6103975_FindFlag(_self_, _13132_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1a6103cb6_FindFlagShort(_self_, _13143_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1aa98e0db_Flag> _1407_flag = jule::new_ptr<_1aa98e0db_Flag>(_1aa98e0db_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_what=_13156_what, });;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1a6101610_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1aaa08672_AddVar(_1a61031d3_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		jule::panic(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1aa99274e_Flag> _1717_flag = _1aaa0ada0_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1aa21262e_AddVar(_1a61031d3_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		jule::panic(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1aa98e0db_Flag> _1717_flag = _1aa215753_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1a61031d3_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1aa9a5432_parseInteger(_1a6105b97_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1aa9a8028:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1e7bc8b35_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1aa9a83e1:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1e7bc8b35_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1aa9a7a72:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1e7bc8b35_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1aa9a7ad8:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1aa9a7b4e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1aa9a7a0b:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1aa9a790c:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1aa9acda7_parseInteger(_1a6105b97_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1aa9b0959:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1e7bc8b35_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1aa9b0d22:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1e7bc8b35_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1aa9b04a3:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1e7bc8b35_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1aa9b0519:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1aa9b0580:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1aa9b043c:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1aa9b033d:;
	};
	return __jule_func_result;;
}



inline jule::Str _1a61064b1_getData(_1a6105b97_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1a6106736_processFlag(_1a6105b97_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a6101610_CommonFlag_mptr_data3)) {
			_case_begin_1aa9a263d:;
			{
				jule::Ptr<_1aa98e0db_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1aa98e0db_Flag>((jule::Trait::Type*)&_1a6101610_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1aa9a25d8:;
	};
	jule::Str _2203_data = _1a61064b1_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a6101610_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a6100c91_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a6101610_CommonFlag_mptr_data0)) {
			_case_begin_1aa9a44db:;
			{
				jule::Ptr<_1aa98371d_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1aa98371d_Flag>((jule::Trait::Type*)&_1a6101610_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1aa9a5432_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1aa9a5773, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a6101610_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a6100c91_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a6101610_CommonFlag_mptr_data1)) {
			_case_begin_1aa9a3dae:;
			{
				jule::Ptr<_1aa9872c1_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1aa9872c1_Flag>((jule::Trait::Type*)&_1a6101610_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1aa9acda7_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1aa9ad638, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a6101610_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a6100c91_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a6101610_CommonFlag_mptr_data2)) {
			_case_begin_1aa9a4552:;
			{
				jule::Ptr<_1aa98a934_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1aa98a934_Flag>((jule::Trait::Type*)&_1a6101610_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1b572ecb7_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a6101610_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a6100c91_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a6101610_CommonFlag_mptr_data4)) {
			_case_begin_1aa9a45c9:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1aa99274e_Flag>((jule::Trait::Type*)&_1a6101610_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1aa9a3cc1:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a61069de_singleDash(_1a6105b97_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		char *it = expr.operator char*();
		const char *end = it + expr.len();
		std::size_t len;
		jule::I32 _25710_r;
		_iter_begin_1aa9b71e1:;
		std::tie(_25710_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1a6103cb6_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25227_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune(_25710_r)), &__jule_any_type4)};
				};
				({
					auto except = _1a6106736_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1aa9b71e1:;
			it += len;
			goto _iter_begin_1aa9b71e1;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a6106c97_doubleDash(_1a6105b97_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Trait _2707_flag = _1a6103975_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4)};
	};
	return _1a6106736_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a6106e95_tryArg(_1a6105b97_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1a6106c97_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1a61069de_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a6107193_parse(_1a6105b97_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1a6106e95_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1aa9bcb75:;
	}
	_iter_end_1aa9bcb75:;;
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _1a6105b97_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2120c08d6_Cmd> static__2120c0d04_New(jule::Str _2616_path) {
	return jule::new_ptr<_2120c08d6_Cmd>(_2120c08d6_Cmd{._field_path=_2616_path, });;
}



inline jule::VoidExceptional _2120c1002_Spawn(_2120c08d6_Cmd* _self_) {
	return _2121253db_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _2120c1486_Wait(_2120c08d6_Cmd* _self_) {
	return _212125870_wait(_self_);
}



inline jule::VoidExceptional _2121253db_spawn(_2120c08d6_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:83:4"));;
	};
	jule::Str _853_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _867_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_867_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
	};
	if ((_2122b337b_Fcntl(static_cast<jule::I64>(_867_pipe[1LL]), F_SETFD, (fcntl(static_cast<jule::I64>(_867_pipe[1LL]), F_GETFD) | FD_CLOEXEC)) == -1LL)) {
		_2122e4a2d_Close(static_cast<jule::I64>(_867_pipe[0LL]));
		_2122e4a2d_Close(static_cast<jule::I64>(_867_pipe[1LL]));
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
	};
	(*(_self_))._field_attrs._field_pid=fork();
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1a72ec244:;
			{
				return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a72eb496:;
			{
				_2122e4a2d_Close(static_cast<jule::I64>(_867_pipe[0LL]));
				jule::Slice<jule::Str> _1018_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_1018_args[0LL]=_853_path;
				(_1018_args).append((*(_self_))._field_Args);;
				({
					auto except = _212125188_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
				_212124e57_execvp(&(_853_path), &(_1018_args));
				jule::Str _1064_code = _212120e97_Itoa(_212230c99_GetLastErrno());;
				{
					_2122e4dd5_Write(static_cast<jule::I64>(_867_pipe[1LL]), (&(_1064_code[0LL])), static_cast<jule::U64>(_1064_code.len()));
				};
				_2122e4a2d_Close(static_cast<jule::I64>(_867_pipe[1LL]));
				_212126b7e_Exit(1LL);
			}
		}
		else {
			_case_begin_1a72e699c:;
			{
				_2122e4a2d_Close(static_cast<jule::I64>(_867_pipe[1LL]));
				jule::Array<jule::U8,16> _11212_buf = jule::Array<jule::U8,16>(0);;
				jule::I64 _1134_n = _2122e4654_Read(static_cast<jule::I64>(_867_pipe[0LL]), (&(_11212_buf[0LL])), static_cast<jule::U64>(16LLU));;
				_2122e4a2d_Close(static_cast<jule::I64>(_867_pipe[0LL]));
				if ((_1134_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _1175_code;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _212117873_AtoiBp((&(_11212_buf[0LL])), _1134_n);
						_1175_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional{.error=jule::Any(_212126112_processErrorFromCode(_1175_code), &__jule_any_type0)};
				};
			}
		}
		_match_end_1a72e91db:;
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _212125870_wait(_2120c08d6_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:135:4"));;
	};
	jule::I64 _1377_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_1377_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_212126365_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>{.result=WEXITSTATUS(_1377_stat)};;
}





std::ostream &operator<<(std::ostream &_Stream, _2120c08d6_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5656160_dataCheckpoint _Src) {
	_Stream << "dataCheckpoint{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1a5634c54_IR__jule_tuple_s_1e7c94ecb_Log static__1a56351e9_Build(jule::Str _2918_path, jule::I64 _2929_flags) {
	__jule_tuple_x_1a5634c54_IR__jule_tuple_s_1e7c94ecb_Log __jule_func_result;
	jule::Ptr<_1a563227e_JuleImporter> _307_importer = static__1a563267a_New(_1a5636bce_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_1a3b3b180_Ast>> _327_files;
	jule::Slice<_1e7c94ecb_Log> _3218_logs;
	({
		__jule_tuple_sx_1a3b3b180_Ast__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a5633b65_ImportPackage(_307_importer.ptr(), _2918_path, true);
		_327_files = __jule_assign_result.__jule_result_arg0;
		_3218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3218_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3218_logs;
		return __jule_func_result;;
	};
	jule::Str _363_root = _2918_path;;
	if ((_327_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	_1a5636e87_pushRuntimeToAST(&(_327_files[0LL]));
	jule::Ptr<_1a3bdb609_Package> _467_pkg;
	({
		__jule_tuple_x_1a3bdb609_Package__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a3cdc320_AnalyzePackage(_327_files, jule::Trait(_307_importer, (jule::Trait::Type*)&_1a3bd57bd_Importer_mptr_data0), _2929_flags);
		_467_pkg = __jule_assign_result.__jule_result_arg0;
		_3218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3218_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3218_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1a5634c54_IR> _517_ir = jule::new_ptr<_1a5634c54_IR>(_1a5634c54_IR{._field_Root=_363_root, ._field_Main=_467_pkg, ._field_Used=_1a5632911_AllPackages(_307_importer), });;
	(*(_517_ir))._field_Passes=_1a56369c0_getAllUniquePasses(&((*_517_ir.alloc)._field_Main), (*_517_ir.alloc)._field_Used);
	(*_517_ir.alloc)._field_Runtime=(*((*(_467_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _517_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a56356d3_appendStructs(_1a5634c54_IR* _self_, jule::Ptr<_1a3bdb609_Package>* _6630_p, jule::Slice<jule::Ptr<_1a3b5e03d_Struct>>* _6654_buffer) {
	{
		auto expr = &((*((*(_6630_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1b678c:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _6715_f = *it;
			{
				{
					auto expr = &((*(_6715_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa1b71d8:;
					if (it != expr_end) {
						jule::Ptr<_1a3b5e03d_Struct> _6816_s = *it;
						{
							if ((!((*(_6816_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1a3b5e03d_Struct>> &__jule_push_dest = (*(_6654_buffer)); __jule_push_dest.push(_6816_s); };
							};
						}
						_iter_next_1aa1b71d8:;
						++it;
						goto _iter_begin_1aa1b71d8;
					}
					_iter_end_1aa1b71d8:;
				};
			}
			_iter_next_1aa1b678c:;
			++it;
			goto _iter_begin_1aa1b678c;
		}
		_iter_end_1aa1b678c:;
	};
}



inline jule::Slice<jule::Ptr<_1a3b5e03d_Struct>> _1a5635969_GetAllStructures(_1a5634c54_IR* _self_) {
	jule::Slice<jule::Ptr<_1a3b5e03d_Struct>> _7911_buffer = nullptr;;
	_1a56356d3_appendStructs(_self_, &((*(_self_))._field_Main), &(_7911_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1b8382:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _8115_u = *it;
			{
				if ((!((*(_8115_u))._field_Binded))) {
					_1a56356d3_appendStructs(_self_, &((*_8115_u.alloc)._field_Package), &(_7911_buffer));
				};
			}
			_iter_next_1aa1b8382:;
			++it;
			goto _iter_begin_1aa1b8382;
		}
		_iter_end_1aa1b8382:;
	};
	return _7911_buffer;;
}



inline void _1a5635ccc_appendGlobals(_1a5634c54_IR* _self_, jule::Ptr<_1a3bdb609_Package>* _8930_p, jule::Slice<jule::Ptr<_1a3c31c26_Var>>* _8954_buffer) {
	{
		auto expr = &((*((*(_8930_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1b99d2:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _9015_f = *it;
			{
				{
					auto expr = &((*(_9015_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa1ba42d:;
					if (it != expr_end) {
						jule::Ptr<_1a3c31c26_Var> _9116_v = *it;
						{
							if (((((*(_9116_v))._field_Token != nullptr) && (!((*_9116_v.alloc)._field_Binded))) && (!((*_9116_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1a3c31c26_Var>> &__jule_push_dest = (*(_8954_buffer)); __jule_push_dest.push(_9116_v); };
							};
						}
						_iter_next_1aa1ba42d:;
						++it;
						goto _iter_begin_1aa1ba42d;
					}
					_iter_end_1aa1ba42d:;
				};
			}
			_iter_next_1aa1b99d2:;
			++it;
			goto _iter_begin_1aa1b99d2;
		}
		_iter_end_1aa1b99d2:;
	};
}



inline jule::Slice<jule::Ptr<_1a3c31c26_Var>> _1a5636063_GetAllGlobals(_1a5634c54_IR* _self_) {
	jule::Slice<jule::Ptr<_1a3c31c26_Var>> _10211_buffer = nullptr;;
	_1a5635ccc_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10211_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1bbd36:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _10415_u = *it;
			{
				if ((!((*(_10415_u))._field_Binded))) {
					_1a5635ccc_appendGlobals(_self_, &((*_10415_u.alloc)._field_Package), &(_10211_buffer));
				};
			}
			_iter_next_1aa1bbd36:;
			++it;
			goto _iter_begin_1aa1bbd36;
		}
		_iter_end_1aa1bbd36:;
	};
	return _10211_buffer;;
}



inline void _1a5636261_Order(_1a5634c54_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_1a5636063_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_1a5635969_GetAllStructures(_self_);
	_1aa1bd91a_order((*(_self_))._field_Ordered._field_Globals);
	_1aa1c406e_order((*(_self_))._field_Ordered._field_Structs);
}





std::ostream &operator<<(std::ostream &_Stream, _1a5634c54_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Runtime:" << _Src._field_Runtime << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a52548c9_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::I32* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1a5255d81:;
	}
	_iter_end_1a5255d81:;;
	return true;;
}

inline jule::Bool _1a87857db_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1a8786a51:;
	}
	_iter_end_1a8786a51:;;
	return true;;
}



inline void _21227301c_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _2122a3811_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	jule::I64 _736_n = 0LL;;
	{
		for (; (_6924_s[_736_n] != 0LLU); (_736_n)++) {};
	};
	if ((_736_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _806_buf = jule::Slice<jule::U8>::alloc(_736_n, _736_n, 0);;
	_736_n=0LL;
	{
		for (; (_6924_s[_736_n] != 0LLU); (_736_n)++) {
			{
				_806_buf[_736_n]=_6924_s[_736_n];
			}
		_iter_next_1a51d9d7b:;
		}
		_iter_end_1a51d9d7b:;;
	};
	return static_cast<jule::Str>(_806_buf);;
}



inline jule::Slice<jule::U8> _2122a3a97_StrToBytes(jule::Str _9315_s) {
	{
		auto expr = &(_9315_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a51da5c9:;
		if (it != expr_end) {
			jule::I64 _946_i = it - expr->begin();
			jule::U8 *_949_b = it;
			{
				if (((*(_949_b)) == 0LLU)) {
					jule::Slice<jule::U8> _968_bytes = jule::Slice<jule::U8>::alloc((_946_i + 1LL), (_946_i + 1LL), 0);;
					jule::copy(_968_bytes, _9315_s.slice(0LL, _968_bytes.len()));
					return _968_bytes;;
				};
			}
			_iter_next_1a51da5c9:;
			++it;
			_946_i++;
			goto _iter_begin_1a51da5c9;
		}
		_iter_end_1a51da5c9:;
	};
	jule::Slice<jule::U8> _1016_bytes = jule::Slice<jule::U8>::alloc((_9315_s.len() + 1LL), (_9315_s.len() + 1LL), 0);;
	jule::copy(_1016_bytes, _9315_s);
	return _1016_bytes;;
}



inline jule::I64 _212230c99_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _2122b337b_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg) {
	return fcntl(_5410_handle, _5423_cmd, _5433_arg);;
}



inline jule::I64 _2122b3700_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return stat(((char*)(_5916_path)), _5933_stat);;
}



inline jule::I64 _2122b3b2e_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode) {
	return open(((char*)(_6416_path)), _6429_flag, _6440_mode);;
}



inline jule::U8* _2122b3ea3_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _2122b449d_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _2122b4679_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I64 _2122b4921_Closedir(DIR* _8124_dir) {
	return closedir(_8124_dir);;
}



inline jule::I64 _2122b5328_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode) {
	return mkdir(((char*)(_9017_path)), _9030_mode);;
}



inline jule::I64 _2122b55e2_Rmdir(jule::U8* _9517_path) {
	return rmdir(((char*)(_9517_path)));;
}



inline jule::I64 _2122b58ab_Unlink(jule::U8* _9818_path) {
	return unlink(((char*)(_9818_path)));;
}



inline jule::I64 _2122e4654_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I64 _2122e4a2d_Close(jule::I64 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I64 _2122e4dd5_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _2122e5116_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline void _2123019a2_handleRW(jule::Slice<jule::U8>* _1414_b) {
	if (((*(_1414_b)).len() > 1073741824LL)) {
		{
			((*((&((*(_1414_b))))))).mut_slice(0LL, 1073741824LLU);;
		};
	};
}



inline void _212302871_HandleRW(jule::Slice<jule::U8>* _814_b) {
	_2123019a2_handleRW(_814_b);
}



inline jule::Str _2123a5eda_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1a5243478_Slice(jule::U8* _2316_e, jule::I64 _2326_n) {
	jule::Slice<jule::U8> _246_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_246_buf.data = jule::Ptr<jule::U8>::make(_2316_e, nullptr);
		_246_buf._len = _2326_n;
		_246_buf._cap = _2326_n;
		_246_buf._slice = _2316_e;
	};
	return _246_buf;;
}



inline jule::Slice<jule::U8> _2123b1c82_StrBytes(jule::Str _4113_s) {
	if ((_4113_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1a5243478_Slice((&(_4113_s[0LL])), _4113_s.len());;
}



inline jule::Str _2123b2018_BytesStr(jule::Slice<jule::U8> _5013_b) {
	if ((_5013_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _2123a5eda_Str((&(_5013_b[0LL])), _5013_b.len());;
}



inline jule::Str _2123b22d2_StrFromBytes(jule::Slice<jule::U8> _5817_b) {
	return (*(((jule::Str*)((&(_5817_b))))));;
}



inline jule::I64 _2123d7a00_getLastOsError(void) {
	jule::I64 _302_err = _212230c99_GetLastErrno();;
	{
		auto &_match_expr{ _302_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a524b173:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a524aa46:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1a524aaac:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1a524ab34:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a524abab:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a524ad65:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a524adcb:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1a524a848:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1a524a958:;
	};
}



inline jule::Slice<jule::Str> _2123dbc13_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _2123dc175_WorkingDir(void) {
	return _2123dd0dd_getwd();
}



inline jule::Exceptional<jule::Str> _2123dd0dd_getwd(void) {
	jule::U8* _116_buf = _2122b3ea3_Getcwd(nullptr, 0LLU);;
	if ((_116_buf == nullptr)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_2123d7a00_getLastOsError(), &__jule_any_type0)};
	};
	jule::Str _152_pwd = _2122a3811_BytePtrToStr(_116_buf);;
	{
		_21227301c_Free(_116_buf);
	};
	return jule::Exceptional<jule::Str>{.result=_152_pwd};;
}



inline jule::Bool _1e7a16a50_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1e7a7962e__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1e7a82a77_isExcludingLatin(_1e7a20a26_Letter, _7613_r);;
}



inline jule::Bool _1e7a81dea_is16(jule::Slice<_1e7a8015c_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7ecb4c7:;
			if (it != expr_end) {
				jule::I64 _1937_i = it - expr->begin();
				{
					_1e7a8015c_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_1944_range))._field_Lo),(*(_1944_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1a7ecb4c7:;
				++it;
				_1937_i++;
				goto _iter_begin_1a7ecb4c7;
			}
			_iter_end_1a7ecb4c7:;
		};
		return false;;
	};
	jule::I64 _2086_lo = 0LL;;
	jule::I64 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I64 _2113_m = (_2086_lo + ((_2096_hi - _2086_lo) >> 1LLU));;
			_1e7a8015c_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2123_range))._field_Lo),(*(_2123_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1a7eca2d9:;
	}
	_iter_end_1a7eca2d9:;;
	return false;;
}



inline jule::Bool _1e7a8226e_is32(jule::Slice<_1e7a8068a_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7ed2ba4:;
			if (it != expr_end) {
				jule::I64 _2307_i = it - expr->begin();
				{
					_1e7a8068a_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2314_range))._field_Lo),(*(_2314_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1a7ed2ba4:;
				++it;
				_2307_i++;
				goto _iter_begin_1a7ed2ba4;
			}
			_iter_end_1a7ed2ba4:;
		};
		return false;;
	};
	jule::I64 _2456_lo = 0LL;;
	jule::I64 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I64 _2483_m = (_2456_lo + ((_2466_hi - _2456_lo) >> 1LLU));;
			_1e7a8068a_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2493_range))._field_Lo),(*(_2493_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1a7ed25cc:;
	}
	_iter_end_1a7ed25cc:;;
	return false;;
}



inline jule::Bool _1e7a82a77_isExcludingLatin(jule::Ptr<_1e7a80b0d_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1e7a8015c_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _1e7a81dea_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_1e7a8068a_Range32> *_2873_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _1e7a8226e_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _1e7a82cb9_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1e7a7962e__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1e7a82a77_isExcludingLatin(_1e7a26ce6_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _1e7b84ae1_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _1e7b83859_first[static_cast<jule::I64>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = static_cast<jule::I32>(((_1872_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1952_sz = static_cast<jule::I64>((_1872_x & 7LLU));;
	_1e7b83e0e_acceptRange _1962_accept = _1e7b842a5_acceptRanges[static_cast<jule::I64>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1e7b84e32_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _1e7b83859_first[static_cast<jule::I64>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = static_cast<jule::I32>(((_2342_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2422_sz = static_cast<jule::I64>((_2342_x & 7LLU));;
	_1e7b83e0e_acceptRange _2432_accept = _1e7b842a5_acceptRanges[static_cast<jule::I64>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1e7b85482_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3212_end = _31722_s.len();;
	jule::I64 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_1e7b86b9d_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1a802a009;
			};
		}
	_iter_next_1a802a009:;
	}
	_iter_end_1a802a009:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e7b84e32_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1e7b85ecc_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(_40530_r)}));;
	};
	return _1e7b86351_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1e7b86351_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1a803a8aa:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(192LL | static_cast<jule::U8>((_41242_r >> 6LL))),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1a803948b:;
			{
				_41242_r=128LL;
				goto _case_begin_1a8039502;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1a8039502:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(224LL | static_cast<jule::U8>((_41242_r >> 12LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else {
			_case_begin_1a8038c3d:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(240LL | static_cast<jule::U8>((_41242_r >> 18LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		_match_end_1a8038bc7:;
	};
}



inline jule::I64 _1e7b868d4_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1a803de96;
			};
			jule::U8 _4823_x = _1e7b83859_first[static_cast<jule::I64>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1a803de96;
			};
			jule::I64 _4877_size = static_cast<jule::I64>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1a803de96;
			};
			_1e7b83e0e_acceptRange _4923_accept = _1e7b842a5_acceptRanges[static_cast<jule::I64>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1a803de96:;
	}
	_iter_end_1a803de96:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e7b86b9d_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _1e7bc79be_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I64)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1a80681e0:;
	}
	_iter_end_1a80681e0:;;
	return -1LL;;
}



inline jule::I64 _1e7bc80eb_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a806a324:;
		if (it != expr_end) {
			jule::I64 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_1a806a324:;
			++it;
			_706_i++;
			goto _iter_begin_1a806a324;
		}
		_iter_end_1a806a324:;
	};
	return -1LL;;
}



inline jule::I64 _1e7bc8470_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _1e7bc79be_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _1e7bc876c_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > jule::div(jule::MAX_I64,_1123_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_1e7be2632_StrBuilder _186_ss = static__1e7be28eb_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_1e7beb262_WriteStr(&_186_ss, _1111_s);
		}
	_iter_next_1a8086043:;
	}
	_iter_end_1a8086043:;;
	return _1e7beba59_Str(&_186_ss);;
}



inline jule::Bool _1e7bc8b35_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _1e7bc8ea9_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I64 _1e7bc9460_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_1e7bc8b35_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1a8089b7e:;
	}
	_iter_end_1a8089b7e:;;
	return -1LL;;
}



inline jule::I64 _1e7bc97a1_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _1e7bc9460_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I64 _1e7bc9bd0_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i) {
	jule::I64 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1a808c8c9:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I64 _697_k = _636_j;;
			jule::I64 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I64 ___jule_assign_arg = (_697_k + 1LL);
				jule::I64 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1a808c533;
					};
				}
			_iter_next_1a808d512:;
			}
			_iter_end_1a808d512:;;
			return _636_j;;
		}
	_iter_next_1a808c533:;
	}
	_iter_end_1a808c533:;;
	return -1LL;;
}



inline jule::I64 _1e7bcedb1_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _1e7bc9bd0_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I64 _1e7bd1698_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _1e7bc8470_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I64 _1e7bd1a1c_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I64 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I64 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e7b84e32_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1a8095dbb:;
	}
	_iter_end_1a8095dbb:;;
	return -1LL;;
}



inline jule::I64 _1e7bd2446_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I64 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I64 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e7b84e32_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1e7bd1a1c_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1a80991ee:;
	}
	_iter_end_1a80991ee:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1e7bd2ad9_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n) {
	jule::I64 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = jule::Slice<jule::Str>::alloc(0LL, _2166_cap);;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I64 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I64 _2293_j = _1e7bc9460_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1a809ddd5;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1a809ddd5:;
	}
	_iter_end_1a809ddd5:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Bool _1e7bd2e5d_Contains(jule::Str _24313_s, jule::Str _24321_sub) {
	return (_1e7bc9460_FindAt(_24313_s, _24321_sub, 0LL) != -1LL);;
}



inline jule::Bool _1e7bd39ca_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes) {
	return (_1e7bd2446_FindAny(_25816_s, _25824_runes) != -1LL);;
}



inline jule::I64 _1e7bd3d4e_Count(jule::Str _26410_s, jule::Str _26418_sub) {
	if ((_26418_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2686_n = 0LL;;
	jule::I64 _2696_i = 0LL;;
	for (;;) {
		{
			jule::I64 _2713_j = _1e7bc9460_FindAt(_26410_s, _26418_sub, _2696_i);;
			if ((_2713_j == -1LL)) {
				goto _iter_end_1a80a8dac;
			};
			(_2686_n)++;
			_2696_i=(_2713_j + _26418_sub.len());
		}
	_iter_next_1a80a8dac:;
	}
	_iter_end_1a80a8dac:;;
	return _2686_n;;
}



inline jule::Str _1e7bd4338_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n) {
	if (((_28444_n == 0LL) || (_28420_sub == _28430_new))) {
		return _28412_s;;
	};
	jule::I64 _2892_m = _1e7bd3d4e_Count(_28412_s, _28420_sub);;
	if ((_2892_m == 0LL)) {
		return _28412_s;;
	};
	if (((_28444_n < 0LL) || (_2892_m < _28444_n))) {
		_28444_n=_2892_m;
	};
	_1e7be2632_StrBuilder _2976_ss = static__1e7be28eb_New(((_28412_s.len() + (_28444_n * (_28430_new.len() - _28420_sub.len()))) + 1LL));;
	jule::I64 _2986_i = 0LL;;
	for (; (_28444_n > 0LL); (_28444_n)--) {
		{
			jule::I64 _3003_j = _1e7bc9460_FindAt(_28412_s, _28420_sub, _2986_i);;
			if ((_3003_j == -1LL)) {
				goto _iter_end_1a80ac872;
			};
			_1e7beb262_WriteStr(&_2976_ss, _28412_s.slice(_2986_i, _3003_j));
			_1e7beb262_WriteStr(&_2976_ss, _28430_new);
			_2986_i=(_3003_j + _28420_sub.len());
		}
	_iter_next_1a80ac872:;
	}
	_iter_end_1a80ac872:;;
	_1e7beb262_WriteStr(&_2976_ss, _28412_s.slice(_2986_i));
	return _1e7beba59_Str(&_2976_ss);;
}



inline jule::Str _1e7bd50b4_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset) {
	jule::I64 _3426_i = 0LL;;
	while ((_3426_i < _34117_s.len())) {
		{
			jule::I32 _3443_r;
			jule::I64 _3446_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e7b84e32_DecodeRuneStr(_34117_s.slice(_3426_i));
				_3443_r = __jule_assign_result.__jule_result_arg0;
				_3446_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1e7bd1a1c_FindRune(_34125_cutset, _3443_r) == -1LL)) {
				return _34117_s.slice(_3426_i);;
			};
			_3426_i+=_3446_n;
		}
	_iter_next_1a80b224a:;
	}
	_iter_end_1a80b224a:;;
	return jule::Str();;
}



inline jule::Str _1e7bd5438_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset) {
	jule::I64 _3566_i = _35514_s.len();;
	while ((_3566_i > 0LL)) {
		{
			jule::I32 _3583_r;
			jule::I64 _3586_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e7b85482_DecodeLastRuneStr(_35514_s.slice(0LL, _3566_i));
				_3583_r = __jule_assign_result.__jule_result_arg0;
				_3586_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1e7bd1a1c_FindRune(_35522_cutset, _3583_r) == -1LL)) {
				return _35514_s.slice(0LL, _3566_i);;
			};
			_3566_i-=_3586_n;
		}
	_iter_next_1a80b4417:;
	}
	_iter_end_1a80b4417:;;
	return jule::Str();;
}



inline jule::Str _1e7bd57ac_Trim(jule::Str _3699_s, jule::Str _36917_cutset) {
	return _1e7bd50b4_TrimLeft(_1e7bd5438_TrimRight(_3699_s, _36917_cutset), _36917_cutset);;
}



inline jule::Str _1e7bd5b31_Join(jule::Slice<jule::Str> _3759_parts, jule::Str _37523_sep) {
	{
		auto _match_expr{ _3759_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a80b5cdc:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a80b64c4:;
			{
				return _3759_parts[0LL];;
			}
		}
		_match_end_1a80b62a4:;
	};
	jule::I64 _3826_n = 0LL;;
	{
		auto expr = &(_3759_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a80b6859:;
		if (it != expr_end) {
			jule::Str *_3839_part = it;
			{
				_3826_n+=(*(_3839_part)).len();
				(_3826_n)++;
			}
			_iter_next_1a80b6859:;
			++it;
			goto _iter_begin_1a80b6859;
		}
		_iter_end_1a80b6859:;
	};
	_1e7be2632_StrBuilder _3876_s = static__1e7be28eb_New((_3826_n + 1LL));;
	_1e7beb262_WriteStr(&_3876_s, _3759_parts[0LL]);
	{
		auto expr = _3759_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a80b80b9:;
		if (it != expr_end) {
			jule::Str *_3899_part = it;
			{
				_1e7beb262_WriteStr(&_3876_s, _37523_sep);
				_1e7beb262_WriteStr(&_3876_s, (*(_3899_part)));
			}
			_iter_next_1a80b80b9:;
			++it;
			goto _iter_begin_1a80b80b9;
		}
		_iter_end_1a80b80b9:;
	};
	return _1e7beba59_Str(&_3876_s);;
}



inline jule::Str _1e7bee4da_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I64 _1112_volLen = _1e7c02356_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _1e7c01c7e_IsPathSep(_1102_originalPath[0LL])) && _1e7c01c7e_IsPathSep(_1102_originalPath[1LL]))) {
			return _1e7beeab2_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _1e7c01c7e_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1272_n = _10914_path.len();;
	_1e7bed64e_lazyBuff _1286_out = _1e7bed64e_lazyBuff{._field_path=_10914_path, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I64 _1336_r;
	jule::I64 _13313_dotdot;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_1e7bedd8b_append(&_1286_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1336_r = ___jule_assign_arg;
			_13313_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_1e7c01c7e_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_1a80cc3db:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _1e7c01c7e_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_1a80c8eba:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _1e7c01c7e_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_1a80c9031:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_1a62da178:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_1e7c01c7e_IsPathSep(_1e7bedad3_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_1a62da909:;
									}
									_iter_end_1a62da909:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_1a62da222:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_1e7bedd8b_append(&_1286_out, 47LLU);
									};
									_1e7bedd8b_append(&_1286_out, '.');
									_1e7bedd8b_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_1a62d9d15:;
						};
					}
				}
				else {
					_case_begin_1a80c8e54:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_1e7bedd8b_append(&_1286_out, 47LLU);
						};
						;
						for (; ((_1336_r < _1272_n) && (!(_1e7c01c7e_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_1e7bedd8b_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_1a80ca2b8:;
						}
						_iter_end_1a80ca2b8:;;
					}
				}
				_match_end_1a80c8daa:;
			};
		}
	_iter_next_1a80c7b67:;
	}
	_iter_end_1a80c7b67:;;
	if ((_1286_out._field_w == 0LL)) {
		_1e7bedd8b_append(&_1286_out, '.');
	};
	return _1e7beeab2_FromSlash(_1e7bee122_string(&_1286_out));;
}



inline jule::Str _1e7beeab2_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _1e7beee03_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1e7c0292d_join(_2269_elem);;
}



inline jule::Str _1e7c00189_Ext(jule::Str _2318_path) {
	jule::I64 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_1e7c01c7e_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_1a62deb72:;
	}
	_iter_end_1a62deb72:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1e7c00453_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_1e7c02697_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _1e7c0071c_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _1e7c01c7e_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1a62e0ec5:;
	}
	_iter_end_1a62e0ec5:;;
	(_25213_path).mut_slice(_1e7c00d38_VolumeName(_25213_path).len());;
	jule::I64 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_1e7c01c7e_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_1a62e13c1:;
	}
	_iter_end_1a62e13c1:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25213_path;;
}



inline jule::Str _1e7c00ae6_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _1e7c00d38_VolumeName(_2838_path);;
	jule::I64 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_1e7c01c7e_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_1a62e4b44:;
	}
	_iter_end_1a62e4b44:;;
	jule::Str _2892_dir = _1e7bee4da_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _1e7c00d38_VolumeName(jule::Str _30115_path) {
	return _1e7beeab2_FromSlash(_30115_path.slice(0LL, _1e7c02356_volumeNameLen(_30115_path)));;
}



inline jule::Bool _1e7c01c7e_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1e7c0208c_IsAbs(jule::Str _5310_path) {
	return _1e7bc8b35_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I64 _1e7c02356_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1e7c02697_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1e7c0208c_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1e7bee4da_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _672_wd = ({
		auto except = _2123dc175_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _1e7c0292d_join(jule::Slice<jule::Str>::make({_672_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1e7c0292d_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a62ec1ce:;
		if (it != expr_end) {
			jule::I64 _746_i = it - expr->begin();
			jule::Str *_749_e = it;
			{
				if (!((*(_749_e))).empty()) {
					return _1e7bee4da_Clean(_1e7bd5b31_Join(_739_elem.slice(_746_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1a62ec1ce:;
			++it;
			_746_i++;
			goto _iter_begin_1a62ec1ce;
		}
		_iter_end_1a62ec1ce:;
	};
	return jule::Str();;
}



inline jule::I64 _2122ea0d8_getLastFsError(void) {
	jule::I64 _722_err = _212230c99_GetLastErrno();;
	{
		auto &_match_expr{ _722_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a80ce674:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a80ce575:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1a80cdeae:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1a80ce025:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a80ce08b:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a80ce113:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1a80ce18a:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a80ce212:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a80ce81c:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a80ce894:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a80ce91b:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a80ce993:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a80cea1a:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a80cea92:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a80ceb19:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1a80ceb91:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a80cec18:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a80cec90:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a80ced17:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a80ced8e:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1a80cee16:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a80cee8d:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a80d0015:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a80d008c:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a80d0114:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1a80d018b:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1a80d0213:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1a80d028a:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1a80cdd49:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1a80cde59:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _212117873_AtoiBp(jule::U8* _722_b, jule::I64 _736_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _86_neg = ((*(_722_b)) == '-');;
	if (_86_neg) {
		if ((_736_n == 1LL)) {
			return __jule_func_result;;
		};
		(_736_n)--;
		(_722_b)++;
	};
	for (; (_736_n > 0LL); (_736_n)--) {
		{
			if ((('0' <= (*(_722_b))) && ((*(_722_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>(((*(_722_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_722_b)++;
		}
	_iter_next_1a8108eea:;
	}
	_iter_end_1a8108eea:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_86_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	return __jule_func_result;;
}



inline jule::Str _212120e97_Itoa(jule::I64 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _2121212a5_Utoa(static_cast<jule::U64>((-(_89_x)))));;
	};
	return _2121212a5_Utoa(static_cast<jule::U64>(_89_x));;
}



inline jule::Str _2121212a5_Utoa(jule::U64 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _206_buf = jule::Slice<jule::U8>::alloc(20LL, 20LL, 0);;
	jule::I64 _216_i = 0LL;;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U64 _233_q = (_1613_x / 10LLU);;
			_206_buf[_216_i]=static_cast<jule::U8>((('0' + _1613_x) - (_233_q * 10LLU)));
			(_216_i)++;
			_1613_x=_233_q;
		}
	_iter_next_1a8110b28:;
	}
	_iter_end_1a8110b28:;;
	_206_buf[_216_i]=static_cast<jule::U8>(('0' + _1613_x));
	(_206_buf).mut_slice(0LL, (_216_i + 1LL));;
	_2121214d6_rev(&(_206_buf));
	return _2123b22d2_StrFromBytes(_206_buf);;
}



inline void _2121214d6_rev(jule::Slice<jule::U8>* _3513_b) {
	jule::I64 _366_i = 0LL;;
	for (; (_366_i < ((*(_3513_b)).len() >> 1LL)); (_366_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = (*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)];
				jule::U8 _1___jule_assign_arg = (*(_3513_b))[_366_i];
				(*(_3513_b))[_366_i] = ___jule_assign_arg;
				(*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1a8114632:;
	}
	_iter_end_1a8114632:;;
}



inline jule::Slice<char*> _212124ad3_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s, jule::Slice<jule::Slice<jule::U8>>* _3540_bargs) {
	jule::Slice<char*> _366_cs = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL), nullptr);;
	(*(_3540_bargs))=jule::Slice<jule::Slice<jule::U8>>::alloc((*(_3525_s)).len(), (*(_3525_s)).len());
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73061d7:;
		if (it != expr_end) {
			jule::I64 _386_i = it - expr->begin();
			jule::Str *_389_arg = it;
			{
				jule::Slice<jule::U8> _397_barg = _2122a3a97_StrToBytes((*(_389_arg)));;
				(*(_3540_bargs))[_386_i]=_397_barg;
				_366_cs[_386_i]=((char*)((&(_397_barg[0LL]))));
			}
			_iter_next_1a73061d7:;
			++it;
			_386_i++;
			goto _iter_begin_1a73061d7;
		}
		_iter_end_1a73061d7:;
	};
	_366_cs[(_366_cs.len() - 1LL)]=nullptr;
	return _366_cs;;
}



inline jule::I64 _212124e57_execvp(jule::Str* _4712_file, jule::Slice<jule::Str>* _4724_argv) {
	jule::Slice<jule::Slice<jule::U8>> _486_bargs = static_cast<jule::Slice<jule::Slice<jule::U8>>>(nullptr);;
	jule::Slice<char*> _492_cargv = _212124ad3_strSliceToCstrSlice(_4724_argv, &(_486_bargs));;
	jule::Slice<jule::U8> _502_s = _2122a3a97_StrToBytes((*(_4712_file)));;
	{
		return execvp(((char*)((&(_502_s[0LL])))), (char*const*)(&(_492_cargv[0LL])));;
	};
}



inline jule::VoidExceptional _212125188_setenv(jule::Slice<jule::Str>* _5612_envv) {
	;
	{
		auto expr = _5612_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a69d00a9:;
		if (it != expr_end) {
			jule::Str *_589_env = it;
			{
				jule::I64 _593_i = _1e7bc80eb_FindByteStr((*(_589_env)), '=');;
				if ((_593_i == -1LL)) {
					return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
				};
				{
					jule::Slice<jule::U8> _644_key = _2122a3a97_StrToBytes((*(_589_env)).slice(0LL, _593_i));;
					if ((((*(_589_env)).len() - _593_i) == 1LL)) {
						jule::Str _665_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_644_key[0LL])))), ((char*)((&(_665_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
						};
					} else {
						jule::Slice<jule::U8> _715_val = _2122a3a97_StrToBytes((*(_589_env)).slice((_593_i + 1LL)));;
						if ((setenv(((char*)((&(_644_key[0LL])))), ((char*)((&(_715_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
						};
					};
				};
			}
			_iter_next_1a69d00a9:;
			++it;
			goto _iter_begin_1a69d00a9;
		}
		_iter_end_1a69d00a9:;
	};
	return jule::VoidExceptional{};
}



inline jule::I64 _212126112_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1a69d0d24:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a69d0d8a:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1a69d5862:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1a69d13b8:;
	};
}



inline jule::I64 _212126365_getLastProcessError(void) {
	return _212126112_processErrorFromCode(_212230c99_GetLastErrno());;
}



inline void _212126b7e_Exit(jule::I64 _129_code) {
	_2122e5116_Exit(_129_code);
}



inline jule::Str _212126d8d_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1e7c8794c_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1e7c87b8e_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1e7c03b1b_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a837e79d:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1a837e79d:;
			++it;
			goto _iter_begin_1a837e79d;
		}
		_iter_end_1a837e79d:;
	};
	return false;;
}



inline jule::Bool _1e7c87e58_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1e7c0517d_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a837ed42:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1a837ed42:;
			++it;
			goto _iter_begin_1a837ed42;
		}
		_iter_end_1a837ed42:;
	};
	{
		auto expr = &(_1e7c8785e_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a838097a:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1a838097a:;
			++it;
			goto _iter_begin_1a838097a;
		}
		_iter_end_1a838097a:;
	};
	return false;;
}



inline jule::Str _1e7c9543d_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args) {
	return _1e7c95dcd_applyFmt(_3239_fmt, _32322_args);;
}



inline jule::Str _1e7c9574b_argToStr(jule::Any _32713_arg) {
	{
		auto &_match_expr{ _32713_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a8381eba:;
			{
				return _32713_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1a838263b:;
			{
				return jule::Str::from_byte(_32713_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a83826b3:;
			{
				return jule::Str::from_rune(_32713_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1a83821eb:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1a8382196:;
	};
}



inline jule::I64 _1e7c95a15_findNextFmt(jule::Str _34016_fmt) {
	{
		auto expr = &(_34016_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7306d64:;
		if (it != expr_end) {
			jule::I64 _3416_i = it - expr->begin();
			jule::U8 *_3419_b = it;
			{
				if (((*(_3419_b)) == '@')) {
					return _3416_i;;
				};
			}
			_iter_next_1a7306d64:;
			++it;
			_3416_i++;
			goto _iter_begin_1a7306d64;
		}
		_iter_end_1a7306d64:;
	};
	return -1LL;;
}



inline jule::Str _1e7c95dcd_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args) {
	_1e7be2632_StrBuilder _3506_s = static__1e7be28eb_New(32LL);;
	{
		auto expr = &(_34927_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73087d3:;
		if (it != expr_end) {
			jule::Any *_3519_arg = it;
			{
				jule::I64 _3523_i = _1e7c95a15_findNextFmt(_34917_fmt);;
				if ((_3523_i == -1LL)) {
					goto _iter_end_1a73087d3;
				};
				_1e7beb262_WriteStr(&_3506_s, _34917_fmt.slice(0LL, _3523_i));
				_1e7beb262_WriteStr(&_3506_s, _1e7c9574b_argToStr((*(_3519_arg))));
				(_34917_fmt).mut_slice((_3523_i + 1LL));;
			}
			_iter_next_1a73087d3:;
			++it;
			goto _iter_begin_1a73087d3;
		}
		_iter_end_1a73087d3:;
	};
	_1e7beb262_WriteStr(&_3506_s, _34917_fmt);
	return _1e7beba59_Str(&_3506_s);;
}



inline jule::Bool _1e7c96c36_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _1e7c98155_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1e7c98463_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1e7c9872c_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1e7c98a6d_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1e7c98d04_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1e7c990bd_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1e7c99387_IsUnix(jule::Str _5511_os) {
	return (_1e7c98463_IsDarwin(_5511_os) || _1e7c9872c_IsLinux(_5511_os));;
}



inline jule::Bool _1e7c99761_Is32Bit(jule::Str _5812_arch) {
	return _1e7c98a6d_IsI386(_5812_arch);;
}



inline jule::Bool _1e7c999a3_Is64Bit(jule::Str _6112_arch) {
	return (_1e7c98d04_IsAmd64(_6112_arch) || _1e7c990bd_IsArm64(_6112_arch));;
}



inline void _212128235_init(void) {
	jule::Str _256_path = _212126d8d_Executable();;
	if ((_256_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_212127784_PathWd=({
			auto except = _2123dc175_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_2121274cb_PathExec=_1e7c00ae6_Dir(_256_path);
		_2121271ce_PathStdlib=_1e7beee03_Join(jule::Slice<jule::Str>::make({_2121274cb_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_212127a81_PathApi=_1e7beee03_Join(jule::Slice<jule::Str>::make({_2121274cb_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I64 _1b556b8b2_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _1b5574249_Len64(_6119_x));;
}



inline jule::I64 _1b556c808_TrailingZeros(jule::U64 _8318_x) {
	;
	return _1b556d4a7_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I64 _1b556d1dd_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(_1b556c000__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I64 _1b556d4a7_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(_1b556c594__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I64 _1b5573e80_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I64 _1b5574249_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1b5574ed6_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=((_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1b55767e0_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5012_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5022_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5032_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5042_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5052_w0 = (_5012_x0 * _5032_y0);;
	jule::U64 _5062_t = ((_5022_x1 * _5032_y0) + (_5052_w0 >> 32LLU));;
	jule::U64 _5076_w1 = (_5062_t & 4294967295LLU);;
	jule::U64 _5082_w2 = (_5062_t >> 32LLU);;
	_5076_w1+=(_5012_x0 * _5042_y1);
	__jule_func_result.__jule_result_arg0=(((_5022_x1 * _5042_y1) + _5082_w2) + (_5076_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::U32 _1e7e83cbe_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1e7e840cc_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1e7e84396_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1e7e846d7_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1e7e86c4a_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1a857bd74:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1b557e4da_IsInf(_4714_f, 0LL) || _1b557dd58_IsNaN(_4714_f)) {
			_case_begin_1a857be1d:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1a857bc97:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b557e7a4_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1e7e84396_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1e7e846d7_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1b557da4a_NaN(void) {
	return _1e7e846d7_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1b557dd58_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _1b557e122_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1e7e846d7_F64FromBits(9218868437227405312LLU);;
	};
	return _1e7e846d7_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1b557e4da_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1b557e7a4_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1b5581c7e_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1b5581289_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1b557dd58_IsNaN(_1118_x) || _1b557e4da_IsInf(_1118_x, 1LL)) {
			_case_begin_1a85b9972:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1a85b9a1b:;
			{
				return _1b557da4a_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1a85b9a82:;
			{
				return _1b557e122_Inf(-1LL);;
			}
		}
		_match_end_1a85b98a6:;
	};
	jule::F64 _1336_f1;
	jule::I64 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1e7e86c4a_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = jule::div(_1382_f,(2LL + _1382_f));;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1b5581c7e_Abs(jule::F64 _438_x) {
	return _1e7e846d7_F64FromBits((_1e7e84396_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1b5588857_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1b5581c7e_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1a862bb9e:;
		}
		_iter_end_1a862bb9e:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1b5589160_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I64 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1e7e86c4a_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1b5581289_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1b57230eb_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _2123b22d2_StrFromBytes(_1b57236d4_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1b5726a8e_max(((_7932_prec + 4LL) + 1LL), 25LL), 0), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1b57236d4_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1b57220b7_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1a822ce32:;
			{
				_886_bits=static_cast<jule::U64>(_1e7e83cbe_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1b57220b7_floatInfo>)((&(_1b57222d7_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a822cb68:;
			{
				_886_bits=_1e7e84396_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1b57220b7_floatInfo>)((&(_1b57225d4_f64info))));
			}
		}
		else {
			_case_begin_1a822aade:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1a822c739:;
	};
	jule::Bool _1012_neg = ((_886_bits >> ((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits)) != 0LLU);;
	jule::I64 _1026_exp = (static_cast<jule::I64>((_886_bits >> (*_8910_flt.alloc)._field_mantbits)) & static_cast<jule::I64>(((1LL << (*_8910_flt.alloc)._field_expbits) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & ((static_cast<jule::U64>(1LLU) << (*_8910_flt.alloc)._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I64>(((1LL << (*_8910_flt.alloc)._field_expbits) - 1LL))) {
			_case_begin_1a8231d37:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1a8233740:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1a82335b9:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1a8232e48:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1a8232d49:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a8231e25:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1a8230e9b:;
			{
				_1036_mant|=(static_cast<jule::U64>(1LLU) << (*_8910_flt.alloc)._field_mantbits);
			}
		}
		_match_end_1a8231144:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1b5725c14_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1b5726396_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	;
	_1b5722a68_decimalSlice _1376_digs = _1b5722a68_decimalSlice{};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1b5731901_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), &((*(_8910_flt))));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a8231980:;
				{
					_8758_prec=_1b5726a8e_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a82373e2:;
				{
					_8758_prec=_1b5726a8e_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a8237458:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1a8236633:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a82393b1:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a823949e:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1a8238e71:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1a8237942:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1b5730647_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1b5730adc_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1b5723ddd_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	return _1b57245b4_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1b5723ddd_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1b57220b7_floatInfo* _18824_flt) {
	_1b57356d5_decimal _1896_d = _1b57356d5_decimal{};;
	_1b5735a8c_assign(&_1896_d, _1882_mant);
	_1b5735d45_shift(&_1896_d, (_18813_exp - static_cast<jule::I64>((*(_18824_flt))._field_mantbits)));
	_1b5722a68_decimalSlice _1926_digs = _1b5722a68_decimalSlice{};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1b57249d2_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1b5722a68_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, };
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a824031d:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a8241110:;
				{
					_18733_prec=_1b5726a8e_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a8241176:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1a8240e89:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a8240054:;
				{
					_1b573665e_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a82400ba:;
				{
					_1b573665e_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a8240131:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1b573665e_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1a82427d7:;
		};
		_1926_digs=_1b5722a68_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, };
	};
	return _1b57245b4_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1b57245b4_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1b5722a68_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1a824581d:;
			{
				return _1b5725076_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a8245884:;
			{
				return _1b5725560_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1a82458ea:;
			{
				jule::I64 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I64 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1b5725076_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), ((_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1b5725560_fmtF(_22418_dst, _22447_neg, _2252_digs, _1b5726a8e_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1a8245774:;
	};
	return jule::append(_22418_dst,jule::Slice<jule::U8>::make({'%',_22537_fmt}));;
}



inline void _1b57249d2_roundShortest(_1b57356d5_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1b57220b7_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1b57356d5_decimal _2926_upper = _1b57356d5_decimal{};;
	_1b5735a8c_assign(&_2926_upper, ((_26235_mant << 1LLU) + 1LLU));
	_1b5735d45_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3036_explo = 0LL;;
	if (((_26235_mant > (1LLU << (*(_26257_flt))._field_mantbits)) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=((_26235_mant << 1LLU) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1b57356d5_decimal _3116_lower = _1b57356d5_decimal{};;
	_1b5735a8c_assign(&_3116_lower, ((_3026_mantlo << 1LLU) + 1LLU));
	_1b5735d45_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I64 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1a8252176;
			};
			jule::I64 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1a8256ce6:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1a8256d90:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1a8256e06:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1a8256c2a:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1a8259843:;
					{
						_1b573665e_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1a82598dc:;
					{
						_1b57360ed_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1a8259953:;
					{
						_1b57363a6_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1a8256e6c:;
			};
		}
	_iter_next_1a8252176:;
	}
	_iter_end_1a8252176:;;
}



inline jule::Slice<jule::U8> _1b5725076_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1b5722a68_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _4177_i = 1LL;;
		jule::I64 _4183_m = _1b572671a_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a825d935:;
		}
		_iter_end_1a825d935:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1a82610ca:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1a8260a58:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1a82609e2:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>(jule::div(_4306_exp,10LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1a826056e:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1b5725560_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1b5722a68_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _4647_m = _1b572671a_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a8264ee1:;
		}
		_iter_end_1a8264ee1:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1a82663ee:;
		}
		_iter_end_1a82663ee:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1b5725c14_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1b57220b7_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b573a982_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b573a982_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1b5726396_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1b57220b7_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant<<=(60LLU - (*(_51232_flt))._field_mantbits);
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant<<=1LLU;
			(_51221_exp)--;
		}
	_iter_next_1a826b2d3:;
	}
	_iter_end_1a826b2d3:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5263_shift = static_cast<jule::U64>((_51126_prec << 2LLU));;
		jule::U64 _5273_extra = ((_5126_mant << _5263_shift) & 1152921504606846975LLU);;
		_5126_mant>>=(60LLU - _5263_shift);
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant<<=(60LLU - _5263_shift);
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant>>=1LLU;
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push(('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant<<=4LLU;
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant<<=4LLU;
			}
		_iter_next_1a8271b79:;
		}
		_iter_end_1a8271b79:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant<<=4LLU;
			}
		_iter_next_1a8273373:;
		}
		_iter_end_1a8273373:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1b572763e_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1a8270606:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1a827066c:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((jule::div(_51221_exp,10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1a8275023:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>(jule::div(_51221_exp,100LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((jule::div(_51221_exp,10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1a8275320:;
	};
	return _51113_dst;;
}



inline jule::I64 _1b572671a_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _1b5726a8e_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1b572763e_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1b505c56d_ConvError _1b5727ab2_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1b505c56d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1a827ba96:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1a827b9ca:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1b572763e_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1a827d4b0:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1b572763e_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1a827d59d:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1b572763e_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1a827d16e:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1a827d108:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1a827d04d:;
					};
				};
			}
		}
		else {
			_case_begin_1a827ade7:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1a827b47a:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1a8282470:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a8282151:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1a8281738:;
			{
				_906_cutoff=(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU);
			}
		}
		_match_end_1a8282063:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1a82821b7:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a827cc84:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1a8283619:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82844c7:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1a8285819:;
						{
							_1107_d=(_1099_c - '0');
						}
					}
					else if ((('a' <= _1b572763e_lower(_1099_c)) && (_1b572763e_lower(_1099_c) <= 'z'))) {
						_case_begin_1a828574d:;
						{
							_1107_d=((_1b572763e_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1a8285363:;
						{
							goto _iter_next_1a82844c7;
						}
					}
					else {
						_case_begin_1a82852ec:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1a8285297:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1a82844c7:;
			++it;
			goto _iter_begin_1a82844c7;
		}
		_iter_end_1a82844c7:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1b5727ee1_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I64 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__1b505c56d_ConvError __jule_assign_result = _1b5727ab2_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1b5728497_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I64 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__1b505c56d_ConvError __jule_assign_result = _1b5727ab2_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I64>(0LL)) && (_18710_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1b5729157_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1e7e846d7_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _572_clz = _1b556b8b2_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_572_clz);
	;
	jule::U64 _606_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b55767e0_Mul64(_4122_man, _1b5729ec1_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b55767e0_Mul64(_4122_man, _1b5729ec1_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((_6817_mergedLo + 1LLU) == 0LLU)) && ((_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _687_mergedHi;
			jule::U64 _1___jule_assign_arg = _6817_mergedLo;
			_636_xHi = ___jule_assign_arg;
			_6315_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = (_636_xHi >> (_792_msb + 9LLU));;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa>>=1LLU;
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa>>=1LLU;
		_606_retExp2+=1LLU;
	};
	if (((_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1e7e846d7_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1b57295ca_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1e7e840cc_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1322_clz = _1b556b8b2_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1322_clz);
	;
	jule::U64 _1356_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b55767e0_Mul64(_11022_man, _1b5729ec1_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b55767e0_Mul64(_11022_man, _1b5729ec1_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14318_merged_lo + 1LLU) == 0LLU)) && ((_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _1437_merged_hi;
			jule::U64 _1___jule_assign_arg = _14318_merged_lo;
			_1386_x_hi = ___jule_assign_arg;
			_13816_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = (_1386_x_hi >> (_1542_msb + 38LLU));;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa>>=1LLU;
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa>>=1LLU;
		_1356_retExp2+=1LLU;
	};
	if (((_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1e7e840cc_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1b572b3ac_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I64 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1a82a9ee2:;
	}
	_iter_end_1a82a9ee2:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1b572b6ba_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _736_sign = 1LL;;
	jule::I64 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1a82ad864:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1a82ad8db;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1a82ad8db:;
			{
				jule::I64 _887_caseN = _1b572b3ac_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1b557e122_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1a82ad952:;
			{
				if ((_1b572b3ac_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1b557da4a_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a82ad7ba:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1b572b984_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1a82b3e85:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1a82b3eeb:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1a82b3a89:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1b572763e_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I64 _1346_nd = 0LL;;
	jule::I64 _1356_ndMant = 0LL;;
	jule::I64 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1a82b8ece:;
					{
						goto _iter_next_1a82b830d;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1a82b9078:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1a82bd951;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1a82b830d;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1a82b90de:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1a82b830d;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a82b830d;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1b572763e_lower(_1383_c))) && (_1b572763e_lower(_1383_c) <= 'f'))) {
					_case_begin_1a82b9155:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1b572763e_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a82b830d;
					}
				}
				_match_end_1a82b8e02:;
			};
			goto _iter_end_1a82b830d;
		}
	_iter_next_1a82b830d:;
	}
	_iter_end_1a82b830d:;;
	_julec_label_1a82bd951:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1b572763e_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1a82c12b1;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1a82c12b1:;
		}
		_iter_end_1a82c12b1:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1b572d4d0_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _1b57225d4_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1a82ca2ba:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1a82ca353:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1b572c897_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1b572c897_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1a82ca3b9:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_1b572c897_f64pow10[(-(_48635_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a82c9be3:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1b572d90e_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _1b57222d7_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1a82ce511:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1a82ce599:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1b572cbc7_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1b572cbc7_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1a82ce610:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_1b572cbc7_f32pow10[(-(_52035_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a82cde39:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1b505c56d_ConvError _1b572dea3_atofHex(_1b57220b7_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1b505c56d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5572_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1a82d2e1b:;
	}
	_iter_end_1a82d2e1b:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1a82d52d6:;
	}
	_iter_end_1a82d52d6:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1a82d56b0:;
	}
	_iter_end_1a82d56b0:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6036_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6106_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6106_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (_1b57220b7_floatInfo_eq(&(*(_55613_flt)), _1b57222d7_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1e7e840cc_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1e7e846d7_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1b505c56d_ConvError _1b572e37c_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1b505c56d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I64 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b572b6ba_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I64 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I64 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b572b984_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1b505c56d_ConvError __jule_assign_result = _1b572dea3_atofHex(&(_1b57222d7_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b572d90e_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b57295ca_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b57295ca_eiselLemire32((_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1b57356d5_decimal _6676_d = _1b57356d5_decimal{};;
	if ((!(_1b572c116_set(&_6676_d, _2123b1c82_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b572c457_floatBits(&_6676_d, &(_1b57222d7_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1e7e840cc_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b505c56d_ConvError _1b572e5be_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1b505c56d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I64 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b572b6ba_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I64 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I64 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b572b984_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__1b505c56d_ConvError __jule_assign_result = _1b572dea3_atofHex(&(_1b57225d4_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b572d4d0_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b5729157_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b5729157_eiselLemire64((_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1b57356d5_decimal _7246_d = _1b57356d5_decimal{};;
	if ((!(_1b572c116_set(&_7246_d, _2123b1c82_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b572c457_floatBits(&_7246_d, &(_1b57225d4_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1e7e846d7_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b505c56d_ConvError _1b572e943_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1b505c56d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I64 _7386_n;
		jule::I64 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1b505c56d_ConvError __jule_assign_result = _1b572e37c_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1b572e5be_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1b572ecb7_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I64 _7695_n;
	jule::I64 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1b505c56d_ConvError __jule_assign_result = _1b572e943_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I64>(0LL)) || (_7698_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	if ((_7698_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1b5730647_ryuFtoaFixed32(_1b5722a68_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _626_e2 = _4956_exp;;
	jule::I64 _632_b = _1b5573e80_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _632_b));
		_626_e2+=(static_cast<jule::I64>(_632_b) - 25LL);
	};
	jule::I64 _742_q = (((-(_1b5731b87_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I64 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b573357e_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1b5733d32_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U64 _942_extra = static_cast<jule::U64>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>(((1LL << _942_extra) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = (_816_di >> _942_extra);
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > (1LLU << (_942_extra - 1LLU))) || ((_976_dfrac == (1LLU << (_942_extra - 1LLU))) && (!(_8121_d0)))) || (((_976_dfrac == (1LLU << (_942_extra - 1LLU))) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=((_976_dfrac >> (_942_extra - 1LLU)) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1b5731428_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1b5730adc_ryuFtoaFixed64(_1b5722a68_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1316_e2 = _12156_exp;;
	jule::I64 _1322_b = _1b5574249_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=(_12145_mant << static_cast<jule::U64>((55LL - _1322_b)));
		_1316_e2+=(static_cast<jule::I64>(_1322_b) - 55LL);
	};
	jule::I64 _1462_q = (((-(_1b5731b87_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I64 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b57339ad_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1b5733d32_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U64 _1662_extra = static_cast<jule::U64>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>(((1LL << _1662_extra) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_1536_di >> _1662_extra);
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > (1LLU << (_1662_extra - 1LLU))) || ((_1696_dfrac == (1LLU << (_1662_extra - 1LLU))) && (!(_15321_d0)))) || (((_1696_dfrac == (1LLU << (_1662_extra - 1LLU))) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=((_1696_dfrac >> (_1662_extra - 1LLU)) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1b5731428_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1b5731428_formatDecimal(_1b5722a68_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2012_max = _1b5730e2d_u64pow10[_20088_prec];;
	jule::I64 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1a831b262:;
	}
	_iter_end_1a831b262:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U64 _2296_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1a831dbb0:;
	}
	_iter_end_1a831dbb0:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1a83252e3:;
	}
	_iter_end_1a83252e3:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1b5731901_ryuFtoaShortest(_1b5722a68_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1b57220b7_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1b556d4a7_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1b57329ce_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I64 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1b5732380_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1b57329ce_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I64 _2792_q = (_1b5731b87_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_1b57220b7_floatInfo_eq(&(*(_26168_flt)), _1b57222d7_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b573357e_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b573357e_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b573357e_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b57339ad_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b57339ad_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b57339ad_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2866_dl0 = ___jule_assign_arg;
			_2876_dc0 = _1___jule_assign_arg;
			_2886_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1b5733d32_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1b5733d32_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1b5733d32_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U64 _3252_extra = static_cast<jule::U64>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>(((1LL << _3252_extra) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2836_dl >> _3252_extra);
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2846_dc >> _3252_extra);
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2856_du >> _3252_extra);
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > (1LLU << (_3252_extra - 1LLU))) || ((_3306_fracc == (1LLU << (_3252_extra - 1LLU))) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=((_3306_fracc >> (_3252_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1b57329ce_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I64 _1b5731b87_mulByLog2Log10(jule::I64 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I64 _1b5731e51_mulByLog10Log2(jule::I64 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1b5732380_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1b57220b7_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3963_flt))._field_mantbits)) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = ((2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = ((4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1b57329ce_ryuDigits(_1b5722a68_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b57340eb_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b57340eb_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b57340eb_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1b5733150_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1b5733150_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _4287_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_4287_n)]=static_cast<jule::U8>((_4318_v2 + '0'));
			}
		_iter_next_1a6c36376:;
		}
		_iter_end_1a6c36376:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I64>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I64>((9LL - _4287_n));
		_1b5733150_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1a6c39027:;
	}
	_iter_end_1a6c39027:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1a6c36dd2:;
	}
	_iter_end_1a6c36dd2:;;
}



inline void _1b5733150_ryuDigits32(_1b5722a68_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I64 _4606_trimmed = 0LL;;
	jule::I64 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1a6c3b777;
			};
			if (((_4703_l == (_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I64>(_47114_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4703_l;
				jule::U32 _1___jule_assign_arg = _4717_c;
				jule::U32 _2___jule_assign_arg = _4723_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4556_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1a6c3b777:;
	}
	_iter_end_1a6c3b777:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I64 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1a6c4232c:;
	}
	_iter_end_1a6c4232c:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1b573357e_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1b5729ec1_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b55767e0_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1b5731e51_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1b57339ad_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1b5729ec1_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1b5731e51_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b55767e0_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b55767e0_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b5574ed6_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1b5733d32_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1a6c511b5:;
	}
	_iter_end_1a6c511b5:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1b57340eb_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _1b5737033_trim(_1b57356d5_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1a6c546a2:;
	}
	_iter_end_1a6c546a2:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1b573731e_rightShift(_1b57356d5_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2856_r = 0LL;;
	jule::I64 _2866_w = 0LL;;
	jule::U64 _2896_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2896_n >> _28432_k) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2896_n >> _28432_k) == 0LLU)) {
					{
						_2896_n=(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1a6c5784d:;
				}
				_iter_end_1a6c5784d:;;
				goto _iter_end_1a6c562ec;
			};
			jule::U64 _3033_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(((_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1a6c562ec:;
	}
	_iter_end_1a6c562ec:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U64 _3082_mask = (static_cast<jule::U64>((1LL << _28432_k)) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U64 _3123_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			jule::U64 _3133_dig = (_2896_n >> _28432_k);;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(((_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1a6c571bb:;
	}
	_iter_end_1a6c571bb:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U64 _3223_dig = (_2896_n >> _28432_k);;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(_2896_n * 10LLU);
		}
	_iter_next_1a6c5a037:;
	}
	_iter_end_1a6c5a037:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1b5737033_trim(_28420_a);
}



inline jule::Bool _1b57377c5_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1a6c5e0a2:;
	}
	_iter_end_1a6c5e0a2:;;
	return false;;
}



inline void _1b5737a7d_leftShift(_1b57356d5_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3536_delta = _1b57350ec_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1b57377c5_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &((*((&(_1b57350ec_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))))))) {
		(_3536_delta)--;
	};
	jule::I64 _3586_r = (*(_35219_a))._field_nd;;
	jule::I64 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U64 _3626_n = static_cast<jule::U64>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_3586_r]) - '0') << _35231_k);
			jule::U64 _3663_quo = (_3626_n / 10LLU);;
			jule::U64 _3673_rem = (_3626_n - (10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1a6c622d6:;
	}
	_iter_end_1a6c622d6:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U64 _3793_quo = (_3626_n / 10LLU);;
			jule::U64 _3803_rem = (_3626_n - (10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1a6c628ad:;
	}
	_iter_end_1a6c628ad:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1b5737033_trim(_35219_a);
}



inline jule::Bool _1b5737e02_shouldRoundUp(_1b57356d5_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1b5739684_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1b573a157_small(static_cast<jule::I64>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b573a982_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1b5739a4c_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1b573a157_small(static_cast<jule::I64>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b573a982_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1b5739d16_Itoa(jule::I64 _819_i) {
	return _1b5739a4c_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1b573a157_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return jule::Str::from_byte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = jule::Slice<jule::U8>::alloc(3LL, 3LL, 0);;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _2123b22d2_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1b573a3dd_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1b573a982_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1a6c9cdb0:;
			{
				;
				jule::U64 _1547_us = static_cast<jule::U64>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U64 _1564_is = ((_1547_us % 100LL) << 1LLU);;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1564_is));
					}
				_iter_next_1a6c9e950:;
				}
				_iter_end_1a6c9e950:;;
				jule::U64 _1643_is = (_1547_us << 1LLU);;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1643_is));
				};
			}
		}
		else if (_1b573a3dd_isPowerOfTwo(_10541_base)) {
			_case_begin_1a6c9d575:;
			{
				jule::U64 _1793_shift = (static_cast<jule::U64>(_1b556c808_TrailingZeros(static_cast<jule::U64>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1813_m = (static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1813_m)));
						_10533_u>>=_1793_shift;
					}
				_iter_next_1a6ca766c:;
				}
				_iter_end_1a6ca766c:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1a6c9bebe:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = jule::div(_10533_u,_1923_b);;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((_10533_u - (_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1a6c9cb90:;
				}
				_iter_end_1a6c9cb90:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1a6c9be36:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I64 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_2123b22d2_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline jule::Str _1b573bd7e_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1a8906b7c:;
			{
				return _1b573b39a_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1a890a2e0:;
			{
				return _1b573b653_SysUint;;
			}
		}
		else {
			_case_begin_1a8907b39:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1a8909531:;
	};
}



inline jule::I64 _1b573c148_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1a890b225:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a890b445:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a890b4ab:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a890b28b:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1a890b302:;
			{
				return _1b573b09d_BitSize;;
			}
		}
		else {
			_case_begin_1a890b05a:;
			{
				return -1LL;;
			}
		}
		_match_end_1a890b17b:;
	};
}



inline jule::Str _1b573c489_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a890d865:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a890d689:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a890d700:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a890d8cb:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1a890ce4c:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a890d06d:;
	};
}



inline jule::Str _1b573c720_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a890eadb:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a890e39e:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a890e415:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a890eb52:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1a890e657:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a890e305:;
	};
}



inline jule::Str _1b573c9d9_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1a89110b5:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a8910636:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1a89108cd:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a891057b:;
	};
}



inline jule::Bool _1b573d5de_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1b572ecb7_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1b573d8a8_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1a8915be1:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a891566e:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a89125e4:;
	};
}



inline jule::I64 _1b573db72_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1a891694a:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1a8916a27:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1a8916a8d:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a8915eaa:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a8915dcd:;
	};
}



inline jule::I64 _1b573de3b_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1a89184b8:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1a89176a4:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1a891771a:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a891762c:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a8917ac2:;
	};
}



inline void _1b573e0d4_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _2121280e2_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1a8918573:;
				{
					_1b573b09d_BitSize=64LLU;
					_1b573b39a_SysInt=jule::Str::lit("i64", 3);
					_1b573b653_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1a8919497:;
				{
					_1b573b09d_BitSize=32LLU;
					_1b573b39a_SysInt=jule::Str::lit("i32", 3);
					_1b573b653_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1a8919398:;
		};
	};
}



inline void _1b573e25a_init(void) {
	_1b573e0d4_UpdateTarget();
}



inline jule::I64 _1b5742d1e_MinI(jule::Str _6113_k) {
	_6113_k=_1b573bd7e_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1a891bb81:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a891b90b:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a891b972:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a891b9e9:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1a8918661:;
			{
				return 0LL;;
			}
		}
		_match_end_1a891872c:;
	};
}



inline jule::I64 _1b574312c_MaxI(jule::Str _7913_k) {
	_7913_k=_1b573bd7e_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1a891cb93:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a891cc09:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a891cc70:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a891ccd6:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1a891ca3e:;
			{
				return 0LL;;
			}
		}
		_match_end_1a891c9d9:;
	};
}



inline jule::U64 _1b57433e6_MaxU(jule::Str _9713_k) {
	_9713_k=_1b573bd7e_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1a891e28d:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a891e304:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1a891e36a:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1a891e3d1:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1a891e139:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a891e0d4:;
	};
}



inline jule::F64 _1b5743737_Min(jule::Str _11512_k) {
	_11512_k=_1b573bd7e_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1b5742d1e_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a8921911:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a892148d:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1a89210b4:;
			{
				return 0LL;;
			}
		}
		_match_end_1a8920cc8:;
	};
}



inline jule::F64 _1b57439bd_Max(jule::Str _13312_k) {
	_13312_k=_1b573bd7e_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1b574312c_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1b57433e6_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a8923c21:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a892379d:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1a89233c4:;
			{
				return 0LL;;
			}
		}
		_match_end_1a8923083:;
	};
}



inline jule::Bool _1b5743e74_IsI16Greater(jule::Str _621_k) {
	return _621_k.equal("i8", 2);;
}



inline jule::Bool _1b5744282_IsI32Greater(jule::Str _1121_k) {
	return (_1121_k.equal("i8", 2) || _1121_k.equal("i16", 3));;
}



inline jule::Bool _1b574454b_IsI64Greater(jule::Str _1621_k) {
	return ((_1621_k.equal("i8", 2) || _1621_k.equal("i16", 3)) || _1621_k.equal("i32", 3));;
}



inline jule::Bool _1b574488c_IsU16Greater(jule::Str _2321_k) {
	return _2321_k.equal("u8", 2);;
}



inline jule::Bool _1b5744b23_IsU32Greater(jule::Str _2821_k) {
	return (_2821_k.equal("u8", 2) || _2821_k.equal("u16", 3));;
}



inline jule::Bool _1b5744ddc_IsU64Greater(jule::Str _3421_k) {
	return ((_3421_k.equal("u8", 2) || _3421_k.equal("u16", 3)) || _3421_k.equal("u32", 3));;
}



inline jule::Bool _1b57451a6_IsF32Greater(jule::Str _4117_k) {
	return (!_4117_k.equal("f64", 3));;
}



inline jule::Bool _1b5745580_IsF64Greater(jule::Str _4617_k) {
	return true;;
}



inline jule::Bool _1b574587c_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2) {
	{
		auto &_match_expr{ _5118_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1a892741c:;
			{
				return _1b57469e3_IsSigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1a8927483:;
			{
				return _1b5746d01_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1a89274e9:;
			{
				return _1b5746d01_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a8927571:;
			{
				return _1b5743e74_IsI16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a89277e6:;
			{
				return _1b5744282_IsI32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a892786d:;
			{
				return _1b574454b_IsI64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a89278e5:;
			{
				return _1b574488c_IsU16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1a892796c:;
			{
				return _1b5744b23_IsU32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1a8927a7c:;
			{
				return _1b5744ddc_IsU64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a8927ae3:;
			{
				return _1b57451a6_IsF32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a8927b59:;
			{
				return _1b5745580_IsF64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1a8927bc0:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a89271b9:;
			{
				return false;;
			}
		}
		_match_end_1a8925bbd:;
	};
}



inline jule::Bool _1b57469e3_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1b5746d01_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1b57470ba_IsInt(jule::Str _4610_k) {
	return (_1b57469e3_IsSigInt(_4610_k) || _1b5746d01_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1b574740b_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1b5747692_IsNum(jule::Str _5610_k) {
	return (_1b57470ba_IsInt(_5610_k) || _1b574740b_IsFloat(_5610_k));;
}



inline jule::Bool _1b574795b_IsSigNum(jule::Str _6113_k) {
	return (_1b57469e3_IsSigInt(_6113_k) || _1b574740b_IsFloat(_6113_k));;
}



inline void _1b5751bb8_lshiftUnsig(_1b5747b9d_Const* _59021_c, _1b5747b9d_Const* _59032_x) {
	jule::U64 _5912_l = _1b574a5c9_AsU64(_59021_c);;
	jule::U64 _5922_r = _1b574a5c9_AsU64(_59032_x);;
	_1b574adc1_SetU64(_59021_c, (_5912_l << _5922_r));
}



inline void _1b5751ee8_rshiftUnsig(_1b5747b9d_Const* _59621_c, _1b5747b9d_Const* _59632_x) {
	jule::U64 _5972_l = _1b574a5c9_AsU64(_59621_c);;
	jule::U64 _5982_r = _1b574a5c9_AsU64(_59632_x);;
	_1b574adc1_SetU64(_59621_c, (_5972_l >> _5982_r));
}



inline jule::Bool _1a3b2829e_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1a3b2163d_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a89d032c:;
		if (it != expr_end) {
			jule::U64 *_3359_op = it;
			{
				if ((_33414_id == (*(_3359_op)))) {
					return true;;
				};
			}
			_iter_next_1a89d032c:;
			++it;
			goto _iter_begin_1a89d032c;
		}
		_iter_end_1a89d032c:;
	};
	return false;;
}



inline jule::Bool _1a3b285ac_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1a3b2196d_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8387ab4:;
		if (it != expr_end) {
			jule::U64 *_3459_op = it;
			{
				if ((_34412_id == (*(_3459_op)))) {
					return true;;
				};
			}
			_iter_next_1a8387ab4:;
			++it;
			goto _iter_begin_1a8387ab4;
		}
		_iter_end_1a8387ab4:;
	};
	return false;;
}



inline jule::Bool _1a3b28bb7_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1a3b28e4d_IsRawStr(_36410_k)));;
}



inline jule::Bool _1a3b28e4d_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1a3b29217_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1a3b29aec_IsFloat(jule::Str _38012_k) {
	if (_1e7bc8b35_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _1e7bd39ca_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _1e7bd39ca_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1a3b29db6_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3932_b = _38810_k[0LL];;
	return ((_3932_b == '.') || (('0' <= _3932_b) && (_3932_b <= '9')));;
}



inline jule::Bool _1a3b2a449_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1a3b2a713_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1a3b2ac96_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1a3b21352_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a838e989:;
		if (it != expr_end) {
			jule::I32 *_4209_cr = it;
			{
				if ((_41912_r == (*(_4209_cr)))) {
					return true;;
				};
			}
			_iter_next_1a838e989:;
			++it;
			goto _iter_begin_1a838e989;
		}
		_iter_end_1a838e989:;
	};
	return false;;
}



inline jule::Bool _1a3b2b291_IsLetter(jule::I32 _42913_r) {
	return _1e7a16a50_IsLetter(_42913_r);;
}



inline jule::Bool _1a3b2b714_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1a3b2b9cd_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1a3b2bc97_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1a3b2c061_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1a8393509:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1a83935a3:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1a839362a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a8393482:;
			{
				return false;;
			}
		}
		_match_end_1a8392e98:;
	};
}



inline jule::Bool _1a3b2c32a_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1a3b2c5e4_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1a3b22045_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8394b37:;
		if (it != expr_end) {
			jule::U64 *_4869_op = it;
			{
				if ((_48516_id == (*(_4869_op)))) {
					return true;;
				};
			}
			_iter_next_1a8394b37:;
			++it;
			goto _iter_begin_1a8394b37;
		}
		_iter_end_1a8394b37:;
	};
	return false;;
}



inline jule::Bool _1a3b2c8ad_IsAssignOp(jule::U64 _49515_id) {
	if (_1a3b2c5e4_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1a3b22331_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83972ee:;
		if (it != expr_end) {
			jule::U64 *_4999_op = it;
			{
				if ((_49515_id == (*(_4999_op)))) {
					return true;;
				};
			}
			_iter_next_1a83972ee:;
			++it;
			goto _iter_begin_1a83972ee;
		}
		_iter_end_1a83972ee:;
	};
	return false;;
}



inline jule::Ptr<_1a3b2d2e8_File> _1a3b2e6c3_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1a3b2d2e8_File>(_1a3b2d2e8_File{._field_Path=_5715_path, });;
}



inline _1e7c94ecb_Log _1a3b311ec_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1a3b2d2e8_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _1e7c94ecb_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_1e7c9543d_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1a3b315b5_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8117239:;
		if (it != expr_end) {
			jule::I64 _1146_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1146_i] != _11035_prefix[_1146_i])) {
					return false;;
				};
			}
			_iter_next_1a8117239:;
			++it;
			_1146_i++;
			goto _iter_begin_1a8117239;
		}
		_iter_end_1a8117239:;
	};
	return true;;
}



inline jule::Str _1a3b31939_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1286_b = (*(_12215_txt))[_12232_i];;
	if ((_1286_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1286_b == '+') || (_1286_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1422_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1286_b=(*(_12215_txt))[_12232_i];
			if (((_1286_b != '_') && (!(_1a3b2b714_IsDecimal(_1286_b))))) {
				goto _iter_end_1a811bc99;
			};
		}
	_iter_next_1a811bc99:;
	}
	_iter_end_1a811bc99:;;
	if ((_12232_i == _1422_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1a3b31d02_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1a3b31939_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1a3b32176_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1a811e1b9:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1683_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1683_b == '_') || _1a3b2b714_IsDecimal(_1683_b)) {
					_case_begin_1a811eb6a:;
					{
						goto _iter_next_1a811de22;
					}
				}
				else if (_1a3b33a07_isFloatFmtP(_1683_b, _16036_i)) {
					_case_begin_1a811ec14:;
					{
						return _1a3b31d02_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1a811eae3:;
					{
						goto _iter_end_1a811de22;
					}
				}
				_match_end_1a811ea7c:;
			};
		}
	_iter_next_1a811de22:;
	}
	_iter_end_1a811de22:;;
	return jule::Str();;
}



inline jule::Str _1a3b324ea_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1a3b31939_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1a3b3286e_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1a3b31939_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1a3b32d03_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2013_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2013_b == 'e') || (_2013_b == 'E')))) {
				__jule_func_result = _1a3b31939_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2013_b != '_') && (!(_1a3b2b714_IsDecimal(_2013_b))))) {
				goto _iter_end_1a812292b;
			};
		}
	_iter_next_1a812292b:;
	}
	_iter_end_1a812292b:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1a3b33045_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2176_i = 0LL;;
	_julec_label_1a81221ab:;
	for (; (_2176_i < (*(_21615_txt)).len()); (_2176_i)++) {
		{
			jule::U8 _2203_b = (*(_21615_txt))[_2176_i];;
			{
				
				if ((_2203_b == '.')) {
					_case_begin_1a8125a61:;
					{
						__jule_func_result = _1a3b32d03_floatNum(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((_2203_b == '_')) {
					_case_begin_1a8125b0a:;
					{
						goto _iter_next_1a8124e5b;
					}
				}
				else if (_1a3b33683_isFloatFmtE(_2203_b, _2176_i)) {
					_case_begin_1a8125b71:;
					{
						__jule_func_result = _1a3b31939_floatFmtE(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1a3b2b714_IsDecimal(_2203_b)))) {
					_case_begin_1a8125bd7:;
					{
						goto _iter_end_1a8124e5b;
					}
				}
				_match_end_1a8125984:;
			};
		}
	_iter_next_1a8124e5b:;
	}
	_iter_end_1a8124e5b:;;
	if ((_2176_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2176_i));
	return __jule_func_result;;
}



inline jule::Str _1a3b3330e_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1a3b315b5_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2486_i = 2LL;;
	for (; (_2486_i < (*(_23915_txt)).len()); (_2486_i)++) {
		{
			if ((((*(_23915_txt))[_2486_i] != '_') && (!(_1a3b2b9cd_IsBinary((*(_23915_txt))[_2486_i]))))) {
				goto _iter_end_1a8128943;
			};
		}
	_iter_next_1a8128943:;
	}
	_iter_end_1a8128943:;;
	if ((_2486_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2486_i));
	return __jule_func_result;;
}



inline jule::Bool _1a3b33683_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1a3b33a07_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1a3b33d7b_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1a812b528:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2763_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2763_b == '_') || _1a3b2b714_IsDecimal(_2763_b)) {
					_case_begin_1a812c53a:;
					{
						goto _iter_next_1a812b429;
					}
				}
				else if (_1a3b33a07_isFloatFmtP(_2763_b, _26938_i)) {
					_case_begin_1a812c5d4:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1a812c4b3:;
					{
						goto _iter_end_1a812b429;
					}
				}
				_match_end_1a812c44c:;
			};
		}
	_iter_next_1a812b429:;
	}
	_iter_end_1a812b429:;;
	return false;;
}



inline jule::Bool _1a3b34200_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1a812d849:;
			{
				goto _case_begin_1a812d8e3;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1a812d8e3:;
			{
				goto _case_begin_1a812d96a;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1a812d96a:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a812d7b1:;
			{
				return true;;
			}
		}
		_match_end_1a812d6b2:;
	};
}



inline jule::Bool _1a3b34574_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1a8130609:;
			{
				goto _case_begin_1a8130670;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1a8130670:;
			{
				goto _case_begin_1a81306d6;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1a81306d6:;
			{
				goto _case_begin_1a813075d;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1a813075d:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a813053d:;
			{
				return true;;
			}
		}
		_match_end_1a81300ed:;
	};
}



inline jule::Str _1a3b34a6e_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3266_octalStart = 1LL;;
	jule::Bool _3286_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3266_octalStart)++;
		_3286_o=true;
	};
	jule::I64 _3376_i = _3266_octalStart;;
	for (; (_3376_i < (*(_31814_txt)).len()); (_3376_i)++) {
		{
			jule::U8 _3393_b = (*(_31814_txt))[_3376_i];;
			if ((_3393_b == '.')) {
				if (_3286_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1a3b32d03_floatNum(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (_1a3b33683_isFloatFmtE(_3393_b, _3376_i)) {
				__jule_func_result = _1a3b31939_floatFmtE(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (((_3393_b != '_') && (!(_1a3b2bc97_IsOctal(_3393_b))))) {
				goto _iter_end_1a8134c5c;
			};
		}
	_iter_next_1a8134c5c:;
	}
	_iter_end_1a8134c5c:;;
	if ((_3376_i == _3266_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3376_i));
	return __jule_func_result;;
}



inline jule::Str _1a3b34c4a_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3696_i = 2LL;;
	_julec_label_1a8138722:;
	for (; (_3696_i < (*(_36012_txt)).len()); (_3696_i)++) {
		{
			jule::U8 _3723_b = (*(_36012_txt))[_3696_i];;
			{
				
				if (_1a3b34200_isFloatFmtDotp(_36012_txt, _3696_i)) {
					_case_begin_1a8139426:;
					{
						__jule_func_result = _1a3b3286e_floatFmtDotp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1a3b34574_isFloatFmtDotfp(_36012_txt, _3696_i)) {
					_case_begin_1a81394c0:;
					{
						__jule_func_result = _1a3b324ea_floatFmtDotfp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1a3b33a07_isFloatFmtP(_3723_b, _3696_i)) {
					_case_begin_1a8139536:;
					{
						__jule_func_result = _1a3b31d02_floatFmtP(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1a3b33d7b_isFloatFmtDotnp(_36012_txt, _3696_i)) {
					_case_begin_1a813959c:;
					{
						__jule_func_result = _1a3b32176_floatFmtDotnp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (((_3723_b != '_') && (!(_1a3b2c061_IsHex(_3723_b))))) {
					_case_begin_1a8139613:;
					{
						goto _iter_end_1a8138876;
					}
				}
				_match_end_1a8139338:;
			};
		}
	_iter_next_1a8138876:;
	}
	_iter_end_1a8138876:;;
	if ((_3696_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3696_i));
	return __jule_func_result;;
}



inline jule::Str _1a3b3509c_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3996_i = 2LL;;
	for (; (_3996_i < _39328_n); (_3996_i)++) {
		{
			if ((!(_1a3b2c061_IsHex((*(_39315_txt))[_3996_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1a813bba9:;
	}
	_iter_end_1a813bba9:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1a3b35366_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1a3b3509c_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1a3b35630_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1a3b3509c_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1a3b358e9_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1a3b3509c_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1a3b35bb3_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1a3b2bc97_IsOctal((*(_42616_txt))[1LL]))) || (!(_1a3b2bc97_IsOctal((*(_42616_txt))[2LL])))) || (!(_1a3b2bc97_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1e7c94ecb_Log> _1a3b3aba7_Lex(jule::Ptr<_1a3b2d2e8_File> _80612_f, jule::I64 _80622_mode) {
	if ((_80612_f == nullptr)) {
		return nullptr;;
	};
	_1a3b36433_lex _8116_lex = _1a3b36433_lex{._field_mode=_80622_mode, ._field_file=_80612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1a3b39249_newLine(&_8116_lex);
	_1a3b37027_lex(&_8116_lex);
	if ((_8116_lex._field_errors.len() > 0LL)) {
		return _8116_lex._field_errors;;
	};
	(*(_80612_f))._field_Tokens=_8116_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1a3c04c71_FindModuleFile(jule::Slice<jule::Ptr<_212303e27_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81be214:;
		if (it != expr_end) {
			jule::Ptr<_212303e27_DirEntry> *_149_d = it;
			{
				if (((!(_2123082b1_IsDir((*((*(_149_d))))._field_Stat.ptr()))) && (*((*(_149_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1a81be214:;
			++it;
			goto _iter_begin_1a81be214;
		}
		_iter_end_1a81be214:;
	};
	return false;;
}



inline jule::Str _1a3c05029_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_212303e27_DirEntry>> _277_dirents = ({
				auto except = static__1e7c03038_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1a81beb1b;
				} jule::Slice<jule::Ptr<_212303e27_DirEntry>>(nullptr);});
			});;
			jule::Bool _313_exist = _1a3c04c71_FindModuleFile(&(_277_dirents));;
			if (_313_exist) {
				return _2527_path;;
			};
			jule::I64 _363_n = _2527_path.len();;
			_2527_path=_1e7c00ae6_Dir(_2527_path);
			if ((_2527_path.len() == _363_n)) {
				goto _iter_end_1a81beb1b;
			};
		}
	_iter_next_1a81beb1b:;
	}
	_iter_end_1a81beb1b:;;
	return jule::Str();;
}



inline jule::Slice<_1e7c94ecb_Log> _1a3c052e3_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _482_bytes = ({
		auto except = static__212306798_Read(_1e7beee03_Join(jule::Slice<jule::Str>::make({(*(_4721_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1e7c94ecb_Log>::make({_1e7c94ecb_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _542_s = _1e7bd57ac_Trim(_2123b2018_BytesStr(_482_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_542_s.len() != 0LL)) {
		return jule::Slice<_1e7c94ecb_Log>::make({_1e7c94ecb_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1a3c05b40_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e7b84e32_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1e7a82cb9_IsUpper(_142_r);;
}



inline jule::Bool _1a3c537d6_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1a3c6d812_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _247_i = 0LL;;
		_216_r=_1a3c6e46c_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e7b84e32_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1a3c6da21_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1a3c6dd62_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81cba5c:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1a81cba5c;
				};
			}
			_iter_next_1a81cba5c:;
			++it;
			goto _iter_begin_1a81cba5c;
		}
		_iter_end_1a81cba5c:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len(), 0);;
	jule::I64 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1a3c6e813_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I64 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e7b84e32_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_1e7b85ecc_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1a81cda4d:;
	}
	_iter_end_1a81cda4d:;;
	return _2123b22d2_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1a3c6e0e8_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1a81d1028:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a81d1743:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a81d17a9:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1a81d1820:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1a81d1886:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a81d190d:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1a81d1985:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1a81d1a0c:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1a81d1a84:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1a81d1b0b:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1a81d159a:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1a3c6e46c_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1a3c6e0e8_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1a81d6704:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1b5727ee1_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a81d6517:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1b5727ee1_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a81d5e2e:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1b5727ee1_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1a81d4c30:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1b5727ee1_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1a81d54a0:;
	};
}



inline void _1a3c6e813_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1462_r = _1a3c6e46c_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_1e7b85ecc_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I64 _1a3e2e52d_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _133_r;
			jule::I64 _136_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e7b84ae1_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_133_r = __jule_assign_result.__jule_result_arg0;
				_136_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_133_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_136_size;
		}
	_iter_next_1a8a5b4b8:;
	}
	_iter_end_1a8a5b4b8:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1a3e2e85d_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _282_start = (*(_2724_i));;
	jule::I64 _296_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _313_r;
			jule::I64 _316_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e7b84ae1_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_313_r = __jule_assign_result.__jule_result_arg0;
				_316_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_316_size;
			{
				auto &_match_expr{ _313_r };
				
				if (_match_expr == '{') {
					_case_begin_1a8a5de27:;
					{
						(_296_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1a8a5e18b:;
					{
						(_296_braces)--;
						if ((_296_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_282_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1a8a5d685:;
			};
		}
	_iter_next_1a8a5d014:;
	}
	_iter_end_1a8a5d014:;;
	return nullptr;;
}



inline void _1a3e2eb49_FmtByDefault(_1e7be2632_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_1e7beb262_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1a8a60d2a:;
			{
				_1e7beb262_WriteStr(_4722_buf, _1b57230eb_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type136)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a8a60665:;
			{
				_1e7beb262_WriteStr(_4722_buf, _1b57230eb_FmtFloat((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1a8a606cb:;
			{
				_1e7beb262_WriteStr(_4722_buf, _1b5739a4c_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type137)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1a8a60742:;
			{
				_1e7beb262_WriteStr(_4722_buf, _1b5739a4c_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type138)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a8a607a8:;
			{
				_1e7beb262_WriteStr(_4722_buf, _1b5739a4c_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a8a6081e:;
			{
				_1e7beb262_WriteStr(_4722_buf, _1b5739a4c_FmtInt((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1a8a60e4b:;
			{
				_1e7beb262_WriteStr(_4722_buf, _1b5739684_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type135)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1a8a60eb2:;
			{
				_1e7beb262_WriteStr(_4722_buf, _1b5739684_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type139)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1a8a61028:;
			{
				_1e7beb262_WriteStr(_4722_buf, _1b5739684_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type140)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a8a6108e:;
			{
				_1e7beb262_WriteStr(_4722_buf, _1b5739684_FmtUint((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a8a61105:;
			{
				_1e7beb262_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a8a6116b:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_1e7beb262_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_1e7beb262_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1a8a60115:;
			{
				_1e7beb262_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1a8a5d443:;
	};
}



inline void _1a3e30067_applyFmtByDefault(_1e7be2632_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _872_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_1a3e2eb49_FmtByDefault(_8627_buf, &(_872_arg));
}



inline void _1a3e30485_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _1e7be2632_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1a3e30067_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_1e7beb262_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_1e7beaea9_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _1a3e30809_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1166_fmtBytes = _2123b1c82_StrBytes(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1166_fmtBytes;;
	};
	jule::I64 _1206_i = _1a3e2e52d_findFormatPrefix(&(_1166_fmtBytes), 0LL);;
	if ((_1206_i == -1LL)) {
		return _1166_fmtBytes;;
	};
	jule::I64 _1246_j = 0LL;;
	jule::I64 _1256_last = 0LL;;
	_1e7be2632_StrBuilder _1266_buf = static__1e7be28eb_New(_11511_fmt.len());;
	for (; (_1206_i != -1LL); _1206_i=_1a3e2e52d_findFormatPrefix(&(_1166_fmtBytes), _1206_i)) {
		{
			_1e7beaea9_Write(&_1266_buf, _1166_fmtBytes.slice(_1256_last, _1206_i));
			jule::Slice<jule::U8> _1297_format = _1a3e2e85d_getFormatRange(&(_1206_i), &(_1166_fmtBytes));;
			if ((_1297_format == nullptr)) {
				goto _iter_next_1a8a6d343;
			};
			_1a3e30485_applyFmt(&(_1297_format), &(_1266_buf), &(_1246_j), _11521_args);
			if ((_1246_j >= _11521_args.len())) {
				_1e7beaea9_Write(&_1266_buf, _1166_fmtBytes.slice(_1206_i));
				_1256_last=_1166_fmtBytes.len();
				goto _iter_end_1a8a6d343;
			};
			_1256_last=_1206_i;
		}
	_iter_next_1a8a6d343:;
	}
	_iter_end_1a8a6d343:;;
	if ((_1256_last < _1166_fmtBytes.len())) {
		_1e7beaea9_Write(&_1266_buf, _1166_fmtBytes.slice(_1256_last));
	};
	return _1e7bec50a_Buf(&_1266_buf);;
}



inline jule::Str _1a3e3282d_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _2123b22d2_StrFromBytes(_1a3e30809_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_1a3b740ec_Fn> _1b5707ec1_runtimeFindFn(jule::Ptr<_1a3bd86d3_ImportInfo>* _923_runtime, jule::Str _945_ident) {
	;
	jule::Ptr<_1a3b740ec_Fn> _116_f = _1a3bd9cab_FindFn((*(_923_runtime)).ptr(), _945_ident, false);;
	if ((_116_f == nullptr)) {
		jule::panic(jule::Str::lit("runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 103) + jule::Str("\nlocation: std/jule/sema/runtime.jule:13:3"));;
	};
	return _116_f;;
}



inline jule::Bool _1a3b793aa_parameterUsesGenerics(jule::Ptr<_1a3b76055_ParamIns>* _38531_p, jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>>* _38546_generics) {
	if (_1a3b72c44_IsSelf((*((*(_38531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1a3cd647e_kindUsesGenerics(&((*((*(_38531_p))))._field_Kind), _38546_generics);;
}



inline jule::Ptr<_1a3cc2de9_TypeSymbol> _1a3b7bad8_buildType(jule::Ptr<_1a3b3d13d_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1a3c8a9a5_Value> _1a3b7bde6_buildExpr(jule::Ptr<_1a3b42472_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3b7c1b0_buildTypeAlias(jule::Ptr<_1a3b54b5a_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1a3cb9e35_TypeAlias>(_1a3cb9e35_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*_11223_decl.alloc)._field_Public, ._field_Binded=(*_11223_decl.alloc)._field_Binded, ._field_Token=(*_11223_decl.alloc)._field_Token, ._field_Ident=(*_11223_decl.alloc)._field_Ident, ._field_Kind=_1a3b7bad8_buildType((*_11223_decl.alloc)._field_Kind), });;
}



inline jule::Ptr<_1a3b5b117_Field> _1a3b7c501_buildField(jule::Ptr<_1a3b58510_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1a3b5b117_Field>(_1a3b5b117_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*_12319_decl.alloc)._field_Public, ._field_Mutable=(*_12319_decl.alloc)._field_Mutable, ._field_Ident=(*_12319_decl.alloc)._field_Ident, ._field_Kind=_1a3b7bad8_buildType((*_12319_decl.alloc)._field_Kind), ._field_Default=(*_12319_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1a3b5b117_Field>> _1a3b7c787_buildFields(jule::Slice<jule::Ptr<_1a3b58510_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1a3b5b117_Field>> _1356_fields = jule::Slice<jule::Ptr<_1a3b5b117_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88b7be8:;
		if (it != expr_end) {
			jule::Ptr<_1a3b58510_FieldDecl> _13614_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3b5b117_Field>> &__jule_push_dest = _1356_fields; __jule_push_dest.push(_1a3b7c501_buildField(_13614_decl)); };
			}
			_iter_next_1a88b7be8:;
			++it;
			goto _iter_begin_1a88b7be8;
		}
		_iter_end_1a88b7be8:;
	};
	return _1356_fields;;
}



inline jule::Ptr<_1a3b5e03d_Struct> _1a3b7ca51_buildStruct(jule::Ptr<_1a3b58e06_StructDecl> _14220_decl) {
	return jule::new_ptr<_1a3b5e03d_Struct>(_1a3b5e03d_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*_14220_decl.alloc)._field_Ident, ._field_Fields=_1a3b7c787_buildFields(&((*_14220_decl.alloc)._field_Fields)), ._field_Public=(*_14220_decl.alloc)._field_Public, ._field_Binded=(*_14220_decl.alloc)._field_Binded, ._field_Directives=(*_14220_decl.alloc)._field_Directives, ._field_Generics=(*_14220_decl.alloc)._field_Generics, });;
}



inline jule::Ptr<_1a3b72628_Param> _1a3b7cd1a_buildParam(jule::Ptr<_1a3b4d89b_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1a3b72628_Param>(_1a3b72628_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*_15419_decl.alloc)._field_Mutable, ._field_Variadic=(*_15419_decl.alloc)._field_Variadic, ._field_Reference=(*_15419_decl.alloc)._field_Reference, ._field_Kind=_1a3b7bad8_buildType((*_15419_decl.alloc)._field_Kind), ._field_Ident=(*_15419_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1a3b72628_Param>> _1a3b7d1e4_buildParams(jule::Slice<jule::Ptr<_1a3b4d89b_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1a3b72628_Param>> _1666_params = jule::Slice<jule::Ptr<_1a3b72628_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88bedba:;
		if (it != expr_end) {
			jule::Ptr<_1a3b4d89b_ParamDecl> _16714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3b72628_Param>> &__jule_push_dest = _1666_params; __jule_push_dest.push(_1a3b7cd1a_buildParam(_16714_decl)); };
			}
			_iter_next_1a88bedba:;
			++it;
			goto _iter_begin_1a88bedba;
		}
		_iter_end_1a88bedba:;
	};
	return _1666_params;;
}



inline jule::Ptr<_1a3b71d97_RetType> _1a3b7d436_buildRetType(jule::Ptr<_1a3b41031_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*_17321_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a3b71d97_RetType>(_1a3b71d97_RetType{._field_Kind=_1a3b7bad8_buildType((*_17321_decl.alloc)._field_Kind), ._field_Idents=(*_17321_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1a3b740ec_Fn> _1a3b7d700_buildFunc(jule::Ptr<_1a3b4eced_FnDecl> _18318_decl) {
	return jule::new_ptr<_1a3b740ec_Fn>(_1a3b740ec_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*_18318_decl.alloc)._field_Global, ._field_Unsafety=(*_18318_decl.alloc)._field_Unsafety, ._field_Public=(*_18318_decl.alloc)._field_Public, ._field_Binded=(*_18318_decl.alloc)._field_Binded, ._field_Statically=(*_18318_decl.alloc)._field_Statically, ._field_Exceptional=(*_18318_decl.alloc)._field_Exceptional, ._field_Ident=(*_18318_decl.alloc)._field_Ident, ._field_Directives=(*_18318_decl.alloc)._field_Directives, ._field_Scope=(*_18318_decl.alloc)._field_Scope, ._field_Generics=(*_18318_decl.alloc)._field_Generics, ._field_Result=_1a3b7d436_buildRetType((*_18318_decl.alloc)._field_Result), ._field_Params=_1a3b7d1e4_buildParams(&((*_18318_decl.alloc)._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1a3b740ec_Fn>> _1a3b7d9b9_buildMethods(jule::Slice<jule::Ptr<_1a3b4eced_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1a3b740ec_Fn>> _2026_methods = jule::Slice<jule::Ptr<_1a3b740ec_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88c54a8:;
		if (it != expr_end) {
			jule::Ptr<_1a3b4eced_FnDecl> _20314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3b740ec_Fn>> &__jule_push_dest = _2026_methods; __jule_push_dest.push(_1a3b7d700_buildFunc(_20314_decl)); };
			}
			_iter_next_1a88c54a8:;
			++it;
			goto _iter_begin_1a88c54a8;
		}
		_iter_end_1a88c54a8:;
	};
	return _2026_methods;;
}



inline jule::Slice<jule::Ptr<_1a3cc2de9_TypeSymbol>> _1a3b7dc83_buildTraitInherits(jule::Slice<jule::Ptr<_1a3b3d13d_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1a3cc2de9_TypeSymbol>> _2106_symbols = jule::Slice<jule::Ptr<_1a3cc2de9_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88c60d0:;
		if (it != expr_end) {
			jule::Ptr<_1a3b3d13d_TypeDecl> _21114_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3cc2de9_TypeSymbol>> &__jule_push_dest = _2106_symbols; __jule_push_dest.push(_1a3b7bad8_buildType(_21114_it)); };
			}
			_iter_next_1a88c60d0:;
			++it;
			goto _iter_begin_1a88c60d0;
		}
		_iter_end_1a88c60d0:;
	};
	return _2106_symbols;;
}



inline jule::Ptr<_1a3b87a7d_Trait> _1a3b7e04c_buildTrait(jule::Ptr<_1a3b59643_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1a3b87a7d_Trait>(_1a3b87a7d_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*_21719_decl.alloc)._field_Ident, ._field_Public=(*_21719_decl.alloc)._field_Public, ._field_Inherits=_1a3b7dc83_buildTraitInherits(&((*_21719_decl.alloc)._field_Inherits)), ._field_Methods=_1a3b7d9b9_buildMethods(&((*_21719_decl.alloc)._field_Methods)), });;
}



inline jule::Ptr<_1a3b8971c_EnumItem> _1a3b7e316_buildEnumItem(jule::Ptr<_1a3b566ea_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1a3b8971c_EnumItem>(_1a3b8971c_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*_22722_decl.alloc)._field_Ident, ._field_Value=_1a3b7bde6_buildExpr((*_22722_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1a3b8971c_EnumItem>> _1a3b7e5d0_buildEnumItems(jule::Slice<jule::Ptr<_1a3b566ea_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1a3b8971c_EnumItem>> _2366_items = jule::Slice<jule::Ptr<_1a3b8971c_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88c8467:;
		if (it != expr_end) {
			jule::Ptr<_1a3b566ea_EnumItemDecl> _23714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3b8971c_EnumItem>> &__jule_push_dest = _2366_items; __jule_push_dest.push(_1a3b7e316_buildEnumItem(_23714_decl)); };
			}
			_iter_next_1a88c8467:;
			++it;
			goto _iter_begin_1a88c8467;
		}
		_iter_end_1a88c8467:;
	};
	return _2366_items;;
}



inline jule::Ptr<_1a3b8a289_Enum> _1a3b7eaca_buildEnum(jule::Ptr<_1a3b572ab_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1a3b8a289_Enum>(_1a3b8a289_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*_24318_decl.alloc)._field_Public, ._field_Ident=(*_24318_decl.alloc)._field_Ident, ._field_Kind=_1a3b7bad8_buildType((*_24318_decl.alloc)._field_Kind), ._field_Items=_1a3b7e5d0_buildEnumItems(&((*_24318_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a3b8b3bc_TypeEnumItem> _1a3b7eca6_buildTypeEnumItem(jule::Ptr<_1a3b57ad6_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1a3b8b3bc_TypeEnumItem>(_1a3b8b3bc_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*_25326_decl.alloc)._field_Ident, ._field_Kind=_1a3b7bad8_buildType((*_25326_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1a3b8b3bc_TypeEnumItem>> _1a3b8004d_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a3b57ad6_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1a3b8b3bc_TypeEnumItem>> _2626_items = jule::Slice<jule::Ptr<_1a3b8b3bc_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88cb6bd:;
		if (it != expr_end) {
			jule::Ptr<_1a3b57ad6_TypeEnumItemDecl> _26314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3b8b3bc_TypeEnumItem>> &__jule_push_dest = _2626_items; __jule_push_dest.push(_1a3b7eca6_buildTypeEnumItem(_26314_decl)); };
			}
			_iter_next_1a88cb6bd:;
			++it;
			goto _iter_begin_1a88cb6bd;
		}
		_iter_end_1a88cb6bd:;
	};
	return _2626_items;;
}



inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3b80317_buildTypeEnum(jule::Ptr<_1a3b58246_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1a3b8b994_TypeEnum>(_1a3b8b994_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*_26922_decl.alloc)._field_Public, ._field_Ident=(*_26922_decl.alloc)._field_Ident, ._field_Items=_1a3b8004d_buildTypeEnumItems(&((*_26922_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a3c31c26_Var> _1a3b805d1_buildVar(jule::Ptr<_1a3b50ea8_VarDecl> _27817_decl) {
	return jule::new_ptr<_1a3c31c26_Var>(_1a3c31c26_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*_27817_decl.alloc)._field_Ident, ._field_Binded=(*_27817_decl.alloc)._field_Binded, ._field_Constant=(*_27817_decl.alloc)._field_Constant, ._field_Mutable=(*_27817_decl.alloc)._field_Mutable, ._field_Public=(*_27817_decl.alloc)._field_Public, ._field_Statically=(*_27817_decl.alloc)._field_Statically, ._field_Reference=(*_27817_decl.alloc)._field_Reference, ._field_Kind=_1a3b7bad8_buildType((*_27817_decl.alloc)._field_Kind), ._field_Value=_1a3b7bde6_buildExpr((*_27817_decl.alloc)._field_Expr), ._field_Refers=static__1a3b7a554_new(), ._field_Directives=(*_27817_decl.alloc)._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1a3c31c26_Var>> _1a3b8089a_buildVars(jule::Slice<jule::Ptr<_1a3b50ea8_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1a3c31c26_Var>> _2966_vars = jule::Slice<jule::Ptr<_1a3c31c26_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88d23c7:;
		if (it != expr_end) {
			jule::Ptr<_1a3b50ea8_VarDecl> _29714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a3c31c26_Var>> &__jule_push_dest = _2966_vars; __jule_push_dest.push(_1a3b805d1_buildVar(_29714_decl)); };
			}
			_iter_next_1a88d23c7:;
			++it;
			goto _iter_begin_1a88d23c7;
		}
		_iter_end_1a88d23c7:;
	};
	return _2966_vars;;
}



inline jule::Ptr<_1a3bb11e4_Impl> _1a3b80b64_buildImpl(jule::Ptr<_1a3b59ca3_Impl> _30318_decl) {
	return jule::new_ptr<_1a3bb11e4_Impl>(_1a3bb11e4_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*_30318_decl.alloc)._field_Dest, ._field_Methods=_1a3b7d9b9_buildMethods(&((*_30318_decl.alloc)._field_Methods)), ._field_Statics=_1a3b8089a_buildVars((*_30318_decl.alloc)._field_Statics)});;
}



inline jule::Bool _1a3b87077_isImplicitImport(jule::Ptr<_1a3bd86d3_ImportInfo> _80421_imp) {
	return ((*(_80421_imp))._field_Token == nullptr);;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3bab6c8_buildAsComptimeMethodData(jule::Ptr<_1a3b770cd_FnIns>* _142135_f) {
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait((*(_142135_f)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data1)}), });;
}



inline jule::Ptr<_1a3bd86d3_ImportInfo> _1a3bab9d6_findComptimePackage(jule::Ptr<_1a3c08b54_Sema>* _142929_s) {
	return _1a3c090e9_SelectPackage((*(_142929_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1a3bd86d3_ImportInfo>>((void*)__jule_anon1a8d776e6, nullptr, nullptr));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3babd5a_buildComptimeTypeInfoData(jule::Ptr<_1a3c08b54_Sema>* _143535_s, jule::Ptr<_1a3cbac27_TypeKind>* _143550_t) {
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3c0848e_pushComptimeTypeInfo((*((*(_143535_s))))._field_meta.ptr(), _143550_t), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data15)}), });;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3bac19b_buildComptimeValue(jule::Ptr<_1a3c8982d_Data>* _144328_d) {
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3ba59be_comptimeValue>(_1a3ba59be_comptimeValue{._field_data=(*(_144328_d))}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data16)}), });;
}



inline jule::Str _1a3bb018d_toStrConstraints(jule::Ptr<_1a3cb9341_InsGeneric> _14321_g) {
	_1e7be2632_StrBuilder _1446_sb = static__1e7be28eb_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8c55717:;
		if (it != expr_end) {
			jule::I64 _1456_i = it - expr->begin();
			jule::Ptr<_1a3cbac27_TypeKind> *_1459_c = it;
			{
				_1e7beb262_WriteStr(&_1446_sb, _1a3cbb0e0_Str((*(_1459_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					_1e7beb262_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1a8c55717:;
			++it;
			_1456_i++;
			goto _iter_begin_1a8c55717;
		}
		_iter_end_1a8c55717:;
	};
	return _1e7beba59_Str(&_1446_sb);;
}



inline jule::Bool _1a3bb0556_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a3cbac27_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1a8c57571:;
			{
				jule::Ptr<_1a3cc3801_Prim> _1573_prim = _1a3cbd378_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1b574795b_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1a8c575d7:;
			{
				jule::Ptr<_1a3cc3801_Prim> _1633_prim = _1a3cbd378_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1b5746d01_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1a8c5765e:;
			{
				jule::Ptr<_1a3cc3801_Prim> _1693_prim = _1a3cbd378_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1b574740b_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1a8c576d6:;
			{
				jule::Ptr<_1a3cc3801_Prim> _1753_prim = _1a3cbd378_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1b5747692_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1a8c578b2:;
			{
				return _1a3cbc5a8_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1a8c57928:;
			{
				return (!(_1a3cbc5a8_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1a8c5798e:;
			{
				return _1a3cbc322_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1a8c57a05:;
			{
				return _1a3cbc83e_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1a8c569c1:;
			{
				return false;;
			}
		}
		_match_end_1a8c5741c:;
	};
}



inline jule::Bool _1a3bb0820_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1a3bad554_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8c5d720:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1a8c5d720:;
			++it;
			goto _iter_begin_1a8c5d720;
		}
		_iter_end_1a8c5d720:;
	};
	return false;;
}



inline jule::Ptr<_1a3bbdb08_scopeChecker> _1a3bb3427_newScopeCheckerBase(jule::Ptr<_1a3c08b54_Sema>* _5829_s, jule::Ptr<_1a3b770cd_FnIns> _5843_owner) {
	return jule::new_ptr<_1a3bbdb08_scopeChecker>(_1a3bbdb08_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1a3c844b5_SymbolTable>(), });;
}



inline jule::Ptr<_1a3bbdb08_scopeChecker> _1a3bb37e0_newScopeChecker(jule::Ptr<_1a3c08b54_Sema>* _6625_s, jule::Ptr<_1a3b770cd_FnIns> _6639_owner) {
	jule::Ptr<_1a3bbdb08_scopeChecker> _676_base = _1a3bb3427_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_676_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a3bbc585_scopeLabel>>>(nullptr);
	(*_676_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a3bbcb18_scopeGoto>>>(nullptr);
	return _676_base;;
}



inline jule::Ptr<_1a3bbc585_scopeLabel> _1a3bb3b64_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1a3bbdb08_scopeChecker> _7637_scope) {
	jule::Ptr<_1a3bbc585_scopeLabel> _776_label = _1a3bc2c0b_findLabelScope(_7637_scope, _7621_ident);;
	while ((_776_label == nullptr)) {
		{
			if ((((*_7637_scope.alloc)._field_parent == nullptr) || ((*_7637_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*_7637_scope.alloc)._field_parent;
			_776_label=_1a3bc2c0b_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1a8c7741a:;
	}
	_iter_end_1a8c7741a:;;
	return _776_label;;
}



inline jule::Bool _1a3bb402c_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1a3bb664a_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a8c792a7:;
			{
				jule::Ptr<_1a3b68201_FnCallExprModel> _933_fcem = _9021_Model.unsafe_cast_ptr<_1a3b68201_FnCallExprModel>();;
				if (((*(_933_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a8c77b24:;
			{
				jule::Ptr<_1a3c8982d_Data> _983_d = _9021_Model.unsafe_cast_ptr<_1a3c8982d_Data>();;
				return _1a3bb402c_modelIsGotoScope((*(_983_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1a8c79252:;
	};
	return false;;
}



inline jule::Bool _1a3bb43a1_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1a3bb664a_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a8c7ae9b:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1a3bb664a_Scope>(&__jule_any_type21) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a8c7b82b:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1a3bb7580_InfIter>(&__jule_any_type35)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1a8c7b892:;
			{
				jule::Ptr<_1a3bb8482_RangeIter> _1113_it = (*(_10421_stmt)).cast_ptr<_1a3bb8482_RangeIter>(&__jule_any_type39);;
				return (((*(_1113_it))._field_Scope == (*(_10434_sc))) || _1a3bb402c_modelIsGotoScope((*((*_1113_it.alloc)._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1a8c7b41e:;
			{
				jule::Ptr<_1a3bb7a36_WhileIter> _1143_it = (*(_10421_stmt)).cast_ptr<_1a3bb7a36_WhileIter>(&__jule_any_type37);;
				return ((((*(_1143_it))._field_Scope == (*(_10434_sc))) || _1a3bb402c_modelIsGotoScope((*_1143_it.alloc)._field_Expr, _10434_sc)) || _1a3bb402c_modelIsGotoScope((*_1143_it.alloc)._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a8c7b485:;
			{
				jule::Ptr<_1a3bba85d_Match> _1193_m = (*(_10421_stmt)).cast_ptr<_1a3bba85d_Match>(&__jule_any_type47);;
				{
					auto expr = &((*(_1193_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8c80c5e:;
					if (it != expr_end) {
						jule::Ptr<_1a3bbb386_Case> *_12010_c = it;
						{
							if (((*((*(_12010_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(*(_12010_c)).alloc)._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a8c81ba5:;
								if (it != expr_end) {
									jule::Ptr<_1a3c8982d_Data> *_12411_expr = it;
									{
										if (_1a3bb402c_modelIsGotoScope((*((*(_12411_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1a8c81ba5:;
									++it;
									goto _iter_begin_1a8c81ba5;
								}
								_iter_end_1a8c81ba5:;
							};
						}
						_iter_next_1a8c80c5e:;
						++it;
						goto _iter_begin_1a8c80c5e;
					}
					_iter_end_1a8c80c5e:;
				};
				return (((*_1193_m.alloc)._field_Default != nullptr) && ((*(*(_1193_m))._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a8c7b4eb:;
			{
				jule::Ptr<_1a3bb7283_Conditional> _1323_c = (*(_10421_stmt)).cast_ptr<_1a3bb7283_Conditional>(&__jule_any_type34);;
				{
					auto expr = &((*(_1323_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8c83778:;
					if (it != expr_end) {
						jule::Ptr<_1a3bb6a68_If> *_13310_elif = it;
						{
							if ((((*((*(_13310_elif))))._field_Scope == (*(_10434_sc))) || _1a3bb402c_modelIsGotoScope((*(*(_13310_elif)).alloc)._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1a8c83778:;
						++it;
						goto _iter_begin_1a8c83778;
					}
					_iter_end_1a8c83778:;
				};
				return (((*_1323_c.alloc)._field_Default != nullptr) && ((*(*(_1323_c))._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a8c7b562:;
			{
				jule::Ptr<_1a3c8982d_Data> _1403_d = (*(_10421_stmt)).cast_ptr<_1a3c8982d_Data>(&__jule_any_type23);;
				return _1a3bb402c_modelIsGotoScope((*(_1403_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1a8c79818:;
			{
				return false;;
			}
		}
		_match_end_1a8c797b3:;
	};
}



inline jule::I64 _1a3bb4725_countMatchType(jule::Ptr<_1a3bba85d_Match>* _14720_m, jule::Ptr<_1a3cbac27_TypeKind>* _14732_t) {
	jule::I64 _1486_n = 0LL;;
	jule::Str _1492_kind = _1a3cbb0e0_Str((*(_14732_t)).ptr());;
	_julec_label_1a8c866b0:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8c86ade:;
		if (it != expr_end) {
			jule::Ptr<_1a3bbb386_Case> *_1519_c = it;
			{
				if (((*(_1519_c)) == nullptr)) {
					goto _iter_next_1a8c86ade;
				};
				{
					auto expr = &((*((*(_1519_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8c87826:;
					if (it != expr_end) {
						jule::Ptr<_1a3c8982d_Data> *_15610_expr = it;
						{
							if (((*(_15610_expr)) == nullptr)) {
								goto _iter_end_1a8c86ade;
							};
							if ((_1492_kind == _1a3cbb0e0_Str((*((*(_15610_expr))))._field_Model.cast_ptr<_1a3cbac27_TypeKind>(&__jule_any_type84).ptr()))) {
								(_1486_n)++;
							};
						}
						_iter_next_1a8c87826:;
						++it;
						goto _iter_begin_1a8c87826;
					}
					_iter_end_1a8c87826:;
				};
			}
			_iter_next_1a8c86ade:;
			++it;
			goto _iter_begin_1a8c86ade;
		}
		_iter_end_1a8c86ade:;
	};
	return _1486_n;;
}



inline jule::Slice<jule::Ptr<_1a3c8982d_Data>> _1a3bb49de_getDatasFromTupleData(jule::Ptr<_1a3c8982d_Data>* _17131_d) {
	if ((_1a3cc019e_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1a8c8b484:;
				{
					return (*((*((*(_17131_d))))._field_Model.unsafe_cast_ptr<_1a3b6b8db_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1a8c89372:;
				{
					jule::Ptr<_1a3cc88e4_Tuple> _1778_t = _1a3cc019e_Tup((*((*(_17131_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1a3c8982d_Data>> _1788_r = jule::Slice<jule::Ptr<_1a3c8982d_Data>>::alloc(0LL, (*(_1778_t))._field_Types.len());;
					{
						auto expr = &((*_1778_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a8c8ab59:;
						if (it != expr_end) {
							jule::Ptr<_1a3cbac27_TypeKind> _17916_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1a3c8982d_Data>> &__jule_push_dest = _1788_r; __jule_push_dest.push(jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_17916_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1a8c8ab59:;
							++it;
							goto _iter_begin_1a8c8ab59;
						}
						_iter_end_1a8c8ab59:;
					};
					return _1788_r;;
				}
			}
			_match_end_1a8c8931c:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1a3c8982d_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1a3bb532a_checkMut(jule::Ptr<_1a3c08b54_Sema>* _20618_s, jule::Ptr<_1a3c8982d_Data>* _20629_left, jule::Ptr<_1a3c8982d_Data> _20646_right, jule::Ptr<_1a3b27a62_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1a8c8ede4:;
			{
				_1a3c0b78e_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*_20646_right.alloc)._field_Mutable))) && _1a3cbc5a8_Mutable((*_20646_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1a8c902e0:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1a3cbe8eb_Struct((*(_20646_right))._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1a3c0b78e_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_20646_right))._field_Kind), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a8c8ed7d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a8c8ecd4:;
	};
}



inline jule::Bool _1a3bb5814_checkAssign(jule::Ptr<_1a3c08b54_Sema>* _22521_s, jule::Ptr<_1a3c8982d_Data>* _22536_left, jule::Ptr<_1a3c8982d_Data> _22553_right, jule::Ptr<_1a3b27a62_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a3b770cd_FnIns> _2262_f = _1a3cbe665_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2262_f != nullptr) && ((*_2262_f.alloc)._field_Decl != nullptr)) && (*(*(_2262_f))._field_Decl.alloc)._field_Global)) {
		_1a3c0b78e_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1a3c8a235_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1a8c956ad:;
			{
				_1a3c0b78e_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1a3c0bb02_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1a8c95724:;
			{
				_1a3c0b78e_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1a3bb532a_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1a8c9578a:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a8c95603:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a8c9548d:;
	};
}



inline jule::Bool _1a3bb5acd_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1a8c95823:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1a3b4badb_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1a8c97913:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a8c977c0:;
			{
				return false;;
			}
		}
		_match_end_1a8c9776a:;
	};
}



inline jule::Bool _1a3bb5d97_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type42 || _match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1a8c980c8:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a8c98a57:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1a3c8982d_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type33) {
						_case_begin_1a8c9942b:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1a8c99c34:;
						{
							return false;;
						}
					}
					_match_end_1a8c99bce:;
				};
			}
		}
		else {
			_case_begin_1a8c9878d:;
			{
				return false;;
			}
		}
		_match_end_1a8c98150:;
	};
}



inline jule::Bool _1a3bb6161_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a8c9a1a7:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a8c992e9:;
			{
				return false;;
			}
		}
		_match_end_1a8c99294:;
	};
}



inline jule::U64 _1a3bd1016_removeEqFromOp(jule::U64 _222519_op) {
	{
		auto &_match_expr{ _222519_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1a8c9ae66:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1a8c9aecc:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1a8c9ab8b:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1a8c9ac02:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1a8c9b0ba:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1a8c9b131:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1a8c9b197:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1a8c9b21e:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1a8c9b296:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1a8c9b373:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1a8c9a5a3:;
			{
				return _222519_op;;
			}
		}
		_match_end_1a8c9aaae:;
	};
}



inline void _1a3bd1247_makeComptimeRange(jule::Ptr<_1a3c8982d_Data>* _225427_d) {
	{
		
		if ((_1a3cc06bb_comptimeStructFields((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8c9b76e:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3b8eb84_comptimeRange>(_1a3b8eb84_comptimeRange{._field_kind=jule::Trait(_1a3cc06bb_comptimeStructFields((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1a3b8e964_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data5)});
			}
		}
		else if ((_1a3cc0bd8_comptimeEnumFields((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8c9ecd3:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3b8eb84_comptimeRange>(_1a3b8eb84_comptimeRange{._field_kind=jule::Trait(_1a3cc0bd8_comptimeEnumFields((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1a3b8e964_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data5)});
			}
		}
		else if ((_1a3cc19a8_comptimeTypeInfos((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8c9ed49:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3b8eb84_comptimeRange>(_1a3b8eb84_comptimeRange{._field_kind=jule::Trait(_1a3cc19a8_comptimeTypeInfos((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1a3b8e964_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data5)});
			}
		}
		else if ((_1a3cc1205_comptimeParams((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8c9b7d5:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3b8eb84_comptimeRange>(_1a3b8eb84_comptimeRange{._field_kind=jule::Trait(_1a3cc1205_comptimeParams((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1a3b8e964_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data5)});
			}
		}
		else if ((_1a3cc1ec5_comptimeStatics((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8c9b84b:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3b8eb84_comptimeRange>(_1a3b8eb84_comptimeRange{._field_kind=jule::Trait(_1a3cc1ec5_comptimeStatics((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1a3b8e964_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data5)});
			}
		}
		else if ((_1a3cc2a0e_comptimeFiles((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8c9b8b2:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3b8eb84_comptimeRange>(_1a3b8eb84_comptimeRange{._field_kind=jule::Trait(_1a3cc2a0e_comptimeFiles((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1a3b8e964_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1a8c9b708:;
			{
				(*((*(_225427_d))))._field_Decl=true;
			}
		}
		_match_end_1a8c9e9a3:;
	};
}



inline jule::Bool _1a3bd1742_canComptimeMatch(jule::Ptr<_1a3c8982d_Data>* _227526_d) {
	if ((!(_1a3c835b3_isGoodValueToInfer(_227526_d)))) {
		return false;;
	};
	return (_1a3c8a235_IsConst((*(_227526_d)).ptr()) || (_1a3cc1c3e_comptimeTypeInfo((*((*(_227526_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Ptr<_1a3c31c26_Var> _1a3bd5bb9_findVarInPackage(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a41b41:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _4714_f = *it;
			{
				jule::Ptr<_1a3c31c26_Var> _487_v = _1a3c84d9a_FindVar(_4714_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_487_v != nullptr)) {
					return _487_v;;
				};
			}
			_iter_next_1a8a41b41:;
			++it;
			goto _iter_begin_1a8a41b41;
		}
		_iter_end_1a8a41b41:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3bd613c_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a42a98:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _5914_f = *it;
			{
				jule::Ptr<_1a3cb9e35_TypeAlias> _607_ta = _1a3c85296_FindTypeAlias(_5914_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_607_ta != nullptr)) {
					return _607_ta;;
				};
			}
			_iter_next_1a8a42a98:;
			++it;
			goto _iter_begin_1a8a42a98;
		}
		_iter_end_1a8a42a98:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b5e03d_Struct> _1a3bd656b_findStructInPackage(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a440a5:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _7114_f = *it;
			{
				jule::Ptr<_1a3b5e03d_Struct> _727_s = _1a3c85692_FindStruct(_7114_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_727_s != nullptr)) {
					return _727_s;;
				};
			}
			_iter_next_1a8a440a5:;
			++it;
			goto _iter_begin_1a8a440a5;
		}
		_iter_end_1a8a440a5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b740ec_Fn> _1a3bd6a22_findFnInPackage(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a455b2:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _8314_file = *it;
			{
				jule::Ptr<_1a3b740ec_Fn> _847_f = _1a3c85a8d_FindFn(_8314_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_847_f != nullptr)) {
					return _847_f;;
				};
			}
			_iter_next_1a8a455b2:;
			++it;
			goto _iter_begin_1a8a455b2;
		}
		_iter_end_1a8a455b2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b87a7d_Trait> _1a3bd6d63_findTraitInPackage(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a47196:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _9514_f = *it;
			{
				jule::Ptr<_1a3b87a7d_Trait> _967_t = _1a3c85dce_FindTrait(_9514_f.ptr(), (*(_9452_ident)));;
				if ((_967_t != nullptr)) {
					return _967_t;;
				};
			}
			_iter_next_1a8a47196:;
			++it;
			goto _iter_begin_1a8a47196;
		}
		_iter_end_1a8a47196:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b8a289_Enum> _1a3bd71d7_findEnumInPackage(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a473d8:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _10714_f = *it;
			{
				jule::Ptr<_1a3b8a289_Enum> _1087_e = _1a3c86220_FindEnum(_10714_f.ptr(), (*(_10651_ident)));;
				if ((_1087_e != nullptr)) {
					return _1087_e;;
				};
			}
			_iter_next_1a8a473d8:;
			++it;
			goto _iter_begin_1a8a473d8;
		}
		_iter_end_1a8a473d8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a3b8b994_TypeEnum> _1a3bd755b_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a48719:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _11914_f = *it;
			{
				jule::Ptr<_1a3b8b994_TypeEnum> _1207_e = _1a3c86561_FindTypeEnum(_11914_f.ptr(), (*(_11855_ident)));;
				if ((_1207_e != nullptr)) {
					return _1207_e;;
				};
			}
			_iter_next_1a8a48719:;
			++it;
			goto _iter_begin_1a8a48719;
		}
		_iter_end_1a8a48719:;
	};
	return nullptr;;
}



inline jule::Any _1a3bd7a9a_defByIdentPackage(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a49bd2:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _13014_file = *it;
			{
				jule::Any _1317_def = _1a3c8752e_defByIdent(_13014_file.ptr(), _12951_ident, _12963_binded);;
				if ((_1317_def != nullptr)) {
					return _1317_def;;
				};
			}
			_iter_next_1a8a49bd2:;
			++it;
			goto _iter_begin_1a8a49bd2;
		}
		_iter_end_1a8a49bd2:;
	};
	return nullptr;;
}



inline jule::Bool _1a3bddad4_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _1e7bc8b35_HasPrefix((*(_35518_f)), _1e7beee03_Join(jule::Slice<jule::Str>::make({_2121271ce_PathStdlib,_35526_p})));;
}



inline jule::Bool _1a3c06217_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a9249d2c:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a9249d93:;
			{
				jule::Ptr<_1a3b6ad6e_StructSubIdentExprModel> _187_model = (*(_1328_m)).cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_187_model))._field_Field != nullptr) && _1a3c06217_isValidModelForRef(&((*((*_187_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a9249e09:;
			{
				jule::Ptr<_1a3b665ea_UnaryExprModel> _217_unary = (*(_1328_m)).cast_ptr<_1a3b665ea_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_217_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1a3cbd895_Ptr((*((*_217_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1a3cbd60e_Sptr((*((*(_217_unary))._field_Expr))._field_Kind) == nullptr)) {
					return false;;
				};
				return _1a3c06217_isValidModelForRef(&((*(*(_217_unary))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a9249e70:;
			{
				jule::Ptr<_1a3b68a81_IndexingExprModel> _357_indexing = (*(_1328_m)).cast_ptr<_1a3b68a81_IndexingExprModel>(&__jule_any_type45);;
				return _1a3c06217_isValidModelForRef(&((*((*(_357_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1a9249557:;
			{
				return false;;
			}
		}
		_match_end_1a9249502:;
	};
}



inline _1e7c94ecb_Log _1a3c066bd_compilerErr(jule::Ptr<_1a3b27a62_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args) {
	_1e7c94ecb_Log _436_log = _1e7c94ecb_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4217_token))))._field_Row, ._field_Column=(*((*(_4217_token))))._field_Column, ._field_Path=(*((*((*(_4217_token))))._field_File))._field_Path, ._field_Text=_1e7c9543d_Logf(_4244_fmt, _4257_args), };;
	if (_4232_line) {
		_436_log._field_Line=_1a3b2e30a_GetRow((*((*(_4217_token))))._field_File, (*((*(_4217_token))))._field_Row);
	};
	return _436_log;;
}



inline jule::Bool _1a3c06a42_impIsLookupable(jule::Ptr<_1a3bd86d3_ImportInfo>* _5621_i, jule::Str* _5638_ident) {
	if ((*((*(_5621_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5621_i))))._field_ImportAll))) {
		if (((*((*(_5621_i))))._field_Selected.len() > 0LL)) {
			return _1a3bdb065_existIdent((*(_5621_i)).ptr(), (*(_5638_ident)));;
		};
	};
	return (*((*(_5621_i))))._field_ImportAll;;
}



inline void _1a3c06d72_appendRetVars(jule::Slice<jule::Ptr<_1a3c31c26_Var>>* _6823_dest, jule::Ptr<_1a3b770cd_FnIns>* _6842_f) {
	if ((_1a3b74570_IsVoid((*((*(_6842_f))))._field_Decl.ptr()) || ((*((*(_6842_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>> _736_types = _1a3b782cc_Types((*(_6842_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_6842_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9255ad5:;
		if (it != expr_end) {
			jule::I64 _747_i = it - expr->begin();
			jule::Ptr<_1a3b27a62_Token> _7414_ident = *it;
			{
				if ((_1a3b2a449_IsIgnoreIdent((*(_7414_ident))._field_Kind) || _1a3b2a713_IsAnonIdent((*_7414_ident.alloc)._field_Kind))) {
					goto _iter_next_1a9255ad5;
				};
				{ jule::Slice<jule::Ptr<_1a3c31c26_Var>> &__jule_push_dest = (*(_6823_dest)); __jule_push_dest.push(jule::new_ptr<_1a3c31c26_Var>(_1a3c31c26_Var{._field_Scope=(*((*(_6842_f))))._field_Scope, ._field_Token=_7414_ident, ._field_Ident=(*_7414_ident.alloc)._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=_736_types[_747_i]}), ._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()}), ._field_RetOrder=_747_i, })); };
			}
			_iter_next_1a9255ad5:;
			++it;
			_747_i++;
			goto _iter_begin_1a9255ad5;
		}
		_iter_end_1a9255ad5:;
	};
	if ((((*(*((*((*(_6842_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6823_dest)).len() == 1LL))) {
		(*((*(_6823_dest))[((*(_6823_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1a3c0715d_appendParamVars(jule::Slice<jule::Ptr<_1a3c31c26_Var>>* _9825_dest, jule::Ptr<_1a3b770cd_FnIns>* _9844_f) {
	if (((*((*(_9844_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9844_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a925a48b:;
		if (it != expr_end) {
			jule::Ptr<_1a3b76055_ParamIns> _10314_p = *it;
			{
				if ((_1a3b2a449_IsIgnoreIdent((*((*(_10314_p))._field_Decl))._field_Ident) || _1a3b2a713_IsAnonIdent((*(*(_10314_p))._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1a925a48b;
				};
				jule::Ptr<_1a3c31c26_Var> _1087_v = jule::new_ptr<_1a3c31c26_Var>(_1a3c31c26_Var{._field_Scope=(*((*(_9844_f))))._field_Scope, ._field_Token=(*(*(_10314_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_10314_p))._field_Decl.alloc)._field_Ident, ._field_Mutable=(*(*(_10314_p))._field_Decl.alloc)._field_Mutable, ._field_Used=true, ._field_Reference=(*(*(_10314_p))._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(), ._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()}), });;
				{
					
					if (_1a3b72c44_IsSelf((*(_10314_p))._field_Decl)) {
						_case_begin_1a925e2e7:;
						{
							(*((*(_1087_v))._field_Kind))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9844_f))))._field_Owner, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0)});
							(*_1087_v.alloc)._field_Reference=(!(_1a3b72eca_IsRef((*(_10314_p))._field_Decl)));
							if (_1a3b72eca_IsRef((*(_10314_p))._field_Decl)) {
								((*(_1087_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1087_v))._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait(jule::new_ptr<_1a3cc732c_Sptr>(_1a3cc732c_Sptr{._field_Elem=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_BindIdent=(*(*((*(_1087_v))._field_Kind))._field_Kind.alloc)._field_BindIdent, ._field_Kind=(*(*((*(_1087_v))._field_Kind))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data21);
							};
						}
					}
					else if ((*(*(_10314_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1a925e02d:;
						{
							(*((*(_1087_v))._field_Kind))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a3cc7d00_Slc>(_1a3cc7d00_Slc{._field_Elem=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_BindIdent=(*((*_10314_p.alloc)._field_Kind))._field_BindIdent, ._field_Kind=(*(*(_10314_p))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data22)});
						}
					}
					else {
						_case_begin_1a925deb7:;
						{
							(*((*(_1087_v))._field_Kind))._field_Kind=(*_10314_p.alloc)._field_Kind;
						}
					}
					_match_end_1a925dd96:;
				};
				{ jule::Slice<jule::Ptr<_1a3c31c26_Var>> &__jule_push_dest = (*(_9825_dest)); __jule_push_dest.push(_1087_v); };
			}
			_iter_next_1a925a48b:;
			++it;
			goto _iter_begin_1a925a48b;
		}
		_iter_end_1a925a48b:;
	};
}



inline void _1a3c07449_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>* _15834_dest, jule::Ptr<_1a3b770cd_FnIns>* _15859_f) {
	jule::I64 _1596_size = (*((*(_15859_f))))._field_Generics.len();;
	if (((*((*((*(_15859_f))))._field_Decl))._field_Owner != nullptr)) {
		_1596_size+=(*(*((*((*(_15859_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1596_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15859_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9267762:;
		if (it != expr_end) {
			jule::I64 _1687_i = it - expr->begin();
			jule::Ptr<_1a3cb9341_InsGeneric> _16814_g = *it;
			{
				jule::Ptr<_1a3b4a348_GenericDecl> _1697_decl = (*(*((*(_15859_f))))._field_Decl.alloc)._field_Generics[_1687_i];;
				{ jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1a3cb9e35_TypeAlias>(_1a3cb9e35_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1697_decl.alloc)._field_Token, ._field_Ident=(*(_1697_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=(*(_16814_g))._field_Kind}), })); };
			}
			_iter_next_1a9267762:;
			++it;
			_1687_i++;
			goto _iter_begin_1a9267762;
		}
		_iter_end_1a9267762:;
	};
	if (((*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1a3b61cbb_StructIns> _1817_owner = (*((*(_15859_f))))._field_Owner;;
		{
			auto expr = &((*_1817_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9268c91:;
			if (it != expr_end) {
				jule::I64 _1828_i = it - expr->begin();
				jule::Ptr<_1a3cb9341_InsGeneric> _18215_g = *it;
				{
					jule::Ptr<_1a3b4a348_GenericDecl> _1838_decl = (*((*(_1817_owner))._field_Decl))._field_Generics[_1828_i];;
					{ jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1a3cb9e35_TypeAlias>(_1a3cb9e35_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1838_decl.alloc)._field_Token, ._field_Ident=(*(_1838_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=(*(_18215_g))._field_Kind}), })); };
				}
				_iter_next_1a9268c91:;
				++it;
				_1828_i++;
				goto _iter_begin_1a9268c91;
			}
			_iter_end_1a9268c91:;
		};
	};
}



inline jule::Ptr<_1a3c844b5_SymbolTable> _1a3c077bd_findFile(jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>* _19618_files, jule::Ptr<_1a3b2d2e8_File>* _19642_handler) {
	{
		auto expr = _19618_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9267e5a:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _19714_fl = *it;
			{
				if (((*(_19714_fl))._field_File == (*(_19642_handler)))) {
					return _19714_fl;;
				};
			}
			_iter_next_1a9267e5a:;
			++it;
			goto _iter_begin_1a9267e5a;
		}
		_iter_end_1a9267e5a:;
	};
	return nullptr;;
}



inline void _1a3c07c74_pushSuggestion(_1e7c94ecb_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args) {
	(*(_20530_log))._field_Suggestion=_1e7c9543d_Logf(_20541_fmt, _20554_args);
}



inline void _1a3c3040b_pushImplemented(jule::Ptr<_1a3b87a7d_Trait> _292924_t, jule::Ptr<_1a3b5e03d_Struct>* _292940_d) {
	_julec_label_1a83489dc:;
	{
		
		if (((*(_292924_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1a834915d:;
			{
				{
					auto expr = &((*_292924_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a834a1c5:;
					if (it != expr_end) {
						jule::Ptr<_1a3b5e03d_Struct> _293310_s = *it;
						{
							if ((_293310_s == (*(_292940_d)))) {
								goto _match_end_1a8348c2e;
							};
						}
						_iter_next_1a834a1c5:;
						++it;
						goto _iter_begin_1a834a1c5;
					}
					_iter_end_1a834a1c5:;
				};
				goto _case_begin_1a8348cc8;
			}
		}
		else {
			_case_begin_1a8348cc8:;
			{
				(*(_292924_t))._field_Implemented=jule::append((*_292924_t.alloc)._field_Implemented,jule::Slice<jule::Ptr<_1a3b5e03d_Struct>>::make({(*(_292940_d))}));
			}
		}
		_match_end_1a8348c2e:;
	};
	{
		auto expr = &((*(_292924_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a834a549:;
		if (it != expr_end) {
			jule::Ptr<_1a3cc2de9_TypeSymbol> _294214_i = *it;
			{
				_1a3c3040b_pushImplemented(_1a3cbeb82_Trait((*(_294214_i))._field_Kind.ptr()), _292940_d);
			}
			_iter_next_1a834a549:;
			++it;
			goto _iter_begin_1a834a549;
		}
		_iter_end_1a834a549:;
	};
}



inline void _1a3c306e7_pushImplements(jule::Ptr<_1a3b5e03d_Struct>* _294724_s, jule::Ptr<_1a3b87a7d_Trait> _294740_t) {
	_julec_label_1a834b957:;
	{
		
		if (((*((*(_294724_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1a66ae5b3:;
			{
				{
					auto expr = &((*((*(_294724_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a66b01eb:;
					if (it != expr_end) {
						jule::Ptr<_1a3b87a7d_Trait> _295110_b = *it;
						{
							if ((_295110_b == _294740_t)) {
								goto _match_end_1a834bb99;
							};
						}
						_iter_next_1a66b01eb:;
						++it;
						goto _iter_begin_1a66b01eb;
					}
					_iter_end_1a66b01eb:;
				};
				goto _case_begin_1a834bc43;
			}
		}
		else {
			_case_begin_1a834bc43:;
			{
				{ jule::Slice<jule::Ptr<_1a3b87a7d_Trait>> &__jule_push_dest = (*((*(_294724_s))))._field_Implements; __jule_push_dest.push(_294740_t); };
			}
		}
		_match_end_1a834bb99:;
	};
	{
		auto expr = &((*(_294740_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a66b0570:;
		if (it != expr_end) {
			jule::Ptr<_1a3cc2de9_TypeSymbol> _296014_i = *it;
			{
				_1a3c306e7_pushImplements(_294724_s, _1a3cbeb82_Trait((*(_296014_i))._field_Kind.ptr()));
			}
			_iter_next_1a66b0570:;
			++it;
			goto _iter_begin_1a66b0570;
		}
		_iter_end_1a66b0570:;
	};
}



inline jule::Bool _1a3c70094_traitHasReferenceReceiver(jule::Ptr<_1a3b87a7d_Trait>* _2831_t) {
	{
		auto expr = &((*((*(_2831_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a944b2d6:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> *_299_f = it;
			{
				if ((*((*(_299_f))))._field_Statically) {
					goto _iter_next_1a944b2d6;
				};
				jule::Ptr<_1a3b72628_Param> _353_p = (*(*(_299_f)).alloc)._field_Params[0LL];;
				if ((_1a3b72eca_IsRef(_353_p.ptr()) && _1a3b72c44_IsSelf(_353_p))) {
					return true;;
				};
			}
			_iter_next_1a944b2d6:;
			++it;
			goto _iter_begin_1a944b2d6;
		}
		_iter_end_1a944b2d6:;
	};
	return false;;
}



inline jule::Bool _1a3c7044b_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1a3c8982d_Data>* _4333_d) {
	jule::Str _442_value = _1b57230eb_FmtFloat(_1b574a860_AsF64((*((*(_4333_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1b573d5de_CheckBitFloat(_442_value, _1b573c148_BitsizeOf((*(_4321_kind))));;
}



inline jule::Bool _1a3c707c0_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1a3c8982d_Data>* _4830_d) {
	jule::F64 _492_min = _1b5743737_Min(_4818_kind);;
	jule::F64 _502_max = _1b57439bd_Max(_4818_kind);;
	{
		
		if (_1b574c6a8_IsF64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1a6e32165:;
			{
				jule::F64 _533_x = _1b574a0ac_ReadF64((*((*(_4830_d))))._field_Constant);;
				jule::F64 _543_i;
				jule::F64 _546_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1b5588857_Modf(_533_x);
					_543_i = __jule_assign_result.__jule_result_arg0;
					_546_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_546_frac != 0LL)) {
					return false;;
				};
				return ((_543_i >= _492_min) && (_543_i <= _502_max));;
			}
		}
		else if (_1b574be05_IsU64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1a6e321cb:;
			{
				jule::F64 _603_x = _1b574a860_AsF64((*((*(_4830_d))))._field_Constant);;
				if ((_603_x <= _502_max)) {
					return true;;
				};
			}
		}
		else if (_1b574bb6e_IsI64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1a6e32253:;
			{
				jule::F64 _653_x = _1b574a860_AsF64((*((*(_4830_d))))._field_Constant);;
				return ((_492_min <= _653_x) && (_653_x <= _502_max));;
			}
		}
		_match_end_1a6e32055:;
	};
	return false;;
}



inline jule::Bool _1a3c70b88_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1a3c8982d_Data>* _7132_d) {
	jule::F64 _722_max = _1b57439bd_Max(_7120_kind);;
	if (((*((*(_7132_d))))._field_IsRune && _7120_kind.equal("u8", 2))) {
		return _1a3c537d6_IsAscii(static_cast<jule::I32>(_1b5749573_ReadI64((*((*(_7132_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1b574c6a8_IsF64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1a910c97b:;
			{
				jule::F64 _793_x = _1b574a0ac_ReadF64((*((*(_7132_d))))._field_Constant);;
				if ((_793_x < 0LL)) {
					return false;;
				};
				jule::F64 _833_i;
				jule::F64 _836_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1b5588857_Modf(_793_x);
					_833_i = __jule_assign_result.__jule_result_arg0;
					_836_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_836_frac != 0LL)) {
					return false;;
				};
				return (_833_i <= _722_max);;
			}
		}
		else if (_1b574be05_IsU64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1a910ca03:;
			{
				jule::F64 _893_x = _1b574a860_AsF64((*((*(_7132_d))))._field_Constant);;
				if ((_893_x <= _722_max)) {
					return true;;
				};
			}
		}
		else if (_1b574bb6e_IsI64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1a910ca69:;
			{
				jule::F64 _943_x = _1b574a860_AsF64((*((*(_7132_d))))._field_Constant);;
				return ((0LL <= _943_x) && (_943_x <= _722_max));;
			}
		}
		_match_end_1a910bc00:;
	};
	return false;;
}



inline jule::Bool _1a3c7100c_intAssignable(jule::Str _10018_kind, jule::Ptr<_1a3c8982d_Data>* _10030_d) {
	{
		
		if (_1b57469e3_IsSigInt(_10018_kind)) {
			_case_begin_1a66b75ee:;
			{
				return _1a3c707c0_sigAssignable(_10018_kind, _10030_d);;
			}
		}
		else if (_1b5746d01_IsUnsigInt(_10018_kind)) {
			_case_begin_1a66b79ea:;
			{
				return _1a3c70b88_unsigAssignable(_10018_kind, _10030_d);;
			}
		}
		else {
			_case_begin_1a66b7577:;
			{
				return false;;
			}
		}
		_match_end_1a66b7478:;
	};
}



inline void _1a3c7c425_checkMutRiskOfStructLit(jule::Ptr<_1a3c08b54_Sema>* _92033_s, jule::Ptr<_1a3b66ebe_StructLitExprModel>* _92044_m) {
	{
		auto expr = &((*((*(_92044_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a66b8787:;
		if (it != expr_end) {
			jule::Ptr<_1a3b66b28_StructArgExprModel> *_9219_arg = it;
			{
				if ((*((*((*((*(_9219_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1a66b8787;
				};
				if (((!((*((*(*(_9219_arg)).alloc)._field_Expr))._field_Mutable)) && _1a3cbc5a8_Mutable((*(*((*(_9219_arg))))._field_Expr.alloc)._field_Kind.ptr()))) {
					_1a3c0b78e_pushErr((*(_92033_s)).ptr(), (*(*(_9219_arg)).alloc)._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*((*(_9219_arg))))._field_Expr))._field_Kind), &__jule_any_type4)}));
				};
			}
			_iter_next_1a66b8787:;
			++it;
			goto _iter_begin_1a66b8787;
		}
		_iter_end_1a66b8787:;
	};
}



inline jule::Ptr<_1a3cbac27_TypeKind> _1a3c83261_lenKind(void) {
	return _1a3e34ed4_primInt;;
}



inline jule::Bool _1a3c835b3_isGoodValueToInfer(jule::Ptr<_1a3c8982d_Data>* _142124_d) {
	return (!(_1a3c89c18_IsNil((*(_142124_d)).ptr())));;
}



inline jule::Ptr<_1a3b3c55a_Directive> _1a3cb31c5_findDirective(jule::Slice<jule::Ptr<_1a3b3c55a_Directive>>* _425723_directives, jule::Str _425754_d) {
	{
		auto expr = _425723_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a91a0029:;
		if (it != expr_end) {
			jule::Ptr<_1a3b3c55a_Directive> _425814_dr = *it;
			{
				if (((*((*(_425814_dr))._field_Tag))._field_Kind == _425754_d)) {
					return _425814_dr;;
				};
			}
			_iter_next_1a91a0029:;
			++it;
			goto _iter_begin_1a91a0029;
		}
		_iter_end_1a91a0029:;
	};
	return nullptr;;
}



inline jule::Any _1a3cb358d_findBuiltinsImport(jule::Str* _426624_ident, jule::Ptr<_1a3bd86d3_ImportInfo> _426636_imp) {
	return _1a3e385e2_findPackageBuiltinDef(&((*(_426636_imp))._field_LinkPath), _426624_ident);;
}



inline void _1a3cb37be_fitBitsize(jule::Ptr<_1a3c8982d_Data>* _427520_d) {
	jule::Ptr<_1a3cc3801_Prim> _42766_prim = _1a3cbd378_Prim((*((*(_427520_d))))._field_Kind.ptr());;
	jule::I64 _42772_z = _1b573c148_BitsizeOf(_1a3cc3b42_Str(_42766_prim.ptr()));;
	{
		
		if (_1b574bb6e_IsI64((*((*(_427520_d))))._field_Constant.ptr())) {
			_case_begin_1a91a2812:;
			{
				jule::I64 _42803_k = _1b573db72_BitsizeOfInt(_1b5749573_ReadI64((*((*(_427520_d))))._field_Constant));;
				if (((_42803_k > _42772_z) || _1b5746d01_IsUnsigInt((*_42766_prim.alloc)._field_Kind))) {
					(*(*((*(_427520_d))))._field_Constant.alloc)._field_Kind=_1b573c489_IntFromBits(_42803_k);
					(*((*(_427520_d))))._field_Kind=(*((*(_1a3e37338_findBuiltinTypeAlias((*(*((*(_427520_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1b574be05_IsU64((*((*(_427520_d))))._field_Constant.ptr())) {
			_case_begin_1a91a2878:;
			{
				jule::I64 _42863_k = _1b573de3b_BitsizeOfUint(_1b5749809_ReadU64((*((*(_427520_d))))._field_Constant));;
				if (((_42863_k > _42772_z) || _1b57469e3_IsSigInt((*_42766_prim.alloc)._field_Kind))) {
					(*(*((*(_427520_d))))._field_Constant.alloc)._field_Kind=_1b573c720_UintFromBits(_42863_k);
					(*((*(_427520_d))))._field_Kind=(*((*(_1a3e37338_findBuiltinTypeAlias((*(*((*(_427520_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1b574c6a8_IsF64((*((*(_427520_d))))._field_Constant.ptr())) {
			_case_begin_1a91a2900:;
			{
				if ((_42772_z == 64LLU)) {
					return;;
				};
				jule::I64 _42963_k = _1b573d8a8_BitsizeOfFloat(_1b574a0ac_ReadF64((*((*(_427520_d))))._field_Constant));;
				if ((_42963_k > _42772_z)) {
					(*(*((*(_427520_d))))._field_Constant.alloc)._field_Kind=_1b573c9d9_FloatFromBits(_42963_k);
					(*((*(_427520_d))))._field_Kind=(*((*(_1a3e37338_findBuiltinTypeAlias((*(*((*(_427520_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1a91a2702:;
	};
}



inline void _1a3cb3aee_makeStructLitAlloc(jule::Ptr<_1a3c8982d_Data>* _430428_d, jule::Ptr<_1a3b66ebe_StructLitExprModel>* _430443_lit) {
	(*((*(_430428_d))))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3cc732c_Sptr>(_1a3cc732c_Sptr{._field_Elem=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait((*((*(_430443_lit))))._field_Strct, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data21)});
	(*((*(_430428_d))))._field_Model=jule::Any(jule::new_ptr<_1a3b672bb_AllocStructLitExprModel>(_1a3b672bb_AllocStructLitExprModel{._field_Lit=(*(_430443_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1a3c31c26_Var> _1a3cb3e73_buildErrorVar(jule::Ptr<_1a3bb664a_Scope>* _431523_s, jule::Ptr<_1a3b4619b_FnCallExpr>* _431539_fc) {
	return jule::new_ptr<_1a3c31c26_Var>(_1a3c31c26_Var{._field_Scope=(*(_431523_s)), ._field_Token=(*((*(_431539_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1a3e37338_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>()}), });;
}



inline jule::Any _1a3cb42e7_findBuiltinsSema(jule::Str* _433022_ident, jule::Ptr<_1a3c08b54_Sema> _433038_s) {
	{
		auto expr = &((*((*(_433038_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a91ae005:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _433114_imp = *it;
			{
				if (((*(_433114_imp))._field_ImportAll || _1a3bdb065_existIdent(_433114_imp, (*(_433022_ident))))) {
					jule::Any _43338_def = _1a3cb358d_findBuiltinsImport(_433022_ident, _433114_imp);;
					if ((_43338_def != nullptr)) {
						return _43338_def;;
					};
				};
			}
			_iter_next_1a91ae005:;
			++it;
			goto _iter_begin_1a91ae005;
		}
		_iter_end_1a91ae005:;
	};
	jule::Str _43416_ppath = _1a3b2d99c_Dir((*(*(_433038_s))._field_file.alloc)._field_File.ptr());;
	if (_1e7bc8b35_HasPrefix(_43416_ppath, _2121271ce_PathStdlib)) {
		(_43416_ppath).mut_slice(_2121271ce_PathStdlib.len());;
		_43416_ppath=(jule::Str::lit("std", 3) + _1e7bd4338_Replace(_43416_ppath, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));
		return _1a3e385e2_findPackageBuiltinDef(&(_43416_ppath), _433022_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1a3cb45b1_isOkForShifting(jule::Ptr<_1a3c8982d_Data>* _435525_d) {
	if (_1a3c8a235_IsConst((*(_435525_d)).ptr())) {
		{
			
			if (_1b574bb6e_IsI64((*((*(_435525_d))))._field_Constant.ptr())) {
				_case_begin_1a9576ba3:;
				{
					return (_1b5749573_ReadI64((*((*(_435525_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1b574be05_IsU64((*((*(_435525_d))))._field_Constant.ptr())) {
				_case_begin_1a9576c4c:;
				{
					return true;;
				}
			}
			else if (_1b574c6a8_IsF64((*((*(_435525_d))))._field_Constant.ptr())) {
				_case_begin_1a9576cc4:;
				{
					return (_1b574a0ac_ReadF64((*((*(_435525_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1a9576b1a:;
				{
					return false;;
				}
			}
			_match_end_1a9576a4e:;
		};
	};
	jule::Ptr<_1a3cc3801_Prim> _43682_prim = _1a3cbd378_Prim((*((*(_435525_d))))._field_Kind.ptr());;
	return ((_43682_prim != nullptr) && _1b57470ba_IsInt(_1a3cc3b42_Str(_43682_prim)));;
}



inline jule::Bool _1a3cb498a_isInstancedStruct(jule::Ptr<_1a3b61cbb_StructIns> _437222_s) {
	return ((*((*(_437222_s))._field_Decl))._field_Generics.len() == (*_437222_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1a3cb4c87_isPtrArithmeticCompatible(jule::Ptr<_1a3c8982d_Data>* _437635_l, jule::Ptr<_1a3c8982d_Data>* _437650_r) {
	jule::Ptr<_1a3ccaae4_Ptr> _43772_ptr = _1a3cbd895_Ptr((*((*(_437650_r))))._field_Kind.ptr());;
	if ((_43772_ptr != nullptr)) {
		return _1a3cbb431_Equal((*(_1a3cbd895_Ptr((*((*(_437635_l))))._field_Kind)))._field_Elem, (*_43772_ptr.alloc)._field_Elem);;
	};
	if ((_1a3c8a235_IsConst((*(_437650_r)).ptr()) && (*((*(_437650_r))))._field_untyped)) {
		return (_1a3c7100c_intAssignable(jule::Str::lit("int", 3), _437650_r) || _1a3c7100c_intAssignable(jule::Str::lit("uint", 4), _437650_r));;
	};
	_1a3c714e6_typeCompatibilityChecker _43866_tcc = _1a3c714e6_typeCompatibilityChecker{._field_dest=_1a3e34ed4_primInt, ._field_src=(*((*(_437650_r))))._field_Kind, };;
	if (_1a3c72bac_check(&_43866_tcc)) {
		return true;;
	};
	_43866_tcc._field_dest=_1a3e34b1b_primUint;
	return _1a3c72bac_check(&_43866_tcc);;
}



inline void _1a3cb512d_applyCastKindModel(jule::Ptr<_1a3c8982d_Data>* _439728_d, jule::Ptr<_1a3cbac27_TypeKind>* _439743_t, jule::Ptr<_1a3b27a62_Token>* _439762_token) {
	(*((*(_439728_d))))._field_Model=jule::Any(jule::new_ptr<_1a3b6784e_CastingExprModel>(_1a3b6784e_CastingExprModel{._field_Token=(*(_439762_token)), ._field_Expr=jule::new_ptr<_1a3c8982d_Data>((*((*(_439728_d))))), ._field_Kind=(*(_439743_t)), ._field_ExprKind=(*((*(_439728_d))))._field_Kind}), &__jule_any_type93);
}



inline void _1a3cb54c4_applyCastKind(jule::Ptr<_1a3c8982d_Data>* _440623_d, jule::Ptr<_1a3cbac27_TypeKind>* _440638_t, jule::Ptr<_1a3b27a62_Token>* _440657_token) {
	_1a3cb512d_applyCastKindModel(_440623_d, _440638_t, _440657_token);
	(*((*(_440623_d))))._field_Kind=(*(_440638_t));
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cb56d3_buildVoidData(void) {
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e33c4c_primVoid, });;
}



inline jule::Str _1a3cb5a57_checkDataForIntegerIndexing(jule::Ptr<_1a3c8982d_Data>* _441737_d, jule::Ptr<_1a3b27a62_Token>* _441752_token) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_441737_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1a3cbd378_Prim((*((*(_441737_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1a9582120:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1b57470ba_IsInt(_1a3cc3b42_Str(_1a3cbd378_Prim((*((*(_441737_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1a9582186:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1a3c8a235_IsConst((*(_441737_d)).ptr())) {
			_case_begin_1a95821ec:;
			{
				if ((_1b574a860_AsF64((*((*(_441737_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1a3cbd378_Prim((*((*(_441737_d))))._field_Kind.ptr()) == nullptr) || _1a3c8a235_IsConst((*(_441737_d)).ptr()) || (_1b573bd7e_RealKindOf(_1a3cc3b42_Str(_1a3cbd378_Prim((*((*(_441737_d))))._field_Kind).ptr())) != _1b573bd7e_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1a9582263:;
			{
				_1a3cb54c4_applyCastKind(_441737_d, &(_1a3e34ed4_primInt), _441752_token);
			}
		}
		_match_end_1a9582065:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1a3cb5ded_applyCastModelByEnum(jule::Ptr<_1a3c8982d_Data>* _444230_d, jule::Ptr<_1a3b8a289_Enum> _444244_e, jule::Ptr<_1a3b27a62_Token>* _444259_token) {
	if ((_444244_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1a3cc3801_Prim> _44462_p = _1a3cbd378_Prim((*((*(_444244_e))._field_Kind))._field_Kind.ptr());;
	if (_1a3cc6c88_IsStr(_44462_p.ptr())) {
		return;;
	};
	_1a3cb512d_applyCastKindModel(_444230_d, &((*(*(_444244_e))._field_Kind.alloc)._field_Kind), _444259_token);
}



inline void _1a3cb61d9_castConstByType(jule::Str* _445321_t, jule::Ptr<_1a3c8982d_Data>* _445334_d) {
	{
		
		if (_1b57469e3_IsSigInt((*(_445321_t)))) {
			_case_begin_1a958806b:;
			{
				{
					auto _match_expr{ _1b573c148_BitsizeOf(_1b573bd7e_RealKindOf((*(_445321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a9588b2c:;
						{
							_1b574ab18_SetI64((*((*(_445334_d))))._field_Constant.ptr(), _1b574a343_AsI64((*((*(_445334_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a9588ba4:;
						{
							_1b574ab18_SetI64((*((*(_445334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1b574a343_AsI64((*((*(_445334_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1a9588c1a:;
						{
							_1b574ab18_SetI64((*((*(_445334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1b574a343_AsI64((*((*(_445334_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1a9588c81:;
						{
							_1b574ab18_SetI64((*((*(_445334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1b574a343_AsI64((*((*(_445334_d))))._field_Constant))));
						}
					}
					_match_end_1a958880d:;
				};
			}
		}
		else if (_1b5746d01_IsUnsigInt((*(_445321_t)))) {
			_case_begin_1a9588115:;
			{
				{
					auto _match_expr{ _1b573c148_BitsizeOf(_1b573bd7e_RealKindOf((*(_445321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a66cd03d:;
						{
							_1b574adc1_SetU64((*((*(_445334_d))))._field_Constant.ptr(), _1b574a5c9_AsU64((*((*(_445334_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a66cd0b5:;
						{
							_1b574adc1_SetU64((*((*(_445334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1b574a5c9_AsU64((*((*(_445334_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1a66cd12b:;
						{
							_1b574adc1_SetU64((*((*(_445334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1b574a5c9_AsU64((*((*(_445334_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1a66cd192:;
						{
							_1b574adc1_SetU64((*((*(_445334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1b574a5c9_AsU64((*((*(_445334_d))))._field_Constant))));
						}
					}
					_match_end_1a66ccc1e:;
				};
			}
		}
		else if (_1b574740b_IsFloat((*(_445321_t)))) {
			_case_begin_1a958817b:;
			{
				{
					auto _match_expr{ _1b573c148_BitsizeOf(_1b573bd7e_RealKindOf((*(_445321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a66cd538:;
						{
							_1b574b6da_SetF64((*((*(_445334_d))))._field_Constant.ptr(), _1b574a860_AsF64((*((*(_445334_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a66d2196:;
						{
							_1b574b6da_SetF64((*((*(_445334_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1b574a860_AsF64((*((*(_445334_d))))._field_Constant))));
						}
					}
					_match_end_1a66d11c8:;
				};
			}
		}
		_match_end_1a9587e17:;
	};
}



inline void _1a3cb6706_updateModelToGenericIns(jule::Any* _448733_m, jule::Ptr<_1a3b770cd_FnIns>* _448752_f) {
	{
		auto &_match_expr{ (*(_448733_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a66d45c7:;
			{
				(*(_448733_m))=jule::Any((*(_448752_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a66ca656:;
			{
				(*((*(_448733_m)).cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>(&__jule_any_type98)))._field_Method=(*(_448752_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1a66d4660:;
			{
				(*((*(_448733_m)).cast_ptr<_1a3b6b215_StructStaticIdentExprModel>(&__jule_any_type96)))._field_Method=(*(_448752_f));
			}
		}
		_match_end_1a66d4572:;
	};
}



inline jule::Bool _1a3cb696a_pushSubIdentFromExpr(jule::Any _449829_expr, jule::Ptr<_1a3b3da12_SubIdentTypeDecl>* _449850_t) {
	{
		auto &_match_expr{ _449829_expr };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a958a25a:;
			{
				jule::Ptr<_1a3b43c8c_IdentExpr> _45017_e = _449829_expr.unsafe_cast_ptr<_1a3b43c8c_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a3b3d748_IdentTypeDecl>> &__jule_push_dest = (*((*(_449850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a3b3d748_IdentTypeDecl>(_1a3b3d748_IdentTypeDecl{._field_Token=(*(_45017_e))._field_Token, ._field_Ident=(*_45017_e.alloc)._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a958a876:;
			{
				jule::Ptr<_1a3b45585_SubIdentExpr> _45077_e = _449829_expr.unsafe_cast_ptr<_1a3b45585_SubIdentExpr>();;
				if ((!(_1a3cb696a_pushSubIdentFromExpr((*((*(_45077_e))._field_Expr))._field_Kind, _449850_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1a3b3d748_IdentTypeDecl>> &__jule_push_dest = (*((*(_449850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a3b3d748_IdentTypeDecl>(_1a3b3d748_IdentTypeDecl{._field_Token=(*_45077_e.alloc)._field_Ident, ._field_Ident=(*((*_45077_e.alloc)._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1a958a425:;
			{
				return false;;
			}
		}
		_match_end_1a958a3c0:;
	};
	return true;;
}



inline jule::Str _1a3cb6c34_constoa(jule::Ptr<_1b5747b9d_Const>* _452113_c) {
	{
		
		if (_1b574bb6e_IsI64((*(_452113_c)).ptr())) {
			_case_begin_1a958d79c:;
			{
				return _1b5739a4c_FmtInt(_1b5749573_ReadI64((*(_452113_c)).ptr()), 10LL);;
			}
		}
		else if (_1b574be05_IsU64((*(_452113_c)).ptr())) {
			_case_begin_1a958d66a:;
			{
				return _1b5739684_FmtUint(_1b5749809_ReadU64((*(_452113_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1a958aa63:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a958d318:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3cb7163_evalEnumStatic(jule::Ptr<_1a3b8a289_Enum>* _453224_enm, jule::Ptr<_1a3b8971c_EnumItem>* _453241_item, jule::Ptr<_1a3b27a62_Token>* _453263_token) {
	jule::Ptr<_1a3c8982d_Data> _45336_d = jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait((*(_453224_enm)), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data3)}), });;
	if (((*(_453241_item)) != nullptr)) {
		(*(_45336_d))._field_Constant=jule::new_ptr<_1b5747b9d_Const>((*(*((*((*((*(_453241_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_45336_d.alloc)._field_Model=jule::Any((*_45336_d.alloc)._field_Constant, &__jule_any_type19);
		_1a3cb5ded_applyCastModelByEnum(&(_45336_d), (*(_453224_enm)), _453263_token);
	};
	return _45336_d;;
}



inline jule::Ptr<_1a3b66ebe_StructLitExprModel> _1a3cb742c_isLitBased(jule::Any* _454920_m) {
	{
		auto &_match_expr{ (*(_454920_m)) };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a959341c:;
			{
				return (*(_454920_m)).cast_ptr<_1a3b66ebe_StructLitExprModel>(&__jule_any_type95);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a9593483:;
			{
				return (*((*(_454920_m)).cast_ptr<_1a3b672bb_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a95934e9:;
			{
				jule::Ptr<_1a3b6ad6e_StructSubIdentExprModel> _45567_ssi = (*(_454920_m)).cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>(&__jule_any_type98);;
				return _1a3cb742c_isLitBased(&((*((*(_45567_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1a9593560:;
			{
				jule::Ptr<_1a3b6784e_CastingExprModel> _45597_c = (*(_454920_m)).cast_ptr<_1a3b6784e_CastingExprModel>(&__jule_any_type93);;
				return _1a3cb742c_isLitBased(&((*((*(_45597_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1a9592ecc:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9592e77:;
	};
}



inline void _1a3cb7718_makeImplicitDeref(jule::Ptr<_1a3c8982d_Data>* _456627_d, jule::Ptr<_1a3b27a62_Token> _456641_baseToken) {
	jule::Ptr<_1a3b665ea_UnaryExprModel> _45676_unary = jule::new_ptr<_1a3b665ea_UnaryExprModel>(_1a3b665ea_UnaryExprModel{._field_Expr=jule::new_ptr<_1a3c8982d_Data>((*((*(_456627_d))))), ._field_Op=jule::new_ptr<_1a3b27a62_Token>((*(_456641_baseToken)))});;
	(*((*(_45676_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*(*(_45676_unary))._field_Op.alloc)._field_Kind=jule::Str::lit("*", 1);
	(*((*(_456627_d))))._field_Model=jule::Any(_45676_unary, &__jule_any_type110);
}



inline void _1a908783a_updateRefer(jule::Ptr<_1a3b7a257_ReferenceStack> _457723_ref, jule::Ptr<_1a3b770cd_FnIns>* _457746_old, jule::Ptr<_1a3b770cd_FnIns>* _457759_new) {
	{
		auto expr = &((*(_457723_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9089298:;
		if (it != expr_end) {
			jule::I64 _45786_i = it - expr->begin();
			jule::Any _45789_sym = *it;
			{
				if ((__jule_any_type7_compare(_45789_sym, (*(_457746_old))))) {
					(*(_457723_ref))._field_buffer[_45786_i]=jule::Any((*(_457759_new)), &__jule_any_type7);
				};
			}
			_iter_next_1a9089298:;
			++it;
			_45786_i++;
			goto _iter_begin_1a9089298;
		}
		_iter_end_1a9089298:;
	};
}



inline void _1a3cb7d9a_makeVariadic(jule::Ptr<_1a3c8982d_Data>* _458522_d, jule::Ptr<_1a3cbac27_TypeKind> _458536_elem) {
	(*((*(_458522_d))))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_BindIdent=(*_458536_elem.alloc)._field_BindIdent, ._field_Generic=(*(_458536_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_458536_elem.alloc)._field_Kind});
}



inline jule::Bool _1a3cb82c9_isVarCaptured(jule::Ptr<_1a3bbdb08_scopeChecker> _459918_r, jule::Ptr<_1a3bbdb08_scopeChecker> _459940_s, jule::Ptr<_1a3c31c26_Var> _459958_v) {
	if (((*(_459958_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_459940_s))._field_scope == (*_459958_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_459940_s.alloc)._field_parent == nullptr) || (_459940_s == _459918_r))) {
				goto _iter_end_1a66d4709;
			};
			_459940_s=(*_459940_s.alloc)._field_parent;
		}
	_iter_next_1a66d4709:;
	}
	_iter_end_1a66d4709:;;
	return true;;
}



inline jule::Bool _1a3cd647e_kindUsesGenerics(jule::Ptr<_1a3cbac27_TypeKind>* _171626_k, jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>>* _171641_generics) {
	{
		auto expr = _171641_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a5c0ab:;
		if (it != expr_end) {
			jule::Ptr<_1a3b4a348_GenericDecl> *_17179_g = it;
			{
				if (static__1a3cd6050_exist(&((*((*(_17179_g))))._field_Ident), _171626_k)) {
					return true;;
				};
			}
			_iter_next_1a9a5c0ab:;
			++it;
			goto _iter_begin_1a9a5c0ab;
		}
		_iter_end_1a9a5c0ab:;
	};
	return false;;
}



inline jule::Bool _1a3cd6847_hasDirective(jule::Slice<jule::Ptr<_1a3b3c55a_Directive>>* _172622_directives, jule::Str _172653_tag) {
	{
		auto expr = _172622_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a5c84d:;
		if (it != expr_end) {
			jule::Ptr<_1a3b3c55a_Directive> _172714_dr = *it;
			{
				if (((*((*(_172714_dr))._field_Tag))._field_Kind == _172653_tag)) {
					return true;;
				};
			}
			_iter_next_1a9a5c84d:;
			++it;
			goto _iter_begin_1a9a5c84d;
		}
		_iter_end_1a9a5c84d:;
	};
	return false;;
}



inline jule::Bool _1a3cd6b11_canGetPtr(jule::Ptr<_1a3c8982d_Data>* _173519_d) {
	{
		
		if ((!((*((*(_173519_d))))._field_Lvalue)) || _1a3c8a235_IsConst((*(_173519_d)).ptr())) {
			_case_begin_1a9a5e29a:;
			{
				return false;;
			}
		}
		else if ((_1a3cbe665_Fn((*((*(_173519_d))))._field_Kind.ptr()) != nullptr) || (_1a3cbdb2b_Enum((*((*(_173519_d))))._field_Kind) != nullptr)) {
			_case_begin_1a9a5e333:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a9a5e234:;
			{
				return true;;
			}
		}
		_match_end_1a9a5d70b:;
	};
}



inline jule::Bool _1a3cd6e52_isValidForSptrType(jule::Ptr<_1a3cbac27_TypeKind>* _174728_t) {
	jule::Ptr<_1a3b61cbb_StructIns> _17486_s = _1a3cbe8eb_Struct((*(_174728_t)).ptr());;
	if ((((_17486_s != nullptr) && ((*_17486_s.alloc)._field_Decl != nullptr)) && (*(*(_17486_s))._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1a3cd71d8_isValidForRef(jule::Ptr<_1a3cbac27_TypeKind>* _175623_t) {
	return (_1a3cbe665_Fn((*(_175623_t)).ptr()) == nullptr);;
}



inline jule::Bool _1a3cd74a2_isBuiltinStrConvertable(jule::Ptr<_1a3cbac27_TypeKind>* _175933_t) {
	return ((((!(_1a3cbc08b_Void((*(_175933_t)).ptr()))) && (_1a3cbe665_Fn((*(_175933_t)).ptr()) == nullptr)) && (_1a3cc019e_Tup((*(_175933_t)).ptr()) == nullptr)) && (!(_1a3cc0435_comptime((*(_175933_t)).ptr()))));;
}



inline jule::Str _1a3cd776b_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _176327_tokens) {
	if ((((*(_176327_tokens)).len() == 1LL) && ((*((*(_176327_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _17676_n = 0LL;;
	{
		auto expr = _176327_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a65108:;
		if (it != expr_end) {
			jule::Ptr<_1a3b27a62_Token> *_17689_token = it;
			{
				_17676_n+=(*((*(_17689_token))))._field_Kind.len();
				_17676_n+=2LL;
			}
			_iter_next_1a9a65108:;
			++it;
			goto _iter_begin_1a9a65108;
		}
		_iter_end_1a9a65108:;
	};
	_1e7be2632_StrBuilder _17726_s = static__1e7be28eb_New(_17676_n);;
	{
		auto expr = _176327_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a62d09:;
		if (it != expr_end) {
			jule::I64 _17736_i = it - expr->begin();
			jule::Ptr<_1a3b27a62_Token> *_17739_token = it;
			{
				_1e7beb262_WriteStr(&_17726_s, (*((*(_17739_token))))._field_Kind);
				if ((((*(_176327_tokens)).len() - _17736_i) > 1LL)) {
					_1e7beb262_WriteStr(&_17726_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1a9a62d09:;
			++it;
			_17736_i++;
			goto _iter_begin_1a9a62d09;
		}
		_iter_end_1a9a62d09:;
	};
	return _1e7beba59_Str(&_17726_s);;
}



inline jule::Ptr<_1a3cc3801_Prim> _1a3cd7b45_buildPrimType(jule::Str _178218_kind) {
	return jule::new_ptr<_1a3cc3801_Prim>(_1a3cc3801_Prim{._field_Kind=_178218_kind});;
}



inline void _1a3cd822d_applyImplicitCast(jule::Ptr<_1a3cbac27_TypeKind>* _181027_dest, jule::Ptr<_1a3c8982d_Data>* _181049_d, jule::Ptr<_1a3b27a62_Token>* _181064_token) {
	if (_1a3cbbd05_IsNil((*((*(_181049_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1a3cc3801_Prim> _18142_destPrim = _1a3cbd378_Prim((*(_181027_dest)).ptr());;
	if (((_18142_destPrim != nullptr) && _1a3cc701e_IsAny(_18142_destPrim))) {
		jule::Ptr<_1a3cc3801_Prim> _18163_prim = _1a3cbd378_Prim((*((*(_181049_d))))._field_Kind);;
		if (((_18163_prim == nullptr) || (!(_1a3cc701e_IsAny(_18163_prim.ptr()))))) {
			_1a3cb54c4_applyCastKind(_181049_d, _181027_dest, _181064_token);
		};
		return;;
	};
	jule::Ptr<_1a3b87a7d_Trait> _18232_dt = _1a3cbeb82_Trait((*(_181027_dest)).ptr());;
	if ((_18232_dt != nullptr)) {
		jule::Ptr<_1a3b87a7d_Trait> _18253_bt = _1a3cbeb82_Trait((*((*(_181049_d))))._field_Kind);;
		if (((_18253_bt == nullptr) || (_18253_bt != _18232_dt))) {
			_1a3cb512d_applyCastKindModel(_181049_d, _181027_dest, _181064_token);
			return;;
		};
	};
	if (((_1a3cbddb2_TypeEnum((*(_181027_dest)).ptr()) != nullptr) && (_1a3cbddb2_TypeEnum((*((*(_181049_d))))._field_Kind) == nullptr))) {
		_1a3cb512d_applyCastKindModel(_181049_d, _181027_dest, _181064_token);
		return;;
	};
}



inline jule::Bool _1a3cd84e7_validTypeForXof(jule::Ptr<_1a3cbac27_TypeKind>* _183825_t) {
	return ((!(_1a3cbc08b_Void((*(_183825_t)).ptr()))) && (_1a3cbe665_Fn((*(_183825_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1a3c844b5_SymbolTable__jule_tuple_s_1e7c94ecb_Log _1a3cdb60a_buildSymbols(jule::Ptr<_1a3b3b180_Ast>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1a3b8122a_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1a3c844b5_SymbolTable__jule_tuple_s_1e7c94ecb_Log __jule_func_result;
	jule::Ptr<_1a3b8122a_symbolBuilder> _176_sb = jule::new_ptr<_1a3b8122a_symbolBuilder>(_1a3b8122a_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1a3b86b7b_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _1a3cdb93a_collectImplicitImports(jule::Ptr<_1a3c08b54_Sema>* _3132_s, jule::Ptr<_1a3c844b5_SymbolTable>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b24838:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _3214_imp = *it;
			{
				if ((!(_1a3b87077_isImplicitImport(_3214_imp)))) {
					goto _iter_end_1a9b24838;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std::runtime", 12)) {
						_case_begin_1a9b259d2:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_1a9b25086:;
						{
							jule::panic(jule::Str::lit("implementation mistake in implicit import collection, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_1a9b2563b:;
				};
			}
			_iter_next_1a9b24838:;
			++it;
			goto _iter_begin_1a9b24838;
		}
		_iter_end_1a9b24838:;
	};
}



inline __jule_tuple_x_1a3bdb609_Package__jule_tuple_s_1e7c94ecb_Log _1a3cdbd69_analyzePackage(jule::Slice<jule::Ptr<_1a3b3b180_Ast>>* _4524_files, jule::Trait* _4544_importer, jule::I64* _4565_flags) {
	__jule_tuple_x_1a3bdb609_Package__jule_tuple_s_1e7c94ecb_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>> _476_tables = jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>>::alloc(0LL, (*(_4524_files)).len());;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b266d6:;
		if (it != expr_end) {
			jule::Ptr<_1a3b3b180_Ast> _4814_f = *it;
			{
				jule::Ptr<_1a3c844b5_SymbolTable> _497_table;
				jule::Slice<_1e7c94ecb_Log> _4918_errors;
				({
					__jule_tuple_x_1a3c844b5_SymbolTable__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a3cdb60a_buildSymbols(&(_4814_f), _4544_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1a3c844b5_SymbolTable>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_1a9b266d6:;
			++it;
			goto _iter_begin_1a9b266d6;
		}
		_iter_end_1a9b266d6:;
	};
	jule::Ptr<_1a3c08b54_Sema> _566_sema = jule::new_ptr<_1a3c08b54_Sema>(_1a3c08b54_Sema{._field_flags=(*(_4565_flags)), ._field_meta=jule::new_ptr<_1a3c0802c_commonSemaMeta>()});;
	_1a3cdb93a_collectImplicitImports(&(_566_sema), &(_476_tables[0LL]));
	_1a3c2d64b_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1a3bdb609_Package> _706_pkg = jule::new_ptr<_1a3bdb609_Package>(_1a3bdb609_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _706_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a3bdb609_Package__jule_tuple_s_1e7c94ecb_Log _1a3cdc320_AnalyzePackage(jule::Slice<jule::Ptr<_1a3b3b180_Ast>> _9423_files, jule::Trait _9442_importer, jule::I64 _9462_flags) {
	__jule_tuple_x_1a3bdb609_Package__jule_tuple_s_1e7c94ecb_Log __jule_func_result;
	if ((_9423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1a3cdbd69_analyzePackage(&(_9423_files), &(_9442_importer), &(_9462_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1a3b770cd_FnIns> _1a3e33334_findBuiltinFunc(jule::Str* _2621_ident) {
	{
		auto &_match_expr{ (*(_2621_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1a9b30c2e:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _2914_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e38d95_builtinCallerOut), });;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1a9b30c95:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _3214_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e392c4_builtinCallerOutln), });;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1a9b30d1c:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _3514_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e39703_builtinCallerNew), });;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1a9b30d94:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _3814_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e39b32_builtinCallerPanic), });;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1a9b3103c:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _4114_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e3a292_builtinCallerMake), });;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1a9b310a3:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _4414_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e3a5b1_builtinCallerAppend), });;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1a9b3112a:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _4714_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e3aec9_builtinCallerCopy), });;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1a9b311a2:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _5014_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e3c66d_builtinCallerLen), });;
				return _5014_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1a9b312c3:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _5314_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e3ce21_builtinCallerCap), });;
				return _5314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1a9b31339:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _5614_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e3d839_builtinCallerDelete), });;
				return _5614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1a9b313a0:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _5914_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e3dc68_builtinCallerAssert), });;
				return _5914_f;;
			}
		}
		else {
			_case_begin_1a9b30778:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b30a31:;
	};
}



inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3e33642_primTypeAlias(jule::Ptr<_1a3cbac27_TypeKind>* _6623_k) {
	return jule::new_ptr<_1a3cb9e35_TypeAlias>(_1a3cb9e35_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_1a3c31c26_Var> _1a3e36ee7_findBuiltinVar(jule::Str* _9420_ident) {
	{
		auto &_match_expr{ (*(_9420_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1a9b3861b:;
			{
				static jule::Ptr<_1a3c31c26_Var> _9714_v = jule::new_ptr<_1a3c31c26_Var>(_1a3c31c26_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(_1a3cc2de9_TypeSymbol{._field_Kind=_1a3e33950_primNil}), ._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Constant=static__1b5748e13_NewNil()})}), });;
				return _9714_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1a9b386b5:;
			{
				static jule::Ptr<_1a3c31c26_Var> _11214_v = jule::new_ptr<_1a3c31c26_Var>(_1a3c31c26_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1a3e37338_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Constant=static__1b5748671_NewBool(true)})}), });;
				return _11214_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1a9b3873c:;
			{
				static jule::Ptr<_1a3c31c26_Var> _12514_v = jule::new_ptr<_1a3c31c26_Var>(_1a3c31c26_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1a3e37338_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1a3c8a9a5_Value>(_1a3c8a9a5_Value{._field_Data=jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Constant=static__1b5748671_NewBool(false)})}), });;
				return _12514_v;;
			}
		}
		else {
			_case_begin_1a9b37d68:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b32318:;
	};
}



inline jule::Ptr<_1a3cb9e35_TypeAlias> _1a3e37338_findBuiltinTypeAlias(jule::Str _14225_ident) {
	{
		auto &_match_expr{ _14225_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1a9b3d4cd:;
			{
				static jule::Ptr<_1a3cb9e35_TypeAlias> _14514_t = _1a3e33642_primTypeAlias(&(_1a3e34005_primAny));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1a9b3d654:;
			{
				static jule::Ptr<_1a3cb9e35_TypeAlias> _14814_t = _1a3e33642_primTypeAlias(&(_1a3e34302_primStr));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1a9b3d6ba:;
			{
				static jule::Ptr<_1a3cb9e35_TypeAlias> _15114_t = _1a3e33642_primTypeAlias(&(_1a3e345aa_primBool));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1a9b3d753:;
			{
				static jule::Ptr<_1a3cb9e35_TypeAlias> _15414_t = _1a3e33642_primTypeAlias(&(_1a3e34863_primUintptr));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1a9b3d7b9:;
			{
				static jule::Ptr<_1a3cb9e35_TypeAlias> _15714_t = _1a3e33642_primTypeAlias(&(_1a3e34b1b_primUint));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1a9b3d830:;
			{
				static jule::Ptr<_1a3cb9e35_TypeAlias> _16014_t = _1a3e33642_primTypeAlias(&(_1a3e34ed4_primInt));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1a9b3d896:;
			{
				static jule::Ptr<_1a3cb9e35_TypeAlias> _16314_t = _1a3e33642_primTypeAlias(&(_1a3e35226_primI8));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a9b3d91d:;
			{
				static jule::Ptr<_1a3cb9e35_TypeAlias> _16614_t = _1a3e33642_primTypeAlias(&(_1a3e354bd_primI16));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a9b3d9ea:;
			{
				static jule::Ptr<_1a3cb9e35_TypeAlias> _16914_t = _1a3e33642_primTypeAlias(&(_1a3e35a2e_primI64));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a9b3da72:;
			{
				static jule::Ptr<_1a3cb9e35_TypeAlias> _17214_t = _1a3e33642_primTypeAlias(&(_1a3e36090_primU16));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1a9b3dae9:;
			{
				static jule::Ptr<_1a3cb9e35_TypeAlias> _17514_t = _1a3e33642_primTypeAlias(&(_1a3e36348_primU32));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1a9b3db71:;
			{
				static jule::Ptr<_1a3cb9e35_TypeAlias> _17814_t = _1a3e33642_primTypeAlias(&(_1a3e36832_primU64));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a9b3dbe8:;
			{
				static jule::Ptr<_1a3cb9e35_TypeAlias> _18114_t = _1a3e33642_primTypeAlias(&(_1a3e36a74_primF32));;
				return _18114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a9b3dc70:;
			{
				static jule::Ptr<_1a3cb9e35_TypeAlias> _18414_t = _1a3e33642_primTypeAlias(&(_1a3e36c83_primF64));;
				return _18414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1a9b3dce7:;
			{
				static jule::Ptr<_1a3cb9e35_TypeAlias> _18714_t = _1a3e33642_primTypeAlias(&(_1a3e35cd7_primU8));;
				return _18714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a9b3dd6e:;
			{
				static jule::Ptr<_1a3cb9e35_TypeAlias> _19014_t = _1a3e33642_primTypeAlias(&(_1a3e35776_primI32));;
				return _19014_t;;
			}
		}
		else {
			_case_begin_1a9b38c59:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b38d36:;
	};
}



inline jule::Any _1a3e375be_findBuiltinDef(jule::Str* _19720_ident) {
	jule::Ptr<_1a3c31c26_Var> _1986_v = _1a3e36ee7_findBuiltinVar(_19720_ident);;
	if ((_1986_v != nullptr)) {
		return jule::Any(_1986_v, &__jule_any_type8);;
	};
	jule::Ptr<_1a3b770cd_FnIns> _2026_f = _1a3e33334_findBuiltinFunc(_19720_ident);;
	if ((_2026_f != nullptr)) {
		return jule::Any(_2026_f, &__jule_any_type7);;
	};
	jule::Ptr<_1a3cb9e35_TypeAlias> _2066_ta = _1a3e37338_findBuiltinTypeAlias((*(_19720_ident)));;
	if ((_2066_ta != nullptr)) {
		return jule::Any(_2066_ta, &__jule_any_type66);;
	};
	return nullptr;;
}



inline jule::Any _1a3e37888_findBuiltinDefStdDebug(jule::Str* _21328_ident) {
	{
		auto &_match_expr{ (*(_21328_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1a9b4863c:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _21614_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e4250d_builtinCallerStdDebugOut), });;
				return jule::Any(_21614_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1a9b4897d:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _21914_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e4293c_builtinCallerStdDebugOutln), });;
				return jule::Any(_21914_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a9b46cde:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b484b6:;
	};
}



inline jule::Any _1a3e37b52_findBuiltinDefStdMem(jule::Str* _22626_ident) {
	{
		auto &_match_expr{ (*(_22626_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1a9b49e9b:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _22914_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e40e13_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22914_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1a9b4a30e:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _23214_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e41342_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23214_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1a9b4a034:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _23514_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e41771_builtinCallerStdMemFree), });;
				return jule::Any(_23514_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a9b4a1cc:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b4875d:;
	};
}



inline jule::Any _1a3e3802b_findBuiltinDefStdComptime(jule::Str* _24231_ident) {
	{
		auto &_match_expr{ (*(_24231_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1a9b4c498:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _24514_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e3e197_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24514_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1a9b4c773:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _24814_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e3e818_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24814_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1a9b4c7d9:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _25114_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e3ec47_builtinCallerStdComptimeLine), });;
				return jule::Any(_25114_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1a9b4c50e:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _25414_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e40176_builtinCallerStdComptimeFile), });;
				return jule::Any(_25414_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1a9b4c586:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _25714_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e405a5_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25714_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1a9b4c8a5:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _26014_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e409d4_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_26014_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a9b4c652:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b4a70a:;
	};
}



inline jule::Any _1a3e3826d_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident) {
	{
		auto &_match_expr{ (*(_26737_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1a9b4cb4c:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _27014_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e41ba0_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27014_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1a9b51b62:;
			{
				static jule::Ptr<_1a3b770cd_FnIns> _27314_f = jule::new_ptr<_1a3b770cd_FnIns>(_1a3b770cd_FnIns{._field_Decl=jule::new_ptr<_1a3b740ec_Fn>(_1a3b740ec_Fn{._field_Generics=jule::Slice<jule::Ptr<_1a3b4a348_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1a3c8982d_Data>,jule::Ptr<_1a3c8b555_Eval>*,jule::Ptr<_1a3b4619b_FnCallExpr>*,jule::Ptr<_1a3c8982d_Data>*>(_1a3e420ce_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27314_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a9b51a41:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b51953:;
	};
}



inline jule::Any _1a3e385e2_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident) {
	{
		auto &_match_expr{ (*(_28527_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1a9b53c52:;
			{
				return _1a3e3802b_findBuiltinDefStdComptime(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1a9b53cb8:;
			{
				return _1a3e37888_findBuiltinDefStdDebug(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1a9b53d2e:;
			{
				return _1a3e37b52_findBuiltinDefStdMem(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1a9b53d95:;
			{
				return _1a3e3826d_findBuiltinDefStdJuleIntegrated(_28543_ident);;
			}
		}
		else {
			_case_begin_1a9b51db5:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b53900:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e38966_builtinCallerError(jule::Ptr<_1a3c8b555_Eval>* _30028_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _30043_fc) {
	if (((*((*(_30043_fc))))._field_Args.len() < 1LL)) {
		_1a3c8baa5_pushErr((*(_30028_e)).ptr(), (*((*(_30043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_30043_fc))))._field_Args.len() > 1LL)) {
		_1a3c8baa5_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1a3c8982d_Data> _3086_expr = _1a3ca97b5_evalExpr((*(_30028_e)), (*((*(_30043_fc))))._field_Args[0LL]);;
	if ((_3086_expr == nullptr)) {
		return nullptr;;
	};
	if (_1a3c89c18_IsNil(_3086_expr.ptr())) {
		_1a3c8baa5_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3c8982d_Data> _3176_d = _1a3cb56d3_buildVoidData();;
	(*(_3176_d))._field_Model=jule::Any(jule::new_ptr<_1a3b6e9ee_BuiltinErrorCallExprModel>(_1a3b6e9ee_BuiltinErrorCallExprModel{._field_Err=_3086_expr}), &__jule_any_type22);
	return _3176_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e38d95_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _32226_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _32241_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	if (((*((*(_32241_fc))))._field_Args.len() < 1LL)) {
		_1a3c8baa5_pushErr((*(_32226_e)).ptr(), (*((*(_32241_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_32241_fc))))._field_Args.len() > 1LL)) {
		_1a3c8baa5_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a3c8982d_Data> _3316_expr = _1a3ca97b5_evalExpr((*(_32226_e)), (*((*(_32241_fc))))._field_Args[0LL]);;
	if ((_3316_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a3cd74a2_isBuiltinStrConvertable(&((*(_3316_expr))._field_Kind))))) {
		_1a3c8baa5_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3c8982d_Data> _3416_d = _1a3cb56d3_buildVoidData();;
	(*(_3416_d))._field_Model=jule::Any(jule::new_ptr<_1a3b6bcb5_BuiltinOutCallExprModel>(_1a3b6bcb5_BuiltinOutCallExprModel{._field_Expr=(*(_3316_expr))._field_Model, }), &__jule_any_type26);
	return _3416_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e392c4_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _34628_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _34643_fc, jule::Ptr<_1a3c8982d_Data>* _34665_d) {
	(*(_34665_d))=_1a3e38d95_builtinCallerOut(nullptr, _34628_e, _34643_fc, _34665_d);
	if (((*(_34665_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_34665_d))))._field_Model=jule::Any(jule::new_ptr<_1a3b6c18e_BuiltinOutlnCallExprModel>(_1a3b6c18e_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_34665_d))))._field_Model.cast_ptr<_1a3b6bcb5_BuiltinOutCallExprModel>(&__jule_any_type26)))._field_Expr, }), &__jule_any_type27);
	return (*(_34665_d));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e39703_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _35826_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _35841_fc, jule::Ptr<_1a3c8982d_Data>* _35863_d) {
	if (((*((*(_35841_fc))))._field_Args.len() < 1LL)) {
		_1a3c8baa5_pushErr((*(_35826_e)).ptr(), (*((*(_35841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35841_fc))))._field_Args.len() > 2LL)) {
		_1a3c8baa5_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a3c8982d_Data> _3676_t = _1a3ca89a1_evalExprKind((*(_35826_e)), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_3676_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3676_t))._field_Decl))) {
		_1a3c8baa5_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1a3cd6e52_isValidForSptrType(&((*(_3676_t))._field_Kind))))) {
		jule::Ptr<_1a3b61cbb_StructIns> _3787_s = _1a3cbe8eb_Struct((*(_3676_t))._field_Kind.ptr());;
		if ((((_3787_s != nullptr) && ((*_3787_s.alloc)._field_Decl != nullptr)) && (*(*(_3787_s))._field_Decl.alloc)._field_Binded)) {
			_1a3c8baa5_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_35863_d))))._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3cc732c_Sptr>(_1a3cc732c_Sptr{._field_Elem=(*(_3676_t))._field_Kind}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data21)});
	if (((*((*(_35841_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a3cbac27_TypeKind> _3927_old = (*((*(_35826_e))))._field_prefix;;
		(*((*(_35826_e))))._field_prefix=(*(_3676_t))._field_Kind;
		jule::Ptr<_1a3c8982d_Data> _3957_init = _1a3ca97b5_evalExpr((*(_35826_e)), (*((*(_35841_fc))))._field_Args[1LL]);;
		(*((*(_35826_e))))._field_prefix=_3927_old;
		if ((_3957_init != nullptr)) {
			jule::Ptr<_1a3b27a62_Token> _4008_token = (*((*((*(_35841_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1a3c18636_checkValidityForInitExpr((*((*(_35826_e))))._field_s, (!((*((*(_35826_e))))._field_immutable)), false, &((*(_3676_t))._field_Kind), &(_3957_init), &(_4008_token));
			_1a3c1429c_checkAssignType((*((*(_35826_e))))._field_s, false, &((*(_3676_t))._field_Kind), &(_3957_init), _4008_token);
			(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1a3b6c568_BuiltinNewCallExprModel>(_1a3b6c568_BuiltinNewCallExprModel{._field_Kind=(*(_3676_t))._field_Kind, ._field_Init=(*_3957_init.alloc)._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1a3b6c568_BuiltinNewCallExprModel>(_1a3b6c568_BuiltinNewCallExprModel{._field_Kind=(*(_3676_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_35863_d));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e39b32_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _42028_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _42043_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	if (((*((*(_42043_fc))))._field_Args.len() < 1LL)) {
		_1a3c8baa5_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_42043_fc))))._field_Args.len() > 1LL)) {
		_1a3c8baa5_pushErr((*(_42028_e)).ptr(), (*((*((*(_42043_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1a3c8982d_Data> _4296_expr = _1a3ca97b5_evalExpr((*(_42028_e)), (*((*(_42043_fc))))._field_Args[0LL]);;
	if ((_4296_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a3cbd378_Prim((*(_4296_expr))._field_Kind.ptr()) == nullptr) || (!(_1a3cc6c88_IsStr(_1a3cbd378_Prim((*(_4296_expr))._field_Kind).ptr()))))) {
		_1a3c8baa5_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3c8982d_Data> _4386_d = _1a3cb56d3_buildVoidData();;
	(*(_4386_d))._field_Model=jule::Any(jule::new_ptr<_1a3b6c942_BuiltinPanicCallExprModel>(_1a3b6c942_BuiltinPanicCallExprModel{._field_Token=(*((*(_42043_fc))))._field_Token, ._field_Expr=(*(_4296_expr))._field_Model}), &__jule_any_type28);
	return _4386_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3a292_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _44627_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _44642_fc, jule::Ptr<_1a3c8982d_Data>* _44664_d) {
	if (((*((*(_44642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_44642_fc))))._field_Args.len() == 1LL)) {
			_1a3c8baa5_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1a3c8baa5_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_44642_fc))))._field_Args.len() > 3LL)) {
		_1a3c8baa5_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3c8982d_Data> _4596_t = _1a3ca89a1_evalExprKind((*(_44627_e)), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4596_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4596_t))._field_Decl))) {
		_1a3c8baa5_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1a3cbe3ce_Slc((*(_4596_t))._field_Kind.ptr()) == nullptr)) {
		_1a3c8baa5_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_4596_t))._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_44664_d))))._field_Kind=(*(_4596_t))._field_Kind;
	jule::Ptr<_1a3c8982d_Data> _4746_lenExpr = _1a3ca97b5_evalExpr(_1a3c138ea_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4596_t))._field_Kind), (*((*(_44642_fc))))._field_Args[1LL]);;
	if ((_4746_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1a3c95790_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4746_lenExpr), (*((*((*(_44642_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1a3b6d39e_BuiltinMakeCallExprModel> _4816_model = jule::new_ptr<_1a3b6d39e_BuiltinMakeCallExprModel>(_1a3b6d39e_BuiltinMakeCallExprModel{._field_Kind=(*(_4596_t))._field_Kind, ._field_Len=(*(_4746_lenExpr))._field_Model, });;
	(*((*(_44664_d))))._field_Model=jule::Any(_4816_model, &__jule_any_type114);
	if (((*((*(_44642_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1a3c8982d_Data> _4877_capExpr = _1a3ca97b5_evalExpr(_1a3c138ea_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4596_t))._field_Kind), (*((*(_44642_fc))))._field_Args[2LL]);;
		if ((_4877_capExpr == nullptr)) {
			return (*(_44664_d));;
		};
		_1a3c95790_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4877_capExpr), (*((*((*(_44642_fc))))._field_Args[2LL]))._field_Token);
		(*(_4816_model))._field_Cap=(*(_4877_capExpr))._field_Model;
	};
	return (*(_44664_d));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3a5b1_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _49729_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _49744_fc, jule::Ptr<_1a3c8982d_Data>* _49766_d) {
	if (((*((*(_49744_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_49744_fc))))._field_Args.len() == 1LL)) {
			_1a3c8baa5_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("values", 6), &__jule_any_type4)}));
			return nullptr;;
		};
		_1a3c8baa5_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3c8982d_Data> _5076_t = _1a3ca97b5_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[0LL]);;
	if ((_5076_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a3cc7d00_Slc> _5126_s = _1a3cbe3ce_Slc((*(_5076_t))._field_Kind.ptr());;
	if ((_5126_s == nullptr)) {
		_1a3c8baa5_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1a3c18636_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5076_t))._field_Kind), &(_5076_t), &((*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token))) {
		_1a3c1429c_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5076_t))._field_Kind), &(_5076_t), (*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token);
	};
	jule::Ptr<_1a3cbac27_TypeKind> _5276_prefix = (*((*(_49729_e))))._field_prefix;;
	(*((*(_49729_e))))._field_prefix=(*(_5076_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_49729_e))))._field_prefix=_5276_prefix;
	});;
	(*(_49766_d))=jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=(*(_5076_t))._field_Kind, ._field_Mutable=true, });
	{
		auto &_match_expr{ (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a9b8dad3:;
			{
				if (((*((*(_49744_fc))))._field_Args.len() > 2LL)) {
					_1a3c8baa5_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a3c8982d_Data> _5417_e1 = _1a3ca97b5_evalExpr((*(_49729_e)), (*((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind.unsafe_cast_ptr<_1a3b44908_VariadicExpr>()))._field_Expr);;
				if ((_5417_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1a3cbd378_Prim((*(_5126_s))._field_Elem.ptr()) != nullptr) && _1a3cc51e8_IsU8(_1a3cbd378_Prim((*(_5126_s))._field_Elem).ptr()))) {
					if (((_1a3cbd378_Prim((*(_5417_e1))._field_Kind) != nullptr) && _1a3cc6c88_IsStr(_1a3cbd378_Prim((*(_5417_e1))._field_Kind).ptr()))) {
						_1a3cb7d9a_makeVariadic(&(_5417_e1), _1a3e35cd7_primU8);
						(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1a3b6d778_BuiltinAppendCallExprModel>(_1a3b6d778_BuiltinAppendCallExprModel{._field_Dest=(*(_5076_t))._field_Model, ._field_Elements=(*(_5417_e1))._field_Model}), &__jule_any_type25);
						return (*(_49766_d));;
					};
				};
				if ((!(_1a3cbd0e2_Variadicable((*(_5417_e1))._field_Kind)))) {
					_1a3c8baa5_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_5417_e1))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				_1a3cb7d9a_makeVariadic(&(_5417_e1), (*(_5126_s))._field_Elem);
				if (_1a3c18636_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5126_s))._field_Elem), &(_5417_e1), &((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token))) {
					_1a3c1429c_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5126_s))._field_Elem), &(_5417_e1), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token);
				};
				(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1a3b6d778_BuiltinAppendCallExprModel>(_1a3b6d778_BuiltinAppendCallExprModel{._field_Dest=(*(_5076_t))._field_Model, ._field_Elements=(*(_5417_e1))._field_Model}), &__jule_any_type25);
				return (*(_49766_d));;
			}
		}
		_match_end_1a9b8da39:;
	};
	jule::Ptr<_1a3c8982d_Data> _5756_e1 = _1a3ca97b5_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[1LL]);;
	if ((_5756_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a3b685ca_SliceExprModel> _5806_slice = jule::new_ptr<_1a3b685ca_SliceExprModel>(_1a3b685ca_SliceExprModel{._field_ElemKind=(*(_5126_s))._field_Elem, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_49744_fc))))._field_Args.len() - 1LL), jule::Any(nullptr))});;
	{
		auto expr = (*((*(_49744_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a9b9ad65:;
		if (it != expr_end) {
			jule::Ptr<_1a3b42472_Expr> _58414_arg = *it;
			{
				_5756_e1=_1a3ca97b5_evalExpr((*(_49729_e)), _58414_arg);
				if ((_5756_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5756_e1))._field_Kind.alloc)._field_Variadic) {
					_1a3c8baa5_pushErr((*(_49729_e)).ptr(), (*(_58414_arg))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				if (_1a3c18636_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5126_s))._field_Elem), &(_5756_e1), &((*_58414_arg.alloc)._field_Token))) {
					_1a3c1429c_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5126_s))._field_Elem), &(_5756_e1), (*_58414_arg.alloc)._field_Token);
				};
				(*(_5806_slice))._field_Elems=jule::append((*_5806_slice.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_5756_e1))._field_Model}));
			}
			_iter_next_1a9b9ad65:;
			++it;
			goto _iter_begin_1a9b9ad65;
		}
		_iter_end_1a9b9ad65:;
	};
	(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1a3b6d778_BuiltinAppendCallExprModel>(_1a3b6d778_BuiltinAppendCallExprModel{._field_Dest=(*(_5076_t))._field_Model, ._field_Elements=jule::Any(_5806_slice, &__jule_any_type77)}), &__jule_any_type25);
	return (*(_49766_d));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3aa9a_callerCopySlice(jule::Ptr<_1a3c8982d_Data>* _60625_dest, jule::Ptr<_1a3c8b555_Eval>* _60643_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _60658_fc, jule::Ptr<_1a3c8982d_Data>* _60680_d) {
	if ((!((*((*(_60625_dest))))._field_Mutable))) {
		_1a3c8baa5_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3c8982d_Data> _6116_src = _1a3ca97b5_evalExpr((*(_60643_e)), (*((*(_60658_fc))))._field_Args[1LL]);;
	if ((_6116_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a3cc7d00_Slc> _6156_slc = _1a3cbe3ce_Slc((*(_6116_src))._field_Kind.ptr());;
	if ((_6156_slc != nullptr)) {
		if (((!((*(_6116_src))._field_Mutable)) && _1a3cbc5a8_Mutable((*_6156_slc.alloc)._field_Elem.ptr()))) {
			_1a3c8baa5_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1a3cbb431_Equal((*((*(_60625_dest))))._field_Kind, (*(_6116_src))._field_Kind)))) {
			_1a3c8baa5_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_60625_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*(_6116_src))._field_Kind), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1a3cc3801_Prim> _6253_destPrim = _1a3cbd378_Prim((*(_1a3cbe3ce_Slc((*((*(_60625_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1a3cc3801_Prim> _6263_prim = _1a3cbd378_Prim((*(_6116_src))._field_Kind);;
		if (((((_6253_destPrim == nullptr) || (_6263_prim == nullptr)) || (!(_1a3cc6c88_IsStr(_6263_prim.ptr())))) || (!(_1a3cc51e8_IsU8(_6253_destPrim.ptr()))))) {
			_1a3c8baa5_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*((*(_60625_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*(_6116_src))._field_Kind), &__jule_any_type4)}));
		};
	};
	(*((*(_60680_d))))._field_Kind=_1a3c83261_lenKind();
	(*((*(_60680_d))))._field_Model=jule::Any(jule::new_ptr<_1a3b6e625_BuiltinCopyCallExprModel>(_1a3b6e625_BuiltinCopyCallExprModel{._field_Dest=(*(_60625_dest)), ._field_Src=_6116_src}), &__jule_any_type30);
	return (*(_60680_d));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3aec9_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _64027_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _64042_fc, jule::Ptr<_1a3c8982d_Data>* _64064_d) {
	if (((*((*(_64042_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_64042_fc))))._field_Args.len() == 1LL)) {
			_1a3c8baa5_pushErr((*(_64027_e)).ptr(), (*((*(_64042_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1a3c8baa5_pushErr((*(_64027_e)).ptr(), (*((*(_64042_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_64042_fc))))._field_Args.len() > 2LL)) {
		_1a3c8baa5_pushErr((*(_64027_e)).ptr(), (*((*((*(_64042_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1a3c8982d_Data> _6536_dest = _1a3ca97b5_evalExpr((*(_64027_e)), (*((*(_64042_fc))))._field_Args[0LL]);;
	{
		
		if ((_6536_dest == nullptr)) {
			_case_begin_1a9bb1650:;
			{
				return nullptr;;
			}
		}
		else if ((_1a3cbe3ce_Slc((*(_6536_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9bb16b6:;
			{
				return _1a3e3aa9a_callerCopySlice(&(_6536_dest), _64027_e, _64042_fc, _64064_d);;
			}
		}
		else {
			_case_begin_1a9bb060a:;
			{
				_1a3c8baa5_pushErr((*(_64027_e)).ptr(), (*((*((*(_64042_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9bada9d:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3b34d_callerLenSlice(jule::Ptr<_1a3c8982d_Data>* _66524_expr, jule::Ptr<_1a3c8982d_Data>* _66542_d) {
	(*((*(_66542_d))))._field_Kind=_1a3c83261_lenKind();
	(*((*(_66542_d))))._field_Model=jule::Any(jule::new_ptr<_1a3b6da75_BuiltinLenCallExprModel>(_1a3b6da75_BuiltinLenCallExprModel{._field_Expr=(*(_66524_expr))}), &__jule_any_type115);
	return (*(_66542_d));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3b6c2_callerLenMap(jule::Ptr<_1a3c8982d_Data>* _67322_expr, jule::Ptr<_1a3c8982d_Data>* _67340_d) {
	(*((*(_67340_d))))._field_Kind=_1a3c83261_lenKind();
	(*((*(_67340_d))))._field_Model=jule::Any(jule::new_ptr<_1a3b6da75_BuiltinLenCallExprModel>(_1a3b6da75_BuiltinLenCallExprModel{._field_Expr=(*(_67322_expr))}), &__jule_any_type115);
	return (*(_67340_d));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3ba46_callerLenArr(jule::Ptr<_1a3c8982d_Data>* _68122_expr, jule::Ptr<_1a3c8982d_Data>* _68140_d) {
	(*((*(_68140_d))))._field_Kind=_1a3c83261_lenKind();
	(*((*(_68140_d))))._field_Constant=static__1b57480dd_NewI64(static_cast<jule::I64>((*(_1a3cbe148_Arr((*((*(_68122_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_68140_d))))._field_Model=jule::Any((*((*(_68140_d))))._field_Constant, &__jule_any_type19);
	return (*(_68140_d));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3bdba_callerLenStr(jule::Ptr<_1a3c8982d_Data>* _68822_expr, jule::Ptr<_1a3c8982d_Data>* _68840_d) {
	(*((*(_68840_d))))._field_Kind=_1a3c83261_lenKind();
	if (_1a3c8a235_IsConst((*(_68822_expr)).ptr())) {
		(*((*(_68840_d))))._field_Constant=static__1b57480dd_NewI64(static_cast<jule::I64>(_1b5749d26_ReadStr((*((*(_68822_expr))))._field_Constant.ptr()).len()));
		(*((*(_68840_d))))._field_Model=jule::Any((*((*(_68840_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_68840_d))))._field_Model=jule::Any(jule::new_ptr<_1a3b6da75_BuiltinLenCallExprModel>(_1a3b6da75_BuiltinLenCallExprModel{._field_Expr=(*(_68822_expr))}), &__jule_any_type115);
	};
	return (*(_68840_d));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3c23e_callerLenComptime(jule::Ptr<_1a3c8982d_Data>* _70127_d, jule::I64 _70137_n) {
	(*((*(_70127_d))))._field_Kind=_1a3c83261_lenKind();
	(*((*(_70127_d))))._field_Constant=static__1b57480dd_NewI64(static_cast<jule::I64>(_70137_n));
	(*((*(_70127_d))))._field_Model=jule::Any((*((*(_70127_d))))._field_Constant, &__jule_any_type19);
	return (*(_70127_d));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3c66d_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _70826_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _70841_fc, jule::Ptr<_1a3c8982d_Data>* _70863_d) {
	if (((*((*(_70841_fc))))._field_Args.len() < 1LL)) {
		_1a3c8baa5_pushErr((*(_70826_e)).ptr(), (*((*(_70841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_70841_fc))))._field_Args.len() > 1LL)) {
		_1a3c8baa5_pushErr((*(_70826_e)).ptr(), (*((*((*(_70841_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a3c8982d_Data> _7166_dest = _1a3ca9474_evalExpr1((*(_70826_e)), (*((*(_70841_fc))))._field_Args[0LL]);;
	{
		
		if ((_7166_dest == nullptr)) {
			_case_begin_1a9bbda7a:;
			{
				return nullptr;;
			}
		}
		else if ((_1a3cbe3ce_Slc((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9bbc9be:;
			{
				return _1a3e3b34d_callerLenSlice(&(_7166_dest), _70863_d);;
			}
		}
		else if ((_1a3cbe148_Arr((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9bbca35:;
			{
				return _1a3e3ba46_callerLenArr(&(_7166_dest), _70863_d);;
			}
		}
		else if ((_1a3cbee18_Map((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9bbca9b:;
			{
				return _1a3e3b6c2_callerLenMap(&(_7166_dest), _70863_d);;
			}
		}
		else if (((_1a3cbd378_Prim((*(_7166_dest))._field_Kind.ptr()) != nullptr) && _1a3cc6c88_IsStr(_1a3cbd378_Prim((*(_7166_dest))._field_Kind).ptr()))) {
			_case_begin_1a9bbcb12:;
			{
				return _1a3e3bdba_callerLenStr(&(_7166_dest), _70863_d);;
			}
		}
		else if ((_1a3cc06bb_comptimeStructFields((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9bbcb78:;
			{
				return _1a3e3c23e_callerLenComptime(_70863_d, (*(_1a3cc06bb_comptimeStructFields((*(_7166_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a3cc0bd8_comptimeEnumFields((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9bbcbde:;
			{
				return _1a3e3c23e_callerLenComptime(_70863_d, (*(_1a3cc0bd8_comptimeEnumFields((*(_7166_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a3cc19a8_comptimeTypeInfos((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9bbdb79:;
			{
				return _1a3e3c23e_callerLenComptime(_70863_d, (*(_1a3cc19a8_comptimeTypeInfos((*(_7166_dest))._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1a3cc1205_comptimeParams((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9bbdbe0:;
			{
				return _1a3e3c23e_callerLenComptime(_70863_d, (*(_1a3cc1205_comptimeParams((*(_7166_dest))._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1a3cc1ec5_comptimeStatics((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9bbdc56:;
			{
				return _1a3e3c23e_callerLenComptime(_70863_d, (*(_1a3cc1ec5_comptimeStatics((*(_7166_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a3cc2a0e_comptimeFiles((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9bbdcbc:;
			{
				return _1a3e3c23e_callerLenComptime(_70863_d, (*(_1a3cc2a0e_comptimeFiles((*(_7166_dest))._field_Kind)))._field_files.len());;
			}
		}
		else {
			_case_begin_1a9bbc958:;
			{
				_1a3c8baa5_pushErr((*(_70826_e)).ptr(), (*((*((*(_70841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9bbadeb:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3c9e2_callerCapSlice(jule::Ptr<_1a3c8982d_Data>* _74624_expr, jule::Ptr<_1a3c8982d_Data>* _74642_d) {
	(*((*(_74642_d))))._field_Kind=_1a3c83261_lenKind();
	(*((*(_74642_d))))._field_Model=jule::Any(jule::new_ptr<_1a3b6dd72_BuiltinCapCallExprModel>(_1a3b6dd72_BuiltinCapCallExprModel{._field_Expr=(*(_74624_expr))}), &__jule_any_type116);
	return (*(_74642_d));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3ce21_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _75426_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _75441_fc, jule::Ptr<_1a3c8982d_Data>* _75463_d) {
	if (((*((*(_75441_fc))))._field_Args.len() < 1LL)) {
		_1a3c8baa5_pushErr((*(_75426_e)).ptr(), (*((*(_75441_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_75441_fc))))._field_Args.len() > 1LL)) {
		_1a3c8baa5_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a3c8982d_Data> _7626_dest = _1a3ca97b5_evalExpr((*(_75426_e)), (*((*(_75441_fc))))._field_Args[0LL]);;
	{
		
		if ((_7626_dest == nullptr)) {
			_case_begin_1a9bcd617:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7626_dest))._field_Decl) {
			_case_begin_1a9bcd67d:;
			{
				_1a3c8baa5_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a3cbe3ce_Slc((*(_7626_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9bcd6e4:;
			{
				return _1a3e3c9e2_callerCapSlice(&(_7626_dest), _75463_d);;
			}
		}
		else {
			_case_begin_1a9bcc5c2:;
			{
				_1a3c8baa5_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9bcaa65:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3d40a_callerDeleteMap(jule::Ptr<_1a3c8b555_Eval>* _77725_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _77740_fc, jule::Ptr<_1a3c8982d_Data>* _77762_expr, jule::Ptr<_1a3c8982d_Data>* _77780_d) {
	if ((!((*((*(_77762_expr))))._field_Mutable))) {
		_1a3c8baa5_pushErr((*(_77725_e)).ptr(), (*((*((*(_77740_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_77780_d))=_1a3cb56d3_buildVoidData();
	jule::Ptr<_1a3b6e24b_BuiltinDeleteCallExprModel> _7826_model = jule::new_ptr<_1a3b6e24b_BuiltinDeleteCallExprModel>(_1a3b6e24b_BuiltinDeleteCallExprModel{._field_Dest=(*(_77762_expr)), });;
	if (((*((*(_77740_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a3c8982d_Data> _7867_key = _1a3ca97b5_evalExpr((*(_77725_e)), (*((*(_77740_fc))))._field_Args[1LL]);;
		{
			
			if ((_7867_key == nullptr)) {
				_case_begin_1a9bd4431:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7867_key))._field_Decl) {
				_case_begin_1a9bd3078:;
				{
					_1a3c8baa5_pushErr((*(_77725_e)).ptr(), (*((*((*(_77740_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1a9bd3012:;
				{
					;
					jule::Ptr<_1a3cbac27_TypeKind> _7958_keyType = (*(_1a3cbee18_Map((*((*(_77762_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1a3c1429c_checkAssignType((*((*(_77725_e))))._field_s, false, &(_7958_keyType), &(_7867_key), (*((*((*(_77740_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1a9bd2e9b:;
		};
		(*(_7826_model))._field_Key=_7867_key;
	};
	(*((*(_77780_d))))._field_Model=jule::Any(_7826_model, &__jule_any_type31);
	return (*(_77780_d));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3d839_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _80629_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _80644_fc, jule::Ptr<_1a3c8982d_Data>* _80666_d) {
	if (((*((*(_80644_fc))))._field_Args.len() < 1LL)) {
		_1a3c8baa5_pushErr((*(_80629_e)).ptr(), (*((*(_80644_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80644_fc))))._field_Args.len() > 2LL)) {
		_1a3c8baa5_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a3c8982d_Data> _8146_dest = _1a3ca97b5_evalExpr((*(_80629_e)), (*((*(_80644_fc))))._field_Args[0LL]);;
	{
		
		if ((_8146_dest == nullptr)) {
			_case_begin_1a9be0edc:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8146_dest))._field_Decl) {
			_case_begin_1a9be1053:;
			{
				_1a3c8baa5_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a3cbee18_Map((*(_8146_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9be10b9:;
			{
				return _1a3e3d40a_callerDeleteMap(_80629_e, _80644_fc, &(_8146_dest), _80666_d);;
			}
		}
		else {
			_case_begin_1a9bda13a:;
			{
				_1a3c8baa5_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9bd85cd:;
	};
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3dc68_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _82929_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _82944_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	if (((*((*(_82944_fc))))._field_Args.len() < 1LL)) {
		_1a3c8baa5_pushErr((*(_82929_e)).ptr(), (*((*(_82944_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_82944_fc))))._field_Args.len() > 2LL)) {
		_1a3c8baa5_pushErr((*(_82929_e)).ptr(), (*((*((*(_82944_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a3c8982d_Data> _8386_expr = _1a3ca97b5_evalExpr((*(_82929_e)), (*((*(_82944_fc))))._field_Args[0LL]);;
	if ((_8386_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a3cbd378_Prim((*(_8386_expr))._field_Kind.ptr()) == nullptr) || (!(_1a3cc6a02_IsBool(_1a3cbd378_Prim((*(_8386_expr))._field_Kind).ptr()))))) {
		_1a3c8baa5_pushErr((*(_82929_e)).ptr(), (*((*(_82944_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3b6cde8_BuiltinAssertCallExprModel> _8476_model = jule::new_ptr<_1a3b6cde8_BuiltinAssertCallExprModel>(_1a3b6cde8_BuiltinAssertCallExprModel{._field_Token=(*((*(_82944_fc))))._field_Token, ._field_Expr=(*(_8386_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_82944_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a3c8982d_Data> _8557_log = _1a3ca97b5_evalExpr((*(_82929_e)), (*((*(_82944_fc))))._field_Args[1LL]);;
		if ((_8557_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1a3c8a235_IsConst(_8557_log.ptr()))) || (_1a3cbd378_Prim((*(_8557_log))._field_Kind) == nullptr)) || (!(_1a3cc6c88_IsStr(_1a3cbd378_Prim((*(_8557_log))._field_Kind).ptr()))))) {
			_1a3c8baa5_pushErr((*(_82929_e)).ptr(), (*((*((*(_82944_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*(_8557_log))._field_Kind), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8476_model))._field_Log=_1b5749d26_ReadStr((*(_8557_log))._field_Constant.ptr());
	};
	jule::Ptr<_1a3c8982d_Data> _8686_d = _1a3cb56d3_buildVoidData();;
	(*(_8686_d))._field_Model=jule::Any(_8476_model, &__jule_any_type29);
	return _8686_d;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3e197_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _87340_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _87355_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	if (((*((*(_87355_fc))))._field_Args.len() < 1LL)) {
		_1a3c8baa5_pushErr((*(_87340_e)).ptr(), (*((*(_87355_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_87355_fc))))._field_Args.len() > 1LL)) {
		_1a3c8baa5_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a3c8982d_Data> _8826_d = _1a3ca89a1_evalExprKind((*(_87340_e)), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8826_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a3b770cd_FnIns> _8862_f = _1a3cbe665_Fn((*(_8826_d))._field_Kind.ptr());;
	if ((_8862_f != nullptr)) {
		if (_1a3b78563_IsBuiltin(_8862_f)) {
			_1a3c8baa5_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*_8862_f.alloc)._field_Generics.len() != (*((*_8862_f.alloc)._field_Decl))._field_Generics.len())) {
			_1a3c8baa5_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1a3b61cbb_StructIns> _8972_s = _1a3cbe8eb_Struct((*(_8826_d))._field_Kind);;
	if (((_8972_s != nullptr) && ((*_8972_s.alloc)._field_Generics.len() != (*((*_8972_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1a3c8baa5_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1a3cc0435_comptime((*(_8826_d))._field_Kind)) {
		_1a3c8baa5_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_8826_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a3babd5a_buildComptimeTypeInfoData(&((*((*(_87340_e))))._field_s), &((*(_8826_d))._field_Kind));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3e818_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _90941_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _90956_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	if (((*((*(_90956_fc))))._field_Args.len() < 1LL)) {
		_1a3c8baa5_pushErr((*(_90941_e)).ptr(), (*((*(_90956_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_90956_fc))))._field_Args.len() > 1LL)) {
		_1a3c8baa5_pushErr((*(_90941_e)).ptr(), (*((*((*(_90956_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1a3c8982d_Data> _9176_d = _1a3ca97b5_evalExpr((*(_90941_e)), (*((*(_90956_fc))))._field_Args[0LL]);;
	if ((_9176_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a3c835b3_isGoodValueToInfer(&(_9176_d))))) {
		_1a3c8baa5_pushErr((*(_90941_e)).ptr(), (*((*((*(_90956_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_9176_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a3bac19b_buildComptimeValue(&(_9176_d));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e3ec47_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _92938_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _92953_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	if (((*((*(_92953_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_92938_e)).ptr(), (*((*((*(_92953_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1b5747b9d_Const> _9336_constant = static__1b57480dd_NewI64(static_cast<jule::I64>((*((*((*(_92953_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34ed4_primInt, ._field_Model=jule::Any(_9336_constant, &__jule_any_type19), ._field_Constant=_9336_constant});;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e40176_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _94138_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _94153_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	if (((*((*(_94153_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_94138_e)).ptr(), (*((*((*(_94153_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3ba9918_comptimeFile>(_1a3ba9918_comptimeFile{._field_file=(*((*((*(_94138_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data18)}), });;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e405a5_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _95439_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _95454_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	if (((*((*(_95454_fc))))._field_Args.len() > 0LL)) {
		_1a3c8baa5_pushErr((*(_95439_e)).ptr(), (*((*((*(_95454_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3ba831d_comptimeFiles>(_1a3ba831d_comptimeFiles{._field_files=(*((*((*(_95439_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data17)}), });;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e409d4_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _96743_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _96758_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	if (((*((*(_96758_fc))))._field_Args.len() > 2LL)) {
		_1a3c8baa5_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96758_fc))))._field_Args.len() == 0LL)) {
		_1a3c8baa5_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96758_fc))))._field_Args.len() == 1LL)) {
		_1a3c8baa5_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_96758_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a9c1780a:;
			{
				goto _match_end_1a9c19a93;
			}
		}
		else {
			_case_begin_1a9c19b09:;
			{
				_1a3c8baa5_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a3c8be18_pushSuggestion((*(_96743_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9c19a93:;
	};
	jule::Ptr<_1a3b27a62_Token> _9886_ident = (*((*((*((*(_96758_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1a3b43c8c_IdentExpr>(&__jule_any_type44)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_96743_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0)) {
			_case_begin_1a9c1bde7:;
			{
				goto _match_end_1a9c1c139;
			}
		}
		else {
			_case_begin_1a9c1c18e:;
			{
				_1a3c8baa5_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9c1c139:;
	};
	jule::Ptr<_1a3bbdb08_scopeChecker> _9976_sc = (*((*(_96743_e))))._field_lookup.cast_ptr<_1a3bbdb08_scopeChecker>((jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data0);;
	jule::Ptr<_1a3cb9e35_TypeAlias> _9986_alias = jule::new_ptr<_1a3cb9e35_TypeAlias>(_1a3cb9e35_TypeAlias{._field_Scope=(*(_9976_sc))._field_tree, ._field_Public=_1a3c05b40_IsPub((*(_9886_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9886_ident, ._field_Ident=(*_9886_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1a3cc2de9_TypeSymbol>(), });;
	jule::Ptr<_1a3c8982d_Data> _10086_t = _1a3ca8ce2_eval1((*(_96743_e)), (*((*(_96758_fc))))._field_Args[1LL]);;
	if ((_10086_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10086_t))._field_Decl) {
		(*((*(_9986_alias))._field_Kind))._field_Kind=(*(_10086_t))._field_Kind;
	} else {
		jule::Ptr<_1a3b9e4ac_comptimeTypeInfo> _10157_cti = _1a3cc1c3e_comptimeTypeInfo((*(_10086_t))._field_Kind.ptr());;
		if ((_10157_cti == nullptr)) {
			_1a3c8baa5_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1a3c8be18_pushSuggestion((*(_96743_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9986_alias))._field_Kind))._field_Kind=(*(_10157_cti))._field_base;
	};
	_1a3bc39a9_checkTypeAlias(_9976_sc, &(_9986_alias));
	return _1a3cb56d3_buildVoidData();;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e40e13_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _102735_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _102750_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<_1a3c8982d_Data> _10286_result = jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34b1b_primUint, });;
	if (((*((*(_102750_fc))))._field_Args.len() < 1LL)) {
		_1a3c8baa5_pushErr((*(_102735_e)).ptr(), (*((*(_102750_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10286_result;;
	};
	if (((*((*(_102750_fc))))._field_Args.len() > 1LL)) {
		_1a3c8baa5_pushErr((*(_102735_e)).ptr(), (*((*((*(_102750_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a3c8982d_Data> _10406_d = _1a3ca89a1_evalExprKind((*(_102735_e)), (*((*((*(_102750_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10406_d == nullptr)) {
		return _10286_result;;
	};
	if ((!(_1a3cd84e7_validTypeForXof(&((*(_10406_d))._field_Kind))))) {
		_1a3c8baa5_pushErr((*(_102735_e)).ptr(), (*((*((*(_102750_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_10406_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10286_result))._field_Model=jule::Any(jule::new_ptr<_1a3b701a3_SizeofExprModel>(_1a3b701a3_SizeofExprModel{._field_Expr=(*(_10406_d))._field_Model}), &__jule_any_type117);
	return _10286_result;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e41342_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _105236_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _105251_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<_1a3c8982d_Data> _10536_result = jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34b1b_primUint, });;
	if (((*((*(_105251_fc))))._field_Args.len() < 1LL)) {
		_1a3c8baa5_pushErr((*(_105236_e)).ptr(), (*((*(_105251_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10536_result;;
	};
	if (((*((*(_105251_fc))))._field_Args.len() > 1LL)) {
		_1a3c8baa5_pushErr((*(_105236_e)).ptr(), (*((*((*(_105251_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1a3c8982d_Data> _10656_d = _1a3ca89a1_evalExprKind((*(_105236_e)), (*((*((*(_105251_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10656_d == nullptr)) {
		return _10536_result;;
	};
	if ((!(_1a3cd84e7_validTypeForXof(&((*(_10656_d))._field_Kind))))) {
		_1a3c8baa5_pushErr((*(_105236_e)).ptr(), (*((*((*(_105251_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a3cbb0e0_Str((*(_10656_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10536_result))._field_Model=jule::Any(jule::new_ptr<_1a3b70390_AlignofExprModel>(_1a3b70390_AlignofExprModel{._field_Expr=(*(_10656_d))._field_Model}), &__jule_any_type118);
	return _10536_result;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e41771_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _107733_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _107748_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	if (((*((*(_107748_fc))))._field_Args.len() < 1LL)) {
		_1a3c8baa5_pushErr((*(_107733_e)).ptr(), (*((*(_107748_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_107748_fc))))._field_Args.len() > 1LL)) {
		_1a3c8baa5_pushErr((*(_107733_e)).ptr(), (*((*((*(_107748_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1a3c8982d_Data> _10866_d = _1a3ca97b5_evalExpr((*(_107733_e)), (*((*(_107748_fc))))._field_Args[0LL]);;
	if ((_10866_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a3cbcd5b_PerformsRC((*(_10866_d))._field_Kind.ptr())))) {
		_1a3c8baa5_pushErr((*(_107733_e)).ptr(), (*((*((*(_107748_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a3c8982d_Data> _10956_result = _1a3cb56d3_buildVoidData();;
	(*(_10956_result))._field_Model=jule::Any(jule::new_ptr<_1a3b7110a_FreeExprModel>(_1a3b7110a_FreeExprModel{._field_Expr=(*(_10866_d))._field_Model}), &__jule_any_type32);
	return _10956_result;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e41ba0_builtinCallerStdJuleIntegratedToStr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _110045_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _110060_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	if (((*((*(_110060_fc))))._field_Args.len() < 1LL)) {
		_1a3c8baa5_pushErr((*(_110045_e)).ptr(), (*((*(_110060_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_110060_fc))))._field_Args.len() > 1LL)) {
		_1a3c8baa5_pushErr((*(_110045_e)).ptr(), (*((*((*(_110060_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1a3c8982d_Data> _11096_d = _1a3ca97b5_evalExpr((*(_110045_e)), (*((*(_110060_fc))))._field_Args[0LL]);;
	if ((_11096_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a3cd74a2_isBuiltinStrConvertable(&((*(_11096_d))._field_Kind))))) {
		_1a3c8baa5_pushErr((*(_110045_e)).ptr(), (*((*((*(_110060_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a3c8982d_Data>(_1a3c8982d_Data{._field_Kind=_1a3e34302_primStr, ._field_Model=jule::Any(jule::new_ptr<_1a3b70934_IntegratedToStrExprModel>(_1a3b70934_IntegratedToStrExprModel{._field_Expr=(*(_11096_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e420ce_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _112744_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _112759_fc, jule::Ptr<_1a3c8982d_Data>* _112781_d) {
	if ((!(_1a3c8c59a_isUnsafe((*(_112744_e)).ptr())))) {
		_1a3c8baa5_pushErr((*(_112744_e)).ptr(), (*((*(_112759_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_112759_fc))))._field_Args.len() < 1LL)) {
		_1a3c8baa5_pushErr((*(_112744_e)).ptr(), (*((*(_112759_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a3c8982d_Data> _11376_argd = _1a3ca97b5_evalExpr((*(_112744_e)), (*((*(_112759_fc))))._field_Args[0LL]);;
	if ((_11376_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1a3cbd378_Prim((*(_11376_argd))._field_Kind.ptr()) == nullptr) || (!(_1a3cc6c88_IsStr(_1a3cbd378_Prim((*(_11376_argd))._field_Kind).ptr()))))) {
		_1a3c8baa5_pushErr((*(_112744_e)).ptr(), (*((*((*(_112759_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a3cbb0e0_Str((*(_11376_argd))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1a3c8a235_IsConst(_11376_argd.ptr()))) || (!(_1b574c422_IsStr((*(_11376_argd))._field_Constant.ptr()))))) {
		_1a3c8baa5_pushErr((*(_112744_e)).ptr(), (*((*((*(_112759_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a3c8982d_Data> _11526_r = _1a3cb56d3_buildVoidData();;
	jule::Ptr<_1a3b770cd_FnIns> _11546_f = _1a3cbe665_Fn((*((*(_112781_d))))._field_Kind);;
	if (((*(_11546_f))._field_Generics.len() > 0LL)) {
		(*(_11526_r))._field_Kind=(*((*(_11546_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1a3b70d0d_BackendEmitExprModel> _11596_model = jule::new_ptr<_1a3b70d0d_BackendEmitExprModel>(_1a3b70d0d_BackendEmitExprModel{._field_Code=_1b5749d26_ReadStr((*(_11376_argd))._field_Constant), });;
	if (((*((*(_112759_fc))))._field_Args.len() > 1LL)) {
		(*(_11596_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_112759_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_112759_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1a9c46c02:;
			if (it != expr_end) {
				jule::Ptr<_1a3b42472_Expr> _116515_arg = *it;
				{
					_11376_argd=_1a3ca8ce2_eval1((*(_112744_e)), _116515_arg);
					if ((_11376_argd == nullptr)) {
						return nullptr;;
					};
					(*_11596_model.alloc)._field_Exprs=jule::append((*_11596_model.alloc)._field_Exprs,jule::Slice<jule::Any>::make({(*(_11376_argd))._field_Model}));
				}
				_iter_next_1a9c46c02:;
				++it;
				goto _iter_begin_1a9c46c02;
			}
			_iter_end_1a9c46c02:;
		};
	};
	(*_11526_r.alloc)._field_Model=jule::Any(_11596_model, &__jule_any_type24);
	return _11526_r;;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e4250d_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _117834_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _117849_fc, jule::Ptr<_1a3c8982d_Data>* _117871_d) {
	(*(_117871_d))=_1a3e38d95_builtinCallerOut(nullptr, _117834_e, _117849_fc, _117871_d);
	if (((*(_117871_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_117871_d))))._field_Model.cast_ptr<_1a3b6bcb5_BuiltinOutCallExprModel>(&__jule_any_type26)))._field_Debug=true;
	return (*(_117871_d));;
}



inline jule::Ptr<_1a3c8982d_Data> _1a3e4293c_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _118736_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _118751_fc, jule::Ptr<_1a3c8982d_Data>* _118773_d) {
	(*(_118773_d))=_1a3e392c4_builtinCallerOutln(nullptr, _118736_e, _118751_fc, _118773_d);
	if (((*(_118773_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_118773_d))))._field_Model.cast_ptr<_1a3b6c18e_BuiltinOutlnCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_118773_d));;
}



inline jule::Ptr<_1a55a639b_FileInfo> _1a55e9d4b_ParseFile(jule::Ptr<_1a3b2d2e8_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a55a639b_FileInfo> _276_finf = jule::new_ptr<_1a55a639b_FileInfo>();;
	({
		__jule_tuple_x_1a3b3b180_Ast__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = _1a55ea3e0_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1a3b3b180_Ast__jule_tuple_s_1e7c94ecb_Log _1a55ea3e0_parseFileset(jule::Ptr<_1a3b2d2e8_File> _5521_f) {
	__jule_tuple_x_1a3b3b180_Ast__jule_tuple_s_1e7c94ecb_Log __jule_func_result;
	jule::Ptr<_1a561b026_parser> _566_p = jule::new_ptr<_1a561b026_parser>();;
	_1a562bd7d_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1a3b4d15e_ScopeTree> _1a55ead80_newScope(void) {
	return jule::new_ptr<_1a3b4d15e_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1a55eb215_isSt(jule::Ptr<_1a3b27a62_Token> _499_current, jule::Ptr<_1a3b27a62_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*_499_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_499_current.alloc)._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a55eb589_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1a3b27a62_Token> _613_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_613_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1a3b285ac_IsBinOp((*_613_prev.alloc)._field_Id) && ((*_613_prev.alloc)._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1a55eb952_nextStPos(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _696_braceN = 0LL;;
	jule::I64 _706_i = _6833_start;;
	for (; (_706_i < (*(_6815_tokens)).len()); (_706_i)++) {
		{
			jule::Bool _727_ok = false;;
			jule::Bool _737_terminated = false;;
			jule::Ptr<_1a3b27a62_Token> _743_tok = (*(_6815_tokens))[_706_i];;
			{
				auto &_match_expr{ (*(_743_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1a9cc4796:;
					{
						if (((_696_braceN == 0LL) && (_706_i > _6833_start))) {
							if ((!(_1a55eb589_prevIsIncompleteExpr(_6815_tokens, &(_706_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a55eb215_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
									_727_ok = __jule_assign_result.__jule_result_arg0;
									_737_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_727_ok) {
									goto _julec_label_1a9cc46db;
								};
							};
						};
						(_696_braceN)++;
						goto _iter_next_1a9cc3355;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1a9cc4a0a:;
					{
						(_696_braceN)--;
						if (((_696_braceN == 0LL) && ((_706_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a55eb215_isSt((*(_6815_tokens))[(_706_i + 1LL)], _743_tok);
								_727_ok = __jule_assign_result.__jule_result_arg0;
								_737_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_727_ok) {
								(_706_i)++;
								goto _julec_label_1a9cc46db;
							};
						};
						goto _iter_next_1a9cc3355;
					}
				}
				_match_end_1a9cc4983:;
			};
			if ((_696_braceN != 0LL)) {
				goto _iter_next_1a9cc3355;
			};
			if ((_706_i > _6833_start)) {
				if (_1a55eb589_prevIsIncompleteExpr(_6815_tokens, &(_706_i))) {
					goto _iter_next_1a9cc3355;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a55eb215_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a55eb215_isSt(_743_tok, _743_tok);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_727_ok))) {
				goto _iter_next_1a9cc3355;
			};
			_julec_label_1a9cc46db:;
			if (_737_terminated) {
				(_706_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _706_i;
			__jule_func_result.__jule_result_arg1 = _737_terminated;
			return __jule_func_result;;
		}
	_iter_next_1a9cc3355:;
	}
	_iter_end_1a9cc3355:;;
	__jule_func_result.__jule_result_arg0 = _706_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a3b27a62_Token__jule_tuple_bool _1a55ebcc6_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1a3b27a62_Token>> _13028_tokens) {
	__jule_tuple_sx_1a3b27a62_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1312_start = (*(_13016_i));;
	jule::Bool _1326_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a55eb952_nextStPos(&(_13028_tokens), _1312_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1326_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1a3b27a62_Token>> _1346_stTokens = _13028_tokens.slice(_1312_start, (*(_13016_i)));;
	if (_1326_terminated) {
		if ((_1346_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1a55ebcc6_skipSt(_13016_i, _13028_tokens));
return __jule_func_result;;
		};
		(_1346_stTokens).mut_slice(0LL, (_1346_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1346_stTokens;
	__jule_func_result.__jule_result_arg1 = _1326_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1a55ec106_stmt>> _1a55ec4ad_splitStmts(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _15120_tokens) {
	jule::Slice<jule::Ptr<_1a55ec106_stmt>> _1526_stmts = jule::Slice<jule::Ptr<_1a55ec106_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _1536_pos = 0LL;;
	while ((_1536_pos < (*(_15120_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1a3b27a62_Token>> _1557_stmt;
			jule::Bool _15513_terminated;
			({
				__jule_tuple_sx_1a3b27a62_Token__jule_tuple_bool __jule_assign_result = _1a55ebcc6_skipSt(&(_1536_pos), (*(_15120_tokens)));
				_1557_stmt = __jule_assign_result.__jule_result_arg0;
				_15513_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1a55ec106_stmt>> &__jule_push_dest = _1526_stmts; __jule_push_dest.push(jule::new_ptr<_1a55ec106_stmt>(_1a55ec106_stmt{._field_tokens=_1557_stmt, ._field_terminated=_15513_terminated})); };
		}
	_iter_next_1a9cccbde:;
	}
	_iter_end_1a9cccbde:;;
	return _1526_stmts;;
}



inline jule::Bool _1a5615b14_isTypeOp(jule::U64* _89314_id) {
	return ((((*(_89314_id)) == static_cast<jule::U64>(65LLU)) || ((*(_89314_id)) == static_cast<jule::U64>(54LLU))) || ((*(_89314_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1a5615e22_isTypeRange(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _90021_tokens) {
	jule::Bool _9016_op = false;;
	{
		auto expr = _90021_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d168c6:;
		if (it != expr_end) {
			jule::I64 _9026_i = it - expr->begin();
			jule::Ptr<_1a3b27a62_Token> _9029_token = *it;
			{
				if (((*(_9029_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_9016_op) {
						return true;;
					};
					jule::I64 _9078_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1a3b27a62_Token>> _9088_lTokens = (*(_90021_tokens)).slice(_9026_i);;
					{
						auto expr = &(_9088_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a9d18312:;
						if (it != expr_end) {
							jule::Ptr<_1a3b27a62_Token> _90911_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90911_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1a9d18aa4:;
										{
											(_9078_rangeN)++;
											goto _iter_next_1a9d18312;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1a9d18e7d:;
										{
											(_9078_rangeN)--;
											goto _iter_next_1a9d18312;
										}
									}
									_match_end_1a9d18d90:;
								};
								if ((_9078_rangeN == 0LL)) {
									return _1a5615b14_isTypeOp(&((*(_90911_lToken))._field_Id));;
								};
							}
							_iter_next_1a9d18312:;
							++it;
							goto _iter_begin_1a9d18312;
						}
						_iter_end_1a9d18312:;
					};
					return true;;
				};
				if ((!(_1a5615b14_isTypeOp(&((*_9029_token.alloc)._field_Id))))) {
					return false;;
				};
				_9016_op=true;
			}
			_iter_next_1a9d168c6:;
			++it;
			_9026_i++;
			goto _iter_begin_1a9d168c6;
		}
		_iter_end_1a9d168c6:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a3b27a62_Token>> _1a56161db_getBlockExpr(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _93322_tokens) {
	jule::I64 _9346_braceN = 0LL;;
	jule::I64 _9356_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d1a468:;
		if (it != expr_end) {
			jule::I64 _9366_i = it - expr->begin();
			jule::Ptr<_1a3b27a62_Token> _9369_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9369_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1a9d1bb51:;
						{
							if (((((*(_93322_tokens)).len() - _9366_i) > 1LL) && ((*((*(_93322_tokens))[(_9366_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9356_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1a9d1bbd9:;
						{
							if (((_9346_braceN > 0LL) || (_9356_skipToNextBraceClose > 0LL))) {
								if ((_9356_skipToNextBraceClose > 0LL)) {
									(_9356_skipToNextBraceClose)--;
								};
								(_9346_braceN)++;
								goto _match_end_1a9d1ba96;
							};
							return (*(_93322_tokens)).slice(0LL, _9366_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a9d1bc50:;
						{
							(_9346_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a9d1bcb6:;
						{
							(_9346_braceN)--;
						}
					}
					_match_end_1a9d1ba96:;
				};
			}
			_iter_next_1a9d1a468:;
			++it;
			_9366_i++;
			goto _iter_begin_1a9d1a468;
		}
		_iter_end_1a9d1a468:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a3b27a62_Token__jule_tuple_sx_1a3b27a62_Token _1a56165a4_splitDelim(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _96520_tokens, jule::U64 _96538_delim) {
	__jule_tuple_sx_1a3b27a62_Token__jule_tuple_sx_1a3b27a62_Token __jule_func_result;
	jule::I64 _9666_func = -1LL;;
	jule::I64 _9676_rangeN = 0LL;;
	jule::I64 _9686_i = 0LL;;
	for (; (_9686_i < (*(_96520_tokens)).len()); (_9686_i)++) {
		{
			jule::Ptr<_1a3b27a62_Token> _9703_token = (*(_96520_tokens))[_9686_i];;
			{
				auto &_match_expr{ (*(_9703_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(29LLU)) {
					_case_begin_1a9d2178d:;
					{
						_9666_func=_9676_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1a9d21804:;
					{
						(_9676_rangeN)++;
						goto _iter_next_1a9d1eed9;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1a9d2186a:;
					{
						(_9676_rangeN)--;
						if ((_9666_func == _9676_rangeN)) {
							_9666_func=-1LL;
							if (((((*(_96520_tokens)).len() - _9686_i) > 1LL) && ((*((*(_96520_tokens))[(_9686_i + 1LL)]))._field_Id == static_cast<jule::U64>(8LLU)))) {
								(_9686_i)++;
								goto _iter_next_1a9d1eed9;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1a9d218d1:;
					{
						(_9676_rangeN)--;
					}
				}
				_match_end_1a9d21738:;
			};
			if ((((*(_9703_token))._field_Id == _96538_delim) && (_9676_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1a3b27a62_Token>> _9948_l = (*(_96520_tokens)).slice(0LL, _9686_i);;
				jule::Slice<jule::Ptr<_1a3b27a62_Token>> _9958_r = (*(_96520_tokens)).slice((_9686_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9948_l;
				__jule_func_result.__jule_result_arg1 = _9958_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1a9d1eed9:;
	}
	_iter_end_1a9d1eed9:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1a561686d_findLowestPrecOp(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _100422_tokens) {
	jule::U8 _10096_prec = 255LLU;;
	jule::I64 _10106_precPos = -1LL;;
	jule::I64 _10126_braceN = 0LL;;
	jule::Bool _10136_skipToNextBraceOpen = false;;
	{
		auto expr = _100422_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9d26aa1:;
		if (it != expr_end) {
			jule::I64 _10146_i = it - expr->begin();
			jule::Ptr<_1a3b27a62_Token> *_10149_token = it;
			{
				{
					auto &_match_expr{ (*((*(_10149_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1a9d2783d:;
						{
							_10136_skipToNextBraceOpen=false;
							goto _case_begin_1a9d278c6;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1a9d278c6:;
						{
							(_10126_braceN)++;
							goto _iter_next_1a9d26aa1;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1a9d2793c:;
						{
							(_10126_braceN)--;
							goto _iter_next_1a9d26aa1;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1a9d279a3:;
						{
							_10136_skipToNextBraceOpen=true;
							goto _iter_next_1a9d26aa1;
						}
					}
					_match_end_1a9d27783:;
				};
				{
					
					if (_10136_skipToNextBraceOpen) {
						_case_begin_1a9d291ad:;
						{
							goto _iter_next_1a9d26aa1;
						}
					}
					else if ((_10146_i == 0LL)) {
						_case_begin_1a9d29224:;
						{
							goto _iter_next_1a9d26aa1;
						}
					}
					else if ((_10126_braceN > 0LL)) {
						_case_begin_1a9d2928a:;
						{
							goto _iter_next_1a9d26aa1;
						}
					}
					else if ((!(_1a3b285ac_IsBinOp((*((*(_10149_token))))._field_Id)))) {
						_case_begin_1a9d29301:;
						{
							goto _iter_next_1a9d26aa1;
						}
					}
					_match_end_1a9d29048:;
				};
				jule::Ptr<_1a3b27a62_Token> _10433_left = (*(_100422_tokens))[(_10146_i - 1LL)];;
				if ((_1a3b2829e_IsUnaryOp((*(_10433_left))._field_Id) || ((*_10433_left.alloc)._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1a9d26aa1;
				};
				if (((_10146_i > 1LL) && ((*_10433_left.alloc)._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1a3b27a62_Token> _10514_lleft = (*(_100422_tokens))[(_10146_i - 2LL)];;
					if (((*(_10514_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_10149_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*(*(_10149_token)).alloc)._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1a9d26aa1;
						};
					};
				};
				jule::U8 _10603_p = _1a3b27dd6_Prec((*(_10149_token)));;
				if (((_10603_p != 0LLU) && (_10603_p <= _10096_prec))) {
					_10096_prec=_10603_p;
					_10106_precPos=_10146_i;
				};
			}
			_iter_next_1a9d26aa1:;
			++it;
			_10146_i++;
			goto _iter_begin_1a9d26aa1;
		}
		_iter_end_1a9d26aa1:;
	};
	return _10106_precPos;;
}



inline jule::Ptr<_1a3b43c8c_IdentExpr> _1a5616b37_buildIdentExpr(jule::Ptr<_1a3b27a62_Token>* _106924_token) {
	return jule::new_ptr<_1a3b43c8c_IdentExpr>(_1a3b43c8c_IdentExpr{._field_Token=(*(_106924_token)), ._field_Ident=(*((*(_106924_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1a3b27a62_Token__jule_tuple_int _1a5616e01_getRangeExprTokens(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _107728_tokens) {
	__jule_tuple_sx_1a3b27a62_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10786_rangeN = 0LL;;
	jule::I64 _10796_i = ((*(_107728_tokens)).len() - 1LL);;
	for (; (_10796_i >= 0LL); (_10796_i)--) {
		{
			jule::Ptr<_1a3b27a62_Token> _10813_tok = (*(_107728_tokens))[_10796_i];;
			{
				auto &_match_expr{ (*(_10813_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1a9d311d7:;
					{
						(_10786_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1a9d314e5:;
					{
						(_10786_rangeN)--;
					}
				}
				_match_end_1a9d31490:;
			};
			if ((_10786_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_107728_tokens)).slice(0LL, _10796_i);
				__jule_func_result.__jule_result_arg1 = _10786_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1a9d3077a:;
	}
	_iter_end_1a9d3077a:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10786_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1a56172ca_isAnonFnHead(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _110018_tokens) {
	{
		auto &_match_expr{ (*((*(_110018_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a9d32e31:;
			{
				if ((((*(_110018_tokens)).len() == 1LL) || ((*((*(_110018_tokens))[1LL]))._field_Id != static_cast<jule::U64>(29LLU)))) {
					goto _match_end_1a9d33393;
				};
				goto _case_begin_1a9d334c5;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a9d334c5:;
			{
				if (((*((*(_110018_tokens))[((*(_110018_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U64>(73LLU))) {
					goto _match_end_1a9d33393;
				};
				return true;;
			}
		}
		_match_end_1a9d33393:;
	};
	return false;;
}



inline jule::Bool _1a5617ece_checkAssignTokens(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1a3b2c32a_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9dc8c52:;
		if (it != expr_end) {
			jule::Ptr<_1a3b27a62_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a9dc945b:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a9dc9813:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1a9dc9725:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1a9dca99b:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1a9dcaa34:;
						{
							goto _iter_next_1a9dc8c52;
						}
					}
					else if (_1a3b2c8ad_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1a9dcaa9a:;
						{
							return true;;
						}
					}
					_match_end_1a9dca946:;
				};
			}
			_iter_next_1a9dc8c52:;
			++it;
			goto _iter_begin_1a9dc8c52;
		}
		_iter_end_1a9dc8c52:;
	};
	return false;;
}



inline _1e7c94ecb_Log _1a561919a_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1a3b2d2e8_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _1e7c94ecb_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_1e7c9543d_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1a3b27a62_Token>> _1a56196c8_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1a3b27a62_Token> _732_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_732_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _786_rangeN = 1LL;;
	jule::I64 _792_start = (*(_6915_i));;
	for (; ((_786_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1a3b27a62_Token> _813_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_813_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1a9dd0a17:;
					{
						(_786_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1a9dd0d69:;
					{
						(_786_rangeN)--;
					}
				}
				_match_end_1a9dd0ce2:;
			};
		}
	_iter_next_1a9dcee23:;
	}
	_iter_end_1a9dcee23:;;
	return (*(_6959_tokens)).slice(_792_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1a3b27a62_Token__jule_tuple_sx_1a3b27a62_Token _1a5619992_rangeLast(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _9919_tokens) {
	__jule_tuple_sx_1a3b27a62_Token__jule_tuple_sx_1a3b27a62_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1032_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1032_first != static_cast<jule::U64>(73LLU)) && (_1032_first != static_cast<jule::U64>(76LLU))) && (_1032_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1096_braceN = 0LL;;
	jule::I64 _1106_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1106_i >= 0LL); (_1106_i)--) {
		{
			jule::Ptr<_1a3b27a62_Token> _1123_token = (*(_9919_tokens))[_1106_i];;
			{
				auto &_match_expr{ (*(_1123_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1a9dd4ce6:;
					{
						(_1096_braceN)++;
						goto _iter_next_1a9dd40ae;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1a9dd5104:;
					{
						(_1096_braceN)--;
					}
				}
				_match_end_1a9dd509e:;
			};
			if ((_1096_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1106_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1106_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1a9dd40ae:;
	}
	_iter_end_1a9dd40ae:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1a3b27a62_Token__jule_tuple_s_1e7c94ecb_Log _1a5619e48_parts(jule::Slice<jule::Ptr<_1a3b27a62_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1a3b27a62_Token__jule_tuple_s_1e7c94ecb_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1416_rangeN = 0LL;;
	jule::I64 _1426_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9dd7e3c:;
		if (it != expr_end) {
			jule::I64 _1436_i = it - expr->begin();
			jule::Ptr<_1a3b27a62_Token> _1439_token = *it;
			{
				{
					auto &_match_expr{ (*(_1439_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a9dd8e60:;
						{
							(_1416_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a9dd8ed7:;
						{
							(_1416_rangeN)--;
						}
					}
					else if (_match_expr == _13733_id) {
						_case_begin_1a9dd904d:;
						{
							if ((_1416_rangeN > 0LL)) {
								goto _iter_next_1a9dd7e3c;
							};
							if ((_13746_exprMust && ((_1436_i - _1426_last) <= 0LL))) {
								_1e7c94ecb_Log _1545_err = _1a561919a_makeErr((*(_1439_token))._field_Row, (*_1439_token.alloc)._field_Column, &((*_1439_token.alloc)._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
								{ jule::Slice<_1e7c94ecb_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1545_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last, _1436_i)); };
							_1426_last=(_1436_i + 1LL);
						}
					}
					_match_end_1a9dd8da5:;
				};
			}
			_iter_next_1a9dd7e3c:;
			++it;
			_1436_i++;
			goto _iter_begin_1a9dd7e3c;
		}
		_iter_end_1a9dd7e3c:;
	};
	if ((_1426_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a3b27a62_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last)); };
	};
	return __jule_func_result;;
}



inline jule::U64 _1a561a1ce_getCloseOfBrace(jule::U64 _16720_left) {
	{
		auto &_match_expr{ _16720_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1a9ddc4b3:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1a9ddc529:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1a9ddc590:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1a9dd8855:;
			{
				return _16720_left;;
			}
		}
		_match_end_1a9dd8976:;
	};
}



inline _1e7c94ecb_Log _1a561a60d_compilerErr(jule::Ptr<_1a3b27a62_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args) {
	return _1e7c94ecb_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_18017_token))))._field_Row, ._field_Column=(*((*(_18017_token))))._field_Column, ._field_Path=(*((*((*(_18017_token))))._field_File))._field_Path, ._field_Text=_1e7c9543d_Logf((*(_18033_fmt)), _18046_args), ._field_Line=_1a3b2e30a_GetRow((*((*(_18017_token))))._field_File, (*((*(_18017_token))))._field_Row), };;
}



inline void _1a561a9a4_pushSuggestion(_1e7c94ecb_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args) {
	(*(_19130_log))._field_Suggestion=_1e7c9543d_Logf(_19141_fmt, _19154_args);
}



inline jule::Ptr<_1a3b3d13d_TypeDecl> _1a562c884_buildVoidType(void) {
	return jule::new_ptr<_1a3b3d13d_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1b71c820e_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1aa1565d9:;
			{
				__jule_func_result.__jule_result_arg0=_1e7c98155_IsWindows(_212127d39_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1aa156254:;
			{
				__jule_func_result.__jule_result_arg0=_1e7c98463_IsDarwin(_212127d39_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1aa1562ba:;
			{
				__jule_func_result.__jule_result_arg0=_1e7c9872c_IsLinux(_212127d39_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1aa156331:;
			{
				__jule_func_result.__jule_result_arg0=_1e7c99387_IsUnix(_212127d39_Os);
			}
		}
		else {
			_case_begin_1aa155c6a:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1aa155d8b:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1b71e2b30_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1aa1587b7:;
			{
				__jule_func_result.__jule_result_arg0=_1e7c98a6d_IsI386(_2121280e2_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1aa158432:;
			{
				__jule_func_result.__jule_result_arg0=_1e7c98d04_IsAmd64(_2121280e2_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1aa158498:;
			{
				__jule_func_result.__jule_result_arg0=_1e7c990bd_IsArm64(_2121280e2_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1aa15850e:;
			{
				__jule_func_result.__jule_result_arg0=_1e7c999a3_Is64Bit(_2121280e2_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1aa158575:;
			{
				__jule_func_result.__jule_result_arg0=_1e7c99761_Is32Bit(_2121280e2_Arch);
			}
		}
		else {
			_case_begin_1aa157e48:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1aa158069:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b71e2da5_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1e7c0071c_Base(_5029_p);
	jule::I64 _522_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_522_n - _1e7c00189_Ext(_5029_p).len()));;
	jule::Str _586_a1 = jule::Str();;
	jule::Str _616_a2 = jule::Str();;
	jule::I64 _646_i = _1e7bd1698_FindLastByte(_5029_p, '_');;
	if ((_646_i == -1LL)) {
		jule::Bool _677_ok;
		jule::Bool _6715_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b71c820e_checkOs(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6715_exist) {
			return _677_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b71e2b30_checkArch(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6715_exist)) || _677_ok);;
	};
	if (((_646_i + 1LL) >= _522_n)) {
		return true;;
	};
	_586_a1=_5029_p.slice((_646_i + 1LL));
	(_5029_p).mut_slice(0LL, _646_i);;
	_646_i=_1e7bd1698_FindLastByte(_5029_p, '_');
	if ((_646_i != -1LL)) {
		_616_a2=_5029_p.slice((_646_i + 1LL));
	};
	if ((_616_a2).empty()) {
		jule::Bool _887_ok;
		jule::Bool _8815_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b71c820e_checkOs(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8815_exist) {
			return _887_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b71e2b30_checkArch(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8815_exist)) || _887_ok);;
	};
	jule::Bool _966_ok;
	jule::Bool _9614_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b71e2b30_checkArch(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9614_exist) {
		if ((!(_966_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b71c820e_checkOs(_616_a2);
			_966_ok = __jule_assign_result.__jule_result_arg0;
			_9614_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9614_exist)) || _966_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b71c820e_checkOs(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9614_exist)) || _966_ok);;
}



inline void _1a414dd68_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_212127d39_Os); };
	if (_1e7c99387_IsUnix(_212127d39_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1a414e0dd_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_2121280e2_Arch); };
	if (_1e7c999a3_Is64Bit(_2121280e2_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1e7c99761_Is32Bit(_2121280e2_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1a414e3c9_initVars(jule::Slice<jule::Str>* _5518_vars, _1a414da49_CompileInfo* _5532_info) {
	_1a414dd68_setOsVars(_5518_vars);
	_1a414e0dd_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1aa164372:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1aa163cbc:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1aa163c34:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1aa163d55:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1aa164a8c:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1aa164b03:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1aa164a37:;
	};
}



inline jule::Slice<jule::U8> _1a5631987_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__212306798_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_212126b7e_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1e7c94ecb_Log _1a5631c95_flatCompilerErr(jule::Str _4120_text) {
	return _1e7c94ecb_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline jule::Ptr<_1a3b740ec_Fn> _1a3e4b171_RuntimeFindFn(jule::Ptr<_1a3bd86d3_ImportInfo>* _1123_runtime, jule::Str _1145_ident) {
	;
	jule::Ptr<_1a3b740ec_Fn> _136_f = _1a3bd9cab_FindFn((*(_1123_runtime)).ptr(), _1145_ident, false);;
	if ((_136_f == nullptr)) {
		jule::outln(_1145_ident);
		jule::panic(jule::Str::lit("runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 103) + jule::Str("\nlocation: julec/obj/runtime.jule:16:3"));;
	};
	return _136_f;;
}



inline void _1a5636607_pushPasses(jule::Ptr<_1a3bdb609_Package>* _12120_p, jule::Slice<jule::Str>* _12144_passes) {
	{
		auto expr = &((*((*(_12120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1a65e5:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _12214_f = *it;
			{
				_julec_label_1aa1a6c22:;
				{
					auto expr = &((*(_12214_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa1a7173:;
					if (it != expr_end) {
						_1a3b7b775_Pass _12410_pass = *it;
						{
							if ((_12410_pass._field_Text).empty()) {
								goto _iter_next_1aa1a7173;
							};
							{
								auto expr = _12144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aa1a7c45:;
								if (it != expr_end) {
									jule::Str _12811_cpass = *it;
									{
										if ((_12811_cpass == _12410_pass._field_Text)) {
											goto _iter_next_1aa1a7173;
										};
									}
									_iter_next_1aa1a7c45:;
									++it;
									goto _iter_begin_1aa1a7c45;
								}
								_iter_end_1aa1a7c45:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12144_passes)); __jule_push_dest.push(_12410_pass._field_Text); };
						}
						_iter_next_1aa1a7173:;
						++it;
						goto _iter_begin_1aa1a7173;
					}
					_iter_end_1aa1a7173:;
				};
			}
			_iter_next_1aa1a65e5:;
			++it;
			goto _iter_begin_1aa1a65e5;
		}
		_iter_end_1aa1a65e5:;
	};
}



inline jule::Slice<jule::Str> _1a56369c0_getAllUniquePasses(jule::Ptr<_1a3bdb609_Package>* _13828_pkg, jule::Slice<jule::Ptr<_1a3bd86d3_ImportInfo>> _13853_uses) {
	jule::Slice<jule::Str> _13910_passes = nullptr;;
	_1a5636607_pushPasses(_13828_pkg, &(_13910_passes));
	{
		auto expr = &(_13853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1a931d:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _14214_u = *it;
			{
				if ((!((*(_14214_u))._field_Binded))) {
					_1a5636607_pushPasses(&((*_14214_u.alloc)._field_Package), &(_13910_passes));
				};
			}
			_iter_next_1aa1a931d:;
			++it;
			goto _iter_begin_1aa1a931d;
		}
		_iter_end_1aa1a931d:;
	};
	return _13910_passes;;
}



inline _1a414da49_CompileInfo _1a5636bce_buildCompileInfo(void) {
	_1a414da49_CompileInfo _1526_info = _1a414da49_CompileInfo{._field_Prod=_2121303d5_Production, ._field_Test=_21212ea22_Test, };;
	{
		auto &_match_expr{ _21212cb74_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1aa1aa709:;
			{
				_1526_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1aa1aa86e:;
			{
				_1526_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1aa1aa7e7:;
	};
	{
		auto &_match_expr{ _21212e280_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1aa1aa907:;
			{
				_1526_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1aa1ab496:;
			{
				_1526_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1aa1aac37:;
			{
				_1526_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1aa1ab63e:;
	};
	return _1526_info;;
}



inline void _1a5636e87_pushRuntimeToAST(jule::Ptr<_1a3b3b180_Ast>* _17726_f) {
	jule::Ptr<_1a3b56244_UseDecl> _1786_decl = jule::new_ptr<_1a3b56244_UseDecl>(_1a3b56244_UseDecl{._field_Token=nullptr, ._field_LinkPath=jule::Str::lit("std::runtime", 12), ._field_Alias=jule::Str(), ._field_Full=false, ._field_Selected=nullptr, ._field_Binded=false, ._field_Std=true});;
	{ jule::Slice<jule::Ptr<_1a3b56244_UseDecl>> &__jule_push_dest = (*((*(_17726_f))))._field_UseDecls; __jule_push_dest.push(_1786_decl); };
	if (((*((*(_17726_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_17726_f))))._field_UseDecls[((*((*(_17726_f))))._field_UseDecls.len() - 1LL)]=(*((*(_17726_f))))._field_UseDecls[0LL];
		(*((*(_17726_f))))._field_UseDecls[0LL]=_1786_decl;
	};
}



inline void _1a5637680_IterPackages(jule::Ptr<_1a5634c54_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1a3bdb609_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1cbe78:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1aa1cbe78:;
			++it;
			goto _iter_begin_1aa1cbe78;
		}
		_iter_end_1aa1cbe78:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1a56379b0_IterFiles(jule::Ptr<_1a3bdb609_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1a3c844b5_SymbolTable>*> _1634_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1cd5b7:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _1714_file = *it;
			{
				_1634_f(&(_1714_file));
			}
			_iter_next_1aa1cd5b7:;
			++it;
			goto _iter_begin_1aa1cd5b7;
		}
		_iter_end_1aa1cd5b7:;
	};
}



inline void _1a5637d56_iterTraitInheritMethods(jule::Ptr<_1a3b87a7d_Trait>* _2233_base, jule::Ptr<_1a3b87a7d_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1a3b740ec_Fn>*> _2263_f) {
	_1a5638274_iterTraitInheritMethods1(_2233_base, _2252_t, _2263_f);
	{
		auto expr = &((*((*(_2252_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1ce6ea:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _2414_m = *it;
			{
				if ((!(_1a564349e_ContainsTraitMethod(_2233_base, &((*(_2414_m))._field_Ident))))) {
					_2263_f(&(_2414_m));
				};
			}
			_iter_next_1aa1ce6ea:;
			++it;
			goto _iter_begin_1aa1ce6ea;
		}
		_iter_end_1aa1ce6ea:;
	};
}



inline void _1a5638274_iterTraitInheritMethods1(jule::Ptr<_1a3b87a7d_Trait>* _3134_base, jule::Ptr<_1a3b87a7d_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1a3b740ec_Fn>*> _3164_f) {
	{
		auto expr = &((*((*(_3153_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1d0a70:;
		if (it != expr_end) {
			jule::Ptr<_1a3cc2de9_TypeSymbol> _3214_inh = *it;
			{
				jule::Ptr<_1a3b87a7d_Trait> _337_t2 = _1a3cbeb82_Trait((*(_3214_inh))._field_Kind.ptr());;
				_1a5637d56_iterTraitInheritMethods(_3134_base, &(_337_t2), _3164_f);
			}
			_iter_next_1aa1d0a70:;
			++it;
			goto _iter_begin_1aa1d0a70;
		}
		_iter_end_1aa1d0a70:;
	};
}



inline void _1a563852c_IterTraitMethods(jule::Ptr<_1a3b87a7d_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1a3b740ec_Fn>*> _3937_f) {
	{
		auto expr = &((*((*(_3926_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1d2005:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _4014_m = *it;
			{
				_3937_f(&(_4014_m));
			}
			_iter_next_1aa1d2005:;
			++it;
			goto _iter_begin_1aa1d2005;
		}
		_iter_end_1aa1d2005:;
	};
	_1a5638274_iterTraitInheritMethods1(_3926_t, _3926_t, _3937_f);
}



inline jule::Bool _1a56408b9_IsForwarded(jule::Ptr<_1a3bb664a_Scope>* _2417_s) {
	jule::Any _252_last = (*((*(_2417_s))))._field_Stmts[((*((*(_2417_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _252_last };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aa279db1:;
			{
				{
					auto &_match_expr{ (*(_252_last.cast_ptr<_1a3c8982d_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1aa27a08c:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1aa27ac80:;
						{
							return false;;
						}
					}
					_match_end_1aa27ac2a:;
				};
			}
		}
		else {
			_case_begin_1aa27a026:;
			{
				return true;;
			}
		}
		_match_end_1aa279ec1:;
	};
}



inline jule::Bool _1a5640bc7_IsExprComesFromBind(jule::Ptr<_1a3c8982d_Data>* _4025_d) {
	{
		auto &_match_expr{ (*((*(_4025_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa27a444:;
			{
				return (*((*((*(_4025_d))))._field_Model.unsafe_cast_ptr<_1a3c31c26_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa27b92e:;
			{
				return (*((*((*((*((*(_4025_d))))._field_Model.unsafe_cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1aa27b467:;
			{
				return false;;
			}
		}
		_match_end_1aa27b412:;
	};
}



inline jule::Bool _1a5640e91_IsAny(jule::Ptr<_1a3cbac27_TypeKind>* _5215_t) {
	if ((_1a3cbddb2_TypeEnum((*(_5215_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1a3cc3801_Prim> _562_prim = _1a3cbd378_Prim((*(_5215_t)).ptr());;
	return ((_562_prim != nullptr) && _1a3cc701e_IsAny(_562_prim));;
}



inline jule::Bool _1a56412d2_IsClosure(jule::Ptr<_1a3b69037_AnonFnExprModel>* _6115_m) {
	return ((*((*(_6115_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1a5641568_IsOpMethod(jule::Ptr<_1a3b740ec_Fn>* _6416_m) {
	if ((((*((*(_6416_m))))._field_Generics.len() > 0LL) || ((*((*(_6416_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1a3b770cd_FnIns> _682_mi = (*((*(_6416_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1a56418dc_IsTraitMethod(jule::Ptr<_1a3b61cbb_StructIns>* _8023_owner, jule::Ptr<_1a3b770cd_FnIns>* _8043_f) {
	{
		auto expr = &((*((*((*(_8023_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa28236e:;
		if (it != expr_end) {
			jule::Ptr<_1a3b87a7d_Trait> _8114_t = *it;
			{
				if ((_1a3b8872c_FindMethod(_8114_t.ptr(), (*((*((*(_8043_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1aa28236e:;
			++it;
			goto _iter_begin_1aa28236e;
		}
		_iter_end_1aa28236e:;
	};
	return false;;
}



inline jule::Bool _1a5641c61_IsStdPackage(jule::Str* _9318_f, jule::Str _9326_p) {
	return _1e7bc8b35_HasPrefix((*(_9318_f)), _1e7beee03_Join(jule::Slice<jule::Str>::make({_2121271ce_PathStdlib,_9326_p})));;
}



inline jule::Bool _1a564213a_IsImplicitImport(jule::Ptr<_1a3bd86d3_ImportInfo> _10121_imp) {
	return ((*(_10121_imp))._field_Token == nullptr);;
}



inline jule::Ptr<_1a3b3c55a_Directive> _1a5642c62_FindDirective(jule::Slice<jule::Ptr<_1a3b3c55a_Directive>>* _1123_directives, jule::Str _1154_tag) {
	{
		auto expr = _1123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa28d303:;
		if (it != expr_end) {
			jule::Ptr<_1a3b3c55a_Directive> _1214_dr = *it;
			{
				if (((*((*(_1214_dr))._field_Tag))._field_Kind == _1154_tag)) {
					return _1214_dr;;
				};
			}
			_iter_next_1aa28d303:;
			++it;
			goto _iter_begin_1aa28d303;
		}
		_iter_end_1aa28d303:;
	};
	return nullptr;;
}



inline jule::Bool _1a564312a_HasDirective(jule::Slice<jule::Ptr<_1a3b3c55a_Directive>>* _2118_directives, jule::Str _2149_tag) {
	return (_1a5642c62_FindDirective(&((*((&((*(_2118_directives))))))), _2149_tag) != nullptr);;
}



inline jule::Bool _1a564349e_ContainsTraitMethod(jule::Ptr<_1a3b87a7d_Trait>* _2629_t, jule::Str* _2641_ident) {
	{
		auto expr = &((*((*(_2629_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa290008:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _279_m = *it;
			{
				if (((*(_279_m))._field_Ident == (*(_2641_ident)))) {
					return true;;
				};
			}
			_iter_next_1aa290008:;
			++it;
			goto _iter_begin_1aa290008;
		}
		_iter_end_1aa290008:;
	};
	return false;;
}



inline jule::I64 _1a5643b64_FindTraitTypeOffsetS(jule::Ptr<_1a3b87a7d_Trait> _3925_t, jule::Ptr<_1a3b61cbb_StructIns> _3940_s) {
	if (((*(_3925_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _436_i = 0LL;;
	{
		auto expr = &((*_3925_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa291bdb:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> *_449_si = it;
			{
				if (((*(_3940_s))._field_Decl == (*(_449_si)))) {
					{
						auto expr = &((*((*(_449_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa292a77:;
						if (it != expr_end) {
							jule::Ptr<_1a3b61cbb_StructIns> *_4611_ins = it;
							{
								if (((*(_4611_ins)) == _3940_s)) {
									return _436_i;;
								};
								(_436_i)++;
							}
							_iter_next_1aa292a77:;
							++it;
							goto _iter_begin_1aa292a77;
						}
						_iter_end_1aa292a77:;
					};
					goto _iter_end_1aa291bdb;
				} else {
					_436_i+=(*((*(_449_si))))._field_Instances.len();
				};
			}
			_iter_next_1aa291bdb:;
			++it;
			goto _iter_begin_1aa291bdb;
		}
		_iter_end_1aa291bdb:;
	};
	return -1LL;;
}



inline jule::I64 _1a5643ed8_FindTraitTypeOffset(jule::Ptr<_1a3b87a7d_Trait> _6224_t, jule::Ptr<_1a3cbac27_TypeKind> _6239_k) {
	if (((*(_6224_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1a3b61cbb_StructIns> _6610_s = nullptr;;
	if ((_1a3cbd60e_Sptr(_6239_k.ptr()) != nullptr)) {
		_6239_k=(*(_1a3cbd60e_Sptr(_6239_k)))._field_Elem;
	};
	_6610_s=_1a3cbe8eb_Struct(_6239_k);
	if ((_6610_s == nullptr)) {
		return -1LL;;
	};
	return _1a5643b64_FindTraitTypeOffsetS(_6224_t, _6610_s);;
}



inline jule::Ptr<_1a3b770cd_FnIns> _1a5644417_FindOperator(jule::Ptr<_1a3b61cbb_StructIns>* _7822_s, jule::U64 _7837_op, jule::Bool _7850_unary) {
	{
		auto &_match_expr{ _7837_op };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1aa29653c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Eq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1aa296350:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Gt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1aa2963b6:;
			{
				return (*((*(_7822_s))))._field_Operators._field_GtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1aa2965a3:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Lt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1aa29662a:;
			{
				return (*((*(_7822_s))))._field_Operators._field_LtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1aa2966a2:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shl;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1aa2967c3:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1aa296839:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Pos;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Add;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1aa2968a0:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Neg;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Sub;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1aa296916:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Div;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa29697c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mul;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1aa296a04:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mod;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aa296a7b:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAnd;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1aa296b03:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aa296b7a:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_BitNot;;
				};
				return (*((*(_7822_s))))._field_Operators._field_BitXor;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1aa296c02:;
			{
				return (*((*(_7822_s))))._field_Operators._field_AddAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1aa296c79:;
			{
				return (*((*(_7822_s))))._field_Operators._field_SubAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1aa296d01:;
			{
				return (*((*(_7822_s))))._field_Operators._field_DivAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1aa296d78:;
			{
				return (*((*(_7822_s))))._field_Operators._field_MulAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1aa296e00:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ModAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1aa296e77:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShlAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1aa296eee:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1aa297076:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1aa2970ed:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAndAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1aa297175:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitXorAssign;;
			}
		}
		else {
			_case_begin_1aa295e98:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa2960ca:;
	};
}



inline jule::Ptr<_1a3b770cd_FnIns> _1a564478b_FindGenericInstance(jule::Ptr<_1a3b740ec_Fn>* _14729_f, jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>> _14737_generics) {
	_julec_label_1aa2a2b31:;
	{
		auto expr = &((*((*(_14729_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2a38ac:;
		if (it != expr_end) {
			jule::Ptr<_1a3b770cd_FnIns> _14914_ins = *it;
			{
				{
					auto expr = &((*(_14914_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa2a42a3:;
					if (it != expr_end) {
						jule::I64 _1507_i = it - expr->begin();
						{
							if ((!(_1a3cbb431_Equal((*((*(_14914_ins))._field_Generics[_1507_i]))._field_Kind, _14737_generics[_1507_i])))) {
								goto _iter_next_1aa2a38ac;
							};
						}
						_iter_next_1aa2a42a3:;
						++it;
						_1507_i++;
						goto _iter_begin_1aa2a42a3;
					}
					_iter_end_1aa2a42a3:;
				};
				return _14914_ins;;
			}
			_iter_next_1aa2a38ac:;
			++it;
			goto _iter_begin_1aa2a38ac;
		}
		_iter_end_1aa2a38ac:;
	};
	jule::panic(jule::Str::lit("generic instance lookup failed, this is an implementation mistake", 65) + jule::Str("\nlocation: julec/obj/lookup.jule:157:2"));;
}



inline jule::Bool _1aa1c1b3d_isOrdered(jule::Ptr<_1a3c31c26_Var>* _1418_t, jule::Slice<jule::Ptr<_1a3c31c26_Var>> _1425_s) {
	_julec_label_1aa1c3645:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1c3a85:;
		if (it != expr_end) {
			jule::Ptr<_1a3c31c26_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1aa1c436b:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1aa1c3a85;
							};
						}
					}
					_match_end_1aa1c4305:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa1c4624:;
					if (it != expr_end) {
						jule::Ptr<_1a3c31c26_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1aa1c3a85;
							};
						}
						_iter_next_1aa1c4624:;
						++it;
						goto _iter_begin_1aa1c4624;
					}
					_iter_end_1aa1c4624:;
				};
				return false;;
			}
			_iter_next_1aa1c3a85:;
			++it;
			goto _iter_begin_1aa1c3a85;
		}
		_iter_end_1aa1c3a85:;
	};
	return true;;
}

inline jule::Bool _1aa1c87c1_isOrdered(jule::Ptr<_1a3b5e03d_Struct>* _1418_t, jule::Slice<jule::Ptr<_1a3b5e03d_Struct>> _1425_s) {
	_julec_label_1aa1ca284:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1ca6c4:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa1cacce:;
					if (it != expr_end) {
						jule::Ptr<_1a3b5e03d_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1aa1ca6c4;
							};
						}
						_iter_next_1aa1cacce:;
						++it;
						goto _iter_begin_1aa1cacce;
					}
					_iter_end_1aa1cacce:;
				};
				return false;;
			}
			_iter_next_1aa1ca6c4:;
			++it;
			goto _iter_begin_1aa1ca6c4;
		}
		_iter_end_1aa1ca6c4:;
	};
	return true;;
}



inline void _1aa1bd91a_order(jule::Slice<jule::Ptr<_1a3c31c26_Var>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1aa1bdd8d:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1aa1c008c:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1a3c31c26_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1aa1c0d07:;
				if (it != expr_end) {
					jule::Ptr<_1a3c31c26_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1aa1c00c0;
						};
					}
					_iter_next_1aa1c0d07:;
					++it;
					goto _iter_begin_1aa1c0d07;
				}
				_iter_end_1aa1c0d07:;
			};
			if (_1aa1c1b3d_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1aa1c00c0:;
	}
	_iter_end_1aa1c00c0:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1aa1bdd8d;
	};
}

inline void _1aa1c406e_order(jule::Slice<jule::Ptr<_1a3b5e03d_Struct>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1aa1c5a65:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1aa1c6c20:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1a3b5e03d_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1aa1c798a:;
				if (it != expr_end) {
					jule::Ptr<_1a3b5e03d_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1aa1c6c53;
						};
					}
					_iter_next_1aa1c798a:;
					++it;
					goto _iter_begin_1aa1c798a;
				}
				_iter_end_1aa1c798a:;
			};
			if (_1aa1c87c1_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1aa1c6c53:;
	}
	_iter_end_1aa1c6c53:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1aa1c5a65;
	};
}



inline void _1a5133027_EliminateDefines(jule::Ptr<_1a5634c54_IR>* _30626_ir) {
	jule::Ptr<_1a5130112_ObjectDeadCode> _3076_ocd = static__1a51305a7_new(_30626_ir);;
	_1a5132be7_elimanate(_3076_ocd);
}



inline void _1a5136e93_eliminateDeadCodeOfScope(jule::Ptr<_1a3bb664a_Scope> _23833_s) {
	jule::Slice<jule::Ptr<_1a3bb8edd_Label>> _2392_labels = jule::Slice<jule::Ptr<_1a3bb8edd_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1a3bb93b7_GotoSt>> _2402_gotos = jule::Slice<jule::Ptr<_1a3bb93b7_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1a5133c5e_scopeDeadCode> _2416_sdc = jule::new_ptr<_1a5133c5e_scopeDeadCode>(_1a5133c5e_scopeDeadCode{._field_s=_23833_s, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1a3bb8edd_Label>>>)((&(_2392_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1a3bb93b7_GotoSt>>>)((&(_2402_gotos)))), });;
	{
		_1a5136b63_optimizeStmts(_2416_sdc);
	};
}



inline void _1a5137218_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a3b740ec_Fn>>* _25033_funcs) {
	{
		auto expr = _25033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa321d15:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _25114_func = *it;
			{
				{
					auto expr = &((*(_25114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa323eb0:;
					if (it != expr_end) {
						jule::Ptr<_1a3b770cd_FnIns> _25215_ins = *it;
						{
							_1a5136e93_eliminateDeadCodeOfScope((*(_25215_ins))._field_Scope);
						}
						_iter_next_1aa323eb0:;
						++it;
						goto _iter_begin_1aa323eb0;
					}
					_iter_end_1aa323eb0:;
				};
			}
			_iter_next_1aa321d15:;
			++it;
			goto _iter_begin_1aa321d15;
		}
		_iter_end_1aa321d15:;
	};
}



inline void _1a5137449_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1a3b5e03d_Struct>>* _25937_structs) {
	{
		auto expr = _25937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa324950:;
		if (it != expr_end) {
			jule::Ptr<_1a3b5e03d_Struct> _26014_s = *it;
			{
				{
					auto expr = &((*(_26014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa32509e:;
					if (it != expr_end) {
						jule::Ptr<_1a3b61cbb_StructIns> _26115_ins = *it;
						{
							_1a5137218_eliminateScopeFunctions(&((*(_26115_ins))._field_Methods));
						}
						_iter_next_1aa32509e:;
						++it;
						goto _iter_begin_1aa32509e;
					}
					_iter_end_1aa32509e:;
				};
			}
			_iter_next_1aa324950:;
			++it;
			goto _iter_begin_1aa324950;
		}
		_iter_end_1aa324950:;
	};
}



inline void _1a5137702_eliminateFunctionsScopePackage(jule::Ptr<_1a3bdb609_Package>* _26740_pkg) {
	{
		auto expr = &((*((*(_26740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa324d4b:;
		if (it != expr_end) {
			jule::Ptr<_1a3c844b5_SymbolTable> _26814_f = *it;
			{
				_1a5137218_eliminateScopeFunctions(&((*(_26814_f))._field_Funcs));
				_1a5137449_eliminateScopeStructMethods(&((*_26814_f.alloc)._field_Structs));
			}
			_iter_next_1aa324d4b:;
			++it;
			goto _iter_begin_1aa324d4b;
		}
		_iter_end_1aa324d4b:;
	};
}



inline void _1a5137900_eliminateScopePackage(jule::Ptr<_1a3bdb609_Package>* _27431_pkg) {
	_1a5137702_eliminateFunctionsScopePackage(_27431_pkg);
}



inline void _1a5137b31_EliminateScopes(jule::Ptr<_1a5634c54_IR>* _27925_ir) {
	jule::I64 _2806_i = ((*((*(_27925_ir))))._field_Used.len() - 1LL);;
	for (; (_2806_i >= 0LL); (_2806_i)--) {
		{
			jule::Ptr<_1a3bd86d3_ImportInfo> _2827_u = (*((*(_27925_ir))))._field_Used[_2806_i];;
			if ((!((*(_2827_u))._field_Binded))) {
				_1a5137900_eliminateScopePackage(&((*_2827_u.alloc)._field_Package));
			};
		}
	_iter_next_1aa32759b:;
	}
	_iter_end_1aa32759b:;;
	_1a5137900_eliminateScopePackage(&((*((*(_27925_ir))))._field_Main));
}



inline jule::Uintptr _1a3e42c8e_typeData(jule::Any* _1714_m) {
	return ((jule::Uintptr)(((*(_1714_m))).type));;
}



inline jule::Bool _1a3e43157_equalConst(jule::Ptr<_1b5747b9d_Const> _2115_l, jule::Ptr<_1b5747b9d_Const> _2126_r) {
	{
		
		if (_1b574bb6e_IsI64(_2115_l.ptr())) {
			_case_begin_1a842b64c:;
			{
				return (_1b574bb6e_IsI64(_2126_r.ptr()) && (_1b5749573_ReadI64(_2115_l) == _1b5749573_ReadI64(_2126_r)));;
			}
		}
		else if (_1b574be05_IsU64(_2115_l.ptr())) {
			_case_begin_1a842bd12:;
			{
				return (_1b574be05_IsU64(_2126_r.ptr()) && (_1b5749809_ReadU64(_2115_l) == _1b5749809_ReadU64(_2126_r)));;
			}
		}
		else if (_1b574c6a8_IsF64(_2115_l.ptr())) {
			_case_begin_1a842ac45:;
			{
				return (_1b574c6a8_IsF64(_2126_r.ptr()) && (_1b574a0ac_ReadF64(_2115_l) == _1b574a0ac_ReadF64(_2126_r)));;
			}
		}
		else if (_1b574c422_IsStr(_2115_l.ptr())) {
			_case_begin_1a842acab:;
			{
				return (_1b574c422_IsStr(_2126_r.ptr()) && (_1b5749d26_ReadStr(_2115_l) == _1b5749d26_ReadStr(_2126_r)));;
			}
		}
		else if (_1b574c18b_IsBool(_2115_l.ptr())) {
			_case_begin_1a842ad22:;
			{
				return (_1b574c18b_IsBool(_2126_r.ptr()) && (_1b5749a90_ReadBool(_2115_l) == _1b5749a90_ReadBool(_2126_r)));;
			}
		}
		else if (_1b574c93e_IsNil(_2115_l.ptr())) {
			_case_begin_1a842ad88:;
			{
				return _1b574c93e_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1a9ee0ee0:;
			{
				return false;;
			}
		}
		_match_end_1a9ee0a39:;
	};
}



inline jule::Bool _1a3e434cb_equalCasting(jule::Ptr<_1a3b6784e_CastingExprModel> _4017_l, jule::Ptr<_1a3b6784e_CastingExprModel> _4039_r) {
	if ((!(_1a3cbb431_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1a3e44411_equalModels((*((*_4017_l.alloc)._field_Expr))._field_Model, (*(*(_4039_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1a3e43894_equalUnary(jule::Ptr<_1a3b665ea_UnaryExprModel> _4715_l, jule::Ptr<_1a3b665ea_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*(*(_4735_r))._field_Op.alloc)._field_Id) || ((*(*(_4715_l))._field_Op.alloc)._field_Kind != (*(*(_4735_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1a3e44411_equalModels((*((*_4715_l.alloc)._field_Expr))._field_Model, (*(*(_4735_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1a3e43c18_equalIndexing(jule::Ptr<_1a3b68a81_IndexingExprModel> _5418_l, jule::Ptr<_1a3b68a81_IndexingExprModel> _5441_r) {
	return (_1a3e44411_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*(*(_5441_r))._field_Expr.alloc)._field_Model) && _1a3e44411_equalModels((*((*_5418_l.alloc)._field_Index))._field_Model, (*(*(_5441_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1a3e4408c_equalBinary(jule::Ptr<_1a3b66221_BinaryExprModel> _5916_l, jule::Ptr<_1a3b66221_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*(*(_5937_r))._field_Op.alloc)._field_Id) || ((*(*(_5916_l))._field_Op.alloc)._field_Kind != (*(*(_5937_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1a3e44411_equalModels((*((*_5916_l.alloc)._field_Left))._field_Model, (*(*(_5937_r))._field_Left.alloc)._field_Model) && _1a3e44411_equalModels((*((*_5916_l.alloc)._field_Right))._field_Model, (*(*(_5937_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1a3e44411_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1a3e42c8e_typeData(&(_7016_l)) != _1a3e42c8e_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a843ab23:;
			{
				return (_7016_l.unsafe_cast_ptr<_1a3c31c26_Var>() == _7030_r.cast_ptr<_1a3c31c26_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a843b492:;
			{
				jule::Ptr<_1a3b6ad6e_StructSubIdentExprModel> _783_li = _7016_l.unsafe_cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>();;
				jule::Ptr<_1a3b6ad6e_StructSubIdentExprModel> _793_ri = _7030_r.cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_783_li))._field_Field == (*(_793_ri))._field_Field) && _1a3e44411_equalModels((*((*_783_li.alloc)._field_Expr))._field_Model, (*(*(_793_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a843b508:;
			{
				return _1a3e43157_equalConst(_7016_l.cast_ptr<_1b5747b9d_Const>(&__jule_any_type19), _7030_r.cast_ptr<_1b5747b9d_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1a843b041:;
			{
				return _1a3e434cb_equalCasting(_7016_l.cast_ptr<_1a3b6784e_CastingExprModel>(&__jule_any_type93), _7030_r.cast_ptr<_1a3b6784e_CastingExprModel>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a843b0a7:;
			{
				return _1a3e43894_equalUnary(_7016_l.cast_ptr<_1a3b665ea_UnaryExprModel>(&__jule_any_type110), _7030_r.cast_ptr<_1a3b665ea_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a843b11d:;
			{
				return _1a3e43c18_equalIndexing(_7016_l.cast_ptr<_1a3b68a81_IndexingExprModel>(&__jule_any_type45), _7030_r.cast_ptr<_1a3b68a81_IndexingExprModel>(&__jule_any_type45));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1a843b184:;
			{
				return _1a3e4408c_equalBinary(_7016_l.cast_ptr<_1a3b66221_BinaryExprModel>(&__jule_any_type111), _7030_r.cast_ptr<_1a3b66221_BinaryExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1a843ad10:;
			{
				return false;;
			}
		}
		_match_end_1a843a8c0:;
	};
}



inline void _1a3e4a02c_possibleNilRemove(jule::Ptr<_1a3e4904d_nils>* _7827_n, jule::Any _7837_m) {
	if (((*(_7827_n)) != nullptr)) {
		_1a3e49801_removeVar((*(_7827_n)).ptr(), _1a3e4aa00_getNilVar(_7837_m));
	};
}



inline jule::Bool _1a3e4a3e5_isGuaranteedNonNilExpr(jule::Ptr<_1a3e4904d_nils>* _8432_n, jule::Any _8442_m) {
	{
		auto &_match_expr{ _8442_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1a8442575:;
			{
				return true;;
			}
		}
		_match_end_1a8442520:;
	};
	return (((*(_8432_n)) != nullptr) && _1a3e49b42_isSafe((*(_8432_n)).ptr(), _1a3e4aa00_getNilVar(_8442_m)));;
}



inline jule::Bool _1a3e4a6ae_isNilValidType(jule::Ptr<_1a3cbac27_TypeKind> _9223_t) {
	return (_1a3cbd60e_Sptr(_9223_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1a3e4aa00_getNilVar(jule::Any _9414_m) {
	if ((!(_1a565b8d5_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9414_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a8443b4d:;
			{
				jule::Ptr<_1a3c31c26_Var> _1003_v = _9414_m.unsafe_cast_ptr<_1a3c31c26_Var>();;
				if ((!((*(_1003_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9414_m.unsafe_cast_ptr<_1a3c31c26_Var>());;
				};
				return _1a3e4aa00_getNilVar((*((*((*_1003_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a8443a82:;
			{
				return static_cast<jule::Uintptr>((*(_9414_m.unsafe_cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1a8443ae8:;
	};
	return 0LLU;;
}



inline jule::Bool _1a564b353_isConstantValidConditionalCase(jule::Ptr<_1a3bb6a68_If>* _68236_i) {
	{
		auto &_match_expr{ (*((*(_68236_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a844aea7:;
			{
				jule::Ptr<_1b5747b9d_Const> _6853_c = (*((*(_68236_i))))._field_Expr.unsafe_cast_ptr<_1b5747b9d_Const>();;
				return (_1b574c18b_IsBool(_6853_c.ptr()) && _1b5749a90_ReadBool(_6853_c));;
			}
		}
		_match_end_1a844ae52:;
	};
	return false;;
}



inline jule::Bool _1a564b661_isUnreachableExpr(jule::Any* _69123_expr) {
	{
		auto &_match_expr{ (*(_69123_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a844bc22:;
			{
				jule::Ptr<_1b5747b9d_Const> _6943_c = (*(_69123_expr)).cast_ptr<_1b5747b9d_Const>(&__jule_any_type19);;
				return (_1b574c18b_IsBool(_6943_c.ptr()) && (!(_1b5749a90_ReadBool(_6943_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1a844b040:;
			{
				jule::Ptr<_1a3b66221_BinaryExprModel> _6973_m = (*(_69123_expr)).cast_ptr<_1a3b66221_BinaryExprModel>(&__jule_any_type111);;
				if (((*((*(_6973_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1a564b661_isUnreachableExpr(&((*((*_6973_m.alloc)._field_Left))._field_Model)) || _1a564b661_isUnreachableExpr(&((*((*_6973_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1a844bbbc:;
	};
	return false;;
}



inline jule::Bool _1a564b92a_isConstantValidMatchCase(jule::Ptr<_1a3bbb386_Case>* _70630_case) {
	{
		auto expr = &((*((*(_70630_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a845109a:;
		if (it != expr_end) {
			jule::Ptr<_1a3c8982d_Data> *_7079_expr = it;
			{
				if (((_1a3c8a235_IsConst((*(_7079_expr)).ptr()) && _1b574c18b_IsBool((*(*(_7079_expr)).alloc)._field_Constant.ptr())) && _1b5749a90_ReadBool((*((*(_7079_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1a845109a:;
			++it;
			goto _iter_begin_1a845109a;
		}
		_iter_end_1a845109a:;
	};
	return false;;
}



inline jule::Bool _1a564bc6b_isUnreachableConditionalCase(jule::Ptr<_1a3bb6a68_If>* _71534_i) {
	return _1a564b661_isUnreachableExpr(&((*((*(_71534_i))))._field_Expr));;
}



inline jule::Bool _1a564c002_isUnreachableMatchCase(jule::Ptr<_1a3bbb386_Case>* _71928_case) {
	{
		auto expr = &((*((*(_71928_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8453058:;
		if (it != expr_end) {
			jule::Ptr<_1a3c8982d_Data> *_7209_expr = it;
			{
				if ((!(_1a564b661_isUnreachableExpr(&((*((*(_7209_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1a8453058:;
			++it;
			goto _iter_begin_1a8453058;
		}
		_iter_end_1a8453058:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1a56524d0_checkForBitShiftOpt(jule::Ptr<_1a3b65c26_OperandExprModel>* _58325_l, jule::Ptr<_1a3b65c26_OperandExprModel>* _58348_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1b57470ba_IsInt(_1a3cbb0e0_Str((*((*(_58325_l))))._field_Kind.ptr())))) || (!(_1b57470ba_IsInt(_1a3cbb0e0_Str((*((*(_58348_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1b574a5c9_AsU64((*((*(_58348_r))))._field_Model.cast_ptr<_1b5747b9d_Const>(&__jule_any_type19).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _5912_j = _1b5589160_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _5922_z = static_cast<jule::U64>(_5912_j);;
	if ((static_cast<jule::F64>(_5922_z) != _5912_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _5922_z;
	return __jule_func_result;;
}



inline jule::Bool _1a5652898_areSameLvalueExprModel(jule::Any* _60028_l, jule::Any* _60043_r) {
	{
		auto &_match_expr{ (*(_60028_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a984bdbd:;
			{
				return ((*(_60043_r)) == (*(_60028_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a984bb9d:;
			{
				{
					auto &_match_expr{ (*(_60043_r)) };
					
					if (_match_expr.type == &__jule_any_type98) {
						_case_begin_1a984c84c:;
						{
							goto _match_end_1a984c9c3;
						}
					}
					else {
						_case_begin_1a984ca28:;
						{
							return false;;
						}
					}
					_match_end_1a984c9c3:;
				};
				jule::Ptr<_1a3b6ad6e_StructSubIdentExprModel> _6133_lsi = (*(_60028_l)).cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>(&__jule_any_type98);;
				jule::Ptr<_1a3b6ad6e_StructSubIdentExprModel> _6143_rsi = (*(_60043_r)).cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>(&__jule_any_type98);;
				if (((*(_6133_lsi))._field_Field != (*(_6143_rsi))._field_Field)) {
					return false;;
				};
				return _1a5652898_areSameLvalueExprModel(&((*((*_6133_lsi.alloc)._field_Expr))._field_Model), &((*(*(_6143_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a984be34:;
			{
				{
					auto &_match_expr{ (*(_60043_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1a985007a:;
						{
							jule::Ptr<_1a3b665ea_UnaryExprModel> _6264_ul = (*(_60028_l)).cast_ptr<_1a3b665ea_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1a3b665ea_UnaryExprModel> _6274_ur = (*(_60043_r)).cast_ptr<_1a3b665ea_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_6264_ul))._field_Op))._field_Id != (*(*(_6274_ur))._field_Op.alloc)._field_Id) || ((*(*(_6264_ul))._field_Op.alloc)._field_Kind != (*(*(_6274_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1a5652898_areSameLvalueExprModel(&((*((*_6264_ul.alloc)._field_Expr))._field_Model), &((*(*(_6274_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1a984e497:;
				};
			}
		}
		_match_end_1a984bd24:;
	};
	return false;;
}



inline void _1a5654a65_possibleDynamicRemove(jule::Ptr<_1a56539cb_dynamic>* _8131_d, jule::Any _8144_m) {
	if (((*(_8131_d)) != nullptr)) {
		_1a565427e_removeVar((*(_8131_d)).ptr(), _1a56555e3_getDynamicVar(_8144_m));
	};
}



inline jule::Bool _1a5654d73_isDynamicValidType(jule::Ptr<_1a3cbac27_TypeKind> _8727_t) {
	return _1a5640e91_IsAny(&(_8727_t));;
}



inline jule::Ptr<_1a3cbac27_TypeKind> _1a56552a2_isTypeGuaranteedDynamicData(jule::Ptr<_1a56539cb_dynamic>* _8937_dy, jule::Ptr<_1a3cbac27_TypeKind> _8955_t, jule::Any _8973_m) {
	jule::Bool _902_isAny = _1a5640e91_IsAny(&(_8955_t));;
	if (((!(_902_isAny)) && (_1a3cbeb82_Trait(_8955_t.ptr()) == nullptr))) {
		return _8955_t;;
	};
	if ((!(_902_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8973_m };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1a98c0e86:;
			{
				jule::Ptr<_1a3b6784e_CastingExprModel> _997_cem = _8973_m.unsafe_cast_ptr<_1a3b6784e_CastingExprModel>();;
				return _1a56552a2_isTypeGuaranteedDynamicData(_8937_dy, (*(_997_cem))._field_ExprKind, (*((*_997_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1a98c1294:;
	};
	jule::Uintptr _1022_var = _1a56555e3_getDynamicVar(_8973_m);;
	if ((_1022_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8937_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a98c2c8a:;
		if (it != expr_end) {
			_1a565368a_dynamicVar _10614_v = *it;
			{
				if ((_10614_v._field_var == _1022_var)) {
					return _10614_v._field_kind;;
				};
			}
			_iter_next_1a98c2c8a:;
			++it;
			goto _iter_begin_1a98c2c8a;
		}
		_iter_end_1a98c2c8a:;
	};
	return nullptr;;
}



inline jule::Uintptr _1a56555e3_getDynamicVar(jule::Any _11418_m) {
	if ((!(_1a565d3ba_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11418_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a98c34a5:;
			{
				jule::Ptr<_1a3c31c26_Var> _1203_v = _11418_m.unsafe_cast_ptr<_1a3c31c26_Var>();;
				if ((!((*(_1203_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11418_m.unsafe_cast_ptr<_1a3c31c26_Var>());;
				};
				return _1a56555e3_getDynamicVar((*((*((*_1203_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a98c3384:;
			{
				return static_cast<jule::Uintptr>((*(_11418_m.unsafe_cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a98c3d79:;
			{
				jule::Ptr<_1a3b665ea_UnaryExprModel> _1313_uem = _11418_m.unsafe_cast_ptr<_1a3b665ea_UnaryExprModel>();;
				if (((*((*(_1313_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1a56555e3_getDynamicVar((*((*_1313_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1a98c340b:;
	};
	return 0LLU;;
}



inline jule::Bool _1a5659152_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1a565988e_fitsSize(_8424_m, _8424_m);;
}



inline jule::I64 _1a565951a_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a98d3460:;
		if (it != expr_end) {
			jule::I64 _906_i = it - expr->begin();
			jule::Any *_909_m = it;
			{
				if (_1a565988e_fitsSize((*(_909_m)), _8934_expr)) {
					return _906_i;;
				};
			}
			_iter_next_1a98d3460:;
			++it;
			_906_i++;
			goto _iter_begin_1a98d3460;
		}
		_iter_end_1a98d3460:;
	};
	return -1LL;;
}



inline jule::Bool _1a565988e_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2) {
	if ((_1a3e42c8e_typeData(&(_9813_e1)) != _1a3e42c8e_typeData(&(_9828_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a98d4e78:;
			{
				jule::Ptr<_1b5747b9d_Const> _1043_exprConst = _9828_e2.cast_ptr<_1b5747b9d_Const>(&__jule_any_type19);;
				return ((_1b574a860_AsF64(_1043_exprConst.ptr()) >= 0LL) && _1b574e567_GtEq(_9813_e1.unsafe_cast_ptr<_1b5747b9d_Const>().ptr(), (*(_1043_exprConst))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a98d4ede:;
			{
				return (_9828_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a98d5055:;
			{
				jule::Ptr<_1a3b6ad6e_StructSubIdentExprModel> _1093_ssi1 = _9813_e1.unsafe_cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>();;
				jule::Ptr<_1a3b6ad6e_StructSubIdentExprModel> _1103_ssi2 = _9828_e2.cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>(&__jule_any_type98);;
				return (_1a3e44411_equalModels((*((*(_1093_ssi1))._field_Expr))._field_Model, (*(*(_1103_ssi2))._field_Expr.alloc)._field_Model) && ((*_1093_ssi1.alloc)._field_Field == (*(_1103_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a98d50bb:;
			{
				jule::Ptr<_1a3b665ea_UnaryExprModel> _1133_uem1 = _9813_e1.unsafe_cast_ptr<_1a3b665ea_UnaryExprModel>();;
				jule::Ptr<_1a3b665ea_UnaryExprModel> _1143_uem2 = _9828_e2.cast_ptr<_1a3b665ea_UnaryExprModel>(&__jule_any_type110);;
				if ((((*((*(_1133_uem1))._field_Op))._field_Id != static_cast<jule::U64>(62LLU)) || ((*(*(_1133_uem1))._field_Op.alloc)._field_Id != (*(*(_1143_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1a565988e_fitsSize((*((*_1133_uem1.alloc)._field_Expr))._field_Model, (*(*(_1143_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1a98d3b69:;
			{
				return false;;
			}
		}
		_match_end_1a98d3b14:;
	};
}



inline void _1a5659bbe_possibleBoundaryRemove(jule::Ptr<_1a56580da_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a98d53da:;
		if (it != expr_end) {
			_1a5657c99_boundaryVar _12614_v = *it;
			{
				{
					auto expr = &(_12614_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a98dbce8:;
					if (it != expr_end) {
						jule::I64 _1277_i = it - expr->begin();
						jule::Any _12710_max = *it;
						{
							if (_1a3e44411_equalModels(_12710_max, _12446_model)) {
								_12614_v._field_maxSize=jule::append(_12614_v._field_maxSize.slice(0LL, _1277_i),_12614_v._field_maxSize.slice((_1277_i + 1LL)));
								goto _iter_end_1a98dbce8;
							};
						}
						_iter_next_1a98dbce8:;
						++it;
						_1277_i++;
						goto _iter_begin_1a98dbce8;
					}
					_iter_end_1a98dbce8:;
				};
			}
			_iter_next_1a98d53da:;
			++it;
			goto _iter_begin_1a98d53da;
		}
		_iter_end_1a98d53da:;
	};
}



inline jule::Bool _1a5659e88_isBoundaryRiskyType(jule::Ptr<_1a3cbac27_TypeKind> _13628_t) {
	return (_1a3cbe148_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1a565a252_isBoundaryValidType(jule::Ptr<_1a3cbac27_TypeKind> _14128_t) {
	return ((_1a3cbe3ce_Slc(_14128_t.ptr()) != nullptr) || (_1a3cbe148_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1a565a51b_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1a565b8d5_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a98de317:;
			{
				jule::Ptr<_1a3c31c26_Var> _1493_v = _14319_m.unsafe_cast_ptr<_1a3c31c26_Var>();;
				if ((!((*(_1493_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1a3c31c26_Var>());;
				};
				return _1a565a51b_getBoundaryVar((*((*((*_1493_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a98de658:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1a3b6ad6e_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a98de3b1:;
			{
				jule::Ptr<_1a3b665ea_UnaryExprModel> _1603_uem = _14319_m.unsafe_cast_ptr<_1a3b665ea_UnaryExprModel>();;
				if (((*((*(_1603_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1a565a51b_getBoundaryVar((*((*_1603_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1a98de2b2:;
	};
	return 0LLU;;
}



inline void _1a565d596_PushOptLevel(jule::I64 _3217_level) {
	jule::Bool _332_l1 = (_3217_level >= static_cast<jule::I64>(1LL));;
	_1a565ac7a_Copy=_332_l1;
	_1a565b077_Deadcode=_332_l1;
	_1a565b330_Append=_332_l1;
	_1a565b62c_Math=_332_l1;
	_1a565b8d5_Access=_332_l1;
	_1a565bb8d_Inline=_332_l1;
	_1a565be46_Ptr=_332_l1;
	_1a565c30e_Cond=_332_l1;
	_1a565c551_Str=_332_l1;
	_1a565c7e8_Slice=_332_l1;
	_1a565caa1_Assign=_332_l1;
	_1a565cd59_Exceptional=_332_l1;
	_1a565d112_Iter=_332_l1;
	_1a565d3ba_Dynamic=_332_l1;
}



inline void _1a513b3e8_detectEnabled(void) {
	_1a513910a_exprEnabled=(((_1a565be46_Ptr || _1a565b62c_Math) || _1a565b8d5_Access) || _1a565c30e_Cond);
	_1a51393e6_scopeEnabled=((((((((_1a565c30e_Cond || _1a565b330_Append) || _1a565ac7a_Copy) || _1a565c551_Str) || _1a565c7e8_Slice) || _1a565caa1_Assign) || _1a565cd59_Exceptional) || _1a565d112_Iter) || _1a565d3ba_Dynamic);
}



inline void _1a51634db_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_212126b7e_Exit(1LL);
}



inline jule::U64 _1a5dac377_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1a5ce09a3_isCopyOptimizable(jule::Ptr<_1a3c8982d_Data>* _108423_expr) {
	if ((!((*((*(_108423_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_108423_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1aa48a18c:;
			{
				return false;;
			}
		}
		_match_end_1aa48a137:;
	};
	return true;;
}



inline jule::Bool _1a5ce0d6b_isIterCopyOptimizable(jule::Ptr<_1a3c8982d_Data>* _109527_expr, jule::Ptr<_1a3c31c26_Var>* _109541_v) {
	if (((!((*((*(_109527_expr))))._field_Lvalue)) && (!(_1a3cbc5a8_Mutable((*((*(_109527_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_109541_v))))._field_Mutable)) && (!((*((*(_109527_expr))))._field_Mutable)));;
}



inline jule::Bool _1a5ce129a_captureVarHandling(jule::Ptr<_1a5db5abc_ObjectCoder>* _110228_oc, jule::Ptr<_1a3b69037_AnonFnExprModel>* _110251_m, jule::Ptr<_1a3c31c26_Var>* _110277_v) {
	{
		auto expr = &((*((*(_110251_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa48c326:;
		if (it != expr_end) {
			jule::Ptr<_1a3c31c26_Var> _11039_cv = *it;
			{
				if ((_11039_cv == (*(_110277_v)))) {
					_1a5db6271_write((*(_110228_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1a5d0aeb8_var(&((*((*(_110228_oc))))._field_Buf), (*(_110277_v)));
					return true;;
				};
			}
			_iter_next_1aa48c326:;
			++it;
			goto _iter_begin_1aa48c326;
		}
		_iter_end_1aa48c326:;
	};
	return false;;
}



inline jule::Str _1a5d02da0_decomposeCommonEsq(jule::U8 _164523_b) {
	{
		auto &_match_expr{ _164523_b };
		
		if (_match_expr == '\\') {
			_case_begin_1aa3ade90:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1aa3add08:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1aa3add6e:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1aa3ad874:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1aa3ad8da:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1aa3ad962:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1aa3ad9d9:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1aa3ada61:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1aa3ae006:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1aa3ae06c:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1aa3ac0d1:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa3ad81e:;
	};
}



inline jule::Str _1a5d031ad_sbtoa(jule::U8 _167210_b) {
	if ((_167210_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_167210_b < 128LLU)) {
		jule::Str _16773_seq = _1a5d02da0_decomposeCommonEsq(_167210_b);;
		if (!(_16773_seq).empty()) {
			return _16773_seq;;
		};
		if (((32LL <= _167210_b) && (_167210_b <= 126LLU))) {
			return jule::Str::from_byte(_167210_b);;
		};
	};
	jule::Str _16852_seq = _1b5739684_FmtUint(static_cast<jule::U64>(_167210_b), 8LL);;
	if ((_16852_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _16852_seq);;
	};
	return (jule::Str::lit("\\", 1) + _16852_seq);;
}



inline void _1a5d03499_cstrBytes(_1e7be2632_StrBuilder* _169219_s, jule::Str _169234_ctx) {
	{
		auto expr = &(_169234_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa3b3c75:;
		if (it != expr_end) {
			jule::U8 *_16939_b = it;
			{
				_1e7beb262_WriteStr(_169219_s, _1a5d031ad_sbtoa((*(_16939_b))));
			}
			_iter_next_1aa3b3c75:;
			++it;
			goto _iter_begin_1aa3b3c75;
		}
		_iter_end_1aa3b3c75:;
	};
}



inline void _1a5d037c9_cstrLit(_1e7be2632_StrBuilder* _169817_s, jule::Str _169832_ctx) {
	_1e7beb51a_WriteByte(_169817_s, '\"');
	_1a5d03499_cstrBytes(_169817_s, _169832_ctx);
	_1e7beb51a_WriteByte(_169817_s, '\"');
}



inline void _1a5d03b70_ftoa(_1e7be2632_StrBuilder* _170414_s, jule::F64 _170429_f, jule::I64 _170437_bitsize) {
	if ((_170437_bitsize != 32LL)) {
		if ((_170429_f == static_cast<jule::F64>(static_cast<jule::I64>(_170429_f)))) {
			_1a5d03e5b_itoa(_170414_s, static_cast<jule::I64>(_170429_f));
			return;;
		};
		if ((_170429_f == static_cast<jule::F64>(static_cast<jule::U64>(_170429_f)))) {
			_1a5d04247_utoa(_170414_s, static_cast<jule::U64>(_170429_f));
			return;;
		};
	};
	jule::Str _17152_m = _1b57230eb_FmtFloat(_170429_f, 'f', -1LL, _170437_bitsize);;
	_1e7beb262_WriteStr(_170414_s, _17152_m);
	if ((!(_1e7bd2e5d_Contains(_17152_m, jule::Str::lit(".", 1))))) {
		_1e7beb262_WriteStr(_170414_s, jule::Str::lit(".0", 2));
	};
}



inline void _1a5d03e5b_itoa(_1e7be2632_StrBuilder* _172214_s, jule::I64 _172229_x) {
	{
		
		if ((_172229_x == jule::MAX_I64)) {
			_case_begin_1aa3b8054:;
			{
				_1e7beb262_WriteStr(_172214_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_172229_x == jule::MIN_I64)) {
			_case_begin_1aa3b80ed:;
			{
				_1e7beb262_WriteStr(_172214_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1aa3b7e44:;
	};
	_1e7beb262_WriteStr(_172214_s, _1b5739a4c_FmtInt(_172229_x, 10LL));
	if (_1e7c999a3_Is64Bit(jule::Str::lit("amd64", 5))) {
		_1e7beb51a_WriteByte(_172214_s, 'L');
	};
	_1e7beb51a_WriteByte(_172214_s, 'L');
}



inline void _1a5d04247_utoa(_1e7be2632_StrBuilder* _173914_s, jule::U64 _173929_x) {
	{
		
		if ((_173929_x == jule::MAX_U64)) {
			_case_begin_1aa3ba199:;
			{
				_1e7beb262_WriteStr(_173914_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1aa3ba067:;
	};
	_1e7beb262_WriteStr(_173914_s, _1b5739684_FmtUint(_173929_x, 10LL));
	if (_1e7c999a3_Is64Bit(jule::Str::lit("amd64", 5))) {
		_1e7beb51a_WriteByte(_173914_s, 'L');
	};
	_1e7beb262_WriteStr(_173914_s, jule::Str::lit("LU", 2));
}



inline void _1a5d04896_operatorOverloadingBinary(_1e7be2632_StrBuilder* _175335_buf, jule::Ptr<_1a3b61cbb_StructIns>* _175357_s, jule::Str* _175373_l, jule::Str* _17543_r, jule::U64 _175411_op, jule::Str _175424_kind) {
	;
	jule::Ptr<_1a3b770cd_FnIns> _17566_f = static_cast<jule::Ptr<_1a3b770cd_FnIns>>(nullptr);;
	if ((_175411_op == static_cast<jule::U64>(51LLU))) {
		_17566_f=_1a5644417_FindOperator(_175357_s, static_cast<jule::U64>(50LLU), false);
		_1e7beb51a_WriteByte(_175335_buf, '!');
	} else {
		_17566_f=_1a5644417_FindOperator(_175357_s, _175411_op, false);
	};
	if ((_17566_f == nullptr)) {
		if (((_175411_op == static_cast<jule::U64>(50LLU)) || (_175411_op == static_cast<jule::U64>(51LLU)))) {
			static__1a5d0a8e1_structureIns(_175335_buf, _175357_s);
			_1e7beb262_WriteStr(_175335_buf, jule::Str::lit("_eq", 3));
			goto _julec_label_1aa3c0611;
		};
		jule::panic(jule::Str::lit("binary operator overloading is not exist, this is an implementation mistake", 75) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1770:3"));;
	};
	static__1a5d09c42_funcIns(_175335_buf, &(_17566_f));
	_julec_label_1aa3c0611:;
	_1e7beb262_WriteStr(_175335_buf, jule::Str::lit("(&", 2));
	_1e7beb262_WriteStr(_175335_buf, (*(_175373_l)));
	_1e7beb262_WriteStr(_175335_buf, jule::Str::lit(", ", 2));
	_1e7beb262_WriteStr(_175335_buf, (*(_17543_r)));
	_1e7beb51a_WriteByte(_175335_buf, ')');
}



inline jule::Slice<jule::U8> _1a5dc2d93_concatAllParts(jule::Slice<jule::Ptr<_1a3b27a62_Token>> _128419_parts) {
	jule::I64 _12856_n = 0LL;;
	{
		auto expr = &(_128419_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa80b9d6:;
		if (it != expr_end) {
			jule::Ptr<_1a3b27a62_Token> *_12869_part = it;
			{
				_12856_n+=(*((*(_12869_part))))._field_Kind.len();
			}
			_iter_next_1aa80b9d6:;
			++it;
			goto _iter_begin_1aa80b9d6;
		}
		_iter_end_1aa80b9d6:;
	};
	if ((_12856_n == 0LL)) {
		return nullptr;;
	};
	_1e7be2632_StrBuilder _12926_s = static__1e7be28eb_New(_12856_n);;
	{
		auto expr = &(_128419_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa80ccd4:;
		if (it != expr_end) {
			jule::Ptr<_1a3b27a62_Token> *_12939_p = it;
			{
				_1e7beb262_WriteStr(&_12926_s, (*((*(_12939_p))))._field_Kind);
			}
			_iter_next_1aa80ccd4:;
			++it;
			goto _iter_begin_1aa80ccd4;
		}
		_iter_end_1aa80ccd4:;
	};
	return _1e7bec50a_Buf(&_12926_s);;
}



inline jule::Bool _1a5dc31a1_isHeadDecl(jule::Ptr<_1a3b740ec_Fn>* _130020_m) {
	if ((((*((*(_130020_m))))._field_Generics.len() > 0LL) || ((*((*(_130020_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1a5641568_IsOpMethod(_130020_m)) {
		return true;;
	};
	jule::Ptr<_1a3b770cd_FnIns> _13076_mi = (*((*(_130020_m))))._field_Instances[0LL];;
	;
	return static__1a3c332ee_Dispose(_1a3b62d33_FindMethod((*(_13076_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Bool _1a5dc346a_defaultEq(jule::Ptr<_1a3b61cbb_StructIns>* _131315_s) {
	return ((*((*(_131315_s))))._field_Comparable && ((*((*(_131315_s))))._field_Operators._field_Eq == nullptr));;
}



inline jule::Bool _1a5dd2369_shouldInitialized(jule::Ptr<_1a3cbac27_TypeKind>* _46427_t) {
	jule::Ptr<_1a3cc3801_Prim> _4652_prim = _1a3cbd378_Prim((*(_46427_t)).ptr());;
	if ((_4652_prim != nullptr)) {
		return ((!(_1a3cc701e_IsAny(_4652_prim))) && (!(_1a3cc6c88_IsStr(_4652_prim))));;
	};
	{
		
		if ((_1a3cbd60e_Sptr((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1aa931523:;
			{
				return false;;
			}
		}
		else if ((_1a3cbee18_Map((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1aa931589:;
			{
				return false;;
			}
		}
		else if ((_1a3cbe3ce_Slc((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1aa931600:;
			{
				return false;;
			}
		}
		else if ((_1a3cbeb82_Trait((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1aa930753:;
			{
				return false;;
			}
		}
		else if ((_1a3cbe665_Fn((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1aa9316aa:;
			{
				return false;;
			}
		}
		else if ((_1a3cbe148_Arr((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1aa931721:;
			{
				jule::Ptr<_1a3cca121_Arr> _4817_arr = _1a3cbe148_Arr((*(_46427_t)).ptr());;
				return _1a5dd2369_shouldInitialized(&((*(_4817_arr))._field_Elem));;
			}
		}
		else if ((_1a3cbe8eb_Struct((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1aa931787:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1aa9306cb:;
			{
				return true;;
			}
		}
		_match_end_1aa930a2d:;
	};
}



inline void _212131c99_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _21213201e_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_212131c99_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _416_max = _212131abd_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_212131abd_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9cb1e4:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I64 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1aa9cb1e4:;
			++it;
			goto _iter_begin_1aa9cb1e4;
		}
		_iter_end_1aa9cb1e4:;
	};
	_1e7be2632_StrBuilder _496_s = static__1e7be28eb_New(32LL);;
	;
	{
		auto expr = &(_212131abd_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9cca31:;
		if (it != expr_end) {
			jule::I64 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				_1e7beb262_WriteStr(&_496_s, (*(_519_part))[0LL]);
				_1e7beb262_WriteStr(&_496_s, _1e7bc876c_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
				_1e7beb262_WriteStr(&_496_s, (*(_519_part))[1LL]);
				if (((_516_i + 1LL) < 5LL)) {
					_1e7beb51a_WriteByte(&_496_s, '\n');
				};
			}
			_iter_next_1aa9cca31:;
			++it;
			_516_i++;
			goto _iter_begin_1aa9cca31;
		}
		_iter_end_1aa9cca31:;
	};
	jule::outln(_496_s);
}



inline void _212132250_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_212131c99_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.16 @master", 18));
}



inline void _21213245e_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _2121325c4_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _2121327c2_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_212131c99_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1aa9d386c:;
			{
				_21213245e_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1aa9d3938:;
			{
				_2121325c4_toolDistarch();
			}
		}
		else {
			_case_begin_1aa9d2371:;
			{
				_212131c99_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1aa9d3460:;
	};
}



inline void _212132a03_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_212131c99_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.16 @master", 33));
	jule::outln(jule::Str::lit("architecture: amd64", 19));
	jule::outln(jule::Str::lit("operating system: linux", 23));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _21212cb74_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _21212e280_CppStd));
}



inline void _212132d44_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_212131c99_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1aa9d6e58:;
			{
				({
					auto except = static__212306b3e_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_212131c99_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1aa9d5a4a:;
			{
				_212131c99_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1aa9d693b:;
	};
}



inline jule::Bool _212133086_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1aa9d8432:;
			{
				_21213201e_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1aa9d8498:;
			{
				_212132250_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1aa9d850e:;
			{
				_2121327c2_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1aa9d7be5:;
			{
				_212132a03_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1aa9d7c5b:;
			{
				_212132d44_mod(_15320_args);
			}
		}
		else {
			_case_begin_1aa9d6a90:;
			{
				return false;;
			}
		}
		_match_end_1aa9d761d:;
	};
	return true;;
}



inline void _21213322e_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1896_args = _2123dbc13_Args();;
	if ((_1896_args.len() < 2LL)) {
		_21213322e_showInfo();
		return;;
	};
	if (_212133086_processCommand(&(_1896_args))) {
		return;;
	};
	_1a3ce966d_compileCommand(&(_1896_args));
}



inline void _1a610899c_init(void) {
	_21212cb74_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_212305ce7_File> _1a6108c66_openOutput(jule::Str* _4316_path) {
	jule::Str _442_dir = _1e7c00ae6_Dir((*(_4316_path)));;
	({
		auto except = static__212304a71_Of(_442_dir);
		if (!except.ok()) {
			({
				auto except = static__1e7c03269_Create(_442_dir);
				if (!except.ok()) {
					_1a51634db_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__2123064ce_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1a51634db_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1a6108e0e_clearObjects(void) {
	({
		auto except = static__21230318a_Remove(_1a610a064_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1e7c0349a_Remove(_1a610824e_OutDir);
}



inline void _1a610921c_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_2120c08d6_Cmd> _736_cmd = static__2120c0d04_New(_7214_compiler);;
	(*(_736_cmd))._field_Args=_1e7bd2ad9_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _2120c1002_Spawn(_736_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1aa9de1d5:;
					{
						static__1a515e8b1_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1aa9ddda5:;
					{
						static__1a515e8b1_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1aa9ddbda:;
					{
						static__1a515e8b1_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1aa9ddcea:;
			};
			_1a51634db_Throw(jule::Str());
		}
	});
	jule::I64 _862_status = ({
		auto except = _2120c1486_Wait(_736_cmd);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:12"));
		(except.result);
	});;
	if ((_862_status != 0LL)) {
		jule::Str _883_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _21212cb74_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1a515e8b1_Print(jule::Str::lit("\033[31m", 5), _883_errorMessage);
		_1a51634db_Throw(jule::Str());
	};
	_1a6108e0e_clearObjects();
}



inline jule::Bool _1a61094d6_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1002_offset = _1e7bd1698_FindLastByte(_9920_path, '.');;
	if ((_1002_offset == -1LL)) {
		return false;;
	};
	return _1e7c87e58_IsValidCppExt(_9920_path.slice(_1002_offset));;
}



inline void _1a6109717_pushCompCmdClang(_1e7be2632_StrBuilder* _10726_cmd) {
	_1e7beb262_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_1e7beb262_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _21212e280_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1aa9e200c:;
			{
				_1e7beb262_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1aa9e2dba:;
			{
				_1e7beb262_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1aa9e2e31:;
			{
				_1e7beb262_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1aa9e2084:;
	};
	_1e7beb51a_WriteByte(_10726_cmd, ' ');
	if (_2121303d5_Production) {
		_1e7beb262_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_1e7beb262_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_1e7beb262_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1e7beb262_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1e7beb262_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1a6109948_pushCompCmdGcc(_1e7be2632_StrBuilder* _13324_cmd) {
	_1e7beb262_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_1e7beb262_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _21212e280_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1aa9e444e:;
			{
				_1e7beb262_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1aa9e5d79:;
			{
				_1e7beb262_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1aa9e5de0:;
			{
				_1e7beb262_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1aa9e44d7:;
	};
	_1e7beb51a_WriteByte(_13324_cmd, ' ');
	if (_2121303d5_Production) {
		_1e7beb262_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_1e7beb262_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1e7beb262_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1e7beb262_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1a6109dcc_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1a5634c54_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1603_compiler = &(_21212e071_CompilerPath);;
	_1e7be2632_StrBuilder _1616_cmd = static__1e7be28eb_New(64LL);;
	{
		auto &_match_expr{ _21212cb74_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1aa9e8a91:;
			{
				_1a6109948_pushCompCmdGcc(&(_1616_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1aa9e90d0:;
			{
				_1a6109717_pushCompCmdClang(&(_1616_cmd));
			}
		}
		_match_end_1aa9e8d6b:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9e9388:;
		if (it != expr_end) {
			jule::Ptr<_1a3bd86d3_ImportInfo> *_1719_u = it;
			{
				if (((*((*(_1719_u))))._field_Binded && _1a61094d6_isCppSourceFile((*(*(_1719_u)).alloc)._field_Path))) {
					_1e7beb262_WriteStr(&_1616_cmd, (*(*(_1719_u)).alloc)._field_Path);
					_1e7beb51a_WriteByte(&_1616_cmd, ' ');
				};
			}
			_iter_next_1aa9e9388:;
			++it;
			goto _iter_begin_1aa9e9388;
		}
		_iter_end_1aa9e9388:;
	};
	if (!(_1a61087e3_Out).empty()) {
		_1e7beb262_WriteStr(&_1616_cmd, jule::Str::lit("-o ", 3));
		_1e7beb262_WriteStr(&_1616_cmd, _1a61087e3_Out);
		_1e7beb51a_WriteByte(&_1616_cmd, ' ');
	};
	_1e7beb262_WriteStr(&_1616_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9ebd91:;
		if (it != expr_end) {
			jule::Str *_1869_pass = it;
			{
				_1e7beb51a_WriteByte(&_1616_cmd, ' ');
				_1e7beb262_WriteStr(&_1616_cmd, (*(_1869_pass)));
			}
			_iter_next_1aa9ebd91:;
			++it;
			goto _iter_begin_1aa9ebd91;
		}
		_iter_end_1aa9ebd91:;
	};
	if (_212127d39_Os.equal("windows", 7)) {
		_1e7beb262_WriteStr(&_1616_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1603_compiler));
	__jule_func_result.__jule_result_arg1 = _1e7beba59_Str(&_1616_cmd);
	return __jule_func_result;;
}



inline jule::Str _1a610a064_getCompilePath(void) {
	return _1e7beee03_Join(jule::Slice<jule::Str>::make({_1a610824e_OutDir,_1a610853a_OutName}));;
}



inline void _1a610a295_applyTargetIndependentOptimizations(jule::Ptr<_1a5634c54_IR>* _20545_ir) {
	jule::Ptr<_1a51395e4_Optimizer> _2066_opt = static__1a5139a67_New(_20545_ir);;
	_1a513b151_Optimize(_2066_opt.ptr());
}



inline void _1a610a43d_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _21212cb74_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1aa9ee569:;
			{
				_1a51634db_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1aa9ee49d:;
			{
				if ((_21212e071_CompilerPath).empty()) {
					_21212e071_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1aa9ee17e:;
			{
				if ((_21212e071_CompilerPath).empty()) {
					_21212e071_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1aa9edc61:;
			{
				_1a51634db_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _21212cb74_Compiler));
			}
		}
		_match_end_1aa9edeb4:;
	};
}



inline void _1a610a64c_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1a51634db_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1a3cdcee1_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1a51634db_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1a3ce86c2_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1a51634db_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2482_parts = _1e7bd2ad9_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2482_parts.len() != 2LL)) {
		_1a51634db_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2532_os;
	jule::Str _2536_arch;
	({
		jule::Str ___jule_assign_arg = _2482_parts[0LL];
		jule::Str _1___jule_assign_arg = _2482_parts[1LL];
		_2532_os = ___jule_assign_arg;
		_2536_arch = _1___jule_assign_arg;
	});
	if ((!_2532_os.equal("native", 6))) {
		_1a3cdcee1_checkTargetOs(_2532_os);
		_212127d39_Os=_2532_os;
	};
	if ((!_2536_arch.equal("native", 6))) {
		_1a610a64c_checkTargetArch(_2536_arch);
		_2121280e2_Arch=_2536_arch;
	};
	_1b573e0d4_UpdateTarget();
}



inline void _1a3ce8815_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1a51634db_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1aaa05e44:;
			{
				goto _match_end_1aaa056a2;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1aaa05edd:;
			{
				_1a565d596_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1aaa05790:;
			{
				_1a51634db_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1aaa056a2:;
	};
}



inline void _1a3ce8b9a_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _21212e280_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1aaa06c9c:;
			{
				goto _match_end_1aaa06780;
			}
		}
		else {
			_case_begin_1aaa05b7a:;
			{
				_1a51634db_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _21212e280_CppStd));
			}
		}
		_match_end_1aaa06780:;
	};
}



inline jule::Slice<jule::Str> _1a3ce8e42_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2936_opt = jule::Str::lit("L0", 2);;
	jule::Str _2946_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1a61031d3_FlagSet> _2966_fs = static__1a61034be_New();;
	_1aaa08672_AddVar(_2966_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2936_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1aaa08672_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_2946_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1aaa08672_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1a61087e3_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_21212e4b1_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_21212e769_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1aaa08672_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_21212cb74_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1aaa08672_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_21212e071_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_2121303d5_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_21212ecca_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_212130193_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1aaa08672_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_21212e280_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a565ac7a_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a565b077_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a565b330_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a565b62c_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a565b8d5_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a565bb8d_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a565be46_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a565c30e_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a565c551_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a565c7e8_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a565caa1_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a565cd59_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a565d112_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1aa21262e_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a565d3ba_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3246_content = ({
		auto except = _1a610438d_Parse(_2966_fs, (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1a51634db_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1a610a43d_checkCompilerFlag();
	_1a3ce8b9a_checkCppStdFlag();
	_1a3ce86c2_checkTargetFlag(&(_2946_target));
	_1a3ce8815_checkOptFlag(&(_2936_opt));
	return _3246_content;;
}



inline void _1a3ce9173_setupSemaFlags(jule::I64* _33724_flags) {
	if (_21212e4b1_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1a5634c54_IR> _1a3ce943c_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3442_content = _1a3ce8e42_checkFlags(_34313_args);;
	jule::I64 _3466_semaFlags = static_cast<jule::I64>(0LL);;
	_1a3ce9173_setupSemaFlags(&(_3466_semaFlags));
	if ((_3442_content.len() == 0LL)) {
		_1a51634db_Throw(_1e7c9543d_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3442_content.len() > 1LL)) {
		_1a51634db_Throw((jule::Str::lit("undefined content: ", 19) + _3442_content[1LL]));
	};
	jule::Str _3546_path;
	jule::Bool _35412_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e7c00453_Abs(_3442_content[0LL]);
		_3546_path = __jule_assign_result.__jule_result_arg0;
		_35412_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35412_ok))) {
		_1a51634db_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_212307dd7_Status> _3602_inf = ({
		auto except = static__212304a71_Of(_2121271ce_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1a51634db_Throw(_1e7c9543d_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_212307dd7_Status>(nullptr);});
	});;
	if ((!(_2123082b1_IsDir(_3602_inf.ptr())))) {
		_1a51634db_Throw(_1e7c9543d_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1a5634c54_IR> _3686_ir;
	jule::Slice<_1e7c94ecb_Log> _36810_logs;
	({
		__jule_tuple_x_1a5634c54_IR__jule_tuple_s_1e7c94ecb_Log __jule_assign_result = static__1a56351e9_Build(_3546_path, _3466_semaFlags);
		_3686_ir = __jule_assign_result.__jule_result_arg0;
		_36810_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3686_ir == nullptr) && (_36810_logs == nullptr))) {
		_1a51634db_Throw(_1e7c9543d_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3546_path, &__jule_any_type4)})));
	};
	if ((_36810_logs != nullptr)) {
		static__1a5162a29_PrintLogs(&(_36810_logs));
		_1a51634db_Throw(jule::Str());
	};
	return _3686_ir;;
}



inline void _1a3ce966d_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	((*(_38324_args))).mut_slice(1LL);;
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_21212ea22_Test=true;
		((*(_38324_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1a5634c54_IR> _3896_ir = _1a3ce943c_buildIr(_38324_args);;
	;
	if ((!(_21212ea22_Test))) {
		jule::Ptr<_1a3b740ec_Fn> _3947_main = _1a3bdcb8d_FindFn((*(_3896_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_3947_main == nullptr)) {
			_1a51634db_Throw(_1e7c9543d_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1a610a295_applyTargetIndependentOptimizations(&(_3896_ir));
	_1a5636261_Order(_3896_ir);
	jule::Str _4052_compPath = _1a610a064_getCompilePath();;
	jule::Str _4062_compiler;
	jule::Str _40612_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1a6109dcc_genCompileCmd(_4052_compPath, &(_3896_ir));
		_4062_compiler = __jule_assign_result.__jule_result_arg0;
		_40612_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1a5db5abc_ObjectCoder> _4086_oc = static__1a5db5eb8_New(&(_3896_ir), _1a5db3d1d_SerializationInfo{._field_Compiler=_4062_compiler, ._field_CompilerCommand=_40612_compilerCmd});;
	if (_21212ea22_Test) {
		jule::Ptr<_1a5d058db_TestCoder> _4137_tc = static__1a5d05d5e_New(&(_4086_oc));;
		_1a5d071d4_Serialize(_4137_tc);
	} else {
		_1a5dc29ca_Serialize(_4086_oc);
	};
	jule::Ptr<_212305ce7_File> _4196_file = _1a6108c66_openOutput(&(_4052_compPath));;
	({
		auto except = _21230350e_Write(_4196_file.ptr(), _1e7bec50a_Buf(&(*(_4086_oc))._field_Buf));
		if (!except.ok()) {
			_1a51634db_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _21230737b_Close(_4196_file);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:2"));
	});
	if ((!(_21212e769_Transpilation))) {
		_1a610921c_compileIr(_4062_compiler, _40612_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_212128235_init();
	_1b573e25a_init();
	_1a610899c_init();

}

inline jule::Bool __jule_anon1a889ddee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b76055_ParamIns> _24021_p1, jule::Ptr<_1a3b76055_ParamIns> _24036_p2) {
	if (((*((*(_24021_p1))._field_Decl))._field_Mutable != (*(*(_24036_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1a3b72c44_IsSelf((*(_24021_p1))._field_Decl)) {
		if ((!(_1a3b72c44_IsSelf((*(_24036_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1a3b72eca_IsRef((*(_24021_p1))._field_Decl) != _1a3b72eca_IsRef((*(_24036_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*(_24021_p1))._field_Decl.alloc)._field_Reference != (*(*(_24036_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*(_24021_p1))._field_Decl.alloc)._field_Variadic != (*(*(_24036_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1a3cbb431_Equal((*_24021_p1.alloc)._field_Kind, (*(_24036_p2))._field_Kind);;
}

inline jule::Bool __jule_anon_1a8d2d306(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bd86d3_ImportInfo> _49935_spkg) {
	jule::Ptr<__jule_anon_1a8d2d306_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8d2d306_ctx>();
	return ((*((*(__jule_closure_ctx.alloc->_49828_pkg))))._field_Path == (*(_49935_spkg))._field_Path);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8d842e6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _8821_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _8836_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8d842e6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8d842e6_ctx>();
	return _1a3b91405__Name(__jule_closure_ctx.alloc->_self_, _8821_e, _8836_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8d8624e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _9521_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _9536_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8d8624e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8d8624e_ctx>();
	return _1a3b91bec__Public(__jule_closure_ctx.alloc->_self_, _9521_e, _9536_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8d881a7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _10221_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _10236_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8d881a7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8d881a7_ctx>();
	return _1a3b91801__Type(__jule_closure_ctx.alloc->_self_, _10221_e, _10236_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8d99e11(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _21121_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _21136_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8d99e11_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8d99e11_ctx>();
	return _1a3b94705__Name(__jule_closure_ctx.alloc->_self_, _21121_e, _21136_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8d9bd69(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _21821_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _21836_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8d9bd69_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8d9bd69_ctx>();
	return _1a3b94eec__Public(__jule_closure_ctx.alloc->_self_, _21821_e, _21836_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8d9dcc2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _22521_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _22536_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8d9dcc2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8d9dcc2_ctx>();
	return _1a3b94b01__Type(__jule_closure_ctx.alloc->_self_, _22521_e, _22536_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8daaae2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _31321_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _31336_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8daaae2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8daaae2_ctx>();
	return _1a3b97917__Name(__jule_closure_ctx.alloc->_self_, _31321_e, _31336_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8dc0662(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _43521_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _43536_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8dc0662_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8dc0662_ctx>();
	return _1a3b9a585__Name(__jule_closure_ctx.alloc->_self_, _43521_e, _43536_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8dc25ba(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _44221_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _44236_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8dc25ba_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8dc25ba_ctx>();
	return _1a3b9ad7c__Variadic(__jule_closure_ctx.alloc->_self_, _44221_e, _44236_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8dc4523(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _44921_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _44936_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8dc4523_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8dc4523_ctx>();
	return _1a3b9b278__Reference(__jule_closure_ctx.alloc->_self_, _44921_e, _44936_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8dc647b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _45621_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _45636_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8dc647b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8dc647b_ctx>();
	return _1a3b9a981__Type(__jule_closure_ctx.alloc->_self_, _45621_e, _45636_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8b2a2ce(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _99821_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _99836_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8b2a2ce_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8b2a2ce_ctx>();
	return _1a3ba02c1__Str(__jule_closure_ctx.alloc->_self_, _99821_e, _99836_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c22728(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _100521_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _100536_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c22728_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c22728_ctx>();
	return _1a3ba0ab8__Bits(__jule_closure_ctx.alloc->_self_, _100521_e, _100536_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c24681(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _101221_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _101236_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c24681_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c24681_ctx>();
	return _1a3ba0eb4__Elem(__jule_closure_ctx.alloc->_self_, _101221_e, _101236_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c265d9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _101921_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _101936_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c265d9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c265d9_ctx>();
	return _1a3ba13b0__Size(__jule_closure_ctx.alloc->_self_, _101921_e, _101936_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c28542(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _102621_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _102636_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c28542_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c28542_ctx>();
	return _1a3ba17ab__Key(__jule_closure_ctx.alloc->_self_, _102621_e, _102636_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c2a49a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _103321_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _103336_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c2a49a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c2a49a_ctx>();
	return _1a3ba1ba7__Value(__jule_closure_ctx.alloc->_self_, _103321_e, _103336_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c2c403(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _104021_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _104036_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c2c403_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c2c403_ctx>();
	return _1a3ba20a3__Fields(__jule_closure_ctx.alloc->_self_, _104021_e, _104036_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c2e35b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _104721_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _104736_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c2e35b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c2e35b_ctx>();
	return _1a3ba249e__Statics(__jule_closure_ctx.alloc->_self_, _104721_e, _104736_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c31407(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _105421_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _105436_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c31407_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c31407_ctx>();
	return _1a3ba5370__Params(__jule_closure_ctx.alloc->_self_, _105421_e, _105436_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c33360(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _106121_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _106136_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c33360_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c33360_ctx>();
	return _1a3ba3d85__Types(__jule_closure_ctx.alloc->_self_, _106121_e, _106136_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a89d64a9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _106821_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _106836_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a89d64a9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a89d64a9_ctx>();
	return _1a3ba289a__Public(__jule_closure_ctx.alloc->_self_, _106821_e, _106836_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a89d8511(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _107521_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _107536_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a89d8511_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a89d8511_ctx>();
	return _1a3ba2c96__Binded(__jule_closure_ctx.alloc->_self_, _107521_e, _107536_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a89da469(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _108221_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _108236_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a89da469_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a89da469_ctx>();
	return _1a3ba3192__Ordered(__jule_closure_ctx.alloc->_self_, _108221_e, _108236_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a89dc3c2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _108921_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _108936_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a89dc3c2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a89dc3c2_ctx>();
	return _1a3ba358d__Comparable(__jule_closure_ctx.alloc->_self_, _108921_e, _108936_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a89de32a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _109621_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _109636_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a89de32a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a89de32a_ctx>();
	return _1a3ba3989__Mutable(__jule_closure_ctx.alloc->_self_, _109621_e, _109636_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a89e1283(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _110321_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _110336_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a89e1283_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a89e1283_ctx>();
	return _1a3ba4281__Exceptional(__jule_closure_ctx.alloc->_self_, _110321_e, _110336_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a89e31db(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _111021_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _111036_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a89e31db_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a89e31db_ctx>();
	return _1a3ba467c__CanNil(__jule_closure_ctx.alloc->_self_, _111021_e, _111036_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a66909d4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _111721_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _111736_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a66909d4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a66909d4_ctx>();
	return _1a3ba4a78__RC(__jule_closure_ctx.alloc->_self_, _111721_e, _111736_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8e59a5e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _112421_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _112436_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8e59a5e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8e59a5e_ctx>();
	return _1a3ba4e74__Result(__jule_closure_ctx.alloc->_self_, _112421_e, _112436_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c34b14(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _113121_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _113136_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c34b14_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c34b14_ctx>();
	return _1a3ba06bc__Kind(__jule_closure_ctx.alloc->_self_, _113121_e, _113136_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c41bba(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _124721_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _124736_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c41bba_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c41bba_ctx>();
	return _1a3ba66d4__Unwrap(__jule_closure_ctx.alloc->_self_, _124721_e, _124736_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c43aac(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _125421_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _125436_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c43aac_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c43aac_ctx>();
	return _1a3ba6ad0__Type(__jule_closure_ctx.alloc->_self_, _125421_e, _125436_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c45a37(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _126121_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _126136_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c45a37_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c45a37_ctx>();
	return _1a3ba6ecb__Lvalue(__jule_closure_ctx.alloc->_self_, _126121_e, _126136_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c47990(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _126821_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _126836_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c47990_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c47990_ctx>();
	return _1a3ba73c7__Mutable(__jule_closure_ctx.alloc->_self_, _126821_e, _126836_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c498e8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _127521_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _127536_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c498e8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c498e8_ctx>();
	return _1a3ba77c3__Const(__jule_closure_ctx.alloc->_self_, _127521_e, _127536_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a832cedd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _128221_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _128236_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a832cedd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a832cedd_ctx>();
	return _1a3ba7bbe__Field(__jule_closure_ctx.alloc->_self_, _128221_e, _128236_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c4ed3d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _139621_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _139636_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c4ed3d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c4ed3d_ctx>();
	return _1a3baa71b__Path(__jule_closure_ctx.alloc->_self_, _139621_e, _139636_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c51cda(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _140321_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _140336_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c51cda_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c51cda_ctx>();
	return _1a3baab17__Name(__jule_closure_ctx.alloc->_self_, _140321_e, _140336_fc);;
}

inline jule::Ptr<_1a3c8982d_Data> __jule_anon_1a8c53c43(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c8b555_Eval>* _141021_e, jule::Ptr<_1a3b4619b_FnCallExpr>* _141036_fc, jule::Ptr<_1a3c8982d_Data>* ) {
	jule::Ptr<__jule_anon_1a8c53c43_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c53c43_ctx>();
	return _1a3bab013__Dir(__jule_closure_ctx.alloc->_self_, _141021_e, _141036_fc);;
}

inline jule::Bool __jule_anon_1a8c5e776(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c08b54_Sema>* _6415_sema, jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1a8c5e776_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c5e776_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8c60876:;
		if (it != expr_end) {
			jule::I64 _659_i = it - expr->begin();
			jule::Ptr<_1a3b4a348_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1a3cb9341_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*_6516_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1a8c60876;
				};
				(*(_669_generic))._field_Constraint=jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>>::alloc(0LL, (*((*_6516_g.alloc)._field_Constraint))._field_Mask.len());
				{
					auto expr = &((*((*_6516_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8c63615:;
					if (it != expr_end) {
						jule::Ptr<_1a3b3d13d_TypeDecl> _7117_mask = *it;
						{
							jule::I64 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1a3cbac27_TypeKind> _7310_kind = _1a3c1171c_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1a3cda818_Lookup_mptr_data3), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type75) {
										_case_begin_1a8c65408:;
										{
											jule::Ptr<_1a3b3d748_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1a3b3d748_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1a3bb0820_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(_1a3cd7b45_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data20)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1a8c68065;
											};
										}
									}
									_match_end_1a8c65392:;
								};
								return false;;
							};
							_julec_label_1a8c68065:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,jule::Slice<jule::Ptr<_1a3cbac27_TypeKind>>::make({_7310_kind}));
						}
						_iter_next_1a8c63615:;
						++it;
						goto _iter_begin_1a8c63615;
					}
					_iter_end_1a8c63615:;
				};
			}
			_iter_next_1a8c60876:;
			++it;
			_659_i++;
			goto _iter_begin_1a8c60876;
		}
		_iter_end_1a8c60876:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1a9312d4b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c08b54_Sema>* _110637_sema, jule::Slice<jule::Ptr<_1a3cb9e35_TypeAlias>>* _110655_generics) {
	jule::Ptr<__jule_anon_1a9312d4b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9312d4b_ctx>();
	jule::Bool _11078_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_110237_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93142e2:;
		if (it != expr_end) {
			jule::Ptr<_1a3b76055_ParamIns> _110816_p = *it;
			{
				if (_1a3b72c44_IsSelf((*(_110816_p))._field_Decl.ptr())) {
					if (_1a3b72eca_IsRef((*(_110816_p))._field_Decl)) {
						(*_110816_p.alloc)._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a3cc732c_Sptr>(_1a3cc732c_Sptr{._field_Elem=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_110237_f.alloc)._field_Owner, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data21)});
					} else {
						(*_110816_p.alloc)._field_Kind=jule::new_ptr<_1a3cbac27_TypeKind>(_1a3cbac27_TypeKind{._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_110237_f.alloc)._field_Owner, (jule::Trait::Type*)&_1a3cba771_Kind_mptr_data0)});
					};
				} else {
					(*(_110816_p))._field_Kind=_1a3c128b6_buildTypeWithGenerics((*(_110637_sema)), &((*((*((*_110816_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_110655_generics)), (*__jule_closure_ctx.alloc->_110237_f.alloc)._field_Refers);
					if (((*_110816_p.alloc)._field_Kind != nullptr)) {
						_1a3c173d2_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_110816_p));
					} else {
						_11078_ok=false;
					};
				};
			}
			_iter_next_1a93142e2:;
			++it;
			goto _iter_begin_1a93142e2;
		}
		_iter_end_1a93142e2:;
	};
	if ((!(_1a3b74570_IsVoid((*__jule_closure_ctx.alloc->_110237_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_110237_f.alloc)._field_Result=_1a3c128b6_buildTypeWithGenerics((*(_110637_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_110237_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_110655_generics)), (*__jule_closure_ctx.alloc->_110237_f.alloc)._field_Refers);
		_11078_ok=(((*__jule_closure_ctx.alloc->_110237_f.alloc)._field_Result != nullptr) && _11078_ok);
	};
	return _11078_ok;;
}

inline jule::Bool __jule_anon_1a96c2815(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bd86d3_ImportInfo> _181943_imp) {
	jule::Ptr<__jule_anon_1a96c2815_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a96c2815_ctx>();
	if ((((*__jule_closure_ctx.alloc->_181731_s.alloc)._field_Ns.len() == 1LL) && ((*(_181943_imp))._field_Alias == __jule_closure_ctx.alloc->_18183_path))) {
		return true;;
	};
	return (((*_181943_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_18183_path) && _1a3bdb2eb_isAccessibleViaSelection(_181943_imp));;
}

inline jule::Str __jule_anon1a9ad5860(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _84719_def) {
	{
		auto &_match_expr{ (*(_84719_def)) };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a9ad692c:;
			{
				return (*((*(_84719_def)).cast_ptr<_1a3cb9e35_TypeAlias>(&__jule_any_type66)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a9ad6751:;
			{
				return (*((*(_84719_def)).cast_ptr<_1a3b5e03d_Struct>(&__jule_any_type65)))._field_Ident;;
			}
		}
		else {
			_case_begin_1a9ad6322:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a9ad62bc:;
	};
}

inline jule::Bool __jule_anon_1a8412677(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bd86d3_ImportInfo> _151943_imp) {
	jule::Ptr<__jule_anon_1a8412677_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8412677_ctx>();
	if ((((*__jule_closure_ctx.alloc->_151736_decl.alloc)._field_Idents.len() == 1LL) && ((*(_151943_imp))._field_Alias == __jule_closure_ctx.alloc->_15183_path))) {
		return true;;
	};
	return (((*_151943_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_15183_path) && _1a3bdb2eb_isAccessibleViaSelection(_151943_imp));;
}

inline void __jule_anon_1aa352a5a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2636_expr) {
	jule::Ptr<__jule_anon_1aa352a5a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa352a5a_ctx>();
	{
		auto &_match_expr{ (*(_2636_expr)) };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aa353495:;
			{
				jule::Ptr<_1a3b68201_FnCallExprModel> _299_m = (*(_2636_expr)).cast_ptr<_1a3b68201_FnCallExprModel>(&__jule_any_type33);;
				if (((*(_299_m))._field_Except != nullptr)) {
					{
						_1a5134501_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_299_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1aa3532ec:;
			{
				jule::Ptr<_1a3b69037_AnonFnExprModel> _349_m = (*(_2636_expr)).cast_ptr<_1a3b69037_AnonFnExprModel>(&__jule_any_type100);;
				_1a5136e93_eliminateDeadCodeOfScope((*((*(_349_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1aa35342e:;
	};
}

inline void __jule_anon_1a98b91d2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _55147_m) {
	jule::Ptr<__jule_anon_1a98b91d2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a98b91d2_ctx>();
	{
		(*(__jule_closure_ctx.alloc->_self_))._field_model=((jule::Ptr<jule::Any>)(_55147_m));
	};
	{
		auto &_match_expr{ (*(_55147_m)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1a98b9a51:;
			{
				{
					_1a5650610_binary(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1a3b66221_BinaryExprModel>(&__jule_any_type111));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a98b9ca4:;
			{
				{
					_1a56508b8_unary(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1a3b665ea_UnaryExprModel>(&__jule_any_type110));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a98b9ab7:;
			{
				{
					_1a5650b71_structureLit(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1a3b66ebe_StructLitExprModel>(&__jule_any_type95));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1a98b9b2d:;
			{
				{
					_1a5650e29_casting(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1a3b6784e_CastingExprModel>(&__jule_any_type93));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a98b9b94:;
			{
				{
					_1a56517ed_funcCall(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1a3b68201_FnCallExprModel>(&__jule_any_type33));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a98ba4ad:;
			{
				{
					_1a5651aa6_indexing(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1a3b68a81_IndexingExprModel>(&__jule_any_type45));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a98ba524:;
			{
				{
					_1a5651d5e_anonFunc(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1a3b69037_AnonFnExprModel>(&__jule_any_type100));
				};
			}
		}
		_match_end_1a98b9963:;
	};
}

inline void __jule_anon_1aa4a1b32(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa4a1b32_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa4a1b32_ctx>();
	if (__jule_closure_ctx.alloc->_1377_ref) {
		_1a5db6271_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1a5db6271_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1aa4a55e7(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa4a55e7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa4a55e7_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_12936_it))))._field_KeyB.alloc)._field_Reference) {
			_1a5db6271_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1a5db6271_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1aa4b4abd(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa4b4abd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa4b4abd_ctx>();
	_1a5db6271_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it->first", 9));
}

inline void __jule_anon_1aa4b7043(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa4b7043_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa4b7043_ctx>();
	_1a5db6271_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it->second", 10));
}

inline void __jule_anon_1aa4d0c71(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa4d0c71_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa4d0c71_ctx>();
	_1a5db6271_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1aa049114(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa049114_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa049114_ctx>();
	_1a5db6271_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1aa04a423(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa04a423_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa04a423_ctx>();
	_1a5ce7d62_possibleRefExpr((*(*(__jule_closure_ctx.alloc->_self_))._field_oc.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_66930_m))._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1aa3a357d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c31c26_Var> _104567_v) {
	jule::Ptr<__jule_anon_1aa3a357d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa3a357d_ctx>();
	return _1a5ce129a_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_103934_m), &(_104567_v));;
}

inline void __jule_anon_1aa89e1a5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bdb609_Package>* _75238_pkg) {
	jule::Ptr<__jule_anon_1aa89e1a5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa89e1a5_ctx>();
	_1a56379b0_IterFiles(_75238_pkg, jule::__new_closure<void,jule::Ptr<_1a3c844b5_SymbolTable>*>((void*)__jule_anon_1aa8a00c9, jule::Ptr<__jule_anon_1aa8a00c9_ctx>::make(__jule_anon_1aa8a00c9_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1aa8a00c9_ctx_handler));
}

inline void __jule_anon_1aa8a06c3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn>* _76536_m) {
	jule::Ptr<__jule_anon_1aa8a06c3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa8a06c3_ctx>();
	jule::Ptr<_1a3b770cd_FnIns> _7668_ins = (*((*(_76536_m))))._field_Instances[0LL];;
	{
		auto expr = (*(_7668_ins))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1aa8a3891:;
		if (it != expr_end) {
			jule::I64 _7679_i = it - expr.begin();
			jule::Ptr<_1a3b76055_ParamIns> _76716_ip = *it;
			{
				if (_1a3b2a713_IsAnonIdent((*((*(_76716_ip))._field_Decl))._field_Ident)) {
					(*(*(_76716_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1b5739d16_Itoa(_7679_i));
				};
			}
			_iter_next_1aa8a3891:;
			++it;
			_7679_i++;
			goto _iter_begin_1aa8a3891;
		}
		_iter_end_1aa8a3891:;
	};
	_1a5db7e98_pushResult(__jule_closure_ctx.alloc->_self_, _76536_m);
	_1a5dbbac3_funcDeclTrait(__jule_closure_ctx.alloc->_self_, _76536_m);
}

inline void __jule_anon_1aa8a5cd3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bdb609_Package>* _77838_pkg) {
	jule::Ptr<__jule_anon_1aa8a5cd3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa8a5cd3_ctx>();
	_1a56379b0_IterFiles(_77838_pkg, jule::__new_closure<void,jule::Ptr<_1a3c844b5_SymbolTable>*>((void*)__jule_anon_1aa8a6bd5, jule::Ptr<__jule_anon_1aa8a6bd5_ctx>::make(__jule_anon_1aa8a6bd5_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1aa8a6bd5_ctx_handler));
}

inline void __jule_anon_1aa8b683d(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa8b683d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa8b683d_ctx>();
	_1a5db6271_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1a5d0272e_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_84524_v))._field_Value))._field_Data.alloc)._field_Model);
	_1a5db6271_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1aa8b893e(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa8b893e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa8b893e_ctx>();
	_1a5ce7d62_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_84524_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1aa8bb15b(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa8bb15b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa8bb15b_ctx>();
	_1a5db6271_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1aa8bc2d3(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa8bc2d3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa8bc2d3_ctx>();
	_1a5d029d7_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_84524_v))._field_Kind.alloc)._field_Kind);
}

inline void __jule_anon_1aa8da554(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bdb609_Package>* _98738_pkg) {
	jule::Ptr<__jule_anon_1aa8da554_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa8da554_ctx>();
	_1a56379b0_IterFiles(_98738_pkg, jule::__new_closure<void,jule::Ptr<_1a3c844b5_SymbolTable>*>((void*)__jule_anon_1aa8db456, jule::Ptr<__jule_anon_1aa8db456_ctx>::make(__jule_anon_1aa8db456_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1aa8db456_ctx_handler));
}

inline void __jule_anon_1aa8db8da(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn>* _100236_m) {
	jule::Ptr<__jule_anon_1aa8db8da_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa8db8da_ctx>();
	_1a5db6b23_indent(__jule_closure_ctx.alloc->_self_);
	_1a5db6271_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(".", 1));
	static__1a5d09956_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _100236_m);
	_1a5db6271_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("=__jule_trait_method_", 21));
	jule::Ptr<_1a3b770cd_FnIns> _10074_mepf;
	jule::Bool _100710_exist;
	({
		__jule_tuple_x_1a3b770cd_FnIns__jule_tuple_bool __jule_assign_result = _1a5dbe510_findTraitMetMap(__jule_closure_ctx.alloc->_self_, _100236_m);
		_10074_mepf = __jule_assign_result.__jule_result_arg0;
		_100710_exist = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_100710_exist))) {
		jule::panic(jule::Str::lit("implementation mistake, [traitDataMethods] could not found MepMap record", 72) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1009:5"));;
	};
	_1a5db6271_write(__jule_closure_ctx.alloc->_self_, _1b5739684_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_10074_mepf)), 15LL));
	_1a5db6271_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("_", 1));
	_1a5db6271_write(__jule_closure_ctx.alloc->_self_, _1b5739684_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(__jule_closure_ctx.alloc->_100149_s)), 15LL));
	_1a5db6271_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(",\n", 2));
}

inline void __jule_anon_1aa8e9321(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bdb609_Package>* _103938_pkg) {
	jule::Ptr<__jule_anon_1aa8e9321_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa8e9321_ctx>();
	_1a56379b0_IterFiles(_103938_pkg, jule::__new_closure<void,jule::Ptr<_1a3c844b5_SymbolTable>*>((void*)__jule_anon_1aa8ea223, jule::Ptr<__jule_anon_1aa8ea223_ctx>::make(__jule_anon_1aa8ea223_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1aa8ea223_ctx_handler));
}

inline void __jule_anon_1aa917b47(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bdb609_Package>* _116638_pkg) {
	jule::Ptr<__jule_anon_1aa917b47_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa917b47_ctx>();
	_1a56379b0_IterFiles(_116638_pkg, jule::__new_closure<void,jule::Ptr<_1a3c844b5_SymbolTable>*>((void*)__jule_anon_1aa918a49, jule::Ptr<__jule_anon_1aa918a49_ctx>::make(__jule_anon_1aa918a49_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1aa918a49_ctx_handler));
}

inline void __jule_anon_1aa919121(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c844b5_SymbolTable>* _118231_file) {
	jule::Ptr<__jule_anon_1aa919121_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa919121_ctx>();
	{
		auto expr = &((*((*(_118231_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa91c069:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _118311_f = *it;
			{
				if ((*(_118311_f))._field_Ident.equal("init", 4)) {
					_1a5db6b23_indent(__jule_closure_ctx.alloc->_self_);
					static__1a5d09956_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_118311_f));
					_1a5db6271_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1aa91c069:;
			++it;
			goto _iter_begin_1aa91c069;
		}
		_iter_end_1aa91c069:;
	};
}

inline void __jule_anon_1aa921de8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bdb609_Package>* _121138_pkg) {
	jule::Ptr<__jule_anon_1aa921de8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa921de8_ctx>();
	_1a5dc1b72_pushInit(__jule_closure_ctx.alloc->_self_, _121138_pkg);
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1aa9a5773(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1b5728497_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1aa9ad638(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1b5727ee1_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1a8d776e6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3bd86d3_ImportInfo> _143025_pkg) {
	return (*(_143025_pkg))._field_LinkPath.equal("std::comptime", 13);;
}

inline void __jule_anon_1aa8a00c9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c844b5_SymbolTable>* _75332_file) {
	jule::Ptr<__jule_anon_1aa8a00c9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa8a00c9_ctx>();
	{
		auto expr = &((*((*(_75332_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8a0a7a:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _75417_f = *it;
			{
				if (((!((*(_75417_f))._field_Binded)) && ((*_75417_f.alloc)._field_Token != nullptr))) {
					_1a5db7e98_pushResult(__jule_closure_ctx.alloc->_self_, &(_75417_f));
					_1a5dbb81a_funcDecl(__jule_closure_ctx.alloc->_self_, &(_75417_f), false);
				};
			}
			_iter_next_1aa8a0a7a:;
			++it;
			goto _iter_begin_1aa8a0a7a;
		}
		_iter_end_1aa8a0a7a:;
	};
}

inline void __jule_anon_1aa8a6bd5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c844b5_SymbolTable>* _77932_file) {
	jule::Ptr<__jule_anon_1aa8a6bd5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa8a6bd5_ctx>();
	{
		auto expr = &((*((*(_77932_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8a7664:;
		if (it != expr_end) {
			jule::Ptr<_1a3b87a7d_Trait> _78017_t = *it;
			{
				if ((((*(_78017_t))._field_Token == nullptr) || ((*_78017_t.alloc)._field_Implemented.len() == 0LL))) {
					goto _iter_next_1aa8a7664;
				};
				_1a5db6271_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("struct ", 7));
				static__1a5d0a02d_traitDecl(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _78017_t);
				_1a5db6271_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("MptrData", 8));
				_1a5db6271_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(" {\n", 3));
				_1a5db6727_addIndent(__jule_closure_ctx.alloc->_self_);
				_1a5db6b23_indent(__jule_closure_ctx.alloc->_self_);
				_1a5db6271_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1a5dbc079_traitDataTypeMethods(__jule_closure_ctx.alloc->_self_, &(_78017_t));
				_1a5db6925_doneIndent(__jule_closure_ctx.alloc->_self_);
				_1a5db6b23_indent(__jule_closure_ctx.alloc->_self_);
				_1a5db6271_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1aa8a7664:;
			++it;
			goto _iter_begin_1aa8a7664;
		}
		_iter_end_1aa8a7664:;
	};
}

inline void __jule_anon_1aa8db456(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c844b5_SymbolTable>* _98832_file) {
	jule::Ptr<__jule_anon_1aa8db456_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa8db456_ctx>();
	{
		auto expr = &((*((*(_98832_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8dbdd5:;
		if (it != expr_end) {
			jule::Ptr<_1a3b87a7d_Trait> _98917_t = *it;
			{
				if (((*(_98917_t))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1aa8dbdd5;
				};
				_1a563852c_IterTraitMethods(&(_98917_t), jule::__new_closure<void,jule::Ptr<_1a3b740ec_Fn>*>((void*)__jule_anon_1aa8dd403, jule::Ptr<__jule_anon_1aa8dd403_ctx>::make(__jule_anon_1aa8dd403_ctx{._self_=__jule_closure_ctx.alloc->_self_,._98917_t=_98917_t}).as<jule::Uintptr>(), __jule_anon_1aa8dd403_ctx_handler));
			}
			_iter_next_1aa8dbdd5:;
			++it;
			goto _iter_begin_1aa8dbdd5;
		}
		_iter_end_1aa8dbdd5:;
	};
}

inline void __jule_anon_1aa8ea223(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c844b5_SymbolTable>* _104032_file) {
	jule::Ptr<__jule_anon_1aa8ea223_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa8ea223_ctx>();
	{
		auto expr = &((*((*(_104032_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8eaba2:;
		if (it != expr_end) {
			jule::Ptr<_1a3b87a7d_Trait> _104117_t = *it;
			{
				jule::I64 _104210_i = 0LL;;
				{
					auto expr = &((*(_104117_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa8eb9b6:;
					if (it != expr_end) {
						jule::Ptr<_1a3b5e03d_Struct> _104318_s = *it;
						{
							{
								auto expr = &((*(_104318_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aa8ec368:;
								if (it != expr_end) {
									jule::Ptr<_1a3b61cbb_StructIns> _104419_ins = *it;
									{
										_1a5dc0302_traitData(__jule_closure_ctx.alloc->_self_, &(_104117_t), _104210_i, &(_104419_ins));
										(_104210_i)++;
									}
									_iter_next_1aa8ec368:;
									++it;
									goto _iter_begin_1aa8ec368;
								}
								_iter_end_1aa8ec368:;
							};
						}
						_iter_next_1aa8eb9b6:;
						++it;
						goto _iter_begin_1aa8eb9b6;
					}
					_iter_end_1aa8eb9b6:;
				};
			}
			_iter_next_1aa8eaba2:;
			++it;
			goto _iter_begin_1aa8eaba2;
		}
		_iter_end_1aa8eaba2:;
	};
}

inline void __jule_anon_1aa918a49(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3c844b5_SymbolTable>* _116732_file) {
	jule::Ptr<__jule_anon_1aa918a49_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa918a49_ctx>();
	{
		auto expr = &((*((*(_116732_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9194c8:;
		if (it != expr_end) {
			jule::Ptr<_1a3b740ec_Fn> _116817_f = *it;
			{
				if (((!(_21212ea22_Test)) && _1a564312a_HasDirective(&((*(_116817_f))._field_Directives), jule::Str::lit("test", 4)))) {
					goto _iter_next_1aa9194c8;
				};
				if (((!((*_116817_f.alloc)._field_Binded)) && ((*_116817_f.alloc)._field_Token != nullptr))) {
					_1a5dbdd5b_func(__jule_closure_ctx.alloc->_self_, &(_116817_f));
					_1a5db6271_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1aa9194c8:;
			++it;
			goto _iter_begin_1aa9194c8;
		}
		_iter_end_1aa9194c8:;
	};
}

inline void __jule_anon_1aa8dd403(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a3b740ec_Fn>* _99339_m) {
	jule::Ptr<__jule_anon_1aa8dd403_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa8dd403_ctx>();
	_1a5dbe873_traitWrapper(__jule_closure_ctx.alloc->_self_, &(__jule_closure_ctx.alloc->_98917_t), _99339_m);
}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}