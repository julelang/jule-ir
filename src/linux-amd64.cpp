// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 6/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1c0c8a911_comptimeRangeKind{};
struct _1c0cd0626_Importer{};
struct _1c0db0063_Kind{};
struct _1c0dd0050_Lookup{};
struct _1a8bb46cb_CommonFlag{};
struct _21cc11d9b_Range16;
struct _21cc123c9_Range32;
struct _21cc12880_RangeTable;
struct _21ce59940_acceptRange;
struct _21cd5e16e_StrBuilder;
struct _21cd69be6_lazyBuff;
struct _21b9b0d8d_DirEntry;
struct _21b9b1102_Directory;
struct _21b9bbcbc_File;
struct _21b9be5b6_Status;
struct _21d2d27e0_cmdAttrs;
struct _21ce0c86b_Log;
struct _20361b33b_floatInfo;
struct _20361bec9_decimalSlice;
struct _20362e32c_leftCheat;
struct _20362ed55_decimal;
struct _2036445ea_Const;
struct _1c0c25406_Token;
struct _1c0c2abc0_File;
struct _1c0c2cce3_kindPair;
struct _1c0c33e09_lex;
struct _1c0c38a46_Ast;
struct _1c0c399e2_Node;
struct _1c0c39e10_Directive;
struct _1c0c3a9e3_TypeDecl;
struct _1c0c3b0ed_IdentTypeDecl;
struct _1c0c3b3ea_SubIdentTypeDecl;
struct _1c0c3b791_NamespaceTypeDecl;
struct _1c0c3ba8d_SptrTypeDecl;
struct _1c0c3be23_SlcTypeDecl;
struct _1c0c3c220_TupleTypeDecl;
struct _1c0c3c51c_PtrTypeDecl;
struct _1c0c3ccae_ArrTypeDecl;
struct _1c0c3d50c_MapTypeDecl;
struct _1c0c3d8d6_RetTypeDecl;
struct _1c0c3ed27_Expr;
struct _1c0c40124_RangeExpr;
struct _1c0c406eb_UseExpr;
struct _1c0c409e8_TupleExpr;
struct _1c0c40dc2_LitExpr;
struct _1c0c4129b_UnsafeExpr;
struct _1c0c41752_IdentExpr;
struct _1c0c41dd4_UnaryExpr;
struct _1c0c422ad_VariadicExpr;
struct _1c0c42687_CastExpr;
struct _1c0c42a61_NsSelectionExpr;
struct _1c0c42e3a_SubIdentExpr;
struct _1c0c433e1_BinopExpr;
struct _1c0c43a51_FnCallExpr;
struct _1c0c44546_FieldExprPair;
struct _1c0c44d71_StructLit;
struct _1c0c45327_BraceLit;
struct _1c0c45b52_KeyValPair;
struct _1c0c4634a_SliceExpr;
struct _1c0c46cda_IndexingExpr;
struct _1c0c4744a_SlicingExpr;
struct _1c0c47747_Constraint;
struct _1c0c47bed_GenericDecl;
struct _1c0c480c7_LabelSt;
struct _1c0c484a1_GotoSt;
struct _1c0c4879d_FallSt;
struct _1c0c48e0d_AssignLeft;
struct _1c0c49491_AssignSt;
struct _1c0c4a3a4_Stmt;
struct _1c0c4aa14_ScopeTree;
struct _1c0c4b251_ParamDecl;
struct _1c0c4c6a3_FnDecl;
struct _1c0c4d781_VarDecl;
struct _1c0c4db5a_RetSt;
struct _1c0c4e2ed_Iter;
struct _1c0c4eb28_WhileKind;
struct _1c0c50530_RangeKind;
struct _1c0c50909_BreakSt;
struct _1c0c50cd3_ContSt;
struct _1c0c51289_If;
struct _1c0c51663_Else;
struct _1c0c51b19_Conditional;
struct _1c0c52356_TypeAliasDecl;
struct _1c0c5280c_Case;
struct _1c0c53049_MatchCase;
struct _1c0c53863_UseDecl;
struct _1c0c53d19_EnumItemDecl;
struct _1c0c548ca_EnumDecl;
struct _1c0c55205_TypeEnumItemDecl;
struct _1c0c55865_TypeEnumDecl;
struct _1c0c55b2e_FieldDecl;
struct _1c0c56525_StructDecl;
struct _1c0c56c62_TraitDecl;
struct _1c0c573c2_Impl;
struct _1c0c58758_Field;
struct _1c0c5a738_Operators;
struct _1c0c5b64b_Struct;
struct _1c0c5d829_FieldIns;
struct _1c0c63367_OperandExprModel;
struct _1c0c63862_BinopExprModel;
struct _1c0c63c3b_UnaryExprModel;
struct _1c0c64269_StructArgExprModel;
struct _1c0c64610_StructLitExprModel;
struct _1c0c6490c_AllocStructLitExprModel;
struct _1c0c64e90_CastingExprModel;
struct _1c0c65842_FnCallExprModel;
struct _1c0c65c1b_SliceExprModel;
struct _1c0c661c2_IndexingExprModel;
struct _1c0c6659b_AnonFnExprModel;
struct _1c0c66975_KeyValPairExprModel;
struct _1c0c66e2b_MapExprModel;
struct _1c0c674ae_SlicingExprModel;
struct _1c0c67a42_TraitSubIdentExprModel;
struct _1c0c683d3_StructSubIdentExprModel;
struct _1c0c68889_StructStaticIdentExprModel;
struct _1c0c68c63_ArrayExprModel;
struct _1c0c69060_TupleExprModel;
struct _1c0c69439_BuiltinOutCallExprModel;
struct _1c0c69813_BuiltinOutlnCallExprModel;
struct _1c0c69bdc_BuiltinNewCallExprModel;
struct _1c0c6a0b6_BuiltinPanicCallExprModel;
struct _1c0c6a56c_BuiltinAssertCallExprModel;
struct _1c0c6aa23_BuiltinMakeCallExprModel;
struct _1c0c6adec_BuiltinAppendCallExprModel;
struct _1c0c6b1e9_BuiltinLenCallExprModel;
struct _1c0c6b4e6_BuiltinCapCallExprModel;
struct _1c0c6b8c0_BuiltinDeleteCallExprModel;
struct _1c0c6bc99_BuiltinCopyCallExprModel;
struct _1c0c6c173_BuiltinErrorCallExprModel;
struct _1c0c67c2e_SizeofExprModel;
struct _1c0c6c89e_AlignofExprModel;
struct _1c0c6cb9b_RuneExprModel;
struct _1c0c6ce98_IntegratedToStrExprModel;
struct _1c0c6d372_BackendEmitExprModel;
struct _1c0c6d66e_FreeExprModel;
struct _1c0c6e351_RetType;
struct _1c0c6ead2_Param;
struct _1c0c715a6_Fn;
struct _1c0c7350e_ParamIns;
struct _1c0c744aa_FnIns;
struct _1c0c77656_ReferenceStack;
struct _1c0c78b74_Pass;
struct _1c0c7d739_symbolBuilder;
struct _1c0c84850_Trait;
struct _1c0c864cd_EnumItem;
struct _1c0c8704a_Enum;
struct _1c0c8817d_TypeEnumItem;
struct _1c0c88755_TypeEnum;
struct _1c0c8aaed_comptimeRange;
struct _1c0c8b659_comptimeStructField;
struct _1c0c8d309_comptimeStructFields;
struct _1c0c8e915_comptimeStatic;
struct _1c0c915c6_comptimeStatics;
struct _1c0c92bc1_comptimeEnumField;
struct _1c0c93ed0_comptimeEnumFields;
struct _1c0c95663_comptimeParam;
struct _1c0c978c9_comptimeParams;
struct _1c0c98ec4_comptimeTypeInfos;
struct _1c0c9a5be_comptimeTypeInfo;
struct _1c0ca1ad1_comptimeValue;
struct _1c0ca4430_comptimeFiles;
struct _1c0ca5a2a_comptimeFile;
struct _1c0ca9b94_constraintChecker;
struct _1c0cabbc9_Impl;
struct _1c0cb210d_Scope;
struct _1c0cb252b_If;
struct _1c0cb2828_Else;
struct _1c0cb2c46_Conditional;
struct _1c0cb3043_InfIter;
struct _1c0cb34e9_WhileIter;
struct _1c0cb3e45_RangeIter;
struct _1c0cb42ca_ContSt;
struct _1c0cb46a4_BreakSt;
struct _1c0cb49a1_Label;
struct _1c0cb4d7a_GotoSt;
struct _1c0cb5254_Postfix;
struct _1c0cb570a_Assign;
struct _1c0cb5ad4_MultiAssign;
struct _1c0cb6244_Match;
struct _1c0cb6d7c_Case;
struct _1c0cb7476_FallSt;
struct _1c0cb780b_RetSt;
struct _1c0cb7e6b_scopeLabel;
struct _1c0cb84ee_scopeGoto;
struct _1c0cb9412_scopeChecker;
struct _1c0ccc0b2_directiveChecker;
struct _1c0cd353b_ImportInfo;
struct _1c0cd6462_Package;
struct _1c0d03acd_commonSemaMeta;
struct _1c0d04705_Sema;
struct _1c0d283a5_missingRetChecker;
struct _1c0d2a792_IterRelation;
struct _1c0d2b94c_Var;
struct _1c0d2c761_FuncPattern;
struct _1c0d6716e_typeCompatibilityChecker;
struct _1c0d68e1d_assignTypeChecker;
struct _1c0d6aa8a_dynamicTypeAnnotation;
struct _1c0d708e7_fnCallArgChecker;
struct _1c0d7382e_structLitChecker;
struct _1c0d75611_rangeChecker;
struct _1c0d77d72_retTypeChecker;
struct _1c0d7a12c_SymbolTable;
struct _1c0d80352_Data;
struct _1c0d81496_Value;
struct _1c0d82046_Eval;
struct _1c0da04d7_unaryEval;
struct _1c0da2473_binaryEval;
struct _1c0dadb33_InsGeneric;
struct _1c0dae727_TypeAlias;
struct _1c0db0519_TypeKind;
struct _1c0db76db_TypeSymbol;
struct _1c0db80e3_Prim;
struct _1c0dbbb1e_Sptr;
struct _1c0dbc5e2_Slc;
struct _1c0dbd1d6_Tuple;
struct _1c0dbdc86_Map;
struct _1c0dbe913_Arr;
struct _1c0dc03d6_Ptr;
struct _1c0dc13d7_referencer;
struct _1c0dc23c7_typeChecker;
struct _1c0dca05b_identTypeLookup;
struct _1c181ad86_FileInfo;
struct _1c1866c17_stmt;
struct _1c18675a8_scopeParser;
struct _1c1874b7b_exprBuilder;
struct _1c18820d9_assignInfo;
struct _1c1885780_parser;
struct _1c18975e9_typeBuilder;
struct _1c10b5a1b_CompileInfo;
struct _1c10b6ec3_directiveEval;
struct _1c189b5dc_JuleImporter;
struct _1c18a15d1_OrderedDefines;
struct _1c18a1845_defineOrderer;
struct _1c19d2b96_liveTable;
struct _1c1a172e6_scopeDeadCode;
struct _1c1a1b54d_exprDeadCode;
struct _1c0ead43b_SwapExprModel;
struct _1c0ead859_EmptyCompareExprModel;
struct _1c0eadb56_RefExprModel;
struct _1c0eae184_StrCompExprModel;
struct _1c0eae717_MutSlicingExprModel;
struct _1c0eaea14_UnsafeBinopExprModel;
struct _1c0eaed11_UnsafeIndexingExprModel;
struct _1c0eb0240_PushToSliceExprModel;
struct _1c0eb0619_AppendToSliceExprModel;
struct _1c0eb0916_InlineStdInternalNosafeStobs;
struct _1c0eb1ab0_scopeOptimizer;
struct _1c0eb7c92_exprOptimizer;
struct _1c18a3160_stdCacheData;
struct _1c1a2390c_Optimizer;
struct _1c1a4b869_AnsiEscape;
struct _1c1a4ce97_Logger;
struct _1a885a7d4_AbsTime;
struct _1a885aeaa_Time;
struct _1a877de22_scopeCoder;
struct _1a878813a_exprCoder;
struct _1a879d8d1_TestCoder;
struct _1a87a15b5_identCoder;
struct _1a8863941_SerializationInfo;
struct _1a8864018_traitHash;
struct _1a88643e2_traitCast;
struct _1a8874611_customType;
struct _1a8875216_typeCoder;
struct _1a887cedd_resultCoder;
struct _1ac156043_Flag;
struct _1ac159b90_Flag;
struct _1ac15d38b_Flag;
struct _1ac161acb_Flag;
struct _1ac1652c7_Flag;
struct _1a8bb627c_FlagSet;
struct _1a8bb8c0d_argParser;
struct _1a8865459_ObjectCoder;
struct _1c19d3081_ObjectDeadCode;
struct _1c189de2a_IR;
struct _1c0c5e3c9_StructIns;
struct _21d2830a9_Cmd;
struct _21cc11d9b_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_21cc11d9b_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_21cc11d9b_Range16 _other) { return !this->operator==(_other); }


};
struct _21cc123c9_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_21cc123c9_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_21cc123c9_Range32 _other) { return !this->operator==(_other); }


};
struct _21cc12880_RangeTable {
	jule::Slice<_21cc11d9b_Range16> _field_R16;
	jule::Slice<_21cc123c9_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _21ce59940_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_21ce59940_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_21ce59940_acceptRange _other) { return !this->operator==(_other); }


};
struct _21cd5e16e_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _21cd69be6_lazyBuff {
	jule::Slice<jule::U8> _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _21b9b0d8d_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_21b9be5b6_Status> _field_Stat;
	

	inline bool operator==(_21b9b0d8d_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_21b9b0d8d_DirEntry _other) { return !this->operator==(_other); }


};
struct _21b9b1102_Directory {
	

	inline bool operator==(_21b9b1102_Directory _other) { return true; }

	inline bool operator!=(_21b9b1102_Directory _other) { return !this->operator==(_other); }


};
struct _21b9bbcbc_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_21b9bbcbc_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_21b9bbcbc_File _other) { return !this->operator==(_other); }


};
struct _21b9be5b6_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_21b9be5b6_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_21b9be5b6_Status _other) { return !this->operator==(_other); }


};
struct _21d2d27e0_cmdAttrs {
	jule::I64 _field_pid = -1LL;
	

	inline bool operator==(_21d2d27e0_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_21d2d27e0_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _21ce0c86b_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_21ce0c86b_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_21ce0c86b_Log _other) { return !this->operator==(_other); }


};
struct _20361b33b_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_20361b33b_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_20361b33b_floatInfo _other) { return !this->operator==(_other); }


};
struct _20361bec9_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _20362e32c_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_20362e32c_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_20362e32c_leftCheat _other) { return !this->operator==(_other); }


};
struct _20362ed55_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_20362ed55_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_20362ed55_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _20364a1a0_Eq(_2036445ea_Const*, _2036445ea_Const);
inline jule::Bool _20364a4e1_Lt(_2036445ea_Const*, _2036445ea_Const);
inline jule::Bool _20364a832_LtEq(_2036445ea_Const*, _2036445ea_Const);
inline jule::Bool _20364ab73_Gt(_2036445ea_Const*, _2036445ea_Const);
inline jule::Bool _20364aeb4_GtEq(_2036445ea_Const*, _2036445ea_Const);
struct _2036445ea_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_2036445ea_Const _other) { return _20364a1a0_Eq(this, _other); }

	inline bool operator!=(_2036445ea_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_2036445ea_Const _other) { return _20364ab73_Gt(this, _other); }

	inline jule::Bool operator>=(_2036445ea_Const _other) { return _20364aeb4_GtEq(this, _other); }

	inline jule::Bool operator<(_2036445ea_Const _other) { return _20364a4e1_Lt(this, _other); }

	inline jule::Bool operator<=(_2036445ea_Const _other) { return _20364a832_LtEq(this, _other); }


};
struct _1c0c25406_Token {
	jule::Ptr<_1c0c2abc0_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_1c0c25406_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1c0c25406_Token _other) { return !this->operator==(_other); }


};
struct _1c0c2abc0_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _field_Tokens;
	


};
struct _1c0c2cce3_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_1c0c2cce3_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1c0c2cce3_kindPair _other) { return !this->operator==(_other); }


};
struct _1c0c33e09_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _field_tokens;
	jule::Ptr<_1c0c2abc0_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_21ce0c86b_Log> _field_errors;
	


};
struct _1c0c38a46_Ast {
	jule::Ptr<_1c0c2abc0_File> _field_File;
	jule::Slice<jule::Ptr<_1c0c39e10_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1c0c53863_UseDecl>> _field_UseDecls;
	jule::Slice<_1c0c399e2_Node> _field_Nodes;
	


};
struct _1c0c399e2_Node {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1c0c399e2_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1c0c399e2_Node _other) { return !this->operator==(_other); }


};
struct _1c0c39e10_Directive {
	jule::Ptr<_1c0c25406_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _field_Args;
	


};
struct _1c0c3a9e3_TypeDecl {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1c0c3a9e3_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0c3a9e3_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1c0c3b0ed_IdentTypeDecl {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> _field_Generics;
	


};
struct _1c0c3b3ea_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1c0c3b0ed_IdentTypeDecl>> _field_Idents;
	


};
struct _1c0c3b791_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _field_Idents;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Kind;
	


};
struct _1c0c3ba8d_SptrTypeDecl {
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Elem;
	

	inline bool operator==(_1c0c3ba8d_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0c3ba8d_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c0c3be23_SlcTypeDecl {
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Elem;
	

	inline bool operator==(_1c0c3be23_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0c3be23_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c0c3c220_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> _field_Types;
	


};
struct _1c0c3c51c_PtrTypeDecl {
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Elem;
	

	inline bool operator==(_1c0c3c51c_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0c3c51c_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c0c3ccae_ArrTypeDecl {
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Elem;
	jule::Ptr<_1c0c3ed27_Expr> _field_Size;
	

	inline bool operator==(_1c0c3ccae_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1c0c3ccae_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c0c3d50c_MapTypeDecl {
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Key;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Val;
	

	inline bool operator==(_1c0c3d50c_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1c0c3d50c_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c0c3d8d6_RetTypeDecl {
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _field_Idents;
	


};
struct _1c0c3ed27_Expr {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c25406_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1c0c3ed27_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0c3ed27_Expr _other) { return !this->operator==(_other); }


};
struct _1c0c40124_RangeExpr {
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	

	inline bool operator==(_1c0c40124_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c40124_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1c0c406eb_UseExpr {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	

	inline bool operator==(_1c0c406eb_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c406eb_UseExpr _other) { return !this->operator==(_other); }


};
struct _1c0c409e8_TupleExpr {
	jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _field_Expr;
	


};
struct _1c0c40dc2_LitExpr {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1c0c40dc2_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1c0c40dc2_LitExpr _other) { return !this->operator==(_other); }


};
struct _1c0c4129b_UnsafeExpr {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	

	inline bool operator==(_1c0c4129b_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c4129b_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1c0c41752_IdentExpr {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1c0c41752_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1c0c41752_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1c0c41dd4_UnaryExpr {
	jule::Ptr<_1c0c25406_Token> _field_Op;
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	

	inline bool operator==(_1c0c41dd4_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c41dd4_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1c0c422ad_VariadicExpr {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	

	inline bool operator==(_1c0c422ad_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c422ad_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1c0c42687_CastExpr {
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Kind;
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	

	inline bool operator==(_1c0c42687_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c42687_CastExpr _other) { return !this->operator==(_other); }


};
struct _1c0c42a61_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _field_Ns;
	jule::Ptr<_1c0c25406_Token> _field_Ident;
	


};
struct _1c0c42e3a_SubIdentExpr {
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	jule::Ptr<_1c0c25406_Token> _field_Ident;
	

	inline bool operator==(_1c0c42e3a_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c0c42e3a_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1c0c433e1_BinopExpr {
	jule::Ptr<_1c0c3ed27_Expr> _field_Left;
	jule::Ptr<_1c0c3ed27_Expr> _field_Right;
	jule::Ptr<_1c0c25406_Token> _field_Op;
	

	inline bool operator==(_1c0c433e1_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c0c433e1_BinopExpr _other) { return !this->operator==(_other); }


};
struct _1c0c43a51_FnCallExpr {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _field_Args;
	jule::Ptr<_1c0c4aa14_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1c0c44546_FieldExprPair {
	jule::Ptr<_1c0c25406_Token> _field_Field;
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	

	inline bool operator==(_1c0c44546_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c44546_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1c0c44d71_StructLit {
	jule::Ptr<_1c0c25406_Token> _field_End;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _field_Exprs;
	


};
struct _1c0c45327_BraceLit {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c25406_Token> _field_End;
	jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _field_Exprs;
	


};
struct _1c0c45b52_KeyValPair {
	jule::Ptr<_1c0c3ed27_Expr> _field_Key;
	jule::Ptr<_1c0c3ed27_Expr> _field_Val;
	jule::Ptr<_1c0c25406_Token> _field_Colon;
	

	inline bool operator==(_1c0c45b52_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1c0c45b52_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1c0c4634a_SliceExpr {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c25406_Token> _field_End;
	jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _field_Exprs;
	


};
struct _1c0c46cda_IndexingExpr {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c25406_Token> _field_End;
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	jule::Ptr<_1c0c3ed27_Expr> _field_Index;
	

	inline bool operator==(_1c0c46cda_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1c0c46cda_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1c0c4744a_SlicingExpr {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c25406_Token> _field_End;
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	jule::Ptr<_1c0c3ed27_Expr> _field_Start;
	jule::Ptr<_1c0c3ed27_Expr> _field_To;
	

	inline bool operator==(_1c0c4744a_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1c0c4744a_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1c0c47747_Constraint {
	jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> _field_Mask;
	


};
struct _1c0c47bed_GenericDecl {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c0c47747_Constraint> _field_Constraint;
	

	inline bool operator==(_1c0c47bed_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1c0c47bed_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1c0c480c7_LabelSt {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1c0c480c7_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c0c480c7_LabelSt _other) { return !this->operator==(_other); }


};
struct _1c0c484a1_GotoSt {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c25406_Token> _field_Label;
	

	inline bool operator==(_1c0c484a1_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1c0c484a1_GotoSt _other) { return !this->operator==(_other); }


};
struct _1c0c4879d_FallSt {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	

	inline bool operator==(_1c0c4879d_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1c0c4879d_FallSt _other) { return !this->operator==(_other); }


};
struct _1c0c48e0d_AssignLeft {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	

	inline bool operator==(_1c0c48e0d_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c48e0d_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1c0c49491_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1c0c25406_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1c0c48e0d_AssignLeft>> _field_Left;
	jule::Ptr<_1c0c3ed27_Expr> _field_Right;
	


};
struct _1c0c4a3a4_Stmt {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1c0c4a3a4_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1c0c4a3a4_Stmt _other) { return !this->operator==(_other); }


};
struct _1c0c4aa14_ScopeTree {
	jule::Ptr<_1c0c4aa14_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1c0c4a3a4_Stmt> _field_Stmts;
	jule::Ptr<_1c0c25406_Token> _field_End;
	


};
struct _1c0c4b251_ParamDecl {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1c0c4b251_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c0c4b251_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1c0c4c6a3_FnDecl {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c0c39e10_Directive>> _field_Directives;
	jule::Ptr<_1c0c4aa14_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>> _field_Generics;
	jule::Ptr<_1c0c3d8d6_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1c0c4b251_ParamDecl>> _field_Params;
	


};
struct _1c0c4d781_VarDecl {
	jule::Ptr<_1c0c4aa14_ScopeTree> _field_Scope;
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1c0c39e10_Directive>> _field_Directives;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Kind;
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	


};
struct _1c0c4db5a_RetSt {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	

	inline bool operator==(_1c0c4db5a_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c4db5a_RetSt _other) { return !this->operator==(_other); }


};
struct _1c0c4e2ed_Iter {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1c0c4aa14_ScopeTree> _field_Scope;
	

	inline bool operator==(_1c0c4e2ed_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0c4e2ed_Iter _other) { return !this->operator==(_other); }


};
struct _1c0c4eb28_WhileKind {
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1c0c25406_Token> _field_NextToken;
	

	inline bool operator==(_1c0c4eb28_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1c0c4eb28_WhileKind _other) { return !this->operator==(_other); }


};
struct _1c0c50530_RangeKind {
	jule::Ptr<_1c0c25406_Token> _field_InToken;
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	jule::Ptr<_1c0c4d781_VarDecl> _field_KeyA;
	jule::Ptr<_1c0c4d781_VarDecl> _field_KeyB;
	

	inline bool operator==(_1c0c50530_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1c0c50530_RangeKind _other) { return !this->operator==(_other); }


};
struct _1c0c50909_BreakSt {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c25406_Token> _field_Label;
	

	inline bool operator==(_1c0c50909_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1c0c50909_BreakSt _other) { return !this->operator==(_other); }


};
struct _1c0c50cd3_ContSt {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c25406_Token> _field_Label;
	

	inline bool operator==(_1c0c50cd3_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1c0c50cd3_ContSt _other) { return !this->operator==(_other); }


};
struct _1c0c51289_If {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	jule::Ptr<_1c0c4aa14_ScopeTree> _field_Scope;
	

	inline bool operator==(_1c0c51289_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0c51289_If _other) { return !this->operator==(_other); }


};
struct _1c0c51663_Else {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c4aa14_ScopeTree> _field_Scope;
	

	inline bool operator==(_1c0c51663_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0c51663_Else _other) { return !this->operator==(_other); }


};
struct _1c0c51b19_Conditional {
	jule::Ptr<_1c0c51289_If> _field_Head;
	jule::Slice<jule::Ptr<_1c0c51289_If>> _field_Tail;
	jule::Ptr<_1c0c51663_Else> _field_Default;
	


};
struct _1c0c52356_TypeAliasDecl {
	jule::Ptr<_1c0c4aa14_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Kind;
	

	inline bool operator==(_1c0c52356_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0c52356_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1c0c5280c_Case {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c4aa14_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _field_Exprs;
	


};
struct _1c0c53049_MatchCase {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c25406_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1c0c5280c_Case>> _field_Cases;
	jule::Ptr<_1c0c51663_Else> _field_Default;
	


};
struct _1c0c53863_UseDecl {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1c0c53d19_EnumItemDecl {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	

	inline bool operator==(_1c0c53d19_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c53d19_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1c0c548ca_EnumDecl {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c0c53d19_EnumItemDecl>> _field_Items;
	jule::Ptr<_1c0c25406_Token> _field_End;
	


};
struct _1c0c55205_TypeEnumItemDecl {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Kind;
	

	inline bool operator==(_1c0c55205_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0c55205_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1c0c55865_TypeEnumDecl {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c0c55205_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1c0c25406_Token> _field_End;
	


};
struct _1c0c55b2e_FieldDecl {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Kind;
	jule::Ptr<_1c0c3ed27_Expr> _field_Default;
	

	inline bool operator==(_1c0c55b2e_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1c0c55b2e_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1c0c56525_StructDecl {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c25406_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c0c55b2e_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1c0c39e10_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>> _field_Generics;
	


};
struct _1c0c56c62_TraitDecl {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c25406_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1c0c4c6a3_FnDecl>> _field_Methods;
	


};
struct _1c0c573c2_Impl {
	jule::Ptr<_1c0c25406_Token> _field_End;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Base;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1c0c4c6a3_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1c0c4d781_VarDecl>> _field_Statics;
	


};
struct _1c0c58758_Field {
	jule::Ptr<_1c0c5b64b_Struct> _field_Owner;
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c0db76db_TypeSymbol> _field_Kind;
	jule::Ptr<_1c0c3ed27_Expr> _field_Default;
	

	inline bool operator==(_1c0c58758_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1c0c58758_Field _other) { return !this->operator==(_other); }


};
struct _1c0c5a738_Operators {
	jule::Ptr<_1c0c744aa_FnIns> _field_Eq;
	jule::Ptr<_1c0c744aa_FnIns> _field_Gt;
	jule::Ptr<_1c0c744aa_FnIns> _field_GtEq;
	jule::Ptr<_1c0c744aa_FnIns> _field_Lt;
	jule::Ptr<_1c0c744aa_FnIns> _field_LtEq;
	jule::Ptr<_1c0c744aa_FnIns> _field_Shl;
	jule::Ptr<_1c0c744aa_FnIns> _field_Shr;
	jule::Ptr<_1c0c744aa_FnIns> _field_Add;
	jule::Ptr<_1c0c744aa_FnIns> _field_Sub;
	jule::Ptr<_1c0c744aa_FnIns> _field_Div;
	jule::Ptr<_1c0c744aa_FnIns> _field_Mul;
	jule::Ptr<_1c0c744aa_FnIns> _field_Mod;
	jule::Ptr<_1c0c744aa_FnIns> _field_BitAnd;
	jule::Ptr<_1c0c744aa_FnIns> _field_BitOr;
	jule::Ptr<_1c0c744aa_FnIns> _field_BitXor;
	jule::Ptr<_1c0c744aa_FnIns> _field_Neg;
	jule::Ptr<_1c0c744aa_FnIns> _field_Pos;
	jule::Ptr<_1c0c744aa_FnIns> _field_BitNot;
	jule::Ptr<_1c0c744aa_FnIns> _field_AddAssign;
	jule::Ptr<_1c0c744aa_FnIns> _field_SubAssign;
	jule::Ptr<_1c0c744aa_FnIns> _field_DivAssign;
	jule::Ptr<_1c0c744aa_FnIns> _field_MulAssign;
	jule::Ptr<_1c0c744aa_FnIns> _field_ModAssign;
	jule::Ptr<_1c0c744aa_FnIns> _field_ShlAssign;
	jule::Ptr<_1c0c744aa_FnIns> _field_ShrAssign;
	jule::Ptr<_1c0c744aa_FnIns> _field_BitOrAssign;
	jule::Ptr<_1c0c744aa_FnIns> _field_BitAndAssign;
	jule::Ptr<_1c0c744aa_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1c0c5a738_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1c0c5a738_Operators _other) { return !this->operator==(_other); }


};
struct _1c0c5b64b_Struct {
	jule::Ptr<_1c0d04705_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1c0c5b64b_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1c0c5b64b_Struct>> _field_Uses;
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c0c58758_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1c0c715a6_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c0d2b94c_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1c0c39e10_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1c0c84850_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1c0c5e3c9_StructIns>> _field_Instances;
	


};
struct _1c0c5d829_FieldIns {
	jule::Ptr<_1c0c58758_Field> _field_Decl;
	jule::Ptr<_1c0db0519_TypeKind> _field_Kind;
	jule::Ptr<_1c0d80352_Data> _field_Default;
	

	inline bool operator==(_1c0c5d829_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1c0c5d829_FieldIns _other) { return !this->operator==(_other); }


};
struct _1c0c63367_OperandExprModel {
	jule::Ptr<_1c0db0519_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1c0c63367_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1c0c63367_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c63862_BinopExprModel {
	jule::Ptr<_1c0c63367_OperandExprModel> _field_Left;
	jule::Ptr<_1c0c63367_OperandExprModel> _field_Right;
	jule::Ptr<_1c0c25406_Token> _field_Op;
	

	inline bool operator==(_1c0c63862_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c0c63862_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c63c3b_UnaryExprModel {
	jule::Ptr<_1c0d80352_Data> _field_Expr;
	jule::Ptr<_1c0c25406_Token> _field_Op;
	

	inline bool operator==(_1c0c63c3b_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c0c63c3b_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c64269_StructArgExprModel {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c5d829_FieldIns> _field_Field;
	jule::Ptr<_1c0d80352_Data> _field_Expr;
	

	inline bool operator==(_1c0c64269_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c64269_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c64610_StructLitExprModel {
	jule::Ptr<_1c0c5e3c9_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1c0c64269_StructArgExprModel>> _field_Args;
	


};
struct _1c0c6490c_AllocStructLitExprModel {
	jule::Ptr<_1c0c64610_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1c0c6490c_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1c0c6490c_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c64e90_CastingExprModel {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1c0db0519_TypeKind> _field_Kind;
	jule::Ptr<_1c0db0519_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1c0c64e90_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1c0c64e90_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c65842_FnCallExprModel {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0c744aa_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1c0cb210d_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1c0c65c1b_SliceExprModel {
	jule::Ptr<_1c0db0519_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1c0c661c2_IndexingExprModel {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0d80352_Data> _field_Expr;
	jule::Ptr<_1c0d80352_Data> _field_Index;
	

	inline bool operator==(_1c0c661c2_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1c0c661c2_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c6659b_AnonFnExprModel {
	jule::Ptr<_1c0c744aa_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_1c0c6659b_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1c0c6659b_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c66975_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1c0c66975_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1c0c66975_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c66e2b_MapExprModel {
	jule::Ptr<_1c0db0519_TypeKind> _field_KeyKind;
	jule::Ptr<_1c0db0519_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1c0c66975_KeyValPairExprModel>> _field_Entries;
	


};
struct _1c0c674ae_SlicingExprModel {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1c0c674ae_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1c0c674ae_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c67a42_TraitSubIdentExprModel {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1c0c715a6_Fn> _field_Method;
	jule::Ptr<_1c0c84850_Trait> _field_Trt;
	

	inline bool operator==(_1c0c67a42_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1c0c67a42_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c683d3_StructSubIdentExprModel {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Ptr<_1c0d80352_Data> _field_Expr;
	jule::Ptr<_1c0c744aa_FnIns> _field_Method;
	jule::Ptr<_1c0c5d829_FieldIns> _field_Field;
	jule::Ptr<_1c0c5e3c9_StructIns> _field_Owner;
	

	inline bool operator==(_1c0c683d3_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1c0c683d3_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c68889_StructStaticIdentExprModel {
	jule::Ptr<_1c0c5e3c9_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1c0c744aa_FnIns> _field_Method;
	

	inline bool operator==(_1c0c68889_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1c0c68889_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c68c63_ArrayExprModel {
	jule::Ptr<_1c0dbe913_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1c0c69060_TupleExprModel {
	jule::Slice<jule::Ptr<_1c0d80352_Data>> _field_Datas;
	


};
struct _1c0c69439_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1c0c69439_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1c0c69439_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c69813_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1c0c69813_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1c0c69813_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c69bdc_BuiltinNewCallExprModel {
	jule::Ptr<_1c0db0519_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1c0c69bdc_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1c0c69bdc_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c6a0b6_BuiltinPanicCallExprModel {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c0c6a0b6_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c6a0b6_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c6a56c_BuiltinAssertCallExprModel {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1c0c6a56c_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1c0c6a56c_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c6aa23_BuiltinMakeCallExprModel {
	jule::Ptr<_1c0db0519_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1c0c6aa23_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1c0c6aa23_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c6adec_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1c0c6adec_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1c0c6adec_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c6b1e9_BuiltinLenCallExprModel {
	jule::Ptr<_1c0d80352_Data> _field_Expr;
	

	inline bool operator==(_1c0c6b1e9_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c6b1e9_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c6b4e6_BuiltinCapCallExprModel {
	jule::Ptr<_1c0d80352_Data> _field_Expr;
	

	inline bool operator==(_1c0c6b4e6_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c6b4e6_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c6b8c0_BuiltinDeleteCallExprModel {
	jule::Ptr<_1c0d80352_Data> _field_Dest;
	jule::Ptr<_1c0d80352_Data> _field_Key;
	

	inline bool operator==(_1c0c6b8c0_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1c0c6b8c0_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c6bc99_BuiltinCopyCallExprModel {
	jule::Ptr<_1c0d80352_Data> _field_Dest;
	jule::Ptr<_1c0d80352_Data> _field_Src;
	

	inline bool operator==(_1c0c6bc99_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1c0c6bc99_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c6c173_BuiltinErrorCallExprModel {
	jule::Ptr<_1c0c744aa_FnIns> _field_Func;
	jule::Ptr<_1c0d80352_Data> _field_Err;
	

	inline bool operator==(_1c0c6c173_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1c0c6c173_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c67c2e_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c0c67c2e_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c67c2e_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c6c89e_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c0c6c89e_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c6c89e_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c6cb9b_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1c0c6cb9b_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1c0c6cb9b_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c6ce98_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c0c6ce98_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c6ce98_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c6d372_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1c0c6d66e_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c0c6d66e_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0c6d66e_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1c0c6e351_RetType {
	jule::Ptr<_1c0db76db_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _field_Idents;
	


};
struct _1c0c6ead2_Param {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1c0db76db_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1c0c6ead2_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c0c6ead2_Param _other) { return !this->operator==(_other); }


};
struct _1c0c715a6_Fn {
	jule::Ptr<_1c0d04705_Sema> _field_sema;
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c0c39e10_Directive>> _field_Directives;
	jule::Ptr<_1c0c4aa14_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>> _field_Generics;
	jule::Ptr<_1c0c6e351_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1c0c6ead2_Param>> _field_Params;
	jule::Ptr<_1c0c5b64b_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1c0c744aa_FnIns>> _field_Instances;
	


};
struct _1c0c7350e_ParamIns {
	jule::Ptr<_1c0c6ead2_Param> _field_Decl;
	jule::Ptr<_1c0db0519_TypeKind> _field_Kind;
	

	inline bool operator==(_1c0c7350e_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0c7350e_ParamIns _other) { return !this->operator==(_other); }


};
struct _1c0c744aa_FnIns {
	jule::Ptr<_1c0c5e3c9_StructIns> _field_Owner;
	jule::Ptr<_1c0c715a6_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1c0dadb33_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>> _field_Params;
	jule::Ptr<_1c0db0519_TypeKind> _field_Result;
	jule::Ptr<_1c0cb210d_Scope> _field_Scope;
	jule::Ptr<_1c0c77656_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1c0c77656_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1c0c78b74_Pass {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1c0c78b74_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1c0c78b74_Pass _other) { return !this->operator==(_other); }


};
struct _1c0c7d739_symbolBuilder {
	jule::Ptr<_1c0c7d739_symbolBuilder> _field_owner;
	jule::Trait<_1c0cd0626_Importer> _field_importer;
	jule::Slice<_21ce0c86b_Log> _field_errors;
	jule::Ptr<_1c0c38a46_Ast> _field_ast;
	jule::Ptr<_1c0d7a12c_SymbolTable> _field_table;
	


};
struct _1c0c84850_Trait {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1c0db76db_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1c0c715a6_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c0c5b64b_Struct>> _field_Implemented;
	


};
struct _1c0c864cd_EnumItem {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c0d81496_Value> _field_Value;
	

	inline bool operator==(_1c0c864cd_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1c0c864cd_EnumItem _other) { return !this->operator==(_other); }


};
struct _1c0c8704a_Enum {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c0db76db_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1c0c864cd_EnumItem>> _field_Items;
	


};
struct _1c0c8817d_TypeEnumItem {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c0db76db_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1c0c8817d_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0c8817d_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1c0c88755_TypeEnum {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c0c8817d_TypeEnumItem>> _field_Items;
	


};
struct _1c0c8aaed_comptimeRange {
	jule::Trait<_1c0c8a911_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1c0c8aaed_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c0c8aaed_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1c0c8b659_comptimeStructField {
	jule::Ptr<_1c0c5d829_FieldIns> _field_field;
	

	inline bool operator==(_1c0c8b659_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1c0c8b659_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1c0c8d309_comptimeStructFields {
	jule::Slice<jule::Ptr<_1c0c5d829_FieldIns>> _field_fields;
	


};
struct _1c0c8e915_comptimeStatic {
	jule::Ptr<_1c0d2b94c_Var> _field_field;
	

	inline bool operator==(_1c0c8e915_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1c0c8e915_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1c0c915c6_comptimeStatics {
	jule::Slice<jule::Ptr<_1c0d2b94c_Var>> _field_fields;
	


};
struct _1c0c92bc1_comptimeEnumField {
	jule::Ptr<_1c0c864cd_EnumItem> _field_field;
	

	inline bool operator==(_1c0c92bc1_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1c0c92bc1_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1c0c93ed0_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1c0c864cd_EnumItem>> _field_fields;
	


};
struct _1c0c95663_comptimeParam {
	jule::Ptr<_1c0c7350e_ParamIns> _field_param;
	

	inline bool operator==(_1c0c95663_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1c0c95663_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1c0c978c9_comptimeParams {
	jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>> _field_params;
	


};
struct _1c0c98ec4_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1c0c9a5be_comptimeTypeInfo>> _field_types;
	


};
struct _1c0c9a5be_comptimeTypeInfo {
	jule::Ptr<_1c0db0519_TypeKind> _field_base;
	

	inline bool operator==(_1c0c9a5be_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1c0c9a5be_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1c0ca1ad1_comptimeValue {
	jule::Ptr<_1c0d80352_Data> _field_data;
	

	inline bool operator==(_1c0ca1ad1_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c0ca1ad1_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1c0ca4430_comptimeFiles {
	jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>> _field_files;
	


};
struct _1c0ca5a2a_comptimeFile {
	jule::Ptr<_1c0d7a12c_SymbolTable> _field_file;
	

	inline bool operator==(_1c0ca5a2a_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1c0ca5a2a_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1c0ca9b94_constraintChecker {
	jule::Ptr<_1c0d04705_Sema> _field_s;
	jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1c0dadb33_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> _field_genericsA;
	jule::Ptr<_1c0c744aa_FnIns> _field_fi;
	jule::Ptr<_1c0c5e3c9_StructIns> _field_si;
	jule::Ptr<_1c0c25406_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1c0cabbc9_Impl {
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Base;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1c0c715a6_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c0d2b94c_Var>> _field_Statics;
	


};
struct _1c0cb210d_Scope {
	jule::Ptr<_1c0cb210d_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1c0cb252b_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1c0cb210d_Scope> _field_Scope;
	

	inline bool operator==(_1c0cb252b_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0cb252b_If _other) { return !this->operator==(_other); }


};
struct _1c0cb2828_Else {
	jule::Ptr<_1c0cb210d_Scope> _field_Scope;
	

	inline bool operator==(_1c0cb2828_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0cb2828_Else _other) { return !this->operator==(_other); }


};
struct _1c0cb2c46_Conditional {
	jule::Slice<jule::Ptr<_1c0cb252b_If>> _field_Elifs;
	jule::Ptr<_1c0cb2828_Else> _field_Default;
	


};
struct _1c0cb3043_InfIter {
	jule::Ptr<_1c0cb210d_Scope> _field_Scope;
	

	inline bool operator==(_1c0cb3043_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0cb3043_InfIter _other) { return !this->operator==(_other); }


};
struct _1c0cb34e9_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1c0cb210d_Scope> _field_Scope;
	

	inline bool operator==(_1c0cb34e9_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0cb34e9_WhileIter _other) { return !this->operator==(_other); }


};
struct _1c0cb3e45_RangeIter {
	jule::Ptr<_1c0d80352_Data> _field_Expr;
	jule::Ptr<_1c0cb210d_Scope> _field_Scope;
	jule::Ptr<_1c0d2b94c_Var> _field_KeyA;
	jule::Ptr<_1c0d2b94c_Var> _field_KeyB;
	

	inline bool operator==(_1c0cb3e45_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1c0cb3e45_RangeIter _other) { return !this->operator==(_other); }


};
struct _1c0cb42ca_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1c0cb42ca_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1c0cb42ca_ContSt _other) { return !this->operator==(_other); }


};
struct _1c0cb46a4_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1c0cb46a4_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1c0cb46a4_BreakSt _other) { return !this->operator==(_other); }


};
struct _1c0cb49a1_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1c0cb49a1_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c0cb49a1_Label _other) { return !this->operator==(_other); }


};
struct _1c0cb4d7a_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1c0cb49a1_Label> _field_Label;
	

	inline bool operator==(_1c0cb4d7a_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1c0cb4d7a_GotoSt _other) { return !this->operator==(_other); }


};
struct _1c0cb5254_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1c0cb5254_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c0cb5254_Postfix _other) { return !this->operator==(_other); }


};
struct _1c0cb570a_Assign {
	jule::Ptr<_1c0c63367_OperandExprModel> _field_L;
	jule::Ptr<_1c0c63367_OperandExprModel> _field_R;
	jule::Ptr<_1c0c25406_Token> _field_Op;
	

	inline bool operator==(_1c0cb570a_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c0cb570a_Assign _other) { return !this->operator==(_other); }


};
struct _1c0cb5ad4_MultiAssign {
	jule::Slice<jule::Ptr<_1c0d80352_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _1c0cb6244_Match {
	jule::Ptr<_1c0d80352_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1c0cb6d7c_Case>> _field_Cases;
	jule::Ptr<_1c0cb6d7c_Case> _field_Default;
	


};
struct _1c0cb6d7c_Case {
	jule::Ptr<_1c0cb6244_Match> _field_Owner;
	jule::Ptr<_1c0cb210d_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1c0d80352_Data>> _field_Exprs;
	jule::Ptr<_1c0cb6d7c_Case> _field_Next;
	


};
struct _1c0cb7476_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1c0cb7476_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1c0cb7476_FallSt _other) { return !this->operator==(_other); }


};
struct _1c0cb780b_RetSt {
	jule::Ptr<_1c0c744aa_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1c0cb780b_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c0cb780b_RetSt _other) { return !this->operator==(_other); }


};
struct _1c0cb7e6b_scopeLabel {
	jule::Ptr<_1c0c25406_Token> _field_token;
	jule::Ptr<_1c0cb49a1_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1c0cb9412_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1c0cb7e6b_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1c0cb7e6b_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1c0cb84ee_scopeGoto {
	jule::Ptr<_1c0cb4d7a_GotoSt> _field_st;
	jule::Ptr<_1c0c484a1_GotoSt> _field_gt;
	jule::Ptr<_1c0cb9412_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1c0cb84ee_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1c0cb84ee_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1c0cb9412_scopeChecker {
	jule::Ptr<_1c0c25406_Token> _field_calledFrom;
	jule::Ptr<_1c0d04705_Sema> _field_s;
	jule::Ptr<_1c0c744aa_FnIns> _field_owner;
	jule::Ptr<_1c0cb9412_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1c0d7a12c_SymbolTable> _field_table;
	jule::Ptr<_1c0cb210d_Scope> _field_scope;
	jule::Ptr<_1c0c4aa14_ScopeTree> _field_tree;
	jule::Ptr<_1c0c744aa_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1c0cb7e6b_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1c0cb84ee_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1c0cb9412_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1c0cb9412_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1c0ccc0b2_directiveChecker {
	jule::Ptr<_1c0d04705_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1c0c39e10_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1c0ccc0b2_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1c0ccc0b2_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1c0cd353b_ImportInfo {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _field_Selected;
	jule::Ptr<_1c0cd6462_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _1c0cd6462_Package {
	jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>> _field_Files;
	


};
struct _1c0d03acd_commonSemaMeta {
	jule::Slice<jule::Ptr<_1c0c9a5be_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1c0d04705_Sema {
	jule::Slice<_21ce0c86b_Log> _field_errors;
	jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>> _field_files;
	jule::Ptr<_1c0d7a12c_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1c0d03acd_commonSemaMeta> _field_meta;
	


};
struct _1c0d283a5_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1c0d2a792_IterRelation {
	jule::Ptr<_1c0d2b94c_Var> _field_Range;
	

	inline bool operator==(_1c0d2a792_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1c0d2a792_IterRelation _other) { return !this->operator==(_other); }


};
struct _1c0d2b94c_Var {
	jule::Ptr<_1c0cb210d_Scope> _field_Scope;
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1c0db76db_TypeSymbol> _field_Kind;
	jule::Ptr<_1c0d81496_Value> _field_Value;
	jule::Ptr<_1c0c77656_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1c0c39e10_Directive>> _field_Directives;
	jule::Ptr<_1c0d2a792_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1c0d2b94c_Var>> _field_Depends;
	


};
struct _1c0d2c761_FuncPattern {
	


};
struct _1c0d6716e_typeCompatibilityChecker {
	jule::Ptr<_1c0d04705_Sema> _field_s;
	jule::Ptr<_1c0db0519_TypeKind> _field_dest;
	jule::Ptr<_1c0db0519_TypeKind> _field_src;
	jule::Ptr<_1c0c25406_Token> _field_errorToken;
	

	inline bool operator==(_1c0d6716e_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1c0d6716e_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1c0d68e1d_assignTypeChecker {
	jule::Ptr<_1c0d04705_Sema> _field_s;
	jule::Ptr<_1c0db0519_TypeKind> _field_dest;
	jule::Ptr<_1c0d80352_Data> _field_d;
	jule::Ptr<_1c0c25406_Token> _field_errorToken;
	

	inline bool operator==(_1c0d68e1d_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1c0d68e1d_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1c0d6aa8a_dynamicTypeAnnotation {
	jule::Ptr<_1c0d82046_Eval> _field_e;
	jule::Ptr<_1c0c744aa_FnIns> _field_f;
	jule::Ptr<_1c0c7350e_ParamIns> _field_p;
	jule::Ptr<_1c0d80352_Data> _field_a;
	jule::Ptr<_1c0c25406_Token> _field_errorToken;
	jule::Ptr<_1c0db0519_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1c0db0519_TypeKind>> _field_ignored;
	


};
struct _1c0d708e7_fnCallArgChecker {
	jule::Ptr<_1c0d82046_Eval> _field_e;
	jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _field_args;
	jule::Ptr<_1c0c25406_Token> _field_errorToken;
	jule::Ptr<_1c0c744aa_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1c0db0519_TypeKind>> _field_ignored;
	


};
struct _1c0d7382e_structLitChecker {
	jule::Ptr<_1c0d82046_Eval> _field_e;
	jule::Ptr<_1c0c25406_Token> _field_errorToken;
	jule::Ptr<_1c0c5e3c9_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1c0c64269_StructArgExprModel>> _field_args;
	


};
struct _1c0d75611_rangeChecker {
	jule::Ptr<_1c0cb9412_scopeChecker> _field_sc;
	jule::Ptr<_1c0c50530_RangeKind> _field_rang;
	jule::Ptr<_1c0cb3e45_RangeIter> _field_Kind;
	jule::Ptr<_1c0d80352_Data> _field_d;
	

	inline bool operator==(_1c0d75611_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1c0d75611_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1c0d77d72_retTypeChecker {
	jule::Ptr<_1c0cb9412_scopeChecker> _field_sc;
	jule::Ptr<_1c0c744aa_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1c0db0519_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _field_exprs;
	jule::Ptr<_1c0c25406_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1c0d7a12c_SymbolTable {
	jule::Ptr<_1c0c2abc0_File> _field_File;
	jule::Slice<_1c0c78b74_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1c0cd353b_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1c0d2b94c_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1c0c5b64b_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1c0c715a6_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1c0c84850_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1c0c8704a_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1c0c88755_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1c0cabbc9_Impl>> _field_Impls;
	


};
struct _1c0d80352_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1c0db0519_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_2036445ea_Const> _field_Constant;
	

	inline bool operator==(_1c0d80352_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1c0d80352_Data _other) { return !this->operator==(_other); }


};
struct _1c0d81496_Value {
	jule::Ptr<_1c0c3ed27_Expr> _field_Expr;
	jule::Ptr<_1c0d80352_Data> _field_Data;
	

	inline bool operator==(_1c0d81496_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1c0d81496_Value _other) { return !this->operator==(_other); }


};
struct _1c0d82046_Eval {
	jule::Ptr<_1c0d04705_Sema> _field_s;
	jule::Trait<_1c0dd0050_Lookup> _field_lookup;
	jule::Ptr<_1c0db0519_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1c0d2b94c_Var> _field_owner;
	jule::Ptr<_1c0c5d829_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1c0d82046_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1c0d82046_Eval _other) { return !this->operator==(_other); }


};
struct _1c0da04d7_unaryEval {
	jule::Ptr<_1c0d82046_Eval> _field_e;
	jule::Ptr<_1c0d80352_Data> _field_d;
	jule::Ptr<_1c0c41dd4_UnaryExpr> _field_u;
	

	inline bool operator==(_1c0da04d7_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1c0da04d7_unaryEval _other) { return !this->operator==(_other); }


};
struct _1c0da2473_binaryEval {
	jule::Ptr<_1c0d82046_Eval> _field_e;
	jule::Ptr<_1c0d80352_Data> _field_l;
	jule::Ptr<_1c0d80352_Data> _field_r;
	jule::Ptr<_1c0c25406_Token> _field_op;
	

	inline bool operator==(_1c0da2473_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1c0da2473_binaryEval _other) { return !this->operator==(_other); }


};
struct _1c0dadb33_InsGeneric {
	jule::Ptr<_1c0db0519_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1c0db0519_TypeKind>> _field_Constraint;
	


};
struct _1c0dae727_TypeAlias {
	jule::Ptr<_1c0c4aa14_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c0db76db_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> _field_Generics;
	


};
struct _1c0db0519_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1c0db0063_Kind> _field_Kind;
	

	inline bool operator==(_1c0db0519_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0db0519_TypeKind _other) { return !this->operator==(_other); }


};
struct _1c0db76db_TypeSymbol {
	jule::Ptr<_1c0c3a9e3_TypeDecl> _field_Decl;
	jule::Ptr<_1c0db0519_TypeKind> _field_Kind;
	

	inline bool operator==(_1c0db76db_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0db76db_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1c0db80e3_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1c0db80e3_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0db80e3_Prim _other) { return !this->operator==(_other); }


};
struct _1c0dbbb1e_Sptr {
	jule::Ptr<_1c0db0519_TypeKind> _field_Elem;
	

	inline bool operator==(_1c0dbbb1e_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0dbbb1e_Sptr _other) { return !this->operator==(_other); }


};
struct _1c0dbc5e2_Slc {
	jule::Ptr<_1c0db0519_TypeKind> _field_Elem;
	

	inline bool operator==(_1c0dbc5e2_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0dbc5e2_Slc _other) { return !this->operator==(_other); }


};
struct _1c0dbd1d6_Tuple {
	jule::Slice<jule::Ptr<_1c0db0519_TypeKind>> _field_Types;
	


};
struct _1c0dbdc86_Map {
	jule::Ptr<_1c0db0519_TypeKind> _field_Key;
	jule::Ptr<_1c0db0519_TypeKind> _field_Val;
	

	inline bool operator==(_1c0dbdc86_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1c0dbdc86_Map _other) { return !this->operator==(_other); }


};
struct _1c0dbe913_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1c0db0519_TypeKind> _field_Elem;
	

	inline bool operator==(_1c0dbe913_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0dbe913_Arr _other) { return !this->operator==(_other); }


};
struct _1c0dc03d6_Ptr {
	jule::Ptr<_1c0db0519_TypeKind> _field_Elem;
	

	inline bool operator==(_1c0dc03d6_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0dc03d6_Ptr _other) { return !this->operator==(_other); }


};
struct _1c0dc13d7_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1c0dc13d7_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1c0dc13d7_referencer _other) { return !this->operator==(_other); }


};
struct _1c0dc23c7_typeChecker {
	jule::Ptr<_1c0d04705_Sema> _field_s;
	jule::Trait<_1c0dd0050_Lookup> _field_rootLookup;
	jule::Trait<_1c0dd0050_Lookup> _field_lookup;
	jule::Ptr<_1c0dc13d7_referencer> _field_referencer;
	jule::Ptr<_1c0c77656_ReferenceStack> _field_refers;
	jule::Ptr<_1c0c25406_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1c0db0519_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1c0dae727_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1c0dca05b_identTypeLookup {
	

	inline bool operator==(_1c0dca05b_identTypeLookup _other) { return true; }

	inline bool operator!=(_1c0dca05b_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1c181ad86_FileInfo {
	jule::Ptr<_1c0c38a46_Ast> _field_Ast;
	jule::Slice<_21ce0c86b_Log> _field_Errors;
	


};
struct _1c1866c17_stmt {
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1c18675a8_scopeParser {
	jule::Ptr<_1c1885780_parser> _field_p;
	jule::Ptr<_1c0c4aa14_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1c1866c17_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _1c1874b7b_exprBuilder {
	jule::Ptr<_1c1885780_parser> _field_p;
	

	inline bool operator==(_1c1874b7b_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1c1874b7b_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1c18820d9_assignInfo {
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _field_l;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _field_r;
	jule::Ptr<_1c0c25406_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1c1885780_parser {
	jule::Ptr<_1c0c38a46_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1c0c39e10_Directive>> _field_directives;
	jule::Slice<_21ce0c86b_Log> _field_errors;
	jule::Ptr<_1c1874b7b_exprBuilder> _field_ep;
	


};
struct _1c18975e9_typeBuilder {
	jule::Ptr<_1c1885780_parser> _field_p;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1c10b5a1b_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_1c10b5a1b_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1c10b5a1b_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1c10b6ec3_directiveEval {
	jule::Slice<_21ce0c86b_Log> _field_logs;
	jule::Ptr<_1c0c39e10_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1c189b5dc_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1c0cd353b_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1c18a15d1_OrderedDefines {
	jule::Slice<jule::Ptr<_1c0c5b64b_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1c0d2b94c_Var>> _field_Globals;
	


};
struct _1c18a1845_defineOrderer {
	

	inline bool operator==(_1c18a1845_defineOrderer _other) { return true; }

	inline bool operator!=(_1c18a1845_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1c19d2b96_liveTable {
	jule::Slice<jule::Ptr<_1c0d2b94c_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1c0c744aa_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1c0c5e3c9_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1c0c84850_Trait>> _field_traits;
	


};
struct _1c1a172e6_scopeDeadCode {
	jule::Ptr<_1c1a172e6_scopeDeadCode> _field_parent;
	jule::Ptr<_1c0cb210d_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1c0cb49a1_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1c0cb4d7a_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1c1a172e6_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1c1a172e6_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1c1a1b54d_exprDeadCode {
	jule::Ptr<_1c1a172e6_scopeDeadCode> _field_s;
	

	inline bool operator==(_1c1a1b54d_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1c1a1b54d_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1c0ead43b_SwapExprModel {
	jule::Ptr<_1c0d80352_Data> _field_Left;
	jule::Ptr<_1c0d80352_Data> _field_Right;
	

	inline bool operator==(_1c0ead43b_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1c0ead43b_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1c0ead859_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1c0ead859_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1c0ead859_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1c0eadb56_RefExprModel {
	jule::Ptr<_1c0d2b94c_Var> _field_Var;
	

	inline bool operator==(_1c0eadb56_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1c0eadb56_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1c0eae184_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_2036445ea_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1c0eae184_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1c0eae184_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1c0eae717_MutSlicingExprModel {
	jule::Ptr<_1c0c25406_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1c0eae717_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1c0eae717_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1c0eaea14_UnsafeBinopExprModel {
	jule::Ptr<_1c0c63862_BinopExprModel> _field_Node;
	

	inline bool operator==(_1c0eaea14_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1c0eaea14_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1c0eaed11_UnsafeIndexingExprModel {
	jule::Ptr<_1c0c661c2_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1c0eaed11_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1c0eaed11_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1c0eb0240_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1c0c65c1b_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1c0eb0240_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1c0eb0240_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1c0eb0619_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1c0eb0619_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1c0eb0619_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1c0eb0916_InlineStdInternalNosafeStobs {
	jule::Any _field_Str = jule::Any(nullptr);
	

	inline bool operator==(_1c0eb0916_InlineStdInternalNosafeStobs _other) {
		return 
			this->_field_Str == _other._field_Str;
	}

	inline bool operator!=(_1c0eb0916_InlineStdInternalNosafeStobs _other) { return !this->operator==(_other); }


};
struct _1c0eb1ab0_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1c0cb210d_Scope> _field_scope;
	

	inline bool operator==(_1c0eb1ab0_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1c0eb1ab0_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1c0eb7c92_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_1c0eb7c92_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1c0eb7c92_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1c18a3160_stdCacheData {
	jule::Ptr<_1c0c744aa_FnIns> _field_f;
	jule::Fn<void(_1c0eb7c92_exprOptimizer*,_1c18a3160_stdCacheData*,jule::Ptr<_1c0c65842_FnCallExprModel>*)> _field_do;
	


};
struct _1c1a2390c_Optimizer {
	jule::Ptr<_1c189de2a_IR> _field_ir;
	

	inline bool operator==(_1c1a2390c_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1c1a2390c_Optimizer _other) { return !this->operator==(_other); }


};
struct _1c1a4b869_AnsiEscape {
	

	inline bool operator==(_1c1a4b869_AnsiEscape _other) { return true; }

	inline bool operator!=(_1c1a4b869_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1c1a4ce97_Logger {
	

	inline bool operator==(_1c1a4ce97_Logger _other) { return true; }

	inline bool operator!=(_1c1a4ce97_Logger _other) { return !this->operator==(_other); }


};
struct _1a885a7d4_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1a885a7d4_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1a885a7d4_AbsTime _other) { return !this->operator==(_other); }


};
struct _1a885aeaa_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1a885aeaa_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1a885aeaa_Time _other) { return !this->operator==(_other); }


};
struct _1a877de22_scopeCoder {
	jule::Ptr<_1a8865459_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a877de22_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a877de22_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1a878813a_exprCoder {
	jule::Ptr<_1a8865459_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a878813a_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a878813a_exprCoder _other) { return !this->operator==(_other); }


};
struct _1a879d8d1_TestCoder {
	jule::Ptr<_1c0c5e3c9_StructIns> _field_t;
	jule::Ptr<_1c0c715a6_Fn> _field_tmReset;
	jule::Ptr<_1c0c715a6_Fn> _field_tmFailed;
	jule::Ptr<_1c0c715a6_Fn> _field_tmSkipped;
	jule::Ptr<_1a8865459_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a879d8d1_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a879d8d1_TestCoder _other) { return !this->operator==(_other); }


};
struct _1a87a15b5_identCoder {
	

	inline bool operator==(_1a87a15b5_identCoder _other) { return true; }

	inline bool operator!=(_1a87a15b5_identCoder _other) { return !this->operator==(_other); }


};
struct _1a8863941_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1a8863941_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1a8863941_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1a8864018_traitHash {
	jule::Ptr<_1c0c84850_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_1c0c5e3c9_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1a8864018_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a8864018_traitHash _other) { return !this->operator==(_other); }


};
struct _1a88643e2_traitCast {
	jule::Ptr<_1c0c84850_Trait> _field_t1;
	jule::Ptr<_1c0c84850_Trait> _field_t2;
	

	inline bool operator==(_1a88643e2_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1a88643e2_traitCast _other) { return !this->operator==(_other); }


};
struct _1a8874611_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1a8874611_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a8874611_customType _other) { return !this->operator==(_other); }


};
struct _1a8875216_typeCoder {
	jule::Ptr<_1a8865459_ObjectCoder> _field_oc;
	jule::Ptr<_1a887cedd_resultCoder> _field_rc;
	

	inline bool operator==(_1a8875216_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1a8875216_typeCoder _other) { return !this->operator==(_other); }


};
struct _1a887cedd_resultCoder {
	jule::Ptr<_1a8875216_typeCoder> _field_tc;
	

	inline bool operator==(_1a887cedd_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1a887cedd_resultCoder _other) { return !this->operator==(_other); }


};
struct _1ac156043_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1ac156043_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ac156043_Flag _other) { return !this->operator==(_other); }


};struct _1ac159b90_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1ac159b90_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ac159b90_Flag _other) { return !this->operator==(_other); }


};struct _1ac15d38b_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1ac15d38b_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ac15d38b_Flag _other) { return !this->operator==(_other); }


};struct _1ac161acb_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1ac161acb_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ac161acb_Flag _other) { return !this->operator==(_other); }


};struct _1ac1652c7_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1ac1652c7_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ac1652c7_Flag _other) { return !this->operator==(_other); }


};
struct _1a8bb627c_FlagSet {
	jule::Slice<jule::Trait<_1a8bb46cb_CommonFlag>> _field_flags;
	


};
struct _1a8bb8c0d_argParser {
	_1a8bb627c_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _1a8865459_ObjectCoder {
	_21cd5e16e_StrBuilder _field_Obj;
	_21cd5e16e_StrBuilder _field_resultDecls;
	_21cd5e16e_StrBuilder _field_anyObj;
	jule::Ptr<_1c189de2a_IR> _field_ir;
	_1a8863941_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1a8864018_traitHash>> _field_tmap;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1c0db0519_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1a88643e2_traitCast> _field_traitCastMap;
	jule::Ptr<_1a878813a_exprCoder> _field_ec;
	jule::Ptr<_1a877de22_scopeCoder> _field_sc;
	jule::Ptr<_1a8875216_typeCoder> _field_tc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	


};
struct _1c19d3081_ObjectDeadCode {
	_1c19d2b96_liveTable _field_live;
	jule::Ptr<_1c189de2a_IR> _field_ir;
	


};
struct _1c189de2a_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1c0cd6462_Package> _field_Main;
	jule::Slice<jule::Ptr<_1c0cd353b_ImportInfo>> _field_Used;
	_1c18a15d1_OrderedDefines _field_Ordered;
	


};
struct _1c0c5e3c9_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1c0c5b64b_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1c0dadb33_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1c0c5d829_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1c0d2b94c_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1c0c715a6_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1c0c77656_ReferenceStack> _field_Refers;
	_1c0c5a738_Operators _field_Operators;
	


};
struct _21d2830a9_Cmd {
	_21d2d27e0_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c0d80352_Data__jule_tuple_x_1c0d80352_Data {
	jule::Ptr<_1c0d80352_Data> __jule_result_arg0;
	jule::Ptr<_1c0d80352_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1c0d80352_Data__jule_tuple_bool {
	jule::Ptr<_1c0d80352_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c0c5280c_Case__jule_tuple_bool {
	jule::Ptr<_1c0c5280c_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c0c5280c_Case__jule_tuple_x_1c0c51663_Else {
	jule::Slice<jule::Ptr<_1c0c5280c_Case>> __jule_result_arg0;
	jule::Ptr<_1c0c51663_Else> __jule_result_arg1;
};
struct __jule_tuple__1c0c4a151_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c0c49491_AssignSt__jule_tuple_bool {
	jule::Ptr<_1c0c49491_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1c0c3a9e3_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c0c3d8d6_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1c0c3d8d6_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c0c38a46_Ast__jule_tuple_s_21ce0c86b_Log {
	jule::Slice<jule::Ptr<_1c0c38a46_Ast>> __jule_result_arg0;
	jule::Slice<_21ce0c86b_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_21ce0c86b_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_21ce0c86b_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c189de2a_IR__jule_tuple_s_21ce0c86b_Log {
	jule::Ptr<_1c189de2a_IR> __jule_result_arg0;
	jule::Slice<_21ce0c86b_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__202e5a2da_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__202e5a2da_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__202e5a2da_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__202e5a2da_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c0d7a12c_SymbolTable__jule_tuple_s_21ce0c86b_Log {
	jule::Ptr<_1c0d7a12c_SymbolTable> __jule_result_arg0;
	jule::Slice<_21ce0c86b_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1c0cd6462_Package__jule_tuple_s_21ce0c86b_Log {
	jule::Ptr<_1c0cd6462_Package> __jule_result_arg0;
	jule::Slice<_21ce0c86b_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1c0c38a46_Ast__jule_tuple_s_21ce0c86b_Log {
	jule::Ptr<_1c0c38a46_Ast> __jule_result_arg0;
	jule::Slice<_21ce0c86b_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c0c25406_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1c0c25406_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c0c25406_Token__jule_tuple_sx_1c0c25406_Token {
	jule::Slice<jule::Ptr<_1c0c25406_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1c0c25406_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1c0c25406_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1c0c25406_Token__jule_tuple_s_21ce0c86b_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> __jule_result_arg0;
	jule::Slice<_21ce0c86b_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _21cd5e16e_StrBuilder static__21cd5e48d_New(jule::I64);
inline void _21cd67a5c_Write(_21cd5e16e_StrBuilder*, jule::Slice<jule::U8>);
inline void _21cd67d15_WriteStr(_21cd5e16e_StrBuilder*, jule::Str);
inline void _21cd680bd_WriteByte(_21cd5e16e_StrBuilder*, jule::U8);
inline jule::Str _21cd6860c_Str(_21cd5e16e_StrBuilder*);
inline void _21cd6880a_Clear(_21cd5e16e_StrBuilder*);
inline jule::I64 _21cd68a91_Len(_21cd5e16e_StrBuilder*);
inline jule::Slice<jule::U8> _21cd690ad_Buf(_21cd5e16e_StrBuilder*);
inline void _21cd69366_SetBuf(_21cd5e16e_StrBuilder*, jule::Slice<jule::U8>);
inline jule::U8 _21cd6a147_index(_21cd69be6_lazyBuff*, jule::I64);
inline void _21cd6a400_append(_21cd69be6_lazyBuff*, jule::U8);
inline jule::Str _21cd6a686_string(_21cd69be6_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_21b9b0d8d_DirEntry>>> static__21cd6e49d_Read(jule::Str);
inline jule::VoidExceptional static__21cd6e6ce_Create(jule::Str);
inline jule::VoidExceptional static__21cd6e910_Remove(jule::Str);
inline jule::Exceptional<jule::Ptr<_21b9bbcbc_File>> static__21b9aecb0_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__21b9aeee1_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _21b9b0475_Write(_21b9bbcbc_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _21b9b07b6_Read(_21b9bbcbc_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_21b9bbcbc_File> static__21b9bc1eb_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_21b9bbcbc_File>> static__21b9bc4b5_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__21b9bc77e_Read(jule::Str);
inline jule::VoidExceptional static__21b9bcb25_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional _21b9bda5a_Close(_21b9bbcbc_File*);
inline jule::Exceptional<jule::Ptr<_21b9be5b6_Status>> static__21b9b1872_Of(jule::Str);
inline jule::Bool _21b9be990_IsDir(_21b9be5b6_Status*);
inline jule::Bool _21b9bec26_IsReg(_21b9be5b6_Status*);
inline jule::U64 _21b9beeac_Size(_21b9be5b6_Status*);
inline jule::Bool _203626720_set(_20362ed55_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _203626a61_floatBits(_20362ed55_decimal*, _20361b33b_floatInfo*);
inline void _20363020c_assign(_20362ed55_decimal*, jule::U64);
inline void _2036304b5_shift(_20362ed55_decimal*, jule::I64);
inline void _20363076d_roundDown(_20362ed55_decimal*, jule::I64);
inline void _203630a26_roundUp(_20362ed55_decimal*, jule::I64);
inline void _203630cce_round(_20362ed55_decimal*, jule::I64);
inline jule::U64 _203631065_roundedInteger(_20362ed55_decimal*);
inline jule::Ptr<_2036445ea_Const> static__203644a3a_NewI64(jule::I64);
inline jule::Ptr<_2036445ea_Const> static__203644d04_NewU64(jule::U64);
inline jule::Ptr<_2036445ea_Const> static__2036450bd_NewBool(jule::Bool);
inline jule::Ptr<_2036445ea_Const> static__203645387_NewStr(jule::Str);
inline jule::Ptr<_2036445ea_Const> static__203645651_NewF64(jule::F64);
inline jule::Ptr<_2036445ea_Const> static__203645860_NewNil(void);
inline jule::I64 _203645ec0_ReadI64(_2036445ea_Const*);
inline jule::U64 _203646256_ReadU64(_2036445ea_Const*);
inline jule::Bool _2036464dc_ReadBool(_2036445ea_Const*);
inline jule::Str _203646773_ReadStr(_2036445ea_Const*);
inline jule::F64 _203646a09_ReadF64(_2036445ea_Const*);
inline jule::I64 _203646c90_AsI64(_2036445ea_Const*);
inline jule::U64 _203647026_AsU64(_2036445ea_Const*);
inline jule::F64 _2036472ac_AsF64(_2036445ea_Const*);
inline void _203647565_SetI64(_2036445ea_Const*, jule::I64);
inline void _20364781d_SetU64(_2036445ea_Const*, jule::U64);
inline void _203647ac6_SetBool(_2036445ea_Const*, jule::Bool);
inline void _203647d7e_SetStr(_2036445ea_Const*, jule::Str);
inline void _203648137_SetF64(_2036445ea_Const*, jule::F64);
inline jule::Bool _2036485bb_IsI64(_2036445ea_Const*);
inline jule::Bool _203648852_IsU64(_2036445ea_Const*);
inline jule::Bool _203648ad8_IsBool(_2036445ea_Const*);
inline jule::Bool _203648d6e_IsStr(_2036445ea_Const*);
inline jule::Bool _203649105_IsF64(_2036445ea_Const*);
inline jule::Bool _20364938b_IsNil(_2036445ea_Const*);
inline jule::Bool _203649a1d_And(_2036445ea_Const*, _2036445ea_Const);
inline jule::Bool _203649d5e_Or(_2036445ea_Const*, _2036445ea_Const);
inline jule::Bool _20364b305_Add(_2036445ea_Const*, _2036445ea_Const);
inline jule::Bool _20364b646_Sub(_2036445ea_Const*, _2036445ea_Const);
inline jule::Bool _20364b987_Mul(_2036445ea_Const*, _2036445ea_Const);
inline jule::Bool _20364bcc8_Div(_2036445ea_Const*, _2036445ea_Const);
inline jule::Bool _20364c119_Mod(_2036445ea_Const*, _2036445ea_Const);
inline jule::Bool _20364c45a_BitwiseAnd(_2036445ea_Const*, _2036445ea_Const);
inline jule::Bool _20364c79b_BitwiseOr(_2036445ea_Const*, _2036445ea_Const);
inline jule::Bool _20364cadc_Xor(_2036445ea_Const*, _2036445ea_Const);
inline jule::Bool _20364ce2d_Lshift(_2036445ea_Const*, _2036445ea_Const);
inline jule::Bool _20364d26e_Rshift(_2036445ea_Const*, _2036445ea_Const);
inline jule::U8 _1c0c2577a_Prec(_1c0c25406_Token*);
inline void _1c0c2b0aa_Fill(_1c0c2abc0_File*, jule::Slice<jule::U8>);
inline jule::Str _1c0c2b341_Dir(_1c0c2abc0_File*);
inline jule::Str _1c0c2b5c7_Name(_1c0c2abc0_File*);
inline jule::Str _1c0c2bb9e_GetRow(_1c0c2abc0_File*, jule::I64);
inline void _1c0c3448c_pushErr(_1c0c33e09_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1c0c349ed_lex(_1c0c33e09_lex*);
inline jule::Str _1c0c34d3e_id(_1c0c33e09_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1c0c350c5_resume(_1c0c33e09_lex*);
inline void _1c0c3537d_lexLineComment(_1c0c33e09_lex*, jule::Ptr<_1c0c25406_Token>*);
inline void _1c0c35636_lexRangeComment(_1c0c33e09_lex*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Str _1c0c35977_num(_1c0c33e09_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1c0c35cb8_escapeSeq(_1c0c33e09_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1c0c361b4_getRune(_1c0c33e09_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1c0c36505_lexRune(_1c0c33e09_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1c0c3678b_lexStr(_1c0c33e09_lex*);
inline void _1c0c36c20_newLine(_1c0c33e09_lex*);
inline jule::Bool _1c0c37281_isOp(_1c0c33e09_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_1c0c25406_Token>*);
inline jule::Bool _1c0c3767c_lexBasicOps(_1c0c33e09_lex*, jule::Slice<jule::U8>, jule::Ptr<_1c0c25406_Token>*);
inline jule::Bool _1c0c37a78_lexId(_1c0c33e09_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Bool _1c0c37e74_lexNum(_1c0c33e09_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Ptr<_1c0c25406_Token> _1c0c3820a_token(_1c0c33e09_lex*);
inline jule::Bool _1c0c3c880_IsUnsafe(_1c0c3c51c_PtrTypeDecl*);
inline jule::Bool _1c0c3d122_AutoSized(_1c0c3ccae_ArrTypeDecl*);
inline jule::Bool _1c0c43dc5_Unhandled(_1c0c43a51_FnCallExpr*);
inline jule::Bool _1c0c4415b_Ignored(_1c0c43a51_FnCallExpr*);
inline jule::Bool _1c0c4b5c5_IsSelf(_1c0c4b251_ParamDecl*);
inline jule::Bool _1c0c4ca16_IsAnon(_1c0c4c6a3_FnDecl*);
inline jule::Bool _1c0c4e661_IsInf(_1c0c4e2ed_Iter*);
inline jule::Bool _1c0c4ee8b_IsWhileNext(_1c0c4eb28_WhileKind*);
inline jule::Ptr<_1c0c5d829_FieldIns> _1c0c58acc_instance(jule::Ptr<_1c0c58758_Field>);
inline jule::Ptr<_1c0c5e3c9_StructIns> _1c0c5baad_instance(jule::Ptr<_1c0c5b64b_Struct>);
inline jule::Ptr<_1c0c5e3c9_StructIns> _1c0c5bdbb_appendInstance(_1c0c5b64b_Struct*, jule::Ptr<_1c0c5e3c9_StructIns>*);
inline jule::Ptr<_1c0c715a6_Fn> _1c0c5c2b7_FindMethod(_1c0c5b64b_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0d2b94c_Var> _1c0c5c608_FindStatic(_1c0c5b64b_Struct*, jule::Str);
inline jule::Ptr<_1c0c58758_Field> _1c0c5c949_FindField(_1c0c5b64b_Struct*, jule::Str);
inline jule::Bool _1c0c5cc8a_IsImplements(_1c0c5b64b_Struct*, jule::Ptr<_1c0c84850_Trait>);
inline jule::Bool _1c0c5d0cb_IsUses(_1c0c5b64b_Struct*, jule::Ptr<_1c0c5b64b_Struct>);
inline jule::Ptr<_1c0c7350e_ParamIns> _1c0c6ee67_instance(jule::Ptr<_1c0c6ead2_Param>);
inline jule::Bool _1c0c701ed_IsSelf(_1c0c6ead2_Param*);
inline jule::Bool _1c0c70484_IsRef(_1c0c6ead2_Param*);
inline jule::Bool _1c0c71a29_IsVoid(_1c0c715a6_Fn*);
inline jule::Bool _1c0c71cb0_IsMethod(_1c0c715a6_Fn*);
inline jule::Bool _1c0c72046_IsEntryPoint(_1c0c715a6_Fn*);
inline jule::Bool _1c0c722cc_IsInit(_1c0c715a6_Fn*);
inline jule::Bool _1c0c72563_IsAnon(_1c0c715a6_Fn*);
inline jule::Bool _1c0c727e9_AnyVar(_1c0c715a6_Fn*);
inline jule::Ptr<_1c0c744aa_FnIns> _1c0c72a80_instanceForce(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Ptr<_1c0c744aa_FnIns> _1c0c72d16_instance(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Ptr<_1c0c744aa_FnIns> _1c0c73124_appendInstance(_1c0c715a6_Fn*, jule::Ptr<_1c0c744aa_FnIns>*);
inline jule::Str _1c0c73872_Str(_1c0c7350e_ParamIns*);
inline jule::Str _1c0c747eb_Str(_1c0c744aa_FnIns*);
inline jule::Bool _1c0c74b3c_Equal(jule::Ptr<_1c0c744aa_FnIns>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Bool _1c0c750d2_EqualFn(jule::Ptr<_1c0c744aa_FnIns>, jule::Ptr<_1c0c744aa_FnIns>*);
inline jule::Bool _1c0c75423_equalTrait(jule::Ptr<_1c0c744aa_FnIns>, jule::Ptr<_1c0c744aa_FnIns>*);
inline jule::Slice<jule::Ptr<_1c0db0519_TypeKind>> _1c0c756a9_Types(_1c0c744aa_FnIns*);
inline jule::Bool _1c0c75940_IsBuiltin(_1c0c744aa_FnIns*);
inline jule::Bool _1c0c75bc6_IsAnon(_1c0c744aa_FnIns*);
inline jule::Bool _1c0c76017_Same(_1c0c744aa_FnIns*, jule::Ptr<_1c0c744aa_FnIns>);
inline jule::Str _1c0c76358_GetKindStr(_1c0c744aa_FnIns*, jule::Bool);
inline jule::Ptr<_1c0c77656_ReferenceStack> static__1c0c77953_new(void);
inline jule::I64 _1c0c77d4e_Len(_1c0c77656_ReferenceStack*);
inline jule::Any _1c0c78190_At(_1c0c77656_ReferenceStack*, jule::I64);
inline void _1c0c78448_Push(_1c0c77656_ReferenceStack*, jule::Any);
inline jule::Bool _1aad90267_Exist(_1c0c77656_ReferenceStack*, jule::Ptr<_1c0c744aa_FnIns>);
inline jule::Bool _1aada6c51_Exist(_1c0c77656_ReferenceStack*, jule::Ptr<_1c0d2b94c_Var>);
inline jule::Bool _1ab01caed_Exist(_1c0c77656_ReferenceStack*, jule::Ptr<_1c0c5e3c9_StructIns>);
inline jule::Bool _1ab336301_Exist(_1c0c77656_ReferenceStack*, jule::Ptr<_1c0c84850_Trait>);
inline void _1c0c7e0ca_pushErr(_1c0c7d739_symbolBuilder*, jule::Ptr<_1c0c25406_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1c0c7e85b_pushSuggestion(_1c0c7d739_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c0c7ec57_checkCppUseDeclPath(_1c0c7d739_symbolBuilder*, jule::Ptr<_1c0c53863_UseDecl>*, jule::Str*);
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0c80065_buildCppHeaderImport(_1c0c7d739_symbolBuilder*, jule::Ptr<_1c0c53863_UseDecl>*);
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0c803a6_buildStdImport(_1c0c7d739_symbolBuilder*, jule::Ptr<_1c0c53863_UseDecl>*);
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0c806e7_buildIdentImport(jule::Ptr<_1c0c7d739_symbolBuilder>, jule::Ptr<_1c0c53863_UseDecl>*);
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0c80a38_buildImport(jule::Ptr<_1c0c7d739_symbolBuilder>, jule::Ptr<_1c0c53863_UseDecl>*);
inline jule::Bool _1c0c80d79_checkDuplicateUseDecl(_1c0c7d739_symbolBuilder*, jule::Ptr<_1c0cd353b_ImportInfo>*);
inline void _1c0c811dc_implImportSelections(_1c0c7d739_symbolBuilder*, jule::Ptr<_1c0cd353b_ImportInfo>*, jule::Ptr<_1c0c53863_UseDecl>*);
inline jule::Str _1c0c8152d_getAsLinkPath(jule::Ptr<_1c0c7d739_symbolBuilder>, jule::Str);
inline void _1c0c8194b_pushCycleError(jule::Ptr<_1c0c7d739_symbolBuilder>, jule::Ptr<_1c0c7d739_symbolBuilder>*, jule::Str, _21cd5e16e_StrBuilder*);
inline void _1c0c81d69_pushCrossCycleError(jule::Ptr<_1c0c7d739_symbolBuilder>, jule::Ptr<_1c0c7d739_symbolBuilder>*, jule::Ptr<_1c0cd353b_ImportInfo>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Bool _1c0c82265_checkImportCycles(jule::Ptr<_1c0c7d739_symbolBuilder>, jule::Ptr<_1c0cd353b_ImportInfo>, jule::Ptr<_1c0c53863_UseDecl>*);
inline void _1c0c82683_checkPackageAccessibility(_1c0c7d739_symbolBuilder*, jule::Ptr<_1c0c53863_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1c0c82a7e_importPackage(jule::Ptr<_1c0c7d739_symbolBuilder>, jule::Ptr<_1c0cd353b_ImportInfo>*, jule::Ptr<_1c0c53863_UseDecl>*);
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0c82dc0_importUseDecl(jule::Ptr<_1c0c7d739_symbolBuilder>, jule::Ptr<_1c0c53863_UseDecl>*);
inline void _1c0c830bd_importUseDecls(jule::Ptr<_1c0c7d739_symbolBuilder>);
inline void _1c0c83376_appendNode(_1c0c7d739_symbolBuilder*, _1c0c399e2_Node*);
inline void _1c0c83574_appendNodes(_1c0c7d739_symbolBuilder*);
inline void _1c0c8382c_pushDirectivePass(_1c0c7d739_symbolBuilder*, jule::Ptr<_1c0c39e10_Directive>*);
inline void _1c0c83a2a_appendTopDirectives(_1c0c7d739_symbolBuilder*);
inline void _1c0c83c28_build(jule::Ptr<_1c0c7d739_symbolBuilder>);
inline jule::Str _1c0c84c18_Str(_1c0c84850_Trait*);
inline jule::Bool _1c0c85059_Equal(jule::Ptr<_1c0c84850_Trait>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Ptr<_1c0c715a6_Fn> _1c0c854ee_FindMethod(_1c0c84850_Trait*, jule::Str);
inline jule::Ptr<_1c0c715a6_Fn> _1c0c85b81_findMethodInherit(_1c0c84850_Trait*, jule::Str*);
inline jule::Bool _1c0c86885_AutoExpr(_1c0c864cd_EnumItem*);
inline jule::Str _1c0c873be_Str(_1c0c8704a_Enum*);
inline jule::Bool _1c0c87710_Equal(jule::Ptr<_1c0c8704a_Enum>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Ptr<_1c0c864cd_EnumItem> _1c0c87b3e_FindItem(_1c0c8704a_Enum*, jule::Str);
inline jule::Str _1c0c88a96_Str(_1c0c88755_TypeEnum*);
inline jule::Bool _1c0c88dd7_Equal(jule::Ptr<_1c0c88755_TypeEnum>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Ptr<_1c0c8817d_TypeEnumItem> _1c0c89316_FindItem(_1c0c88755_TypeEnum*, jule::Str);
inline jule::Str _1c0c8aeb6_Str(_1c0c8aaed_comptimeRange*);
inline jule::Bool _1c0c8b307_Equal(jule::Ptr<_1c0c8aaed_comptimeRange>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Str _1c0c8b9cd_Str(_1c0c8b659_comptimeStructField*);
inline jule::Bool _1c0c8bd1e_Equal(jule::Ptr<_1c0c8b659_comptimeStructField>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Ptr<_1c0d80352_Data> _1c0c8c33b__Name(jule::Ptr<_1c0c8b659_comptimeStructField>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c8c737__Type(jule::Ptr<_1c0c8b659_comptimeStructField>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c8cb33__Public(jule::Ptr<_1c0c8b659_comptimeStructField>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c8ce74_subIdent(jule::Ptr<_1c0c8b659_comptimeStructField>, jule::Str*);
inline jule::Str _1c0c8d68e_Str(_1c0c8d309_comptimeStructFields*);
inline jule::Bool _1c0c8d9d0_Equal(jule::Ptr<_1c0c8d309_comptimeStructFields>, jule::Ptr<_1c0db0519_TypeKind>);
inline void _1c0c8de53_ready(_1c0c8d309_comptimeStructFields*, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0d2b94c_Var>*);
inline void _1c0c8e371_step(_1c0c8d309_comptimeStructFields*, jule::I64, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0d2b94c_Var>*);
inline jule::I64 _1c0c8e607_len(_1c0c8d309_comptimeStructFields*);
inline jule::Str _1c0c8ec89_Str(_1c0c8e915_comptimeStatic*);
inline jule::Bool _1c0c900ca_Equal(jule::Ptr<_1c0c8e915_comptimeStatic>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Ptr<_1c0d80352_Data> _1c0c905e7__Name(jule::Ptr<_1c0c8e915_comptimeStatic>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c909e3__Type(jule::Ptr<_1c0c8e915_comptimeStatic>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c90dde__Public(jule::Ptr<_1c0c8e915_comptimeStatic>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c91230_subIdent(jule::Ptr<_1c0c8e915_comptimeStatic>, jule::Str*);
inline jule::Str _1c0c9194a_Str(_1c0c915c6_comptimeStatics*);
inline jule::Bool _1c0c91c8b_Equal(jule::Ptr<_1c0c915c6_comptimeStatics>, jule::Ptr<_1c0db0519_TypeKind>);
inline void _1c0c9220e_ready(_1c0c915c6_comptimeStatics*, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0d2b94c_Var>*);
inline void _1c0c9262c_step(_1c0c915c6_comptimeStatics*, jule::I64, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0d2b94c_Var>*);
inline jule::I64 _1c0c928b3_len(_1c0c915c6_comptimeStatics*);
inline jule::Str _1c0c93045_Str(_1c0c92bc1_comptimeEnumField*);
inline jule::Bool _1c0c93386_Equal(jule::Ptr<_1c0c92bc1_comptimeEnumField>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Ptr<_1c0d80352_Data> _1c0c93881__Name(jule::Ptr<_1c0c92bc1_comptimeEnumField>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c93bc2_subIdent(jule::Ptr<_1c0c92bc1_comptimeEnumField>, jule::Str*);
inline jule::Str _1c0c94464_Str(_1c0c93ed0_comptimeEnumFields*);
inline jule::Bool _1c0c947a5_Equal(jule::Ptr<_1c0c93ed0_comptimeEnumFields>, jule::Ptr<_1c0db0519_TypeKind>);
inline void _1c0c94ba1_ready(_1c0c93ed0_comptimeEnumFields*, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0d2b94c_Var>*);
inline void _1c0c950be_step(_1c0c93ed0_comptimeEnumFields*, jule::I64, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0d2b94c_Var>*);
inline jule::I64 _1c0c95355_len(_1c0c93ed0_comptimeEnumFields*);
inline jule::Str _1c0c959d7_Str(_1c0c95663_comptimeParam*);
inline jule::Bool _1c0c95d28_Equal(jule::Ptr<_1c0c95663_comptimeParam>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Ptr<_1c0d80352_Data> _1c0c96356__Name(jule::Ptr<_1c0c95663_comptimeParam>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c96752__Type(jule::Ptr<_1c0c95663_comptimeParam>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c96b4d__Variadic(jule::Ptr<_1c0c95663_comptimeParam>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c97049__Reference(jule::Ptr<_1c0c95663_comptimeParam>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c9738a_subIdent(jule::Ptr<_1c0c95663_comptimeParam>, jule::Str*);
inline jule::Str _1c0c97c4d_Str(_1c0c978c9_comptimeParams*);
inline jule::Bool _1c0c9808e_Equal(jule::Ptr<_1c0c978c9_comptimeParams>, jule::Ptr<_1c0db0519_TypeKind>);
inline void _1c0c98512_ready(_1c0c978c9_comptimeParams*, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0d2b94c_Var>*);
inline void _1c0c98930_step(_1c0c978c9_comptimeParams*, jule::I64, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0d2b94c_Var>*);
inline jule::I64 _1c0c98bb6_len(_1c0c978c9_comptimeParams*);
inline jule::Str _1c0c99348_Str(_1c0c98ec4_comptimeTypeInfos*);
inline jule::Bool _1c0c99689_Equal(jule::Ptr<_1c0c98ec4_comptimeTypeInfos>, jule::Ptr<_1c0db0519_TypeKind>);
inline void _1c0c99b0c_ready(_1c0c98ec4_comptimeTypeInfos*, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0d2b94c_Var>*);
inline void _1c0c9a02a_step(_1c0c98ec4_comptimeTypeInfos*, jule::I64, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0d2b94c_Var>*);
inline jule::I64 _1c0c9a2b1_len(_1c0c98ec4_comptimeTypeInfos*);
inline jule::Str _1c0c9a943_Str(_1c0c9a5be_comptimeTypeInfo*);
inline jule::Bool _1c0c9ac84_Equal(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Ptr<_1c0d80352_Data> _1c0c9b3d3__Str(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c9b7ce__Kind(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c9bbca__Bits(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c9c0c6__Elem(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c9c4c2__Size(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c9c8bd__Key(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c9ccb9__Value(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c9d1b5__Fields(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c9d5b1__Statics(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c9d9ac__Public(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c9dda8__Binded(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c9e2a4__Ordered(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c9e6a0__Comparable(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c9ea9b__Mutable(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0c9ee97__Types(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca0393__Exceptional(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca078e__CanNil(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca0b8a__RC(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca1086__Result(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca1482__Params(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca17c3_subIdent(jule::Ptr<_1c0c9a5be_comptimeTypeInfo>, jule::Str*);
inline jule::Str _1c0ca1e55_Str(_1c0ca1ad1_comptimeValue*);
inline jule::Bool _1c0ca2296_Equal(jule::Ptr<_1c0ca1ad1_comptimeValue>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Ptr<_1c0d80352_Data> _1c0ca27e6__Unwrap(jule::Ptr<_1c0ca1ad1_comptimeValue>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca2be2__Type(jule::Ptr<_1c0ca1ad1_comptimeValue>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca30dd__Lvalue(jule::Ptr<_1c0ca1ad1_comptimeValue>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca34d9__Mutable(jule::Ptr<_1c0ca1ad1_comptimeValue>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca38d5__Const(jule::Ptr<_1c0ca1ad1_comptimeValue>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca3cd1__Field(jule::Ptr<_1c0ca1ad1_comptimeValue>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca4122_subIdent(jule::Ptr<_1c0ca1ad1_comptimeValue>, jule::Str*);
inline jule::Str _1c0ca47a4_Str(_1c0ca4430_comptimeFiles*);
inline jule::Bool _1c0ca4ae5_Equal(jule::Ptr<_1c0ca4430_comptimeFiles>, jule::Ptr<_1c0db0519_TypeKind>);
inline void _1c0ca5068_ready(_1c0ca4430_comptimeFiles*, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0d2b94c_Var>*);
inline void _1c0ca5486_step(_1c0ca4430_comptimeFiles*, jule::I64, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0d2b94c_Var>*);
inline jule::I64 _1c0ca571c_len(_1c0ca4430_comptimeFiles*);
inline jule::Str _1c0ca5d9e_Str(_1c0ca5a2a_comptimeFile*);
inline jule::Bool _1c0ca61e0_Equal(jule::Ptr<_1c0ca5a2a_comptimeFile>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Ptr<_1c0d80352_Data> _1c0ca670c__Path(jule::Ptr<_1c0ca5a2a_comptimeFile>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca6b08__Name(jule::Ptr<_1c0ca5a2a_comptimeFile>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca7004__Dir(jule::Ptr<_1c0ca5a2a_comptimeFile>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca7345_subIdent(jule::Ptr<_1c0ca5a2a_comptimeFile>, jule::Str*);
inline jule::Fn<jule::Bool(jule::Ptr<_1c0d04705_Sema>*,jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>*)> _1c0caa090_readyFn(jule::Ptr<_1c0ca9b94_constraintChecker>);
inline jule::Bool _1c0caa326_readyFi(jule::Ptr<_1c0ca9b94_constraintChecker>);
inline jule::Bool _1c0caa5ac_readySi(jule::Ptr<_1c0ca9b94_constraintChecker>);
inline jule::Bool _1c0caa843_ready(jule::Ptr<_1c0ca9b94_constraintChecker>);
inline jule::Bool _1c0caaac9_check(jule::Ptr<_1c0ca9b94_constraintChecker>);
inline jule::Bool _1c0cac092_IsTraitImpl(_1c0cabbc9_Impl*);
inline jule::Bool _1c0cac328_IsStructImpl(_1c0cabbc9_Impl*);
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0cb98a7_SelectPackage(_1c0cb9412_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)>);
inline jule::Ptr<_1c0d2b94c_Var> _1c0cb9ca3_FindVar(_1c0cb9412_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0dae727_TypeAlias> _1c0cba19e_FindTypeAlias(_1c0cb9412_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c5b64b_Struct> _1c0cba59a_FindStruct(_1c0cb9412_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c715a6_Fn> _1c0cba996_FindFn(_1c0cb9412_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c84850_Trait> _1c0cbacd7_FindTrait(_1c0cb9412_scopeChecker*, jule::Str);
inline jule::Ptr<_1c0c8704a_Enum> _1c0cbb128_FindEnum(_1c0cb9412_scopeChecker*, jule::Str);
inline jule::Ptr<_1c0c88755_TypeEnum> _1c0cbb469_FindTypeEnum(_1c0cb9412_scopeChecker*, jule::Str);
inline jule::Bool _1c0cbb7bb_isUnsafe(jule::Ptr<_1c0cb9412_scopeChecker>);
inline jule::Bool _1c0cbba52_isRoot(_1c0cb9412_scopeChecker*);
inline void _1c0cbbc50_stop(_1c0cb9412_scopeChecker*);
inline jule::Bool _1c0cbbed6_stopped(_1c0cb9412_scopeChecker*);
inline jule::Bool _1c0cbc26c_isDeferred(jule::Ptr<_1c0cb9412_scopeChecker>);
inline jule::Ptr<_1c0cb9412_scopeChecker> _1c0cbc503_getRoot(jule::Ptr<_1c0cb9412_scopeChecker>);
inline jule::Ptr<_1c0cb9412_scopeChecker> _1c0cbc789_getHardRoot(jule::Ptr<_1c0cb9412_scopeChecker>);
inline jule::Ptr<_1c0cb49a1_Label> _1c0cbcaca_findLabel(_1c0cb9412_scopeChecker*, jule::Str*);
inline jule::Ptr<_1c0cb7e6b_scopeLabel> _1c0cbce1b_findLabelScope(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Str*);
inline jule::Ptr<_1c0cb7e6b_scopeLabel> _1c0cbd25c_findLabelAll(_1c0cb9412_scopeChecker*, jule::Str*);
inline jule::Bool _1c0cbd658_isDuplicatedIdent(_1c0cb9412_scopeChecker*, jule::Uintptr, jule::Str*);
inline void _1c0cbd911_checkVarDecl(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c4d781_VarDecl>);
inline void _1c0cbdbb9_checkTypeAlias(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0dae727_TypeAlias>*);
inline void _1c0cbde72_checkTypeAliasDecl(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c52356_TypeAliasDecl>);
inline jule::Ptr<_1c0cb210d_Scope> _1c0cbe208_getChild(_1c0cb9412_scopeChecker*);
inline void _1c0cbe626_checkChildSsc(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c4aa14_ScopeTree>*, jule::Ptr<_1c0cb210d_Scope>*, jule::Ptr<_1c0cb9412_scopeChecker>*);
inline jule::Ptr<_1c0cb210d_Scope> _1c0cbea22_checkChildSc(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c4aa14_ScopeTree>*, jule::Ptr<_1c0cb9412_scopeChecker>*);
inline jule::Ptr<_1c0cb210d_Scope> _1c0cbed63_checkChild(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c4aa14_ScopeTree>*);
inline void _1c0cc011b_checkAnonScope(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c4aa14_ScopeTree>);
inline void _1c0cc047e_processErrorCall(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c6c173_BuiltinErrorCallExprModel>*, jule::Ptr<_1c0c25406_Token>);
inline void _1c0cc0737_checkExpr(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c3ed27_Expr>);
inline jule::Ptr<_1c0cb252b_If> _1c0cc0a78_checkIf(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c51289_If>);
inline jule::Ptr<_1c0cb2828_Else> _1c0cc0db9_checkElse(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c51663_Else>);
inline void _1c0cc1172_checkConditional(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c51b19_Conditional>);
inline void _1c0cc164a_checkIterScopeSsc(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Uintptr, jule::Ptr<_1c0c4aa14_ScopeTree>, jule::Ptr<_1c0cb210d_Scope>*, jule::Ptr<_1c0cb9412_scopeChecker>);
inline jule::Ptr<_1c0cb210d_Scope> _1c0cc1b01_checkIterScopeSc(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Uintptr, jule::Ptr<_1c0c4aa14_ScopeTree>, jule::Ptr<_1c0cb9412_scopeChecker>);
inline jule::Ptr<_1c0cb210d_Scope> _1c0cc1eec_checkIterScope(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Uintptr, jule::Ptr<_1c0c4aa14_ScopeTree>*);
inline void _1c0cc22a5_checkInfIter(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c4e2ed_Iter>*);
inline void _1c0cc255d_checkWhileIter(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c4e2ed_Iter>*);
inline void _1c0cc297b_checkComptimeRangeIter(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c4e2ed_Iter>*, jule::Ptr<_1c0cb3e45_RangeIter>*, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0cc2c34_checkRangeIter(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c4e2ed_Iter>*);
inline void _1c0cc2edc_checkIter(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c4e2ed_Iter>);
inline jule::Bool _1c0cc332d_checkValidContLabel(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Uintptr);
inline jule::Bool _1c0cc366e_checkValidBreakLabel(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1c0cb42ca_ContSt> _1c0cc39b0_checkContValidScope(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c50cd3_ContSt>);
inline void _1c0cc3c68_checkCont(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c50cd3_ContSt>);
inline void _1c0cc4021_checkLabel(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c480c7_LabelSt>);
inline void _1c0cc42c9_pushGoto(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c484a1_GotoSt>);
inline void _1c0cc4582_checkPostfix(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c49491_AssignSt>);
inline jule::Bool _1c0cc48c3_isNewAssignIdent(_1c0cb9412_scopeChecker*, jule::Str);
inline void _1c0cc4b7b_removeInteriorMutRisk(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0d80352_Data>*);
inline jule::Bool _1c0cc5132_checkStructureAssignOp(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c5e3c9_StructIns>*, jule::Ptr<_1c0c49491_AssignSt>*, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0cc53da_checkSingleAssign(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c49491_AssignSt>*);
inline void _1c0cc596d_processEndPartOfMultiAssign(_1c0cb9412_scopeChecker*, jule::Ptr<_1c0cb5ad4_MultiAssign>*, jule::Ptr<_1c0c49491_AssignSt>*, jule::Ptr<_1c0c48e0d_AssignLeft>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0cc5c26_checkMultiAssign(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c49491_AssignSt>*);
inline void _1c0cc5ece_singleDeclAssign(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c49491_AssignSt>*);
inline void _1c0cc6287_checkAssignSt(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c49491_AssignSt>);
inline jule::Ptr<_1c0cb210d_Scope> _1c0cc6683_checkCaseScope(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0cb6d7c_Case>*, jule::Ptr<_1c0c4aa14_ScopeTree>*);
inline jule::Ptr<_1c0cb6d7c_Case> _1c0cc6be4_checkCase(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0cb6244_Match>, jule::I64, jule::Ptr<_1c0c5280c_Case>, jule::Ptr<_1c0d80352_Data>);
inline void _1c0cc7112_checkCases(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c53049_MatchCase>*, jule::Ptr<_1c0cb6244_Match>, jule::Ptr<_1c0d80352_Data>);
inline jule::Ptr<_1c0cb6d7c_Case> _1c0cc750d_checkDefault(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0cb6244_Match>, jule::Ptr<_1c0c51663_Else>);
inline void _1c0cc7871_checkComptimePanic(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c25406_Token>, jule::Ptr<_1c0cb210d_Scope>*);
inline void _1c0cc7bd4_processConstMatch(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0cb6244_Match>*, jule::Ptr<_1c0c53049_MatchCase>*);
inline void _1c0cc7e8c_checkTypeMatch(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c53049_MatchCase>*);
inline void _1c0cc8245_checkCommonMatch(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c53049_MatchCase>*);
inline void _1c0cc84ed_checkMatch(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c53049_MatchCase>);
inline void _1c0cc87a6_checkFall(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c4879d_FallSt>);
inline jule::Ptr<_1c0cb46a4_BreakSt> _1c0cc8ae7_checkBreakWithLabel(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c50909_BreakSt>);
inline jule::Ptr<_1c0cb46a4_BreakSt> _1c0cc8e38_checkPlainBreak(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c50909_BreakSt>);
inline void _1c0cc91e1_checkBreak(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c50909_BreakSt>);
inline void _1c0cc9499_checkRet(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c4db5a_RetSt>);
inline void _1c0cc9752_checkUseExpr(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c406eb_UseExpr>);
inline void _1c0cc9a0a_checkNode(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Any*);
inline void _1c0cc9c08_checkResult(jule::Ptr<_1c0cb9412_scopeChecker>);
inline void _1c0cc9e06_checkTree(jule::Ptr<_1c0cb9412_scopeChecker>);
inline void _1c0cca269_checkGoto(_1c0cb9412_scopeChecker*, jule::Ptr<_1c0cb84ee_scopeGoto>*, jule::Ptr<_1c0cb7e6b_scopeLabel>*);
inline void _1c0cca467_checkGotos(_1c0cb9412_scopeChecker*);
inline void _1c0cca665_checkLabels(_1c0cb9412_scopeChecker*);
inline void _1c0cca863_checkVars(_1c0cb9412_scopeChecker*);
inline void _1c0ccaa61_checkAliases(_1c0cb9412_scopeChecker*);
inline void _1c0ccadc4_check(jule::Ptr<_1c0cb9412_scopeChecker>, jule::Ptr<_1c0c4aa14_ScopeTree>*, jule::Ptr<_1c0cb210d_Scope>*);
inline jule::Ptr<_1c0cb9412_scopeChecker> _1c0ccb15a_newChildChecker(jule::Ptr<_1c0cb9412_scopeChecker>);
inline void _1c0ccc4be_checkCdef(_1c0ccc0b2_directiveChecker*, jule::Ptr<_1c0c39e10_Directive>*);
inline void _1c0ccc777_checkTypedef(_1c0ccc0b2_directiveChecker*, jule::Ptr<_1c0c39e10_Directive>*);
inline void _1c0ccca30_checkNamespace(_1c0ccc0b2_directiveChecker*, jule::Ptr<_1c0c39e10_Directive>*);
inline void _1c0ccccd8_checkDeprecated(_1c0ccc0b2_directiveChecker*, jule::Ptr<_1c0c39e10_Directive>*);
inline void _1c0ccd091_checkTest(_1c0ccc0b2_directiveChecker*, jule::Ptr<_1c0c39e10_Directive>*);
inline void _1c0ccd349_checkDirective(_1c0ccc0b2_directiveChecker*, jule::Ptr<_1c0c39e10_Directive>*);
inline void _1c0ccd547_check(_1c0ccc0b2_directiveChecker*);
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0cd3a25_SelectPackage(_1c0cd353b_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)>);
inline jule::Ptr<_1c0d2b94c_Var> _1c0cd3e21_FindVar(_1c0cd353b_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0dae727_TypeAlias> _1c0cd431c_FindTypeAlias(_1c0cd353b_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c5b64b_Struct> _1c0cd4718_FindStruct(_1c0cd353b_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c715a6_Fn> _1c0cd4b14_FindFn(_1c0cd353b_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c84850_Trait> _1c0cd4e55_FindTrait(_1c0cd353b_ImportInfo*, jule::Str);
inline jule::Ptr<_1c0c8704a_Enum> _1c0cd5296_FindEnum(_1c0cd353b_ImportInfo*, jule::Str);
inline jule::Ptr<_1c0c88755_TypeEnum> _1c0cd55d7_FindTypeEnum(_1c0cd353b_ImportInfo*, jule::Str);
inline jule::Bool _1c0cd5a7c_isLookupable(_1c0cd353b_ImportInfo*, jule::Str*);
inline jule::Bool _1c0cd5dbd_existIdent(_1c0cd353b_ImportInfo*, jule::Str);
inline jule::Bool _1c0cd6154_isAccessibleViaSelection(_1c0cd353b_ImportInfo*);
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0cd6907_SelectPackage(_1c0cd6462_Package*, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)>);
inline jule::Ptr<_1c0d2b94c_Var> _1c0cd6d03_FindVar(_1c0cd6462_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0dae727_TypeAlias> _1c0cd71ee_FindTypeAlias(_1c0cd6462_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c5b64b_Struct> _1c0cd75ea_FindStruct(_1c0cd6462_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c715a6_Fn> _1c0cd79e6_FindFn(_1c0cd6462_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c84850_Trait> _1c0cd7d37_FindTrait(_1c0cd6462_Package*, jule::Str);
inline jule::Ptr<_1c0c8704a_Enum> _1c0cd8178_FindEnum(_1c0cd6462_Package*, jule::Str);
inline jule::Ptr<_1c0c88755_TypeEnum> _1c0cd84b9_FindTypeEnum(_1c0cd6462_Package*, jule::Str);
inline jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _1c0d04040_pushComptimeTypeInfo(_1c0d03acd_commonSemaMeta*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0d04b9a_SelectPackage(_1c0d04705_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)>);
inline jule::Ptr<_1c0d2b94c_Var> _1c0d05096_FindVar(_1c0d04705_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0dae727_TypeAlias> _1c0d05492_FindTypeAlias(_1c0d04705_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c5b64b_Struct> _1c0d0588d_FindStruct(_1c0d04705_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c715a6_Fn> _1c0d05c89_FindFn(_1c0d04705_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c84850_Trait> _1c0d060ca_FindTrait(_1c0d04705_Sema*, jule::Str);
inline jule::Ptr<_1c0c8704a_Enum> _1c0d0641b_FindEnum(_1c0d04705_Sema*, jule::Str);
inline jule::Ptr<_1c0c88755_TypeEnum> _1c0d0675c_FindTypeEnum(_1c0d04705_Sema*, jule::Str);
inline jule::Bool _1c0d06b69_isFlag(_1c0d04705_Sema*, jule::I64);
inline void _1c0d06e22_setCurrentFile(_1c0d04705_Sema*, jule::Ptr<_1c0d7a12c_SymbolTable>);
inline void _1c0d07340_pushErr(_1c0d04705_Sema*, jule::Ptr<_1c0c25406_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c0d076a3_pushSuggestion(_1c0d04705_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c0d07a9e_isAccessibleDefine(_1c0d04705_Sema*, jule::Bool, jule::Ptr<_1c0c25406_Token>);
inline jule::Bool _1c0d08055_isDuplicatedIdent(_1c0d04705_Sema*, jule::Uintptr, jule::Str*, jule::Bool);
inline void _1c0d083b8_checkDirectives(jule::Ptr<_1c0d04705_Sema>, jule::Slice<jule::Ptr<_1c0c39e10_Directive>>*, jule::Any);
inline jule::Bool _1c0d0886e_checkGenericQuantity(_1c0d04705_Sema*, jule::I64, jule::I64, jule::Ptr<_1c0c25406_Token>);
inline jule::Bool _1c0d08c6a_isDuplicatedImportSelection(_1c0d04705_Sema*, jule::Uintptr, jule::Str*);
inline jule::Any _1c0d09166_getImportDef(_1c0d04705_Sema*, jule::Str*, jule::Ptr<_1c0cd353b_ImportInfo>*);
inline jule::Bool _1aa974676_checkImportSelection(_1c0d04705_Sema*, jule::Ptr<_1c0c25406_Token>*, jule::Ptr<_1c0d2b94c_Var>*);
inline jule::Bool _1aa978647_checkImportSelection(_1c0d04705_Sema*, jule::Ptr<_1c0c25406_Token>*, jule::Ptr<_1c0dae727_TypeAlias>*);
inline jule::Bool _1aa97c5c4_checkImportSelection(_1c0d04705_Sema*, jule::Ptr<_1c0c25406_Token>*, jule::Ptr<_1c0c5b64b_Struct>*);
inline jule::Bool _1aa9816d8_checkImportSelection(_1c0d04705_Sema*, jule::Ptr<_1c0c25406_Token>*, jule::Ptr<_1c0c84850_Trait>*);
inline jule::Bool _1aa985665_checkImportSelection(_1c0d04705_Sema*, jule::Ptr<_1c0c25406_Token>*, jule::Ptr<_1c0c8704a_Enum>*);
inline jule::Bool _1aa9895e2_checkImportSelection(_1c0d04705_Sema*, jule::Ptr<_1c0c25406_Token>*, jule::Ptr<_1c0c88755_TypeEnum>*);
inline jule::Bool _1aa98d56e_checkImportSelection(_1c0d04705_Sema*, jule::Ptr<_1c0c25406_Token>*, jule::Ptr<_1c0c715a6_Fn>*);
inline jule::Bool _1c0d098a3_checkImportSelectedSelections(_1c0d04705_Sema*, jule::Ptr<_1c0cd353b_ImportInfo>*);
inline jule::Bool _1aa992c49_checkImportsAllSelectionsFromCollection(_1c0d04705_Sema*, jule::Slice<jule::Ptr<_1c0d2b94c_Var>>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Bool _1aa993d8d_checkImportsAllSelectionsFromCollection(_1c0d04705_Sema*, jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Bool _1aa996b82_checkImportsAllSelectionsFromCollection(_1c0d04705_Sema*, jule::Slice<jule::Ptr<_1c0c5b64b_Struct>>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Bool _1aa9998cc_checkImportsAllSelectionsFromCollection(_1c0d04705_Sema*, jule::Slice<jule::Ptr<_1c0c715a6_Fn>>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Bool _1aa99c6d2_checkImportsAllSelectionsFromCollection(_1c0d04705_Sema*, jule::Slice<jule::Ptr<_1c0c84850_Trait>>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Bool _1aa9a042c_checkImportsAllSelectionsFromCollection(_1c0d04705_Sema*, jule::Slice<jule::Ptr<_1c0c8704a_Enum>>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Bool _1aa9a3177_checkImportsAllSelectionsFromCollection(_1c0d04705_Sema*, jule::Slice<jule::Ptr<_1c0c88755_TypeEnum>>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Bool _1c0d0a0e0_checkImportAllSelections(_1c0d04705_Sema*, jule::Ptr<_1c0cd353b_ImportInfo>*);
inline jule::Bool _1c0d0a431_checkImportSelections(_1c0d04705_Sema*, jule::Ptr<_1c0cd353b_ImportInfo>*);
inline jule::Bool _1c0d0a772_isUseAliasDuplication(_1c0d04705_Sema*, jule::Ptr<_1c0cd353b_ImportInfo>*);
inline jule::Bool _1c0d0aab3_checkImport(_1c0d04705_Sema*, jule::Ptr<_1c0cd353b_ImportInfo>*);
inline void _1c0d0acb1_checkImports(_1c0d04705_Sema*);
inline void _1c0d0aeae_implFileImpls(jule::Ptr<_1c0d04705_Sema>);
inline void _1c0d0b1ac_implImpls(jule::Ptr<_1c0d04705_Sema>);
inline void _1c0d0b3aa_checkEnums(jule::Ptr<_1c0d04705_Sema>);
inline void _1c0d0b5a8_checkFileInherits(jule::Ptr<_1c0d04705_Sema>);
inline void _1c0d0b7a6_checkInherits(jule::Ptr<_1c0d04705_Sema>);
inline _1c0dc23c7_typeChecker _1c0d0bc5c_typeChecker(jule::Ptr<_1c0d04705_Sema>, jule::Trait<_1c0dd0050_Lookup>, jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>, jule::Ptr<_1c0dc13d7_referencer>);
inline jule::Ptr<_1c0db0519_TypeKind> _1c0d0c2bd_buildTypeWithRefers(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c3a9e3_TypeDecl>*, jule::Trait<_1c0dd0050_Lookup>, jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>, jule::Ptr<_1c0dc13d7_referencer>);
inline jule::Bool _1c0d0c82e_checkTypeWithRefers(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0db76db_TypeSymbol>*, jule::Trait<_1c0dd0050_Lookup>, jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>, jule::Ptr<_1c0dc13d7_referencer>);
inline jule::Ptr<_1c0ca9b94_constraintChecker> _1c0d0cab5_constraintChecker(jule::Ptr<_1c0d04705_Sema>);
inline jule::Bool _1c0d0ceb1_checkType(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0db76db_TypeSymbol>*, jule::Trait<_1c0dd0050_Lookup>);
inline jule::Ptr<_1c0db0519_TypeKind> _1c0d0d467_buildTypeWithGenerics(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c3a9e3_TypeDecl>*, jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>, jule::Ptr<_1c0c77656_ReferenceStack>);
inline jule::Ptr<_1c0db0519_TypeKind> _1c0d0dae9_selectType(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c3a9e3_TypeDecl>*);
inline jule::Ptr<_1c0d82046_Eval> _1c0d0e0a0_evalpd(jule::Ptr<_1c0d04705_Sema>, jule::Trait<_1c0dd0050_Lookup>, jule::Ptr<_1c0db0519_TypeKind>, jule::Ptr<_1c0d2b94c_Var>);
inline jule::Ptr<_1c0d82046_Eval> _1c0d0e49b_evalp(jule::Ptr<_1c0d04705_Sema>, jule::Trait<_1c0dd0050_Lookup>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Ptr<_1c0d82046_Eval> _1c0d0e7dc_eval(jule::Ptr<_1c0d04705_Sema>, jule::Trait<_1c0dd0050_Lookup>);
inline jule::Bool _1c0d0ed4d_checkAssignType(jule::Ptr<_1c0d04705_Sema>, jule::Bool, jule::Ptr<_1c0db0519_TypeKind>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c25406_Token>);
inline jule::Bool _1c0d10304_checkTypeCompatibility(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0db0519_TypeKind>*, jule::Ptr<_1c0db0519_TypeKind>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Ptr<_1c0db0519_TypeKind> _1c0d107aa_buildNonGenericTypeKind(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c3a9e3_TypeDecl>*, jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>>*, jule::Slice<jule::Ptr<_1c0db0519_TypeKind>>*);
inline jule::Bool _1c0d10ba6_buildFnNonGenericTypeKinds(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c744aa_FnIns>*, jule::Slice<jule::Ptr<_1c0db0519_TypeKind>>*);
inline jule::Ptr<_1c0c744aa_FnIns> _1c0d10ee7_getTraitCheckFnKind(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c715a6_Fn>*);
inline jule::Bool _1c0d1149d_checkConstraintsFn(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c744aa_FnIns>*, jule::Ptr<_1c0c25406_Token>*, jule::Ptr<_1c0c744aa_FnIns>);
inline jule::Bool _1c0d11954_checkConstraintsStruct(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c5e3c9_StructIns>*, jule::Ptr<_1c0c25406_Token>*, jule::Ptr<_1c0c5e3c9_StructIns>);
inline jule::Bool _1c0d11d50_fnEnvironment(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c744aa_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1c0d04705_Sema>*,jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>*)>);
inline void _1c0d12108_checkFnParamKind(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c7350e_ParamIns>*);
inline jule::Bool _1c0d12449_reloadFnInsTypes(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c744aa_FnIns>);
inline jule::Bool _1c0d12900_checkRefValidityForInitExpr(jule::Ptr<_1c0d04705_Sema>, jule::Bool, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Bool _1c0d12c41_isMutRiskyStruct(_1c0d04705_Sema*, jule::Ptr<_1c0c5e3c9_StructIns>*);
inline jule::Bool _1c0d1335c_checkValidityForInitExpr(jule::Ptr<_1c0d04705_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1c0db0519_TypeKind>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Bool _1c0d13758_checkTypeAliasDeclKind(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0dae727_TypeAlias>*, jule::Trait<_1c0dd0050_Lookup>);
inline void _1c0d13abb_checkTypeAliasDecl(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0dae727_TypeAlias>*, jule::Trait<_1c0dd0050_Lookup>);
inline void _1c0d13d74_checkTypeAliasDeclDup(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0dae727_TypeAlias>*);
inline jule::Bool _1c0d1410a_checkTypeAliasDecls(jule::Ptr<_1c0d04705_Sema>);
inline void _1aaa4b0cc_checkEnumItemsDup(_1c0d04705_Sema*, jule::Slice<jule::Ptr<_1c0c864cd_EnumItem>>);
inline void _1aaa57e1e_checkEnumItemsDup(_1c0d04705_Sema*, jule::Slice<jule::Ptr<_1c0c8817d_TypeEnumItem>>);
inline void _1c0d1466b_checkEnumItemsStr(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c8704a_Enum>*);
inline void _1aaa2ac27_checkEnumItemInt(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c8704a_Enum>*, jule::Ptr<_1c0db80e3_Prim>*, jule::Ptr<_1c0c864cd_EnumItem>*, jule::U64*);
inline void _1aaa3b1cc_checkEnumItemInt(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c8704a_Enum>*, jule::Ptr<_1c0db80e3_Prim>*, jule::Ptr<_1c0c864cd_EnumItem>*, jule::I64*);
inline void _1aaa274e8_checkEnumItemsInt1(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0db80e3_Prim>*, jule::Ptr<_1c0c8704a_Enum>*);
inline void _1aaa35407_checkEnumItemsInt1(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0db80e3_Prim>*, jule::Ptr<_1c0c8704a_Enum>*);
inline void _1c0d1531a_checkEnumItemsInt(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c8704a_Enum>*);
inline void _1c0d155c3_checkEnumDecl(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c8704a_Enum>*);
inline void _1c0d1587b_checkTypeEnumDecl(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c88755_TypeEnum>*);
inline jule::Bool _1c0d15b12_checkEnumDecls(jule::Ptr<_1c0d04705_Sema>);
inline jule::Bool _1c0d15d98_checkTypeEnumDecls(jule::Ptr<_1c0d04705_Sema>);
inline jule::Bool _1c0d161d9_checkDeclGenerics(_1c0d04705_Sema*, jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>>*);
inline jule::Bool _1c0d1652a_checkFnDeclParamsDup(_1c0d04705_Sema*, jule::Ptr<_1c0c715a6_Fn>*);
inline jule::Bool _1c0d1686b_checkFnDeclResultDup(_1c0d04705_Sema*, jule::Ptr<_1c0c715a6_Fn>*);
inline jule::Bool _1c0d16bac_checkFnVariadicParam(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c715a6_Fn>*);
inline void _1c0d16e65_checkFnDeclPrototype(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c715a6_Fn>*);
inline jule::Bool _1c0d1741b_catchTraitInheritCycle(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c84850_Trait>, jule::Ptr<_1c0c84850_Trait>, _21cd5e16e_StrBuilder*);
inline jule::Bool _1c0d1775c__checkTraitDeclInherits(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c84850_Trait>*);
inline void _1c0d17a15_checkTraitDeclInherits(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c84850_Trait>*);
inline void _1c0d17cbd_checkTraitDeclMethod(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c715a6_Fn>*);
inline void _1c0d18076_checkTraitDeclMethods(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c84850_Trait>*);
inline void _1c0d1832e_checkTraitDecl(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c84850_Trait>*);
inline jule::Bool _1c0d185b5_checkTraitDecls(jule::Ptr<_1c0d04705_Sema>);
inline jule::Bool _1c0d189b1_checkTraitImplMethods(_1c0d04705_Sema*, jule::Ptr<_1c0c84850_Trait>*, jule::Ptr<_1c0cabbc9_Impl>*);
inline jule::Bool _1c0d18dac_implToStruct(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c5b64b_Struct>*, jule::Ptr<_1c0cabbc9_Impl>*);
inline void _1c0d19165_implTrait(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0cabbc9_Impl>*);
inline void _1c0d1941d_implStruct(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0cabbc9_Impl>*);
inline void _1c0d196c6_implImpl(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0cabbc9_Impl>*);
inline void _1c0d19a39_checkVarDecl(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0d2b94c_Var>*, jule::Trait<_1c0dd0050_Lookup>);
inline void _1c0d19ce2_checkGlobalVarDecl(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0d2b94c_Var>*);
inline jule::Bool _1c0d1a078_checkGlobalDecls(jule::Ptr<_1c0d04705_Sema>);
inline jule::Bool _1c0d1a474_checkStructTraitImpl(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c5b64b_Struct>*, jule::Ptr<_1c0c84850_Trait>*);
inline jule::Bool _1c0d1a7b5_checkStructImpls(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c5b64b_Struct>*);
inline jule::Bool _1c0d1ab06_checkStructFields(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c5b64b_Struct>*);
inline void _1c0d1adae_checkStructDecl(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c5b64b_Struct>*);
inline jule::Bool _1c0d1b145_checkStructDecls(jule::Ptr<_1c0d04705_Sema>);
inline void _1c0d1b3ed_checkAnonFuncDecl(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c715a6_Fn>*);
inline void _1c0d1b6a6_checkFuncDecl(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c715a6_Fn>*);
inline jule::Bool _1c0d1b9e7_checkFuncDeclsBy(jule::Ptr<_1c0d04705_Sema>, jule::Slice<jule::Ptr<_1c0c715a6_Fn>>*);
inline jule::Bool _1c0d1bc7d_checkFuncDecls(jule::Ptr<_1c0d04705_Sema>);
inline void _1c0d1c19b_pushCycleError(_1c0d04705_Sema*, jule::Str*, jule::Str*, _21cd5e16e_StrBuilder*);
inline void _1c0d1c850_checkPackageDecls(jule::Ptr<_1c0d04705_Sema>);
inline void _1c0d1cbb3_checkDataForTypeInference(_1c0d04705_Sema*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c25406_Token>*);
inline void _1c0d1ce6b_checkVarValue(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0d2b94c_Var>*);
inline void _1c0d1d2ce_evalVarValue(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0d2b94c_Var>*, jule::Trait<_1c0dd0050_Lookup>);
inline void _1c0d1d642_checkVar(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0d2b94c_Var>*, jule::Trait<_1c0dd0050_Lookup>);
inline void _1c0d2379b_checkGlobals(jule::Ptr<_1c0d04705_Sema>);
inline jule::Ptr<_1c0c744aa_FnIns> _1c0d23a98_readyToCheckFn(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c5e3c9_StructIns>*, jule::Ptr<_1c0c715a6_Fn>*);
inline void _1c0d23e0b_checkTypeMethod(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c5e3c9_StructIns>*, jule::Ptr<_1c0c715a6_Fn>*);
inline jule::Ptr<_1c0c744aa_FnIns> _1c0d243b2_checkStructInsOp(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c5e3c9_StructIns>*, jule::Ptr<_1c0c715a6_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1c0c715a6_Fn>)>);
inline jule::Bool _1c0d247ad_checkStructEnv(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c5e3c9_StructIns>*, jule::Ptr<_1c0c25406_Token>);
inline jule::Bool _1c0d24ba9_precheckStructIns(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c5e3c9_StructIns>*, jule::Ptr<_1c0c25406_Token>);
inline void _1c0d24e62_checkStructIns(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c5e3c9_StructIns>*);
inline void _1c0d2521a_checkTypeStruct(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c5b64b_Struct>*);
inline void _1c0d25418_checkStructTypes(jule::Ptr<_1c0d04705_Sema>);
inline void _1c0d256c1_checkStructInsOperators(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c5e3c9_StructIns>);
inline void _1c0d25979_precheckStructType(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c5b64b_Struct>*);
inline void _1c0d25b77_precheckStructTypes(jule::Ptr<_1c0d04705_Sema>);
inline void _1c0d25e30_checkRets(_1c0d04705_Sema*, jule::Ptr<_1c0c744aa_FnIns>*);
inline void _1c0d26293_checkFnInsSc(_1c0d04705_Sema*, jule::Ptr<_1c0c744aa_FnIns>*, jule::Ptr<_1c0cb9412_scopeChecker>*);
inline void _1c0d26606_checkFnInsCaller(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c744aa_FnIns>*, jule::Ptr<_1c0c25406_Token>);
inline void _1c0d268ae_checkFnIns(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c744aa_FnIns>*);
inline void _1c0d26b67_checkFunc(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c715a6_Fn>*);
inline void _1c0d26e20_checkTestFn(_1c0d04705_Sema*, jule::Ptr<_1c0c744aa_FnIns>*);
inline void _1c0d271c8_precheckFunc(jule::Ptr<_1c0d04705_Sema>, jule::Ptr<_1c0c715a6_Fn>*);
inline void _1c0d273c6_precheckFuncs(jule::Ptr<_1c0d04705_Sema>);
inline void _1c0d275c4_checkFuncs(jule::Ptr<_1c0d04705_Sema>);
inline void _1c0d277c2_checkPackageTypes(jule::Ptr<_1c0d04705_Sema>);
inline void _1c0d279c0_setFileSemaFields(jule::Ptr<_1c0d04705_Sema>);
inline void _1c0d27bbd_setSemaFields(jule::Ptr<_1c0d04705_Sema>);
inline void _1c0d27e76_check(jule::Ptr<_1c0d04705_Sema>, jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>*);
inline _1c0d283a5_missingRetChecker static__1c0d2876d_new(void);
inline jule::Bool _1c0d28a7b_checkConditional(_1c0d283a5_missingRetChecker*, jule::Ptr<_1c0cb2c46_Conditional>);
inline jule::Bool _1c0d28dbc_checkMatch(_1c0d283a5_missingRetChecker*, jule::Ptr<_1c0cb6244_Match>);
inline jule::Bool _1c0d2920d_checkInfIter(_1c0d283a5_missingRetChecker*, jule::Ptr<_1c0cb3043_InfIter>);
inline jule::Bool _1c0d2954e_checkScope(_1c0d283a5_missingRetChecker*, jule::Ptr<_1c0cb210d_Scope>);
inline jule::Bool _1c0d29890_check(_1c0d283a5_missingRetChecker*, jule::Ptr<_1c0cb210d_Scope>);
inline jule::Bool _1c0d2bcd2_IsInitialized(_1c0d2b94c_Var*);
inline jule::Bool _1c0d2c068_IsTypeInferred(_1c0d2b94c_Var*);
inline jule::Bool _1c0d2c2ee_untypedConstant(_1c0d2b94c_Var*);
inline jule::Bool static__1c0d2cd9e_Dispose(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d2d168_Str(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d2d4dc_logical(jule::Ptr<_1c0c715a6_Fn>*, jule::Str);
inline jule::Bool static__1c0d2d7a6_Eq(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d2da70_Gt(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d2dd39_GtEq(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d2e103_Lt(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d2e3bc_LtEq(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d2e741_result(jule::Ptr<_1c0c715a6_Fn>*, jule::Str);
inline jule::Bool static__1c0d2ea0a_Shl(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d2ecc4_Shr(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d3008d_Add(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d30357_Sub(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d30621_Div(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d308da_Mul(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d30ba4_Mod(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d30e6d_BitAnd(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d31237_BitOr(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d31501_BitXor(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d31875_unary(jule::Ptr<_1c0c715a6_Fn>*, jule::Str);
inline jule::Bool static__1c0d31b3e_Neg(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d31e08_Pos(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d321c2_BitNot(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d32546_assign(jule::Ptr<_1c0c715a6_Fn>*, jule::Str);
inline jule::Bool static__1c0d32810_AddAssign(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d32ac9_SubAssign(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d32d93_DivAssign(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d3315c_MulAssign(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d33426_ModAssign(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d336e0_ShlAssign(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d339a9_ShrAssign(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d33c73_BitOrAssign(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d3403c_BitAndAssign(jule::Ptr<_1c0c715a6_Fn>);
inline jule::Bool static__1c0d34306_BitXorAssign(jule::Ptr<_1c0c715a6_Fn>);
inline void _1c0d67669_pushErr(_1c0d6716e_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c0d67900_checkTrait(_1c0d6716e_typeCompatibilityChecker*);
inline jule::Bool _1c0d67b86_checkPtr(_1c0d6716e_typeCompatibilityChecker*);
inline jule::Bool _1c0d67e1c_checkPrim(_1c0d6716e_typeCompatibilityChecker*);
inline jule::Bool _1c0d68318_typeEnum(_1c0d6716e_typeCompatibilityChecker*, jule::Ptr<_1c0c88755_TypeEnum>*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d6859e_checkTypeEnum(_1c0d6716e_typeCompatibilityChecker*);
inline jule::Bool _1c0d68835_check(_1c0d6716e_typeCompatibilityChecker*);
inline void _1c0d693b3_pushErr(_1c0d68e1d_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c0d69649_checkValidity(_1c0d68e1d_assignTypeChecker*);
inline jule::Bool _1c0d698d0_checkConst(_1c0d68e1d_assignTypeChecker*);
inline jule::Bool _1c0d69b66_isPrim(_1c0d68e1d_assignTypeChecker*);
inline jule::Bool _1c0d69dec_checkCompatibility(_1c0d68e1d_assignTypeChecker*);
inline jule::Bool _1c0d6a183_check(_1c0d68e1d_assignTypeChecker*);
inline jule::Bool _1aac2cb60_annotateConstraintElem(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1aac2c4bc_annotateConstraintElem(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1aac2e667_annotateConstraintElem(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1aac35c34_annotateConstraintElem(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d6b481_annotateConstraintMap(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d6b7c2_annotateConstraintTup(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d6bb13_annotateConstraintFn(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d6be54_annotateConstraintIdent(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d6c295_annotateConstraint(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline void _1c0d6c608_pushGeneric(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*, jule::I64);
inline jule::Bool _1c0d6c949_annotatePrim(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d6cc8a_annotateArr(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d6d0cb_annotateSlc(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d6d4c7_checkMapKey(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d6d818_annotateMap(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d6db59_annotateFn(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d6de9a_annotatePtr(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d6e2db_annotateSptr(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d6e62c_annotateStruct(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d6e96d_annotateAny(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d6ecae_annotateKind(_1c0d6aa8a_dynamicTypeAnnotation*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0d70045_annotate(_1c0d6aa8a_dynamicTypeAnnotation*);
inline void _1c0d70e8b_pushErrToken(_1c0d708e7_fnCallArgChecker*, jule::Ptr<_1c0c25406_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c0d712ee_pushErr(_1c0d708e7_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>> _1c0d71585_getParams(_1c0d708e7_fnCallArgChecker*);
inline jule::Bool _1c0d71893_checkCounts(_1c0d708e7_fnCallArgChecker*, jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>>*);
inline jule::Bool _1c0d71d49_checkArg(_1c0d708e7_fnCallArgChecker*, jule::Ptr<_1c0c7350e_ParamIns>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Bool _1c0d72245_push(_1c0d708e7_fnCallArgChecker*, jule::Ptr<_1c0c7350e_ParamIns>*, jule::Ptr<_1c0c3ed27_Expr>);
inline jule::Bool _1c0d72641_pushVariadic(_1c0d708e7_fnCallArgChecker*, jule::Ptr<_1c0c7350e_ParamIns>*, jule::I64);
inline jule::Bool _1c0d72982_checkArgs(_1c0d708e7_fnCallArgChecker*, jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>>*);
inline jule::Bool _1c0d72c18_checkDynamicTypeAnnotation(_1c0d708e7_fnCallArgChecker*);
inline jule::Bool _1c0d72e9e_check(_1c0d708e7_fnCallArgChecker*);
inline void _1c0d73d7e_pushErr(_1c0d7382e_structLitChecker*, jule::Ptr<_1c0c25406_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c0d741e2_pushSuggestion(_1c0d7382e_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1c0d74610_pushMatch(_1c0d7382e_structLitChecker*, jule::Ptr<_1c0c5d829_FieldIns>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c25406_Token>*);
inline void _1c0d74973_checkPair(_1c0d7382e_structLitChecker*, jule::Ptr<_1c0c44546_FieldExprPair>*, jule::Slice<jule::Ptr<_1c0c3ed27_Expr>>*);
inline jule::Bool _1c0d74cb4_readyExprs(_1c0d7382e_structLitChecker*, jule::Slice<jule::Ptr<_1c0c3ed27_Expr>>*);
inline void _1c0d7506c_check(_1c0d7382e_structLitChecker*, jule::Slice<jule::Ptr<_1c0c3ed27_Expr>>*);
inline jule::Ptr<_1c0d2b94c_Var> _1c0d75aea_buildVar(_1c0d75611_rangeChecker*, jule::Ptr<_1c0c4d781_VarDecl>*);
inline void _1c0d75ce8_setSizeKey(_1c0d75611_rangeChecker*);
inline void _1c0d76216_checkRangeExprValidity(_1c0d75611_rangeChecker*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0db0519_TypeKind>*);
inline void _1c0d76414_checkSlice(_1c0d75611_rangeChecker*);
inline void _1c0d76612_checkArray(_1c0d75611_rangeChecker*);
inline void _1c0d76810_checkMapKeyA(_1c0d75611_rangeChecker*);
inline void _1c0d76a0d_checkMapKeyB(_1c0d75611_rangeChecker*);
inline void _1c0d76c0b_checkMap(_1c0d75611_rangeChecker*);
inline void _1c0d76e09_checkStr(_1c0d75611_rangeChecker*);
inline void _1c0d77107_checkComptime(_1c0d75611_rangeChecker*);
inline jule::Bool _1c0d7738d_checkComptimeRange(_1c0d75611_rangeChecker*);
inline jule::Bool _1c0d77624_check(_1c0d75611_rangeChecker*);
inline void _1c0d78290_prepareTypes(_1c0d77d72_retTypeChecker*);
inline void _1c0d78548_prepareExprs(_1c0d77d72_retTypeChecker*, jule::Ptr<_1c0c3ed27_Expr>*);
inline void _1c0d78746_checkExprs(_1c0d77d72_retTypeChecker*);
inline jule::Bool _1c0d78a87_check(_1c0d77d72_retTypeChecker*, jule::Ptr<_1c0c3ed27_Expr>*);
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0d7a616_SelectPackage(_1c0d7a12c_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)>);
inline jule::Ptr<_1c0d2b94c_Var> _1c0d7aa12_FindVar(_1c0d7a12c_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0dae727_TypeAlias> _1c0d7ae0d_FindTypeAlias(_1c0d7a12c_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c5b64b_Struct> _1c0d7b309_FindStruct(_1c0d7a12c_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c715a6_Fn> _1c0d7b705_FindFn(_1c0d7a12c_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c84850_Trait> _1c0d7ba46_FindTrait(_1c0d7a12c_SymbolTable*, jule::Str);
inline jule::Ptr<_1c0c8704a_Enum> _1c0d7bd87_FindEnum(_1c0d7a12c_SymbolTable*, jule::Str);
inline jule::Ptr<_1c0c88755_TypeEnum> _1c0d7c1c8_FindTypeEnum(_1c0d7a12c_SymbolTable*, jule::Str);
inline jule::Ptr<_1c0d2b94c_Var> _1c0d7c7e4_findVar(_1c0d7a12c_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Ptr<_1c0dae727_TypeAlias> _1c0d7cc9a_findTypeAlias(_1c0d7a12c_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Any _1c0d7d196_defByIdent(_1c0d7a12c_SymbolTable*, jule::Str*, jule::Bool);
inline jule::Bool _1c0d7d64c_isDuplicatedIdent(_1c0d7a12c_SymbolTable*, jule::Uintptr, jule::Str*, jule::Bool);
inline jule::Bool _1c0d80709_IsNil(_1c0d80352_Data*);
inline jule::Bool _1c0d80990_IsVoid(_1c0d80352_Data*);
inline jule::Bool _1c0d80c26_IsConst(_1c0d80352_Data*);
inline jule::Bool _1c0d81067_GoodOperand(_1c0d80352_Data*, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0d82596_pushErr(_1c0d82046_Eval*, jule::Ptr<_1c0c25406_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c0d82909_pushSuggestion(_1c0d82046_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1c0d82b07_allowBuiltin(_1c0d82046_Eval*);
inline void _1c0d82d05_disallowBuiltin(_1c0d82046_Eval*);
inline jule::Bool _1c0d8308b_isUnsafe(_1c0d82046_Eval*);
inline jule::Bool _1c0d83322_isGlobal(_1c0d82046_Eval*);
inline jule::Bool _1c0d83630_applyNumericPrefix(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0d83971_litStr(_1c0d82046_Eval*, jule::Ptr<_1c0c40dc2_LitExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0d83cb2_litRune(_1c0d82046_Eval*, jule::Ptr<_1c0c40dc2_LitExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0d84103_litFloat(_1c0d82046_Eval*, jule::Ptr<_1c0c40dc2_LitExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0d84444_litInt(_1c0d82046_Eval*, jule::Ptr<_1c0c40dc2_LitExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0d84785_litNum(_1c0d82046_Eval*, jule::Ptr<_1c0c40dc2_LitExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0d84ac6_evalLit(_1c0d82046_Eval*, jule::Ptr<_1c0c40dc2_LitExpr>);
inline jule::Any _1c0d84e17_findBuiltins(_1c0d82046_Eval*, jule::Str*);
inline jule::Any _1c0d85313_getDef(_1c0d82046_Eval*, jule::Str*, jule::Bool);
inline void _1aad8c30d_pushReference(_1c0d82046_Eval*, jule::Ptr<_1c0c744aa_FnIns>*);
inline void _1aada3d5d_pushReference(_1c0d82046_Eval*, jule::Ptr<_1c0d2b94c_Var>*);
inline void _1ab019b2d_pushReference(_1c0d82046_Eval*, jule::Ptr<_1c0c5e3c9_StructIns>*);
inline jule::Ptr<_1c0d80352_Data> _1c0d8590c__evalEnum(_1c0d82046_Eval*, jule::Ptr<_1c0c8704a_Enum>);
inline jule::Ptr<_1c0d80352_Data> _1c0d85d08_evalEnum(_1c0d82046_Eval*, jule::Ptr<_1c0c8704a_Enum>, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d86149__evalTypeEnum(_1c0d82046_Eval*, jule::Ptr<_1c0c88755_TypeEnum>);
inline jule::Ptr<_1c0d80352_Data> _1c0d86545_evalTypeEnum(_1c0d82046_Eval*, jule::Ptr<_1c0c88755_TypeEnum>, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d86886__evalStruct(_1c0d82046_Eval*, jule::Ptr<_1c0c5e3c9_StructIns>);
inline jule::Ptr<_1c0d80352_Data> _1c0d86c82_evalStruct(_1c0d82046_Eval*, jule::Ptr<_1c0c5e3c9_StructIns>, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d870c3_evalFnIns(_1c0d82046_Eval*, jule::Ptr<_1c0c744aa_FnIns>);
inline void _1c0d87436_checkDeprecated(_1c0d82046_Eval*, jule::Slice<jule::Ptr<_1c0c39e10_Directive>>*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d87832_evalFn(_1c0d82046_Eval*, jule::Ptr<_1c0c715a6_Fn>, jule::Ptr<_1c0c25406_Token>);
inline void _1c0d87c50_pushIllegalCycleError(_1c0d82046_Eval*, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0d2b94c_Var>*, _21cd5e16e_StrBuilder*);
inline jule::Bool _1c0d8814b_checkCrossCycle(_1c0d82046_Eval*, jule::Ptr<_1c0d2b94c_Var>*, _21cd5e16e_StrBuilder*);
inline jule::Bool _1c0d88547_checkIllegalCycles(_1c0d82046_Eval*, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d88943_evalVar(_1c0d82046_Eval*, jule::Ptr<_1c0d2b94c_Var>, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d88d3e_evalTypeAlias(_1c0d82046_Eval*, jule::Ptr<_1c0dae727_TypeAlias>, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d8923a_evalDef(_1c0d82046_Eval*, jule::Any*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d8957b_evalIdent(_1c0d82046_Eval*, jule::Ptr<_1c0c41752_IdentExpr>);
inline jule::Ptr<_1c0d80352_Data> _1c0d898bc_evalUnary(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c41dd4_UnaryExpr>);
inline jule::Ptr<_1c0d80352_Data> _1c0d89c0d_evalVariadic(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c422ad_VariadicExpr>);
inline jule::Ptr<_1c0d80352_Data> _1c0d8a04e_evalUnsafe(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c4129b_UnsafeExpr>);
inline jule::Ptr<_1c0d80352_Data> _1c0d8a390_evalArr(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c4634a_SliceExpr>);
inline jule::Ptr<_1c0d80352_Data> _1c0d8a846_evalExpSlc(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c4634a_SliceExpr>, jule::Ptr<_1c0db0519_TypeKind>, jule::Any);
inline jule::Ptr<_1c0d80352_Data> _1c0d8ab87_evalSliceExpr(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c4634a_SliceExpr>);
inline void _1c0d8aeea_checkIntegerIndexingByData(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c25406_Token>);
inline void _1c0d8b418_indexingPtr(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c46cda_IndexingExpr>*);
inline void _1c0d8b836_indexingArr(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c46cda_IndexingExpr>*);
inline void _1c0d8bc54_indexingSlc(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c46cda_IndexingExpr>*);
inline void _1c0d8c172_indexingMap(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c46cda_IndexingExpr>*);
inline void _1c0d8c590_indexingStr(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c46cda_IndexingExpr>*);
inline void _1c0d8c9ad_toIndexing(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c46cda_IndexingExpr>*);
inline jule::Bool _1c0d8ce64_pushGenericsFromExprSubIdent(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c42e3a_SubIdentExpr>*, jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>>*, jule::Ptr<_1c0c3ed27_Expr>*);
inline jule::Bool _1c0d8d360_pushGenericsFromData(jule::Ptr<_1c0d82046_Eval>, jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>>*, jule::Ptr<_1c0c3ed27_Expr>*);
inline void _1c0d8d6c3_evalIdentDeclFromIndexing(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c46cda_IndexingExpr>*);
inline jule::Bool _1c0d8db79_checkGenericFn(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c744aa_FnIns>*, jule::Ptr<_1c0c25406_Token>*, jule::Any*);
inline void _1c0d8dedc_evalFnGenericFromIndexing(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c46cda_IndexingExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0d8e32d_evalIndexing(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c46cda_IndexingExpr>);
inline __jule_tuple_x_1c0d80352_Data__jule_tuple_x_1c0d80352_Data _1c0d8e66e_evalSlicingExprs(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c4744a_SlicingExpr>*);
inline void _1c0d8e927_slicingArr(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0d8ed45_slicingStr(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0d9031d_checkSlicing(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c4744a_SlicingExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0d9065e_evalSlicing(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c4744a_SlicingExpr>);
inline void _1c0d90a7c_castPtr(_1c0d82046_Eval*, jule::Ptr<_1c0db0519_TypeKind>, jule::Ptr<_1c0d80352_Data>, jule::Ptr<_1c0c25406_Token>);
inline void _1c0d90e9a_castStruct(_1c0d82046_Eval*, jule::Ptr<_1c0db0519_TypeKind>, jule::Ptr<_1c0d80352_Data>, jule::Ptr<_1c0c25406_Token>);
inline void _1c0d913b8_castRef(_1c0d82046_Eval*, jule::Ptr<_1c0db0519_TypeKind>, jule::Ptr<_1c0d80352_Data>, jule::Ptr<_1c0c25406_Token>);
inline void _1c0d917d6_castSlc(_1c0d82046_Eval*, jule::Ptr<_1c0db0519_TypeKind>, jule::Ptr<_1c0d80352_Data>, jule::Ptr<_1c0c25406_Token>);
inline void _1c0d91b49_castStr(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>, jule::Ptr<_1c0c25406_Token>);
inline void _1c0d92067_castInt(_1c0d82046_Eval*, jule::Ptr<_1c0db0519_TypeKind>, jule::Ptr<_1c0d80352_Data>, jule::Ptr<_1c0c25406_Token>);
inline void _1c0d92485_castNum(_1c0d82046_Eval*, jule::Ptr<_1c0db0519_TypeKind>, jule::Ptr<_1c0d80352_Data>, jule::Ptr<_1c0c25406_Token>);
inline void _1c0d928a3_castPrim(_1c0d82046_Eval*, jule::Ptr<_1c0db0519_TypeKind>, jule::Ptr<_1c0d80352_Data>, jule::Ptr<_1c0c25406_Token>);
inline void _1c0d92c16_castConstant(_1c0d82046_Eval*, jule::Ptr<_1c0db0519_TypeKind>*, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0d93134_castTypeEnum(_1c0d82046_Eval*, jule::Ptr<_1c0db0519_TypeKind>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c25406_Token>*);
inline void _1c0d93552_castTypeEnumT(_1c0d82046_Eval*, jule::Ptr<_1c0db0519_TypeKind>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Ptr<_1c0d80352_Data> _1c0d93a08_evalCastByTypeNData(_1c0d82046_Eval*, jule::Ptr<_1c0db0519_TypeKind>, jule::Ptr<_1c0d80352_Data>, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d93eae_evalCastT(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0db0519_TypeKind>*, jule::Ptr<_1c0c3ed27_Expr>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Ptr<_1c0d80352_Data> _1c0d94300_evalCast(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c42687_CastExpr>);
inline jule::Ptr<_1c0d80352_Data> _1c0d94641_evalNsSelection(_1c0d82046_Eval*, jule::Ptr<_1c0c42a61_NsSelectionExpr>);
inline jule::Ptr<_1c0d80352_Data> _1c0d94ae7_evalStructLitExplicit(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c5e3c9_StructIns>, jule::Slice<jule::Ptr<_1c0c3ed27_Expr>>, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d94e38_evalStructLit(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c44d71_StructLit>);
inline _1c0dc23c7_typeChecker _1c0d951be_typeChecker(_1c0d82046_Eval*);
inline jule::Ptr<_1c0d80352_Data> _1c0d95510_evalType(_1c0d82046_Eval*, jule::Ptr<_1c0c3a9e3_TypeDecl>);
inline void _1c0d95873_callTypeFn(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0d95bd6_callBuiltinFn(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0d96049_checkFnOfConcurrentCall(_1c0d82046_Eval*, jule::Ptr<_1c0c744aa_FnIns>*, jule::Ptr<_1c0c25406_Token>);
inline void _1c0d96467_processExceptionalHandler(_1c0d82046_Eval*, jule::Ptr<_1c0c744aa_FnIns>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0d967ca_callFn(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0d96b1b_evalFnCall(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c43a51_FnCallExpr>);
inline jule::Ptr<_1c0d80352_Data> _1c0d97017_evalEnumStatic(_1c0d82046_Eval*, jule::Ptr<_1c0c8704a_Enum>, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d97413_evalTypeEnumStatic(_1c0d82046_Eval*, jule::Ptr<_1c0c88755_TypeEnum>, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9780e_evalStructStatic(_1c0d82046_Eval*, jule::Ptr<_1c0c5e3c9_StructIns>, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d97cb5_evalTraitSubIdent(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>, jule::Ptr<_1c0c84850_Trait>, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d98326_evalStructSubIdentField(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c5e3c9_StructIns>*, jule::Ptr<_1c0c25406_Token>*, jule::Ptr<_1c0c5d829_FieldIns>*);
inline jule::Ptr<_1c0d80352_Data> _1c0d98887_evalStructSubIdent(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>, jule::Ptr<_1c0c5e3c9_StructIns>, jule::Ptr<_1c0c42e3a_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1c0d80352_Data> _1c0d98bc8_evalIntTypeStatic(_1c0d82046_Eval*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d99019_evalUintTypeStatic(_1c0d82046_Eval*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9935a_evalI8TypeStatic(_1c0d82046_Eval*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9969b_evalI16TypeStatic(_1c0d82046_Eval*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d999dc_evalI32TypeStatic(_1c0d82046_Eval*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d99d2d_evalI64TypeStatic(_1c0d82046_Eval*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9a16e_evalU8TypeStatic(_1c0d82046_Eval*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9a4b0_evalU16TypeStatic(_1c0d82046_Eval*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9a801_evalU32TypeStatic(_1c0d82046_Eval*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9ab42_evalU64TypeStatic(_1c0d82046_Eval*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9ae83_evalF32TypeStatic(_1c0d82046_Eval*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9b2c4_evalF64TypeStatic(_1c0d82046_Eval*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9b6c0_evalPrimStatic(_1c0d82046_Eval*, jule::Str, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9babb_evalTypeStatic(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>, jule::Ptr<_1c0c42e3a_SubIdentExpr>);
inline jule::Ptr<_1c0d80352_Data> _1ab13450b_comptimeObjSubIdent(_1c0d82046_Eval*, jule::Ptr<_1c0c9a5be_comptimeTypeInfo>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c42e3a_SubIdentExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1ab1387b8_comptimeObjSubIdent(_1c0d82046_Eval*, jule::Ptr<_1c0c8b659_comptimeStructField>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c42e3a_SubIdentExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1ab14288d_comptimeObjSubIdent(_1c0d82046_Eval*, jule::Ptr<_1c0c92bc1_comptimeEnumField>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c42e3a_SubIdentExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1ab146b4a_comptimeObjSubIdent(_1c0d82046_Eval*, jule::Ptr<_1c0c95663_comptimeParam>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c42e3a_SubIdentExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1ab14b138_comptimeObjSubIdent(_1c0d82046_Eval*, jule::Ptr<_1c0c8e915_comptimeStatic>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c42e3a_SubIdentExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1ab1503a1_comptimeObjSubIdent(_1c0d82046_Eval*, jule::Ptr<_1c0ca1ad1_comptimeValue>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c42e3a_SubIdentExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1ab154619_comptimeObjSubIdent(_1c0d82046_Eval*, jule::Ptr<_1c0ca5a2a_comptimeFile>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c42e3a_SubIdentExpr>*);
inline __jule_tuple_x_1c0d80352_Data__jule_tuple_bool _1c0d9c46d_tryComptimeObjSubIdent(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c42e3a_SubIdentExpr>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9c869_evalObjSubIdent(_1c0d82046_Eval*, jule::Ptr<_1c0d80352_Data>, jule::Ptr<_1c0c42e3a_SubIdentExpr>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9cbaa_evalSubIdent(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c42e3a_SubIdentExpr>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9ceeb_evalTuple(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c409e8_TupleExpr>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9d3e7_evalMap(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0dbdc86_Map>, jule::Ptr<_1c0c45327_BraceLit>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9d738_evalBraceLit(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c45327_BraceLit>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9da79_evalAnonFunc(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c4c6a3_FnDecl>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9ddba_evalBinop(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c433e1_BinopExpr>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9e20b_evalExprKind(jule::Ptr<_1c0d82046_Eval>, jule::Any);
inline jule::Ptr<_1c0d80352_Data> _1c0d9e54c_eval1(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c3ed27_Expr>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9e88d_eval(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c3ed27_Expr>);
inline jule::Ptr<_1c0d80352_Data> _1c0d9ebce_evalExpr1(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c3ed27_Expr>);
inline jule::Ptr<_1c0d80352_Data> _1c0da0020_evalExpr(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c3ed27_Expr>);
inline _1c0da04d7_unaryEval static__1c0da0927_new(jule::Ptr<_1c0d82046_Eval>);
inline void _1c0da0b25_minus(_1c0da04d7_unaryEval*);
inline void _1c0da0d23_plus(_1c0da04d7_unaryEval*);
inline void _1c0da1021_caret(_1c0da04d7_unaryEval*);
inline void _1c0da121e_excl(_1c0da04d7_unaryEval*);
inline void _1c0da141c_star(_1c0da04d7_unaryEval*);
inline void _1c0da161a_amper(_1c0da04d7_unaryEval*);
inline void _1c0da1818_typeDecl(_1c0da04d7_unaryEval*);
inline void _1c0da1a16_evalData(_1c0da04d7_unaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da1d57_eval(_1c0da04d7_unaryEval*, jule::Ptr<_1c0c41dd4_UnaryExpr>);
inline _1c0da2473_binaryEval static__1c0da2a5b_newPlain(jule::Ptr<_1c0d82046_Eval>);
inline _1c0da2473_binaryEval static__1c0da2d9c_new(jule::Ptr<_1c0d82046_Eval>, jule::Ptr<_1c0c25406_Token>);
inline jule::Bool _1c0da3133_checkTypeCompatibility(_1c0da2473_binaryEval*);
inline jule::Bool _1c0da33b9_checkStructCommonOperatorCompatibility(_1c0da2473_binaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da3650_evalComptimeTypeInfo(_1c0da2473_binaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da38d6_evalNil(_1c0da2473_binaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da3b6c_evalEnum(_1c0da2473_binaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da3e03_evalTypeEnum(_1c0da2473_binaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da4189_evalSptr(_1c0da2473_binaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da4420_evalPtr(_1c0da2473_binaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da46a6_evalArr(_1c0da2473_binaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da493c_evalSlc(_1c0da2473_binaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da4bc3_evalStruct(_1c0da2473_binaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da4e59_evalTrait(_1c0da2473_binaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da51e0_evalAny(_1c0da2473_binaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da5476_evalBool(_1c0da2473_binaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da570c_evalStr(_1c0da2473_binaryEval*);
inline void _1c0da590a_setTypeToGreater(_1c0da2473_binaryEval*);
inline void _1c0da5bb3_checkModData(_1c0da2473_binaryEval*, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0da5db1_mod(_1c0da2473_binaryEval*);
inline jule::Bool _1c0da62ac_numbersAreCompatibile(_1c0da2473_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1c0d80352_Data> _1c0da6543_evalFloat(_1c0da2473_binaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da67c9_evalInt(_1c0da2473_binaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da6a60_evalPrim(_1c0da2473_binaryEval*);
inline void _1c0da6c5d_checkSpecialCases(_1c0da2473_binaryEval*);
inline jule::Ptr<_1c0d80352_Data> _1c0da6ee4_evalOp(_1c0da2473_binaryEval*);
inline void _1c0da729c_evalConst(_1c0da2473_binaryEval*, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0da7555_checkData(_1c0da2473_binaryEval*, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0da7753_checkDatas(_1c0da2473_binaryEval*);
inline void _1c0da7a0b_setModel(_1c0da2473_binaryEval*, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0da7cb4_postEval(_1c0da2473_binaryEval*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0da81b0_solveExplicit(_1c0da2473_binaryEval*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0da8501_eval(_1c0da2473_binaryEval*, jule::Ptr<_1c0c433e1_BinopExpr>*);
inline jule::Str _1c0db08d2_Str(_1c0db0519_TypeKind*);
inline jule::Bool _1c0db0c23_Equal(jule::Ptr<_1c0db0519_TypeKind>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Bool _1c0db1361_Binded(_1c0db0519_TypeKind*);
inline jule::Bool _1c0db15e7_IsNil(_1c0db0519_TypeKind*);
inline jule::Bool _1c0db187d_Void(_1c0db0519_TypeKind*);
inline jule::Bool _1c0db1b14_Comparable(_1c0db0519_TypeKind*);
inline jule::Bool _1c0db1d9a_Mutable(_1c0db0519_TypeKind*);
inline jule::Bool _1c0db2131_Ordered(_1c0db0519_TypeKind*);
inline jule::Bool _1c0db23b7_NilCompatible(_1c0db0519_TypeKind*);
inline jule::Bool _1c0db264d_PerformsRC(_1c0db0519_TypeKind*);
inline jule::Bool _1c0db28d4_Variadicable(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0db80e3_Prim> _1c0db2b6a_Prim(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0dbbb1e_Sptr> _1c0db2e01_Sptr(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0dc03d6_Ptr> _1c0db3187_Ptr(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0c8704a_Enum> _1c0db341d_Enum(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0c88755_TypeEnum> _1c0db36a4_TypeEnum(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0dbe913_Arr> _1c0db393a_Arr(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0dbc5e2_Slc> _1c0db3bc1_Slc(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0c744aa_FnIns> _1c0db3e57_Fn(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0c5e3c9_StructIns> _1c0db41dd_Struct(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0c84850_Trait> _1c0db4474_Trait(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0dbdc86_Map> _1c0db470a_Map(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0dbd1d6_Tuple> _1c0db4991_Tup(_1c0db0519_TypeKind*);
inline jule::Bool _1c0db4c27_comptime(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0c8d309_comptimeStructFields> _1c0db4ead_comptimeStructFields(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0c8b659_comptimeStructField> _1c0db5244_comptimeStructField(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0c93ed0_comptimeEnumFields> _1c0db54ca_comptimeEnumFields(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0c92bc1_comptimeEnumField> _1c0db5761_comptimeEnumField(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0c978c9_comptimeParams> _1c0db59e7_comptimeParams(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0c95663_comptimeParam> _1c0db5c7d_comptimeParam(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0c8aaed_comptimeRange> _1c0db6014_comptimeRange(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0c98ec4_comptimeTypeInfos> _1c0db629a_comptimeTypeInfos(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _1c0db6531_comptimeTypeInfo(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0c915c6_comptimeStatics> _1c0db67b7_comptimeStatics(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0c8e915_comptimeStatic> _1c0db6a4d_comptimeStatic(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0ca1ad1_comptimeValue> _1c0db6cd4_comptimeValue(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0ca5a2a_comptimeFile> _1c0db706a_comptimeFile(_1c0db0519_TypeKind*);
inline jule::Ptr<_1c0ca4430_comptimeFiles> _1c0db7301_comptimeFiles(_1c0db0519_TypeKind*);
inline jule::Bool _1c0db7a60_checked(_1c0db76db_TypeSymbol*);
inline jule::Str _1c0db8434_Str(_1c0db80e3_Prim*);
inline jule::Bool _1c0db8775_Equal(jule::Ptr<_1c0db80e3_Prim>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Bool _1c0db8c1a_IsConstraint(_1c0db80e3_Prim*);
inline jule::Bool _1c0db8ea1_IsI8(_1c0db80e3_Prim*);
inline jule::Bool _1c0db9237_IsI16(_1c0db80e3_Prim*);
inline jule::Bool _1c0db94bd_IsI32(_1c0db80e3_Prim*);
inline jule::Bool _1c0db9754_IsI64(_1c0db80e3_Prim*);
inline jule::Bool _1c0db99da_IsU8(_1c0db80e3_Prim*);
inline jule::Bool _1c0db9c71_IsU16(_1c0db80e3_Prim*);
inline jule::Bool _1c0dba007_IsU32(_1c0db80e3_Prim*);
inline jule::Bool _1c0dba28d_IsU64(_1c0db80e3_Prim*);
inline jule::Bool _1c0dba524_IsF32(_1c0db80e3_Prim*);
inline jule::Bool _1c0dba7aa_IsF64(_1c0db80e3_Prim*);
inline jule::Bool _1c0dbaa41_IsInt(_1c0db80e3_Prim*);
inline jule::Bool _1c0dbacc7_IsUint(_1c0db80e3_Prim*);
inline jule::Bool _1c0dbb05d_IsUintptr(_1c0db80e3_Prim*);
inline jule::Bool _1c0dbb2e4_IsBool(_1c0db80e3_Prim*);
inline jule::Bool _1c0dbb57a_IsStr(_1c0db80e3_Prim*);
inline jule::Bool _1c0dbb811_IsAny(_1c0db80e3_Prim*);
inline jule::Str _1c0dbbe93_Str(_1c0dbbb1e_Sptr*);
inline jule::Bool _1c0dbc2d4_Equal(jule::Ptr<_1c0dbbb1e_Sptr>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Str _1c0dbca76_Str(_1c0dbc5e2_Slc*);
inline jule::Bool _1c0dbcdb7_Equal(jule::Ptr<_1c0dbc5e2_Slc>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Str _1c0dbd55a_Str(_1c0dbd1d6_Tuple*);
inline jule::Bool _1c0dbd89b_Equal(jule::Ptr<_1c0dbd1d6_Tuple>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Str _1c0dbe10a_Str(_1c0dbdc86_Map*);
inline jule::Bool _1c0dbe44b_Equal(jule::Ptr<_1c0dbdc86_Map>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Str _1c0dbec87_Str(_1c0dbe913_Arr*);
inline jule::Bool _1c0dc00c8_Equal(jule::Ptr<_1c0dbe913_Arr>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Str _1c0dc075a_Str(_1c0dc03d6_Ptr*);
inline jule::Bool _1c0dc0a9b_Equal(jule::Ptr<_1c0dc03d6_Ptr>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Bool _1c0dc0e20_IsUnsafe(_1c0dc03d6_Ptr*);
inline void _1c0dc2b14_pushErr(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c25406_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c0dc2d12_allowBuiltin(_1c0dc23c7_typeChecker*);
inline void _1c0dc3010_disallowBuiltin(_1c0dc23c7_typeChecker*);
inline void _1ab33175d_pushReference(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c5e3c9_StructIns>*);
inline void _1ab3345a7_pushReference(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c84850_Trait>*);
inline void _1c0dc3571_pushReferenceByKind(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0db0519_TypeKind>*);
inline void _1c0dc398e_pushCycleError(_1c0dc23c7_typeChecker*, jule::Any, jule::Any, _21cd5e16e_StrBuilder*);
inline jule::Bool _1c0dc3d8a_checkCrossCycle(_1c0dc23c7_typeChecker*, jule::Any, _21cd5e16e_StrBuilder*);
inline jule::Bool _1c0dc4286_checkIllegalCycles(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1c0db0063_Kind> _1c0dc4682_fromTypeAlias(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>*, jule::Ptr<_1c0dae727_TypeAlias>*);
inline jule::Ptr<_1c0c8704a_Enum> _1c0dc4a7d_fromEnum(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>*, jule::Ptr<_1c0c8704a_Enum>*);
inline jule::Ptr<_1c0c88755_TypeEnum> _1c0dc4e79_fromTypeEnum(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>*, jule::Ptr<_1c0c88755_TypeEnum>*);
inline jule::Ptr<_1c0c84850_Trait> _1c0dc5375_fromTrait(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>*, jule::Ptr<_1c0c84850_Trait>*);
inline jule::Bool _1c0dc5771_checkStructIns(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c5e3c9_StructIns>*, jule::Ptr<_1c0c25406_Token>*);
inline void _1c0dc5a29_appendUsedStructReference(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c5b64b_Struct>*);
inline jule::Ptr<_1c0c5e3c9_StructIns> _1c0dc5e25_buildStructInstance(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>*, jule::Ptr<_1c0c5b64b_Struct>*);
inline jule::Ptr<_1c0c5e3c9_StructIns> _1c0dc6321_fromStruct(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>*, jule::Ptr<_1c0c5b64b_Struct>*);
inline jule::Trait<_1c0db0063_Kind> _1c0dc6662_getDef(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>*);
inline jule::Trait<_1c0db0063_Kind> _1c0dc69a3_buildIdent(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>);
inline jule::Trait<_1c0db0063_Kind> _1c0dc6ce4_buildSubIdent(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3b3ea_SubIdentTypeDecl>);
inline jule::Ptr<_1c0dbbb1e_Sptr> _1c0dc7135_buildSptrFromType(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Ptr<_1c0dbbb1e_Sptr> _1c0dc7476_buildSptr(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3ba8d_SptrTypeDecl>);
inline jule::Ptr<_1c0dc03d6_Ptr> _1c0dc77b7_buildPtrFromType(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Ptr<_1c0dc03d6_Ptr> _1c0dc7b08_buildPtr(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3c51c_PtrTypeDecl>);
inline jule::Ptr<_1c0dbc5e2_Slc> _1c0dc7e49_buildSlc(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3be23_SlcTypeDecl>);
inline jule::Ptr<_1c0dbe913_Arr> _1c0dc828a_buildArr(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3ccae_ArrTypeDecl>);
inline jule::Ptr<_1c0dbdc86_Map> _1c0dc85cb_buildMap(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3d50c_MapTypeDecl>);
inline jule::Ptr<_1c0dbd1d6_Tuple> _1c0dc891c_buildTuple(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3c220_TupleTypeDecl>);
inline jule::Bool _1c0dc8c5d_checkFuncTypes(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c744aa_FnIns>*);
inline jule::Ptr<_1c0c744aa_FnIns> _1c0dc909e_buildFunc(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c4c6a3_FnDecl>);
inline jule::Trait<_1c0db0063_Kind> _1c0dc93e0_buildByNamespace(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3b791_NamespaceTypeDecl>);
inline jule::Ptr<_1c0db0519_TypeKind> _1c0dc9731_build(_1c0dc23c7_typeChecker*, jule::Any*);
inline jule::Ptr<_1c0db0519_TypeKind> _1c0dc9a72_checkDecl(_1c0dc23c7_typeChecker*, jule::Ptr<_1c0c3a9e3_TypeDecl>*);
inline jule::Bool static__1c0dca4bd_prim(jule::Str*, jule::Ptr<_1c0db80e3_Prim>);
inline jule::Bool static__1c0dca842_exist(jule::Str*, jule::Ptr<_1c0db0519_TypeKind>*);
inline void _1c1867c18_stop(_1c18675a8_scopeParser*);
inline jule::Bool _1c1867e9e_stopped(_1c18675a8_scopeParser*);
inline jule::Bool _1c1868235_finished(_1c18675a8_scopeParser*);
inline jule::Bool _1c18684bb_isLastSt(_1c18675a8_scopeParser*);
inline void _1c186882e_pushErr(_1c18675a8_scopeParser*, jule::Ptr<_1c0c25406_Token>, jule::Str);
inline void _1c1868b92_pushSuggestion(_1c18675a8_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1c1868e4a_insertAsNext(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c1866c17_stmt> _1c18691d1_next(_1c18675a8_scopeParser*);
inline jule::Ptr<_1c0c4aa14_ScopeTree> _1c18695cc_buildScope(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0c4d781_VarDecl> _1c186991d_buildVarSt(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c4db5a_RetSt> _1c1869c5e_buildRetSt(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c4e2ed_Iter> _1c186a0a0_buildWhileNextIter(_1c18675a8_scopeParser*, jule::Ptr<_1c1866c17_stmt>*);
inline jule::Ptr<_1c0c4eb28_WhileKind> _1c186a3e1_buildWhileIterKind(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _1c186a732_getRangeKindKeysTokens(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c4d781_VarDecl> _1c186aa73_buildRangeKindKey(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Slice<jule::Ptr<_1c0c4d781_VarDecl>> _1c186adb4_buildRangeKindKeys(_1c18675a8_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>>*);
inline void _1c186b227_setupRangeKindKeysPlain(_1c18675a8_scopeParser*, jule::Ptr<_1c0c50530_RangeKind>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline void _1c186b58a_setupRangeKindKeysExplicit(_1c18675a8_scopeParser*, jule::Ptr<_1c0c50530_RangeKind>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline void _1c186b8ed_setupRangeKindKeys(_1c18675a8_scopeParser*, jule::Ptr<_1c0c50530_RangeKind>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c50530_RangeKind> _1c186bda4_buildRangeIterKind(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Any _1c186c2a0_buildCommonIterKind(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Ptr<_1c0c4e2ed_Iter> _1c186c5e1_buildCommonIter(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c4e2ed_Iter> _1c186c932_buildIterSt(_1c18675a8_scopeParser*, jule::Ptr<_1c1866c17_stmt>*);
inline jule::Ptr<_1c0c50909_BreakSt> _1c186cc73_buildBreakSt(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c50cd3_ContSt> _1c186d0b4_buildContSt(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c51289_If> _1c186d405_buildIf(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c51663_Else> _1c186d746_buildElse(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c51b19_Conditional> _1c186da87_buildIfElseChain(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c3ed27_Expr> _1c186ddc8_buildCoCallSt(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c484a1_GotoSt> _1c186e219_buildGotoSt(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c4879d_FallSt> _1c186e55a_buildFallSt(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c52356_TypeAliasDecl> _1c186e89b_buildTypeAliasSt(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline void _1c186ed74_pushCaseExpr(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>, jule::Ptr<_1c0c25406_Token>, jule::Bool, jule::Slice<jule::Ptr<_1c0c3ed27_Expr>>*);
inline jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _1c187032a_buildCaseExprs(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Ptr<_1c0c25406_Token>*, jule::Bool);
inline jule::Ptr<_1c0c4aa14_ScopeTree> _1c187066b_buildCaseScope(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline __jule_tuple_x_1c0c5280c_Case__jule_tuple_bool _1c1870a67_buildCase(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Bool);
inline __jule_tuple_sx_1c0c5280c_Case__jule_tuple_x_1c0c51663_Else _1c1870e63_buildCases(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>, jule::Bool);
inline jule::Ptr<_1c0c53049_MatchCase> _1c18712a4_buildMatchCase(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c4aa14_ScopeTree> _1c18715e5_buildScopeSt(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c480c7_LabelSt> _1c1871936_buildLabelSt(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline __jule_tuple__1c0c4a151_StmtData__jule_tuple_bool _1c1871c77_buildIdSt(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c18820d9_assignInfo> _1c18720b8_buildAssignInfo(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c48e0d_AssignLeft> _1c1872409_buildAssignL(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Slice<jule::Ptr<_1c0c48e0d_AssignLeft>> _1c187274a_buildAssignLs(_1c18675a8_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>>*);
inline __jule_tuple_x_1c0c49491_AssignSt__jule_tuple_bool _1c1872a8b_buildPlainAssign(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Bool _1c1872e87_buildDeclAssign1(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Ptr<_1c0c49491_AssignSt>*);
inline __jule_tuple_x_1c0c49491_AssignSt__jule_tuple_bool _1c18732c8_buildDeclAssign(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline __jule_tuple_x_1c0c49491_AssignSt__jule_tuple_bool _1c1873619_buildAssignSt(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c406eb_UseExpr> _1c187395a_buildUseExpr(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Any _1c1873c9b_buildSt(_1c18675a8_scopeParser*, jule::Ptr<_1c1866c17_stmt>*);
inline void _1c187410e_build(_1c18675a8_scopeParser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Ptr<_1c0c4aa14_ScopeTree>*);
inline void _1c1875440_pushErr(_1c1874b7b_exprBuilder*, jule::Ptr<_1c0c25406_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c18757a3_pushSuggestion(_1c1874b7b_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1c0c409e8_TupleExpr> _1c1875ae4_buildTuple(_1c1874b7b_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>>*);
inline jule::Ptr<_1c0c40dc2_LitExpr> _1c1875e35_buildLit(_1c1874b7b_exprBuilder*, jule::Ptr<_1c0c25406_Token>);
inline jule::Any _1c18765b7_buildSingle(_1c1874b7b_exprBuilder*, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0c41752_IdentExpr> _1c1876908_buildBindIdent(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c41dd4_UnaryExpr> _1c1876c49_buildUnary(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c42e3a_SubIdentExpr> _1c187708a_buildObjSubIdent(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c42a61_NsSelectionExpr> _1c18773cb_buildNsSubIdent(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c187771c_buildType(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Any _1c1877a5d_buildSubIdent(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c422ad_VariadicExpr> _1c1877d9e_buildVariadic(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c40124_RangeExpr> _1c18781e0_buildBetweenParentheses(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c42687_CastExpr> _1c1878531_tryBuildCast(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline void _1c187894e_pushArg(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c3ed27_Expr>>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>, jule::Ptr<_1c0c25406_Token>);
inline jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _1c1878c90_buildArgs(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c43a51_FnCallExpr> _1c1879587_buildFnCall(_1c1874b7b_exprBuilder*, jule::Ptr<_1c0c25406_Token>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Any _1c18798c8_buildParenthesesRange(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c4129b_UnsafeExpr> _1c1879c19_buildUnsafeExpr(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c4c6a3_FnDecl> _1c187a05a_buildAnonFn(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Any _1c187a39b_buildUnsafe(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline void _1c187a7b9_pushRangeLitPart(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>, jule::Ptr<_1c0c25406_Token>, jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _1c187ab0a_getBraceRangeLitExprParts(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c44546_FieldExprPair> _1c187ae4b_buildFieldExprPair(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c3ed27_Expr> _1c187b28c_buildStructLitExpr(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _1c187b5cd_buildStructLitExprs(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c44d71_StructLit> _1c187b91e_buildTypedStructLiteral(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c3ed27_Expr> _1c187bc60_buildBraceLitPart(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c45327_BraceLit> _1c187c0a1_buildBraceLit(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Any _1c187c3e2_buildBraceRange(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _1c187c733_getEnumerableParts(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c4634a_SliceExpr> _1c187ca74_buildSlice(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c46cda_IndexingExpr> _1c187d02a_buildIndexing(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>, jule::Slice<jule::Ptr<_1c0c25406_Token>>, jule::Ptr<_1c0c25406_Token>);
inline jule::Ptr<_1c0c4744a_SlicingExpr> _1c187d646_buildSlicing(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Ptr<_1c0c25406_Token>*, jule::Ptr<_1c0c25406_Token>);
inline jule::Any _1c187d987_buildBracketRange(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Any _1c187dcc8_buildExclRight(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Any _1c187e119_buildData(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Any _1c187e515_buildBinop(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::I64);
inline jule::Any _1c187e856_build(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Any _1c187eb97_buildKind(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c3ed27_Expr> _1c187eed8_buildFromTokens(_1c1874b7b_exprBuilder*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline void _1c1885a7c_stop(_1c1885780_parser*);
inline jule::Bool _1c1885d13_stopped(_1c1885780_parser*);
inline void _1c1886231_pushErr(_1c1885780_parser*, jule::Ptr<_1c0c25406_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c1886594_pushSuggestion(_1c1885780_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1c0c3ed27_Expr> _1c18868d5_buildExpr(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c39e10_Directive> _1c1886c26_buildDirective(_1c1885780_parser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline void _1c1886ece_pushDirective(_1c1885780_parser*, jule::Ptr<_1c0c39e10_Directive>);
inline jule::Ptr<_1c0c4aa14_ScopeTree> _1c18873ca_buildScope(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Ptr<_1c0c25406_Token>);
inline __jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool _1c1887881__buildType(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool _1c1887d37_buildType(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1c0c52356_TypeAliasDecl> _1c1888178_buildTypeAliasDecl(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline void _1c18884db_buildVarTypeAndExpr(jule::Ptr<_1c1885780_parser>, jule::Ptr<_1c0c4d781_VarDecl>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline void _1c188884e_buildVarCommon(jule::Ptr<_1c1885780_parser>, jule::Ptr<_1c0c4d781_VarDecl>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline void _1c1888c6c_buildVarBegin(_1c1885780_parser*, jule::Ptr<_1c0c4d781_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c4d781_VarDecl> _1c18890ad_buildVar(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c47bed_GenericDecl> _1c18893ee_buildGeneric(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>> _1c18897ea_buildGenerics(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Ptr<_1c0c25406_Token>*);
inline jule::Ptr<_1c0c4b251_ParamDecl> _1c1889b3b_buildSelfParam(_1c1885780_parser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline void _1c188a059_paramTypeBegin(_1c1885780_parser*, jule::Ptr<_1c0c4b251_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline void _1c188a3bc_buildParamType(jule::Ptr<_1c1885780_parser>, jule::Ptr<_1c0c4b251_ParamDecl>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline void _1c188a730_buildParamBody(jule::Ptr<_1c1885780_parser>, jule::Ptr<_1c0c4b251_ParamDecl>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c4b251_ParamDecl> _1c188aa71_buildParam(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline void _1c188ad29_checkParams(_1c1885780_parser*, jule::Slice<jule::Ptr<_1c0c4b251_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1c0c4b251_ParamDecl>> _1c188b225_buildParams(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Bool);
inline __jule_tuple_x_1c0c3d8d6_RetTypeDecl__jule_tuple_bool _1c188b621_buildMultiRetType(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::I64*);
inline __jule_tuple_x_1c0c3d8d6_RetTypeDecl__jule_tuple_bool _1c188ba1c_buildRetType(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::I64*);
inline jule::Ptr<_1c0c4c6a3_FnDecl> _1c188bec3_buildFnPrototype(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1c0c4c6a3_FnDecl> _1c188c479_buildFn(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1c0c25406_Token>> _1c188c7ba_getUseDeclSelectors(_1c1885780_parser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline void _1c188cb2d_buildBindUseDecl(_1c1885780_parser*, jule::Ptr<_1c0c53863_UseDecl>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline void _1c188ce91_buildStdUseDecl(_1c1885780_parser*, jule::Ptr<_1c0c53863_UseDecl>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline void _1c188d304_buildIdentUseDecl(_1c1885780_parser*, jule::Ptr<_1c0c53863_UseDecl>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline void _1c188d667_parseUseDecl(_1c1885780_parser*, jule::Ptr<_1c0c53863_UseDecl>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c53863_UseDecl> _1c188da63_buildUseDecl(_1c1885780_parser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>, jule::Bool);
inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c188de5e_buildTypeEnumItemKind(jule::Ptr<_1c1885780_parser>, jule::I64*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Slice<jule::Ptr<_1c0c55205_TypeEnumItemDecl>> _1c188e2a0_buildTypeEnumItems(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c55865_TypeEnumDecl> _1c188e5e1_buildTypeEnumDecl(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c3ed27_Expr> _1c188e9dc_buildEnumItemExpr(jule::Ptr<_1c1885780_parser>, jule::I64*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Slice<jule::Ptr<_1c0c53d19_EnumItemDecl>> _1c188ed2d_buildEnumItems(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c548ca_EnumDecl> _1c189016e_buildEnumDecl(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Any _1c18904b0_buildNodeEnumDecl(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c55b2e_FieldDecl> _1c1890801_buildField(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Slice<jule::Ptr<_1c0c55b2e_FieldDecl>> _1c1890b42_buildStructDeclFields(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c56525_StructDecl> _1c1890e83_buildStructDecl(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline void _1c189123b_checkMethodReceiver(_1c1885780_parser*, jule::Ptr<_1c0c4c6a3_FnDecl>*);
inline void _1c189159e_buildTraitBody(jule::Ptr<_1c1885780_parser>, jule::Ptr<_1c0c56c62_TraitDecl>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c56c62_TraitDecl> _1c18918e0_buildTraitDecl(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c4c6a3_FnDecl> _1c1891c31_buildBindFn(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c4d781_VarDecl> _1c1892072_buildBindVar(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c56525_StructDecl> _1c18923b3_buildBindStruct(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c52356_TypeAliasDecl> _1c1892704_buildBindTypeAlias(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Ptr<_1c0c53863_UseDecl> _1c1892a45_buildBindUse(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Any _1c1892d86_buildBind(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c4c6a3_FnDecl> _1c18931c7_getMethod(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline void _1c189353a_parseImplBody(jule::Ptr<_1c1885780_parser>, jule::Ptr<_1c0c573c2_Impl>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c573c2_Impl> _1c189387b_buildImpl(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Any _1c1893bbc_buildNodeData(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline void _1c1893e75_applyFnMeta(_1c1885780_parser*, jule::Ptr<_1c0c4c6a3_FnDecl>*);
inline void _1c189422d_applyMeta(_1c1885780_parser*, _1c0c399e2_Node*);
inline void _1c18944d6_pushUseDecl(jule::Ptr<_1c1885780_parser>, jule::Ptr<_1c0c53863_UseDecl>*);
inline jule::Bool _1c1894827_pushMetaNodes(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline _1c0c399e2_Node _1c1894b68_parseNode(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline void _1c1894e21_appendNode(jule::Ptr<_1c1885780_parser>, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline void _1c18953e9_removeRange(_1c1885780_parser*, jule::I64, jule::U64, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Slice<jule::I64>*);
inline void _1c1895817_pushWrongOrderCloseErr(_1c1885780_parser*, jule::Ptr<_1c0c25406_Token>*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Slice<jule::I64>*);
inline void _1c1895ce0_pushRangeClose(_1c1885780_parser*, jule::Ptr<_1c0c25406_Token>, jule::U64, jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::Slice<jule::I64>*);
inline void _1c1896098_checkRanges(_1c1885780_parser*, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline void _1c1896351_parse(jule::Ptr<_1c1885780_parser>, jule::Ptr<_1c0c2abc0_File>*);
inline void _1c1897b8d_pushErr(_1c18975e9_typeBuilder*, jule::Ptr<_1c0c25406_Token>, jule::Str);
inline void _1c1898001_pushSuggestion(_1c18975e9_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c1898287_buildNamespace(_1c18975e9_typeBuilder*);
inline jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> _1c189851d_buildGenerics(_1c18975e9_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _1c18987a4_identGenerics(_1c18975e9_typeBuilder*);
inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c1898a3a_buildIdent(_1c18975e9_typeBuilder*);
inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c1898cc1_buildCppLink(_1c18975e9_typeBuilder*);
inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c1899057_buildFn(_1c18975e9_typeBuilder*);
inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c18992dd_buildPtr(_1c18975e9_typeBuilder*);
inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c1899574_buildSptr(_1c18975e9_typeBuilder*);
inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c189980a_buildSlc(_1c18975e9_typeBuilder*);
inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c1899a91_buildArr(_1c18975e9_typeBuilder*);
inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c1899d27_buildMap(_1c18975e9_typeBuilder*);
inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c189a0ad_buildEnumerable(_1c18975e9_typeBuilder*);
inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c189a344_step(_1c18975e9_typeBuilder*);
inline __jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool _1c189a5ca_build(_1c18975e9_typeBuilder*);
inline void _1c10b7523_pushErr(_1c10b6ec3_directiveEval*, jule::Ptr<_1c0c25406_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _1c10b791e_splitOperans(_1c10b6ec3_directiveEval*, jule::U64, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Bool _1c10b7c60_evalDirectiveIdent(_1c10b6ec3_directiveEval*, jule::Str);
inline jule::Bool _1c10b80a1_evalDirectivePart(_1c10b6ec3_directiveEval*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Bool _1c10b8337_eval(_1c10b6ec3_directiveEval*);
inline jule::Ptr<_1c189b5dc_JuleImporter> static__1c189b9d8_New(_1c10b5a1b_CompileInfo);
inline jule::Slice<jule::Ptr<_1c0cd353b_ImportInfo>> _1c189bc6e_AllPackages(_1c189b5dc_JuleImporter*);
inline void _1c189c1ae_SetModPath(_1c189b5dc_JuleImporter*, jule::Str);
inline jule::Str _1c189c445_GetModPath(_1c189b5dc_JuleImporter*);
inline jule::Str _1c189c786_ModById(_1c189b5dc_JuleImporter*, jule::I64);
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c189cac7_GetImport(_1c189b5dc_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1c0c38a46_Ast__jule_tuple_s_21ce0c86b_Log _1c189cec3_ImportPackage(_1c189b5dc_JuleImporter*, jule::Str, jule::Bool);
inline void _1c189d27b_Imported(_1c189b5dc_JuleImporter*, jule::Ptr<_1c0cd353b_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_21ce0c86b_Log _1c189d6aa_isPassBuildDirectives(_1c189b5dc_JuleImporter*, jule::Ptr<_1c0c38a46_Ast>*);
inline jule::Bool _1ab8d1acc_isCommonOrdered(jule::Slice<jule::Ptr<_1c0c5b64b_Struct>>, jule::Ptr<_1c0c5b64b_Struct>);
inline jule::Bool _1ab8d65e8_isCommonOrdered(jule::Slice<jule::Ptr<_1c0d2b94c_Var>>, jule::Ptr<_1c0d2b94c_Var>);
inline void _1ab8cd6de_orderCommon(jule::Slice<jule::Ptr<_1c0c5b64b_Struct>>*);
inline void _1ab8d246d_orderCommon(jule::Slice<jule::Ptr<_1c0d2b94c_Var>>*);
inline void static__1c18a223b_orderStructures(jule::Slice<jule::Ptr<_1c0c5b64b_Struct>>*);
inline void static__1c18a246c_orderVars(jule::Slice<jule::Ptr<_1c0d2b94c_Var>>*);
inline void _1c1a1779c_optimizeChild(jule::Ptr<_1c1a172e6_scopeDeadCode>, jule::Ptr<_1c0cb210d_Scope>*);
inline void _1c1a17a55_optimizeBodyChildExceptional(jule::Ptr<_1c1a172e6_scopeDeadCode>, jule::Ptr<_1c0cb210d_Scope>*);
inline void _1c1a17d0d_optimizeBodyChild(jule::Ptr<_1c1a172e6_scopeDeadCode>, jule::Ptr<_1c0cb210d_Scope>*);
inline void _1c1a180b6_optimizeExprModel(jule::Ptr<_1c1a172e6_scopeDeadCode>, jule::Any*);
inline void _1c1a182b4_eliminateFollowed(_1c1a172e6_scopeDeadCode*);
inline void _1c1a1856c_pushGoto(jule::Ptr<_1c1a172e6_scopeDeadCode>, jule::Ptr<_1c0cb4d7a_GotoSt>);
inline void _1c1a18825_pushLabel(jule::Ptr<_1c1a172e6_scopeDeadCode>, jule::Ptr<_1c0cb49a1_Label>);
inline void _1c1a18acd_optimizeRangeIter(jule::Ptr<_1c1a172e6_scopeDeadCode>, jule::Ptr<_1c0cb3e45_RangeIter>);
inline void _1c1a18d86_optimizeWhileIter(jule::Ptr<_1c1a172e6_scopeDeadCode>, jule::Ptr<_1c0cb34e9_WhileIter>);
inline void _1c1a1913e_optimizeInfIter(jule::Ptr<_1c1a172e6_scopeDeadCode>, jule::Ptr<_1c0cb3043_InfIter>);
inline void _1c1a193e7_optimizeConditional(jule::Ptr<_1c1a172e6_scopeDeadCode>, jule::Ptr<_1c0cb2c46_Conditional>);
inline void _1c1a196a0_optimizeMatch(jule::Ptr<_1c1a172e6_scopeDeadCode>, jule::Ptr<_1c0cb6244_Match>);
inline void _1c1a19958_optimizeAssign(jule::Ptr<_1c1a172e6_scopeDeadCode>, jule::Ptr<_1c0cb570a_Assign>);
inline void _1c1a19c11_optimizeMultiAssign(jule::Ptr<_1c1a172e6_scopeDeadCode>, jule::Ptr<_1c0cb5ad4_MultiAssign>);
inline void _1c1a19eb9_optimizeStmt(jule::Ptr<_1c1a172e6_scopeDeadCode>, jule::Any);
inline void _1c1a1a1b7_optimizeStmts(jule::Ptr<_1c1a172e6_scopeDeadCode>);
inline _1c1a1b54d_exprDeadCode static__1c1a1bb8b_new(jule::Ptr<_1c1a172e6_scopeDeadCode>*);
inline void _1c1a1be44_binary(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c63862_BinopExprModel>);
inline void _1c1a1c1ec_unary(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c63c3b_UnaryExprModel>);
inline void _1c1a1c4a5_structureLit(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c64610_StructLitExprModel>);
inline void _1c1a1c75d_allocStructure(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c6490c_AllocStructLitExprModel>);
inline void _1c1a1ca16_casting(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c64e90_CastingExprModel>);
inline void _1c1a1ccbe_args(_1c1a1b54d_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1c1a1d077_funcCall(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c65842_FnCallExprModel>);
inline void _1c1a1d330_slice(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c65c1b_SliceExprModel>);
inline void _1c1a1d5d8_array(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c68c63_ArrayExprModel>);
inline void _1c1a1d891_indexing(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c661c2_IndexingExprModel>);
inline void _1c1a1db49_anonFunc(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c6659b_AnonFnExprModel>);
inline void _1c1a1de02_mapExpr(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c66e2b_MapExprModel>);
inline void _1c1a1e1aa_slicing(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c674ae_SlicingExprModel>);
inline void _1c1a1e463_traitSub(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c67a42_TraitSubIdentExprModel>);
inline void _1c1a1e71b_structureSub(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c683d3_StructSubIdentExprModel>);
inline void _1c1a1e9c4_tuple(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c69060_TupleExprModel>);
inline void _1c1a1ec7c_newCall(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c69bdc_BuiltinNewCallExprModel>);
inline void _1c1a20035_outCall(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c69439_BuiltinOutCallExprModel>);
inline void _1c1a202dd_outlnCall(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c69813_BuiltinOutlnCallExprModel>);
inline void _1c1a20596_panicCall(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c6a0b6_BuiltinPanicCallExprModel>);
inline void _1c1a2084e_assertCall(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c6a56c_BuiltinAssertCallExprModel>);
inline void _1c1a20b07_errorCall(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c6c173_BuiltinErrorCallExprModel>);
inline void _1c1a20db0_makeCall(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c6aa23_BuiltinMakeCallExprModel>);
inline void _1c1a21168_appendCall(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c6adec_BuiltinAppendCallExprModel>);
inline void _1c1a21421_lenCall(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c6b1e9_BuiltinLenCallExprModel>);
inline void _1c1a216c9_capCall(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c6b4e6_BuiltinCapCallExprModel>);
inline void _1c1a21982_deleteCall(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c6b8c0_BuiltinDeleteCallExprModel>);
inline void _1c1a21c3a_sizeof(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c67c2e_SizeofExprModel>);
inline void _1c1a21ee3_alignof(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c6c89e_AlignofExprModel>);
inline void _1c1a2229b_integratedToStr(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c6ce98_IntegratedToStrExprModel>);
inline void _1c1a22554_free(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c6d66e_FreeExprModel>);
inline void _1c1a2280c_backendEmit(_1c1a1b54d_exprDeadCode*, jule::Ptr<_1c0c6d372_BackendEmitExprModel>);
inline void _1c1a22ab5_optimize(_1c1a1b54d_exprDeadCode*, jule::Any*);
inline jule::Ptr<_1c0eb1ab0_scopeOptimizer> static__1c0eb20ee_new(jule::Ptr<_1c0cb210d_Scope>);
inline void _1c0eb23a7_setCurrentStmt(_1c0eb1ab0_scopeOptimizer*, jule::Any);
inline void _1c0eb25a5_removeCurrent(_1c0eb1ab0_scopeOptimizer*);
inline void _1c0eb285d_optimizeData(_1c0eb1ab0_scopeOptimizer*, jule::Ptr<_1c0d80352_Data>);
inline void _1c0eb2b16_optimizeVar(_1c0eb1ab0_scopeOptimizer*, jule::Ptr<_1c0d2b94c_Var>);
inline void _1c0eb2dbe_optimizeConditional(_1c0eb1ab0_scopeOptimizer*, jule::Ptr<_1c0cb2c46_Conditional>);
inline void _1c0eb32dc_buildDefaultConstantTrueCase(_1c0eb1ab0_scopeOptimizer*, jule::Ptr<_1c0cb6d7c_Case>, jule::I64*, jule::Ptr<_1c0cb6244_Match>*);
inline void _1c0eb3595_optimizeMatch(_1c0eb1ab0_scopeOptimizer*, jule::Ptr<_1c0cb6244_Match>);
inline void _1c0eb384d_optimizeRangeIter(_1c0eb1ab0_scopeOptimizer*, jule::Ptr<_1c0cb3e45_RangeIter>);
inline void _1c0eb3b06_optimizeWhileIter(_1c0eb1ab0_scopeOptimizer*, jule::Ptr<_1c0cb34e9_WhileIter>);
inline jule::Bool _1c0eb3e47_substr(_1c0eb1ab0_scopeOptimizer*, jule::Ptr<_1c0cb570a_Assign>);
inline jule::Bool _1c0eb4288_strAssign(_1c0eb1ab0_scopeOptimizer*, jule::Ptr<_1c0cb570a_Assign>);
inline jule::Bool _1c0eb45c9_sliceAssign(_1c0eb1ab0_scopeOptimizer*, jule::Ptr<_1c0cb570a_Assign>);
inline void _1c0eb4882_optimizeAssign(_1c0eb1ab0_scopeOptimizer*, jule::Ptr<_1c0cb570a_Assign>);
inline jule::Bool _1c0eb4bc3_tryOptimizeSwap(_1c0eb1ab0_scopeOptimizer*, jule::Ptr<_1c0cb5ad4_MultiAssign>*);
inline void _1c0eb4e7b_optimizeMultiAssign(_1c0eb1ab0_scopeOptimizer*, jule::Ptr<_1c0cb5ad4_MultiAssign>);
inline void _1c0eb5234_optimizeRet(_1c0eb1ab0_scopeOptimizer*, jule::Ptr<_1c0cb780b_RetSt>);
inline void _1c0eb54dc_optimizeStmt(_1c0eb1ab0_scopeOptimizer*, jule::Any);
inline void _1c0eb5795_optimizeChild(_1c0eb1ab0_scopeOptimizer*, jule::Ptr<_1c0cb210d_Scope>);
inline void _1c0eb5993_optimize(_1c0eb1ab0_scopeOptimizer*);
inline void static__1c0eb82e2_optimize(jule::Any*);
inline jule::Bool _1c0eb8633_strCond(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c63862_BinopExprModel>);
inline void _1c0eb88db_binary(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c63862_BinopExprModel>);
inline void _1c0eb8b94_unary(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c63c3b_UnaryExprModel>);
inline void _1c0eb8e4c_structureLit(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c64610_StructLitExprModel>);
inline void _1c0eb9205_allocStructure(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c6490c_AllocStructLitExprModel>);
inline void _1c0eb94ad_casting(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c64e90_CastingExprModel>);
inline void _1c0eb9766_args(_1c0eb7c92_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1c0eb9a1e_scope(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0cb210d_Scope>*);
inline jule::Bool _1c0eb9d60_optimizeSpecialFuncCalls(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c65842_FnCallExprModel>*);
inline void _1c0eba118_funcCall(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c65842_FnCallExprModel>);
inline void _1c0eba3c1_slice(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c65c1b_SliceExprModel>);
inline void _1c0eba679_array(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c68c63_ArrayExprModel>);
inline void _1c0eba932_indexing(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c661c2_IndexingExprModel>);
inline void _1c0ebabda_anonFunc(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c6659b_AnonFnExprModel>);
inline void _1c0ebae93_mapExpr(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c66e2b_MapExprModel>);
inline void _1c0ebb24b_slicing(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c674ae_SlicingExprModel>);
inline void _1c0ebb504_traitSub(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c67a42_TraitSubIdentExprModel>);
inline void _1c0ebb7ac_structureSub(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c683d3_StructSubIdentExprModel>);
inline void _1c0ebba65_tuple(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c69060_TupleExprModel>);
inline void _1c0ebbd1d_newCall(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c69bdc_BuiltinNewCallExprModel>);
inline void _1c0ebc0c6_outCall(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c69439_BuiltinOutCallExprModel>);
inline void _1c0ebc37e_outlnCall(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c69813_BuiltinOutlnCallExprModel>);
inline void _1c0ebc637_panicCall(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c6a0b6_BuiltinPanicCallExprModel>);
inline void _1c0ebc8e0_assertCall(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c6a56c_BuiltinAssertCallExprModel>);
inline void _1c0ebcb98_errorCall(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c6c173_BuiltinErrorCallExprModel>);
inline void _1c0ebce51_makeCall(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c6aa23_BuiltinMakeCallExprModel>);
inline void _1c0ebd209_appendCall(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c6adec_BuiltinAppendCallExprModel>);
inline void _1c0ebd4b2_lenCall(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c6b1e9_BuiltinLenCallExprModel>);
inline void _1c0ebd76a_capCall(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c6b4e6_BuiltinCapCallExprModel>);
inline void _1c0ebda23_deleteCall(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c6b8c0_BuiltinDeleteCallExprModel>);
inline void _1c0ebdccb_sizeof(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c67c2e_SizeofExprModel>);
inline void _1c0ebe084_alignof(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c6c89e_AlignofExprModel>);
inline void _1c0ebe33c_integratedToStr(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c6ce98_IntegratedToStrExprModel>);
inline void _1c0ebe5e5_free(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c6d66e_FreeExprModel>);
inline void _1c0ebe89d_backendEmit(_1c0eb7c92_exprOptimizer*, jule::Ptr<_1c0c6d372_BackendEmitExprModel>);
inline void _1c0ebea9b_do(_1c0eb7c92_exprOptimizer*);
inline jule::Ptr<_1c1a2390c_Optimizer> static__1c1a23d4c_New(jule::Ptr<_1c189de2a_IR>*);
inline void _1c1a24105_optimizeGlobal(_1c1a2390c_Optimizer*, jule::Ptr<_1c0d2b94c_Var>*);
inline void _1c1a243ad_optimizeFunction(_1c1a2390c_Optimizer*, jule::Ptr<_1c0c715a6_Fn>*);
inline void _1c1a24666_optimizeStruct(_1c1a2390c_Optimizer*, jule::Ptr<_1c0c5b64b_Struct>*);
inline void _1c1a2491e_optimizeGlobals(_1c1a2390c_Optimizer*, jule::Ptr<_1c0cd6462_Package>*);
inline void _1c1a24bc7_optimizeFunctions(_1c1a2390c_Optimizer*, jule::Ptr<_1c0cd6462_Package>*);
inline void _1c1a24e80_optimizeStructs(_1c1a2390c_Optimizer*, jule::Ptr<_1c0cd6462_Package>*);
inline void _1c1a25238_optimizePackage(_1c1a2390c_Optimizer*, jule::Ptr<_1c0cd6462_Package>*);
inline void _1c1a25436_Optimize(_1c1a2390c_Optimizer*);
inline void static__1c1a259ca_Reset(void);
inline void static__1c1a4a758_Print(jule::Str, jule::Str);
inline void static__1c1a4d261_LogFlat(_21ce0c86b_Log*);
inline void static__1c1a4d492_LogError(_21ce0c86b_Log*);
inline void static__1c1a4d6c3_Log(_21ce0c86b_Log*);
inline void static__1c1a4d904_PrintLogs(jule::Slice<_21ce0c86b_Log>*);
inline _1a885aeaa_Time static__1a885b362_Unix(jule::U64);
inline _1a885aeaa_Time static__1a885b571_Now(void);
inline _1a885a7d4_AbsTime _1a885cc59_Abs(_1a885aeaa_Time*);
inline jule::Ptr<_1a877de22_scopeCoder> static__1a877e53d_new(jule::Ptr<_1a8865459_ObjectCoder>*);
inline void _1abb9e691_iterHead(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb3e45_RangeIter>*, jule::Bool*, jule::Str*);
inline void _1a877ec14_rangeIndexIter(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb3e45_RangeIter>*);
inline void _1a877eebc_rangeHashmapIter(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb3e45_RangeIter>*);
inline void _1a8780275_ifCase(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb252b_If>);
inline void _1a878052d_conditional(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb2c46_Conditional>);
inline void _1a87807d6_infIter(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb3043_InfIter>);
inline void _1a8780a8e_whileIter(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb34e9_WhileIter>);
inline void _1a8780d47_rangeIter(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb3e45_RangeIter>);
inline void _1a8781100_cont(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb42ca_ContSt>);
inline void _1a87813a8_label(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb49a1_Label>);
inline void _1a8781661_gotoSt(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb4d7a_GotoSt>);
inline void _1a8781919_postfix(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb5254_Postfix>);
inline void _1a8781bc2_assign(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb570a_Assign>);
inline void _1a8781e7a_mapLookupAssign(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb5ad4_MultiAssign>*);
inline void _1a8782233_multiAssignTup(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb5ad4_MultiAssign>*);
inline void _1a87824db_multiAssignFn(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb5ad4_MultiAssign>*);
inline void _1a8782794_multiAssign(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb5ad4_MultiAssign>);
inline jule::Fn<void(void)> _1a8782ad5_matchExpr(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb6244_Match>);
inline void _1a8782e48_case(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb6244_Match>, jule::Ptr<_1c0cb6d7c_Case>);
inline void _1a8783201_matchSt(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb6244_Match>);
inline void _1a87834a9_fallSt(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb7476_FallSt>);
inline void _1a8783762_breakSt(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb46a4_BreakSt>);
inline void _1a8783a1a_setResult(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb780b_RetSt>);
inline void _1a8783cc3_retSt(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb780b_RetSt>);
inline void _1a878407b_var(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0d2b94c_Var>);
inline void _1a8784334_mutSlicing(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0eae717_MutSlicingExprModel>);
inline void _1a87845dc_swap(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0ead43b_SwapExprModel>);
inline void _1a8784895_st(jule::Ptr<_1a877de22_scopeCoder>, jule::Any);
inline void _1a8784b4d_scopeStmts(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb210d_Scope>*);
inline void _1a8784e06_scope(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0cb210d_Scope>);
inline void _1a87851ae_funcScope(jule::Ptr<_1a877de22_scopeCoder>, jule::Ptr<_1c0c744aa_FnIns>);
inline jule::Ptr<_1a878813a_exprCoder> static__1a8788503_new(jule::Ptr<_1a8865459_ObjectCoder>*);
inline void _1a87887ab_string(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_2036445ea_Const>*);
inline void _1a8788a64_boolean(jule::Ptr<_1a878813a_exprCoder>, jule::Bool);
inline void _1a8788c62_nilLit(jule::Ptr<_1a878813a_exprCoder>);
inline jule::Bool _1a87890a3_ftoaSpecialCases(jule::Ptr<_1a878813a_exprCoder>, jule::F64*);
inline void _1a878935b_float32(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_2036445ea_Const>*);
inline void _1a8789614_float64(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_2036445ea_Const>*);
inline void _1a87898bc_constant(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_2036445ea_Const>);
inline void _1a8789cda_divByZeroBinary(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c25406_Token>*, jule::Ptr<_1c0c63367_OperandExprModel>*, jule::Ptr<_1c0c63367_OperandExprModel>*);
inline void _1a878a093_unsafeBinary(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c63862_BinopExprModel>);
inline void _1a878a34b_binary(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c63862_BinopExprModel>);
inline void _1a878a604_var(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0d2b94c_Var>);
inline void _1a878a8ac_structureIns(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c5e3c9_StructIns>);
inline void _1a878ab65_unary(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c63c3b_UnaryExprModel>);
inline void _1a878ae1d_structureLit(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c64610_StructLitExprModel>);
inline void _1a8791088_allocStructure(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6490c_AllocStructLitExprModel>);
inline void _1a87912db_possibleRefExpr(jule::Ptr<_1a878813a_exprCoder>, jule::Any);
inline void _1a8791709_castTraitFromTrait(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c64e90_CastingExprModel>*, jule::Ptr<_1c0c84850_Trait>, jule::Ptr<_1c0c84850_Trait>);
inline void _1a87919b2_casting(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c64e90_CastingExprModel>);
inline void _1a8791c6a_models(jule::Ptr<_1a878813a_exprCoder>, jule::Slice<jule::Any>);
inline void _1a8792023_args(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c65842_FnCallExprModel>*);
inline void _1a87922cb_modelForCall(jule::Ptr<_1a878813a_exprCoder>, jule::Any);
inline void _1a8792584_pushCallInf(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c65842_FnCallExprModel>*);
inline jule::Bool _1a87928c5_isWrapped(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c65842_FnCallExprModel>*);
inline void _1a8792b7d_pureFuncCall(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c65842_FnCallExprModel>*);
inline void _1a8792e36_coFuncCall(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c65842_FnCallExprModel>*);
inline void _1a8793299_writeUseExpr(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c744aa_FnIns>*, jule::Ptr<_1c0d80352_Data>);
inline void _1a8793552_funcCall(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c65842_FnCallExprModel>);
inline void _1a879380a_slice(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c65c1b_SliceExprModel>);
inline void _1a8793ab3_indexing(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c661c2_IndexingExprModel>);
inline void _1a8793d6b_unsafeIndexing(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0eaed11_UnsafeIndexingExprModel>);
inline void _1a8794124_anonFunc(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6659b_AnonFnExprModel>);
inline void _1a87943cc_mapExpr(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c66e2b_MapExprModel>);
inline void _1a8794685_slicing(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c674ae_SlicingExprModel>);
inline void _1a879493d_traitSub(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c67a42_TraitSubIdentExprModel>);
inline void _1a8794be6_structureSub(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c683d3_StructSubIdentExprModel>);
inline void _1a8794e9e_array(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c68c63_ArrayExprModel>);
inline void _1a8795257_funcInsCommon(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c744aa_FnIns>);
inline void _1a8795510_funcIns(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c744aa_FnIns>);
inline void _1a87957b8_tuple(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c69060_TupleExprModel>);
inline void _1a8795a71_newCall(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c69bdc_BuiltinNewCallExprModel>);
inline void _1a8795d29_outCall(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c69439_BuiltinOutCallExprModel>);
inline void _1a87960d2_outlnCall(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c69813_BuiltinOutlnCallExprModel>);
inline void _1a879638a_panicCall(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6a0b6_BuiltinPanicCallExprModel>);
inline void _1a8796643_assertCall(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6a56c_BuiltinAssertCallExprModel>);
inline void _1a87968eb_errorCall(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6c173_BuiltinErrorCallExprModel>);
inline void _1a8796ba4_copyCall(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6bc99_BuiltinCopyCallExprModel>);
inline void _1a8796e5c_lenCall(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6b1e9_BuiltinLenCallExprModel>);
inline void _1a8797215_capCall(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6b4e6_BuiltinCapCallExprModel>);
inline void _1a87974bd_deleteCall(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6b8c0_BuiltinDeleteCallExprModel>);
inline void _1a8797776_makeCallSlice(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6aa23_BuiltinMakeCallExprModel>*);
inline void _1a8797a2e_makeCallStr(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6aa23_BuiltinMakeCallExprModel>*);
inline void _1a8797cd7_makeCall(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6aa23_BuiltinMakeCallExprModel>);
inline void _1a8798090_pushToSlice(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0eb0240_PushToSliceExprModel>);
inline void _1a8798348_appendToSlice(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0eb0619_AppendToSliceExprModel>);
inline void _1a8798601_appendCall(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6adec_BuiltinAppendCallExprModel>);
inline void _1a87988a9_sizeof(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c67c2e_SizeofExprModel>);
inline void _1a8798b62_alignof(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6c89e_AlignofExprModel>);
inline void _1a8798e1a_runeLit(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6cb9b_RuneExprModel>);
inline void _1a87991c3_structureStatic(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c68889_StructStaticIdentExprModel>);
inline void _1a879947b_integratedToStr(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6ce98_IntegratedToStrExprModel>);
inline void _1a8799734_backendEmit(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6d372_BackendEmitExprModel>);
inline void _1a87999dc_free(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0c6d66e_FreeExprModel>);
inline void _1a8799c95_strComp(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0eae184_StrCompExprModel>);
inline void _1a879a04d_inlineStdInternalNosafeStobs(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0eb0916_InlineStdInternalNosafeStobs>);
inline void _1a879a306_emptyCompare(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0ead859_EmptyCompareExprModel>);
inline void _1a879a5ae_model(jule::Ptr<_1a878813a_exprCoder>, jule::Any);
inline void _1a879a867_initExpr(jule::Ptr<_1a878813a_exprCoder>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Ptr<_1a879d8d1_TestCoder> static__1a879dd21_New(jule::Ptr<_1a8865459_ObjectCoder>*);
inline jule::Ptr<_1c0cd353b_ImportInfo> _1a879e0a7_findTestingPackage(jule::Ptr<_1a879d8d1_TestCoder>);
inline void _1a879e360_appendTest(jule::Ptr<_1a879d8d1_TestCoder>, jule::Ptr<_1c0c744aa_FnIns>);
inline void _1a879e618_appendPackageTests(jule::Ptr<_1a879d8d1_TestCoder>, jule::Ptr<_1c0cd6462_Package>*);
inline jule::Bool _1a879e89e_readyTestingPackage(jule::Ptr<_1a879d8d1_TestCoder>);
inline void _1a879ea9c_callTmReset(jule::Ptr<_1a879d8d1_TestCoder>);
inline void _1a879ec9a_callTmFailed(jule::Ptr<_1a879d8d1_TestCoder>);
inline void _1a879ee98_callTmSkipped(jule::Ptr<_1a879d8d1_TestCoder>);
inline void _1a87a0196_Serialize(jule::Ptr<_1a879d8d1_TestCoder>);
inline void static__1a87a1ae3_writeIdentTo(_21cd5e16e_StrBuilder*, jule::Str*);
inline jule::Str static__1a87a1e67_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1a87a2396_toLocal(jule::I64, jule::I64, jule::Str*);
inline jule::Str static__1a87a2660_func(jule::Ptr<_1c0c715a6_Fn>*);
inline jule::Str static__1a87a2929_funcIns(jule::Ptr<_1c0c744aa_FnIns>*);
inline jule::Str static__1a87a2be3_traitDecl(jule::Ptr<_1c0c84850_Trait>);
inline jule::Str static__1a87a2eac_param(jule::Ptr<_1c0c6ead2_Param>*);
inline jule::Str static__1a87a3276_structure(jule::Ptr<_1c0c5b64b_Struct>*);
inline jule::Str static__1a87a3540_structureIns(jule::Ptr<_1c0c5e3c9_StructIns>*);
inline jule::Str static__1a87a3809_field(jule::Ptr<_1c0c58758_Field>*);
inline jule::Str static__1a87a3ac3_var(jule::Ptr<_1c0d2b94c_Var>);
inline jule::Str static__1a87a3d8c_iterBegin(jule::Uintptr);
inline jule::Str static__1a87a4156_iterEnd(jule::Uintptr);
inline jule::Str static__1a87a4420_iterNext(jule::Uintptr);
inline jule::Str static__1a87a46d9_label(jule::Uintptr);
inline jule::Str static__1a87a49a3_matchEnd(jule::Uintptr);
inline jule::Str static__1a87a4c6c_caseBegin(jule::Uintptr);
inline jule::Str _1a8874996_Str(_1a8874611_customType*);
inline jule::Bool _1a8874cd7_Equal(jule::Ptr<_1a8874611_customType>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Ptr<_1a8875216_typeCoder> static__1a8875755_new(jule::Ptr<_1a8865459_ObjectCoder>*);
inline jule::Str _1a8875a96_toType(_1a8875216_typeCoder*, jule::Str);
inline jule::Str _1a8875dd7_prim(_1a8875216_typeCoder*, jule::Ptr<_1c0db80e3_Prim>);
inline jule::Str _1a8876228_tuple(_1a8875216_typeCoder*, jule::Ptr<_1c0dbd1d6_Tuple>);
inline jule::Str _1a8876569_asSptr(_1a8875216_typeCoder*, jule::Str);
inline jule::Str _1a88768aa_sptr(_1a8875216_typeCoder*, jule::Ptr<_1c0dbbb1e_Sptr>);
inline jule::Str _1a8876beb_ptr(_1a8875216_typeCoder*, jule::Ptr<_1c0dc03d6_Ptr>);
inline jule::Str _1a887703c_enumDecl(_1a8875216_typeCoder*, jule::Ptr<_1c0c8704a_Enum>);
inline jule::Str _1a887737d_typeEnumDecl(_1a8875216_typeCoder*, jule::Ptr<_1c0c88755_TypeEnum>);
inline jule::Str _1a88776be_asSlice(_1a8875216_typeCoder*, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Str _1a8877a10_slice(_1a8875216_typeCoder*, jule::Ptr<_1c0dbc5e2_Slc>);
inline jule::Str _1a8877d51_mapType(_1a8875216_typeCoder*, jule::Ptr<_1c0dbdc86_Map>);
inline jule::Str _1a8878192_traitIdent(_1a8875216_typeCoder*, jule::Str);
inline jule::Str _1a88784d3_traitDecl(_1a8875216_typeCoder*, jule::Ptr<_1c0c84850_Trait>);
inline jule::Str _1a8878824_structure(_1a8875216_typeCoder*, jule::Ptr<_1c0c5b64b_Struct>);
inline jule::Str _1a8878b65_structureIns(_1a8875216_typeCoder*, jule::Ptr<_1c0c5e3c9_StructIns>);
inline jule::Str _1a8878ea6_array(_1a8875216_typeCoder*, jule::Ptr<_1c0dbe913_Arr>);
inline jule::Str _1a8879638_paramIns(_1a8875216_typeCoder*, jule::Ptr<_1c0c7350e_ParamIns>*);
inline void _1a8879cdc_funcInsResult(_1a8875216_typeCoder*, _21cd5e16e_StrBuilder*, jule::Ptr<_1c0c744aa_FnIns>*);
inline jule::Str _1a887a12d_anonFunc(_1a8875216_typeCoder*, jule::Ptr<_1c0c744aa_FnIns>);
inline jule::Str _1a887a46e_func(_1a8875216_typeCoder*, jule::Ptr<_1c0c744aa_FnIns>);
inline jule::Str _1a887a7b0_kind(_1a8875216_typeCoder*, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Ptr<_1a887cedd_resultCoder> static__1a887d4b6_new(jule::Ptr<_1a8875216_typeCoder>*);
inline void _1a887d829_ptr(_1a887cedd_resultCoder*, _21cd5e16e_StrBuilder*, jule::Ptr<_1c0dc03d6_Ptr>);
inline void _1a887db8c_sptr(_1a887cedd_resultCoder*, _21cd5e16e_StrBuilder*, jule::Ptr<_1c0dbbb1e_Sptr>);
inline void _1a887e000_mapType(_1a887cedd_resultCoder*, _21cd5e16e_StrBuilder*, jule::Ptr<_1c0dbdc86_Map>);
inline void _1a887e363_slice(_1a887cedd_resultCoder*, _21cd5e16e_StrBuilder*, jule::Ptr<_1c0dbc5e2_Slc>);
inline void _1a887e6c6_arr(_1a887cedd_resultCoder*, _21cd5e16e_StrBuilder*, jule::Ptr<_1c0dbe913_Arr>);
inline void _1a887ea39_func(_1a887cedd_resultCoder*, _21cd5e16e_StrBuilder*, jule::Ptr<_1c0c744aa_FnIns>);
inline void _1a887ed9c_tup(_1a887cedd_resultCoder*, _21cd5e16e_StrBuilder*, jule::Ptr<_1c0dbd1d6_Tuple>);
inline void _1a8880210_codeMut(_1a887cedd_resultCoder*, _21cd5e16e_StrBuilder*, jule::Ptr<_1c0db0519_TypeKind>*);
inline void _1a8880573_codeMut1(_1a887cedd_resultCoder*, _21cd5e16e_StrBuilder*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Str _1a8880881_code(_1a887cedd_resultCoder*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Str _1ac156461_Name(_1ac156043_Flag*);
inline jule::Str _1ac1565b5_What(_1ac156043_Flag*);
inline void _1ac156719_Reset(_1ac156043_Flag*);
inline jule::I32 _1ac15686d_Short(_1ac156043_Flag*);
inline jule::Str _1ac1597c7_Name(_1ac159b90_Flag*);
inline jule::Str _1ac15991a_What(_1ac159b90_Flag*);
inline void _1ac159e7b_Reset(_1ac159b90_Flag*);
inline jule::I32 _1ac15a0be_Short(_1ac159b90_Flag*);
inline jule::Str _1ac15cec3_Name(_1ac15d38b_Flag*);
inline jule::Str _1ac15d116_What(_1ac15d38b_Flag*);
inline void _1ac15d677_Reset(_1ac15d38b_Flag*);
inline jule::I32 _1ac15d7ba_Short(_1ac15d38b_Flag*);
inline jule::Str _1ac161713_Name(_1ac161acb_Flag*);
inline jule::Str _1ac161856_What(_1ac161acb_Flag*);
inline void _1ac161db7_Reset(_1ac161acb_Flag*);
inline jule::I32 _1ac16200a_Short(_1ac161acb_Flag*);
inline jule::Str _1ac164e0e_Name(_1ac1652c7_Flag*);
inline jule::Str _1ac165052_What(_1ac1652c7_Flag*);
inline void _1ac1655b3_Reset(_1ac1652c7_Flag*);
inline jule::I32 _1ac165706_Short(_1ac1652c7_Flag*);
inline jule::Ptr<_1a8bb627c_FlagSet> static__1a8bb6568_New(void);
inline jule::Trait<_1a8bb46cb_CommonFlag> _1a8bb69db_FindFlag(_1a8bb627c_FlagSet*, jule::Str);
inline jule::Trait<_1a8bb46cb_CommonFlag> _1a8bb6d2c_FindFlagShort(_1a8bb627c_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a8bb7404_Parse(_1a8bb627c_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1ac1652c7_Flag> _1beea0d25_addFlagCommon(_1a8bb627c_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1ac161acb_Flag> _1beea913b_addFlagCommon(_1a8bb627c_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1bee9e065_AddVar(_1a8bb627c_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1beea73c0_AddVar(_1a8bb627c_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1ac17c9d7_parseInteger(_1a8bb8c0d_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1bee53239_parseInteger(_1a8bb8c0d_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1a8bb9527_getData(_1a8bb8c0d_argParser*);
inline jule::VoidExceptional _1a8bb979c_processFlag(_1a8bb8c0d_argParser*, jule::Trait<_1a8bb46cb_CommonFlag>*);
inline jule::VoidExceptional _1a8bb9a55_singleDash(_1a8bb8c0d_argParser*, jule::Str*);
inline jule::VoidExceptional _1a8bb9d0d_doubleDash(_1a8bb8c0d_argParser*, jule::Str*);
inline jule::VoidExceptional _1a8bba00b_tryArg(_1a8bb8c0d_argParser*);
inline jule::VoidExceptional _1a8bba209_parse(_1a8bb8c0d_argParser*);
inline jule::Ptr<_1a8865459_ObjectCoder> static__1a8865855_New(jule::Ptr<_1c189de2a_IR>*, _1a8863941_SerializationInfo);
inline void _1a8865b0d_write(jule::Ptr<_1a8865459_ObjectCoder>, jule::Str);
inline void _1a8865d0b_addIndent(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a8866009_doneIndent(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a8866207_indent(jule::Ptr<_1a8865459_ObjectCoder>);
inline jule::I64 _1a8866548_findAnyType(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::I64 _1a8866889_pushAnyType(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0db0519_TypeKind>);
inline void _1a8866b42_pushResultIns(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c744aa_FnIns>*);
inline void _1a8866dea_pushResult(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c715a6_Fn>*);
inline jule::I64 _1a88672e6_findTypeOffsetS(_1a8865459_ObjectCoder*, jule::Ptr<_1c0c84850_Trait>, jule::Ptr<_1c0c5e3c9_StructIns>);
inline jule::I64 _1a88676e2_findTypeOffset(_1a8865459_ObjectCoder*, jule::Ptr<_1c0c84850_Trait>, jule::Ptr<_1c0db0519_TypeKind>);
inline void _1a8867a55_pushAndWriteMaskMapper(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c84850_Trait>, jule::Ptr<_1c0c84850_Trait>);
inline void _1a8867d0d_locInfo(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c25406_Token>*);
inline void _1a886800b_head(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a8868209_links(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a88684b2_prepareStructure(_1a8865459_ObjectCoder*, jule::Ptr<_1c0c5b64b_Struct>*);
inline void _1a88686b0_prepareStructures(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a8868968_iterPackages(jule::Ptr<_1a8865459_ObjectCoder>, jule::Fn<void(jule::Ptr<_1c0cd6462_Package>*)>);
inline void _1a8868b66_buildTraitMap(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a8868d64_traitDecls(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a886911c_structurePlainDecl(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c5b64b_Struct>*);
inline void _1a886931a_structurePlainDecls(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a88695c3_fieldDecl(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c5d829_FieldIns>*);
inline void _1a886987b_structureDestructor(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c5e3c9_StructIns>*);
inline void _1a8869bde_structureOperatorEq(jule::Ptr<_1a8865459_ObjectCoder>, jule::Str*, jule::Ptr<_1c0c5e3c9_StructIns>*);
inline void _1a886a052_structureOperatorNotEq(jule::Ptr<_1a8865459_ObjectCoder>, jule::Str*, jule::Ptr<_1c0c5e3c9_StructIns>*);
inline void _1a886a470_structureOperator(jule::Ptr<_1a8865459_ObjectCoder>, jule::Str*, jule::Ptr<_1c0c744aa_FnIns>*, jule::Str);
inline void _1a886a728_structureOperators(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c5e3c9_StructIns>*);
inline void _1a886a9d1_structureInsDecl(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c5e3c9_StructIns>*);
inline void _1a886ac89_structureDecl(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c5b64b_Struct>*);
inline void _1a886ae87_structureDecls(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a886b185_structureMethodDecls(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a886b43d_paramsDecls(jule::Ptr<_1a8865459_ObjectCoder>, jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>>*);
inline void _1a886b7a1_funcHead(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c744aa_FnIns>*, jule::Bool);
inline void _1a886bb14_funcDeclIns(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c744aa_FnIns>*, jule::Bool);
inline void _1a886be77_funcDecl(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c715a6_Fn>*, jule::Bool);
inline void _1a886c395_funcDeclTrait(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c84850_Trait>*, jule::Ptr<_1c0c715a6_Fn>*, jule::Bool);
inline void _1a886c593_funcDecls(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a886c906_traitDataTypeMethods(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c84850_Trait>*, jule::Ptr<_1c0c84850_Trait>*);
inline void _1a886cb04_traitDataTypes(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a886cdac_paramIns(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c7350e_ParamIns>*);
inline void _1a886d165_paramsIns(jule::Ptr<_1a8865459_ObjectCoder>, jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>>*);
inline void _1a886d4c8_varInitExpr(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0d2b94c_Var>*, jule::Fn<void(void)>);
inline void _1a886d781_var(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0d2b94c_Var>);
inline void _1a886da39_funcIns(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c744aa_FnIns>*);
inline void _1a886dce2_func(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c715a6_Fn>*);
inline void _1a886e155_funcTrait(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1a8864018_traitHash>*, jule::Ptr<_1c0c715a6_Fn>*);
inline void _1a886e4b8_traitWrapper(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c715a6_Fn>*, jule::Ptr<_1a8864018_traitHash>*);
inline void _1a886e6b6_traitWrappers(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a886ea29_traitDataMethods(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c84850_Trait>*, jule::Ptr<_1a8864018_traitHash>*);
inline void _1a886ed8c_traitData(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1a8864018_traitHash>*, jule::Ptr<_1c0c84850_Trait>*);
inline void _1a887008a_traitDatas(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a8870288_globals(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a8870486_decls(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a887073e_structureMethods(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c5e3c9_StructIns>*);
inline void _1a88709e7_structureOstream(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c5e3c9_StructIns>*);
inline void _1a8870ca0_structureIns(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c5e3c9_StructIns>*);
inline void _1a8871058_structure(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0c5b64b_Struct>*);
inline void _1a8871256_structures(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a8871454_funcs(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a887170c_pushInit(jule::Ptr<_1a8865459_ObjectCoder>, jule::Ptr<_1c0cd6462_Package>*);
inline void _1a887190a_initCaller(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a8871b08_end(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a8871d06_serializeHead(jule::Ptr<_1a8865459_ObjectCoder>);
inline void _1a8872004_Serialize(jule::Ptr<_1a8865459_ObjectCoder>);
inline jule::Ptr<_1c19d3081_ObjectDeadCode> static__1c19d3526_new(jule::Ptr<_1c189de2a_IR>*);
inline jule::Bool _1ab90e313_isLive(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Ptr<_1c0c84850_Trait>*);
inline jule::Bool _1ab914d63_isLive(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Ptr<_1c0c744aa_FnIns>*);
inline jule::Bool _1ab91b276_isLive(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Ptr<_1c0c5e3c9_StructIns>*);
inline jule::Bool _1ab923a97_isLive(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Ptr<_1c0d2b94c_Var>*);
inline void _1ab90e6cb_pushLive(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Ptr<_1c0c84850_Trait>);
inline void _1ab9151e8_pushLive(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Ptr<_1c0c744aa_FnIns>);
inline void _1ab91b809_pushLive(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Ptr<_1c0c5e3c9_StructIns>);
inline void _1ab923e60_pushLive(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Ptr<_1c0d2b94c_Var>);
inline void _1c1a13820_setReferencesAsLive(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Ptr<_1c0c77656_ReferenceStack>*);
inline void _1c1a13ac8_inits(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Ptr<_1c0cd6462_Package>*);
inline void _1c1a13d81_collectLivePackage(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Ptr<_1c0cd6462_Package>*);
inline void _1c1a1407e_collectLive(jule::Ptr<_1c19d3081_ObjectDeadCode>);
inline void _1c1a14337_removeDeadGlobals(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c0d2b94c_Var>>*);
inline void _1c1a145e0_removeDeadFns(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c0c715a6_Fn>>*);
inline void _1c1a14898_removeDeadStructs(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c0c5b64b_Struct>>*);
inline void _1c1a14b51_removeDeadTraits(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c0c84850_Trait>>*);
inline void _1c1a14e09_removeDeadsFile(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Ptr<_1c0d7a12c_SymbolTable>*);
inline void _1c1a151b2_removeDeadsPackage(jule::Ptr<_1c19d3081_ObjectDeadCode>, jule::Ptr<_1c0cd6462_Package>*);
inline void _1c1a153b0_removeDeads(jule::Ptr<_1c19d3081_ObjectDeadCode>);
inline void _1c1a155ad_elimanate(jule::Ptr<_1c19d3081_ObjectDeadCode>);
inline __jule_tuple_x_1c189de2a_IR__jule_tuple_s_21ce0c86b_Log static__1c189e38c_Build(jule::Str, jule::I64);
inline void _1c189e876_appendStructs(_1c189de2a_IR*, jule::Ptr<_1c0cd6462_Package>*, jule::Slice<jule::Ptr<_1c0c5b64b_Struct>>*);
inline jule::Slice<jule::Ptr<_1c0c5b64b_Struct>> _1c189eb0c_GetAllStructures(_1c189de2a_IR*);
inline void _1c189ee70_appendGlobals(_1c189de2a_IR*, jule::Ptr<_1c0cd6462_Package>*, jule::Slice<jule::Ptr<_1c0d2b94c_Var>>*);
inline jule::Slice<jule::Ptr<_1c0d2b94c_Var>> _1c18a0206_GetAllGlobals(_1c189de2a_IR*);
inline void _1c18a0404_Order(_1c189de2a_IR*);
inline jule::Str _1c0c5e74d_Str(_1c0c5e3c9_StructIns*);
inline jule::Bool _1c0c5ea8e_Equal(jule::Ptr<_1c0c5e3c9_StructIns>, jule::Ptr<_1c0db0519_TypeKind>);
inline jule::Bool _1c0c60045_Same(_1c0c5e3c9_StructIns*, jule::Ptr<_1c0c5e3c9_StructIns>);
inline jule::Ptr<_1c0c715a6_Fn> _1c0c60441_FindMethod(_1c0c5e3c9_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0c5d829_FieldIns> _1c0c60782_FindField(_1c0c5e3c9_StructIns*, jule::Str);
inline jule::Ptr<_1c0d2b94c_Var> _1c0c60ac3_FindStatic(_1c0c5e3c9_StructIns*, jule::Str);
inline jule::Ptr<_21d2830a9_Cmd> static__21d2834c7_New(jule::Str);
inline jule::VoidExceptional _21d2836c5_Spawn(_21d2830a9_Cmd*);
inline jule::Exceptional<jule::I64> _21d283b59_Wait(_21d2830a9_Cmd*);
inline jule::VoidExceptional _21d2d34a0_spawn(_21d2830a9_Cmd*);
inline jule::Exceptional<jule::I64> _21d2d3934_wait(_21d2830a9_Cmd*);
inline void _21b93b137_Free(void*);
inline jule::Str _21b96bee2_BytePtrToStr(jule::U8*);
inline jule::I64 _21a958a5c_GetLastErrno(void);
inline jule::I64 _21b97b7b5_Fcntl(jule::I64, jule::I64, jule::I64);
inline jule::I64 _21b97bb39_Stat(jule::U8*, struct stat*);
inline jule::I64 _21b97c068_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _21b97c3dc_Getcwd(jule::U8*, jule::U64);
inline DIR* _21b97c8d7_Opendir(jule::U8*);
inline struct dirent* _21b97cba1_Readdir(DIR*);
inline jule::I64 _21b97ce6a_Closedir(DIR*);
inline jule::I64 _21b97d872_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _21b97db3b_Rmdir(jule::U8*);
inline jule::I64 _21b97de05_Unlink(jule::U8*);
inline jule::I64 _21b9a8b99_Read(jule::I64, void*, jule::U64);
inline jule::I64 _21b9a9040_Close(jule::I64);
inline jule::I64 _21b9a946e_Write(jule::I64, void*, jule::U64);
inline void _21b9a96a0_Exit(jule::I64);
inline jule::Slice<jule::U8> _21b9b7081_Stobs(jule::Str*);
inline jule::I64 _21ba636b0_getLastOsError(void);
inline jule::Slice<jule::Str> _21ba921d3_Args(void);
inline jule::Exceptional<jule::Str> _21ba92678_WorkingDir(void);
inline jule::Exceptional<jule::Str> _21ba93602_getwd(void);
inline jule::Bool _21cb9b077_IsLetter(jule::I32);
inline jule::Bool _21cc13b39_is16(jule::Slice<_21cc11d9b_Range16>, jule::U16);
inline jule::Bool _21cc13ead_is32(jule::Slice<_21cc123c9_Range32>, jule::U32);
inline jule::Bool _21cc147b6_isExcludingLatin(jule::Ptr<_21cc12880_RangeTable>, jule::I32);
inline jule::Bool _21cc14a80_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _21ce5a556_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _21ce5ab61_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _21ce5b9b9_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _21ce5bd3d_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _21ce5c3c1_RuneCountStr(jule::Str);
inline jule::Bool _21ce5c68a_RuneStart(jule::U8);
inline jule::I64 _21cd47971_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _21cd47ca1_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _21cd48169_FindByteStr(jule::Str*, jule::U8);
inline jule::I64 _21cd484dd_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _21cd489b6_Repeat(jule::Str, jule::I64);
inline jule::Bool _21cd48e39_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _21cd492ad_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _21cd49764_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _21cd49aa5_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _21cd49ed4_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _21cd4a897_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _21cd4ac1b_FindLast(jule::Str, jule::Str);
inline jule::I64 _21cd4c0e6_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I64 _21cd4c998_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _21cd4d889_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _21cd4e13c_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _21cd4e4b1_Contains(jule::Str, jule::Str);
inline jule::Bool _21cd5002d_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _21cd503a2_Count(jule::Str, jule::Str);
inline jule::Str _21cd5088b_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _21cd4c635_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _21cd51a35_TrimLeft(jule::Str, jule::Str);
inline void _21cd51d21_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _21cd52519_Trim(jule::Str, jule::Str);
inline jule::Str _21cd5288d_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _21cd6aa4e_Clean(jule::Str);
inline jule::Str _21cd6b126_FromSlash(jule::Str);
inline jule::Str _21cd6b467_Join(jule::Slice<jule::Str>);
inline jule::Str _21cd6b731_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _21cd6b9ea_Abs(jule::Str);
inline jule::Str _21cd6bcb4_Base(jule::Str);
inline jule::Str _21cd6c15a_Dir(jule::Str);
inline jule::Str _21cd6c424_VolumeName(jule::Str);
inline jule::Bool _21cd6d26b_IsPathSep(jule::U8);
inline jule::Bool _21cd6d579_IsAbs(jule::Str);
inline jule::I64 _21cd6d843_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _21cd6db84_abs(jule::Str);
inline jule::Str _21cd6de4d_join(jule::Slice<jule::Str>);
inline jule::I64 _21b9ae41e_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _21d28495c_AtoiBp(jule::U8*, jule::I64);
inline jule::Str _21d2ce336_Itoa(jule::I64);
inline jule::Str _21d2ce644_Utoa(jule::U64);
inline jule::Slice<char*> _21d2d2b97_strSliceToCstrSlice(jule::Slice<jule::Str>*);
inline jule::I64 _21d2d301b_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _21d2d324c_setenv(jule::Slice<jule::Str>*);
inline jule::I64 _21d2d41c6_processErrorFromCode(jule::I64);
inline jule::I64 _21d2d4429_getLastProcessError(void);
inline void _21d2d4c43_Exit(jule::I64);
inline jule::Str _21d2d4e52_Executable(void);
inline jule::Bool _21ce0070a_IsStdHeaderPath(jule::Str);
inline jule::Bool _21ce009b3_IsValidHeaderExt(jule::Str);
inline jule::Bool _21ce00c7c_IsValidCppExt(jule::Str);
inline jule::Str _21ce0cccd_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _21ce0d0db_argToStr(jule::Any);
inline jule::I64 _21ce0d3a5_findNextFmt(jule::Str);
inline jule::Str _21ce0d76d_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _21ce0e5d7_IsTopDirective(jule::Str);
inline jule::Bool _21ce10a39_IsWindows(jule::Str);
inline jule::Bool _21ce10d14_IsDarwin(jule::Str);
inline jule::Bool _21ce110cd_IsLinux(jule::Str);
inline jule::Bool _21ce1141e_IsI386(jule::Str);
inline jule::Bool _21ce116d8_IsAmd64(jule::Str);
inline jule::Bool _21ce119a2_IsArm64(jule::Str);
inline jule::Bool _21ce11c6b_IsUnix(jule::Str);
inline jule::Bool _21ce12112_Is32Bit(jule::Str);
inline jule::Bool _21ce123cb_Is64Bit(jule::Str);
inline void _21d2d622d_init(void);
inline jule::I64 _2035c5548_LeadingZeros64(jule::U64);
inline jule::I64 _2035c64a0_TrailingZeros(jule::U64);
inline jule::I64 _2035c6e0c_TrailingZeros32(jule::U32);
inline jule::I64 _2035c71c6_TrailingZeros64(jule::U64);
inline jule::I64 _2035ccb7c_Len32(jule::U32);
inline jule::I64 _2035cce46_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _2035cdbd3_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _2035d04dc_Mul64(jule::U64, jule::U64);
inline jule::U32 _2034d06ea_F32Bits(jule::F32);
inline jule::F32 _2034d0a08_F32FromBits(jule::U32);
inline jule::U64 _2034d0cc2_F64Bits(jule::F64);
inline jule::F64 _2034d1113_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _2034d36ba_Frexp(jule::F64);
inline jule::F64 _2035d77d0_NaN(void);
inline jule::Bool _2035d7add_IsNaN(jule::F64);
inline jule::F64 _2035d7da7_Inf(jule::I64);
inline jule::Bool _2035d81e8_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _2035d84b2_normalize(jule::F64);
inline jule::F64 _2035d9e86_Log(jule::F64);
inline jule::F64 _2035da86b_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _2035e2565_Modf(jule::F64);
inline jule::F64 _2035e2d6d_Log2(jule::F64);
inline jule::Str _20361c55c_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _20361cb45_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _20361d34e_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _20361b33b_floatInfo*);
inline jule::Slice<jule::U8> _20361da25_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _20361bec9_decimalSlice, jule::I64, jule::U8);
inline void _20361de76_roundShortest(_20362ed55_decimal*, jule::U64, jule::I64, _20361b33b_floatInfo*);
inline jule::Slice<jule::U8> _20361e51a_fmtE(jule::Slice<jule::U8>, jule::Bool, _20361bec9_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _20361ea04_fmtF(jule::Slice<jule::U8>, jule::Bool, _20361bec9_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _203620175_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _20361b33b_floatInfo*);
inline jule::Slice<jule::U8> _20362087e_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _20361b33b_floatInfo*);
inline jule::I64 _203620c03_min(jule::I64, jule::I64);
inline jule::I64 _203621077_max(jule::I64, jule::I64);
inline jule::U8 _203621bb0_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__202e5a2da_ConvError _203622133_parseUint(jule::Str*, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _203622562_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _203622a18_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _20362370b_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _203623b4b_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _2036259a5_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>*, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _203625cb3_special(jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _20362607c_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _203627b0b_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _20362803a_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__202e5a2da_ConvError _2036285ce_atofHex(_20361b33b_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__202e5a2da_ConvError _2036289a8_atof32(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__202e5a2da_ConvError _203628c72_atof64(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__202e5a2da_ConvError _2036290e6_parseFloatPrefix(jule::Str*, jule::I64);
inline jule::Exceptional<jule::F64> _20362946a_ParseFloat(jule::Str, jule::I64);
inline void _203629c73_ryuFtoaFixed32(_20361bec9_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _20362a218_ryuFtoaFixed64(_20361bec9_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _20362aa65_formatDecimal(_20361bec9_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _20362b03d_ryuFtoaShortest(_20361bec9_decimalSlice*, jule::U64, jule::I64, _20361b33b_floatInfo*);
inline jule::I64 _20362b307_mulByLog2Log10(jule::I64);
inline jule::I64 _20362b5c1_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _20362ba00_computeBounds(jule::U64, jule::I64, _20361b33b_floatInfo*);
inline void _20362c11b_ryuDigits(_20361bec9_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _20362c78c_ryuDigits32(_20361bec9_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _20362cbbb_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _20362d0ea_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _20362d46e_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _20362d738_divmod1e9(jule::U64);
inline void _2036316a3_trim(_20362ed55_decimal*);
inline void _20363198e_rightShift(_20362ed55_decimal*, jule::U64);
inline jule::Bool _203631e45_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str*);
inline void _2036321ed_leftShift(_20362ed55_decimal*, jule::U64);
inline jule::Bool _203632572_shouldRoundUp(_20362ed55_decimal*, jule::I64);
inline jule::Str _203633c05_FmtUint(jule::U64, jule::I64);
inline jule::Str _2036340bd_FmtInt(jule::I64, jule::I64);
inline jule::Str _203634387_Itoa(jule::I64);
inline jule::Str _2036346c8_small(jule::I64);
inline jule::Bool _203634992_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _203635036_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _203636433_RealKindOf(jule::Str);
inline jule::I64 _2036366ec_BitsizeOf(jule::Str);
inline jule::Str _203636a3d_IntFromBits(jule::I64);
inline jule::Str _203636d07_UintFromBits(jule::I64);
inline jule::Str _2036370c1_FloatFromBits(jule::I64);
inline jule::Bool _203637c1a_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _203637ed4_BitsizeOfFloat(jule::F64);
inline jule::I64 _20363829d_BitsizeOfInt(jule::I64);
inline jule::I64 _203638567_BitsizeOfUint(jule::U64);
inline void _2036386dd_UpdateTarget(void);
inline void _203638864_init(void);
inline jule::I64 _20363c626_MinI(jule::Str);
inline jule::I64 _20363c934_MaxI(jule::Str);
inline jule::U64 _20363cbed_MaxU(jule::Str);
inline jule::F64 _20363ce2e_Min(jule::Str);
inline jule::F64 _20363d1e8_Max(jule::Str);
inline jule::Bool _20363d66b_IsI8Compatible(jule::Str);
inline jule::Bool _20363d979_IsI16Compatible(jule::Str);
inline jule::Bool _20363dc43_IsI32Compatible(jule::Str);
inline jule::Bool _20363e084_IsI64Compatible(jule::Str);
inline jule::Bool _20363e34d_IsU8Compatible(jule::Str);
inline jule::Bool _20363e617_IsU16Compatible(jule::Str);
inline jule::Bool _20363e8d1_IsU32Compatible(jule::Str);
inline jule::Bool _20363ec77_IsU64Compatible(jule::Str);
inline jule::Bool _203640041_IsF32Compatible(jule::Str);
inline jule::Bool _20364030a_IsF64Compatible(jule::Str);
inline jule::Bool _20364067e_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _203640948_IsI16Greater(jule::Str);
inline jule::Bool _203640c12_IsI32Greater(jule::Str);
inline jule::Bool _203640ecb_IsI64Greater(jule::Str);
inline jule::Bool _203641295_IsU16Greater(jule::Str);
inline jule::Bool _203641718_IsU32Greater(jule::Str);
inline jule::Bool _2036419d2_IsU64Greater(jule::Str);
inline jule::Bool _203641c9b_IsF32Greater(jule::Str);
inline jule::Bool _203642065_IsF64Greater(jule::Str);
inline jule::Bool _2036423d9_IsGreater(jule::Str, jule::Str);
inline jule::Bool _203643440_IsSigInt(jule::Str);
inline jule::Bool _20364374d_IsUnsigInt(jule::Str);
inline jule::Bool _203643a17_IsInt(jule::Str);
inline jule::Bool _203643d58_IsFloat(jule::Str);
inline jule::Bool _203644122_IsNum(jule::Str);
inline jule::Bool _2036443db_IsSigNum(jule::Str);
inline void _20364d615_lshiftUnsig(_2036445ea_Const*, _2036445ea_Const*);
inline void _20364d945_rshiftUnsig(_2036445ea_Const*, _2036445ea_Const*);
inline jule::Bool _1c0c25b43_IsUnaryOp(jule::U64);
inline jule::Bool _1c0c25e51_IsBinOp(jule::U64);
inline jule::Bool _1c0c2655b_IsStr(jule::Str);
inline jule::Bool _1c0c26825_IsRawStr(jule::Str);
inline jule::Bool _1c0c26ade_IsRune(jule::Str);
inline jule::Bool _1c0c27518_IsFloat(jule::Str);
inline jule::Bool _1c0c277d2_IsNum(jule::Str);
inline jule::Bool _1c0c27d65_IsIgnoreIdent(jule::Str);
inline jule::Bool _1c0c2812e_IsAnonIdent(jule::Str);
inline jule::Bool _1c0c286b2_IsSpace(jule::I32);
inline jule::Bool _1c0c28b35_IsLetter(jule::I32);
inline jule::Bool _1c0c291b8_IsDecimal(jule::U8);
inline jule::Bool _1c0c29482_IsBinary(jule::U8);
inline jule::Bool _1c0c2974b_IsOctal(jule::U8);
inline jule::Bool _1c0c29a15_IsHex(jule::U8);
inline jule::Bool _1c0c29cce_IsAssign(jule::U64);
inline jule::Bool _1c0c2a098_IsPostfixOp(jule::U64);
inline jule::Bool _1c0c2a362_IsAssignOp(jule::U64);
inline jule::Ptr<_1c0c2abc0_File> _1c0c2c067_NewFileSet(jule::Str);
inline _21ce0c86b_Log _1c0c2dab3_makeErr(jule::I64, jule::I64, jule::Ptr<_1c0c2abc0_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c0c2de7b_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1c0c2e300_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c0c2e6b8_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c0c2ea3c_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c0c2edb1_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c0c30235_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c0c306b9_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c0c30983_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1c0c30c4c_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1c0c310c1_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1c0c31445_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1c0c317b9_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1c0c31b3d_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1c0c31eb2_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c0c32435_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1c0c326ee_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1c0c32a73_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1c0c32d3c_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1c0c33106_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1c0c333c0_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1c0c33689_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_21ce0c86b_Log> _1c0c3867d_Lex(jule::Ptr<_1c0c2abc0_File>, jule::I64);
inline jule::Bool _1c0d00723_FindModuleFile(jule::Slice<jule::Ptr<_21b9b0d8d_DirEntry>>*);
inline jule::Str _1c0d009ed_FindModuleFileDeep(jule::Str);
inline jule::Slice<_21ce0c86b_Log> _1c0d00cb7_CheckModuleFile(jule::Str*);
inline jule::Bool _1c0d01801_IsPub(jule::Str*);
inline jule::Bool _1c0d4ae22_IsAscii(jule::I32);
inline jule::I32 _1c0d64523_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1c0d646cc_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1c0d64a1d_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _1c0d64cd7_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1c0d65128_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::Slice<jule::U8> _1c0d6549c_strEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::I64 _1c0e96eb3_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64*);
inline jule::Slice<jule::U8> _1c0e97348_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1c0e97634_FmtByDefault(_21cd5e16e_StrBuilder*, jule::Any*);
inline void _1c0e97a52_applyFmtByDefault(_21cd5e16e_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline void _1c0e97ea3_applyFmt(jule::Slice<jule::U8>*, _21cd5e16e_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Str _1c0e982e4_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _1c0e9a36d_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c0c76787_parameterUsesGenerics(jule::Ptr<_1c0c7350e_ParamIns>*, jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>>*);
inline jule::Ptr<_1c0db76db_TypeSymbol> _1c0c78ed7_buildType(jule::Ptr<_1c0c3a9e3_TypeDecl>);
inline jule::Ptr<_1c0d81496_Value> _1c0c792e5_buildExpr(jule::Ptr<_1c0c3ed27_Expr>);
inline jule::Ptr<_1c0dae727_TypeAlias> _1c0c795ae_buildTypeAlias(jule::Ptr<_1c0c52356_TypeAliasDecl>);
inline jule::Ptr<_1c0c58758_Field> _1c0c79900_buildField(jule::Ptr<_1c0c55b2e_FieldDecl>);
inline jule::Slice<jule::Ptr<_1c0c58758_Field>> _1c0c79bb9_buildFields(jule::Slice<jule::Ptr<_1c0c55b2e_FieldDecl>>*);
inline jule::Ptr<_1c0c5b64b_Struct> _1c0c79e83_buildStruct(jule::Ptr<_1c0c56525_StructDecl>);
inline jule::Ptr<_1c0c6ead2_Param> _1c0c7a24c_buildParam(jule::Ptr<_1c0c4b251_ParamDecl>);
inline jule::Slice<jule::Ptr<_1c0c6ead2_Param>> _1c0c7a5e3_buildParams(jule::Slice<jule::Ptr<_1c0c4b251_ParamDecl>>*);
inline jule::Ptr<_1c0c6e351_RetType> _1c0c7a8ac_buildRetType(jule::Ptr<_1c0c3d8d6_RetTypeDecl>);
inline jule::Ptr<_1c0c715a6_Fn> _1c0c7ab76_buildFunc(jule::Ptr<_1c0c4c6a3_FnDecl>);
inline jule::Slice<jule::Ptr<_1c0c715a6_Fn>> _1c0c7ae40_buildMethods(jule::Slice<jule::Ptr<_1c0c4c6a3_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1c0db76db_TypeSymbol>> _1c0c7b209_buildTraitInherits(jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>>*);
inline jule::Ptr<_1c0c84850_Trait> _1c0c7b4c3_buildTrait(jule::Ptr<_1c0c56c62_TraitDecl>);
inline jule::Ptr<_1c0c864cd_EnumItem> _1c0c7b78c_buildEnumItem(jule::Ptr<_1c0c53d19_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1c0c864cd_EnumItem>> _1c0c7ba56_buildEnumItems(jule::Slice<jule::Ptr<_1c0c53d19_EnumItemDecl>>*);
inline jule::Ptr<_1c0c8704a_Enum> _1c0c7bec9_buildEnum(jule::Ptr<_1c0c548ca_EnumDecl>);
inline jule::Ptr<_1c0c8817d_TypeEnumItem> _1c0c7c293_buildTypeEnumItem(jule::Ptr<_1c0c55205_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1c0c8817d_TypeEnumItem>> _1c0c7c55c_buildTypeEnumItems(jule::Slice<jule::Ptr<_1c0c55205_TypeEnumItemDecl>>*);
inline jule::Ptr<_1c0c88755_TypeEnum> _1c0c7c826_buildTypeEnum(jule::Ptr<_1c0c55865_TypeEnumDecl>);
inline jule::Ptr<_1c0d2b94c_Var> _1c0c7cae0_buildVar(jule::Ptr<_1c0c4d781_VarDecl>);
inline jule::Slice<jule::Ptr<_1c0d2b94c_Var>> _1c0c7cda9_buildVars(jule::Slice<jule::Ptr<_1c0c4d781_VarDecl>>);
inline jule::Ptr<_1c0cabbc9_Impl> _1c0c7d173_buildImpl(jule::Ptr<_1c0c573c2_Impl>);
inline jule::Ptr<_1c0d80352_Data> _1c0ca76b9_buildAsComptimeMethodData(jule::Ptr<_1c0c744aa_FnIns>*);
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0ca79c7_findComptimePackage(jule::Ptr<_1c0d04705_Sema>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca7d4b_buildComptimeTypeInfoData(jule::Ptr<_1c0d04705_Sema>*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ca807c_buildComptimeValue(jule::Ptr<_1c0d80352_Data>*);
inline jule::Bool _1c0cab04c_matchConstraint(jule::Str*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0cab35a_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1c0cb9412_scopeChecker> _1c0caddda_newScopeCheckerBase(jule::Ptr<_1c0d04705_Sema>*, jule::Ptr<_1c0c744aa_FnIns>);
inline jule::Ptr<_1c0cb9412_scopeChecker> _1c0cae2a3_newScopeChecker(jule::Ptr<_1c0d04705_Sema>*, jule::Ptr<_1c0c744aa_FnIns>);
inline jule::Ptr<_1c0cb7e6b_scopeLabel> _1c0cae627_findLabelParent(jule::Str*, jule::Ptr<_1c0cb9412_scopeChecker>);
inline jule::Bool _1c0cae9e0_modelIsGotoScope(jule::Any, jule::Ptr<_1c0cb210d_Scope>*);
inline jule::Bool _1c0caed64_stmtIsGotoScope(jule::Any*, jule::Ptr<_1c0cb210d_Scope>*);
inline jule::I64 _1c0cb01d8_countMatchType(jule::Ptr<_1c0cb6244_Match>*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Slice<jule::Ptr<_1c0d80352_Data>> _1c0cb04a2_getDatasFromTupleData(jule::Ptr<_1c0d80352_Data>*);
inline jule::Bool _1c0cb0d65_checkMut(jule::Ptr<_1c0d04705_Sema>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>, jule::Ptr<_1c0c25406_Token>);
inline jule::Bool _1c0cb134e_checkAssign(jule::Ptr<_1c0d04705_Sema>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>, jule::Ptr<_1c0c25406_Token>);
inline jule::Bool _1c0cb1618_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1c0cb18d2_isValidStForNextSt(jule::Any*);
inline jule::Bool _1c0cb1b9b_stmtIsDef(jule::Any*);
inline jule::U64 _1c0ccb4ce_removeEqFromOp(jule::U64);
inline jule::Ptr<_1c0d2b94c_Var> _1c0cd0a22_findVarInPackage(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1c0dae727_TypeAlias> _1c0cd0e95_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1c0c5b64b_Struct> _1c0cd13c4_findStructInPackage(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1c0c715a6_Fn> _1c0cd187a_findFnInPackage(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1c0c84850_Trait> _1c0cd1bbb_findTraitInPackage(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1c0c8704a_Enum> _1c0cd2040_findEnumInPackage(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1c0c88755_TypeEnum> _1c0cd23b4_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>*, jule::Str*);
inline jule::Any _1c0cd2903_defByIdentPackage(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1c0cd893c_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1c0d01d95_isValidModelForRef(jule::Any*);
inline _21ce0c86b_Log _1c0d023c3_compilerErr(jule::Ptr<_1c0c25406_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c0d02747_impIsLookupable(jule::Ptr<_1c0cd353b_ImportInfo>*, jule::Str*);
inline void _1c0d02a00_appendRetVars(jule::Slice<jule::Ptr<_1c0d2b94c_Var>>*, jule::Ptr<_1c0c744aa_FnIns>*);
inline void _1c0d02cdb_appendParamVars(jule::Slice<jule::Ptr<_1c0d2b94c_Var>>*, jule::Ptr<_1c0c744aa_FnIns>*);
inline void _1c0d030c7_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>*, jule::Ptr<_1c0c744aa_FnIns>*);
inline jule::Ptr<_1c0d7a12c_SymbolTable> _1c0d0344b_findFile(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>*, jule::Ptr<_1c0c2abc0_File>*);
inline void _1c0d03902_pushSuggestion(_21ce0c86b_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1c0d29c36_pushImplemented(jule::Ptr<_1c0c84850_Trait>, jule::Ptr<_1c0c5b64b_Struct>*);
inline void _1c0d2a022_pushImplements(jule::Ptr<_1c0c5b64b_Struct>*, jule::Ptr<_1c0c84850_Trait>);
inline jule::Bool _1c0d65c3e_traitHasReferenceReceiver(jule::Ptr<_1c0c84850_Trait>*);
inline jule::Bool _1c0d660c4_floatAssignable(jule::Str*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Bool _1c0d66448_sigAssignable(jule::Str, jule::Ptr<_1c0d80352_Data>*);
inline jule::Bool _1c0d66811_unsigAssignable(jule::Str, jule::Ptr<_1c0d80352_Data>*);
inline jule::Bool _1c0d66b85_intAssignable(jule::Str, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0d73345_checkMutRiskOfStructLit(jule::Ptr<_1c0d04705_Sema>*, jule::Ptr<_1c0c64610_StructLitExprModel>*);
inline jule::Ptr<_1c0db0519_TypeKind> _1c0d78dd9_lenKind(void);
inline jule::Bool _1c0d7923b_isGoodValueToInfer(jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0c39e10_Directive> _1c0da8930_findDirective(jule::Slice<jule::Ptr<_1c0c39e10_Directive>>*, jule::Str);
inline jule::Any _1c0da8ce8_findBuiltinsImport(jule::Str*, jule::Ptr<_1c0cd353b_ImportInfo>);
inline void _1c0da9029_fitBitsize(jule::Ptr<_1c0d80352_Data>*);
inline void _1c0da9359_makeStructLitAlloc(jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c64610_StructLitExprModel>*);
inline jule::Ptr<_1c0d2b94c_Var> _1c0da96cd_buildErrorVar(jule::Ptr<_1c0cb210d_Scope>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Any _1c0da9a52_findBuiltinsSema(jule::Str*, jule::Ptr<_1c0d04705_Sema>);
inline jule::Bool _1c0da9d1b_isOkForShifting(jule::Ptr<_1c0d80352_Data>*);
inline jule::Bool _1c0daa1e5_isInstancedStruct(jule::Ptr<_1c0c5e3c9_StructIns>);
inline jule::Bool _1c0daa569_isPtrArithmeticCompatible(jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0daa855_applyCastKindModel(jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0db0519_TypeKind>*);
inline void _1c0daab41_applyCastKind(jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Ptr<_1c0d80352_Data> _1c0daad50_buildVoidData(void);
inline jule::Str _1c0dab119_checkDataForIntegerIndexing(jule::Ptr<_1c0d80352_Data>*);
inline void _1c0dab405_applyCastModelByEnum(jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c8704a_Enum>);
inline void _1c0dab6e1_castConstByType(jule::Str*, jule::Ptr<_1c0d80352_Data>*);
inline void _1c0dabb86_updateModelToGenericIns(jule::Any*, jule::Ptr<_1c0c744aa_FnIns>*);
inline jule::Bool _1c0dac00a_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1c0c3b3ea_SubIdentTypeDecl>*);
inline jule::Str _1c0dac2c4_constoa(jule::Ptr<_2036445ea_Const>*);
inline jule::Ptr<_1c0d80352_Data> _1c0dac648_evalEnumStatic(jule::Ptr<_1c0c8704a_Enum>*, jule::Ptr<_1c0c864cd_EnumItem>*);
inline jule::Ptr<_1c0c64610_StructLitExprModel> _1c0dac912_isLitBased(jule::Any*);
inline void _1c0dacbed_makeImplicitDeref(jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0c25406_Token>);
inline jule::Bool _1c0dcac71_kindUsesGenerics(jule::Ptr<_1c0db0519_TypeKind>*, jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>>*);
inline jule::Bool _1c0dcb139_hasDirective(jule::Slice<jule::Ptr<_1c0c39e10_Directive>>*, jule::Str);
inline jule::Bool _1c0dcb403_canGetPtr(jule::Ptr<_1c0d80352_Data>*);
inline jule::Bool _1c0dcb744_isValidForSptrType(jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0dcba0d_isValidForRef(jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Bool _1c0dcbcc7_isBuiltinStrConvertable(jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Str _1c0dcc091_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0db80e3_Prim> _1c0dcc437_buildPrimType(jule::Str);
inline void _1c0dcc9dc_applyImplicitCast(jule::Ptr<_1c0db0519_TypeKind>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Bool _1c0dccca6_validTypeForXof(jule::Ptr<_1c0db0519_TypeKind>*);
inline __jule_tuple_x_1c0d7a12c_SymbolTable__jule_tuple_s_21ce0c86b_Log _1c0dd0d42_buildSymbols(jule::Ptr<_1c0c38a46_Ast>*, jule::Trait<_1c0cd0626_Importer>*, jule::Ptr<_1c0c7d739_symbolBuilder>);
inline __jule_tuple_x_1c0cd6462_Package__jule_tuple_s_21ce0c86b_Log _1c0dd12b5_analyzePackage(jule::Slice<jule::Ptr<_1c0c38a46_Ast>>*, jule::Trait<_1c0cd0626_Importer>*, jule::I64*);
inline __jule_tuple_x_1c0cd6462_Package__jule_tuple_s_21ce0c86b_Log _1c0dd16e4_AnalyzePackage(jule::Slice<jule::Ptr<_1c0c38a46_Ast>>, jule::Trait<_1c0cd0626_Importer>, jule::I64);
inline jule::Ptr<_1c0c744aa_FnIns> _1c0e9acec_findBuiltinFunc(jule::Str*);
inline jule::Ptr<_1c0dae727_TypeAlias> _1c0e9b10a_primTypeAlias(jule::Ptr<_1c0db0519_TypeKind>*);
inline jule::Ptr<_1c0d2b94c_Var> _1c0e9ec13_findBuiltinVar(jule::Str*);
inline jule::Ptr<_1c0dae727_TypeAlias> _1c0e9ee44_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1c0ea020d_findBuiltinDef(jule::Str*);
inline jule::Any _1c0ea04c7_findBuiltinDefStdDebug(jule::Str*);
inline jule::Any _1c0ea0791_findBuiltinDefStdMem(jule::Str*);
inline jule::Any _1c0ea0b37_findBuiltinDefStdComptime(jule::Str*);
inline jule::Any _1c0ea0e01_findBuiltinDefStdJuleIntegrated(jule::Str*);
inline jule::Any _1c0ea1275_findPackageBuiltinDef(jule::Str*, jule::Str*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea16a4_builtinCallerCommonPlain(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea1a28_builtinCallerError(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea1e57_builtinCallerOut(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea2386_builtinCallerOutln(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea27b5_builtinCallerNew(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea2d9d_builtinCallerPanic(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea32cc_builtinCallerMake(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea370b_builtinCallerAppend(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea3be5_callerCopySlice(jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea4124_builtinCallerCopy(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea4498_callerLenSlice(jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea481c_callerLenMap(jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea4b91_callerLenArr(jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea5015_callerLenStr(jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea5389_callerLenComptime(jule::Ptr<_1c0d80352_Data>*, jule::I64);
inline jule::Ptr<_1c0d80352_Data> _1c0ea57b8_builtinCallerLen(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea5b3c_callerCapSlice(jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea606b_builtinCallerCap(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea6555_callerDeleteMap(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea6984_builtinCallerDelete(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea6db3_builtinCallerAssert(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea748a_builtinCallerStdComptimeTypeOf(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea7853_builtinCallerStdComptimeValueOf(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea7b1c_rangeData(jule::Trait<_1c0c8a911_comptimeRangeKind>);
inline jule::Ptr<_1c0d80352_Data> _1c0ea804b_builtinCallerStdComptimeRange(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea847a_builtinCallerStdComptimeLine(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea88a9_builtinCallerStdComptimeFile(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea8cd8_builtinCallerStdComptimeFiles(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea9217_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea9646_builtinCallerStdMemSizeOf(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea9a75_builtinCallerStdMemAlignOf(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0ea9ea4_builtinCallerStdMemFree(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0eaa3d3_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0eaa812_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0eaac41_builtinCallerStdDebugOut(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c0d80352_Data> _1c0eab170_builtinCallerStdDebugOutln(jule::Ptr<_1c0d82046_Eval>*, jule::Ptr<_1c0c43a51_FnCallExpr>*, jule::Ptr<_1c0d80352_Data>*);
inline jule::Ptr<_1c181ad86_FileInfo> _1c181db25_ParseFile(jule::Ptr<_1c0c2abc0_File>);
inline __jule_tuple_x_1c0c38a46_Ast__jule_tuple_s_21ce0c86b_Log _1c1865023_parseFileset(jule::Ptr<_1c0c2abc0_File>);
inline jule::Ptr<_1c0c4aa14_ScopeTree> _1c18659a2_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1c1865d26_isSt(jule::Ptr<_1c0c25406_Token>, jule::Ptr<_1c0c25406_Token>);
inline jule::Bool _1c186619a_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1c1866563_nextStPos(jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::I64);
inline __jule_tuple_sx_1c0c25406_Token__jule_tuple_bool _1c18668d7_skipSt(jule::I64*, jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Slice<jule::Ptr<_1c1866c17_stmt>> _1c18670be_splitStmts(jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Bool _1c18803a1_isTypeOp(jule::U64*);
inline jule::Bool _1c18806ae_isTypeRange(jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Slice<jule::Ptr<_1c0c25406_Token>> _1c1880978_getBlockExpr(jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline __jule_tuple_sx_1c0c25406_Token__jule_tuple_sx_1c0c25406_Token _1c1880d41_splitDelim(jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::U64);
inline jule::I64 _1c188110a_findLowestPrecOp(jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c41752_IdentExpr> _1c18813c4_buildIdentExpr(jule::Ptr<_1c0c25406_Token>*);
inline __jule_tuple_sx_1c0c25406_Token__jule_tuple_int _1c188168d_getRangeExprTokens(jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Bool _1c1882491_checkAssignTokens(jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline _21ce0c86b_Log _1c188366d_makeErr(jule::I64, jule::I64, jule::Ptr<_1c0c2abc0_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1c0c25406_Token>> _1c1883b68_range(jule::I64*, jule::U64, jule::U64, jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline __jule_tuple_sx_1c0c25406_Token__jule_tuple_sx_1c0c25406_Token _1c1883e32_rangeLast(jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline __jule_tuple_ssx_1c0c25406_Token__jule_tuple_s_21ce0c86b_Log _1c18843d8_parts(jule::Slice<jule::Ptr<_1c0c25406_Token>>*, jule::U64, jule::Bool);
inline jule::U64 _1c18846a2_getCloseOfBrace(jule::U64);
inline _21ce0c86b_Log _1c1884ad1_compilerErr(jule::Ptr<_1c0c25406_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1c1884e77_pushSuggestion(_21ce0c86b_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1c188531d_tokstoa(jule::Slice<jule::Ptr<_1c0c25406_Token>>*);
inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c1896d46_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1c10995c1_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1c1099714_checkArch(jule::Str);
inline jule::Bool _1c10b4bb3_isPassFileAnnotation(jule::Str);
inline void _1c10b5d3a_setOsVars(jule::Slice<jule::Str>*);
inline void _1c10b60b0_setArchVars(jule::Slice<jule::Str>*);
inline void _1c10b639b_initVars(jule::Slice<jule::Str>*, _1c10b5a1b_CompileInfo*);
inline jule::Slice<jule::U8> _1c189ad28_readBuff(jule::Str);
inline _21ce0c86b_Log _1c189b103_flatCompilerErr(jule::Str);
inline void _1c18a079a_pushPasses(jule::Ptr<_1c0cd6462_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1c18a0b63_getAllUniquePasses(jule::Ptr<_1c0cd6462_Package>*, jule::Slice<jule::Ptr<_1c0cd353b_ImportInfo>>);
inline _1c10b5a1b_CompileInfo _1c18a0d72_buildCompileInfo(void);
inline void _1c1a158dd_EliminateDefines(jule::Ptr<_1c189de2a_IR>*);
inline jule::Ptr<_1c0c39e10_Directive> _1c1a15ca6_findDirective(jule::Slice<jule::Ptr<_1c0c39e10_Directive>>*, jule::Str);
inline jule::Bool _1c1a1612a_hasDirective(jule::Slice<jule::Ptr<_1c0c39e10_Directive>>*, jule::Str);
inline jule::Bool _1c1a164e3_isTraitMethod(jule::Ptr<_1c0c5e3c9_StructIns>*, jule::Ptr<_1c0c744aa_FnIns>*);
inline void _1c1a1a4e7_eliminateDeadCodeOfScope(jule::Ptr<_1c0cb210d_Scope>);
inline void _1c1a1a76c_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1c0c715a6_Fn>>*);
inline void _1c1a1a99d_eliminateFunctionsScopePackage(jule::Ptr<_1c0cd6462_Package>*);
inline void _1c1a1ac56_eliminateScopePackage(jule::Ptr<_1c0cd6462_Package>*);
inline void _1c1a1ae87_EliminateScopes(jule::Ptr<_1c189de2a_IR>*);
inline jule::Uintptr _1c0eab2b3_typeData(jule::Any*);
inline jule::Bool _1c0eab5c1_equalConst(jule::Ptr<_2036445ea_Const>, jule::Ptr<_2036445ea_Const>);
inline jule::Bool _1c0eab945_equalCasting(jule::Ptr<_1c0c64e90_CastingExprModel>, jule::Ptr<_1c0c64e90_CastingExprModel>);
inline jule::Bool _1c0eabd0d_equalUnary(jule::Ptr<_1c0c63c3b_UnaryExprModel>, jule::Ptr<_1c0c63c3b_UnaryExprModel>);
inline jule::Bool _1c0eac182_equalIndexing(jule::Ptr<_1c0c661c2_IndexingExprModel>, jule::Ptr<_1c0c661c2_IndexingExprModel>);
inline jule::Bool _1c0eac506_equalBinary(jule::Ptr<_1c0c63862_BinopExprModel>, jule::Ptr<_1c0c63862_BinopExprModel>);
inline jule::Bool _1c0eac87a_equalModels(jule::Any, jule::Any);
inline jule::Bool _1c0eb5e16_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1c0eb6224_isConstantValidConditionalCase(jule::Ptr<_1c0cb252b_If>*);
inline jule::Bool _1c0eb64dd_isUnreachableExpr(jule::Any*);
inline jule::Bool _1c0eb682e_isConstantValidMatchCase(jule::Ptr<_1c0cb6d7c_Case>*);
inline jule::Bool _1c0eb6ae8_isUnreachableConditionalCase(jule::Ptr<_1c0cb252b_If>*);
inline jule::Bool _1c0eb6db2_isUnreachableMatchCase(jule::Ptr<_1c0cb6d7c_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1c0ec001e_checkForBitShiftOpt(jule::Ptr<_1c0c63367_OperandExprModel>*, jule::Ptr<_1c0c63367_OperandExprModel>*);
inline jule::Bool _1c0ec03d7_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1c0ec0b24_doInternalNosafeStobs(_1c0eb7c92_exprOptimizer*, _1c18a3160_stdCacheData*, jule::Ptr<_1c0c65842_FnCallExprModel>*);
inline void _1c18a3803_buildCache(jule::Ptr<_1c189de2a_IR>*);
inline void _1c18a3a45_buildStdInternalNosafeCache(jule::Ptr<_1c189de2a_IR>*);
inline void _1c18a3ddb_pushCache(jule::Ptr<_1c0cd6462_Package>*, jule::Str, jule::Fn<void(_1c0eb7c92_exprOptimizer*,_1c18a3160_stdCacheData*,jule::Ptr<_1c0c65842_FnCallExprModel>*)>);
inline jule::Ptr<_1c0c744aa_FnIns> _1c18a42a4_getFunc(jule::Ptr<_1c0cd6462_Package>*, jule::Str*);
inline jule::Ptr<_1c0cd6462_Package> _1c18a4628_getPackage(jule::Ptr<_1c189de2a_IR>*, jule::Str*);
inline void _1c18a7274_PushOptLevel(jule::I64);
inline void _1c1a256ab_detectEnabled(void);
inline void _1c1a4e3c7_Throw(jule::Str);
inline jule::U64 _1a885d09a_unix(void);
inline jule::Bool _1a8785577_isCopyOptimizable(jule::Ptr<_1c0d80352_Data>*);
inline jule::Bool _1a8785940_isIterCopyOptimizable(jule::Ptr<_1c0d80352_Data>*, jule::Ptr<_1c0d2b94c_Var>*);
inline jule::Str _1a879ac30_decomposeCommonEsq(jule::U8);
inline jule::Str _1a879b03d_sbtoa(jule::U8);
inline void _1a879b329_cstrBytes(_21cd5e16e_StrBuilder*, jule::Str);
inline void _1a879b659_cstrLit(_21cd5e16e_StrBuilder*, jule::Str);
inline void _1a879ba00_ftoa(_21cd5e16e_StrBuilder*, jule::F64, jule::I64);
inline void _1a879bcdb_itoa(_21cd5e16e_StrBuilder*, jule::I64);
inline void _1a879c0c7_utoa(_21cd5e16e_StrBuilder*, jule::U64);
inline jule::Bool _1a879c4a1_isForwarded(jule::Ptr<_1c0cb210d_Scope>*);
inline jule::Bool _1a879c76a_isExprComesFromBind(jule::Ptr<_1c0d80352_Data>*);
inline jule::Bool _1a879ca34_isAny(jule::Ptr<_1c0db0519_TypeKind>*);
inline void _1a88723de_iterFiles(jule::Ptr<_1c0cd6462_Package>*, jule::Fn<void(jule::Ptr<_1c0d7a12c_SymbolTable>*)>);
inline jule::Str _1a88726ec_concatAllParts(jule::Slice<jule::Ptr<_1c0c25406_Token>>);
inline jule::Bool _1a8872a71_containsTraitMethod(jule::Ptr<_1c0c84850_Trait>*, jule::Str*);
inline void _1a8872da1_pushMethodsFromInherit(jule::Ptr<_1c0c84850_Trait>*, jule::Ptr<_1c0c84850_Trait>*);
inline void _1a887318c_pushMethodsFromInherits(jule::Ptr<_1c0c84850_Trait>*, jule::Ptr<_1c0c84850_Trait>*);
inline jule::Bool _1a8873456_isOpMethod(jule::Ptr<_1c0c715a6_Fn>*);
inline jule::Bool _1a8873720_isHeadDecl(jule::Ptr<_1c0c715a6_Fn>*);
inline jule::Ptr<_1c0c39e10_Directive> _1a88822de_findDirective(jule::Slice<jule::Ptr<_1c0c39e10_Directive>>*, jule::Str);
inline jule::Bool _1a88826a7_hasDirective(jule::Slice<jule::Ptr<_1c0c39e10_Directive>>*, jule::Str);
inline jule::Bool _1a8882971_shouldInitialized(jule::Ptr<_1c0db0519_TypeKind>*);
inline void _21d2d9242_printErrorMessage(jule::Str);
inline void _21d2d94b7_help(jule::Slice<jule::Str>*);
inline void _21d2d96e8_version(jule::Slice<jule::Str>*);
inline void _21d2d98e6_toolDistos(void);
inline void _21d2d9a6c_toolDistarch(void);
inline void _21d2d9c9d_tool(jule::Slice<jule::Str>*);
inline void _21d2d9ece_julenv(jule::Slice<jule::Str>*);
inline void _21d2da2dc_mod(jule::Slice<jule::Str>*);
inline jule::Bool _21d2da5a6_processCommand(jule::Slice<jule::Str>*);
inline void _21d2da72c_showInfo(void);
void entry_point(void);
inline void _1a8bbb9d0_init(void);
inline jule::Ptr<_21b9bbcbc_File> _1a8bbbcaa_openOutput(jule::Str*);
inline void _1a8bbbe31_clearObjects(void);
inline void _1a8bbc261_compileIr(jule::Str, jule::Str);
inline jule::Bool _1a8bbc52a_isCppSourceFile(jule::Str);
inline void _1a8bbc75b_pushCompCmdClang(_21cd5e16e_StrBuilder*);
inline void _1a8bbc98c_pushCompCmdGcc(_21cd5e16e_StrBuilder*);
inline __jule_tuple_str__jule_tuple_str _1a8bbce21_genCompileCmd(jule::Str, jule::Ptr<_1c189de2a_IR>*);
inline jule::Str _1a8bbd130_getCompilePath(void);
inline void _1a8bbd361_applyTargetIndependentOptimizations(jule::Ptr<_1c189de2a_IR>*);
inline void _1a8bbd4d7_checkCompilerFlag(void);
inline void _1a8bbd718_checkTargetArch(jule::Str);
inline void _1a8bbd949_checkTargetOs(jule::Str);
inline void _1a8bbdb7a_checkTargetFlag(jule::Str*);
inline void _1a8bbddab_checkOptFlag(jule::Str*);
inline void _1a8bbe241_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1a8bbe4a5_checkFlags(jule::Slice<jule::Str>*);
inline void _1a8bbe6d6_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1c189de2a_IR> _1a8bbe9a0_buildIr(jule::Slice<jule::Str>*);
inline void _1a8bbebd1_compileCommand(jule::Slice<jule::Str>*);


struct _1c0c8a911_comptimeRangeKindMptrData {
	void(*_1c0c8a108_ready)(jule::Trait<_1c0c8a911_comptimeRangeKind>, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0d2b94c_Var>*);
	void(*_1c0c8a526_step)(jule::Trait<_1c0c8a911_comptimeRangeKind>, jule::I64, jule::Ptr<_1c0d2b94c_Var>*, jule::Ptr<_1c0d2b94c_Var>*);
	jule::I64(*_1c0c8a7ac_len)(jule::Trait<_1c0c8a911_comptimeRangeKind>);
};

struct _1c0cd0626_ImporterMptrData {
	void(*_1c0cce405_SetModPath)(jule::Trait<_1c0cd0626_Importer>, jule::Str);
	jule::Str(*_1c0cce68b_GetModPath)(jule::Trait<_1c0cd0626_Importer>);
	jule::Str(*_1c0cce9cc_ModById)(jule::Trait<_1c0cd0626_Importer>, jule::I64);
	jule::Ptr<_1c0cd353b_ImportInfo>(*_1c0cced1d_GetImport)(jule::Trait<_1c0cd0626_Importer>, jule::Str);
	__jule_tuple_sx_1c0c38a46_Ast__jule_tuple_s_21ce0c86b_Log(*_1c0cd0219_ImportPackage)(jule::Trait<_1c0cd0626_Importer>, jule::Str, jule::Bool);
	void(*_1c0cd04c2_Imported)(jule::Trait<_1c0cd0626_Importer>, jule::Ptr<_1c0cd353b_ImportInfo>);
};

struct _1c0db0063_KindMptrData {
	jule::Str(*_1c0daeabd_Str)(jule::Trait<_1c0db0063_Kind>);
	jule::Bool(*_1c0daee0e_Equal)(jule::Trait<_1c0db0063_Kind>, jule::Ptr<_1c0db0519_TypeKind>);
};

struct _1c0dd0050_LookupMptrData {
	jule::Ptr<_1c0cd353b_ImportInfo>(*_1c0dcd339_SelectPackage)(jule::Trait<_1c0dd0050_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)>);
	jule::Ptr<_1c0d2b94c_Var>(*_1c0dcd735_FindVar)(jule::Trait<_1c0dd0050_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c0dae727_TypeAlias>(*_1c0dcdb31_FindTypeAlias)(jule::Trait<_1c0dd0050_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c0c5b64b_Struct>(*_1c0dce02c_FindStruct)(jule::Trait<_1c0dd0050_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c0c715a6_Fn>(*_1c0dce428_FindFn)(jule::Trait<_1c0dd0050_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c0c84850_Trait>(*_1c0dce769_FindTrait)(jule::Trait<_1c0dd0050_Lookup>, jule::Str);
	jule::Ptr<_1c0c8704a_Enum>(*_1c0dceaaa_FindEnum)(jule::Trait<_1c0dd0050_Lookup>, jule::Str);
	jule::Ptr<_1c0c88755_TypeEnum>(*_1c0dcedeb_FindTypeEnum)(jule::Trait<_1c0dd0050_Lookup>, jule::Str);
};

struct _1a8bb46cb_CommonFlagMptrData {
	jule::Str(*_1a88b618b_Name)(jule::Trait<_1a8bb46cb_CommonFlag>);
	jule::I32(*_1a88b6334_Short)(jule::Trait<_1a8bb46cb_CommonFlag>);
	jule::Str(*_1a8bb4445_What)(jule::Trait<_1a8bb46cb_CommonFlag>);
	void(*_1a8bb4588_Reset)(jule::Trait<_1a8bb46cb_CommonFlag>);
};



inline void _1c0c8a108_ready_comptimeRangeKind_0(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_, jule::Ptr<_1c0d2b94c_Var>* _1329_keyA, jule::Ptr<_1c0d2b94c_Var>* _1346_keyB) {
	_1c0c8de53_ready(_self_.safe_ptr<_1c0c8d309_comptimeStructFields>(), _1329_keyA, _1346_keyB);
}
inline void _1c0c8a526_step_comptimeRangeKind_0(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1c0d2b94c_Var>* _1436_keyA, jule::Ptr<_1c0d2b94c_Var>* _1453_keyB) {
	_1c0c8e371_step(_self_.safe_ptr<_1c0c8d309_comptimeStructFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1c0c8a7ac_len_comptimeRangeKind_0(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_) {
	return _1c0c8e607_len(_self_.safe_ptr<_1c0c8d309_comptimeStructFields>());
}
inline void _1c0c8a108_ready_comptimeRangeKind_1(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_, jule::Ptr<_1c0d2b94c_Var>* _1329_keyA, jule::Ptr<_1c0d2b94c_Var>* _1346_keyB) {
	_1c0c9220e_ready(_self_.safe_ptr<_1c0c915c6_comptimeStatics>(), _1329_keyA, _1346_keyB);
}
inline void _1c0c8a526_step_comptimeRangeKind_1(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1c0d2b94c_Var>* _1436_keyA, jule::Ptr<_1c0d2b94c_Var>* _1453_keyB) {
	_1c0c9262c_step(_self_.safe_ptr<_1c0c915c6_comptimeStatics>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1c0c8a7ac_len_comptimeRangeKind_1(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_) {
	return _1c0c928b3_len(_self_.safe_ptr<_1c0c915c6_comptimeStatics>());
}
inline void _1c0c8a108_ready_comptimeRangeKind_2(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_, jule::Ptr<_1c0d2b94c_Var>* _1329_keyA, jule::Ptr<_1c0d2b94c_Var>* _1346_keyB) {
	_1c0c94ba1_ready(_self_.safe_ptr<_1c0c93ed0_comptimeEnumFields>(), _1329_keyA, _1346_keyB);
}
inline void _1c0c8a526_step_comptimeRangeKind_2(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1c0d2b94c_Var>* _1436_keyA, jule::Ptr<_1c0d2b94c_Var>* _1453_keyB) {
	_1c0c950be_step(_self_.safe_ptr<_1c0c93ed0_comptimeEnumFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1c0c8a7ac_len_comptimeRangeKind_2(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_) {
	return _1c0c95355_len(_self_.safe_ptr<_1c0c93ed0_comptimeEnumFields>());
}
inline void _1c0c8a108_ready_comptimeRangeKind_3(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_, jule::Ptr<_1c0d2b94c_Var>* _1329_keyA, jule::Ptr<_1c0d2b94c_Var>* _1346_keyB) {
	_1c0c98512_ready(_self_.safe_ptr<_1c0c978c9_comptimeParams>(), _1329_keyA, _1346_keyB);
}
inline void _1c0c8a526_step_comptimeRangeKind_3(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1c0d2b94c_Var>* _1436_keyA, jule::Ptr<_1c0d2b94c_Var>* _1453_keyB) {
	_1c0c98930_step(_self_.safe_ptr<_1c0c978c9_comptimeParams>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1c0c8a7ac_len_comptimeRangeKind_3(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_) {
	return _1c0c98bb6_len(_self_.safe_ptr<_1c0c978c9_comptimeParams>());
}
inline void _1c0c8a108_ready_comptimeRangeKind_4(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_, jule::Ptr<_1c0d2b94c_Var>* _1329_keyA, jule::Ptr<_1c0d2b94c_Var>* _1346_keyB) {
	_1c0c99b0c_ready(_self_.safe_ptr<_1c0c98ec4_comptimeTypeInfos>(), _1329_keyA, _1346_keyB);
}
inline void _1c0c8a526_step_comptimeRangeKind_4(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1c0d2b94c_Var>* _1436_keyA, jule::Ptr<_1c0d2b94c_Var>* _1453_keyB) {
	_1c0c9a02a_step(_self_.safe_ptr<_1c0c98ec4_comptimeTypeInfos>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1c0c8a7ac_len_comptimeRangeKind_4(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_) {
	return _1c0c9a2b1_len(_self_.safe_ptr<_1c0c98ec4_comptimeTypeInfos>());
}
inline void _1c0c8a108_ready_comptimeRangeKind_5(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_, jule::Ptr<_1c0d2b94c_Var>* _1329_keyA, jule::Ptr<_1c0d2b94c_Var>* _1346_keyB) {
	_1c0ca5068_ready(_self_.safe_ptr<_1c0ca4430_comptimeFiles>(), _1329_keyA, _1346_keyB);
}
inline void _1c0c8a526_step_comptimeRangeKind_5(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1c0d2b94c_Var>* _1436_keyA, jule::Ptr<_1c0d2b94c_Var>* _1453_keyB) {
	_1c0ca5486_step(_self_.safe_ptr<_1c0ca4430_comptimeFiles>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1c0c8a7ac_len_comptimeRangeKind_5(jule::Trait<_1c0c8a911_comptimeRangeKind> _self_) {
	return _1c0ca571c_len(_self_.safe_ptr<_1c0ca4430_comptimeFiles>());
}
inline void _1c0cce405_SetModPath_Importer_0(jule::Trait<_1c0cd0626_Importer> _self_, jule::Str _1729_path) {
	_1c189c1ae_SetModPath(_self_.safe_ptr<_1c189b5dc_JuleImporter>(), _1729_path);
}
inline jule::Str _1c0cce68b_GetModPath_Importer_0(jule::Trait<_1c0cd0626_Importer> _self_) {
	return _1c189c445_GetModPath(_self_.safe_ptr<_1c189b5dc_JuleImporter>());
}
inline jule::Str _1c0cce9cc_ModById_Importer_0(jule::Trait<_1c0cd0626_Importer> _self_, jule::I64 _2522_id) {
	return _1c189c786_ModById(_self_.safe_ptr<_1c189b5dc_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0cced1d_GetImport_Importer_0(jule::Trait<_1c0cd0626_Importer> _self_, jule::Str _3128_path) {
	return _1c189cac7_GetImport(_self_.safe_ptr<_1c189b5dc_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1c0c38a46_Ast__jule_tuple_s_21ce0c86b_Log _1c0cd0219_ImportPackage_Importer_0(jule::Trait<_1c0cd0626_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1c189cec3_ImportPackage(_self_.safe_ptr<_1c189b5dc_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1c0cd04c2_Imported_Importer_0(jule::Trait<_1c0cd0626_Importer> _self_, jule::Ptr<_1c0cd353b_ImportInfo> _4131__0) {
	_1c189d27b_Imported(_self_.safe_ptr<_1c189b5dc_JuleImporter>(), _4131__0);
}
inline jule::Str _1c0daeabd_Str_Kind_0(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0c5e74d_Str(_self_.safe_ptr<_1c0c5e3c9_StructIns>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_0(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0c5ea8e_Equal(_self_.data.as<_1c0c5e3c9_StructIns>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_1(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0c747eb_Str(_self_.safe_ptr<_1c0c744aa_FnIns>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_1(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0c74b3c_Equal(_self_.data.as<_1c0c744aa_FnIns>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_2(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0c84c18_Str(_self_.safe_ptr<_1c0c84850_Trait>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_2(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0c85059_Equal(_self_.data.as<_1c0c84850_Trait>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_3(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0c873be_Str(_self_.safe_ptr<_1c0c8704a_Enum>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_3(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0c87710_Equal(_self_.data.as<_1c0c8704a_Enum>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_4(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0c88a96_Str(_self_.safe_ptr<_1c0c88755_TypeEnum>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_4(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0c88dd7_Equal(_self_.data.as<_1c0c88755_TypeEnum>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_5(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0c8aeb6_Str(_self_.safe_ptr<_1c0c8aaed_comptimeRange>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_5(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0c8b307_Equal(_self_.data.as<_1c0c8aaed_comptimeRange>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_6(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0c8b9cd_Str(_self_.safe_ptr<_1c0c8b659_comptimeStructField>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_6(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0c8bd1e_Equal(_self_.data.as<_1c0c8b659_comptimeStructField>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_7(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0c8d68e_Str(_self_.safe_ptr<_1c0c8d309_comptimeStructFields>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_7(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0c8d9d0_Equal(_self_.data.as<_1c0c8d309_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_8(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0c8ec89_Str(_self_.safe_ptr<_1c0c8e915_comptimeStatic>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_8(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0c900ca_Equal(_self_.data.as<_1c0c8e915_comptimeStatic>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_9(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0c9194a_Str(_self_.safe_ptr<_1c0c915c6_comptimeStatics>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_9(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0c91c8b_Equal(_self_.data.as<_1c0c915c6_comptimeStatics>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_10(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0c93045_Str(_self_.safe_ptr<_1c0c92bc1_comptimeEnumField>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_10(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0c93386_Equal(_self_.data.as<_1c0c92bc1_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_11(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0c94464_Str(_self_.safe_ptr<_1c0c93ed0_comptimeEnumFields>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_11(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0c947a5_Equal(_self_.data.as<_1c0c93ed0_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_12(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0c959d7_Str(_self_.safe_ptr<_1c0c95663_comptimeParam>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_12(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0c95d28_Equal(_self_.data.as<_1c0c95663_comptimeParam>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_13(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0c97c4d_Str(_self_.safe_ptr<_1c0c978c9_comptimeParams>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_13(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0c9808e_Equal(_self_.data.as<_1c0c978c9_comptimeParams>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_14(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0c99348_Str(_self_.safe_ptr<_1c0c98ec4_comptimeTypeInfos>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_14(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0c99689_Equal(_self_.data.as<_1c0c98ec4_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_15(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0c9a943_Str(_self_.safe_ptr<_1c0c9a5be_comptimeTypeInfo>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_15(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0c9ac84_Equal(_self_.data.as<_1c0c9a5be_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_16(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0ca1e55_Str(_self_.safe_ptr<_1c0ca1ad1_comptimeValue>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_16(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0ca2296_Equal(_self_.data.as<_1c0ca1ad1_comptimeValue>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_17(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0ca47a4_Str(_self_.safe_ptr<_1c0ca4430_comptimeFiles>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_17(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0ca4ae5_Equal(_self_.data.as<_1c0ca4430_comptimeFiles>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_18(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0ca5d9e_Str(_self_.safe_ptr<_1c0ca5a2a_comptimeFile>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_18(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0ca61e0_Equal(_self_.data.as<_1c0ca5a2a_comptimeFile>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_19(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0db08d2_Str(_self_.safe_ptr<_1c0db0519_TypeKind>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_19(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0db0c23_Equal(_self_.data.as<_1c0db0519_TypeKind>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_20(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0db8434_Str(_self_.safe_ptr<_1c0db80e3_Prim>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_20(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0db8775_Equal(_self_.data.as<_1c0db80e3_Prim>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_21(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0dbbe93_Str(_self_.safe_ptr<_1c0dbbb1e_Sptr>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_21(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0dbc2d4_Equal(_self_.data.as<_1c0dbbb1e_Sptr>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_22(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0dbca76_Str(_self_.safe_ptr<_1c0dbc5e2_Slc>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_22(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0dbcdb7_Equal(_self_.data.as<_1c0dbc5e2_Slc>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_23(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0dbd55a_Str(_self_.safe_ptr<_1c0dbd1d6_Tuple>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_23(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0dbd89b_Equal(_self_.data.as<_1c0dbd1d6_Tuple>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_24(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0dbe10a_Str(_self_.safe_ptr<_1c0dbdc86_Map>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_24(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0dbe44b_Equal(_self_.data.as<_1c0dbdc86_Map>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_25(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0dbec87_Str(_self_.safe_ptr<_1c0dbe913_Arr>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_25(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0dc00c8_Equal(_self_.data.as<_1c0dbe913_Arr>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_26(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1c0dc075a_Str(_self_.safe_ptr<_1c0dc03d6_Ptr>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_26(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1c0dc0a9b_Equal(_self_.data.as<_1c0dc03d6_Ptr>(), _5621_other);
}
inline jule::Str _1c0daeabd_Str_Kind_27(jule::Trait<_1c0db0063_Kind> _self_) {
	return _1a8874996_Str(_self_.safe_ptr<_1a8874611_customType>());
}
inline jule::Bool _1c0daee0e_Equal_Kind_27(jule::Trait<_1c0db0063_Kind> _self_, jule::Ptr<_1c0db0519_TypeKind> _5621_other) {
	return _1a8874cd7_Equal(_self_.data.as<_1a8874611_customType>(), _5621_other);
}
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0dcd339_SelectPackage_Lookup_0(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)> _932_selector) {
	return _1c0cb98a7_SelectPackage(_self_.safe_ptr<_1c0cb9412_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1c0d2b94c_Var> _1c0dcd735_FindVar_Lookup_0(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1c0cb9ca3_FindVar(_self_.safe_ptr<_1c0cb9412_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1c0dae727_TypeAlias> _1c0dcdb31_FindTypeAlias_Lookup_0(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1c0cba19e_FindTypeAlias(_self_.safe_ptr<_1c0cb9412_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1c0c5b64b_Struct> _1c0dce02c_FindStruct_Lookup_0(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1c0cba59a_FindStruct(_self_.safe_ptr<_1c0cb9412_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1c0c715a6_Fn> _1c0dce428_FindFn_Lookup_0(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1c0cba996_FindFn(_self_.safe_ptr<_1c0cb9412_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1c0c84850_Trait> _1c0dce769_FindTrait_Lookup_0(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _2928_ident) {
	return _1c0cbacd7_FindTrait(_self_.safe_ptr<_1c0cb9412_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1c0c8704a_Enum> _1c0dceaaa_FindEnum_Lookup_0(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _3327_ident) {
	return _1c0cbb128_FindEnum(_self_.safe_ptr<_1c0cb9412_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1c0c88755_TypeEnum> _1c0dcedeb_FindTypeEnum_Lookup_0(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _3731_ident) {
	return _1c0cbb469_FindTypeEnum(_self_.safe_ptr<_1c0cb9412_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0dcd339_SelectPackage_Lookup_1(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)> _932_selector) {
	return _1c0cd3a25_SelectPackage(_self_.safe_ptr<_1c0cd353b_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1c0d2b94c_Var> _1c0dcd735_FindVar_Lookup_1(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1c0cd3e21_FindVar(_self_.safe_ptr<_1c0cd353b_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1c0dae727_TypeAlias> _1c0dcdb31_FindTypeAlias_Lookup_1(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1c0cd431c_FindTypeAlias(_self_.safe_ptr<_1c0cd353b_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1c0c5b64b_Struct> _1c0dce02c_FindStruct_Lookup_1(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1c0cd4718_FindStruct(_self_.safe_ptr<_1c0cd353b_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1c0c715a6_Fn> _1c0dce428_FindFn_Lookup_1(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1c0cd4b14_FindFn(_self_.safe_ptr<_1c0cd353b_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1c0c84850_Trait> _1c0dce769_FindTrait_Lookup_1(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _2928_ident) {
	return _1c0cd4e55_FindTrait(_self_.safe_ptr<_1c0cd353b_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1c0c8704a_Enum> _1c0dceaaa_FindEnum_Lookup_1(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _3327_ident) {
	return _1c0cd5296_FindEnum(_self_.safe_ptr<_1c0cd353b_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1c0c88755_TypeEnum> _1c0dcedeb_FindTypeEnum_Lookup_1(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _3731_ident) {
	return _1c0cd55d7_FindTypeEnum(_self_.safe_ptr<_1c0cd353b_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0dcd339_SelectPackage_Lookup_2(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)> _932_selector) {
	return _1c0cd6907_SelectPackage(_self_.safe_ptr<_1c0cd6462_Package>(), _932_selector);
}
inline jule::Ptr<_1c0d2b94c_Var> _1c0dcd735_FindVar_Lookup_2(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1c0cd6d03_FindVar(_self_.safe_ptr<_1c0cd6462_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1c0dae727_TypeAlias> _1c0dcdb31_FindTypeAlias_Lookup_2(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1c0cd71ee_FindTypeAlias(_self_.safe_ptr<_1c0cd6462_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1c0c5b64b_Struct> _1c0dce02c_FindStruct_Lookup_2(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1c0cd75ea_FindStruct(_self_.safe_ptr<_1c0cd6462_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1c0c715a6_Fn> _1c0dce428_FindFn_Lookup_2(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1c0cd79e6_FindFn(_self_.safe_ptr<_1c0cd6462_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1c0c84850_Trait> _1c0dce769_FindTrait_Lookup_2(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _2928_ident) {
	return _1c0cd7d37_FindTrait(_self_.safe_ptr<_1c0cd6462_Package>(), _2928_ident);
}
inline jule::Ptr<_1c0c8704a_Enum> _1c0dceaaa_FindEnum_Lookup_2(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _3327_ident) {
	return _1c0cd8178_FindEnum(_self_.safe_ptr<_1c0cd6462_Package>(), _3327_ident);
}
inline jule::Ptr<_1c0c88755_TypeEnum> _1c0dcedeb_FindTypeEnum_Lookup_2(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _3731_ident) {
	return _1c0cd84b9_FindTypeEnum(_self_.safe_ptr<_1c0cd6462_Package>(), _3731_ident);
}
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0dcd339_SelectPackage_Lookup_3(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)> _932_selector) {
	return _1c0d04b9a_SelectPackage(_self_.safe_ptr<_1c0d04705_Sema>(), _932_selector);
}
inline jule::Ptr<_1c0d2b94c_Var> _1c0dcd735_FindVar_Lookup_3(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1c0d05096_FindVar(_self_.safe_ptr<_1c0d04705_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1c0dae727_TypeAlias> _1c0dcdb31_FindTypeAlias_Lookup_3(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1c0d05492_FindTypeAlias(_self_.safe_ptr<_1c0d04705_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1c0c5b64b_Struct> _1c0dce02c_FindStruct_Lookup_3(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1c0d0588d_FindStruct(_self_.safe_ptr<_1c0d04705_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1c0c715a6_Fn> _1c0dce428_FindFn_Lookup_3(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1c0d05c89_FindFn(_self_.safe_ptr<_1c0d04705_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1c0c84850_Trait> _1c0dce769_FindTrait_Lookup_3(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _2928_ident) {
	return _1c0d060ca_FindTrait(_self_.safe_ptr<_1c0d04705_Sema>(), _2928_ident);
}
inline jule::Ptr<_1c0c8704a_Enum> _1c0dceaaa_FindEnum_Lookup_3(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _3327_ident) {
	return _1c0d0641b_FindEnum(_self_.safe_ptr<_1c0d04705_Sema>(), _3327_ident);
}
inline jule::Ptr<_1c0c88755_TypeEnum> _1c0dcedeb_FindTypeEnum_Lookup_3(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _3731_ident) {
	return _1c0d0675c_FindTypeEnum(_self_.safe_ptr<_1c0d04705_Sema>(), _3731_ident);
}
inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0dcd339_SelectPackage_Lookup_4(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)> _932_selector) {
	return _1c0d7a616_SelectPackage(_self_.safe_ptr<_1c0d7a12c_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1c0d2b94c_Var> _1c0dcd735_FindVar_Lookup_4(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1c0d7aa12_FindVar(_self_.safe_ptr<_1c0d7a12c_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1c0dae727_TypeAlias> _1c0dcdb31_FindTypeAlias_Lookup_4(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1c0d7ae0d_FindTypeAlias(_self_.safe_ptr<_1c0d7a12c_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1c0c5b64b_Struct> _1c0dce02c_FindStruct_Lookup_4(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1c0d7b309_FindStruct(_self_.safe_ptr<_1c0d7a12c_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1c0c715a6_Fn> _1c0dce428_FindFn_Lookup_4(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1c0d7b705_FindFn(_self_.safe_ptr<_1c0d7a12c_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1c0c84850_Trait> _1c0dce769_FindTrait_Lookup_4(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _2928_ident) {
	return _1c0d7ba46_FindTrait(_self_.safe_ptr<_1c0d7a12c_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1c0c8704a_Enum> _1c0dceaaa_FindEnum_Lookup_4(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _3327_ident) {
	return _1c0d7bd87_FindEnum(_self_.safe_ptr<_1c0d7a12c_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1c0c88755_TypeEnum> _1c0dcedeb_FindTypeEnum_Lookup_4(jule::Trait<_1c0dd0050_Lookup> _self_, jule::Str _3731_ident) {
	return _1c0d7c1c8_FindTypeEnum(_self_.safe_ptr<_1c0d7a12c_SymbolTable>(), _3731_ident);
}
inline jule::Str _1a88b618b_Name_CommonFlag_0(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	return _1ac156461_Name(_self_.safe_ptr<_1ac156043_Flag>());
}
inline jule::I32 _1a88b6334_Short_CommonFlag_0(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	return _1ac15686d_Short(_self_.safe_ptr<_1ac156043_Flag>());
}
inline jule::Str _1a8bb4445_What_CommonFlag_0(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	return _1ac1565b5_What(_self_.safe_ptr<_1ac156043_Flag>());
}
inline void _1a8bb4588_Reset_CommonFlag_0(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	_1ac156719_Reset(_self_.safe_ptr<_1ac156043_Flag>());
}
inline jule::Str _1a88b618b_Name_CommonFlag_1(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	return _1ac1597c7_Name(_self_.safe_ptr<_1ac159b90_Flag>());
}
inline jule::I32 _1a88b6334_Short_CommonFlag_1(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	return _1ac15a0be_Short(_self_.safe_ptr<_1ac159b90_Flag>());
}
inline jule::Str _1a8bb4445_What_CommonFlag_1(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	return _1ac15991a_What(_self_.safe_ptr<_1ac159b90_Flag>());
}
inline void _1a8bb4588_Reset_CommonFlag_1(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	_1ac159e7b_Reset(_self_.safe_ptr<_1ac159b90_Flag>());
}
inline jule::Str _1a88b618b_Name_CommonFlag_2(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	return _1ac15cec3_Name(_self_.safe_ptr<_1ac15d38b_Flag>());
}
inline jule::I32 _1a88b6334_Short_CommonFlag_2(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	return _1ac15d7ba_Short(_self_.safe_ptr<_1ac15d38b_Flag>());
}
inline jule::Str _1a8bb4445_What_CommonFlag_2(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	return _1ac15d116_What(_self_.safe_ptr<_1ac15d38b_Flag>());
}
inline void _1a8bb4588_Reset_CommonFlag_2(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	_1ac15d677_Reset(_self_.safe_ptr<_1ac15d38b_Flag>());
}
inline jule::Str _1a88b618b_Name_CommonFlag_3(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	return _1ac161713_Name(_self_.safe_ptr<_1ac161acb_Flag>());
}
inline jule::I32 _1a88b6334_Short_CommonFlag_3(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	return _1ac16200a_Short(_self_.safe_ptr<_1ac161acb_Flag>());
}
inline jule::Str _1a8bb4445_What_CommonFlag_3(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	return _1ac161856_What(_self_.safe_ptr<_1ac161acb_Flag>());
}
inline void _1a8bb4588_Reset_CommonFlag_3(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	_1ac161db7_Reset(_self_.safe_ptr<_1ac161acb_Flag>());
}
inline jule::Str _1a88b618b_Name_CommonFlag_4(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	return _1ac164e0e_Name(_self_.safe_ptr<_1ac1652c7_Flag>());
}
inline jule::I32 _1a88b6334_Short_CommonFlag_4(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	return _1ac165706_Short(_self_.safe_ptr<_1ac1652c7_Flag>());
}
inline jule::Str _1a8bb4445_What_CommonFlag_4(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	return _1ac165052_What(_self_.safe_ptr<_1ac1652c7_Flag>());
}
inline void _1a8bb4588_Reset_CommonFlag_4(jule::Trait<_1a8bb46cb_CommonFlag> _self_) {
	_1ac1655b3_Reset(_self_.safe_ptr<_1ac1652c7_Flag>());
}


static _1c0c8a911_comptimeRangeKindMptrData _1c0c8a911_comptimeRangeKind_mptr_data[] = {
	{
		._1c0c8a108_ready=_1c0c8a108_ready_comptimeRangeKind_0,
		._1c0c8a526_step=_1c0c8a526_step_comptimeRangeKind_0,
		._1c0c8a7ac_len=_1c0c8a7ac_len_comptimeRangeKind_0,
	},
	{
		._1c0c8a108_ready=_1c0c8a108_ready_comptimeRangeKind_1,
		._1c0c8a526_step=_1c0c8a526_step_comptimeRangeKind_1,
		._1c0c8a7ac_len=_1c0c8a7ac_len_comptimeRangeKind_1,
	},
	{
		._1c0c8a108_ready=_1c0c8a108_ready_comptimeRangeKind_2,
		._1c0c8a526_step=_1c0c8a526_step_comptimeRangeKind_2,
		._1c0c8a7ac_len=_1c0c8a7ac_len_comptimeRangeKind_2,
	},
	{
		._1c0c8a108_ready=_1c0c8a108_ready_comptimeRangeKind_3,
		._1c0c8a526_step=_1c0c8a526_step_comptimeRangeKind_3,
		._1c0c8a7ac_len=_1c0c8a7ac_len_comptimeRangeKind_3,
	},
	{
		._1c0c8a108_ready=_1c0c8a108_ready_comptimeRangeKind_4,
		._1c0c8a526_step=_1c0c8a526_step_comptimeRangeKind_4,
		._1c0c8a7ac_len=_1c0c8a7ac_len_comptimeRangeKind_4,
	},
	{
		._1c0c8a108_ready=_1c0c8a108_ready_comptimeRangeKind_5,
		._1c0c8a526_step=_1c0c8a526_step_comptimeRangeKind_5,
		._1c0c8a7ac_len=_1c0c8a7ac_len_comptimeRangeKind_5,
	},
};
static _1c0cd0626_ImporterMptrData _1c0cd0626_Importer_mptr_data[] = {
	{
		._1c0cce405_SetModPath=_1c0cce405_SetModPath_Importer_0,
		._1c0cce68b_GetModPath=_1c0cce68b_GetModPath_Importer_0,
		._1c0cce9cc_ModById=_1c0cce9cc_ModById_Importer_0,
		._1c0cced1d_GetImport=_1c0cced1d_GetImport_Importer_0,
		._1c0cd0219_ImportPackage=_1c0cd0219_ImportPackage_Importer_0,
		._1c0cd04c2_Imported=_1c0cd04c2_Imported_Importer_0,
	},
};
static _1c0db0063_KindMptrData _1c0db0063_Kind_mptr_data[] = {
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_0,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_0,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_1,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_1,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_2,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_2,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_3,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_3,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_4,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_4,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_5,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_5,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_6,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_6,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_7,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_7,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_8,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_8,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_9,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_9,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_10,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_10,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_11,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_11,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_12,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_12,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_13,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_13,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_14,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_14,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_15,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_15,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_16,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_16,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_17,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_17,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_18,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_18,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_19,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_19,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_20,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_20,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_21,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_21,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_22,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_22,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_23,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_23,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_24,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_24,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_25,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_25,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_26,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_26,
	},
	{
		._1c0daeabd_Str=_1c0daeabd_Str_Kind_27,
		._1c0daee0e_Equal=_1c0daee0e_Equal_Kind_27,
	},
};
static _1c0dd0050_LookupMptrData _1c0dd0050_Lookup_mptr_data[] = {
	{
		._1c0dcd339_SelectPackage=_1c0dcd339_SelectPackage_Lookup_0,
		._1c0dcd735_FindVar=_1c0dcd735_FindVar_Lookup_0,
		._1c0dcdb31_FindTypeAlias=_1c0dcdb31_FindTypeAlias_Lookup_0,
		._1c0dce02c_FindStruct=_1c0dce02c_FindStruct_Lookup_0,
		._1c0dce428_FindFn=_1c0dce428_FindFn_Lookup_0,
		._1c0dce769_FindTrait=_1c0dce769_FindTrait_Lookup_0,
		._1c0dceaaa_FindEnum=_1c0dceaaa_FindEnum_Lookup_0,
		._1c0dcedeb_FindTypeEnum=_1c0dcedeb_FindTypeEnum_Lookup_0,
	},
	{
		._1c0dcd339_SelectPackage=_1c0dcd339_SelectPackage_Lookup_1,
		._1c0dcd735_FindVar=_1c0dcd735_FindVar_Lookup_1,
		._1c0dcdb31_FindTypeAlias=_1c0dcdb31_FindTypeAlias_Lookup_1,
		._1c0dce02c_FindStruct=_1c0dce02c_FindStruct_Lookup_1,
		._1c0dce428_FindFn=_1c0dce428_FindFn_Lookup_1,
		._1c0dce769_FindTrait=_1c0dce769_FindTrait_Lookup_1,
		._1c0dceaaa_FindEnum=_1c0dceaaa_FindEnum_Lookup_1,
		._1c0dcedeb_FindTypeEnum=_1c0dcedeb_FindTypeEnum_Lookup_1,
	},
	{
		._1c0dcd339_SelectPackage=_1c0dcd339_SelectPackage_Lookup_2,
		._1c0dcd735_FindVar=_1c0dcd735_FindVar_Lookup_2,
		._1c0dcdb31_FindTypeAlias=_1c0dcdb31_FindTypeAlias_Lookup_2,
		._1c0dce02c_FindStruct=_1c0dce02c_FindStruct_Lookup_2,
		._1c0dce428_FindFn=_1c0dce428_FindFn_Lookup_2,
		._1c0dce769_FindTrait=_1c0dce769_FindTrait_Lookup_2,
		._1c0dceaaa_FindEnum=_1c0dceaaa_FindEnum_Lookup_2,
		._1c0dcedeb_FindTypeEnum=_1c0dcedeb_FindTypeEnum_Lookup_2,
	},
	{
		._1c0dcd339_SelectPackage=_1c0dcd339_SelectPackage_Lookup_3,
		._1c0dcd735_FindVar=_1c0dcd735_FindVar_Lookup_3,
		._1c0dcdb31_FindTypeAlias=_1c0dcdb31_FindTypeAlias_Lookup_3,
		._1c0dce02c_FindStruct=_1c0dce02c_FindStruct_Lookup_3,
		._1c0dce428_FindFn=_1c0dce428_FindFn_Lookup_3,
		._1c0dce769_FindTrait=_1c0dce769_FindTrait_Lookup_3,
		._1c0dceaaa_FindEnum=_1c0dceaaa_FindEnum_Lookup_3,
		._1c0dcedeb_FindTypeEnum=_1c0dcedeb_FindTypeEnum_Lookup_3,
	},
	{
		._1c0dcd339_SelectPackage=_1c0dcd339_SelectPackage_Lookup_4,
		._1c0dcd735_FindVar=_1c0dcd735_FindVar_Lookup_4,
		._1c0dcdb31_FindTypeAlias=_1c0dcdb31_FindTypeAlias_Lookup_4,
		._1c0dce02c_FindStruct=_1c0dce02c_FindStruct_Lookup_4,
		._1c0dce428_FindFn=_1c0dce428_FindFn_Lookup_4,
		._1c0dce769_FindTrait=_1c0dce769_FindTrait_Lookup_4,
		._1c0dceaaa_FindEnum=_1c0dceaaa_FindEnum_Lookup_4,
		._1c0dcedeb_FindTypeEnum=_1c0dcedeb_FindTypeEnum_Lookup_4,
	},
};
static _1a8bb46cb_CommonFlagMptrData _1a8bb46cb_CommonFlag_mptr_data[] = {
	{
		._1a88b618b_Name=_1a88b618b_Name_CommonFlag_0,
		._1a88b6334_Short=_1a88b6334_Short_CommonFlag_0,
		._1a8bb4445_What=_1a8bb4445_What_CommonFlag_0,
		._1a8bb4588_Reset=_1a8bb4588_Reset_CommonFlag_0,
	},
	{
		._1a88b618b_Name=_1a88b618b_Name_CommonFlag_1,
		._1a88b6334_Short=_1a88b6334_Short_CommonFlag_1,
		._1a8bb4445_What=_1a8bb4445_What_CommonFlag_1,
		._1a8bb4588_Reset=_1a8bb4588_Reset_CommonFlag_1,
	},
	{
		._1a88b618b_Name=_1a88b618b_Name_CommonFlag_2,
		._1a88b6334_Short=_1a88b6334_Short_CommonFlag_2,
		._1a8bb4445_What=_1a8bb4445_What_CommonFlag_2,
		._1a8bb4588_Reset=_1a8bb4588_Reset_CommonFlag_2,
	},
	{
		._1a88b618b_Name=_1a88b618b_Name_CommonFlag_3,
		._1a88b6334_Short=_1a88b6334_Short_CommonFlag_3,
		._1a8bb4445_What=_1a8bb4445_What_CommonFlag_3,
		._1a8bb4588_Reset=_1a8bb4588_Reset_CommonFlag_3,
	},
	{
		._1a88b618b_Name=_1a88b618b_Name_CommonFlag_4,
		._1a88b6334_Short=_1a88b6334_Short_CommonFlag_4,
		._1a8bb4445_What=_1a8bb4445_What_CommonFlag_4,
		._1a8bb4588_Reset=_1a8bb4588_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c744aa_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1c0c744aa_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0d2b94c_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1c0d2b94c_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c5e3c9_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1c0c5e3c9_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c84850_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1c0c84850_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c573c2_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1c0c573c2_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c52356_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1c0c52356_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c56525_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1c0c56525_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c4c6a3_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1c0c4c6a3_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c56c62_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1c0c56c62_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c4d781_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1c0c4d781_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c548ca_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1c0c548ca_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c55865_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1c0c55865_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2036445ea_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_2036445ea_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c3b0ed_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1c0c3b0ed_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cb49a1_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1c0cb49a1_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cb210d_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1c0cb210d_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6c173_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1c0c6c173_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0d80352_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1c0d80352_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6d372_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1c0c6d372_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6adec_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1c0c6adec_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c69439_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1c0c69439_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c69813_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1c0c69813_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6a0b6_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1c0c6a0b6_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6a56c_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1c0c6a56c_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6bc99_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1c0c6bc99_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6b8c0_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1c0c6b8c0_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6d66e_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1c0c6d66e_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c65842_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1c0c65842_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cb2c46_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1c0cb2c46_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cb3043_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1c0cb3043_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c4eb28_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1c0c4eb28_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cb34e9_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1c0cb34e9_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c50530_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1c0c50530_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cb3e45_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1c0cb3e45_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cb42ca_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1c0cb42ca_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cb4d7a_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1c0cb4d7a_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cb5254_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1c0cb5254_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cb570a_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1c0cb570a_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c661c2_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1c0c661c2_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cb5ad4_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1c0cb5ad4_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cb6244_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1c0cb6244_Match> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cb7476_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1c0cb7476_FallSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cb46a4_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1c0cb46a4_BreakSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0cb780b_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1c0cb780b_RetSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c4aa14_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1c0c4aa14_ScopeTree> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c3ed27_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1c0c3ed27_Expr> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c51b19_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1c0c51b19_Conditional> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c4e2ed_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1c0c4e2ed_Iter> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c50cd3_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1c0c50cd3_ContSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c480c7_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1c0c480c7_LabelSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c484a1_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1c0c484a1_GotoSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c49491_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1c0c49491_AssignSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c53049_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1c0c53049_MatchCase> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c4879d_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1c0c4879d_FallSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c50909_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1c0c50909_BreakSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c4db5a_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1c0c4db5a_RetSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c406eb_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1c0c406eb_UseExpr> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c715a6_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1c0c715a6_Fn> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c5b64b_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1c0c5b64b_Struct> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0dae727_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1c0dae727_TypeAlias> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c8704a_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1c0c8704a_Enum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c88755_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1c0c88755_TypeEnum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c3ccae_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1c0c3ccae_ArrTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c3be23_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1c0c3be23_SlcTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c3c51c_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1c0c3c51c_PtrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c3ba8d_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1c0c3ba8d_SptrTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c3d50c_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1c0c3d50c_MapTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c3c220_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1c0c3c220_TupleTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c422ad_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1c0c422ad_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c65c1b_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1c0c65c1b_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c44546_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1c0c44546_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c45b52_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1c0c45b52_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c41752_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1c0c41752_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c409e8_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1c0c409e8_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c69060_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1c0c69060_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6cb9b_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1c0c6cb9b_RuneExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0db0519_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1c0db0519_TypeKind> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c68c63_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1c0c68c63_ArrayExprModel> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c42e3a_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1c0c42e3a_SubIdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c3b3ea_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1c0c3b3ea_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c41dd4_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1c0c41dd4_UnaryExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c3a9e3_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1c0c3a9e3_TypeDecl> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c42a61_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1c0c42a61_NsSelectionExpr> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c3b791_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1c0c3b791_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c674ae_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1c0c674ae_SlicingExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c64e90_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1c0c64e90_CastingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c4634a_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1c0c4634a_SliceExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c64610_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1c0c64610_StructLitExprModel> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c68889_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1c0c68889_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c67a42_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1c0c67a42_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c683d3_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1c0c683d3_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c66e2b_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1c0c66e2b_MapExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6659b_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1c0c6659b_AnonFnExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c40124_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1c0c40124_RangeExpr> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c40dc2_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1c0c40dc2_LitExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c4129b_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1c0c4129b_UnsafeExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c46cda_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1c0c46cda_IndexingExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c4744a_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1c0c4744a_SlicingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c42687_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1c0c42687_CastExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c44d71_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1c0c44d71_StructLit> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c43a51_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1c0c43a51_FnCallExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c45327_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1c0c45327_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c433e1_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1c0c433e1_BinopExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c63c3b_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1c0c63c3b_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c63862_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1c0c63862_BinopExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6490c_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1c0c6490c_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c69bdc_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1c0c69bdc_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6aa23_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1c0c6aa23_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6b1e9_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1c0c6b1e9_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6b4e6_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1c0c6b4e6_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c67c2e_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1c0c67c2e_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6c89e_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1c0c6c89e_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0c6ce98_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1c0c6ce98_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0eae717_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1c0eae717_MutSlicingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0eb0240_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1c0eb0240_PushToSliceExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0eb0619_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1c0eb0619_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0ead43b_SwapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1c0ead43b_SwapExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0ead859_EmptyCompareExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1c0ead859_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0eae184_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1c0eae184_StrCompExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0eaea14_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1c0eaea14_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0eadb56_RefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1c0eadb56_RefExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0eaed11_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1c0eaed11_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0eb0916_InlineStdInternalNosafeStobs>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1c0eb0916_InlineStdInternalNosafeStobs> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type130_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type130_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=__jule_any_type130_eq, .to_str=__jule_any_type130_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type130 && __jule_any_type130_eq(any.data.alloc, (void*)&other); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _21d2d9055_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1a8bbb282_OutDir = jule::Str::lit("dist", 4);
jule::Str _1a8bbb55c_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1a8bbb826_Out = jule::Str();
jule::Str _21a9570aa_Compiler = jule::Str();
jule::Str _21a9572ca_CompilerPath = jule::Str();
jule::Str _21a9574ea_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _21a95771a_Shadowing = false;
jule::Bool _21a95797e_Transpilation = false;
jule::Bool _21a957c48_Test = false;
jule::Bool _21a958012_RC = true;
jule::Bool _21a9583db_Safety = true;
jule::Bool _21a9586a5_Production = false;
jule::Ptr<_21cc12880_RangeTable> _21cb9d145__L = jule::new_ptr<_21cc12880_RangeTable>(_21cc12880_RangeTable{._field_R16=jule::Slice<_21cc11d9b_Range16>::make({_21cc11d9b_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_21cc11d9b_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_21cc11d9b_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_21cc11d9b_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_21cc11d9b_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_21cc11d9b_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_21cc11d9b_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_21cc11d9b_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_21cc11d9b_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_21cc11d9b_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_21cc11d9b_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_21cc11d9b_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_21cc11d9b_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_21cc11d9b_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_21cc11d9b_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_21cc11d9b_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_21cc11d9b_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_21cc11d9b_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_21cc11d9b_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_21cc11d9b_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_21cc11d9b_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_21cc11d9b_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_21cc11d9b_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_21cc11d9b_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_21cc11d9b_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_21cc11d9b_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_21cc11d9b_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_21cc11d9b_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_21cc11d9b_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_21cc11d9b_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_21cc11d9b_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_21cc11d9b_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_21cc11d9b_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_21cc11d9b_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_21cc11d9b_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_21cc11d9b_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_21cc11d9b_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_21cc11d9b_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_21cc11d9b_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_21cc11d9b_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_21cc11d9b_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_21cc11d9b_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_21cc11d9b_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_21cc11d9b_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_21cc11d9b_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_21cc11d9b_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_21cc11d9b_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_21cc11d9b_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_21cc11d9b_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_21cc11d9b_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_21cc11d9b_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_21cc11d9b_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_21cc11d9b_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_21cc11d9b_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_21cc11d9b_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_21cc11d9b_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_21cc11d9b_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_21cc11d9b_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_21cc11d9b_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_21cc11d9b_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_21cc123c9_Range32>::make({_21cc123c9_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_21cc123c9_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_21cc123c9_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_21cc123c9_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_21cc123c9_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_21cc123c9_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_21cc123c9_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_21cc123c9_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_21cc123c9_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_21cc123c9_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_21cc123c9_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_21cc123c9_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_21cc123c9_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_21cc123c9_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_21cc123c9_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_21cc123c9_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_21cc123c9_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_21cc123c9_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_21cc123c9_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_21cc123c9_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_21cc123c9_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_21cc123c9_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_21cc123c9_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_21cc123c9_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_21cc123c9_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_21cc123c9_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_21cc123c9_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_21cc123c9_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_21cc123c9_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_21cc123c9_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_21cc123c9_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_21cc123c9_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_21cc123c9_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_21cc123c9_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_21cc123c9_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_21cc123c9_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_21cc123c9_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_21cc123c9_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_21cc123c9_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_21cc123c9_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_21cc123c9_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_21cc123c9_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_21cc123c9_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_21cc12880_RangeTable> _21cb9e135__LU = jule::new_ptr<_21cc12880_RangeTable>(_21cc12880_RangeTable{._field_R16=jule::Slice<_21cc11d9b_Range16>::make({_21cc11d9b_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_21cc11d9b_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_21cc11d9b_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_21cc11d9b_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_21cc11d9b_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_21cc11d9b_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_21cc11d9b_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_21cc11d9b_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_21cc11d9b_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_21cc11d9b_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_21cc11d9b_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_21cc11d9b_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_21cc11d9b_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_21cc11d9b_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_21cc11d9b_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_21cc11d9b_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_21cc11d9b_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_21cc123c9_Range32>::make({_21cc123c9_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_21cc123c9_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_21cc123c9_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_21cc123c9_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_21cc123c9_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_21cc123c9_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_21cc123c9_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _21cc0b1b4__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _21ce593ac_first = jule::Array<jule::U8,256>({});
jule::Array<_21ce59940_acceptRange,16> _21ce59c4d_acceptRanges = jule::Array<_21ce59940_acceptRange,16>({_21ce59940_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_21ce59940_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_21ce59940_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_21ce59940_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_21ce59940_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _21cdee341_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _21cded96c_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _21ce0060b_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _21d2d524e_PathStdlib = jule::Str();
jule::Str _21d2d54a2_PathExec = jule::Str();
jule::Str _21d2d575a_PathWd = jule::Str();
jule::Str _21d2d5a68_PathApi = jule::Str();
jule::Str _21d2d5d32_Os = jule::Str::lit("linux", 5);
jule::Str _21d2d60eb_Arch = jule::Str::lit("amd64", 5);
jule::Array<jule::U8,32> _2035c5b64__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _2035c622a__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_20361b33b_floatInfo _20361b726_f32info = _20361b33b_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_20361b33b_floatInfo _20361ba34_f64info = _20361b33b_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _203624564_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _2036263ce_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _203626ea1_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _2036272e2_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _20362a559_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_20362e32c_leftCheat> _20362e75b_leftCheats = jule::Slice<_20362e32c_leftCheat>::make({_20362e32c_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_20362e32c_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_20362e32c_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_20362e32c_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_20362e32c_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_20362e32c_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_20362e32c_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_20362e32c_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_20362e32c_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_20362e32c_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_20362e32c_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_20362e32c_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_20362e32c_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_20362e32c_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_20362e32c_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_20362e32c_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_20362e32c_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_20362e32c_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_20362e32c_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_20362e32c_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_20362e32c_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_20362e32c_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_20362e32c_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_20362e32c_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_20362e32c_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_20362e32c_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_20362e32c_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_20362e32c_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_20362e32c_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_20362e32c_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_20362e32c_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_20362e32c_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_20362e32c_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_20362e32c_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_20362e32c_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_20362e32c_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_20362e32c_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_20362e32c_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_20362e32c_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_20362e32c_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_20362e32c_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_20362e32c_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_20362e32c_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_20362e32c_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_20362e32c_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_20362e32c_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_20362e32c_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_20362e32c_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_20362e32c_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_20362e32c_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_20362e32c_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_20362e32c_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_20362e32c_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_20362e32c_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_20362e32c_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_20362e32c_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_20362e32c_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_20362e32c_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_20362e32c_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_20362e32c_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_20362e32c_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I64 _203635641_BitSize = 0LL;
jule::Str _20363592c_SysInt = jule::Str();
jule::Str _203635be6_SysUint = jule::Str();
jule::Array<jule::I32,5> _1d9a77470_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _1d9a7776c_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _1c0c1e2bd_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _1c0c1e8b7_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _1c0c1ebb4_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_1c0c2cce3_kindPair,28> _1c0c2d222_keywords = jule::Array<_1c0c2cce3_kindPair,28>({_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_1c0c2cce3_kindPair,46> _1c0c2d563_basicOps = jule::Array<_1c0c2cce3_kindPair,46>({_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_1c0c2cce3_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Slice<jule::Str> _1c0ca9347_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9b418_primNil = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9b726_primVoid = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("void", 4)), 20)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9b9e0_primAny = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("any", 3)), 20)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9bced_primStr = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("str", 3)), 20)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9c0b7_primBool = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("bool", 4)), 20)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9c381_primUintptr = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("uintptr", 7)), 20)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9c64a_primUint = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("uint", 4)), 20)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9ca24_primInt = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("int", 3)), 20)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9ccdd_primI8 = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("i8", 2)), 20)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9d0a7_primI16 = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("i16", 3)), 20)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9d371_primI32 = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("i32", 3)), 20)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9d63a_primI64 = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("i64", 3)), 20)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9d904_primU8 = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("u8", 2)), 20)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9dbbd_primU16 = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("u16", 3)), 20)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9de87_primU32 = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("u32", 3)), 20)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9e40a_primU64 = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("u64", 3)), 20)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9e6c4_primF32 = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("f32", 3)), 20)});
jule::Ptr<_1c0db0519_TypeKind> _1c0e9e98d_primF64 = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType(jule::Str::lit("f64", 3)), 20)});
jule::Str _1c18a2c20_stdPackageInternalNosafe = jule::Str::lit("std::internal::nosafe", 21);
jule::Map<jule::Uintptr,_1c18a3160_stdCacheData> _1c18a358e_stdCache = nullptr;
jule::Bool _1c18a4d65_Copy = false;
jule::Bool _1c18a5173_Deadcode = false;
jule::Bool _1c18a543c_Append = false;
jule::Bool _1c18a574a_Math = false;
jule::Bool _1c18a5a14_Access = false;
jule::Bool _1c18a5ccd_Inline = false;
jule::Bool _1c18a6097_Ptr = false;
jule::Bool _1c18a6471_Cond = false;
jule::Bool _1c18a673a_Str = false;
jule::Bool _1c18a6a04_Slice = false;
jule::Bool _1c18a6cbd_Assign = false;
jule::Bool _1c18a7087_StdInternalNosafe = false;
jule::Bool _1c1a23137_exprEnabled = false;
jule::Bool _1c1a233ac_scopeEnabled = false;
jule::Bool _1c1a23676_stdEnabled = false;
jule::Array<jule::U64,12> _1a8859cab_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1a877d7e5_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_21cc12880_RangeTable> _21cbab83a_Upper = _21cb9e135__LU;
jule::Ptr<_21cc12880_RangeTable> _21cba52d4_Letter = _21cb9d145__L;



std::ostream &operator<<(std::ostream &_Stream, _21cc11d9b_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _21cc123c9_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _21cc12880_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _21ce59940_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _21cd5e16e_StrBuilder static__21cd5e48d_New(jule::I64 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _21cd5e16e_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _21cd67a5c_Write(_21cd5e16e_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _21cd67d15_WriteStr(_21cd5e16e_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_21b9b7081_Stobs(&(_3027_s)));;
}



inline void _21cd680bd_WriteByte(_21cd5e16e_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _21cd6860c_Str(_21cd5e16e_StrBuilder* _self_) {
	return static_cast<jule::Str>((*(_self_))._field_buf);;
}



inline void _21cd6880a_Clear(_21cd5e16e_StrBuilder* _self_) {
	(*(_self_))._field_buf=(*(_self_))._field_buf.slice(0LL, 0LL);
}



inline jule::I64 _21cd68a91_Len(_21cd5e16e_StrBuilder* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buf.len());;
}



inline jule::Slice<jule::U8> _21cd690ad_Buf(_21cd5e16e_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _21cd69366_SetBuf(_21cd5e16e_StrBuilder* _self_, jule::Slice<jule::U8> _7536_buf) {
	(*(_self_))._field_buf=_7536_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _21cd5e16e_StrBuilder _Src) {
	_Stream << _21cd6860c_Str(&_Src);
	return _Stream;
}



inline jule::U8 _21cd6a147_index(_21cd69be6_lazyBuff* _self_, jule::I64 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _21cd6a400_append(_21cd69be6_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), ((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w)));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _21cd6a686_string(_21cd69be6_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _21cd69be6_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _21b9b0d8d_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_21b9b0d8d_DirEntry>>> static__21cd6e49d_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_21b9b0d8d_DirEntry>> __jule_func_result;
	DIR* _1613_dir = _21b97c8d7_Opendir((&(_1520_path[0LL])));;
	if ((_1613_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_21b9b0d8d_DirEntry>>>(jule::Any(_21b9ae41e_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2113_dirent = _21b97cba1_Readdir(_1613_dir);;
			if ((_2113_dirent == nullptr)) {
				goto _iter_end_1a99db48b;
			};
			jule::Str _2513_name = _21b96bee2_BytePtrToStr(((jule::U8*)((*(_2113_dirent)).d_name)));;
			jule::Ptr<_21b9be5b6_Status> _2617_stat = ({
				auto except = static__21b9b1872_Of(_21cd6b467_Join(jule::Slice<jule::Str>::make({_1520_path,_2513_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_21b9b0d8d_DirEntry>>>(except.error);
				} jule::Ptr<_21b9be5b6_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_21b9b0d8d_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_21b9b0d8d_DirEntry>(_21b9b0d8d_DirEntry{._field_Name=_2513_name, ._field_Stat=_2617_stat})); };
		}
	_iter_next_1a99db48b:;
	}
	_iter_end_1a99db48b:;;
	_21b97ce6a_Closedir(_1613_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_21b9b0d8d_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__21cd6e6ce_Create(jule::Str _3922_path) {
	if ((_21b97d872_Mkdir((&(_3922_path[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_21b9ae41e_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__21cd6e910_Remove(jule::Str _5122_path) {
	if ((_21b97db3b_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_21b9ae41e_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _21b9b1102_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_21b9bbcbc_File>> static__21b9aecb0_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _199_handle = _21b97c068_Open((&(_1820_path[0LL])), static_cast<jule::I64>(_1831_flag), _1844_mode);;
	if ((_199_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_21b9bbcbc_File>>(jule::Any(_21b9ae41e_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_21b9bbcbc_File>>(jule::Any(), static__21b9bc1eb_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_199_handle))));;
}



inline jule::VoidExceptional static__21b9aeee1_Remove(jule::Str _3022_path) {
	if ((_21b97de05_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_21b9ae41e_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _21b9b0475_Write(_21b9bbcbc_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_21b9a946e_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4424_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_21b9ae41e_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _21b9b07b6_Read(_21b9bbcbc_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_21b9a8b99_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_6427_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_21b9ae41e_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_21b9bbcbc_File> static__21b9bc1eb_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_21b9bbcbc_File>(_21b9bbcbc_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_21b9bbcbc_File>> static__21b9bc4b5_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_21b9bbcbc_File>>(jule::Any(), ({
		auto except = static__21b9aecb0_Open(_5622_path, static_cast<jule::I64>(578LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_21b9bbcbc_File>>(except.error);
		} jule::Ptr<_21b9bbcbc_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__21b9bc77e_Read(jule::Str _6820_path) {
	jule::Ptr<_21b9be5b6_Status> _699_s = ({
		auto except = static__21b9b1872_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_21b9be5b6_Status>(nullptr);});
	});;
	if ((!(_21b9bec26_IsReg(_699_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_21b9beeac_Size(_699_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_21b9bbcbc_File> _7913_f = ({
		auto except = static__21b9aecb0_Open(_6820_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_21b9bbcbc_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _21b9bda5a_Close(_7913_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8213_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_21b9beeac_Size(_699_s.ptr())), static_cast<jule::I64>(_21b9beeac_Size(_699_s.ptr())), 0);;
	jule::I64 _839_n = ({
		auto except = _21b9b07b6_Read(_7913_f.ptr(), _8213_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8213_buff.slice(0LL, _839_n));;
}



inline jule::VoidExceptional static__21b9bcb25_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I64 _9246_perm) {
	jule::Ptr<_21b9bbcbc_File> _9313_f = ({
		auto except = static__21b9aecb0_Open(_9221_path, static_cast<jule::I64>(577LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_21b9bbcbc_File>(nullptr);});
	});;
	({
		auto except = _21b9b0475_Write(_9313_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _21b9bda5a_Close(_9313_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _21b9bda5a_Close(_21b9bbcbc_File* _self_) {
	if ((_21b9a9040_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_21b9ae41e_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _21b9bbcbc_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_21b9be5b6_Status>> static__21b9b1872_Of(jule::Str _1118_path) {
	if ((_1118_path).empty()) {
		return jule::Exceptional<jule::Ptr<_21b9be5b6_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	struct stat _1513_handle = (struct stat){};;
	jule::I64 _169_code = _21b97bb39_Stat((&(_1118_path[0LL])), (&(_1513_handle)));;
	if ((_169_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_21b9be5b6_Status>>(jule::Any(_21b9ae41e_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_21b9be5b6_Status> _2013_stat = jule::new_ptr<_21b9be5b6_Status>();;
	(*(_2013_stat))._field_size=_1513_handle.st_size;
	if (((_1513_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*(_2013_stat))._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1513_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*(_2013_stat))._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_21b9be5b6_Status>>(jule::Any(), _2013_stat);;
}



inline jule::Bool _21b9be990_IsDir(_21b9be5b6_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _21b9bec26_IsReg(_21b9be5b6_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _21b9beeac_Size(_21b9be5b6_Status* _self_) {
	return (*(_self_))._field_size;;
}





std::ostream &operator<<(std::ostream &_Stream, _21b9be5b6_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _21d2d27e0_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _21ce0c86b_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _20361b33b_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _20361bec9_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _20362e32c_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _203626720_set(_20362ed55_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23913_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23913_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23913_i] == '+')) {
			_case_begin_1aa028c3c:;
			{
				(_23913_i)++;
			}
		}
		else if ((_23822_s[_23913_i] == '-')) {
			_case_begin_1aa028e3a:;
			{
				(*(_self_))._field_neg=true;
				(_23913_i)++;
			}
		}
		_match_end_1aa028d4c:;
	};
	jule::Bool _25613_sawdot = false;;
	jule::Bool _25713_sawdigits = false;;
	for (; (_23913_i < _23822_s.len()); (_23913_i)++) {
		{
			{
				
				if ((_23822_s[_23913_i] == '_')) {
					_case_begin_1aa02a5e0:;
					{
						goto _iter_next_1aa029e4c;
					}
				}
				else if ((_23822_s[_23913_i] == '.')) {
					_case_begin_1aa02a667:;
					{
						if (_25613_sawdot) {
							return __jule_func_result;;
						};
						_25613_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1aa029e4c;
					}
				}
				else if ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9'))) {
					_case_begin_1aa02a6de:;
					{
						_25713_sawdigits=true;
						if (((_23822_s[_23913_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1aa029e4c;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23913_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23913_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1aa029e4c;
					}
				}
				_match_end_1aa02a4be:;
			};
			goto _iter_end_1aa029e4c;
		}
	_iter_next_1aa029e4c:;
	}
	_iter_end_1aa029e4c:;;
	if ((!(_25713_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25613_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23913_i < _23822_s.len()) && (_203621bb0_lower(_23822_s[_23913_i]) == 'e'))) {
		(_23913_i)++;
		if ((_23913_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _30217_esign = 1LL;;
		if ((_23822_s[_23913_i] == '+')) {
			(_23913_i)++;
		} else if ((_23822_s[_23913_i] == '-')) {
			(_23913_i)++;
			_30217_esign=-1LL;
		};
		if ((((_23913_i >= _23822_s.len()) || (_23822_s[_23913_i] < '0')) || (_23822_s[_23913_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _31217_e = 0LL;;
		for (; ((_23913_i < _23822_s.len()) && ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9')) || (_23822_s[_23913_i] == '_'))); (_23913_i)++) {
			{
				if ((_23822_s[_23913_i] == '_')) {
					goto _iter_next_1aa0310a7;
				};
				if ((_31217_e < 10000LL)) {
					_31217_e=static_cast<jule::I64>((((_31217_e * 10LL) + static_cast<jule::I64>(_23822_s[_23913_i])) - '0'));
				};
			}
		_iter_next_1aa0310a7:;
		}
		_iter_end_1aa0310a7:;;
		(*(_self_))._field_dp+=(_31217_e * _30217_esign);
	};
	if ((_23913_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _203626a61_floatBits(_20362ed55_decimal* _self_, _20361b33b_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _33313_exp = 0LL;;
	jule::U64 _33413_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1aa03ee62;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1aa036bc3;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1aa03ee62;
	};
	_33313_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35917_n = 0LL;;
			if (((*(_self_))._field_dp >= _2036263ce_powtab.len())) {
				_35917_n=27LL;
			} else {
				_35917_n=_2036263ce_powtab[(*(_self_))._field_dp];
			};
			_2036304b5_shift(_self_, static_cast<jule::I64>((-(_35917_n))));
			_33313_exp+=_35917_n;
		}
	_iter_next_1aa03670b:;
	}
	_iter_end_1aa03670b:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36917_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _2036263ce_powtab.len())) {
				_36917_n=27LL;
			} else {
				_36917_n=_2036263ce_powtab[(-((*(_self_))._field_dp))];
			};
			_2036304b5_shift(_self_, _36917_n);
			_33313_exp-=_36917_n;
		}
	_iter_next_1aa037c3a:;
	}
	_iter_end_1aa037c3a:;;
	(_33313_exp)--;
	if ((_33313_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I64 _38613_n = (((*(_33229_flt))._field_bias + 1LL) - _33313_exp);;
		_2036304b5_shift(_self_, static_cast<jule::I64>((-(_38613_n))));
		_33313_exp+=_38613_n;
	};
	if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1aa036bc3;
	};
	_2036304b5_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_33229_flt))._field_mantbits))));
	_33413_mant=static_cast<jule::U64>(_203631065_roundedInteger(_self_));
	if ((_33413_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33413_mant>>=1LLU;
		(_33313_exp)++;
		if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1aa036bc3;
		};
	};
	if (((_33413_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33313_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1aa03ee62;
	_julec_label_1aa036bc3:;
	_33413_mant=0LLU;
	_33313_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33229_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1aa03ee62:;
	jule::U64 _42213_bits = (_33413_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42213_bits|=(static_cast<jule::U64>(((_33313_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42213_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42213_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _20363020c_assign(_20362ed55_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>(0);;
	jule::I64 _15513_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15713_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15713_v1);
			_15217_buf[_15513_n]=static_cast<jule::U8>(static_cast<jule::U8>((_15129_v + '0')));
			(_15513_n)++;
			_15129_v=_15713_v1;
		}
	_iter_next_1aa0435e7:;
	}
	_iter_end_1aa0435e7:;;
	(*(_self_))._field_nd=0LL;
	(_15513_n)--;
	for (; (_15513_n >= 0LL); (_15513_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15513_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1aa043d89:;
	}
	_iter_end_1aa043d89:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_2036316a3_trim(_self_);
}



inline void _2036304b5_shift(_20362ed55_decimal* _self_, jule::I64 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1aa045d8b:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1aa045e13:;
			{
				while ((_17628_k > 60LL)) {
					{
						_2036321ed_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1aa046a5c:;
				}
				_iter_end_1aa046a5c:;;
				_2036321ed_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_17628_k)));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1aa045e8a:;
			{
				while ((_17628_k < -60LL)) {
					{
						_20363198e_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1aa0469d5:;
				}
				_iter_end_1aa0469d5:;;
				_20363198e_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_17628_k)))));
			}
		}
		_match_end_1aa045c6a:;
	};
}



inline void _20363076d_roundDown(_20362ed55_decimal* _self_, jule::I64 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_2036316a3_trim(_self_);
}



inline void _203630a26_roundUp(_20362ed55_decimal* _self_, jule::I64 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _21113_i = (_20526_nd - 1LL);;
	for (; (_21113_i >= 0LL); (_21113_i)--) {
		{
			jule::U8 _21313_c = (*(_self_))._field_d[_21113_i];;
			if ((_21313_c < '9')) {
				((*(_self_))._field_d[_21113_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_21113_i + 1LL));
				return;;
			};
		}
	_iter_next_1aa049d6d:;
	}
	_iter_end_1aa049d6d:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _203630cce_round(_20362ed55_decimal* _self_, jule::I64 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_203632572_shouldRoundUp(_self_, _23224_nd)) {
		_203630a26_roundUp(_self_, _23224_nd);
	} else {
		_20363076d_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _203631065_roundedInteger(_20362ed55_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _24913_i = 0LL;;
	jule::U64 _25013_n = static_cast<jule::U64>(0LLU);;
	for (; ((_24913_i < (*(_self_))._field_dp) && (_24913_i < (*(_self_))._field_nd)); (_24913_i)++) {
		{
			_25013_n=static_cast<jule::U64>(((_25013_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24913_i] - '0'))));
		}
	_iter_next_1aa04cb62:;
	}
	_iter_end_1aa04cb62:;;
	for (; (_24913_i < (*(_self_))._field_dp); (_24913_i)++) {
		{
			_25013_n*=10LLU;
		}
	_iter_next_1aa04dc1d:;
	}
	_iter_end_1aa04dc1d:;;
	if (_203632572_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25013_n)++;
	};
	return _25013_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _20362ed55_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2036445ea_Const> static__203644a3a_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_2036445ea_Const>(_2036445ea_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_2036445ea_Const> static__203644d04_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_2036445ea_Const>(_2036445ea_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_2036445ea_Const> static__2036450bd_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_2036445ea_Const>(_2036445ea_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_2036445ea_Const> static__203645387_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_2036445ea_Const>(_2036445ea_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_2036445ea_Const> static__203645651_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_2036445ea_Const>(_2036445ea_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_2036445ea_Const> static__203645860_NewNil(void) {
	return jule::new_ptr<_2036445ea_Const>(_2036445ea_Const{._field_data=nullptr});;
}



inline jule::I64 _203645ec0_ReadI64(_2036445ea_Const* _self_) {
	if ((!(_2036485bb_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
}



inline jule::U64 _203646256_ReadU64(_2036445ea_Const* _self_) {
	if ((!(_203648852_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
}



inline jule::Bool _2036464dc_ReadBool(_2036445ea_Const* _self_) {
	if ((!(_203648ad8_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _203646773_ReadStr(_2036445ea_Const* _self_) {
	if ((!(_203648d6e_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _203646a09_ReadF64(_2036445ea_Const* _self_) {
	if ((!(_203649105_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
}



inline jule::I64 _203646c90_AsI64(_2036445ea_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aa0be541:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aa0c0201:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aa0c0267:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1aa0c018a:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa0c0135:;
	};
}



inline jule::U64 _203647026_AsU64(_2036445ea_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aa0c0b08:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aa0c1a1b:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aa0c1a82:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1aa0c091b:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aa0c08b6:;
	};
}



inline jule::F64 _2036472ac_AsF64(_2036445ea_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aa0c37dc:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aa0c238a:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aa0c329d:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else {
			_case_begin_1aa0c219d:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa0c2148:;
	};
}



inline void _203647565_SetI64(_2036445ea_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _20364781d_SetU64(_2036445ea_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _203647ac6_SetBool(_2036445ea_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _203647d7e_SetStr(_2036445ea_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _203648137_SetF64(_2036445ea_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _2036485bb_IsI64(_2036445ea_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aa0c702c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa0c72b3:;
			{
				return false;;
			}
		}
		_match_end_1aa0c725d:;
	};
}



inline jule::Bool _203648852_IsU64(_2036445ea_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aa0c7923:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa0c7b76:;
			{
				return false;;
			}
		}
		_match_end_1aa0c7b21:;
	};
}



inline jule::Bool _203648ad8_IsBool(_2036445ea_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1aa0c8380:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa0c85d3:;
			{
				return false;;
			}
		}
		_match_end_1aa0c857d:;
	};
}



inline jule::Bool _203648d6e_IsStr(_2036445ea_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aa0c8cdc:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa0c9040:;
			{
				return false;;
			}
		}
		_match_end_1aa0c8eda:;
	};
}



inline jule::Bool _203649105_IsF64(_2036445ea_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aa0c9749:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa0c999c:;
			{
				return false;;
			}
		}
		_match_end_1aa0c9947:;
	};
}



inline jule::Bool _20364938b_IsNil(_2036445ea_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _203649a1d_And(_2036445ea_Const* _self_, _2036445ea_Const _23818_x) {
	{
		
		if ((_203648ad8_IsBool(_self_) && _203648ad8_IsBool(&_23818_x))) {
			_case_begin_1aa0cdc9d:;
			{
				return (_2036464dc_ReadBool(_self_) && _2036464dc_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1aa0cdbe3:;
			{
				return false;;
			}
		}
		_match_end_1aa0cd808:;
	};
}



inline jule::Bool _203649d5e_Or(_2036445ea_Const* _self_, _2036445ea_Const _24917_x) {
	{
		
		if ((_203648ad8_IsBool(_self_) && _203648ad8_IsBool(&_24917_x))) {
			_case_begin_1aa0d00ac:;
			{
				return (_2036464dc_ReadBool(_self_) || _2036464dc_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1aa0ce74e:;
			{
				return false;;
			}
		}
		_match_end_1aa0ce6a5:;
	};
}



inline jule::Bool _20364a1a0_Eq(_2036445ea_Const* _self_, _2036445ea_Const _26017_x) {
	{
		
		if (_20364938b_IsNil(_self_)) {
			_case_begin_1aa0d13dd:;
			{
				return _20364938b_IsNil(&_26017_x);;
			}
		}
		else if (_203648ad8_IsBool(_self_)) {
			_case_begin_1aa0d1465:;
			{
				return (_203648ad8_IsBool(&_26017_x) && (_2036464dc_ReadBool(_self_) == _2036464dc_ReadBool(&_26017_x)));;
			}
		}
		else if (_203648d6e_IsStr(_self_)) {
			_case_begin_1aa0d16da:;
			{
				return (_203648d6e_IsStr(&_26017_x) && (_203646773_ReadStr(_self_) == _203646773_ReadStr(&_26017_x)));;
			}
		}
		else if (_2036485bb_IsI64(_self_)) {
			_case_begin_1aa0d1751:;
			{
				return (_203645ec0_ReadI64(_self_) == _203646c90_AsI64(&_26017_x));;
			}
		}
		else if (_203648852_IsU64(_self_)) {
			_case_begin_1aa0d17b7:;
			{
				return (_203646256_ReadU64(_self_) == _203647026_AsU64(&_26017_x));;
			}
		}
		else if (_203649105_IsF64(_self_)) {
			_case_begin_1aa0d182d:;
			{
				return (_203646a09_ReadF64(_self_) == _2036472ac_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1aa0d0a2a:;
			{
				return false;;
			}
		}
		_match_end_1aa0d0981:;
	};
}



inline jule::Bool _20364a4e1_Lt(_2036445ea_Const* _self_, _2036445ea_Const _28717_x) {
	{
		
		if (_203648d6e_IsStr(_self_)) {
			_case_begin_1aa0d50a1:;
			{
				return (_203648d6e_IsStr(&_28717_x) && (_203646773_ReadStr(_self_) < _203646773_ReadStr(&_28717_x)));;
			}
		}
		else if (_2036485bb_IsI64(_self_)) {
			_case_begin_1aa0d5117:;
			{
				return (_203645ec0_ReadI64(_self_) < _203646c90_AsI64(&_28717_x));;
			}
		}
		else if (_203648852_IsU64(_self_)) {
			_case_begin_1aa0d518e:;
			{
				return (_203646256_ReadU64(_self_) < _203647026_AsU64(&_28717_x));;
			}
		}
		else if (_203649105_IsF64(_self_)) {
			_case_begin_1aa0d53c0:;
			{
				return (_203646a09_ReadF64(_self_) < _2036472ac_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1aa0d1cc3:;
			{
				return false;;
			}
		}
		_match_end_1aa0d1c07:;
	};
}



inline jule::Bool _20364a832_LtEq(_2036445ea_Const* _self_, _2036445ea_Const _31019_x) {
	{
		
		if (_203648d6e_IsStr(_self_)) {
			_case_begin_1aa0d7c63:;
			{
				return (_203648d6e_IsStr(&_31019_x) && (_203646773_ReadStr(_self_) <= _203646773_ReadStr(&_31019_x)));;
			}
		}
		else if (_2036485bb_IsI64(_self_)) {
			_case_begin_1aa0d7cc9:;
			{
				return (_203645ec0_ReadI64(_self_) <= _203646c90_AsI64(&_31019_x));;
			}
		}
		else if (_203648852_IsU64(_self_)) {
			_case_begin_1aa0d7d51:;
			{
				return (_203646256_ReadU64(_self_) <= _203647026_AsU64(&_31019_x));;
			}
		}
		else if (_203649105_IsF64(_self_)) {
			_case_begin_1aa0d8082:;
			{
				return (_203646a09_ReadF64(_self_) <= _2036472ac_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1aa0d590e:;
			{
				return false;;
			}
		}
		_match_end_1aa0d5843:;
	};
}



inline jule::Bool _20364ab73_Gt(_2036445ea_Const* _self_, _2036445ea_Const _33317_x) {
	{
		
		if (_203648d6e_IsStr(_self_)) {
			_case_begin_1aa0da925:;
			{
				return (_203648d6e_IsStr(&_33317_x) && (_203646773_ReadStr(_self_) > _203646773_ReadStr(&_33317_x)));;
			}
		}
		else if (_2036485bb_IsI64(_self_)) {
			_case_begin_1aa0da98b:;
			{
				return (_203645ec0_ReadI64(_self_) > _203646c90_AsI64(&_33317_x));;
			}
		}
		else if (_203648852_IsU64(_self_)) {
			_case_begin_1aa0daa13:;
			{
				return (_203646256_ReadU64(_self_) > _203647026_AsU64(&_33317_x));;
			}
		}
		else if (_203649105_IsF64(_self_)) {
			_case_begin_1aa0dac44:;
			{
				return (_203646a09_ReadF64(_self_) > _2036472ac_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1aa0d85c1:;
			{
				return false;;
			}
		}
		_match_end_1aa0d8505:;
	};
}



inline jule::Bool _20364aeb4_GtEq(_2036445ea_Const* _self_, _2036445ea_Const _35619_x) {
	{
		
		if (_203648d6e_IsStr(_self_)) {
			_case_begin_1aa0dd5d7:;
			{
				return (_203648d6e_IsStr(&_35619_x) && (_203646773_ReadStr(_self_) >= _203646773_ReadStr(&_35619_x)));;
			}
		}
		else if (_2036485bb_IsI64(_self_)) {
			_case_begin_1aa0dd64d:;
			{
				return (_203645ec0_ReadI64(_self_) >= _203646c90_AsI64(&_35619_x));;
			}
		}
		else if (_203648852_IsU64(_self_)) {
			_case_begin_1aa0dd6c5:;
			{
				return (_203646256_ReadU64(_self_) >= _203647026_AsU64(&_35619_x));;
			}
		}
		else if (_203649105_IsF64(_self_)) {
			_case_begin_1aa0dd906:;
			{
				return (_203646a09_ReadF64(_self_) >= _2036472ac_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1aa0db283:;
			{
				return false;;
			}
		}
		_match_end_1aa0db1b7:;
	};
}



inline jule::Bool _20364b305_Add(_2036445ea_Const* _self_, _2036445ea_Const _37722_x) {
	{
		
		if (_203648d6e_IsStr(_self_)) {
			_case_begin_1aa0e1299:;
			{
				if ((!(_203648d6e_IsStr(&_37722_x)))) {
					return false;;
				};
				_203647d7e_SetStr(_self_, (_203646773_ReadStr(_self_) + _203646773_ReadStr(&_37722_x)));
			}
		}
		else if (_203649105_IsF64(_self_)) {
			_case_begin_1aa0e1310:;
			{
				_203648137_SetF64(_self_, static_cast<jule::F64>((_203646a09_ReadF64(_self_) + _2036472ac_AsF64(&_37722_x))));
			}
		}
		else if (_2036485bb_IsI64(_self_)) {
			_case_begin_1aa0e1387:;
			{
				if (_203649105_IsF64(&_37722_x)) {
					_203648137_SetF64(_self_, static_cast<jule::F64>((_2036472ac_AsF64(_self_) + _203646a09_ReadF64(&_37722_x))));
				} else {
					_203647565_SetI64(_self_, static_cast<jule::I64>((_203645ec0_ReadI64(_self_) + _203646c90_AsI64(&_37722_x))));
				};
			}
		}
		else if (_203648852_IsU64(_self_)) {
			_case_begin_1aa0e15b8:;
			{
				if (_203649105_IsF64(&_37722_x)) {
					_203648137_SetF64(_self_, static_cast<jule::F64>((_2036472ac_AsF64(_self_) + _203646a09_ReadF64(&_37722_x))));
				} else {
					_20364781d_SetU64(_self_, static_cast<jule::U64>((_203646256_ReadU64(_self_) + _203647026_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1aa0dde45:;
			{
				return false;;
			}
		}
		_match_end_1aa0ddd79:;
	};
	return true;;
}



inline jule::Bool _20364b646_Sub(_2036445ea_Const* _self_, _2036445ea_Const _40622_x) {
	{
		
		if (_203649105_IsF64(_self_)) {
			_case_begin_1aa0e61c2:;
			{
				_203648137_SetF64(_self_, static_cast<jule::F64>((_203646a09_ReadF64(_self_) - _2036472ac_AsF64(&_40622_x))));
			}
		}
		else if (_2036485bb_IsI64(_self_)) {
			_case_begin_1aa0e6249:;
			{
				if (_203649105_IsF64(&_40622_x)) {
					_203648137_SetF64(_self_, static_cast<jule::F64>((_2036472ac_AsF64(_self_) - _203646a09_ReadF64(&_40622_x))));
				} else {
					_203647565_SetI64(_self_, static_cast<jule::I64>((_203645ec0_ReadI64(_self_) - _203646c90_AsI64(&_40622_x))));
				};
			}
		}
		else if (_203648852_IsU64(_self_)) {
			_case_begin_1aa0e62c1:;
			{
				if (_203649105_IsF64(&_40622_x)) {
					_203648137_SetF64(_self_, static_cast<jule::F64>((_2036472ac_AsF64(_self_) - _203646a09_ReadF64(&_40622_x))));
				} else {
					_20364781d_SetU64(_self_, static_cast<jule::U64>((_203646256_ReadU64(_self_) - _203647026_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1aa0e5996:;
			{
				return false;;
			}
		}
		_match_end_1aa0e58ca:;
	};
	return true;;
}



inline jule::Bool _20364b987_Mul(_2036445ea_Const* _self_, _2036445ea_Const _43022_x) {
	{
		
		if (_203649105_IsF64(_self_)) {
			_case_begin_1aa0ea270:;
			{
				_203648137_SetF64(_self_, static_cast<jule::F64>((_203646a09_ReadF64(_self_) * _2036472ac_AsF64(&_43022_x))));
			}
		}
		else if (_2036485bb_IsI64(_self_)) {
			_case_begin_1aa0ea2e7:;
			{
				if (_203649105_IsF64(&_43022_x)) {
					_203648137_SetF64(_self_, static_cast<jule::F64>((_2036472ac_AsF64(_self_) * _203646a09_ReadF64(&_43022_x))));
				} else {
					_203647565_SetI64(_self_, static_cast<jule::I64>((_203645ec0_ReadI64(_self_) * _203646c90_AsI64(&_43022_x))));
				};
			}
		}
		else if (_203648852_IsU64(_self_)) {
			_case_begin_1aa0ea36e:;
			{
				if (_203649105_IsF64(&_43022_x)) {
					_203648137_SetF64(_self_, static_cast<jule::F64>((_2036472ac_AsF64(_self_) * _203646a09_ReadF64(&_43022_x))));
				} else {
					_20364781d_SetU64(_self_, static_cast<jule::U64>((_203646256_ReadU64(_self_) * _203647026_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1aa0e9901:;
			{
				return false;;
			}
		}
		_match_end_1aa0e9835:;
	};
	return true;;
}



inline jule::Bool _20364bcc8_Div(_2036445ea_Const* _self_, _2036445ea_Const _45822_x) {
	{
		
		if (_203649105_IsF64(_self_)) {
			_case_begin_1aa0ee31d:;
			{
				jule::F64 _46113_l = _2036472ac_AsF64(&_45822_x);;
				if ((_46113_l == 0LL)) {
					return false;;
				};
				_203648137_SetF64(_self_, static_cast<jule::F64>(jule::div(_203646a09_ReadF64(_self_),_46113_l)));
			}
		}
		else if (_2036485bb_IsI64(_self_)) {
			_case_begin_1aa0ee395:;
			{
				jule::F64 _46713_l = _2036472ac_AsF64(&_45822_x);;
				if ((_46713_l == 0LL)) {
					return false;;
				};
				_203648137_SetF64(_self_, static_cast<jule::F64>(jule::div(_2036472ac_AsF64(_self_),_46713_l)));
			}
		}
		else if (_203648852_IsU64(_self_)) {
			_case_begin_1aa0ee41c:;
			{
				jule::F64 _47313_l = _2036472ac_AsF64(&_45822_x);;
				if ((_47313_l == 0LL)) {
					return false;;
				};
				_203648137_SetF64(_self_, static_cast<jule::F64>(jule::div(_2036472ac_AsF64(_self_),_47313_l)));
			}
		}
		else {
			_case_begin_1aa0ed99e:;
			{
				return false;;
			}
		}
		_match_end_1aa0ed8d3:;
	};
	return true;;
}



inline jule::Bool _20364c119_Mod(_2036445ea_Const* _self_, _2036445ea_Const _48722_x) {
	{
		
		if (_2036485bb_IsI64(_self_)) {
			_case_begin_1aa10307a:;
			{
				jule::I64 _49013_l = _203646c90_AsI64(&_48722_x);;
				if ((_49013_l == 0LL)) {
					return false;;
				};
				_203647565_SetI64(_self_, static_cast<jule::I64>(jule::mod(_203645ec0_ReadI64(_self_),_49013_l)));
			}
		}
		else if (_203648852_IsU64(_self_)) {
			_case_begin_1aa103102:;
			{
				jule::U64 _49613_l = _203647026_AsU64(&_48722_x);;
				if ((_49613_l == 0LLU)) {
					return false;;
				};
				_20364781d_SetU64(_self_, static_cast<jule::U64>(jule::mod(_203646256_ReadU64(_self_),_49613_l)));
			}
		}
		else {
			_case_begin_1aa102ec0:;
			{
				return false;;
			}
		}
		_match_end_1aa102e26:;
	};
	return true;;
}



inline jule::Bool _20364c45a_BitwiseAnd(_2036445ea_Const* _self_, _2036445ea_Const _50929_x) {
	{
		
		if (_2036485bb_IsI64(_self_)) {
			_case_begin_1aa105ba4:;
			{
				_203647565_SetI64(_self_, static_cast<jule::I64>((_203645ec0_ReadI64(_self_) & _203646c90_AsI64(&_50929_x))));
			}
		}
		else if (_203648852_IsU64(_self_)) {
			_case_begin_1aa105c2b:;
			{
				_20364781d_SetU64(_self_, static_cast<jule::U64>((_203646256_ReadU64(_self_) & _203647026_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1aa105ae9:;
			{
				return false;;
			}
		}
		_match_end_1aa105a50:;
	};
	return true;;
}



inline jule::Bool _20364c79b_BitwiseOr(_2036445ea_Const* _self_, _2036445ea_Const _52328_x) {
	{
		
		if (_2036485bb_IsI64(_self_)) {
			_case_begin_1aa107a30:;
			{
				_203647565_SetI64(_self_, static_cast<jule::I64>((_203645ec0_ReadI64(_self_) | _203646c90_AsI64(&_52328_x))));
			}
		}
		else if (_203648852_IsU64(_self_)) {
			_case_begin_1aa107aa7:;
			{
				_20364781d_SetU64(_self_, static_cast<jule::U64>((_203646256_ReadU64(_self_) | _203647026_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1aa107964:;
			{
				return false;;
			}
		}
		_match_end_1aa107898:;
	};
	return true;;
}



inline jule::Bool _20364cadc_Xor(_2036445ea_Const* _self_, _2036445ea_Const _53722_x) {
	{
		
		if (_2036485bb_IsI64(_self_)) {
			_case_begin_1aa1098ab:;
			{
				_203647565_SetI64(_self_, static_cast<jule::I64>((_203645ec0_ReadI64(_self_) ^ _203646c90_AsI64(&_53722_x))));
			}
		}
		else if (_203648852_IsU64(_self_)) {
			_case_begin_1aa109933:;
			{
				_20364781d_SetU64(_self_, static_cast<jule::U64>((_203646256_ReadU64(_self_) ^ _203647026_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1aa1097e0:;
			{
				return false;;
			}
		}
		_match_end_1aa109724:;
	};
	return true;;
}



inline jule::Bool _20364ce2d_Lshift(_2036445ea_Const* _self_, _2036445ea_Const _55125_x) {
	{
		
		if (_2036485bb_IsI64(_self_)) {
			_case_begin_1aa10b737:;
			{
				jule::I64 _55413_l = _203646c90_AsI64(_self_);;
				if ((_55413_l < 0LL)) {
					jule::U64 _55617_r = _203647026_AsU64(&_55125_x);;
					_203647565_SetI64(_self_, static_cast<jule::I64>((_55413_l << _55617_r)));
				} else {
					_20364d615_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_203648852_IsU64(_self_)) {
			_case_begin_1aa10b7ae:;
			{
				_20364d615_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1aa10b66b:;
			{
				return false;;
			}
		}
		_match_end_1aa10b5a0:;
	};
	return true;;
}



inline jule::Bool _20364d26e_Rshift(_2036445ea_Const* _self_, _2036445ea_Const _57125_x) {
	{
		
		if (_2036485bb_IsI64(_self_)) {
			_case_begin_1aa113871:;
			{
				jule::I64 _57413_l = _203646c90_AsI64(_self_);;
				if ((_57413_l < 0LL)) {
					jule::U64 _57617_r = _203647026_AsU64(&_57125_x);;
					_203647565_SetI64(_self_, static_cast<jule::I64>((_57413_l >> _57617_r)));
				} else {
					_20364d945_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_203648852_IsU64(_self_)) {
			_case_begin_1aa1138e8:;
			{
				_20364d945_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1aa1137a5:;
			{
				return false;;
			}
		}
		_match_end_1aa11370b:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _2036445ea_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1c0c2577a_Prec(_1c0c25406_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aa16ca62:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aa16cbe9:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1aa16cc60:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1aa16ccd7:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1aa16cd5e:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1aa16c3e1:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aa16c347:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c25406_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1c0c2b0aa_Fill(_1c0c2abc0_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1c0c2b341_Dir(_1c0c2abc0_File* _self_) {
	return _21cd6c15a_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1c0c2b5c7_Name(_1c0c2abc0_File* _self_) {
	return _21cd6bcb4_Base((*(_self_))._field_Path);;
}



inline jule::Str _1c0c2bb9e_GetRow(_1c0c2abc0_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3913_n = 0LL;;
	jule::I64 _4013_lineStart = 0LL;;
	jule::I64 _4113_i = 0LL;;
	for (; (_4113_i < (*(_self_))._field_Data.len()); (_4113_i)++) {
		{
			if (((*(_self_))._field_Data[_4113_i] != '\n')) {
				goto _iter_next_1aa172d64;
			};
			(_3913_n)++;
			if ((_3913_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4013_lineStart, _4113_i));;
			};
			_4013_lineStart=static_cast<jule::I64>((_4113_i + 1LL));
		}
	_iter_next_1aa172d64:;
	}
	_iter_end_1aa172d64:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c2abc0_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c2cce3_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1c0c3448c_pushErr(_1c0c33e09_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_21ce0c86b_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c0c2dab3_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1c0c349ed_lex(_1c0c33e09_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1c0c36c20_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1c0c25406_Token> _46217_token = _1c0c3820a_token(_self_);;
			if (((*(_46217_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1c0c25406_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46217_token); };
			};
		}
	_iter_next_1aa1a0006:;
	}
	_iter_end_1aa1a0006:;;
}



inline jule::Str _1c0c34d3e_id(_1c0c33e09_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4759_r = 0;;
	jule::I64 _47516_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21ce5a556_DecodeRune((*(_47122_ln)));
		_4759_r = __jule_assign_result.__jule_result_arg0;
		_47516_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4759_r != '_') && (!(_1c0c28b35_IsLetter(_4759_r))))) {
		return jule::Str();;
	};
	while ((_47516_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48113_pr = 0;;
			jule::I64 _48117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21ce5a556_DecodeRune((*(_47122_ln)).slice(_47516_i));
				_48113_pr = __jule_assign_result.__jule_result_arg0;
				_48117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48113_pr != '_') && (!(_1c0c291b8_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_48113_pr)))))) && (!(_1c0c28b35_IsLetter(_48113_pr))))) {
				(*(_self_))._field_pos+=_47516_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47516_i));;
			};
			_47516_i+=_48117_n;
		}
	_iter_next_1aa1a36ad:;
	}
	_iter_end_1aa1a36ad:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1c0c350c5_resume(_1c0c33e09_lex* _self_) {
	jule::I64 _49613_i = (*(_self_))._field_pos;;
	for (; (_49613_i < (*((*(_self_))._field_file))._field_Data.len()); (_49613_i)++) {
		{
			jule::I32 _49813_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_49613_i]);;
			if (_1c0c286b2_IsSpace(_49813_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49813_r };
					
					if (_match_expr == '\n') {
						_case_begin_1aa1a7508:;
						{
							_1c0c36c20_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1aa1a756e:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1aa1a6dcb:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1aa1a6e64:;
				};
				goto _iter_next_1aa1a4538;
			};
			jule::I64 _51317_j = _49613_i;;
			for (; (_51317_j < (*((*(_self_))._field_file))._field_Data.len()); (_51317_j)++) {
				{
					if (((*((*(_self_))._field_file))._field_Data[_51317_j] == '\n')) {
						goto _iter_end_1aa1a656d;
					};
				}
			_iter_next_1aa1a656d:;
			}
			_iter_end_1aa1a656d:;;
			return (*((*(_self_))._field_file))._field_Data.slice(_49613_i, _51317_j);;
		}
	_iter_next_1aa1a4538:;
	}
	_iter_end_1aa1a4538:;;
	return nullptr;;
}



inline void _1c0c3537d_lexLineComment(_1c0c33e09_lex* _self_, jule::Ptr<_1c0c25406_Token>* _52438_token) {
	jule::I64 _5259_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52813_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_52813_r == '\n') || (_52813_r == '\r'))) {
				goto _iter_end_1aa1a9c8b;
			};
		}
	_iter_next_1aa1a9c8b:;
	}
	_iter_end_1aa1a9c8b:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5259_start, (*(_self_))._field_pos));
	};
}



inline void _1c0c35636_lexRangeComment(_1c0c33e09_lex* _self_, jule::Ptr<_1c0c25406_Token>* _53939_token) {
	jule::I64 _5409_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54313_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_54313_r == '\r')) {
				goto _iter_next_1aa1aced1;
			};
			if ((_54313_r == '\n')) {
				_1c0c36c20_newLine(_self_);
				goto _iter_next_1aa1aced1;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*((*(_self_))._field_file))._field_Data.len()) && (_54313_r == '*')) && ((*((*(_self_))._field_file))._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5409_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1aa1aced1:;
	}
	_iter_end_1aa1aced1:;;
	_1c0c3448c_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1c0c35977_num(_1c0c33e09_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1c0c326ee_hexNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1aa1b5626;
	};
	__jule_func_result=_1c0c32435_octalNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1aa1b5626;
	};
	__jule_func_result=_1c0c30c4c_binaryNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1aa1b5626;
	};
	__jule_func_result=_1c0c30983_commonNum(_56723_txt);
	_julec_label_1aa1b5626:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1c0c35cb8_escapeSeq(_1c0c33e09_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59013_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1aa1b852a;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1aa1b7480:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aa1b74e6:;
			{
				_59013_seq=_1c0c32d3c_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1aa1b756d:;
			{
				_59013_seq=_1c0c33106_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aa1b71c7:;
			{
				_59013_seq=_1c0c333c0_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1aa1b6a56:;
			{
				_59013_seq=_1c0c33689_byteEscape(_58929_txt);
			}
		}
		_match_end_1aa1b70b7:;
	};
	_julec_label_1aa1b852a:;
	if ((_59013_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1c0c3448c_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59013_seq.len();
	return _59013_seq;;
}



inline jule::Str _1c0c361b4_getRune(_1c0c33e09_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1c0c35cb8_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _6239_r = 0;;
	jule::I64 _62312_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21ce5a556_DecodeRune((*(_61927_txt)));
		_6239_r = __jule_assign_result.__jule_result_arg0;
		_62312_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62312_n;
	return jule::Str::from_rune(_6239_r);;
}



inline jule::Str _1c0c36505_lexRune(_1c0c33e09_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_21cd5e16e_StrBuilder _62913_run = static__21cd5e48d_New(8LL);;
	_21cd680bd_WriteByte(&_62913_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _63213_n = 0LL;;
	jule::I64 _63313_i = 1LL;;
	for (; (_63313_i < (*(_62827_txt)).len()); (_63313_i)++) {
		{
			if (((*(_62827_txt))[_63313_i] == '\r')) {
				goto _iter_next_1aa1bd299;
			};
			if (((*(_62827_txt))[_63313_i] == '\n')) {
				_1c0c3448c_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1c0c36c20_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64513_part = (*(_62827_txt)).slice(_63313_i);;
			jule::Str _64613_r = _1c0c361b4_getRune(_self_, &(_64513_part), false);;
			_21cd67d15_WriteStr(&_62913_run, _64613_r);
			(*(_self_))._field_column+=_21ce5c3c1_RuneCountStr(_64613_r);
			if (_64613_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1aa1bd299;
			};
			if ((_64613_r.len() > 1LL)) {
				_63313_i+=(_64613_r.len() - 1LL);
			};
			(_63213_n)++;
		}
	_iter_next_1aa1bd299:;
	}
	_iter_end_1aa1bd299:;;
	if ((_63213_n == 0LL)) {
		_1c0c3448c_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63213_n > 1LL)) {
		_1c0c3448c_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _21cd6860c_Str(&_62913_run);;
}



inline jule::Str _1c0c3678b_lexStr(_1c0c33e09_lex* _self_) {
	_21cd5e16e_StrBuilder _66913_s = static__21cd5e48d_New(16LL);;
	jule::U8 _6709_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6729_raw = (_6709_mark == '`');;
	_21cd680bd_WriteByte(&_66913_s, _6709_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::U8 _67713_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_67713_ch == '\r')) {
				goto _iter_next_1aa1c2d1a;
			};
			if ((_67713_ch == '\n')) {
				_1c0c36c20_newLine(_self_);
				if ((!(_6729_raw))) {
					_1c0c3448c_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68917_part = (*((*(_self_))._field_file))._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69013_r = _1c0c361b4_getRune(_self_, &(_68917_part), _6729_raw);;
			_21cd67d15_WriteStr(&_66913_s, _69013_r);
			(*(_self_))._field_column+=_21ce5c3c1_RuneCountStr(_69013_r);
			if ((_67713_ch == _6709_mark)) {
				goto _iter_end_1aa1c2d1a;
			};
		}
	_iter_next_1aa1c2d1a:;
	}
	_iter_end_1aa1c2d1a:;;
	return _21cd6860c_Str(&_66913_s);;
}



inline void _1c0c36c20_newLine(_1c0c33e09_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1c0c37281_isOp(_1c0c33e09_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U64 _71048_id, jule::Ptr<_1c0c25406_Token>* _71066_t) {
	if ((!(_1c0c2de7b_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1c0c3767c_lexBasicOps(_1c0c33e09_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1c0c25406_Token>* _72048_tok) {
	{
		auto expr = &(_1c0c2d563_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1c9717:;
		if (it != expr_end) {
			_1c0c2cce3_kindPair *_72116_pair = it;
			{
				if (_1c0c37281_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1aa1c9717:;
			++it;
			goto _iter_begin_1aa1c9717;
		}
		_iter_end_1aa1c9717:;
	};
	return false;;
}



inline jule::Bool _1c0c37a78_lexId(_1c0c33e09_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1c0c25406_Token>* _72943_t) {
	jule::Str _7309_lex = _1c0c34d3e_id(_self_, _72925_txt);;
	if ((_7309_lex).empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_7309_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1c0c37e74_lexNum(_1c0c33e09_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1c0c25406_Token>* _73944_t) {
	jule::Str _7409_lex = _1c0c35977_num(_self_, _73926_txt);;
	if ((_7409_lex).empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_7409_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1c0c25406_Token> _1c0c3820a_token(_1c0c33e09_lex* _self_) {
	jule::Ptr<_1c0c25406_Token> _75113_t = jule::new_ptr<_1c0c25406_Token>(_1c0c25406_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7569_txt = _1c0c350c5_resume(_self_);;
	if ((_7569_txt == nullptr)) {
		return _75113_t;;
	};
	(*(_75113_t))._field_Column=(*(_self_))._field_column;
	(*(_75113_t))._field_Row=(*(_self_))._field_row;
	{
		
		if (_1c0c37e74_lexNum(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1aa1d119c:;
			{
				goto _match_end_1aa1ce09b;
			}
		}
		else if ((_7569_txt[0LL] == '\'')) {
			_case_begin_1aa1d0751:;
			{
				(*(_75113_t))._field_Kind=_1c0c36505_lexRune(_self_, &(_7569_txt));
				(*(_75113_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (((_7569_txt[0LL] == '\"') || (_7569_txt[0LL] == '`'))) {
			_case_begin_1aa1d07b7:;
			{
				(*(_75113_t))._field_Kind=_1c0c3678b_lexStr(_self_);
				(*(_75113_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (_1c0c2de7b_bytesHasPrefix(&(_7569_txt), jule::Str::lit("//", 2))) {
			_case_begin_1aa1d082d:;
			{
				_1c0c3537d_lexLineComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1c0c2de7b_bytesHasPrefix(&(_7569_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1aa1cebc3:;
			{
				_1c0c35636_lexRangeComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1c0c3767c_lexBasicOps(_self_, _7569_txt, &(_75113_t))) {
			_case_begin_1aa1cec39:;
			{
				goto _match_end_1aa1ce09b;
			}
		}
		else if (_1c0c37a78_lexId(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1aa1ceca0:;
			{
				{
					auto expr = &(_1c0c2d222_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa1d4aeb:;
					if (it != expr_end) {
						_1c0c2cce3_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*(_75113_t))._field_Kind)) {
								(*(_75113_t))._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1aa1d4aeb;
							};
						}
						_iter_next_1aa1d4aeb:;
						++it;
						goto _iter_begin_1aa1d4aeb;
					}
					_iter_end_1aa1d4aeb:;
				};
			}
		}
		else {
			_case_begin_1aa1ceb5c:;
			{
				jule::I32 _79513_r = 0;;
				jule::I64 _79516_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21ce5a556_DecodeRune(_7569_txt);
					_79513_r = __jule_assign_result.__jule_result_arg0;
					_79516_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1c0c3448c_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79513_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79516_sz;
				return _75113_t;;
			}
		}
		_match_end_1aa1ce09b:;
	};
	(*(_self_))._field_column+=_21ce5c3c1_RuneCountStr((*(_75113_t))._field_Kind);
	return _75113_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c33e09_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c38a46_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c399e2_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c39e10_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c3a9e3_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c3b0ed_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c3b3ea_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c3b791_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c3ba8d_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c3be23_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c3c220_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0c3c880_IsUnsafe(_1c0c3c51c_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c3c51c_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0c3d122_AutoSized(_1c0c3ccae_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c3ccae_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c3d50c_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c3d8d6_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c3ed27_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c40124_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c406eb_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c409e8_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c40dc2_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c4129b_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c41752_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c41dd4_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c422ad_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c42687_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c42a61_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c42e3a_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c433e1_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0c43dc5_Unhandled(_1c0c43a51_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1c0c4415b_Ignored(_1c0c43a51_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*((*(_self_))._field_Exception))._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c43a51_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c44546_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c44d71_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c45327_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c45b52_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c4634a_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c46cda_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c4744a_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c47747_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c47bed_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c480c7_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c484a1_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c4879d_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c48e0d_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c49491_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c4a3a4_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c4aa14_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0c4b5c5_IsSelf(_1c0c4b251_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c4b251_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0c4ca16_IsAnon(_1c0c4c6a3_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c4c6a3_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c4d781_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c4db5a_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0c4e661_IsInf(_1c0c4e2ed_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c4e2ed_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0c4ee8b_IsWhileNext(_1c0c4eb28_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c4eb28_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c50530_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c50909_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c50cd3_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c51289_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c51663_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c51b19_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c52356_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c5280c_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c53049_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c53863_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c53d19_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c548ca_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c55205_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c55865_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c55b2e_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c56525_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c56c62_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c573c2_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0c5d829_FieldIns> _1c0c58acc_instance(jule::Ptr<_1c0c58758_Field> _self_) {
	return jule::new_ptr<_1c0c5d829_FieldIns>(_1c0c5d829_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c58758_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c5a738_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0c5e3c9_StructIns> _1c0c5baad_instance(jule::Ptr<_1c0c5b64b_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1c0c5e3c9_StructIns> _10013_ins = jule::new_ptr<_1c0c5e3c9_StructIns>(_1c0c5e3c9_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1c0c5d829_FieldIns>>::alloc(0LL, (*(_self_))._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1c0d2b94c_Var>>::alloc(0LL, (*(_self_))._field_Statics.len()), ._field_Refers=static__1c0c77953_new(), });;
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4ca991:;
		if (it != expr_end) {
			jule::Ptr<_1c0d2b94c_Var> _10721_s = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = (*(_10013_ins))._field_Statics; __jule_push_dest.push(jule::new_ptr<_1c0d2b94c_Var>((*(_10721_s)))); };
			}
			_iter_next_1aa4ca991:;
			++it;
			goto _iter_begin_1aa4ca991;
		}
		_iter_end_1aa4ca991:;
	};
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4cc036:;
		if (it != expr_end) {
			jule::Ptr<_1c0c58758_Field> _11121_f = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c5d829_FieldIns>> &__jule_push_dest = (*(_10013_ins))._field_Fields; __jule_push_dest.push(_1c0c58acc_instance(_11121_f)); };
				if ((((!((*(_11121_f))._field_Mutable)) && ((*((*(_11121_f))._field_Kind))._field_Kind != nullptr)) && _1c0db1d9a_Mutable((*((*(_11121_f))._field_Kind))._field_Kind.ptr()))) {
					(*(_10013_ins))._field_Mutable=true;
				};
			}
			_iter_next_1aa4cc036:;
			++it;
			goto _iter_begin_1aa4cc036;
		}
		_iter_end_1aa4cc036:;
	};
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		(*(_10013_ins))._field_Methods=(*(_self_))._field_Methods;
	} else {
		(*(_10013_ins))._field_Methods=jule::Slice<jule::Ptr<_1c0c715a6_Fn>>::alloc(0LL, (*(_self_))._field_Methods.len());
		{
			auto expr = &((*(_self_))._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa4d029d:;
			if (it != expr_end) {
				jule::Ptr<_1c0c715a6_Fn> _12225_f = *it;
				{
					jule::Ptr<_1c0c715a6_Fn> _12321_fins = jule::new_ptr<_1c0c715a6_Fn>((*(_12225_f)));;
					(*(_12321_fins))._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_1c0c715a6_Fn>> &__jule_push_dest = (*(_10013_ins))._field_Methods; __jule_push_dest.push(_12321_fins); };
				}
				_iter_next_1aa4d029d:;
				++it;
				goto _iter_begin_1aa4d029d;
			}
			_iter_end_1aa4d029d:;
		};
	};
	return _10013_ins;;
}



inline jule::Ptr<_1c0c5e3c9_StructIns> _1c0c5bdbb_appendInstance(_1c0c5b64b_Struct* _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4d0b61:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5e3c9_StructIns> _14021_ains = *it;
			{
				if (_1c0c60045_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1aa4d0b61:;
			++it;
			goto _iter_begin_1aa4d0b61;
		}
		_iter_end_1aa4d0b61:;
	};
	{ jule::Slice<jule::Ptr<_1c0c5e3c9_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1c0c715a6_Fn> _1c0c5c2b7_FindMethod(_1c0c5b64b_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4d3e0b:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*(_15321_f))._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1aa4d3e0b:;
			++it;
			goto _iter_begin_1aa4d3e0b;
		}
		_iter_end_1aa4d3e0b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0d2b94c_Var> _1c0c5c608_FindStatic(_1c0c5b64b_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4d522b:;
		if (it != expr_end) {
			jule::Ptr<_1c0d2b94c_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1aa4d522b:;
			++it;
			goto _iter_begin_1aa4d522b;
		}
		_iter_end_1aa4d522b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c58758_Field> _1c0c5c949_FindField(_1c0c5b64b_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4d5902:;
		if (it != expr_end) {
			jule::Ptr<_1c0c58758_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1aa4d5902:;
			++it;
			goto _iter_begin_1aa4d5902;
		}
		_iter_end_1aa4d5902:;
	};
	return nullptr;;
}



inline jule::Bool _1c0c5cc8a_IsImplements(_1c0c5b64b_Struct* _self_, jule::Ptr<_1c0c84850_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4d6903:;
		if (it != expr_end) {
			jule::Ptr<_1c0c84850_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1aa4d6903:;
			++it;
			goto _iter_begin_1aa4d6903;
		}
		_iter_end_1aa4d6903:;
	};
	return false;;
}



inline jule::Bool _1c0c5d0cb_IsUses(_1c0c5b64b_Struct* _self_, jule::Ptr<_1c0c5b64b_Struct> _19421_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4d8053:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5b64b_Struct> *_19516_u = it;
			{
				while ((_19421_s == (*(_19516_u)))) {
					{
						return true;;
					}
				_iter_next_1aa4d884a:;
				}
				_iter_end_1aa4d884a:;;
			}
			_iter_next_1aa4d8053:;
			++it;
			goto _iter_begin_1aa4d8053;
		}
		_iter_end_1aa4d8053:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c5b64b_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c5d829_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c63367_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c63862_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c63c3b_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c64269_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c64610_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6490c_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c64e90_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c65842_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c65c1b_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c661c2_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6659b_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c66975_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c66e2b_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c674ae_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c67a42_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c683d3_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c68889_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c68c63_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c69060_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c69439_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c69813_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c69bdc_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6a0b6_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6a56c_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6aa23_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6adec_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6b1e9_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6b4e6_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6b8c0_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6bc99_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6c173_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c67c2e_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6c89e_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6cb9b_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6ce98_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6d372_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6d66e_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6e351_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0c7350e_ParamIns> _1c0c6ee67_instance(jule::Ptr<_1c0c6ead2_Param> _self_) {
	return jule::new_ptr<_1c0c7350e_ParamIns>(_1c0c7350e_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1c0c701ed_IsSelf(_1c0c6ead2_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1c0c70484_IsRef(_1c0c6ead2_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c6ead2_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0c71a29_IsVoid(_1c0c715a6_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1c0c71cb0_IsMethod(_1c0c715a6_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1c0c72046_IsEntryPoint(_1c0c715a6_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1c0c722cc_IsInit(_1c0c715a6_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1c0c72563_IsAnon(_1c0c715a6_Fn* _self_) {
	return _1c0c2812e_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1c0c727e9_AnyVar(_1c0c715a6_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*((*(_self_))._field_Result))._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1c0c744aa_FnIns> _1c0c72a80_instanceForce(jule::Ptr<_1c0c715a6_Fn> _self_) {
	jule::Ptr<_1c0c744aa_FnIns> _10113_ins = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1c0cb210d_Scope>(), ._field_Refers=static__1c0c77953_new(), });;
	(*(_10113_ins))._field_Params=jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*(_self_))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4ee960:;
		if (it != expr_end) {
			jule::Ptr<_1c0c6ead2_Param> _10821_p = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>> &__jule_push_dest = (*(_10113_ins))._field_Params; __jule_push_dest.push(_1c0c6ee67_instance(_10821_p)); };
			}
			_iter_next_1aa4ee960:;
			++it;
			goto _iter_begin_1aa4ee960;
		}
		_iter_end_1aa4ee960:;
	};
	if (((*((*(_10113_ins))._field_Decl))._field_Result != nullptr)) {
		(*(_10113_ins))._field_Result=(*((*((*((*(_10113_ins))._field_Decl))._field_Result))._field_Kind))._field_Kind;
	};
	return _10113_ins;;
}



inline jule::Ptr<_1c0c744aa_FnIns> _1c0c72d16_instance(jule::Ptr<_1c0c715a6_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1c0c72a80_instanceForce(_self_);;
}



inline jule::Ptr<_1c0c744aa_FnIns> _1c0c73124_appendInstance(_1c0c715a6_Fn* _self_, jule::Ptr<_1c0c744aa_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1c0c744aa_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1c0c744aa_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa504b63:;
		if (it != expr_end) {
			jule::Ptr<_1c0c744aa_FnIns> _14521_ains = *it;
			{
				if (_1c0c76017_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1aa504b63:;
			++it;
			goto _iter_begin_1aa504b63;
		}
		_iter_end_1aa504b63:;
	};
	{ jule::Slice<jule::Ptr<_1c0c744aa_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c715a6_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0c73872_Str(_1c0c7350e_ParamIns* _self_) {
	_21cd5e16e_StrBuilder _16713_s = static__21cd5e48d_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_21cd67d15_WriteStr(&_16713_s, jule::Str::lit("mut ", 4));
	};
	if ((*((*(_self_))._field_Decl))._field_Reference) {
		_21cd67d15_WriteStr(&_16713_s, jule::Str::lit("&_:", 3));
	};
	if (_1c0c701ed_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1c0c70484_IsRef((*(_self_))._field_Decl.ptr())) {
			_21cd680bd_WriteByte(&_16713_s, '&');
		};
		_21cd67d15_WriteStr(&_16713_s, jule::Str::lit("self", 4));
		return _21cd6860c_Str(&_16713_s);;
	};
	if ((*((*(_self_))._field_Decl))._field_Variadic) {
		_21cd67d15_WriteStr(&_16713_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_21cd67d15_WriteStr(&_16713_s, _1c0db08d2_Str((*(_self_))._field_Kind.ptr()));
	};
	return _21cd6860c_Str(&_16713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c7350e_ParamIns _Src) {
	_Stream << _1c0c73872_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0c747eb_Str(_1c0c744aa_FnIns* _self_) {
	;
	return _1c0c76358_GetKindStr(_self_, false);;
}



inline jule::Bool _1c0c74b3c_Equal(jule::Ptr<_1c0c744aa_FnIns> _self_, jule::Ptr<_1c0db0519_TypeKind> _21821_other) {
	jule::Ptr<_1c0c744aa_FnIns> _2199_f = _1c0db3e57_Fn(_21821_other.ptr());;
	if ((_2199_f == nullptr)) {
		return false;;
	};
	return _1c0c750d2_EqualFn(_self_, &(_2199_f));;
}



inline jule::Bool _1c0c750d2_EqualFn(jule::Ptr<_1c0c744aa_FnIns> _self_, jule::Ptr<_1c0c744aa_FnIns>* _22924_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*((*((*(_22924_f))))._field_Decl))._field_Exceptional)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Unsafety != (*((*((*(_22924_f))))._field_Decl))._field_Unsafety)) {
		return false;;
	};
	if ((_1c0c71a29_IsVoid((*(_self_))._field_Decl.ptr()) != _1c0c71a29_IsVoid((*((*(_22924_f))))._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1c0c7350e_ParamIns>,jule::Ptr<_1c0c7350e_ParamIns>)> _2399_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1c0c7350e_ParamIns>,jule::Ptr<_1c0c7350e_ParamIns>)>([=](jule::Ptr<_1c0c7350e_ParamIns> _23927_p1, jule::Ptr<_1c0c7350e_ParamIns> _23942_p2) mutable -> jule::Bool {
		if (((*((*(_23927_p1))._field_Decl))._field_Mutable != (*((*(_23942_p2))._field_Decl))._field_Mutable)) {
			return false;;
		};
		if (_1c0c701ed_IsSelf((*(_23927_p1))._field_Decl.ptr())) {
			if ((!(_1c0c701ed_IsSelf((*(_23942_p2))._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1c0c70484_IsRef((*(_23927_p1))._field_Decl.ptr()) != _1c0c70484_IsRef((*(_23942_p2))._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Reference != (*((*(_23942_p2))._field_Decl))._field_Reference)) {
			return false;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Variadic != (*((*(_23942_p2))._field_Decl))._field_Variadic)) {
			return false;;
		};
		return _1c0db0c23_Equal((*(_23927_p1))._field_Kind, (*(_23942_p2))._field_Kind);;
	});;
	if (((*((*(_22924_f))))._field_Params.len() != (*(_self_))._field_Params.len())) {
		return false;;
	};
	jule::I64 _27113_i = 0LL;;
	for (; (_27113_i < (*(_self_))._field_Params.len()); (_27113_i)++) {
		{
			if ((!(_2399_checkParams((*(_self_))._field_Params[_27113_i], (*((*(_22924_f))))._field_Params[_27113_i])))) {
				return false;;
			};
		}
	_iter_next_1aa515c73:;
	}
	_iter_end_1aa515c73:;;
	if ((!(_1c0c71a29_IsVoid((*(_self_))._field_Decl.ptr())))) {
		if ((!(_1c0db0c23_Equal((*(_self_))._field_Result, (*((*(_22924_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1c0c75423_equalTrait(jule::Ptr<_1c0c744aa_FnIns> _self_, jule::Ptr<_1c0c744aa_FnIns>* _28827_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*((*((*(_28827_other))))._field_Decl))._field_Public)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Ident != (*((*((*(_28827_other))))._field_Decl))._field_Ident)) {
		return false;;
	};
	if ((!(_1c0c750d2_EqualFn(_self_, _28827_other)))) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Generics.len() != (*((*((*(_28827_other))))._field_Decl))._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1c0db0519_TypeKind>> _1c0c756a9_Types(_1c0c744aa_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1aa51b43d:;
			{
				return nullptr;;
			}
		}
		else if ((_1c0db4991_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1aa51b4a4:;
			{
				return jule::Slice<jule::Ptr<_1c0db0519_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1aa51b3c7:;
			{
				return (*(_1c0db4991_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1aa51b30b:;
	};
}



inline jule::Bool _1c0c75940_IsBuiltin(_1c0c744aa_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1c0c75bc6_IsAnon(_1c0c744aa_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1c0c72563_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1c0c76017_Same(_1c0c744aa_FnIns* _self_, jule::Ptr<_1c0c744aa_FnIns> _33119_f) {
	if ((((*(_self_))._field_Decl != (*(_33119_f))._field_Decl) || ((*(_33119_f))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa51e221:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_1c0dadb33_InsGeneric> *_33616_g = it;
			{
				jule::Ptr<_1c0dadb33_InsGeneric> _33713_g2 = (*(_33119_f))._field_Generics[_33613_i];;
				if ((((*((*((*(_33616_g))))._field_Kind))._field_BindIdent != (*((*(_33713_g2))._field_Kind))._field_BindIdent) || (!(_1c0db0c23_Equal((*((*(_33616_g))))._field_Kind, (*(_33713_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1aa51e221:;
			++it;
			_33613_i++;
			goto _iter_begin_1aa51e221;
		}
		_iter_end_1aa51e221:;
	};
	return true;;
}



inline jule::Str _1c0c76358_GetKindStr(_1c0c744aa_FnIns* _self_, jule::Bool _34825_ident) {
	_21cd5e16e_StrBuilder _34913_s = static__21cd5e48d_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_21cd67d15_WriteStr(&_34913_s, jule::Str::lit("unsafe ", 7));
	};
	_21cd67d15_WriteStr(&_34913_s, jule::Str::lit("fn", 2));
	if ((_34825_ident && ((*(_self_))._field_Decl != nullptr))) {
		_21cd680bd_WriteByte(&_34913_s, ' ');
		_21cd67d15_WriteStr(&_34913_s, (*((*(_self_))._field_Decl))._field_Ident);
	};
	_21cd680bd_WriteByte(&_34913_s, '(');
	jule::I64 _3639_n = (*(_self_))._field_Params.len();;
	if ((_3639_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa524bb6:;
			if (it != expr_end) {
				jule::I64 _36517_i = it - expr->begin();
				jule::Ptr<_1c0c7350e_ParamIns> *_36520_p = it;
				{
					_21cd67d15_WriteStr(&_34913_s, _1c0c73872_Str((*(_36520_p)).ptr()));
					if ((_36517_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_21cd680bd_WriteByte(&_34913_s, ',');
					};
				}
				_iter_next_1aa524bb6:;
				++it;
				_36517_i++;
				goto _iter_begin_1aa524bb6;
			}
			_iter_end_1aa524bb6:;
		};
	};
	_21cd680bd_WriteByte(&_34913_s, ')');
	if ((*((*(_self_))._field_Decl))._field_Exceptional) {
		_21cd680bd_WriteByte(&_34913_s, '!');
	};
	if ((!(_1c0c71a29_IsVoid((*(_self_))._field_Decl.ptr())))) {
		_21cd680bd_WriteByte(&_34913_s, ':');
		_21cd67d15_WriteStr(&_34913_s, _1c0db08d2_Str((*(_self_))._field_Result.ptr()));
	};
	return _21cd6860c_Str(&_34913_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c744aa_FnIns _Src) {
	_Stream << _1c0c747eb_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1c0c77656_ReferenceStack> static__1c0c77953_new(void) {
	return jule::new_ptr<_1c0c77656_ReferenceStack>(_1c0c77656_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1c0c77d4e_Len(_1c0c77656_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1c0c78190_At(_1c0c77656_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1c0c78448_Push(_1c0c77656_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1aad90267_Exist(_1c0c77656_ReferenceStack* _self_, jule::Ptr<_1c0c744aa_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad91466:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1aad91466:;
			++it;
			goto _iter_begin_1aad91466;
		}
		_iter_end_1aad91466:;
	};
	return false;;
}

inline jule::Bool _1aada6c51_Exist(_1c0c77656_ReferenceStack* _self_, jule::Ptr<_1c0d2b94c_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aada7e0b:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1aada7e0b:;
			++it;
			goto _iter_begin_1aada7e0b;
		}
		_iter_end_1aada7e0b:;
	};
	return false;;
}

inline jule::Bool _1ab01caed_Exist(_1c0c77656_ReferenceStack* _self_, jule::Ptr<_1c0c5e3c9_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab01dd41:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ab01dd41:;
			++it;
			goto _iter_begin_1ab01dd41;
		}
		_iter_end_1ab01dd41:;
	};
	return false;;
}

inline jule::Bool _1ab336301_Exist(_1c0c77656_ReferenceStack* _self_, jule::Ptr<_1c0c84850_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab337478:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ab337478:;
			++it;
			goto _iter_begin_1ab337478;
		}
		_iter_end_1ab337478:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c77656_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c78b74_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1c0c7e0ca_pushErr(_1c0c7d739_symbolBuilder* _self_, jule::Ptr<_1c0c25406_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_21ce0c86b_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c0d023c3_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1c0c7e85b_pushSuggestion(_1c0c7d739_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1c0d03902_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1c0c7ec57_checkCppUseDeclPath(_1c0c7d739_symbolBuilder* _self_, jule::Ptr<_1c0c53863_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3469_ext = _21cd6b731_Ext((*(_34556_path)));;
	if (((!(_21ce009b3_IsValidHeaderExt(_3469_ext))) && (!(_21ce00c7c_IsValidCppExt(_3469_ext))))) {
		_1c0c7e0ca_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3469_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_21b9be5b6_Status> _3539_info = ({
		auto except = static__21b9b1872_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1c0c7e0ca_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_21b9be5b6_Status>(nullptr);});
	});;
	if (_21b9be990_IsDir(_3539_info.ptr())) {
		_1c0c7e0ca_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0c80065_buildCppHeaderImport(_1c0c7d739_symbolBuilder* _self_, jule::Ptr<_1c0c53863_UseDecl>* _36544_decl) {
	jule::Str _36613_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_21ce0070a_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36613_path=_21cd6b467_Join(jule::Slice<jule::Str>::make({_1c0c2b341_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37017_ok = _1c0c7ec57_checkCppUseDeclPath(_self_, _36544_decl, &(_36613_path));;
		if ((!(_37017_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21cd6b9ea_Abs(_36613_path);
			_36613_path = __jule_assign_result.__jule_result_arg0;
			_37017_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37017_ok))) {
			_1c0c7e0ca_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1c0cd353b_ImportInfo>(_1c0cd353b_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36613_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0c803a6_buildStdImport(_1c0c7d739_symbolBuilder* _self_, jule::Ptr<_1c0c53863_UseDecl>* _39338_decl) {
	jule::Str _39413_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39413_path=_21cd5088b_Replace(_39413_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_39413_path=_21cd6b467_Join(jule::Slice<jule::Str>::make({_21d2d524e_PathStdlib,_39413_path}));
	jule::Bool _39715_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21cd6b9ea_Abs(_39413_path);
		_39413_path = __jule_assign_result.__jule_result_arg0;
		_39715_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39715_ok))) {
		_1c0c7e0ca_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_21b9be5b6_Status> _4049_info = ({
		auto except = static__21b9b1872_Of(_39413_path);
		(except.ok()) ? (except.result) : ({{
			_1c0c7e0ca_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_21b9be5b6_Status>(nullptr);});
	});;
	if ((!(_21b9be990_IsDir(_4049_info.ptr())))) {
		_1c0c7e0ca_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4149_i = (_21cd4ac1b_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4159_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_4149_i);;
	return jule::new_ptr<_1c0cd353b_ImportInfo>(_1c0cd353b_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39413_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_4159_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1c0cd6462_Package>(_1c0cd6462_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0c806e7_buildIdentImport(jule::Ptr<_1c0c7d739_symbolBuilder> _self_, jule::Ptr<_1c0c53863_UseDecl>* _43241_decl) {
	jule::Str _4339_modPath = _1c0cd0626_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c0cce68b_GetModPath((*(_self_))._field_importer);;
	if ((_4339_modPath.len() == 0LL)) {
		_1c0c7e0ca_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1c0c7e85b_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44013_path = (*((*(_43241_decl))))._field_LinkPath;;
	_44013_path=_21cd5088b_Replace(_44013_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_44013_path=_21cd6b467_Join(jule::Slice<jule::Str>::make({_4339_modPath,_44013_path}));
	jule::Bool _44415_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21cd6b9ea_Abs(_44013_path);
		_44013_path = __jule_assign_result.__jule_result_arg0;
		_44415_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44415_ok))) {
		_1c0c7e0ca_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_21b9be5b6_Status> _4519_info = ({
		auto except = static__21b9b1872_Of(_44013_path);
		(except.ok()) ? (except.result) : ({{
			_1c0c7e0ca_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_21b9be5b6_Status>(nullptr);});
	});;
	if ((!(_21b9be990_IsDir(_4519_info.ptr())))) {
		_1c0c7e0ca_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4619_i = (_21cd4ac1b_FindLast((*((*(_43241_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4629_ident = (*((*(_43241_decl))))._field_LinkPath.slice(_4619_i);;
	return jule::new_ptr<_1c0cd353b_ImportInfo>(_1c0cd353b_ImportInfo{._field_Token=(*((*(_43241_decl))))._field_Token, ._field_Path=_44013_path, ._field_LinkPath=(*((*(_43241_decl))))._field_LinkPath, ._field_Ident=_4629_ident, ._field_Alias=(*((*(_43241_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43241_decl))))._field_Full, ._field_Package=jule::new_ptr<_1c0cd6462_Package>(_1c0cd6462_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0c80a38_buildImport(jule::Ptr<_1c0c7d739_symbolBuilder> _self_, jule::Ptr<_1c0c53863_UseDecl>* _47936_decl) {
	{
		
		if ((*((*(_47936_decl))))._field_Binded) {
			_case_begin_1aa565d39:;
			{
				return _1c0c80065_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*((*(_47936_decl))))._field_Std) {
			_case_begin_1aa5656eb:;
			{
				return _1c0c803a6_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_1aa565685:;
			{
				return _1c0c806e7_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_1aa5655b9:;
	};
}



inline jule::Bool _1c0c80d79_checkDuplicateUseDecl(_1c0c7d739_symbolBuilder* _self_, jule::Ptr<_1c0cd353b_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0cd353b_ImportInfo> _4929_lpkg = _1c0d7a616_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)>([=](jule::Ptr<_1c0cd353b_ImportInfo> _49245_spkg) mutable -> jule::Bool {
		return ((*((*(_49041_pkg))))._field_Path == (*(_49245_spkg))._field_Path);;
	}));;
	if ((_4929_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1c0c7e0ca_pushErr(_self_, &((*((*(_49041_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49041_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1c0c7e85b_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1c0c811dc_implImportSelections(_1c0c7d739_symbolBuilder* _self_, jule::Ptr<_1c0cd353b_ImportInfo>* _50444_imp, jule::Ptr<_1c0c53863_UseDecl>* _50467_decl) {
	(*((*(_50444_imp))))._field_Selected=(*((*(_50467_decl))))._field_Selected;
	{
		auto expr = &((*((*(_50444_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa56a0a2:;
		if (it != expr_end) {
			jule::Ptr<_1c0c25406_Token> _50616_item = *it;
			{
				{
					auto expr = &((*((*(_50444_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa56ac1d:;
					if (it != expr_end) {
						jule::Ptr<_1c0c25406_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_1aa56ac1d;
							} else if (((*(_50616_item))._field_Kind == (*(_50720_citem))._field_Kind)) {
								_1c0c7e0ca_pushErr(_self_, &(_50616_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*(_50616_item))._field_Kind, &__jule_any_type4)}));
								_1c0c7e85b_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1aa56ac1d;
							};
						}
						_iter_next_1aa56ac1d:;
						++it;
						goto _iter_begin_1aa56ac1d;
					}
					_iter_end_1aa56ac1d:;
				};
			}
			_iter_next_1aa56a0a2:;
			++it;
			goto _iter_begin_1aa56a0a2;
		}
		_iter_end_1aa56a0a2:;
	};
}



inline jule::Str _1c0c8152d_getAsLinkPath(jule::Ptr<_1c0c7d739_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_21cd492ad_HasPrefix(_51937_path, _21d2d524e_PathStdlib)) {
		(_51937_path).mut_slice(_21d2d524e_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _21cd5088b_Replace(_51937_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5259_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21cd6b9ea_Abs(_1c0cd0626_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c0cce68b_GetModPath((*(_self_))._field_importer));
		_5259_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_5259_root.len());;
	if ((_51937_path[0LL] == 47LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _21cd5088b_Replace(_51937_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1c0c8194b_pushCycleError(jule::Ptr<_1c0c7d739_symbolBuilder> _self_, jule::Ptr<_1c0c7d739_symbolBuilder>* _53335_sb, jule::Str _53355_path, _21cd5e16e_StrBuilder* _53371_message) {
	;
	jule::Str _5359_refersTo = _21ce0cccd_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1c0c8152d_getAsLinkPath(_self_, _1c0c2b341_Dir((*((*((*(_53335_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1c0c8152d_getAsLinkPath(_self_, _53355_path), &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5399_buf = _21cd690ad_Buf(_53371_message);;
	_21cd67d15_WriteStr(_53371_message, _21cd489b6_Repeat(jule::Str::lit(" ", 1), 7LL));
	_21cd67d15_WriteStr(_53371_message, _5359_refersTo);
	_21cd680bd_WriteByte(_53371_message, '\n');
	_21cd67a5c_Write(_53371_message, _5399_buf);
}



inline void _1c0c81d69_pushCrossCycleError(jule::Ptr<_1c0c7d739_symbolBuilder> _self_, jule::Ptr<_1c0c7d739_symbolBuilder>* _54640_target, jule::Ptr<_1c0cd353b_ImportInfo>* _54665_imp, jule::Ptr<_1c0c25406_Token>* _54684_errorToken) {
	_21cd5e16e_StrBuilder _54713_message = static__21cd5e48d_New(32LL);;
	_1c0c8194b_pushCycleError(_self_, &(_self_), (*((*(_54665_imp))))._field_Path, &(_54713_message));
	jule::Ptr<_1c0c7d739_symbolBuilder> _55113_owner = (*(_self_))._field_owner;;
	jule::Ptr<_1c0c7d739_symbolBuilder> _55213_old = _self_;;
	while (((*(_55113_owner))._field_owner != nullptr)) {
		{
			_1c0c8194b_pushCycleError(_self_, &((*(_55213_old))._field_owner), _1c0c2b341_Dir((*((*(_55213_old))._field_table))._field_File.ptr()), &(_54713_message));
			if (((*(_55113_owner))._field_owner == (*(_54640_target)))) {
				_1c0c8194b_pushCycleError(_self_, _54640_target, _1c0c2b341_Dir((*((*(_55113_owner))._field_table))._field_File.ptr()), &(_54713_message));
				goto _iter_end_1aa5742a9;
			};
			_55213_old=_55113_owner;
			_55113_owner=(*(_55113_owner))._field_owner;
		}
	_iter_next_1aa5742a9:;
	}
	_iter_end_1aa5742a9:;;
	_1c0c7e0ca_pushErr(_self_.ptr(), _54684_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_21cd6860c_Str(&_54713_message), &__jule_any_type4)}));
}



inline jule::Bool _1c0c82265_checkImportCycles(jule::Ptr<_1c0c7d739_symbolBuilder> _self_, jule::Ptr<_1c0cd353b_ImportInfo> _56937_imp, jule::Ptr<_1c0c53863_UseDecl>* _56956_decl) {
	if (((*(_56937_imp))._field_Path == _1c0c2b341_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1c0c7e0ca_pushErr(_self_.ptr(), &((*((*(_56956_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1c0c8152d_getAsLinkPath(_self_, (*(_56937_imp))._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*(_self_))._field_owner == nullptr)) {
		return true;;
	};
	if ((_1c0c2b341_Dir((*((*((*(_self_))._field_owner))._field_table))._field_File.ptr()) == (*(_56937_imp))._field_Path)) {
		_1c0c81d69_pushCrossCycleError(_self_, &((*(_self_))._field_owner), &(_56937_imp), &((*((*(_56956_decl))))._field_Token));
		return false;;
	};
	jule::Ptr<_1c0c7d739_symbolBuilder> _58413_owner = (*(_self_))._field_owner;;
	_julec_label_1aa57a997:;
	if ((_1c0c2b341_Dir((*((*(_58413_owner))._field_table))._field_File.ptr()) == (*(_56937_imp))._field_Path)) {
		_1c0c81d69_pushCrossCycleError(_self_, &(_58413_owner), &(_56937_imp), &((*((*(_56956_decl))))._field_Token));
		return false;;
	};
	if (((*(_58413_owner))._field_owner != nullptr)) {
		_58413_owner=(*(_58413_owner))._field_owner;
		goto _julec_label_1aa57a997;
	};
	return true;;
}



inline void _1c0c82683_checkPackageAccessibility(_1c0c7d739_symbolBuilder* _self_, jule::Ptr<_1c0c53863_UseDecl>* _60545_decl, jule::Str* _60562_mod, jule::Str* _60573_path) {
	if (((_1c0cd0626_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c0cce68b_GetModPath((*(_self_))._field_importer) != (*(_60562_mod))) && _21cd4e4b1_Contains((*(_60573_path)), jule::Str::lit("internal", 8)))) {
		_1c0c7e0ca_pushErr(_self_, &((*((*(_60545_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c0c82a7e_importPackage(jule::Ptr<_1c0c7d739_symbolBuilder> _self_, jule::Ptr<_1c0cd353b_ImportInfo>* _61138_imp, jule::Ptr<_1c0c53863_UseDecl>* _61161_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61138_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0cd353b_ImportInfo> _61613_port = _1c0cd0626_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c0cced1d_GetImport((*(_self_))._field_importer, (*((*(_61138_imp))))._field_Path);;
	if ((_61613_port != nullptr)) {
		(*((*(_61138_imp))))._field_Package=(*(_61613_port))._field_Package;
		(*((*(_61138_imp))))._field_Duplicate=true;
		jule::Str _62113_oldMod = _1c0cd0626_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c0cce68b_GetModPath((*(_self_))._field_importer);;
		_1c0cd0626_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c0cce405_SetModPath((*(_self_))._field_importer, _1c0cd0626_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c0cce9cc_ModById((*(_self_))._field_importer, (*((*(_61138_imp))))._field_ModId));
		_1c0c82683_checkPackageAccessibility(_self_.ptr(), _61161_decl, &(_62113_oldMod), &((*(_61613_port))._field_Path));
		_1c0cd0626_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c0cce405_SetModPath((*(_self_))._field_importer, _62113_oldMod);
	} else {
		if ((!(_1c0c82265_checkImportCycles(_self_, (*(_61138_imp)), _61161_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _63013_oldMod = _1c0cd0626_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c0cce68b_GetModPath((*(_self_))._field_importer);;
		__JULE_DEFER({
			_1c0cd0626_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c0cce405_SetModPath((*(_self_))._field_importer, _63013_oldMod);
		});;
		if ((*((*(_61138_imp))))._field_Std) {
			_1c0cd0626_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c0cce405_SetModPath((*(_self_))._field_importer, _21d2d524e_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1c0c38a46_Ast>> _63517_asts;;
		jule::Slice<_21ce0c86b_Log> _63527_errors;;
		({
			__jule_tuple_sx_1c0c38a46_Ast__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c0cd0626_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c0cd0219_ImportPackage((*(_self_))._field_importer, (*((*(_61138_imp))))._field_Path, (!((*((*(_61138_imp))))._field_Std)));
			_63517_asts = __jule_assign_result.__jule_result_arg0;
			_63527_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63527_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_63527_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1c0c82683_checkPackageAccessibility(_self_.ptr(), _61161_decl, &(_63013_oldMod), &((*((*(_61138_imp))))._field_Path));
		{
			auto expr = &(_63517_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa58693c:;
			if (it != expr_end) {
				jule::Ptr<_1c0c38a46_Ast> _64325_ast = *it;
				{
					jule::Ptr<_1c0d7a12c_SymbolTable> _64425_table = nullptr;;
					({
						__jule_tuple_x_1c0d7a12c_SymbolTable__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c0dd0d42_buildSymbols(&(_64325_ast), &((*(_self_))._field_importer), _self_);
						_64425_table = __jule_assign_result.__jule_result_arg0;
						_63527_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63527_errors.len() > 0LL)) {
						((*(_self_))._field_errors).append(_63527_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>> &__jule_push_dest = (*((*((*(_61138_imp))))._field_Package))._field_Files; __jule_push_dest.push(_64425_table); };
				}
				_iter_next_1aa58693c:;
				++it;
				goto _iter_begin_1aa58693c;
			}
			_iter_end_1aa58693c:;
		};
	};
	_1c0c811dc_implImportSelections(_self_.ptr(), _61138_imp, _61161_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0c82dc0_importUseDecl(jule::Ptr<_1c0c7d739_symbolBuilder> _self_, jule::Ptr<_1c0c53863_UseDecl>* _65838_decl) {
	jule::Ptr<_1c0cd353b_ImportInfo> _65913_imp = _1c0c80a38_buildImport(_self_, _65838_decl);;
	if ((_65913_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66513_ok = _1c0c80d79_checkDuplicateUseDecl(_self_.ptr(), &(_65913_imp));;
	if ((!(_66513_ok))) {
		return nullptr;;
	};
	_66513_ok=_1c0c82a7e_importPackage(_self_, &(_65913_imp), _65838_decl);
	{ jule::Slice<jule::Ptr<_1c0cd353b_ImportInfo>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Imports; __jule_push_dest.push(_65913_imp); };
	if (_66513_ok) {
		_1c0cd0626_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c0cd04c2_Imported((*(_self_))._field_importer, _65913_imp);
		return _65913_imp;;
	};
	return nullptr;;
}



inline void _1c0c830bd_importUseDecls(jule::Ptr<_1c0c7d739_symbolBuilder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa58b645:;
		if (it != expr_end) {
			jule::Ptr<_1c0c53863_UseDecl> _68021_decl = *it;
			{
				_1c0c82dc0_importUseDecl(_self_, &(_68021_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					goto _iter_end_1aa58b645;
				};
			}
			_iter_next_1aa58b645:;
			++it;
			goto _iter_begin_1aa58b645;
		}
		_iter_end_1aa58b645:;
	};
}



inline void _1c0c83376_appendNode(_1c0c7d739_symbolBuilder* _self_, _1c0c399e2_Node* _68934_node) {
	{
		auto &_match_expr{ (*(_68934_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1aa58d955:;
			{
				{ jule::Slice<jule::Ptr<_1c0cabbc9_Impl>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Impls; __jule_push_dest.push(_1c0c7d173_buildImpl((*(_68934_node))._field_Data.cast_ptr<_1c0c573c2_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1aa58dba8:;
			{
				jule::Ptr<_1c0dae727_TypeAlias> _69417_ta = _1c0c795ae_buildTypeAlias((*(_68934_node))._field_Data.cast_ptr<_1c0c52356_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push(_69417_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1aa58dc1e:;
			{
				jule::Ptr<_1c0c5b64b_Struct> _69717_srct = _1c0c79e83_buildStruct((*(_68934_node))._field_Data.cast_ptr<_1c0c56525_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_1c0c5b64b_Struct>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Structs; __jule_push_dest.push(_69717_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1aa58dc85:;
			{
				jule::Ptr<_1c0c715a6_Fn> _70017_f = _1c0c7ab76_buildFunc((*(_68934_node))._field_Data.cast_ptr<_1c0c4c6a3_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_1c0c715a6_Fn>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Funcs; __jule_push_dest.push(_70017_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1aa58dceb:;
			{
				jule::Ptr<_1c0c84850_Trait> _70317_t = _1c0c7b4c3_buildTrait((*(_68934_node))._field_Data.cast_ptr<_1c0c56c62_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_1c0c84850_Trait>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Traits; __jule_push_dest.push(_70317_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1aa58e56b:;
			{
				jule::Ptr<_1c0d2b94c_Var> _70617_v = _1c0c7cae0_buildVar((*(_68934_node))._field_Data.cast_ptr<_1c0c4d781_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_70617_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1aa58e5d2:;
			{
				jule::Ptr<_1c0c8704a_Enum> _70917_e = _1c0c7bec9_buildEnum((*(_68934_node))._field_Data.cast_ptr<_1c0c548ca_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_1c0c8704a_Enum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Enums; __jule_push_dest.push(_70917_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1aa58e648:;
			{
				jule::Ptr<_1c0c88755_TypeEnum> _71217_e = _1c0c7c826_buildTypeEnum((*(_68934_node))._field_Data.cast_ptr<_1c0c55865_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_1c0c88755_TypeEnum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeEnums; __jule_push_dest.push(_71217_e); };
			}
		}
		else {
			_case_begin_1aa58db42:;
			{
				_1c0c7e0ca_pushErr(_self_, &((*(_68934_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa58cc84:;
	};
}



inline void _1c0c83574_appendNodes(_1c0c7d739_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa58e725:;
		if (it != expr_end) {
			_1c0c399e2_Node _72021_node = *it;
			{
				_1c0c83376_appendNode(_self_, &(_72021_node));
			}
			_iter_next_1aa58e725:;
			++it;
			goto _iter_begin_1aa58e725;
		}
		_iter_end_1aa58e725:;
	};
}



inline void _1c0c8382c_pushDirectivePass(_1c0c7d739_symbolBuilder* _self_, jule::Ptr<_1c0c39e10_Directive>* _72541_d) {
	if (((*((*(_72541_d))))._field_Args.len() == 0LL)) {
		_1c0c7e0ca_pushErr(_self_, &((*((*(_72541_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72541_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1c0c25406_Token> _73013_arg = (*((*(_72541_d))))._field_Args[1LL];;
		_1c0c7e0ca_pushErr(_self_, &(_73013_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72541_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1c0c25406_Token> _7349_arg = (*((*(_72541_d))))._field_Args[0LL];;
	if (((*(_7349_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1c0c7e0ca_pushErr(_self_, &(_7349_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_7349_arg))._field_Kind[0LL] != '\"')) {
		_1c0c7e0ca_pushErr(_self_, &(_7349_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_1c0c78b74_Pass> &__jule_push_dest = (*((*(_self_))._field_table))._field_Passes; __jule_push_dest.push(_1c0c78b74_Pass{._field_Token=(*((*(_72541_d))))._field_Tag, ._field_Text=(*(_7349_arg))._field_Kind.slice(1LL, ((*(_7349_arg))._field_Kind.len() - 1LL))}); };
}



inline void _1c0c83a2a_appendTopDirectives(_1c0c7d739_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa59c788:;
		if (it != expr_end) {
			jule::Ptr<_1c0c39e10_Directive> _75221_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75221_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1aa59e8bc:;
						{
							_1c0c8382c_pushDirectivePass(_self_, &(_75221_d));
						}
					}
					_match_end_1aa59e812:;
				};
			}
			_iter_next_1aa59c788:;
			++it;
			goto _iter_begin_1aa59c788;
		}
		_iter_end_1aa59c788:;
	};
}



inline void _1c0c83c28_build(jule::Ptr<_1c0c7d739_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1c0d7a12c_SymbolTable>(_1c0d7a12c_SymbolTable{._field_File=(*((*(_self_))._field_ast))._field_File, });
	_1c0c83a2a_appendTopDirectives(_self_.ptr());
	_1c0c830bd_importUseDecls(_self_);
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	_1c0c83574_appendNodes(_self_.ptr());
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c7d739_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0c84c18_Str(_1c0c84850_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c0c85059_Equal(jule::Ptr<_1c0c84850_Trait> _self_, jule::Ptr<_1c0db0519_TypeKind> _2521_other) {
	jule::Ptr<_1c0c84850_Trait> _269_trt = _1c0db4474_Trait(_2521_other.ptr());;
	return (_self_ == _269_trt);;
}



inline jule::Ptr<_1c0c715a6_Fn> _1c0c854ee_FindMethod(_1c0c84850_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5a355d:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1aa5a355d:;
			++it;
			goto _iter_begin_1aa5a355d;
		}
		_iter_end_1aa5a355d:;
	};
	return _1c0c85b81_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1c0c715a6_Fn> _1c0c85b81_findMethodInherit(_1c0c84850_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5a61dc:;
		if (it != expr_end) {
			jule::Ptr<_1c0db76db_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_1aa5a61dc;
				};
				jule::Ptr<_1c0c84850_Trait> _6017_t = _1c0db4474_Trait((*(_5621_i))._field_Kind.ptr());;
				if ((_6017_t != nullptr)) {
					jule::Ptr<_1c0c715a6_Fn> _6221_f2 = _1c0c854ee_FindMethod(_6017_t.ptr(), (*(_5537_ident)));;
					if ((_6221_f2 != nullptr)) {
						return _6221_f2;;
					};
				};
			}
			_iter_next_1aa5a61dc:;
			++it;
			goto _iter_begin_1aa5a61dc;
		}
		_iter_end_1aa5a61dc:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c84850_Trait _Src) {
	_Stream << _1c0c84c18_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1c0c86885_AutoExpr(_1c0c864cd_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c864cd_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0c873be_Str(_1c0c8704a_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c0c87710_Equal(jule::Ptr<_1c0c8704a_Enum> _self_, jule::Ptr<_1c0db0519_TypeKind> _3821_other) {
	jule::Ptr<_1c0c8704a_Enum> _399_enm = _1c0db341d_Enum(_3821_other.ptr());;
	return (_self_ == _399_enm);;
}



inline jule::Ptr<_1c0c864cd_EnumItem> _1c0c87b3e_FindItem(_1c0c8704a_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5a9b3b:;
		if (it != expr_end) {
			jule::Ptr<_1c0c864cd_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1aa5a9b3b:;
			++it;
			goto _iter_begin_1aa5a9b3b;
		}
		_iter_end_1aa5a9b3b:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8704a_Enum _Src) {
	_Stream << _1c0c873be_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8817d_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0c88a96_Str(_1c0c88755_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c0c88dd7_Equal(jule::Ptr<_1c0c88755_TypeEnum> _self_, jule::Ptr<_1c0db0519_TypeKind> _8021_other) {
	jule::Ptr<_1c0c88755_TypeEnum> _819_tenm = _1c0db36a4_TypeEnum(_8021_other.ptr());;
	return (_self_ == _819_tenm);;
}



inline jule::Ptr<_1c0c8817d_TypeEnumItem> _1c0c89316_FindItem(_1c0c88755_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5abcb4:;
		if (it != expr_end) {
			jule::Ptr<_1c0c8817d_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1aa5abcb4:;
			++it;
			goto _iter_begin_1aa5abcb4;
		}
		_iter_end_1aa5abcb4:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c88755_TypeEnum _Src) {
	_Stream << _1c0c88a96_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0c8aeb6_Str(_1c0c8aaed_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1c0c8b307_Equal(jule::Ptr<_1c0c8aaed_comptimeRange> _self_, jule::Ptr<_1c0db0519_TypeKind> _2521_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8aaed_comptimeRange _Src) {
	_Stream << _1c0c8aeb6_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0c8b9cd_Str(_1c0c8b659_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1c0c8bd1e_Equal(jule::Ptr<_1c0c8b659_comptimeStructField> _self_, jule::Ptr<_1c0db0519_TypeKind> _3521_other) {
	return false;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c8c33b__Name(jule::Ptr<_1c0c8b659_comptimeStructField> _self_, jule::Ptr<_1c0d82046_Eval>* _3926_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _3941_fc) {
	if (((*((*(_3941_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_3926_e)).ptr(), (*((*((*(_3941_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _4413_constant = static__203645387_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9bced_primStr, ._field_Model=jule::Any(_4413_constant, &__jule_any_type19), ._field_Constant=_4413_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c8c737__Type(jule::Ptr<_1c0c8b659_comptimeStructField> _self_, jule::Ptr<_1c0d82046_Eval>* _5230_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _5245_fc) {
	if (((*((*(_5245_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_5230_e)).ptr(), (*((*((*(_5245_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c0ca7d4b_buildComptimeTypeInfoData(&((*((*(_5230_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c8cb33__Public(jule::Ptr<_1c0c8b659_comptimeStructField> _self_, jule::Ptr<_1c0d82046_Eval>* _6032_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _6047_fc) {
	if (((*((*(_6047_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_6032_e)).ptr(), (*((*((*(_6047_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _6513_constant = static__2036450bd_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, ._field_Model=jule::Any(_6513_constant, &__jule_any_type19), ._field_Constant=_6513_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c8ce74_subIdent(jule::Ptr<_1c0c8b659_comptimeStructField> _self_, jule::Str* _7329_ident) {
	{
		auto &_match_expr{ (*(_7329_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1aa5b8ce3:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _7617_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _7733_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _7748_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c8c33b__Name(_self_, _7733_e, _7748_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_7617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1aa5b8d59:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _8317_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _8433_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _8448_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c8cb33__Public(_self_, _8433_e, _8448_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_8317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1aa5b8dc0:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _9017_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _9133_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _9148_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c8c737__Type(_self_, _9133_e, _9148_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_9017_method));;
			}
		}
		else {
			_case_begin_1aa5b8c7c:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa5b8c05:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8b659_comptimeStructField _Src) {
	_Stream << _1c0c8b9cd_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0c8d68e_Str(_1c0c8d309_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1c0c8d9d0_Equal(jule::Ptr<_1c0c8d309_comptimeStructFields> _self_, jule::Ptr<_1c0db0519_TypeKind> _10921_other) {
	return false;;
}



inline void _1c0c8de53_ready(_1c0c8d309_comptimeStructFields* _self_, jule::Ptr<_1c0d2b94c_Var>* _11329_keyA, jule::Ptr<_1c0d2b94c_Var>* _11346_keyB) {
	if (((*(_11329_keyA)) != nullptr)) {
		(*((*(_11329_keyA))))._field_Constant=true;
		(*((*(_11329_keyA))))._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()});
		(*((*((*((*(_11329_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_11329_keyA))))._field_Kind=(*(_1c0e9ee44_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_11346_keyB)) != nullptr)) {
		(*((*(_11346_keyB))))._field_Constant=true;
		(*((*(_11346_keyB))))._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()});
		(*((*(_11346_keyB))))._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0c8b659_comptimeStructField>(), 6)})});
	};
}



inline void _1c0c8e371_step(_1c0c8d309_comptimeStructFields* _self_, jule::I64 _13523_i, jule::Ptr<_1c0d2b94c_Var>* _13536_keyA, jule::Ptr<_1c0d2b94c_Var>* _13553_keyB) {
	if (((*(_13536_keyA)) != nullptr)) {
		(*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Constant=static__203644a3a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_13523_i)));
		(*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_13536_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_13553_keyB)) != nullptr)) {
		(*(_1c0db5244_comptimeStructField((*((*((*(_13553_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_13523_i];
	};
}



inline jule::I64 _1c0c8e607_len(_1c0c8d309_comptimeStructFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8d309_comptimeStructFields _Src) {
	_Stream << _1c0c8d68e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0c8ec89_Str(_1c0c8e915_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1c0c900ca_Equal(jule::Ptr<_1c0c8e915_comptimeStatic> _self_, jule::Ptr<_1c0db0519_TypeKind> _15921_other) {
	return false;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c905e7__Name(jule::Ptr<_1c0c8e915_comptimeStatic> _self_, jule::Ptr<_1c0d82046_Eval>* _16326_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _16341_fc) {
	if (((*((*(_16341_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_16326_e)).ptr(), (*((*((*(_16341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _16813_constant = static__203645387_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9bced_primStr, ._field_Model=jule::Any(_16813_constant, &__jule_any_type19), ._field_Constant=_16813_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c909e3__Type(jule::Ptr<_1c0c8e915_comptimeStatic> _self_, jule::Ptr<_1c0d82046_Eval>* _17630_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _17645_fc) {
	if (((*((*(_17645_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_17630_e)).ptr(), (*((*((*(_17645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c0ca7d4b_buildComptimeTypeInfoData(&((*((*(_17630_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c90dde__Public(jule::Ptr<_1c0c8e915_comptimeStatic> _self_, jule::Ptr<_1c0d82046_Eval>* _18432_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _18447_fc) {
	if (((*((*(_18447_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_18432_e)).ptr(), (*((*((*(_18447_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _18913_constant = static__2036450bd_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, ._field_Model=jule::Any(_18913_constant, &__jule_any_type19), ._field_Constant=_18913_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c91230_subIdent(jule::Ptr<_1c0c8e915_comptimeStatic> _self_, jule::Str* _19729_ident) {
	{
		auto &_match_expr{ (*(_19729_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1aa5ce776:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _20017_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _20133_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _20148_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c905e7__Name(_self_, _20133_e, _20148_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_20017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1aa5ce7dc:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _20717_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _20833_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _20848_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c90dde__Public(_self_, _20833_e, _20848_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_20717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1aa5ce853:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _21417_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _21533_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _21548_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c909e3__Type(_self_, _21533_e, _21548_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_21417_method));;
			}
		}
		else {
			_case_begin_1aa5ce710:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa5ce688:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c8e915_comptimeStatic _Src) {
	_Stream << _1c0c8ec89_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0c9194a_Str(_1c0c915c6_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1c0c91c8b_Equal(jule::Ptr<_1c0c915c6_comptimeStatics> _self_, jule::Ptr<_1c0db0519_TypeKind> _23321_other) {
	return false;;
}



inline void _1c0c9220e_ready(_1c0c915c6_comptimeStatics* _self_, jule::Ptr<_1c0d2b94c_Var>* _23729_keyA, jule::Ptr<_1c0d2b94c_Var>* _23746_keyB) {
	if (((*(_23729_keyA)) != nullptr)) {
		(*((*(_23729_keyA))))._field_Constant=true;
		(*((*(_23729_keyA))))._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()});
		(*((*((*((*(_23729_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_23729_keyA))))._field_Kind=(*(_1c0e9ee44_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_23746_keyB)) != nullptr)) {
		(*((*(_23746_keyB))))._field_Constant=true;
		(*((*(_23746_keyB))))._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()});
		(*((*(_23746_keyB))))._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0c8e915_comptimeStatic>(), 8)})});
	};
}



inline void _1c0c9262c_step(_1c0c915c6_comptimeStatics* _self_, jule::I64 _25923_i, jule::Ptr<_1c0d2b94c_Var>* _25936_keyA, jule::Ptr<_1c0d2b94c_Var>* _25953_keyB) {
	if (((*(_25936_keyA)) != nullptr)) {
		(*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Constant=static__203644a3a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_25923_i)));
		(*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_25936_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_25953_keyB)) != nullptr)) {
		(*(_1c0db6a4d_comptimeStatic((*((*((*(_25953_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_25923_i];
	};
}



inline jule::I64 _1c0c928b3_len(_1c0c915c6_comptimeStatics* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c915c6_comptimeStatics _Src) {
	_Stream << _1c0c9194a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0c93045_Str(_1c0c92bc1_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1c0c93386_Equal(jule::Ptr<_1c0c92bc1_comptimeEnumField> _self_, jule::Ptr<_1c0db0519_TypeKind> _28321_other) {
	return false;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c93881__Name(jule::Ptr<_1c0c92bc1_comptimeEnumField> _self_, jule::Ptr<_1c0d82046_Eval>* _28726_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _28741_fc) {
	if (((*((*(_28741_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_28726_e)).ptr(), (*((*((*(_28741_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _29213_constant = static__203645387_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9bced_primStr, ._field_Model=jule::Any(_29213_constant, &__jule_any_type19), ._field_Constant=_29213_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c93bc2_subIdent(jule::Ptr<_1c0c92bc1_comptimeEnumField> _self_, jule::Str* _30029_ident) {
	{
		auto &_match_expr{ (*(_30029_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1aa5e0688:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _30317_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _30433_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _30448_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c93881__Name(_self_, _30433_e, _30448_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_30317_method));;
			}
		}
		else {
			_case_begin_1aa5e0622:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa5e059a:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c92bc1_comptimeEnumField _Src) {
	_Stream << _1c0c93045_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0c94464_Str(_1c0c93ed0_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1c0c947a5_Equal(jule::Ptr<_1c0c93ed0_comptimeEnumFields> _self_, jule::Ptr<_1c0db0519_TypeKind> _32221_other) {
	return false;;
}



inline void _1c0c94ba1_ready(_1c0c93ed0_comptimeEnumFields* _self_, jule::Ptr<_1c0d2b94c_Var>* _32629_keyA, jule::Ptr<_1c0d2b94c_Var>* _32646_keyB) {
	if (((*(_32629_keyA)) != nullptr)) {
		(*((*(_32629_keyA))))._field_Constant=true;
		(*((*(_32629_keyA))))._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()});
		(*((*((*((*(_32629_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_32629_keyA))))._field_Kind=(*(_1c0e9ee44_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_32646_keyB)) != nullptr)) {
		(*((*(_32646_keyB))))._field_Constant=true;
		(*((*(_32646_keyB))))._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()});
		(*((*(_32646_keyB))))._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0c92bc1_comptimeEnumField>(), 10)})});
	};
}



inline void _1c0c950be_step(_1c0c93ed0_comptimeEnumFields* _self_, jule::I64 _34823_i, jule::Ptr<_1c0d2b94c_Var>* _34836_keyA, jule::Ptr<_1c0d2b94c_Var>* _34853_keyB) {
	if (((*(_34836_keyA)) != nullptr)) {
		(*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Constant=static__203644a3a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_34823_i)));
		(*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_34836_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_34853_keyB)) != nullptr)) {
		(*(_1c0db5761_comptimeEnumField((*((*((*(_34853_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_34823_i];
	};
}



inline jule::I64 _1c0c95355_len(_1c0c93ed0_comptimeEnumFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c93ed0_comptimeEnumFields _Src) {
	_Stream << _1c0c94464_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0c959d7_Str(_1c0c95663_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1c0c95d28_Equal(jule::Ptr<_1c0c95663_comptimeParam> _self_, jule::Ptr<_1c0db0519_TypeKind> _37221_other) {
	return false;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c96356__Name(jule::Ptr<_1c0c95663_comptimeParam> _self_, jule::Ptr<_1c0d82046_Eval>* _37626_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _37641_fc) {
	if (((*((*(_37641_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_37626_e)).ptr(), (*((*((*(_37641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _38113_constant = static__203645387_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9bced_primStr, ._field_Model=jule::Any(_38113_constant, &__jule_any_type19), ._field_Constant=_38113_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c96752__Type(jule::Ptr<_1c0c95663_comptimeParam> _self_, jule::Ptr<_1c0d82046_Eval>* _38930_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _38945_fc) {
	if (((*((*(_38945_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_38930_e)).ptr(), (*((*((*(_38945_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c0ca7d4b_buildComptimeTypeInfoData(&((*((*(_38930_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c96b4d__Variadic(jule::Ptr<_1c0c95663_comptimeParam> _self_, jule::Ptr<_1c0d82046_Eval>* _39734_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _39749_fc) {
	if (((*((*(_39749_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_39734_e)).ptr(), (*((*((*(_39749_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _40213_constant = static__2036450bd_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, ._field_Model=jule::Any(_40213_constant, &__jule_any_type19), ._field_Constant=_40213_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c97049__Reference(jule::Ptr<_1c0c95663_comptimeParam> _self_, jule::Ptr<_1c0d82046_Eval>* _41035_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _41050_fc) {
	if (((*((*(_41050_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_41035_e)).ptr(), (*((*((*(_41050_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _41513_constant = static__2036450bd_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, ._field_Model=jule::Any(_41513_constant, &__jule_any_type19), ._field_Constant=_41513_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c9738a_subIdent(jule::Ptr<_1c0c95663_comptimeParam> _self_, jule::Str* _42329_ident) {
	{
		auto &_match_expr{ (*(_42329_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1aa604e83:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _42617_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _42733_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _42748_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c96356__Name(_self_, _42733_e, _42748_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_42617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1aa604ee9:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _43317_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _43433_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _43448_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c96b4d__Variadic(_self_, _43433_e, _43448_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_43317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1aa605071:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _44017_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _44133_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _44148_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c97049__Reference(_self_, _44133_e, _44148_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_44017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1aa6050e8:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _44717_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _44833_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _44848_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c96752__Type(_self_, _44833_e, _44848_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_44717_method));;
			}
		}
		else {
			_case_begin_1aa604e1c:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa604d95:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c95663_comptimeParam _Src) {
	_Stream << _1c0c959d7_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0c97c4d_Str(_1c0c978c9_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1c0c9808e_Equal(jule::Ptr<_1c0c978c9_comptimeParams> _self_, jule::Ptr<_1c0db0519_TypeKind> _46621_other) {
	return false;;
}



inline void _1c0c98512_ready(_1c0c978c9_comptimeParams* _self_, jule::Ptr<_1c0d2b94c_Var>* _47029_keyA, jule::Ptr<_1c0d2b94c_Var>* _47046_keyB) {
	if (((*(_47029_keyA)) != nullptr)) {
		(*((*(_47029_keyA))))._field_Constant=true;
		(*((*(_47029_keyA))))._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()});
		(*((*((*((*(_47029_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_47029_keyA))))._field_Kind=(*(_1c0e9ee44_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47046_keyB)) != nullptr)) {
		(*((*(_47046_keyB))))._field_Constant=true;
		(*((*(_47046_keyB))))._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()});
		(*((*(_47046_keyB))))._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0c95663_comptimeParam>(), 12)})});
	};
}



inline void _1c0c98930_step(_1c0c978c9_comptimeParams* _self_, jule::I64 _49223_i, jule::Ptr<_1c0d2b94c_Var>* _49236_keyA, jule::Ptr<_1c0d2b94c_Var>* _49253_keyB) {
	if (((*(_49236_keyA)) != nullptr)) {
		(*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Constant=static__203644a3a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49223_i)));
		(*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_49236_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_49253_keyB)) != nullptr)) {
		(*(_1c0db5c7d_comptimeParam((*((*((*(_49253_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49223_i];
	};
}



inline jule::I64 _1c0c98bb6_len(_1c0c978c9_comptimeParams* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_params.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c978c9_comptimeParams _Src) {
	_Stream << _1c0c97c4d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0c99348_Str(_1c0c98ec4_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1c0c99689_Equal(jule::Ptr<_1c0c98ec4_comptimeTypeInfos> _self_, jule::Ptr<_1c0db0519_TypeKind> _51621_other) {
	return false;;
}



inline void _1c0c99b0c_ready(_1c0c98ec4_comptimeTypeInfos* _self_, jule::Ptr<_1c0d2b94c_Var>* _52029_keyA, jule::Ptr<_1c0d2b94c_Var>* _52046_keyB) {
	if (((*(_52029_keyA)) != nullptr)) {
		(*((*(_52029_keyA))))._field_Constant=true;
		(*((*(_52029_keyA))))._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()});
		(*((*((*((*(_52029_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_52029_keyA))))._field_Kind=(*(_1c0e9ee44_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52046_keyB)) != nullptr)) {
		(*((*(_52046_keyB))))._field_Constant=true;
		(*((*(_52046_keyB))))._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()});
		(*((*(_52046_keyB))))._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0c9a5be_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1c0c9a02a_step(_1c0c98ec4_comptimeTypeInfos* _self_, jule::I64 _54223_i, jule::Ptr<_1c0d2b94c_Var>* _54236_keyA, jule::Ptr<_1c0d2b94c_Var>* _54253_keyB) {
	if (((*(_54236_keyA)) != nullptr)) {
		(*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Constant=static__203644a3a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54223_i)));
		(*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_54236_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_54253_keyB)) != nullptr)) {
		(*((*((*((*(_54253_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1c0db0063_Kind>((*(_self_))._field_types[_54223_i], 15);
	};
}



inline jule::I64 _1c0c9a2b1_len(_1c0c98ec4_comptimeTypeInfos* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_types.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c98ec4_comptimeTypeInfos _Src) {
	_Stream << _1c0c99348_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0c9a943_Str(_1c0c9a5be_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1c0db08d2_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1c0c9ac84_Equal(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0db0519_TypeKind> _56621_other) {
	return false;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c9b3d3__Str(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _57025_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _57040_fc) {
	if (((*((*(_57040_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_57025_e)).ptr(), (*((*((*(_57040_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _57513_constant = static__203645387_NewStr(_1c0db08d2_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9bced_primStr, ._field_Model=jule::Any(_57513_constant, &__jule_any_type19), ._field_Constant=_57513_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c9b7ce__Kind(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _58330_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _58345_fc) {
	if (((*((*(_58345_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_58330_e)).ptr(), (*((*((*(_58345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c8704a_Enum> _58813_enm = _1c0cd5296_FindEnum(_1c0ca79c7_findComptimePackage(&((*((*(_58330_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1c0c864cd_EnumItem> _58917_item = nullptr;;
	{
		
		if (_1c0db187d_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1aa622d80:;
			{
				_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1c0db41dd_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aa623039:;
			{
				_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1c0db4474_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aa622ca3:;
			{
				_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1c0db3187_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aa622a94:;
			{
				if (_1c0dc0e20_IsUnsafe(_1c0db3187_Ptr((*(_self_))._field_base.ptr()).ptr())) {
					_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1c0db2e01_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aa622b0a:;
			{
				_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Ref", 3));
			}
		}
		else if ((_1c0db341d_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aa623677:;
			{
				_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1c0db470a_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aa6236dd:;
			{
				_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1c0db3bc1_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aa623754:;
			{
				_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1c0db393a_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aa6237cb:;
			{
				_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1c0db3e57_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aa623853:;
			{
				_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1c0db4991_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aa6238ca:;
			{
				_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1c0db2b6a_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aa623952:;
			{
				jule::Ptr<_1c0db80e3_Prim> _61813_prim = _1c0db2b6a_Prim((*(_self_))._field_base.ptr());;
				{
					
					if (_1c0dbb811_IsAny(_61813_prim.ptr())) {
						_case_begin_1aa62e7c6:;
						{
							_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1c0dbb2e4_IsBool(_61813_prim.ptr())) {
						_case_begin_1aa62e6d8:;
						{
							_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1c0dbb57a_IsStr(_61813_prim.ptr())) {
						_case_begin_1aa62e4da:;
						{
							_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1c0dba524_IsF32(_61813_prim.ptr())) {
						_case_begin_1aa6300ce:;
						{
							_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1c0dba7aa_IsF64(_61813_prim.ptr())) {
						_case_begin_1aa630145:;
						{
							_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1c0db8ea1_IsI8(_61813_prim.ptr())) {
						_case_begin_1aa6301ab:;
						{
							_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1c0db9237_IsI16(_61813_prim.ptr())) {
						_case_begin_1aa630222:;
						{
							_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1c0db94bd_IsI32(_61813_prim.ptr())) {
						_case_begin_1aa630288:;
						{
							_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1c0db9754_IsI64(_61813_prim.ptr())) {
						_case_begin_1aa6302ee:;
						{
							_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1c0db99da_IsU8(_61813_prim.ptr())) {
						_case_begin_1aa630365:;
						{
							_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1c0db9c71_IsU16(_61813_prim.ptr())) {
						_case_begin_1aa6303cb:;
						{
							_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1c0dba007_IsU32(_61813_prim.ptr())) {
						_case_begin_1aa630442:;
						{
							_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1c0dba28d_IsU64(_61813_prim.ptr())) {
						_case_begin_1aa6304a8:;
						{
							_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1c0dbaa41_IsInt(_61813_prim.ptr())) {
						_case_begin_1aa63051e:;
						{
							_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1c0dbacc7_IsUint(_61813_prim.ptr())) {
						_case_begin_1aa630585:;
						{
							_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1c0dbb05d_IsUintptr(_61813_prim.ptr())) {
						_case_begin_1aa6305eb:;
						{
							_58917_item=_1c0c87b3e_FindItem(_58813_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1aa62e342:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1c0db08d2_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:653:17"));;
						}
					}
					_match_end_1aa62e2dc:;
				};
			}
		}
		else {
			_case_begin_1aa622940:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1c0db08d2_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:656:13"));;
			}
		}
		_match_end_1aa6225bb:;
	};
	return _1c0dac648_evalEnumStatic(&(_58813_enm), &(_58917_item));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c9bbca__Bits(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _66130_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _66145_fc) {
	if (((*((*(_66145_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_66130_e)).ptr(), (*((*((*(_66145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0db80e3_Prim> _6669_prim = _1c0db2b6a_Prim((*(_self_))._field_base.ptr());;
	if ((_6669_prim == nullptr)) {
		_1c0d82596_pushErr((*(_66130_e)).ptr(), (*((*(_66145_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _6719_n = _2036366ec_BitsizeOf((*(_6669_prim))._field_Kind);;
	if ((_6719_n == -1LL)) {
		_1c0d82596_pushErr((*(_66130_e)).ptr(), (*((*(_66145_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _67613_constant = static__203644a3a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_6719_n)));;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9bced_primStr, ._field_Model=jule::Any(_67613_constant, &__jule_any_type19), ._field_Constant=_67613_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c9c0c6__Elem(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _68430_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _68445_fc) {
	if (((*((*(_68445_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_68430_e)).ptr(), (*((*((*(_68445_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0dc03d6_Ptr> _68913_ptr = _1c0db3187_Ptr((*(_self_))._field_base.ptr());;
	if ((_68913_ptr != nullptr)) {
		if (_1c0dc0e20_IsUnsafe(_68913_ptr.ptr())) {
			_1c0d82596_pushErr((*(_68430_e)).ptr(), (*((*(_68445_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1c0ca7d4b_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_68913_ptr))._field_Elem));;
	};
	jule::Ptr<_1c0dbbb1e_Sptr> _69713_sptr = _1c0db2e01_Sptr((*(_self_))._field_base.ptr());;
	if ((_69713_sptr != nullptr)) {
		return _1c0ca7d4b_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_69713_sptr))._field_Elem));;
	};
	jule::Ptr<_1c0dbc5e2_Slc> _70113_slice = _1c0db3bc1_Slc((*(_self_))._field_base.ptr());;
	if ((_70113_slice != nullptr)) {
		return _1c0ca7d4b_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_70113_slice))._field_Elem));;
	};
	jule::Ptr<_1c0dbe913_Arr> _70513_array = _1c0db393a_Arr((*(_self_))._field_base.ptr());;
	if ((_70513_array != nullptr)) {
		return _1c0ca7d4b_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*(_70513_array))._field_Elem));;
	};
	jule::Ptr<_1c0c8704a_Enum> _70913_enm = _1c0db341d_Enum((*(_self_))._field_base.ptr());;
	if ((_70913_enm != nullptr)) {
		return _1c0ca7d4b_buildComptimeTypeInfoData(&((*((*(_68430_e))))._field_s), &((*((*(_70913_enm))._field_Kind))._field_Kind));;
	};
	_1c0d82596_pushErr((*(_68430_e)).ptr(), (*((*(_68445_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c9c4c2__Size(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _71730_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _71745_fc) {
	if (((*((*(_71745_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_71730_e)).ptr(), (*((*((*(_71745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0dbe913_Arr> _72213_arr = _1c0db393a_Arr((*(_self_))._field_base.ptr());;
	if ((_72213_arr == nullptr)) {
		_1c0d82596_pushErr((*(_71730_e)).ptr(), (*((*(_71745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _72713_constant = static__203644a3a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_72213_arr))._field_N)));;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9ca24_primInt, ._field_Model=jule::Any(_72713_constant, &__jule_any_type19), ._field_Constant=_72713_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c9c8bd__Key(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _73529_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _73544_fc) {
	if (((*((*(_73544_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_73529_e)).ptr(), (*((*((*(_73544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0dbdc86_Map> _74013_m = _1c0db470a_Map((*(_self_))._field_base.ptr());;
	if ((_74013_m == nullptr)) {
		_1c0d82596_pushErr((*(_73529_e)).ptr(), (*((*(_73544_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c0ca7d4b_buildComptimeTypeInfoData(&((*((*(_73529_e))))._field_s), &((*(_74013_m))._field_Key));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c9ccb9__Value(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _74831_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _74846_fc) {
	if (((*((*(_74846_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_74831_e)).ptr(), (*((*((*(_74846_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0dbdc86_Map> _75313_m = _1c0db470a_Map((*(_self_))._field_base.ptr());;
	if ((_75313_m == nullptr)) {
		_1c0d82596_pushErr((*(_74831_e)).ptr(), (*((*(_74846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c0ca7d4b_buildComptimeTypeInfoData(&((*((*(_74831_e))))._field_s), &((*(_75313_m))._field_Val));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c9d1b5__Fields(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _76132_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _76147_fc) {
	if (((*((*(_76147_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_76132_e)).ptr(), (*((*((*(_76147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c5e3c9_StructIns> _76613_s = _1c0db41dd_Struct((*(_self_))._field_base.ptr());;
	if ((_76613_s != nullptr)) {
		return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0c8d309_comptimeStructFields>(_1c0c8d309_comptimeStructFields{._field_fields=(*(_76613_s))._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1c0c8704a_Enum> _77613_enm = _1c0db341d_Enum((*(_self_))._field_base.ptr());;
	if ((_77613_enm != nullptr)) {
		return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0c93ed0_comptimeEnumFields>(_1c0c93ed0_comptimeEnumFields{._field_fields=(*(_77613_enm))._field_Items}), 11)}), });;
	};
	_1c0d82596_pushErr((*(_76132_e)).ptr(), (*((*(_76147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c9d5b1__Statics(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _79033_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _79048_fc) {
	if (((*((*(_79048_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_79033_e)).ptr(), (*((*((*(_79048_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c5e3c9_StructIns> _79513_s = _1c0db41dd_Struct((*(_self_))._field_base.ptr());;
	if ((_79513_s == nullptr)) {
		_1c0d82596_pushErr((*(_79033_e)).ptr(), (*((*(_79048_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0c915c6_comptimeStatics>(_1c0c915c6_comptimeStatics{._field_fields=(*(_79513_s))._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c9d9ac__Public(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _80932_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _80947_fc) {
	if (((*((*(_80947_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_80932_e)).ptr(), (*((*((*(_80947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _81413_public = false;;
	{
		
		if ((_1c0db41dd_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aa661231:;
			{
				_81413_public=(*((*(_1c0db41dd_Struct((*(_self_))._field_base.ptr())))._field_Decl))._field_Public;
			}
		}
		else if ((_1c0db4474_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aa66020d:;
			{
				_81413_public=(*(_1c0db4474_Trait((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1c0db341d_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aa660274:;
			{
				_81413_public=(*(_1c0db341d_Enum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_1c0db36a4_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aa6602da:;
			{
				_81413_public=(*(_1c0db36a4_TypeEnum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else {
			_case_begin_1aa65ed9a:;
			{
				_1c0d82596_pushErr((*(_80932_e)).ptr(), (*((*(_80947_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1aa65ec79:;
	};
	jule::Ptr<_2036445ea_Const> _82813_constant = static__2036450bd_NewBool(_81413_public);;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, ._field_Model=jule::Any(_82813_constant, &__jule_any_type19), ._field_Constant=_82813_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c9dda8__Binded(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _83632_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _83647_fc) {
	if (((*((*(_83647_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_83632_e)).ptr(), (*((*((*(_83647_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _84113_constant = static__2036450bd_NewBool(_1c0db1361_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, ._field_Model=jule::Any(_84113_constant, &__jule_any_type19), ._field_Constant=_84113_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c9e2a4__Ordered(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _84929_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _84944_fc) {
	if (((*((*(_84944_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_84929_e)).ptr(), (*((*((*(_84944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _85413_constant = static__2036450bd_NewBool(_1c0db2131_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9bced_primStr, ._field_Model=jule::Any(_85413_constant, &__jule_any_type19), ._field_Constant=_85413_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c9e6a0__Comparable(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _86232_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _86247_fc) {
	if (((*((*(_86247_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_86232_e)).ptr(), (*((*((*(_86247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _86713_constant = static__2036450bd_NewBool(_1c0db1b14_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9bced_primStr, ._field_Model=jule::Any(_86713_constant, &__jule_any_type19), ._field_Constant=_86713_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c9ea9b__Mutable(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _87529_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _87544_fc) {
	if (((*((*(_87544_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_87529_e)).ptr(), (*((*((*(_87544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _88013_constant = static__2036450bd_NewBool(_1c0db1d9a_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, ._field_Model=jule::Any(_88013_constant, &__jule_any_type19), ._field_Constant=_88013_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0c9ee97__Types(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _88831_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _88846_fc) {
	if (((*((*(_88846_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_88831_e)).ptr(), (*((*((*(_88846_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0dbd1d6_Tuple> _89313_tup = _1c0db4991_Tup((*(_self_))._field_base.ptr());;
	if ((_89313_tup == nullptr)) {
		_1c0d82596_pushErr((*(_88831_e)).ptr(), (*((*(_88846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c98ec4_comptimeTypeInfos> _89813_infos = jule::new_ptr<_1c0c98ec4_comptimeTypeInfos>(_1c0c98ec4_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1c0c9a5be_comptimeTypeInfo>>::alloc(0LL, (*(_89313_tup))._field_Types.len())});;
	{
		auto expr = &((*(_89313_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa674486:;
		if (it != expr_end) {
			jule::Ptr<_1c0db0519_TypeKind> _90121_t = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c9a5be_comptimeTypeInfo>> &__jule_push_dest = (*(_89813_infos))._field_types; __jule_push_dest.push(_1c0d04040_pushComptimeTypeInfo((*((*((*(_88831_e))))._field_s))._field_meta.ptr(), &(_90121_t))); };
			}
			_iter_next_1aa674486:;
			++it;
			goto _iter_begin_1aa674486;
		}
		_iter_end_1aa674486:;
	};
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_89813_infos, 14)}), });;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca0393__Exceptional(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _91137_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _91152_fc) {
	if (((*((*(_91152_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_91137_e)).ptr(), (*((*((*(_91152_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c744aa_FnIns> _91613_f = _1c0db3e57_Fn((*(_self_))._field_base.ptr());;
	if ((_91613_f == nullptr)) {
		_1c0d82596_pushErr((*(_91137_e)).ptr(), (*((*(_91152_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _92113_constant = static__2036450bd_NewBool((((*(_91613_f))._field_Decl != nullptr) && (*((*(_91613_f))._field_Decl))._field_Exceptional));;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, ._field_Model=jule::Any(_92113_constant, &__jule_any_type19), ._field_Constant=_92113_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca078e__CanNil(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _92932_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _92947_fc) {
	if (((*((*(_92947_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_92932_e)).ptr(), (*((*((*(_92947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _93413_constant = static__2036450bd_NewBool(_1c0db23b7_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, ._field_Model=jule::Any(_93413_constant, &__jule_any_type19), ._field_Constant=_93413_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca0b8a__RC(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _94228_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _94243_fc) {
	if (((*((*(_94243_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_94228_e)).ptr(), (*((*((*(_94243_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _94713_constant = static__2036450bd_NewBool(_1c0db264d_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, ._field_Model=jule::Any(_94713_constant, &__jule_any_type19), ._field_Constant=_94713_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca1086__Result(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _95532_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _95547_fc) {
	if (((*((*(_95547_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_95532_e)).ptr(), (*((*((*(_95547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c744aa_FnIns> _96013_f = _1c0db3e57_Fn((*(_self_))._field_base.ptr());;
	if ((_96013_f == nullptr)) {
		_1c0d82596_pushErr((*(_95532_e)).ptr(), (*((*(_95547_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_96013_f))._field_Result == nullptr)) {
		return _1c0ca7d4b_buildComptimeTypeInfoData(&((*((*(_95532_e))))._field_s), &(_1c0e9b726_primVoid));;
	};
	return _1c0ca7d4b_buildComptimeTypeInfoData(&((*((*(_95532_e))))._field_s), &((*(_96013_f))._field_Result));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca1482__Params(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Ptr<_1c0d82046_Eval>* _97132_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _97147_fc) {
	if (((*((*(_97147_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_97132_e)).ptr(), (*((*((*(_97147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c744aa_FnIns> _97613_f = _1c0db3e57_Fn((*(_self_))._field_base.ptr());;
	if ((_97613_f == nullptr)) {
		_1c0d82596_pushErr((*(_97132_e)).ptr(), (*((*(_97147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0c978c9_comptimeParams>(_1c0c978c9_comptimeParams{._field_params=(*(_97613_f))._field_Params}), 13)}), });;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca17c3_subIdent(jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _self_, jule::Str* _98829_ident) {
	{
		auto &_match_expr{ (*(_98829_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1aa6882be:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _99117_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _99233_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _99248_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c9b3d3__Str(_self_, _99233_e, _99248_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_99117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1aa688852:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _99817_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _99933_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _99948_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c9bbca__Bits(_self_, _99933_e, _99948_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_99817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1aa6888b8:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _100517_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _100633_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _100648_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c9c0c6__Elem(_self_, _100633_e, _100648_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_100517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1aa68892e:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _101217_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _101333_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _101348_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c9c4c2__Size(_self_, _101333_e, _101348_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_101217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1aa688995:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _101917_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _102033_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _102048_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c9c8bd__Key(_self_, _102033_e, _102048_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_101917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1aa688aa5:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _102617_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _102733_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _102748_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c9ccb9__Value(_self_, _102733_e, _102748_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_102617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1aa688b1b:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _103317_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _103433_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _103448_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c9d1b5__Fields(_self_, _103433_e, _103448_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_103317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1aa688b82:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _104017_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _104133_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _104148_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c9d5b1__Statics(_self_, _104133_e, _104148_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_104017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1aa688be8:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _104717_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _104833_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _104848_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0ca1482__Params(_self_, _104833_e, _104848_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_104717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1aa688c5e:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _105417_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _105533_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _105548_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c9ee97__Types(_self_, _105533_e, _105548_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_105417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1aa688cc5:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _106117_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _106233_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _106248_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c9d9ac__Public(_self_, _106233_e, _106248_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_106117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1aa688d3b:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _106817_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _106933_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _106948_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c9dda8__Binded(_self_, _106933_e, _106948_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_106817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1aa688db3:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _107517_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _107633_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _107648_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c9e2a4__Ordered(_self_, _107633_e, _107648_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_107517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1aa688e3a:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _108217_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _108333_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _108348_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c9e6a0__Comparable(_self_, _108333_e, _108348_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_108217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1aa688eb2:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _108917_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _109033_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _109048_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c9ea9b__Mutable(_self_, _109033_e, _109048_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_108917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1aa689039:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _109617_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _109733_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _109748_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0ca0393__Exceptional(_self_, _109733_e, _109748_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_109617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1aa6890b1:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _110317_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _110433_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _110448_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0ca078e__CanNil(_self_, _110433_e, _110448_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_110317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1aa689138:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _111017_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _111133_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _111148_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0ca0b8a__RC(_self_, _111133_e, _111148_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_111017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1aa6891b0:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _111717_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _111833_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _111848_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0ca1086__Result(_self_, _111833_e, _111848_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_111717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1aa689237:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _112417_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _112533_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _112548_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0c9b7ce__Kind(_self_, _112533_e, _112548_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_112417_method));;
			}
		}
		else {
			_case_begin_1aa688434:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa688115:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c9a5be_comptimeTypeInfo _Src) {
	_Stream << _1c0c9a943_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0ca1e55_Str(_1c0ca1ad1_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1c0ca2296_Equal(jule::Ptr<_1c0ca1ad1_comptimeValue> _self_, jule::Ptr<_1c0db0519_TypeKind> _114321_other) {
	return false;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca27e6__Unwrap(jule::Ptr<_1c0ca1ad1_comptimeValue> _self_, jule::Ptr<_1c0d82046_Eval>* _114732_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _114747_fc) {
	if (((*((*(_114747_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_114732_e)).ptr(), (*((*((*(_114747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca2be2__Type(jule::Ptr<_1c0ca1ad1_comptimeValue> _self_, jule::Ptr<_1c0d82046_Eval>* _115530_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _115545_fc) {
	if (((*((*(_115545_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_115530_e)).ptr(), (*((*((*(_115545_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c0ca7d4b_buildComptimeTypeInfoData(&((*((*(_115530_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca30dd__Lvalue(jule::Ptr<_1c0ca1ad1_comptimeValue> _self_, jule::Ptr<_1c0d82046_Eval>* _116332_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _116347_fc) {
	if (((*((*(_116347_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_116332_e)).ptr(), (*((*((*(_116347_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _116813_constant = static__2036450bd_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, ._field_Model=jule::Any(_116813_constant, &__jule_any_type19), ._field_Constant=_116813_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca34d9__Mutable(jule::Ptr<_1c0ca1ad1_comptimeValue> _self_, jule::Ptr<_1c0d82046_Eval>* _117633_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _117648_fc) {
	if (((*((*(_117648_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_117633_e)).ptr(), (*((*((*(_117648_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _118113_constant = static__2036450bd_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, ._field_Model=jule::Any(_118113_constant, &__jule_any_type19), ._field_Constant=_118113_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca38d5__Const(jule::Ptr<_1c0ca1ad1_comptimeValue> _self_, jule::Ptr<_1c0d82046_Eval>* _118931_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _118946_fc) {
	if (((*((*(_118946_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_118931_e)).ptr(), (*((*((*(_118946_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _119413_constant = static__2036450bd_NewBool(_1c0d80c26_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, ._field_Model=jule::Any(_119413_constant, &__jule_any_type19), ._field_Constant=_119413_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca3cd1__Field(jule::Ptr<_1c0ca1ad1_comptimeValue> _self_, jule::Ptr<_1c0d82046_Eval>* _120231_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _120246_fc) {
	if (((*((*(_120246_fc))))._field_Args.len() > 1LL)) {
		_1c0d82596_pushErr((*(_120231_e)).ptr(), (*((*((*(_120246_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c5e3c9_StructIns> _120713_s = _1c0db41dd_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_120713_s == nullptr)) {
		_1c0d82596_pushErr((*(_120231_e)).ptr(), (*((*(_120246_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c3ed27_Expr> _121213_arg = (*((*(_120246_fc))))._field_Args[0LL];;
	jule::Ptr<_1c0d80352_Data> _121313_d = _1c0da0020_evalExpr((*(_120231_e)), _121213_arg);;
	if ((_121313_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c0d80c26_IsConst(_121313_d.ptr())))) {
		_1c0d82596_pushErr((*(_120231_e)).ptr(), (*(_121213_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0db80e3_Prim> _12219_prim = _1c0db2b6a_Prim((*(_121313_d))._field_Kind.ptr());;
	if (((_12219_prim == nullptr) || (!(_1c0dbb57a_IsStr(_12219_prim.ptr()))))) {
		_1c0d82596_pushErr((*(_120231_e)).ptr(), (*(_121213_arg))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*(_121313_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12269_ident = _203646773_ReadStr((*(_121313_d))._field_Constant.ptr());;
	jule::Ptr<_1c0c5d829_FieldIns> _122713_f = _1c0c60782_FindField(_120713_s.ptr(), _12269_ident);;
	if ((_122713_f == nullptr)) {
		_1c0d82596_pushErr((*(_120231_e)).ptr(), (*(_121213_arg))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_120713_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12269_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_121313_d=jule::new_ptr<_1c0d80352_Data>((*((*(_self_))._field_data)));
	_121313_d=_1c0d98326_evalStructSubIdentField((*(_120231_e)).ptr(), &(_121313_d), &(_120713_s), &((*(_121213_arg))._field_Token), &(_122713_f));
	return _1c0ca807c_buildComptimeValue(&(_121313_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca4122_subIdent(jule::Ptr<_1c0ca1ad1_comptimeValue> _self_, jule::Str* _123729_ident) {
	{
		auto &_match_expr{ (*(_123729_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1aa6ccba4:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _124017_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _124133_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _124148_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0ca27e6__Unwrap(_self_, _124133_e, _124148_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_124017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1aa6ccc2b:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _124717_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _124833_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _124848_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0ca2be2__Type(_self_, _124833_e, _124848_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_124717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1aa6ccca3:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _125417_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _125533_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _125548_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0ca30dd__Lvalue(_self_, _125533_e, _125548_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_125417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1aa6ccd2a:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _126117_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _126233_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _126248_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0ca34d9__Mutable(_self_, _126233_e, _126248_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_126117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1aa6cd07d:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _126817_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _126933_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _126948_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0ca38d5__Const(_self_, _126933_e, _126948_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_126817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1aa6cd105:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _127517_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _127633_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _127648_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0ca3cd1__Field(_self_, _127633_e, _127648_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_127517_method));;
			}
		}
		else {
			_case_begin_1aa6ccb2c:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6ccaa5:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0ca1ad1_comptimeValue _Src) {
	_Stream << _1c0ca1e55_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0ca47a4_Str(_1c0ca4430_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1c0ca4ae5_Equal(jule::Ptr<_1c0ca4430_comptimeFiles> _self_, jule::Ptr<_1c0db0519_TypeKind> _129421_other) {
	return false;;
}



inline void _1c0ca5068_ready(_1c0ca4430_comptimeFiles* _self_, jule::Ptr<_1c0d2b94c_Var>* _129829_keyA, jule::Ptr<_1c0d2b94c_Var>* _129846_keyB) {
	if (((*(_129829_keyA)) != nullptr)) {
		(*((*(_129829_keyA))))._field_Constant=true;
		(*((*(_129829_keyA))))._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()});
		(*((*((*((*(_129829_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_129829_keyA))))._field_Kind=(*(_1c0e9ee44_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_129846_keyB)) != nullptr)) {
		(*((*(_129846_keyB))))._field_Constant=true;
		(*((*(_129846_keyB))))._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()});
		(*((*(_129846_keyB))))._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0ca5a2a_comptimeFile>(), 18)})});
	};
}



inline void _1c0ca5486_step(_1c0ca4430_comptimeFiles* _self_, jule::I64 _132023_i, jule::Ptr<_1c0d2b94c_Var>* _132036_keyA, jule::Ptr<_1c0d2b94c_Var>* _132053_keyB) {
	if (((*(_132036_keyA)) != nullptr)) {
		(*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Constant=static__203644a3a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_132023_i)));
		(*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_132036_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_132053_keyB)) != nullptr)) {
		(*((*((*((*((*(_132053_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1c0ca5a2a_comptimeFile>(18)))._field_file=(*(_self_))._field_files[_132023_i];
	};
}



inline jule::I64 _1c0ca571c_len(_1c0ca4430_comptimeFiles* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_files.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0ca4430_comptimeFiles _Src) {
	_Stream << _1c0ca47a4_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0ca5d9e_Str(_1c0ca5a2a_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1c0ca61e0_Equal(jule::Ptr<_1c0ca5a2a_comptimeFile> _self_, jule::Ptr<_1c0db0519_TypeKind> _134421_other) {
	return false;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca670c__Path(jule::Ptr<_1c0ca5a2a_comptimeFile> _self_, jule::Ptr<_1c0d82046_Eval>* _134830_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _134845_fc) {
	if (((*((*(_134845_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_134830_e)).ptr(), (*((*((*(_134845_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _135313_constant = static__203645387_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9bced_primStr, ._field_Model=jule::Any(_135313_constant, &__jule_any_type19), ._field_Constant=_135313_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca6b08__Name(jule::Ptr<_1c0ca5a2a_comptimeFile> _self_, jule::Ptr<_1c0d82046_Eval>* _136130_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _136145_fc) {
	if (((*((*(_136145_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_136130_e)).ptr(), (*((*((*(_136145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _136613_constant = static__203645387_NewStr(_1c0c2b5c7_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9bced_primStr, ._field_Model=jule::Any(_136613_constant, &__jule_any_type19), ._field_Constant=_136613_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca7004__Dir(jule::Ptr<_1c0ca5a2a_comptimeFile> _self_, jule::Ptr<_1c0d82046_Eval>* _137429_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _137444_fc) {
	if (((*((*(_137444_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_137429_e)).ptr(), (*((*((*(_137444_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2036445ea_Const> _137913_constant = static__203645387_NewStr(_1c0c2b341_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9bced_primStr, ._field_Model=jule::Any(_137913_constant, &__jule_any_type19), ._field_Constant=_137913_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca7345_subIdent(jule::Ptr<_1c0ca5a2a_comptimeFile> _self_, jule::Str* _138729_ident) {
	{
		auto &_match_expr{ (*(_138729_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1aa6e9bb0:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _139017_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _139133_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _139148_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0ca670c__Path(_self_, _139133_e, _139148_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_139017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1aa6e9c26:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _139717_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _139833_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _139848_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0ca6b08__Name(_self_, _139833_e, _139848_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_139717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1aa6e9c8c:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _140417_method = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>([=](jule::Ptr<_1c0d82046_Eval>* _140533_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _140548_fc, jule::Ptr<_1c0d80352_Data>* ) mutable -> jule::Ptr<_1c0d80352_Data> {
					return _1c0ca7004__Dir(_self_, _140533_e, _140548_fc);;
				}), });;
				return _1c0ca76b9_buildAsComptimeMethodData(&(_140417_method));;
			}
		}
		else {
			_case_begin_1aa6e9b49:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa6e9ac2:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0ca5a2a_comptimeFile _Src) {
	_Stream << _1c0ca5d9e_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1c0d04705_Sema>*,jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>*)> _1c0caa090_readyFn(jule::Ptr<_1c0ca9b94_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1c0d04705_Sema>*,jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>*)>([=](jule::Ptr<_1c0d04705_Sema>* _6321_sema, jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &((*(_self_))._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa7088e4:;
			if (it != expr_end) {
				jule::I64 _6418_i = it - expr->begin();
				jule::Ptr<_1c0c47bed_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1c0dadb33_InsGeneric> _6521_generic = (*(_self_))._field_generics[_6418_i];;
					if ((((*(_6425_g))._field_Constraint == nullptr) || ((*((*(_6425_g))._field_Constraint))._field_Mask.len() == 0LL))) {
						goto _iter_next_1aa7088e4;
					};
					(*(_6521_generic))._field_Constraint=jule::Slice<jule::Ptr<_1c0db0519_TypeKind>>::alloc(0LL, (*((*(_6425_g))._field_Constraint))._field_Mask.len());
					{
						auto expr = &((*((*(_6425_g))._field_Constraint))._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa709ac1:;
						if (it != expr_end) {
							jule::Ptr<_1c0c3a9e3_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7121_n = (*((*(_6321_sema))))._field_errors.len();;
								jule::Ptr<_1c0db0519_TypeKind> _7225_kind = _1c0d0c2bd_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_1c0dd0050_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7225_kind == nullptr)) {
									{
										auto &_match_expr{ (*(_7029_mask))._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1aa70d278:;
											{
												jule::Ptr<_1c0c3b0ed_IdentTypeDecl> _7633_itd = (*(_7029_mask))._field_Kind.cast_ptr<_1c0c3b0ed_IdentTypeDecl>(&__jule_any_type20);;
												if ((((*(_7633_itd))._field_Generics.len() == 0LL) && _1c0cab35a_isBuiltinConstraint(&((*(_7633_itd))._field_Ident)))) {
													_7225_kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType((*(_7633_itd))._field_Ident), 20)});
													(*((*(_6321_sema))))._field_errors=(*((*(_6321_sema))))._field_errors.slice(0LL, _7121_n);
													goto _julec_label_1aa70e2ac;
												};
											}
										}
										_match_end_1aa70d223:;
									};
									return false;;
								};
								_julec_label_1aa70e2ac:;
								{ jule::Slice<jule::Ptr<_1c0db0519_TypeKind>> &__jule_push_dest = (*(_6521_generic))._field_Constraint; __jule_push_dest.push(_7225_kind); };
							}
							_iter_next_1aa709ac1:;
							++it;
							goto _iter_begin_1aa709ac1;
						}
						_iter_end_1aa709ac1:;
					};
				}
				_iter_next_1aa7088e4:;
				++it;
				_6418_i++;
				goto _iter_begin_1aa7088e4;
			}
			_iter_end_1aa7088e4:;
		};
		return true;;
	});;
}



inline jule::Bool _1c0caa326_readyFi(jule::Ptr<_1c0ca9b94_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_fi))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_fi))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1c0d11d50_fnEnvironment((*(_self_))._field_s, &((*(_self_))._field_fi), _1c0caa090_readyFn(_self_)));;
}



inline jule::Bool _1c0caa5ac_readySi(jule::Ptr<_1c0ca9b94_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_si))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_si))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _1c0caa090_readyFn(_self_)(&((*(_self_))._field_s), &((*(_self_))._field_genericsA)));;
}



inline jule::Bool _1c0caa843_ready(jule::Ptr<_1c0ca9b94_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1c0caa326_readyFi(_self_);;
	};
	return _1c0caa5ac_readySi(_self_);;
}



inline jule::Bool _1c0caaac9_check(jule::Ptr<_1c0ca9b94_constraintChecker> _self_) {
	if ((!(_1c0caa843_ready(_self_)))) {
		return false;;
	};
	_julec_label_1aa716a56:;
	{
		auto expr = &((*(_self_))._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa71720a:;
		if (it != expr_end) {
			jule::I64 _11914_i = it - expr->begin();
			jule::Ptr<_1c0dadb33_InsGeneric> _11921_g = *it;
			{
				if (((*(_11921_g))._field_Constraint == nullptr)) {
					goto _iter_next_1aa71720a;
				};
				{
					auto expr = &((*(_11921_g))._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa7182e9:;
					if (it != expr_end) {
						jule::Ptr<_1c0db0519_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1c0db80e3_Prim> _12421_prim = _1c0db2b6a_Prim(_12325_c2.ptr());;
							if (((_12421_prim != nullptr) && _1c0db8c1a_IsConstraint(_12421_prim.ptr()))) {
								if (_1c0cab04c_matchConstraint(&((*(_12421_prim))._field_Kind), &((*(_11921_g))._field_Kind))) {
									goto _iter_next_1aa71720a;
								};
								goto _iter_next_1aa7182e9;
							};
							if (_1c0db0c23_Equal(_12325_c2, (*(_11921_g))._field_Kind)) {
								goto _iter_next_1aa71720a;
							};
						}
						_iter_next_1aa7182e9:;
						++it;
						goto _iter_begin_1aa7182e9;
					}
					_iter_end_1aa7182e9:;
				};
				_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_et, jule::Str::lit("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_11921_g))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*(_self_))._field_genericsD[_11914_i]))._field_Ident, &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1aa71720a:;
			++it;
			_11914_i++;
			goto _iter_begin_1aa71720a;
		}
		_iter_end_1aa71720a:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0ca9b94_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0cac092_IsTraitImpl(_1c0cabbc9_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1c0cac328_IsStructImpl(_1c0cabbc9_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cabbc9_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb210d_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb252b_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb2828_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb2c46_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb3043_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb34e9_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb3e45_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb42ca_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb46a4_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb49a1_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb4d7a_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb5254_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb570a_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb5ad4_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb6244_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb6d7c_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb7476_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb780b_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb7e6b_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb84ee_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0cb98a7_SelectPackage(_1c0cb9412_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)> _45832_selector) {
	return _1c0d04b9a_SelectPackage((*(_self_))._field_s.ptr(), _45832_selector);;
}



inline jule::Ptr<_1c0d2b94c_Var> _1c0cb9ca3_FindVar(_1c0cb9412_scopeChecker* _self_, jule::Str _46926_ident, jule::Bool _46938_binded) {
	;
	jule::Ptr<_1c0d2b94c_Var> _47213_v = _1c0d7c7e4_findVar((*(_self_))._field_table.ptr(), &(_46926_ident), _46938_binded, true);;
	if ((_47213_v != nullptr)) {
		return _47213_v;;
	};
	jule::Ptr<_1c0cb9412_scopeChecker> _47713_parent = (*(_self_))._field_parent;;
	while ((_47713_parent != nullptr)) {
		{
			_47213_v=_1c0d7c7e4_findVar((*(_47713_parent))._field_table.ptr(), &(_46926_ident), _46938_binded, true);
			if ((_47213_v != nullptr)) {
				return _47213_v;;
			};
			_47713_parent=(*(_47713_parent))._field_parent;
		}
	_iter_next_1aa748071:;
	}
	_iter_end_1aa748071:;;
	return _1c0d05096_FindVar((*(_self_))._field_s.ptr(), _46926_ident, _46938_binded);;
}



inline jule::Ptr<_1c0dae727_TypeAlias> _1c0cba19e_FindTypeAlias(_1c0cb9412_scopeChecker* _self_, jule::Str _49632_ident, jule::Bool _49644_binded) {
	;
	jule::Ptr<_1c0dae727_TypeAlias> _49913_ta = _1c0d7cc9a_findTypeAlias((*(_self_))._field_table.ptr(), &(_49632_ident), _49644_binded, true);;
	if ((_49913_ta != nullptr)) {
		return _49913_ta;;
	};
	jule::Ptr<_1c0cb9412_scopeChecker> _50413_parent = (*(_self_))._field_parent;;
	while ((_50413_parent != nullptr)) {
		{
			_49913_ta=_1c0d7cc9a_findTypeAlias((*(_50413_parent))._field_table.ptr(), &(_49632_ident), _49644_binded, true);
			if ((_49913_ta != nullptr)) {
				return _49913_ta;;
			};
			_50413_parent=(*(_50413_parent))._field_parent;
		}
	_iter_next_1aa74ac88:;
	}
	_iter_end_1aa74ac88:;;
	return _1c0d05492_FindTypeAlias((*(_self_))._field_s.ptr(), _49632_ident, _49644_binded);;
}



inline jule::Ptr<_1c0c5b64b_Struct> _1c0cba59a_FindStruct(_1c0cb9412_scopeChecker* _self_, jule::Str _52129_ident, jule::Bool _52141_binded) {
	return _1c0d0588d_FindStruct((*(_self_))._field_s.ptr(), _52129_ident, _52141_binded);;
}



inline jule::Ptr<_1c0c715a6_Fn> _1c0cba996_FindFn(_1c0cb9412_scopeChecker* _self_, jule::Str _53025_ident, jule::Bool _53037_binded) {
	return _1c0d05c89_FindFn((*(_self_))._field_s.ptr(), _53025_ident, _53037_binded);;
}



inline jule::Ptr<_1c0c84850_Trait> _1c0cbacd7_FindTrait(_1c0cb9412_scopeChecker* _self_, jule::Str _53928_ident) {
	return _1c0d060ca_FindTrait((*(_self_))._field_s.ptr(), _53928_ident);;
}



inline jule::Ptr<_1c0c8704a_Enum> _1c0cbb128_FindEnum(_1c0cb9412_scopeChecker* _self_, jule::Str _54827_ident) {
	return _1c0d0641b_FindEnum((*(_self_))._field_s.ptr(), _54827_ident);;
}



inline jule::Ptr<_1c0c88755_TypeEnum> _1c0cbb469_FindTypeEnum(_1c0cb9412_scopeChecker* _self_, jule::Str _55731_ident) {
	return _1c0d0675c_FindTypeEnum((*(_self_))._field_s.ptr(), _55731_ident);;
}



inline jule::Bool _1c0cbb7bb_isUnsafe(jule::Ptr<_1c0cb9412_scopeChecker> _self_) {
	jule::Ptr<_1c0cb9412_scopeChecker> _56513_scope = _self_;;
	_julec_label_1aa75009a:;
	if ((*((*(_56513_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*(_56513_scope))._field_parent != nullptr)) {
		_56513_scope=(*(_56513_scope))._field_parent;
		goto _julec_label_1aa75009a;
	};
	return false;;
}



inline jule::Bool _1c0cbba52_isRoot(_1c0cb9412_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1c0cbbc50_stop(_1c0cb9412_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1c0cbbed6_stopped(_1c0cb9412_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1c0cbc26c_isDeferred(jule::Ptr<_1c0cb9412_scopeChecker> _self_) {
	jule::Ptr<_1c0cb9412_scopeChecker> _59813_scope = _self_;;
	_julec_label_1aa753851:;
	if ((*((*(_59813_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*(_59813_scope))._field_parent != nullptr)) {
		_59813_scope=(*(_59813_scope))._field_parent;
		goto _julec_label_1aa753851;
	};
	return false;;
}



inline jule::Ptr<_1c0cb9412_scopeChecker> _1c0cbc503_getRoot(jule::Ptr<_1c0cb9412_scopeChecker> _self_) {
	jule::Ptr<_1c0cb9412_scopeChecker> _61613_root = _self_;;
	while ((((*(_61613_root))._field_parent != nullptr) && ((*(_61613_root))._field_owner == nullptr))) {
		{
			_61613_root=(*(_61613_root))._field_parent;
		}
	_iter_next_1aa755600:;
	}
	_iter_end_1aa755600:;;
	return _61613_root;;
}



inline jule::Ptr<_1c0cb9412_scopeChecker> _1c0cbc789_getHardRoot(jule::Ptr<_1c0cb9412_scopeChecker> _self_) {
	jule::Ptr<_1c0cb9412_scopeChecker> _62613_root = _self_;;
	while (((*(_62613_root))._field_parent != nullptr)) {
		{
			_62613_root=(*(_62613_root))._field_parent;
		}
	_iter_next_1aa756810:;
	}
	_iter_end_1aa756810:;;
	return _62613_root;;
}



inline jule::Ptr<_1c0cb49a1_Label> _1c0cbcaca_findLabel(_1c0cb9412_scopeChecker* _self_, jule::Str* _63629_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa75779a:;
		if (it != expr_end) {
			jule::Any _63721_st = *it;
			{
				{
					auto &_match_expr{ _63721_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1aa7583d3:;
						{
							jule::Ptr<_1c0cb49a1_Label> _64021_label = _63721_st.cast_ptr<_1c0cb49a1_Label>(&__jule_any_type21);;
							if (((*(_64021_label))._field_Ident == (*(_63629_ident)))) {
								return _64021_label;;
							};
						}
					}
					_match_end_1aa75837d:;
				};
			}
			_iter_next_1aa75779a:;
			++it;
			goto _iter_begin_1aa75779a;
		}
		_iter_end_1aa75779a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0cb7e6b_scopeLabel> _1c0cbce1b_findLabelScope(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Str* _65235_ident) {
	jule::Ptr<_1c0cb7e6b_scopeLabel> _65313_label = _1c0cbd25c_findLabelAll(_self_.ptr(), _65235_ident);;
	if (((_65313_label != nullptr) && ((*(_65313_label))._field_scope == _self_))) {
		return _65313_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0cb7e6b_scopeLabel> _1c0cbd25c_findLabelAll(_1c0cb9412_scopeChecker* _self_, jule::Str* _66432_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa75a490:;
		if (it != expr_end) {
			jule::Ptr<_1c0cb7e6b_scopeLabel> _66521_lbl = *it;
			{
				if (((*((*(_66521_lbl))._field_label))._field_Ident == (*(_66432_ident)))) {
					return _66521_lbl;;
				};
			}
			_iter_next_1aa75a490:;
			++it;
			goto _iter_begin_1aa75a490;
		}
		_iter_end_1aa75a490:;
	};
	return nullptr;;
}



inline jule::Bool _1c0cbd658_isDuplicatedIdent(_1c0cb9412_scopeChecker* _self_, jule::Uintptr _67636_itself, jule::Str* _67654_ident) {
	jule::Ptr<_1c0d2b94c_Var> _6779_v = _1c0cb9ca3_FindVar(_self_, (*(_67654_ident)), false);;
	if (((_6779_v != nullptr) && (static_cast<jule::Uintptr>(_6779_v) != _67636_itself))) {
		if (((*(_6779_v))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6779_v))._field_Scope == (*(_self_))._field_scope) || (!(_1c0d06b69_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1c0dae727_TypeAlias> _6859_ta = _1c0cba19e_FindTypeAlias(_self_, (*(_67654_ident)), false);;
	if (((_6859_ta != nullptr) && (static_cast<jule::Uintptr>(_6859_ta) != _67636_itself))) {
		if (((*(_6859_ta))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6859_ta))._field_Scope == (*(_self_))._field_tree) || (!(_1c0d06b69_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1c0cbd911_checkVarDecl(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c4d781_VarDecl> _69636_decl) {
	jule::Ptr<_1c0d2b94c_Var> _69713_v = _1c0c7cae0_buildVar(_69636_decl);;
	(*(_69713_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_69713_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_69713_v, &__jule_any_type8)); };
	});;
	if (_1c0cbd658_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69713_v)), &((*(_69713_v))._field_Ident))) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_69713_v))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_69713_v))._field_Ident, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1c0cbbc50_stop(_self_.ptr());
		return;;
	};
	_1c0d19a39_checkVarDecl((*(_self_))._field_s, &(_69713_v), jule::Trait<_1c0dd0050_Lookup>(_self_, 0));
	if (((!(_1c0d2c068_IsTypeInferred(_69713_v.ptr()))) && (((*(_69713_v))._field_Kind == nullptr) || ((*((*(_69713_v))._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1c0d1d2ce_evalVarValue((*(_self_))._field_s, &(_69713_v), jule::Trait<_1c0dd0050_Lookup>(_self_, 0));
	if (((!(_1c0d2bcd2_IsInitialized(_69713_v.ptr()))) || ((*((*(_69713_v))._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1c0cc4b7b_removeInteriorMutRisk(_self_, &((*((*(_69713_v))._field_Value))._field_Data));
	_1c0d1ce6b_checkVarValue((*(_self_))._field_s, &(_69713_v));
}



inline void _1c0cbdbb9_checkTypeAlias(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0dae727_TypeAlias>* _72739_ta) {
	if (_1c0cbd658_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_72739_ta)))), &((*((*(_72739_ta))))._field_Ident))) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_72739_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_72739_ta))))._field_Ident, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1c0cbbc50_stop(_self_.ptr());
		return;;
	};
	_1c0d13abb_checkTypeAliasDecl((*(_self_))._field_s, _72739_ta, jule::Trait<_1c0dd0050_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push((*(_72739_ta))); };
	if (((*((*((*(_72739_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1c0cbbc50_stop(_self_.ptr());
	};
}



inline void _1c0cbde72_checkTypeAliasDecl(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c52356_TypeAliasDecl> _74342_decl) {
	jule::Ptr<_1c0dae727_TypeAlias> _74413_ta = _1c0c795ae_buildTypeAlias(_74342_decl);;
	_1c0cbdbb9_checkTypeAlias(_self_, &(_74413_ta));
}



inline jule::Ptr<_1c0cb210d_Scope> _1c0cbe208_getChild(_1c0cb9412_scopeChecker* _self_) {
	return jule::new_ptr<_1c0cb210d_Scope>(_1c0cb210d_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1c0cbe626_checkChildSsc(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c4aa14_ScopeTree>* _75438_tree, jule::Ptr<_1c0cb210d_Scope>* _75461_s, jule::Ptr<_1c0cb9412_scopeChecker>* _75477_ssc) {
	(*((*(_75477_ssc))))._field_parent=_self_;
	_1c0ccadc4_check((*(_75477_ssc)), _75438_tree, _75461_s);
}



inline jule::Ptr<_1c0cb210d_Scope> _1c0cbea22_checkChildSc(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c4aa14_ScopeTree>* _75937_tree, jule::Ptr<_1c0cb9412_scopeChecker>* _75960_ssc) {
	jule::Ptr<_1c0cb210d_Scope> _76013_s = _1c0cbe208_getChild(_self_.ptr());;
	_1c0cbe626_checkChildSsc(_self_, _75937_tree, &(_76013_s), _75960_ssc);
	return _76013_s;;
}



inline jule::Ptr<_1c0cb210d_Scope> _1c0cbed63_checkChild(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c4aa14_ScopeTree>* _76535_tree) {
	jule::Ptr<_1c0cb9412_scopeChecker> _76613_ssc = _1c0ccb15a_newChildChecker(_self_);;
	return _1c0cbea22_checkChildSc(_self_, _76535_tree, &(_76613_ssc));;
}



inline void _1c0cc011b_checkAnonScope(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c4aa14_ScopeTree> _77038_tree) {
	jule::Ptr<_1c0cb210d_Scope> _77113_s = _1c0cbed63_checkChild(_self_, &(_77038_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_77113_s, &__jule_any_type22)); };
}



inline void _1c0cc047e_processErrorCall(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c6c173_BuiltinErrorCallExprModel>* _77541_m, jule::Ptr<_1c0c25406_Token> _77572_err) {
	if (_1c0cbc26c_isDeferred(_self_)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0cb9412_scopeChecker> _78013_root = _1c0cbc503_getRoot(_self_);;
	if ((!((*((*((*(_78013_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1c0d076a3_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_77541_m))))._field_Func=(*(_78013_root))._field_owner;
}



inline void _1c0cc0737_checkExpr(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c3ed27_Expr> _78833_expr) {
	jule::Ptr<_1c0d82046_Eval> _78913_eval = _1c0d0e7dc_eval((*(_self_))._field_s, jule::Trait<_1c0dd0050_Lookup>(_self_, 0));;
	(*(_78913_eval))._field_ignored=true;
	jule::Ptr<_1c0d80352_Data> _79113_d = _1c0da0020_evalExpr(_78913_eval, _78833_expr);;
	if (((_79113_d == nullptr) || ((*(_79113_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_79113_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aa776b82:;
			{
				jule::Ptr<_1c0c6c173_BuiltinErrorCallExprModel> _80017_m = (*(_79113_d))._field_Model.cast_ptr<_1c0c6c173_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1c0cc047e_processErrorCall(_self_, &(_80017_m), (*(_78833_expr))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_1aa777644:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_1aa7772d1:;
			{
				_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_78833_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa77727b:;
	};
}



inline jule::Ptr<_1c0cb252b_If> _1c0cc0a78_checkIf(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c51289_If> _81931_i) {
	jule::Ptr<_1c0cb210d_Scope> _82013_s = _1c0cbed63_checkChild(_self_, &((*(_81931_i))._field_Scope));;
	jule::Ptr<_1c0d80352_Data> _82213_d = _1c0da0020_evalExpr(_1c0d0e7dc_eval((*(_self_))._field_s, jule::Trait<_1c0dd0050_Lookup>(_self_, 0)), (*(_81931_i))._field_Expr);;
	if ((_82213_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0db80e3_Prim> _82713_prim = _1c0db2b6a_Prim((*(_82213_d))._field_Kind.ptr());;
	if (((_82713_prim == nullptr) || (!(_1c0dbb2e4_IsBool(_82713_prim.ptr()))))) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_81931_i))._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c0cb252b_If>(_1c0cb252b_If{._field_Expr=(*(_82213_d))._field_Model, ._field_Scope=_82013_s});;
}



inline jule::Ptr<_1c0cb2828_Else> _1c0cc0db9_checkElse(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c51663_Else> _83933_e) {
	return jule::new_ptr<_1c0cb2828_Else>(_1c0cb2828_Else{._field_Scope=_1c0cbed63_checkChild(_self_, &((*(_83933_e))._field_Scope))});;
}



inline void _1c0cc1172_checkConditional(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c51b19_Conditional> _84540_conditional) {
	jule::Ptr<_1c0cb2c46_Conditional> _84613_c = jule::new_ptr<_1c0cb2c46_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_84613_c, &__jule_any_type35)); };
	(*(_84613_c))._field_Elifs=jule::Slice<jule::Ptr<_1c0cb252b_If>>::alloc(0LL, ((*(_84540_conditional))._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_1c0cb252b_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_1c0cc0a78_checkIf(_self_, (*(_84540_conditional))._field_Head)); };
	{
		auto expr = &((*(_84540_conditional))._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa783672:;
		if (it != expr_end) {
			jule::Ptr<_1c0c51289_If> _85221_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0cb252b_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_1c0cc0a78_checkIf(_self_, _85221_elif)); };
			}
			_iter_next_1aa783672:;
			++it;
			goto _iter_begin_1aa783672;
		}
		_iter_end_1aa783672:;
	};
	if (((*(_84540_conditional))._field_Default != nullptr)) {
		(*(_84613_c))._field_Default=_1c0cc0db9_checkElse(_self_, (*(_84540_conditional))._field_Default);
	};
}



inline void _1c0cc164a_checkIterScopeSsc(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Uintptr _86137_it, jule::Ptr<_1c0c4aa14_ScopeTree> _86154_tree, jule::Ptr<_1c0cb210d_Scope>* _86177_s, jule::Ptr<_1c0cb9412_scopeChecker> _86192_ssc) {
	(*(_86192_ssc))._field_it=_86137_it;
	_1c0cbe626_checkChildSsc(_self_, &(_86154_tree), _86177_s, &(_86192_ssc));
}



inline jule::Ptr<_1c0cb210d_Scope> _1c0cc1b01_checkIterScopeSc(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Uintptr _86636_it, jule::Ptr<_1c0c4aa14_ScopeTree> _86653_tree, jule::Ptr<_1c0cb9412_scopeChecker> _86675_ssc) {
	jule::Ptr<_1c0cb210d_Scope> _86713_scope = _1c0cbe208_getChild(_self_.ptr());;
	_1c0cc164a_checkIterScopeSsc(_self_, _86636_it, _86653_tree, &(_86713_scope), _86675_ssc);
	return _86713_scope;;
}



inline jule::Ptr<_1c0cb210d_Scope> _1c0cc1eec_checkIterScope(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Uintptr _87234_it, jule::Ptr<_1c0c4aa14_ScopeTree>* _87252_tree) {
	jule::Ptr<_1c0cb9412_scopeChecker> _87313_ssc = _1c0ccb15a_newChildChecker(_self_);;
	return _1c0cc1b01_checkIterScopeSc(_self_, _87234_it, (*(_87252_tree)), _87313_ssc);;
}



inline void _1c0cc22a5_checkInfIter(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c4e2ed_Iter>* _87737_it) {
	jule::Ptr<_1c0cb3043_InfIter> _87813_kind = jule::new_ptr<_1c0cb3043_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_87813_kind, &__jule_any_type36)); };
	(*(_87813_kind))._field_Scope=_1c0cc1eec_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87813_kind)), &((*((*(_87737_it))))._field_Scope));
}



inline void _1c0cc255d_checkWhileIter(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c4e2ed_Iter>* _88339_it) {
	jule::Ptr<_1c0c4eb28_WhileKind> _88413_wh = (*((*(_88339_it))))._field_Kind.cast_ptr<_1c0c4eb28_WhileKind>(&__jule_any_type37);;
	if ((((*(_88413_wh))._field_Expr == nullptr) && ((*(_88413_wh))._field_Next == nullptr))) {
		_1c0cc22a5_checkInfIter(_self_, _88339_it);
		return;;
	};
	jule::Ptr<_1c0cb34e9_WhileIter> _89013_kind = jule::new_ptr<_1c0cb34e9_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_89013_kind, &__jule_any_type38)); };
	(*(_89013_kind))._field_Scope=_1c0cc1eec_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89013_kind)), &((*((*(_88339_it))))._field_Scope));
	if (((*(_88413_wh))._field_Expr != nullptr)) {
		jule::Ptr<_1c0d80352_Data> _89517_d = _1c0da0020_evalExpr(_1c0d0e7dc_eval((*(_self_))._field_s, jule::Trait<_1c0dd0050_Lookup>(_self_, 0)), (*(_88413_wh))._field_Expr);;
		if ((_89517_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1c0db80e3_Prim> _90013_prim = _1c0db2b6a_Prim((*(_89517_d))._field_Kind.ptr());;
		if ((_90013_prim == nullptr)) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1c0dbb2e4_IsBool(_90013_prim.ptr())))) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*(_89013_kind))._field_Expr=(*(_89517_d))._field_Model;
	};
	if (_1c0c4ee8b_IsWhileNext(_88413_wh.ptr())) {
		if ((!(_1c0cb1618_isValidAstStForNextSt(&((*(_88413_wh))._field_Next))))) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _92013_n = (*((*(_self_))._field_scope))._field_Stmts.len();;
		_1c0cc9a0a_checkNode(_self_, &((*(_88413_wh))._field_Next));
		if ((_92013_n < (*((*(_self_))._field_scope))._field_Stmts.len())) {
			jule::Any _92321_st = (*((*(_self_))._field_scope))._field_Stmts[_92013_n];;
			(*((*(_self_))._field_scope))._field_Stmts=(*((*(_self_))._field_scope))._field_Stmts.slice(0LL, _92013_n);
			if ((!(_1c0cb18d2_isValidStForNextSt(&(_92321_st))))) {
				_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*(_89013_kind))._field_Next=_92321_st;
		};
	};
}



inline void _1c0cc297b_checkComptimeRangeIter(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c4e2ed_Iter>* _93347_it, jule::Ptr<_1c0cb3e45_RangeIter>* _93363_kind, jule::Ptr<_1c0d80352_Data>* _93386_d) {
	if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
		if (((!(_1c0d06b69_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c0cbd658_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyA))._field_Ident)))) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1c0d076a3_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
		if (((!(_1c0d06b69_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c0cbd658_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyB))._field_Ident)))) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1c0d076a3_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1c0c8aaed_comptimeRange> _94713_comptime = _1c0db6014_comptimeRange((*((*(_93386_d))))._field_Kind.ptr());;
	_1c0c8a911_comptimeRangeKind_mptr_data[((*(_94713_comptime))._field_kind).type_offset]._1c0c8a108_ready((*(_94713_comptime))._field_kind, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
	jule::I64 _94913_i = 0LL;;
	jule::I64 _9509_errors = (*((*(_self_))._field_s))._field_errors.len();;
	for (; (_94913_i < _1c0c8a911_comptimeRangeKind_mptr_data[((*(_94713_comptime))._field_kind).type_offset]._1c0c8a7ac_len((*(_94713_comptime))._field_kind)); (_94913_i)++) {
		{
			jule::Ptr<_1c0cb9412_scopeChecker> _95217_ssc = _1c0ccb15a_newChildChecker(_self_);;
			jule::Ptr<_1c0cb210d_Scope> _95317_scope = _1c0cbe208_getChild(_self_.ptr());;
			if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyA))._field_Scope=_95317_scope;
				{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = (*((*(_95217_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyA); };
			};
			if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyB))._field_Scope=_95317_scope;
				{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = (*((*(_95217_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyB); };
			};
			_1c0c8a911_comptimeRangeKind_mptr_data[((*(_94713_comptime))._field_kind).type_offset]._1c0c8a526_step((*(_94713_comptime))._field_kind, _94913_i, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
			_1c0cbe626_checkChildSsc(_self_, &((*((*(_93347_it))))._field_Scope), &(_95317_scope), &(_95217_ssc));
			if ((_9509_errors != (*((*(_self_))._field_s))._field_errors.len())) {
				goto _iter_end_1aa79e23c;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_95317_scope, &__jule_any_type22)); };
		}
	_iter_next_1aa79e23c:;
	}
	_iter_end_1aa79e23c:;;
}



inline void _1c0cc2c34_checkRangeIter(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c4e2ed_Iter>* _97239_it) {
	jule::Ptr<_1c0c50530_RangeKind> _97313_rang = (*((*(_97239_it))))._field_Kind.cast_ptr<_1c0c50530_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_1c0d80352_Data> _97513_d = _1c0d9ebce_evalExpr1(_1c0d0e7dc_eval((*(_self_))._field_s, jule::Trait<_1c0dd0050_Lookup>(_self_, 0)), (*(_97313_rang))._field_Expr);;
	if ((_97513_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0cb3e45_RangeIter> _98013_kind = jule::new_ptr<_1c0cb3e45_RangeIter>(_1c0cb3e45_RangeIter{._field_Expr=_97513_d, });;
	_1c0d75611_rangeChecker _98413_rc = _1c0d75611_rangeChecker{._field_sc=_self_, ._field_rang=_97313_rang, ._field_Kind=_98013_kind, ._field_d=_97513_d};;
	jule::Bool _9909_ok = _1c0d77624_check(&_98413_rc);;
	if ((!(_9909_ok))) {
		return;;
	};
	jule::Ptr<_1c0c8aaed_comptimeRange> _99513_comptimeRange = _1c0db6014_comptimeRange((*(_97513_d))._field_Kind.ptr());;
	if ((_99513_comptimeRange != nullptr)) {
		_1c0cc297b_checkComptimeRangeIter(_self_, _97239_it, &(_98013_kind), &(_97513_d));
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_98013_kind, &__jule_any_type40)); };
	jule::Ptr<_1c0cb9412_scopeChecker> _100313_ssc = _1c0ccb15a_newChildChecker(_self_);;
	jule::Ptr<_1c0cb210d_Scope> _100413_scope = _1c0cbe208_getChild(_self_.ptr());;
	if (((*(_98013_kind))._field_KeyA != nullptr)) {
		if (((!(_1c0d06b69_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c0cbd658_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_98013_kind))._field_KeyA))._field_Ident)))) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_98013_kind))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_98013_kind))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_1c0d076a3_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_98013_kind))._field_KeyA))._field_Scope=_100413_scope;
		{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = (*((*(_100313_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_98013_kind))._field_KeyA); };
	};
	if (((*(_98013_kind))._field_KeyB != nullptr)) {
		if (((!(_1c0d06b69_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c0cbd658_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_98013_kind))._field_KeyB))._field_Ident)))) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_98013_kind))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_98013_kind))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_1c0d076a3_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_98013_kind))._field_KeyB))._field_Scope=_100413_scope;
		{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = (*((*(_100313_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_98013_kind))._field_KeyB); };
	};
	_1c0cc164a_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_98013_kind)), (*((*(_97239_it))))._field_Scope, &(_100413_scope), _100313_ssc);
	(*(_98013_kind))._field_Scope=_100413_scope;
}



inline void _1c0cc2edc_checkIter(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c4e2ed_Iter> _102833_it) {
	if (_1c0c4e661_IsInf(_102833_it.ptr())) {
		_1c0cc22a5_checkInfIter(_self_, &(_102833_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_102833_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1aa7b4b6a:;
			{
				_1c0cc255d_checkWhileIter(_self_, &(_102833_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1aa7b5880:;
			{
				_1c0cc2c34_checkRangeIter(_self_, &(_102833_it));
			}
		}
		else {
			_case_begin_1aa7b53eb:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1aa7b5396:;
	};
}



inline jule::Bool _1c0cc332d_checkValidContLabel(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Uintptr _104439_it) {
	jule::Ptr<_1c0cb9412_scopeChecker> _104513_scope = _self_;;
	_julec_label_1aa7b6ae5:;
	if (((*(_104513_scope))._field_it == _104439_it)) {
		return true;;
	};
	if (((*(_104513_scope))._field_parent != nullptr)) {
		_104513_scope=(*(_104513_scope))._field_parent;
		goto _julec_label_1aa7b6ae5;
	};
	return false;;
}



inline jule::Bool _1c0cc366e_checkValidBreakLabel(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Uintptr _106040_ptr) {
	jule::Ptr<_1c0cb9412_scopeChecker> _106113_scope = _self_;;
	_julec_label_1aa7b8a2b:;
	if (((*(_106113_scope))._field_it == _106040_ptr)) {
		return true;;
	};
	if (((*(_106113_scope))._field_cse != 0LLU)) {
		jule::Uintptr _106913_mtch = static_cast<jule::Uintptr>((*(((_1c0cb6d7c_Case*)((*(_106113_scope))._field_cse))))._field_Owner);;
		if ((_106913_mtch == _106040_ptr)) {
			return true;;
		};
	};
	if (((*(_106113_scope))._field_parent != nullptr)) {
		_106113_scope=(*(_106113_scope))._field_parent;
		goto _julec_label_1aa7b8a2b;
	};
	return false;;
}



inline jule::Ptr<_1c0cb42ca_ContSt> _1c0cc39b0_checkContValidScope(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c50cd3_ContSt> _108339_c) {
	if (_1c0cbc26c_isDeferred(_self_)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_108339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_108339_c))._field_Label != nullptr)) {
		return jule::new_ptr<_1c0cb42ca_ContSt>();;
	};
	jule::Ptr<_1c0cb9412_scopeChecker> _109313_scope = _self_;;
	_julec_label_1aa7bcb0c:;
	{
		
		if (((((*(_109313_scope))._field_it == 0LLU) && ((*(_109313_scope))._field_parent != nullptr)) && ((*(_109313_scope))._field_owner == nullptr))) {
			_case_begin_1aa7bd37c:;
			{
				_109313_scope=(*(_109313_scope))._field_parent;
				goto _julec_label_1aa7bcb0c;
			}
		}
		else if (((*(_109313_scope))._field_it != 0LLU)) {
			_case_begin_1aa7bd404:;
			{
				return jule::new_ptr<_1c0cb42ca_ContSt>(_1c0cb42ca_ContSt{._field_It=(*(_109313_scope))._field_it});;
			}
		}
		_match_end_1aa7bd2c2:;
	};
	_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_108339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1c0cc3c68_checkCont(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c50cd3_ContSt> _110729_c) {
	jule::Ptr<_1c0cb42ca_ContSt> _110813_cont = _1c0cc39b0_checkContValidScope(_self_, _110729_c);;
	if ((_110813_cont == nullptr)) {
		return;;
	};
	if (((*(_110729_c))._field_Label != nullptr)) {
		jule::Ptr<_1c0cb7e6b_scopeLabel> _111417_label = _1c0cae627_findLabelParent(&((*((*(_110729_c))._field_Label))._field_Kind), (*(_self_))._field_parent);;
		if ((_111417_label == nullptr)) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_111417_label))._field_used=true;
		if ((((*(_111417_label))._field_pos + 1LL) >= (*((*((*(_111417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I64 _112713_i = ((*(_111417_label))._field_pos + 1LL);;
		if ((_112713_i >= (*((*((*(_111417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _113121_st = (*((*((*(_111417_label))._field_scope))._field_scope))._field_Stmts[_112713_i];;
			{
				auto &_match_expr{ _113121_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1aa7c88d7:;
					{
						(*(_110813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113121_st.cast_ptr<_1c0cb3043_InfIter>(&__jule_any_type36)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1aa7c862e:;
					{
						(*(_110813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113121_st.cast_ptr<_1c0cb3e45_RangeIter>(&__jule_any_type40)));
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1aa7c8695:;
					{
						(*(_110813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113121_st.cast_ptr<_1c0cb34e9_WhileIter>(&__jule_any_type38)));
					}
				}
				else {
					_case_begin_1aa7c85b8:;
					{
						_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1aa7c8563:;
			};
		};
	};
	if (((*(_110813_cont))._field_It != 0LLU)) {
		if ((!(_1c0cc332d_checkValidContLabel(_self_, (*(_110813_cont))._field_It)))) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_110813_cont, &__jule_any_type41)); };
}



inline void _1c0cc4021_checkLabel(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c480c7_LabelSt> _115434_l) {
	if ((_1c0cbcaca_findLabel(_self_.ptr(), &((*(_115434_l))._field_Ident)) != nullptr)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_115434_l))._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_115434_l))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1c0cb49a1_Label> _116013_label = jule::new_ptr<_1c0cb49a1_Label>(_1c0cb49a1_Label{._field_Ident=(*(_115434_l))._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_116013_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_1c0cb7e6b_scopeLabel>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(jule::new_ptr<_1c0cb7e6b_scopeLabel>(_1c0cb7e6b_scopeLabel{._field_token=(*(_115434_l))._field_Token, ._field_label=_116013_label, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _1c0cc42c9_pushGoto(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c484a1_GotoSt> _117332_gt) {
	jule::Ptr<_1c0cb4d7a_GotoSt> _117413_st = jule::new_ptr<_1c0cb4d7a_GotoSt>(_1c0cb4d7a_GotoSt{._field_Ident=(*((*(_117332_gt))._field_Label))._field_Kind, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_117413_st, &__jule_any_type42)); };
	{ jule::Slice<jule::Ptr<_1c0cb84ee_scopeGoto>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(jule::new_ptr<_1c0cb84ee_scopeGoto>(_1c0cb84ee_scopeGoto{._field_st=_117413_st, ._field_gt=_117332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL))})); };
}



inline void _1c0cc4582_checkPostfix(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c49491_AssignSt> _118736_a) {
	if (((*(_118736_a))._field_Left.len() > 1LL)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0c3ed27_Expr> _119313_expr = (*((*(_118736_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1c0d80352_Data> _119413_d = _1c0da0020_evalExpr(_1c0d0e7dc_eval((*(_self_))._field_s, jule::Trait<_1c0dd0050_Lookup>(_self_, 0)), _119313_expr);;
	if ((_119413_d == nullptr)) {
		return;;
	};
	_1c0cb134e_checkAssign(&((*(_self_))._field_s), &(_119413_d), nullptr, (*(_118736_a))._field_Setter);
	if ((_1c0db3187_Ptr((*(_119413_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c0dc03d6_Ptr> _120217_ptr = _1c0db3187_Ptr((*(_119413_d))._field_Kind.ptr());;
		if (_1c0dc0e20_IsUnsafe(_120217_ptr.ptr())) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_118736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*(_119413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1c0db2b6a_Prim((*(_119413_d))._field_Kind.ptr()) == nullptr) || (!(_203644122_IsNum((*(_1c0db2b6a_Prim((*(_119413_d))._field_Kind.ptr())))._field_Kind))))) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_118736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*(_119413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1c0cb5254_Postfix>(_1c0cb5254_Postfix{._field_Expr=(*(_119413_d))._field_Model, ._field_Op=(*((*(_118736_a))._field_Setter))._field_Kind}), &__jule_any_type43)); };
}



inline jule::Bool _1c0cc48c3_isNewAssignIdent(_1c0cb9412_scopeChecker* _self_, jule::Str _122035_ident) {
	if ((_1c0c27d65_IsIgnoreIdent(_122035_ident) || (_122035_ident).empty())) {
		return false;;
	};
	return (_1c0d7d196_defByIdent((*(_self_))._field_table.ptr(), &(_122035_ident), false) == nullptr);;
}



inline void _1c0cc4b7b_removeInteriorMutRisk(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0d80352_Data>* _123346_d) {
	jule::Ptr<_1c0c5e3c9_StructIns> _12349_s = _1c0db41dd_Struct((*((*(_123346_d))))._field_Kind.ptr());;
	if ((_12349_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0cb9412_scopeChecker> _12389_root = _1c0cbc789_getHardRoot(_self_);;
	if (((*((*(_12389_root))._field_owner))._field_Owner != _12349_s)) {
		return;;
	};
	(*((*(_123346_d))))._field_Mutable=true;
}



inline jule::Bool _1c0cc5132_checkStructureAssignOp(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _124747_s, jule::Ptr<_1c0c49491_AssignSt>* _124767_a, jule::Ptr<_1c0d80352_Data>* _124786_r) {
	jule::Ptr<_1c0c744aa_FnIns> _125017_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_124767_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1aa7e303e:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1aa7e4c11:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1aa7e4c77:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1aa7e367c:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1aa7e36e3:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1aa7e3759:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1aa7e37c0:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1aa7e4d65:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1aa7e4dcb:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1aa7e4e42:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1aa7e3616:;
			{
				_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_124767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_124767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1c0c5e74d_Str((*(_124747_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1aa7e35b1:;
	};
	if ((_125017_overload == nullptr)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_124767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_124767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1c0c5e74d_Str((*(_124747_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1c0c7350e_ParamIns> _128213_p = (*(_125017_overload))._field_Params[1LL];;
	return _1c0d0ed4d_checkAssignType((*(_self_))._field_s, (*((*(_128213_p))._field_Decl))._field_Reference, &((*(_128213_p))._field_Kind), _124786_r, (*((*(_124767_a))))._field_Setter);;
}



inline void _1c0cc53da_checkSingleAssign(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c49491_AssignSt>* _128642_a) {
	jule::Ptr<_1c0d80352_Data> _128717_l = nullptr;;
	if ((!(_1c0c27d65_IsIgnoreIdent((*((*((*(_128642_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1c0c3ed27_Expr> _129017_expr = (*((*((*(_128642_a))))._field_Left[0LL]))._field_Expr;;
		_128717_l=_1c0da0020_evalExpr(_1c0d0e7dc_eval((*(_self_))._field_s, jule::Trait<_1c0dd0050_Lookup>(_self_, 0)), _129017_expr);
		if ((_128717_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1c0d82046_Eval> _129717_eval = nullptr;;
	if ((_128717_l != nullptr)) {
		_129717_eval=_1c0d0e49b_evalp((*(_self_))._field_s, jule::Trait<_1c0dd0050_Lookup>(_self_, 0), (*(_128717_l))._field_Kind);
	} else {
		_129717_eval=_1c0d0e7dc_eval((*(_self_))._field_s, jule::Trait<_1c0dd0050_Lookup>(_self_, 0));
	};
	(*(_129717_eval))._field_unsafety=_1c0cbb7bb_isUnsafe(_self_);
	jule::Ptr<_1c0d80352_Data> _130413_r = _1c0da0020_evalExpr(_129717_eval, (*((*(_128642_a))))._field_Right);;
	if ((_130413_r == nullptr)) {
		return;;
	};
	_1c0cc4b7b_removeInteriorMutRisk(_self_, &(_130413_r));
	if ((_128717_l == nullptr)) {
		if (_1c0db187d_Void((*(_130413_r))._field_Kind.ptr())) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_128642_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_130413_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_1c0cb134e_checkAssign(&((*(_self_))._field_s), &(_128717_l), _130413_r, (*((*(_128642_a))))._field_Setter)))) {
		return;;
	};
	if ((_1c0db4991_Tup((*(_130413_r))._field_Kind.ptr()) != nullptr)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_128642_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0c63367_OperandExprModel> _132813_lm = jule::new_ptr<_1c0c63367_OperandExprModel>(_1c0c63367_OperandExprModel{._field_Kind=(*(_128717_l))._field_Kind, ._field_Model=(*(_128717_l))._field_Model});;
	jule::Ptr<_1c0c63367_OperandExprModel> _133213_rm = jule::new_ptr<_1c0c63367_OperandExprModel>(_1c0c63367_OperandExprModel{._field_Kind=(*(_130413_r))._field_Kind, ._field_Model=(*(_130413_r))._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1c0cb570a_Assign>(_1c0cb570a_Assign{._field_L=_132813_lm, ._field_R=_133213_rm, ._field_Op=(*((*(_128642_a))))._field_Setter}), &__jule_any_type44)); };
	if (((*((*((*(_128642_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
		jule::Ptr<_1c0c5e3c9_StructIns> _133917_strct = _1c0db41dd_Struct((*(_128717_l))._field_Kind.ptr());;
		if ((_133917_strct != nullptr)) {
			_1c0cc5132_checkStructureAssignOp(_self_, &(_133917_strct), _128642_a, &(_130413_r));
			return;;
		};
		jule::U64 _134413_id = (*((*((*(_128642_a))))._field_Setter))._field_Id;;
		(*((*((*(_128642_a))))._field_Setter))._field_Id=_1c0ccb4ce_removeEqFromOp((*((*((*(_128642_a))))._field_Setter))._field_Id);
		_1c0da2473_binaryEval _134617_solver = static__1c0da2d9c_new(_129717_eval, (*((*(_128642_a))))._field_Setter);;
		_130413_r=_1c0da81b0_solveExplicit(&_134617_solver, &(_128717_l), &(_130413_r));
		(*((*((*(_128642_a))))._field_Setter))._field_Id=_134413_id;
		if ((_130413_r == nullptr)) {
			return;;
		};
		return;;
	};
	_1c0d68e1d_assignTypeChecker _135513_checker = _1c0d68e1d_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_128717_l))._field_Kind, ._field_d=_130413_r, ._field_errorToken=(*((*(_128642_a))))._field_Setter};;
	if (_1c0d6a183_check(&_135513_checker)) {
		(*(_133213_rm))._field_Model=(*(_130413_r))._field_Model;
		(*(_132813_lm))._field_Model=(*(_128717_l))._field_Model;
	};
}



inline void _1c0cc596d_processEndPartOfMultiAssign(_1c0cb9412_scopeChecker* _self_, jule::Ptr<_1c0cb5ad4_MultiAssign>* _136751_st, jule::Ptr<_1c0c49491_AssignSt>* _136814_a, jule::Ptr<_1c0c48e0d_AssignLeft>* _136833_lexpr, jule::Ptr<_1c0d80352_Data>* _136858_l, jule::Ptr<_1c0d80352_Data>* _136873_r) {
	if (((!((*((*(_136833_lexpr))))._field_Reference)) && _1c0c27d65_IsIgnoreIdent((*((*(_136833_lexpr))))._field_Ident))) {
		if (_1c0db187d_Void((*((*(_136873_r))))._field_Kind.ptr())) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_136814_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1c0d80352_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_136814_a))))._field_Declarative && ((*((*(_136833_lexpr))))._field_Reference || _1c0cc48c3_isNewAssignIdent(_self_, (*((*(_136833_lexpr))))._field_Ident)))) {
		if (_1c0cbd658_isDuplicatedIdent(_self_, 0LLU, &((*((*(_136833_lexpr))))._field_Ident))) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136833_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1c0d076a3_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1c0cbbc50_stop(_self_);
			return;;
		};
		if (_1c0c27d65_IsIgnoreIdent((*((*(_136833_lexpr))))._field_Ident)) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c0d2b94c_Var> _138917_v = jule::new_ptr<_1c0d2b94c_Var>(_1c0d2b94c_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_136833_lexpr))))._field_Token, ._field_Ident=(*((*(_136833_lexpr))))._field_Ident, ._field_Mutable=(*((*(_136833_lexpr))))._field_Mutable, ._field_Reference=(*((*(_136833_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Expr=(*((*(_136814_a))))._field_Right, ._field_Data=(*(_136873_r))}), });;
		_1c0d1ce6b_checkVarValue((*(_self_))._field_s, &(_138917_v));
		(*(_138917_v))._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_1c0d80352_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push(jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=(*((*(_138917_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_138917_v))._field_Mutable, ._field_Reference=(*(_138917_v))._field_Reference, ._field_Lvalue=(!((*(_138917_v))._field_Constant)), ._field_Model=jule::Any(_138917_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_138917_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_138917_v, &__jule_any_type8)); };
		return;;
	};
	if (((*((*(_136833_lexpr))))._field_Mutable || (*((*(_136833_lexpr))))._field_Reference)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136833_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1c0cb134e_checkAssign(&((*(_self_))._field_s), _136858_l, (*(_136873_r)), (*((*(_136833_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1c0d1335c_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_136858_l))))._field_Mutable, false, &((*((*(_136858_l))))._field_Kind), _136873_r, &((*((*(_136814_a))))._field_Setter));
	_1c0d68e1d_assignTypeChecker _143213_checker = _1c0d68e1d_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_136858_l))))._field_Kind, ._field_d=(*(_136873_r)), ._field_errorToken=(*((*(_136814_a))))._field_Setter};;
	_1c0d6a183_check(&_143213_checker);
	{ jule::Slice<jule::Ptr<_1c0d80352_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push((*(_136858_l))); };
}



inline void _1c0cc5c26_checkMultiAssign(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c49491_AssignSt>* _144241_a) {
	jule::Ptr<_1c0d80352_Data> _144313_rd = _1c0da0020_evalExpr(_1c0d0e7dc_eval((*(_self_))._field_s, jule::Trait<_1c0dd0050_Lookup>(_self_, 0)), (*((*(_144241_a))))._field_Right);;
	if ((_144313_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c0d80352_Data>> _144713_right = _1c0cb04a2_getDatasFromTupleData(&(_144313_rd));;
	if ((_144713_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_144713_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1aa824c63:;
				{
					jule::Ptr<_1c0c661c2_IndexingExprModel> _145121_iem = (*(_144713_right[0LL]))._field_Model.cast_ptr<_1c0c661c2_IndexingExprModel>(&__jule_any_type45);;
					if ((_1c0db470a_Map((*((*(_145121_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_144713_right=jule::Slice<jule::Ptr<_1c0d80352_Data>>::make({jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=(*(_1c0db470a_Map((*((*(_145121_iem))._field_Expr))._field_Kind.ptr())))._field_Val, }),jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, })});
					};
				}
			}
			_match_end_1aa824bb9:;
		};
	};
	{
		
		if (((*((*(_144241_a))))._field_Left.len() > _144713_right.len())) {
			_case_begin_1aa8244d2:;
			{
				_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_144241_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_144241_a))))._field_Left.len() < _144713_right.len())) {
			_case_begin_1aa824548:;
			{
				_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_144241_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1aa825192:;
	};
	jule::Ptr<_1c0cb5ad4_MultiAssign> _147013_st = jule::new_ptr<_1c0cb5ad4_MultiAssign>(_1c0cb5ad4_MultiAssign{._field_R=(*(_144313_rd))._field_Model});;
	{
		auto expr = &((*((*(_144241_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8296a2:;
		if (it != expr_end) {
			jule::I64 _147313_i = it - expr->begin();
			{
				jule::Ptr<_1c0c48e0d_AssignLeft> _147417_lexpr = (*((*(_144241_a))))._field_Left[_147313_i];;
				jule::Ptr<_1c0d80352_Data> _147521_l = nullptr;;
				if (((!(_1c0c27d65_IsIgnoreIdent((*(_147417_lexpr))._field_Ident))) && ((!((*((*(_144241_a))))._field_Declarative)) || (!(_1c0cc48c3_isNewAssignIdent(_self_.ptr(), (*(_147417_lexpr))._field_Ident)))))) {
					_147521_l=_1c0da0020_evalExpr(_1c0d0e7dc_eval((*(_self_))._field_s, jule::Trait<_1c0dd0050_Lookup>(_self_, 0)), (*(_147417_lexpr))._field_Expr);
					if ((_147521_l == nullptr)) {
						goto _iter_next_1aa8296a2;
					};
				};
				jule::Ptr<_1c0d80352_Data> _148317_r = _144713_right[_147313_i];;
				_1c0cc4b7b_removeInteriorMutRisk(_self_, &(_148317_r));
				_1c0cc596d_processEndPartOfMultiAssign(_self_.ptr(), &(_147013_st), _144241_a, &(_147417_lexpr), &(_147521_l), &(_148317_r));
			}
			_iter_next_1aa8296a2:;
			++it;
			_147313_i++;
			goto _iter_begin_1aa8296a2;
		}
		_iter_end_1aa8296a2:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_147013_st, &__jule_any_type46)); };
}



inline void _1c0cc5ece_singleDeclAssign(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c49491_AssignSt>* _149041_a) {
	jule::Ptr<_1c0c48e0d_AssignLeft> _149113_lexpr = (*((*(_149041_a))))._field_Left[0LL];;
	if (_1c0cbd658_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*(_149113_lexpr))._field_Ident))) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_149113_lexpr))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_149113_lexpr))._field_Ident, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1c0cbbc50_stop(_self_.ptr());
		return;;
	};
	if (_1c0c27d65_IsIgnoreIdent((*(_149113_lexpr))._field_Ident)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_149113_lexpr))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0d80352_Data> _150213_r = _1c0da0020_evalExpr(_1c0d0e7dc_eval((*(_self_))._field_s, jule::Trait<_1c0dd0050_Lookup>(_self_, 0)), (*((*(_149041_a))))._field_Right);;
	if ((_150213_r == nullptr)) {
		return;;
	};
	_1c0cc4b7b_removeInteriorMutRisk(_self_, &(_150213_r));
	jule::Ptr<_1c0d2b94c_Var> _151013_v = jule::new_ptr<_1c0d2b94c_Var>(_1c0d2b94c_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_149113_lexpr))._field_Token, ._field_Ident=(*(_149113_lexpr))._field_Ident, ._field_Mutable=(*(_149113_lexpr))._field_Mutable, ._field_Reference=(*(_149113_lexpr))._field_Reference, ._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Expr=(*((*(_149041_a))))._field_Right, ._field_Data=_150213_r}), });;
	_1c0d1ce6b_checkVarValue((*(_self_))._field_s, &(_151013_v));
	{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_151013_v); };
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_151013_v, &__jule_any_type8)); };
}



inline void _1c0cc6287_checkAssignSt(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c49491_AssignSt> _152637_a) {
	{
		
		if (_1c0c2a098_IsPostfixOp((*((*(_152637_a))._field_Setter))._field_Id)) {
			_case_begin_1aa8377e2:;
			{
				_1c0cc4582_checkPostfix(_self_, _152637_a);
			}
		}
		else if (((*(_152637_a))._field_Left.len() == 1LL)) {
			_case_begin_1aa83645b:;
			{
				if ((*(_152637_a))._field_Declarative) {
					_1c0cc5ece_singleDeclAssign(_self_, &(_152637_a));
				} else {
					_1c0cc53da_checkSingleAssign(_self_, &(_152637_a));
				};
			}
		}
		else {
			_case_begin_1aa8363e5:;
			{
				_1c0cc5c26_checkMultiAssign(_self_, &(_152637_a));
			}
		}
		_match_end_1aa836329:;
	};
}



inline jule::Ptr<_1c0cb210d_Scope> _1c0cc6683_checkCaseScope(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0cb6d7c_Case>* _154135_c, jule::Ptr<_1c0c4aa14_ScopeTree>* _154150_tree) {
	jule::Ptr<_1c0cb9412_scopeChecker> _154213_ssc = _1c0ccb15a_newChildChecker(_self_);;
	(*(_154213_ssc))._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_154135_c))));
	return _1c0cbea22_checkChildSc(_self_, _154150_tree, &(_154213_ssc));;
}



inline jule::Ptr<_1c0cb6d7c_Case> _1c0cc6be4_checkCase(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0cb6244_Match> _154733_m, jule::I64 _154744_i, jule::Ptr<_1c0c5280c_Case> _154756_c, jule::Ptr<_1c0d80352_Data> _154775_expr) {
	jule::Ptr<_1c0cb6d7c_Case> _154813_case = (*(_154733_m))._field_Cases[_154744_i];;
	(*(_154813_case))._field_Exprs=jule::Slice<jule::Ptr<_1c0d80352_Data>>::alloc(0LL, (*(_154756_c))._field_Exprs.len());
	jule::Bool _155013_constMatched = false;;
	jule::Ptr<_1c0d82046_Eval> _155113_eval = _1c0d0e7dc_eval((*(_self_))._field_s, jule::Trait<_1c0dd0050_Lookup>(_self_, 0));;
	{
		auto expr = &((*(_154756_c))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa83d056:;
		if (it != expr_end) {
			jule::Ptr<_1c0c3ed27_Expr> _155221_e = *it;
			{
				jule::Ptr<_1c0d80352_Data> _155317_d = _1c0d9e20b_evalExprKind(_155113_eval, (*(_155221_e))._field_Kind);;
				if ((_155317_d == nullptr)) {
					goto _iter_next_1aa83d056;
				};
				if ((*(_154733_m))._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_1c0d80352_Data>> &__jule_push_dest = (*(_154813_case))._field_Exprs; __jule_push_dest.push(_155317_d); };
					if ((_1c0cb01d8_countMatchType(&(_154733_m), &((*(_155317_d))._field_Kind)) > 1LL)) {
						_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_155317_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*((*(_154775_expr))._field_Kind))._field_Generic) {
						_155013_constMatched=(_155013_constMatched || _1c0db0c23_Equal((*(_154775_expr))._field_Kind, (*(_155317_d))._field_Kind));
					} else {
						if ((_1c0db36a4_TypeEnum((*(_154775_expr))._field_Kind.ptr()) != nullptr)) {
							_1c0d10304_checkTypeCompatibility((*(_self_))._field_s, &((*(_154775_expr))._field_Kind), &((*(_155317_d))._field_Kind), &((*(_155221_e))._field_Token));
						} else {
							jule::Ptr<_1c0c84850_Trait> _156825_trt = _1c0db4474_Trait((*(_154775_expr))._field_Kind.ptr());;
							if ((_156825_trt != nullptr)) {
								_1c0d10304_checkTypeCompatibility((*(_self_))._field_s, &((*(_154775_expr))._field_Kind), &((*(_155317_d))._field_Kind), &((*(_155221_e))._field_Token));
							};
						};
					};
					goto _iter_next_1aa83d056;
				} else if ((*(_154733_m))._field_Comptime) {
					if ((!(_1c0d80c26_IsConst(_155317_d.ptr())))) {
						_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str::lit("const-matching requires constant expression", 43), jule::Slice<jule::Any>());
					} else {
						_155013_constMatched=(_155013_constMatched || _2036464dc_ReadBool((*(_155317_d))._field_Constant.ptr()));
					};
				};
				if ((*(_155317_d))._field_Decl) {
					_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1c0d076a3_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1aa83d056;
				};
				{ jule::Slice<jule::Ptr<_1c0d80352_Data>> &__jule_push_dest = (*(_154813_case))._field_Exprs; __jule_push_dest.push(_155317_d); };
				_1c0d68e1d_assignTypeChecker _159117_checker = _1c0d68e1d_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_154775_expr))._field_Kind, ._field_d=_155317_d, ._field_errorToken=(*(_155221_e))._field_Token};;
				_1c0d6a183_check(&_159117_checker);
			}
			_iter_next_1aa83d056:;
			++it;
			goto _iter_begin_1aa83d056;
		}
		_iter_end_1aa83d056:;
	};
	if (((!((*(_154733_m))._field_Comptime)) || _155013_constMatched)) {
		(*(_154813_case))._field_Scope=_1c0cc6683_checkCaseScope(_self_, &(_154813_case), &((*(_154756_c))._field_Scope));
	};
	return _154813_case;;
}



inline void _1c0cc7112_checkCases(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c53049_MatchCase>* _160535_m, jule::Ptr<_1c0cb6244_Match> _160554_rm, jule::Ptr<_1c0d80352_Data> _160570_expr) {
	(*(_160554_rm))._field_Cases=jule::Slice<jule::Ptr<_1c0cb6d7c_Case>>::alloc(0LL, (*((*(_160535_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_160535_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa84abe0:;
		if (it != expr_end) {
			jule::I64 _160713_i = it - expr->begin();
			{
				jule::Ptr<_1c0cb6d7c_Case> _160817_case = jule::new_ptr<_1c0cb6d7c_Case>(_1c0cb6d7c_Case{._field_Owner=_160554_rm, });;
				if ((_160713_i > 0LL)) {
					(*((*(_160554_rm))._field_Cases[(_160713_i - 1LL)]))._field_Next=_160817_case;
				};
				{ jule::Slice<jule::Ptr<_1c0cb6d7c_Case>> &__jule_push_dest = (*(_160554_rm))._field_Cases; __jule_push_dest.push(_160817_case); };
			}
			_iter_next_1aa84abe0:;
			++it;
			_160713_i++;
			goto _iter_begin_1aa84abe0;
		}
		_iter_end_1aa84abe0:;
	};
	if ((((*(_160554_rm))._field_Default != nullptr) && ((*((*(_160535_m))))._field_Cases.len() > 0LL))) {
		(*((*(_160554_rm))._field_Cases[((*(_160554_rm))._field_Cases.len() - 1LL)]))._field_Next=(*(_160554_rm))._field_Default;
	};
	{
		auto expr = &((*((*(_160535_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa84b5e7:;
		if (it != expr_end) {
			jule::I64 _162114_i = it - expr->begin();
			jule::Ptr<_1c0c5280c_Case> _162121_c = *it;
			{
				_1c0cc6be4_checkCase(_self_, _160554_rm, _162114_i, _162121_c, _160570_expr);
			}
			_iter_next_1aa84b5e7:;
			++it;
			_162114_i++;
			goto _iter_begin_1aa84b5e7;
		}
		_iter_end_1aa84b5e7:;
	};
}



inline jule::Ptr<_1c0cb6d7c_Case> _1c0cc750d_checkDefault(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0cb6244_Match> _162636_m, jule::Ptr<_1c0c51663_Else> _162651_d) {
	jule::Ptr<_1c0cb6d7c_Case> _162713_def = jule::new_ptr<_1c0cb6d7c_Case>(_1c0cb6d7c_Case{._field_Owner=_162636_m, });;
	(*(_162713_def))._field_Scope=_1c0cc6683_checkCaseScope(_self_, &(_162713_def), &((*(_162651_d))._field_Scope));
	return _162713_def;;
}



inline void _1c0cc7871_checkComptimePanic(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c25406_Token> _163438_callToken, jule::Ptr<_1c0cb210d_Scope>* _163458_s) {
	if (((*((*(_163458_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16389_stmt = (*((*(_163458_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16389_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1aa852ad7:;
			{
				jule::Ptr<_1c0d80352_Data> _164113_d = _16389_stmt.cast_ptr<_1c0d80352_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ (*(_164113_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1aa8538c9:;
						{
							jule::Ptr<_1c0c6a0b6_BuiltinPanicCallExprModel> _164417_m = (*(_164113_d))._field_Model.cast_ptr<_1c0c6a0b6_BuiltinPanicCallExprModel>(&__jule_any_type29);;
							{
								auto &_match_expr{ (*(_164417_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1aa8548a8:;
									{
										jule::Ptr<_2036445ea_Const> _164721_c = (*(_164417_m))._field_Expr.cast_ptr<_2036445ea_Const>(&__jule_any_type19);;
										if (_203648d6e_IsStr(_164721_c.ptr())) {
											if ((_163438_callToken == nullptr)) {
												jule::Ptr<_1c0cb9412_scopeChecker> _165033_root = _1c0cbc789_getHardRoot(_self_);;
												_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_165033_root))._field_calledFrom, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_203646773_ReadStr(_164721_c.ptr()), &__jule_any_type4)}));
											} else {
												_1c0d07340_pushErr((*(_self_))._field_s.ptr(), _163438_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_203646773_ReadStr(_164721_c.ptr()), &__jule_any_type4)}));
											};
											_1c0cbbc50_stop(_self_.ptr());
										};
									}
								}
								_match_end_1aa854853:;
							};
						}
					}
					_match_end_1aa853874:;
				};
			}
		}
		_match_end_1aa852a82:;
	};
}



inline void _1c0cc7bd4_processConstMatch(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0cb6244_Match>* _166242_tm, jule::Ptr<_1c0c53049_MatchCase>* _166259_m) {
	{
		auto expr = &((*((*(_166242_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8535cc:;
		if (it != expr_end) {
			jule::I64 _166314_i = it - expr->begin();
			jule::Ptr<_1c0cb6d7c_Case> _166321_c = *it;
			{
				if (((*(_166321_c))._field_Scope != nullptr)) {
					jule::Ptr<_1c0c25406_Token> _166525_token = nullptr;;
					if (((!((*((*(_166242_tm))))._field_TypeMatch)) && ((*((*(_166321_c))._field_Scope))._field_Stmts.len() > 0LL))) {
						_166525_token=(*((*((*((*(_166259_m))))._field_Cases[_166314_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1c0cc7871_checkComptimePanic(_self_, _166525_token, &((*(_166321_c))._field_Scope));
					(*((*(_166242_tm))))._field_Default=_166321_c;
					(*((*(_166242_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1aa8535cc:;
			++it;
			_166314_i++;
			goto _iter_begin_1aa8535cc;
		}
		_iter_end_1aa8535cc:;
	};
	if (((*((*(_166259_m))))._field_Default != nullptr)) {
		(*((*(_166242_tm))))._field_Cases=nullptr;
		(*((*(_166242_tm))))._field_Default=_1c0cc750d_checkDefault(_self_, (*(_166242_tm)), (*((*(_166259_m))))._field_Default);
		if (((*((*(_166242_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1c0c25406_Token> _167925_token = nullptr;;
			if ((!((*((*(_166242_tm))))._field_TypeMatch))) {
				_167925_token=(*((*((*((*(_166259_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1c0cc7871_checkComptimePanic(_self_, _167925_token, &((*((*((*(_166242_tm))))._field_Default))._field_Scope));
		};
	} else {
		(*((*(_166242_tm))))._field_Cases=nullptr;
	};
}



inline void _1c0cc7e8c_checkTypeMatch(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c53049_MatchCase>* _169139_m) {
	jule::Ptr<_1c0d80352_Data> _169213_d = _1c0d9e88d_eval(_1c0d0e7dc_eval((*(_self_))._field_s, jule::Trait<_1c0dd0050_Lookup>(_self_, 0)), (*((*(_169139_m))))._field_Expr);;
	if ((_169213_d == nullptr)) {
		return;;
	};
	if (((!((*((*(_169213_d))._field_Kind))._field_Generic)) && (!(((((_1c0db2b6a_Prim((*(_169213_d))._field_Kind.ptr()) != nullptr) && _1c0dbb811_IsAny(_1c0db2b6a_Prim((*(_169213_d))._field_Kind.ptr()).ptr())) || (_1c0db4474_Trait((*(_169213_d))._field_Kind.ptr()) != nullptr)) || (_1c0db36a4_TypeEnum((*(_169213_d))._field_Kind.ptr()) != nullptr)))))) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169139_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0cb6244_Match> _170313_tm = jule::new_ptr<_1c0cb6244_Match>(_1c0cb6244_Match{._field_Expr=_169213_d, ._field_TypeMatch=true, });;
	(*(_170313_tm))._field_Comptime=(*((*((*(_170313_tm))._field_Expr))._field_Kind))._field_Generic;
	if (((!((*(_170313_tm))._field_Comptime)) && ((*((*(_169139_m))))._field_Default != nullptr))) {
		(*(_170313_tm))._field_Default=_1c0cc750d_checkDefault(_self_, _170313_tm, (*((*(_169139_m))))._field_Default);
	};
	_1c0cc7112_checkCases(_self_, _169139_m, _170313_tm, _169213_d);
	if ((*(_170313_tm))._field_Comptime) {
		_1c0cc7bd4_processConstMatch(_self_, &(_170313_tm), _169139_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_170313_tm, &__jule_any_type47)); };
}



inline void _1c0cc8245_checkCommonMatch(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c53049_MatchCase>* _172441_m) {
	jule::Ptr<_1c0d80352_Data> _172517_d = nullptr;;
	if (((*((*(_172441_m))))._field_Expr == nullptr)) {
		_172517_d=jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, ._field_Constant=static__2036450bd_NewBool(true)});
		(*(_172517_d))._field_Model=jule::Any((*(_172517_d))._field_Constant, &__jule_any_type19);
	} else {
		_172517_d=_1c0da0020_evalExpr(_1c0d0e7dc_eval((*(_self_))._field_s, jule::Trait<_1c0dd0050_Lookup>(_self_, 0)), (*((*(_172441_m))))._field_Expr);
		if ((_172517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1c0cb6244_Match> _173913_mc = jule::new_ptr<_1c0cb6244_Match>(_1c0cb6244_Match{._field_Expr=_172517_d, ._field_Comptime=(((((*((*(_172441_m))))._field_Expr != nullptr) && _1c0d80c26_IsConst(_172517_d.ptr())) && _203648ad8_IsBool((*(_172517_d))._field_Constant.ptr())) && _2036464dc_ReadBool((*(_172517_d))._field_Constant.ptr())), });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_173913_mc, &__jule_any_type47)); };
	if (((!((*(_173913_mc))._field_Comptime)) && ((*((*(_172441_m))))._field_Default != nullptr))) {
		(*(_173913_mc))._field_Default=_1c0cc750d_checkDefault(_self_, _173913_mc, (*((*(_172441_m))))._field_Default);
	};
	_1c0cc7112_checkCases(_self_, _172441_m, _173913_mc, _172517_d);
	if ((*(_173913_mc))._field_Comptime) {
		_1c0cc7bd4_processConstMatch(_self_, &(_173913_mc), _172441_m);
	};
}



inline void _1c0cc84ed_checkMatch(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c53049_MatchCase> _176234_m) {
	if ((*(_176234_m))._field_TypeMatch) {
		_1c0cc7e8c_checkTypeMatch(_self_, &(_176234_m));
		return;;
	};
	_1c0cc8245_checkCommonMatch(_self_, &(_176234_m));
}



inline void _1c0cc87a6_checkFall(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c4879d_FallSt> _177029_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*(_self_))._field_scope))._field_Stmts.len() + 1LL) < (*((*(_self_))._field_scope))._field_Stmts.len())) || _1c0cbc26c_isDeferred(_self_))) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_177029_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1c0cb6d7c_Case* _177813_case = ((_1c0cb6d7c_Case*)((*(_self_))._field_cse));;
	if ((*((*(_177813_case))._field_Owner))._field_Comptime) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_177029_f))._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_177813_case))._field_Next == nullptr)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_177029_f))._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1c0d076a3_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1c0cb7476_FallSt>(_1c0cb7476_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_177813_case))._field_Next))}), &__jule_any_type48)); };
}



inline jule::Ptr<_1c0cb46a4_BreakSt> _1c0cc8ae7_checkBreakWithLabel(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c50909_BreakSt> _179339_b) {
	jule::Ptr<_1c0cb46a4_BreakSt> _179413_brk = _1c0cc8e38_checkPlainBreak(_self_, _179339_b);;
	if ((_179413_brk == nullptr)) {
		return nullptr;;
	};
	(*(_179413_brk))._field_It=0LLU;
	(*(_179413_brk))._field_Mtch=0LLU;
	jule::Ptr<_1c0cb7e6b_scopeLabel> _180413_label = _1c0cae627_findLabelParent(&((*((*(_179339_b))._field_Label))._field_Kind), (*(_self_))._field_parent);;
	if ((_180413_label == nullptr)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_180413_label))._field_used=true;
	if ((((*(_180413_label))._field_pos + 1LL) >= (*((*((*(_180413_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _18179_i = ((*(_180413_label))._field_pos + 1LL);;
	if ((_18179_i >= (*((*((*(_180413_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _182117_st = (*((*((*(_180413_label))._field_scope))._field_scope))._field_Stmts[_18179_i];;
		{
			auto &_match_expr{ _182117_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1aa87e031:;
				{
					(*(_179413_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182117_st.cast_ptr<_1c0cb3043_InfIter>(&__jule_any_type36)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1aa87dc78:;
				{
					(*(_179413_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182117_st.cast_ptr<_1c0cb3e45_RangeIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1aa87dcde:;
				{
					(*(_179413_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182117_st.cast_ptr<_1c0cb34e9_WhileIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1aa87dd55:;
				{
					(*(_179413_brk))._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_182117_st.cast_ptr<_1c0cb6244_Match>(&__jule_any_type47)));
				}
			}
			else {
				_case_begin_1aa87dc12:;
				{
					_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1aa87dbac:;
		};
	};
	if (((*(_179413_brk))._field_It != 0LLU)) {
		if ((!(_1c0cc366e_checkValidBreakLabel(_self_, (*(_179413_brk))._field_It)))) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_179413_brk))._field_Mtch != 0LLU)) {
		if ((!(_1c0cc366e_checkValidBreakLabel(_self_, (*(_179413_brk))._field_Mtch)))) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_179339_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_179339_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	return _179413_brk;;
}



inline jule::Ptr<_1c0cb46a4_BreakSt> _1c0cc8e38_checkPlainBreak(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c50909_BreakSt> _185135_b) {
	if (_1c0cbc26c_isDeferred(_self_)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_185135_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0cb9412_scopeChecker> _185713_scope = _self_;;
	_julec_label_1aa88670e:;
	{
		
		if ((((((*(_185713_scope))._field_it == 0LLU) && ((*(_185713_scope))._field_cse == 0LLU)) && ((*(_185713_scope))._field_parent != nullptr)) && ((*(_185713_scope))._field_owner == nullptr))) {
			_case_begin_1aa8869b7:;
			{
				_185713_scope=(*(_185713_scope))._field_parent;
				goto _julec_label_1aa88670e;
			}
		}
		else if (((*(_185713_scope))._field_it != 0LLU)) {
			_case_begin_1aa886a3e:;
			{
				return jule::new_ptr<_1c0cb46a4_BreakSt>(_1c0cb46a4_BreakSt{._field_It=(*(_185713_scope))._field_it, });;
			}
		}
		else if (((*(_185713_scope))._field_cse != 0LLU)) {
			_case_begin_1aa886ab6:;
			{
				return jule::new_ptr<_1c0cb46a4_BreakSt>(_1c0cb46a4_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(((_1c0cb6d7c_Case*)((*(_185713_scope))._field_cse))))._field_Owner))});;
			}
		}
		_match_end_1aa8868eb:;
	};
	_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_185135_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1c0cc91e1_checkBreak(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c50909_BreakSt> _187330_b) {
	if (((*(_187330_b))._field_Label != nullptr)) {
		jule::Ptr<_1c0cb46a4_BreakSt> _187517_brk = _1c0cc8ae7_checkBreakWithLabel(_self_, _187330_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_187517_brk, &__jule_any_type49)); };
		return;;
	};
	jule::Ptr<_1c0cb46a4_BreakSt> _188013_brk = _1c0cc8e38_checkPlainBreak(_self_, _187330_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_188013_brk, &__jule_any_type49)); };
}



inline void _1c0cc9499_checkRet(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c4db5a_RetSt> _188432_r) {
	if (_1c0cbc26c_isDeferred(_self_)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_188432_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0cb780b_RetSt> _188913_rt = jule::new_ptr<_1c0cb780b_RetSt>(_1c0cb780b_RetSt{._field_Func=(*(_1c0cbc503_getRoot(_self_)))._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_188913_rt, &__jule_any_type50)); };
	jule::Ptr<_1c0d77d72_retTypeChecker> _189413_rtc = jule::new_ptr<_1c0d77d72_retTypeChecker>(_1c0d77d72_retTypeChecker{._field_sc=_self_, ._field_f=(*(_188913_rt))._field_Func, ._field_errorToken=(*(_188432_r))._field_Token, });;
	jule::Bool _18999_ok = _1c0d78a87_check(_189413_rtc.ptr(), &((*(_188432_r))._field_Expr));;
	if ((!(_18999_ok))) {
		return;;
	};
	if (((*(_188432_r))._field_Expr != nullptr)) {
		(*(_188913_rt))._field_Expr=(*(_189413_rtc))._field_model;
	};
}



inline void _1c0cc9752_checkUseExpr(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c406eb_UseExpr> _190932_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_190932_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1c0cbc26c_isDeferred(_self_)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_190932_ue))._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*(_self_))._field_i + 1LL) < (*((*(_self_))._field_tree))._field_Stmts.len())) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_190932_ue))._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1c0cc9a0a_checkNode(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Any* _192534_node) {
	{
		auto &_match_expr{ (*(_192534_node)) };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1aa896741:;
			{
				_1c0cc011b_checkAnonScope(_self_, (*(_192534_node)).cast_ptr<_1c0c4aa14_ScopeTree>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1aa896ca2:;
			{
				_1c0cbd911_checkVarDecl(_self_, (*(_192534_node)).cast_ptr<_1c0c4d781_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1aa896a71:;
			{
				_1c0cbde72_checkTypeAliasDecl(_self_, (*(_192534_node)).cast_ptr<_1c0c52356_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1aa897027:;
			{
				_1c0cc0737_checkExpr(_self_, (*(_192534_node)).cast_ptr<_1c0c3ed27_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1aa89708d:;
			{
				_1c0cc1172_checkConditional(_self_, (*(_192534_node)).cast_ptr<_1c0c51b19_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1aa897104:;
			{
				_1c0cc2edc_checkIter(_self_, (*(_192534_node)).cast_ptr<_1c0c4e2ed_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1aa89716a:;
			{
				_1c0cc3c68_checkCont(_self_, (*(_192534_node)).cast_ptr<_1c0c50cd3_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1aa8971d1:;
			{
				_1c0cc4021_checkLabel(_self_, (*(_192534_node)).cast_ptr<_1c0c480c7_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1aa897247:;
			{
				_1c0cc42c9_pushGoto(_self_, (*(_192534_node)).cast_ptr<_1c0c484a1_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1aa8972ad:;
			{
				_1c0cc6287_checkAssignSt(_self_, (*(_192534_node)).cast_ptr<_1c0c49491_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1aa897324:;
			{
				_1c0cc84ed_checkMatch(_self_, (*(_192534_node)).cast_ptr<_1c0c53049_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1aa89738a:;
			{
				_1c0cc87a6_checkFall(_self_, (*(_192534_node)).cast_ptr<_1c0c4879d_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1aa897401:;
			{
				_1c0cc91e1_checkBreak(_self_, (*(_192534_node)).cast_ptr<_1c0c50909_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1aa897467:;
			{
				_1c0cc9499_checkRet(_self_, (*(_192534_node)).cast_ptr<_1c0c4db5a_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1aa8974cd:;
			{
				_1c0cc9752_checkUseExpr(_self_, (*(_192534_node)).cast_ptr<_1c0c406eb_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1aa8968d9:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1aa896884:;
	};
}



inline void _1c0cc9c08_checkResult(jule::Ptr<_1c0cb9412_scopeChecker> _self_) {
	_1c0c4a3a4_Stmt _196313_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*((*(_self_))._field_tree))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _196313_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1aa8a12c8:;
			{
				jule::Ptr<_1c0c406eb_UseExpr> _196617_ue = _196313_stmt._field_Data.cast_ptr<_1c0c406eb_UseExpr>(&__jule_any_type63);;
				jule::Ptr<_1c0d80352_Data> _196717_d = _1c0da0020_evalExpr(_1c0d0e7dc_eval((*(_self_))._field_s, jule::Trait<_1c0dd0050_Lookup>(_self_, 0)), (*(_196617_ue))._field_Expr);;
				if ((_196717_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_196717_d, &__jule_any_type24)); };
				jule::Ptr<_1c0d77d72_retTypeChecker> _197217_rtc = jule::new_ptr<_1c0d77d72_retTypeChecker>(_1c0d77d72_retTypeChecker{._field_sc=_self_, ._field_types=_1c0c756a9_Types((*(_self_))._field_result.ptr()), ._field_errorToken=(*((*(_196617_ue))._field_Expr))._field_Token, });;
				_1c0d78a87_check(_197217_rtc.ptr(), &((*(_196617_ue))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1aa8a097b:;
			{
				jule::Ptr<_1c0c3ed27_Expr> _197917_expr = _196313_stmt._field_Data.cast_ptr<_1c0c3ed27_Expr>(&__jule_any_type52);;
				jule::Ptr<_1c0d80352_Data> _198017_d = _1c0da0020_evalExpr(_1c0d0e7dc_eval((*(_self_))._field_s, jule::Trait<_1c0dd0050_Lookup>(_self_, 0)), _197917_expr);;
				if ((_198017_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_198017_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1aa8a6300:;
						{
							jule::Ptr<_1c0c6c173_BuiltinErrorCallExprModel> _198621_m = (*(_198017_d))._field_Model.cast_ptr<_1c0c6c173_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1c0cc047e_processErrorCall(_self_, &(_198621_m), (*(_197917_expr))._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_198017_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_1aa8a6520:;
						{
							return;;
						}
					}
					_match_end_1aa8a64ba:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1aa8a09e2:;
			{
				_1c0cc9a0a_checkNode(_self_, &(_196313_stmt._field_Data));
			}
		}
		else {
			_case_begin_1aa8a0915:;
			{
				_1c0cc9a0a_checkNode(_self_, &(_196313_stmt._field_Data));
				return;;
			}
		}
		_match_end_1aa89e3c5:;
	};
	(*(_self_))._field_result=nullptr;
}



inline void _1c0cc9e06_checkTree(jule::Ptr<_1c0cb9412_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _200813_n = (*((*(_self_))._field_tree))._field_Stmts.len();;
	if (((*(_self_))._field_result != nullptr)) {
		(_200813_n)--;
	};
	for (; ((*(_self_))._field_i < _200813_n); ((*(_self_))._field_i)++) {
		{
			_1c0c4a3a4_Stmt _201617_stmt = (*((*(_self_))._field_tree))._field_Stmts[(*(_self_))._field_i];;
			_1c0cc9a0a_checkNode(_self_, &(_201617_stmt._field_Data));
			if (_1c0cbbed6_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1aa8a9de7:;
	}
	_iter_end_1aa8a9de7:;;
	if ((((*(_self_))._field_result != nullptr) && ((*((*(_self_))._field_tree))._field_Stmts.len() != 0LL))) {
		_1c0cc9c08_checkResult(_self_);
	};
}



inline void _1c0cca269_checkGoto(_1c0cb9412_scopeChecker* _self_, jule::Ptr<_1c0cb84ee_scopeGoto>* _202733_gt, jule::Ptr<_1c0cb7e6b_scopeLabel>* _202754_label) {
	jule::Ptr<_1c0cb9412_scopeChecker> _202813_gtsc = (*((*(_202733_gt))))._field_scope;;
	while ((((*(_202813_gtsc))._field_childIndex - 1LL) > (*((*((*(_202754_label))))._field_scope))._field_childIndex)) {
		{
			_202813_gtsc=(*(_202813_gtsc))._field_parent;
		}
	_iter_next_1aa8ad109:;
	}
	_iter_end_1aa8ad109:;;
	jule::I64 _203313_n = 0LL;;
	if (((*(_202813_gtsc))._field_scope == (*((*((*(_202754_label))))._field_scope))._field_scope)) {
		if (((*((*(_202733_gt))))._field_pos > (*((*(_202754_label))))._field_pos)) {
			return;;
		};
		_203313_n=(*((*(_202733_gt))))._field_pos;
	};
	jule::I64 _204613_i = ((*((*(_202754_label))))._field_pos - 1LL);;
	if ((_203313_n == 0LL)) {
		{
			auto expr = &((*((*((*((*(_202754_label))))._field_scope))._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa8b1294:;
			if (it != expr_end) {
				jule::I64 _204917_j = it - expr->begin();
				jule::Any _204920_stmt = *it;
				{
					if (_1c0caed64_stmtIsGotoScope(&(_204920_stmt), &((*(_202813_gtsc))._field_scope))) {
						_203313_n=_204917_j;
						goto _iter_end_1aa8b1294;
					};
				}
				_iter_next_1aa8b1294:;
				++it;
				_204917_j++;
				goto _iter_begin_1aa8b1294;
			}
			_iter_end_1aa8b1294:;
		};
	};
	for (; (_204613_i >= _203313_n); (_204613_i)--) {
		{
			jule::Any _205917_stmt = (*((*((*((*(_202754_label))))._field_scope))._field_scope))._field_Stmts[_204613_i];;
			if (_1c0cb1b9b_stmtIsDef(&(_205917_stmt))) {
				_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_202733_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*((*((*(_202733_gt))))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1aa8b2383:;
	}
	_iter_end_1aa8b2383:;;
}



inline void _1c0cca467_checkGotos(_1c0cb9412_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8b350a:;
		if (it != expr_end) {
			jule::Ptr<_1c0cb84ee_scopeGoto> _206821_gt = *it;
			{
				jule::Ptr<_1c0cb7e6b_scopeLabel> _206917_label = _1c0cbd25c_findLabelAll(_self_, &((*((*((*(_206821_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_206917_label == nullptr)) {
					_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_206821_gt))._field_gt))._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_206821_gt))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1aa8b350a;
				};
				(*((*(_206821_gt))._field_st))._field_Label=(*(_206917_label))._field_label;
				(*(_206917_label))._field_used=true;
				_1c0cca269_checkGoto(_self_, &(_206821_gt), &(_206917_label));
			}
			_iter_next_1aa8b350a:;
			++it;
			goto _iter_begin_1aa8b350a;
		}
		_iter_end_1aa8b350a:;
	};
}



inline void _1c0cca665_checkLabels(_1c0cb9412_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8b6068:;
		if (it != expr_end) {
			jule::Ptr<_1c0cb7e6b_scopeLabel> _208116_l = *it;
			{
				if ((!((*(_208116_l))._field_used))) {
					_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_208116_l))._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_208116_l))._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1aa8b6068:;
			++it;
			goto _iter_begin_1aa8b6068;
		}
		_iter_end_1aa8b6068:;
	};
}



inline void _1c0cca863_checkVars(_1c0cb9412_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8b83ab:;
		if (it != expr_end) {
			jule::Ptr<_1c0d2b94c_Var> _208916_v = *it;
			{
				if (((((!((*(_208916_v))._field_Used)) && (!((*(_208916_v))._field_Constant))) && (!(_1c0c27d65_IsIgnoreIdent((*(_208916_v))._field_Ident)))) && (!(_1c0c2812e_IsAnonIdent((*(_208916_v))._field_Ident))))) {
					_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_208916_v))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_208916_v))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1aa8b83ab:;
			++it;
			goto _iter_begin_1aa8b83ab;
		}
		_iter_end_1aa8b83ab:;
	};
}



inline void _1c0ccaa61_checkAliases(_1c0cb9412_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8b9e6d:;
		if (it != expr_end) {
			jule::Ptr<_1c0dae727_TypeAlias> _209716_a = *it;
			{
				if ((((!((*(_209716_a))._field_Used)) && (!(_1c0c27d65_IsIgnoreIdent((*(_209716_a))._field_Ident)))) && (!(_1c0c2812e_IsAnonIdent((*(_209716_a))._field_Ident))))) {
					_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_209716_a))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_209716_a))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1aa8b9e6d:;
			++it;
			goto _iter_begin_1aa8b9e6d;
		}
		_iter_end_1aa8b9e6d:;
	};
}



inline void _1c0ccadc4_check(jule::Ptr<_1c0cb9412_scopeChecker> _self_, jule::Ptr<_1c0c4aa14_ScopeTree>* _210530_tree, jule::Ptr<_1c0cb210d_Scope>* _210553_s) {
	(*((*(_210553_s))))._field_Deferred=(*((*(_210530_tree))))._field_Deferred;
	(*((*(_210553_s))))._field_Unsafety=(*((*(_210530_tree))))._field_Unsafety;
	jule::I64 _21099_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*(_self_))._field_tree=(*(_210530_tree));
	(*(_self_))._field_scope=(*(_210553_s));
	_1c0cc9e06_checkTree(_self_);
	if ((_21099_errors == (*((*(_self_))._field_s))._field_errors.len())) {
		_1c0cca863_checkVars(_self_.ptr());
		_1c0ccaa61_checkAliases(_self_.ptr());
		if (_1c0cbba52_isRoot(_self_.ptr())) {
			_1c0cca467_checkGotos(_self_.ptr());
			_1c0cca665_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1c0cb9412_scopeChecker> _1c0ccb15a_newChildChecker(jule::Ptr<_1c0cb9412_scopeChecker> _self_) {
	jule::Ptr<_1c0cb9412_scopeChecker> _212913_base = _1c0caddda_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_212913_base))._field_parent=_self_;
	(*(_212913_base))._field_labels=(*(_self_))._field_labels;
	(*(_212913_base))._field_gotos=(*(_self_))._field_gotos;
	(*(_212913_base))._field_childIndex=static_cast<jule::I64>(((*(_self_))._field_childIndex + 1LL));
	return _212913_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cb9412_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1c0ccc4be_checkCdef(_1c0ccc0b2_directiveChecker* _self_, jule::Ptr<_1c0c39e10_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1aa8c4a9e:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1c0c715a6_Fn>(&__jule_any_type64)))._field_Binded) {
					goto _match_end_1aa8c4ce1;
				};
				goto _case_begin_1aa8c4d46;
			}
		}
		else {
			_case_begin_1aa8c4d46:;
			{
				_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1aa8c4ce1:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c0ccc777_checkTypedef(_1c0ccc0b2_directiveChecker* _self_, jule::Ptr<_1c0c39e10_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1aa8c78d7:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1c0c5b64b_Struct>(&__jule_any_type65)))._field_Binded) {
					goto _match_end_1aa8c7b29;
				};
				goto _case_begin_1aa8c7b7e;
			}
		}
		else {
			_case_begin_1aa8c7b7e:;
			{
				_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1aa8c7b29:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c0ccca30_checkNamespace(_1c0ccc0b2_directiveChecker* _self_, jule::Ptr<_1c0c39e10_Directive>* _4838_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1aa8cacd6:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1c0c5b64b_Struct>(&__jule_any_type65)))._field_Binded))) {
					_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1aa8caa2d:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1c0c715a6_Fn>(&__jule_any_type64)))._field_Binded))) {
					_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa8caa94:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8)))._field_Binded))) {
					_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1aa8ca9b7:;
			{
				_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1aa8ca962:;
	};
	if (((*((*(_4838_d))))._field_Args.len() == 0LL)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4838_d))))._field_Args.len() > 1LL)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1c0c25406_Token> _739_arg = (*((*(_4838_d))))._field_Args[0LL];;
	if (((*(_739_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_739_arg))._field_Kind[0LL] != '\"')) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4838_d))))._field_Args[0LL]))._field_Kind=(*(_739_arg))._field_Kind.slice(1LL, ((*(_739_arg))._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1aa8d5d68:;
			{
				if ((_1c0da8930_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1c0c39e10_Directive> _9021_typedef = jule::new_ptr<_1c0c39e10_Directive>(_1c0c39e10_Directive{._field_Tag=(*((*(_4838_d))))._field_Tag, });;
					(*((*(_9021_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					{ jule::Slice<jule::Ptr<_1c0c39e10_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_9021_typedef); };
				};
			}
		}
		_match_end_1aa8d5d13:;
	};
}



inline void _1c0ccccd8_checkDeprecated(_1c0ccc0b2_directiveChecker* _self_, jule::Ptr<_1c0c39e10_Directive>* _9939_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1aa8d6e9b:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1c0c5b64b_Struct>(&__jule_any_type65)))._field_Binded) {
					_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1aa8d81cd:;
			{
				jule::Ptr<_1c0c715a6_Fn> _10617_f = (*(_self_))._field_o.cast_ptr<_1c0c715a6_Fn>(&__jule_any_type64);;
				if ((((*(_10617_f))._field_Binded || _1c0c72046_IsEntryPoint(_10617_f.ptr())) || _1c0c722cc_IsInit(_10617_f.ptr()))) {
					_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa8d8244:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8)))._field_Binded) {
					_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1aa8d7c6b:;
			{
				_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1aa8d7c16:;
	};
	if (((*((*(_9939_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9939_d))))._field_Args.len() > 1LL)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1c0c25406_Token> _1259_arg = (*((*(_9939_d))))._field_Args[0LL];;
	if (((*(_1259_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1259_arg))._field_Kind[0LL] != '\"')) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9939_d))))._field_Args[0LL]))._field_Kind=(*(_1259_arg))._field_Kind.slice(1LL, ((*(_1259_arg))._field_Kind.len() - 1LL));
}



inline void _1c0ccd091_checkTest(_1c0ccc0b2_directiveChecker* _self_, jule::Ptr<_1c0c39e10_Directive>* _13929_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1aa8de190:;
			{
				jule::Ptr<_1c0c715a6_Fn> _14213_f = (*(_self_))._field_o.cast_ptr<_1c0c715a6_Fn>(&__jule_any_type64);;
				if ((((!((*(_14213_f))._field_Binded)) && (!(_1c0c722cc_IsInit(_14213_f.ptr())))) && (!(_1c0c72046_IsEntryPoint(_14213_f.ptr()))))) {
					goto _match_end_1aa8e38e2;
				};
				if (_1c0c71cb0_IsMethod(_14213_f.ptr())) {
					_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_14213_f))._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1aa8e38e2;
				};
				goto _case_begin_1aa8e3947;
			}
		}
		else {
			_case_begin_1aa8e3947:;
			{
				_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13929_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1aa8e38e2:;
	};
	if (((*((*(_13929_d))))._field_Args.len() > 0LL)) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c0ccd349_checkDirective(_1c0ccc0b2_directiveChecker* _self_, jule::Ptr<_1c0c39e10_Directive>* _16038_d) {
	{
		auto &_match_expr{ (*((*((*(_16038_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1aa8e86a5:;
			{
				_1c0ccc4be_checkCdef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1aa8e8364:;
			{
				_1c0ccc777_checkTypedef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1aa8e83ca:;
			{
				_1c0ccca30_checkNamespace(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1aa8e8441:;
			{
				_1c0ccccd8_checkDeprecated(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1aa8e84a7:;
			{
				_1c0ccd091_checkTest(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1aa8e9497:;
			{
				_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1aa8e82ed:;
			{
				_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1aa8e8276:;
	};
}



inline void _1c0ccd547_check(_1c0ccc0b2_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8eb1d0:;
		if (it != expr_end) {
			jule::Ptr<_1c0c39e10_Directive> _18121_d = *it;
			{
				_1c0ccd349_checkDirective(_self_, &(_18121_d));
			}
			_iter_next_1aa8eb1d0:;
			++it;
			goto _iter_begin_1aa8eb1d0;
		}
		_iter_end_1aa8eb1d0:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0ccc0b2_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0cd3a25_SelectPackage(_1c0cd353b_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1c0d2b94c_Var> _1c0cd3e21_FindVar(_1c0cd353b_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1c0cd5a7c_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1c0cd0a22_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1c0dae727_TypeAlias> _1c0cd431c_FindTypeAlias(_1c0cd353b_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1c0cd5a7c_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1c0cd0e95_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1c0c5b64b_Struct> _1c0cd4718_FindStruct(_1c0cd353b_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1c0cd5a7c_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1c0cd13c4_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1c0c715a6_Fn> _1c0cd4b14_FindFn(_1c0cd353b_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1c0cd5a7c_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1c0cd187a_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1c0c84850_Trait> _1c0cd4e55_FindTrait(_1c0cd353b_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1c0cd5a7c_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1c0cd1bbb_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1c0c8704a_Enum> _1c0cd5296_FindEnum(_1c0cd353b_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1c0cd5a7c_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1c0cd2040_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1c0c88755_TypeEnum> _1c0cd55d7_FindTypeEnum(_1c0cd353b_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1c0cd5a7c_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1c0cd23b4_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _1c0cd5a7c_isLookupable(_1c0cd353b_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1c0cd5dbd_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1c0cd5dbd_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1c0cd5dbd_existIdent(_1c0cd353b_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa911723:;
		if (it != expr_end) {
			jule::Ptr<_1c0c25406_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1aa911723:;
			++it;
			goto _iter_begin_1aa911723;
		}
		_iter_end_1aa911723:;
	};
	return false;;
}



inline jule::Bool _1c0cd6154_isAccessibleViaSelection(_1c0cd353b_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1c0cd5dbd_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cd353b_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0cd6907_SelectPackage(_1c0cd6462_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1c0d2b94c_Var> _1c0cd6d03_FindVar(_1c0cd6462_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1c0cd0a22_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1c0dae727_TypeAlias> _1c0cd71ee_FindTypeAlias(_1c0cd6462_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1c0cd0e95_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1c0c5b64b_Struct> _1c0cd75ea_FindStruct(_1c0cd6462_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1c0cd13c4_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1c0c715a6_Fn> _1c0cd79e6_FindFn(_1c0cd6462_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1c0cd187a_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1c0c84850_Trait> _1c0cd7d37_FindTrait(_1c0cd6462_Package* _self_, jule::Str _33828_ident) {
	return _1c0cd1bbb_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1c0c8704a_Enum> _1c0cd8178_FindEnum(_1c0cd6462_Package* _self_, jule::Str _34427_ident) {
	return _1c0cd2040_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1c0c88755_TypeEnum> _1c0cd84b9_FindTypeEnum(_1c0cd6462_Package* _self_, jule::Str _35031_ident) {
	return _1c0cd23b4_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0cd6462_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _1c0d04040_pushComptimeTypeInfo(_1c0d03acd_commonSemaMeta* _self_, jule::Ptr<_1c0db0519_TypeKind>* _21744_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa942842:;
		if (it != expr_end) {
			jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _21821_t2 = *it;
			{
				if ((((*((*(_21821_t2))._field_base))._field_BindIdent == (*((*(_21744_t))))._field_BindIdent) && _1c0db0c23_Equal((*(_21821_t2))._field_base, (*(_21744_t))))) {
					return _21821_t2;;
				};
			}
			_iter_next_1aa942842:;
			++it;
			goto _iter_begin_1aa942842;
		}
		_iter_end_1aa942842:;
	};
	jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _22313_t1 = jule::new_ptr<_1c0c9a5be_comptimeTypeInfo>(_1c0c9a5be_comptimeTypeInfo{._field_base=(*(_21744_t))});;
	{ jule::Slice<jule::Ptr<_1c0c9a5be_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22313_t1); };
	return _22313_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d03acd_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0d04b9a_SelectPackage(_1c0d04705_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)> _24632_selector) {
	return _1c0d7a616_SelectPackage((*(_self_))._field_file.ptr(), _24632_selector);;
}



inline jule::Ptr<_1c0d2b94c_Var> _1c0d05096_FindVar(_1c0d04705_Sema* _self_, jule::Str _25626_ident, jule::Bool _25638_binded) {
	jule::Ptr<_1c0d2b94c_Var> _25813_v = _1c0cd0a22_findVarInPackage(&((*(_self_))._field_files), &(_25626_ident), _25638_binded);;
	if ((_25813_v != nullptr)) {
		return _25813_v;;
	};
	if ((!(_1c0d01801_IsPub(&(_25626_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa946390:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _26921_imp = *it;
			{
				if ((!(_1c0d02747_impIsLookupable(&(_26921_imp), &(_25626_ident))))) {
					goto _iter_next_1aa946390;
				};
				_25813_v=_1c0cd3e21_FindVar(_26921_imp.ptr(), _25626_ident, _25638_binded);
				if (((_25813_v != nullptr) && _1c0d07a9e_isAccessibleDefine(_self_, (*(_25813_v))._field_Public, (*(_25813_v))._field_Token))) {
					return _25813_v;;
				};
			}
			_iter_next_1aa946390:;
			++it;
			goto _iter_begin_1aa946390;
		}
		_iter_end_1aa946390:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0dae727_TypeAlias> _1c0d05492_FindTypeAlias(_1c0d04705_Sema* _self_, jule::Str _28832_ident, jule::Bool _28844_binded) {
	jule::Ptr<_1c0dae727_TypeAlias> _29013_ta = _1c0cd0e95_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28832_ident), _28844_binded);;
	if ((_29013_ta != nullptr)) {
		return _29013_ta;;
	};
	if ((!(_1c0d01801_IsPub(&(_28832_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa949173:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _30121_imp = *it;
			{
				if ((!(_1c0d02747_impIsLookupable(&(_30121_imp), &(_28832_ident))))) {
					goto _iter_next_1aa949173;
				};
				_29013_ta=_1c0cd431c_FindTypeAlias(_30121_imp.ptr(), _28832_ident, _28844_binded);
				if (((_29013_ta != nullptr) && _1c0d07a9e_isAccessibleDefine(_self_, (*(_29013_ta))._field_Public, (*(_29013_ta))._field_Token))) {
					return _29013_ta;;
				};
			}
			_iter_next_1aa949173:;
			++it;
			goto _iter_begin_1aa949173;
		}
		_iter_end_1aa949173:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c5b64b_Struct> _1c0d0588d_FindStruct(_1c0d04705_Sema* _self_, jule::Str _32029_ident, jule::Bool _32041_binded) {
	jule::Ptr<_1c0c5b64b_Struct> _32213_s = _1c0cd13c4_findStructInPackage(&((*(_self_))._field_files), &(_32029_ident), _32041_binded);;
	if ((_32213_s != nullptr)) {
		return _32213_s;;
	};
	if ((!(_1c0d01801_IsPub(&(_32029_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa94be56:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _33321_imp = *it;
			{
				if ((!(_1c0d02747_impIsLookupable(&(_33321_imp), &(_32029_ident))))) {
					goto _iter_next_1aa94be56;
				};
				_32213_s=_1c0cd4718_FindStruct(_33321_imp.ptr(), _32029_ident, _32041_binded);
				if (((_32213_s != nullptr) && _1c0d07a9e_isAccessibleDefine(_self_, (*(_32213_s))._field_Public, (*(_32213_s))._field_Token))) {
					return _32213_s;;
				};
			}
			_iter_next_1aa94be56:;
			++it;
			goto _iter_begin_1aa94be56;
		}
		_iter_end_1aa94be56:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c715a6_Fn> _1c0d05c89_FindFn(_1c0d04705_Sema* _self_, jule::Str _35125_ident, jule::Bool _35137_binded) {
	jule::Ptr<_1c0c715a6_Fn> _35313_f = _1c0cd187a_findFnInPackage(&((*(_self_))._field_files), &(_35125_ident), _35137_binded);;
	if ((_35313_f != nullptr)) {
		return _35313_f;;
	};
	if ((!(_1c0d01801_IsPub(&(_35125_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa94ec39:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _36421_imp = *it;
			{
				if ((!(_1c0d02747_impIsLookupable(&(_36421_imp), &(_35125_ident))))) {
					goto _iter_next_1aa94ec39;
				};
				_35313_f=_1c0cd4b14_FindFn(_36421_imp.ptr(), _35125_ident, _35137_binded);
				if (((_35313_f != nullptr) && _1c0d07a9e_isAccessibleDefine(_self_, (*(_35313_f))._field_Public, (*(_35313_f))._field_Token))) {
					return _35313_f;;
				};
			}
			_iter_next_1aa94ec39:;
			++it;
			goto _iter_begin_1aa94ec39;
		}
		_iter_end_1aa94ec39:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c84850_Trait> _1c0d060ca_FindTrait(_1c0d04705_Sema* _self_, jule::Str _38328_ident) {
	jule::Ptr<_1c0c84850_Trait> _38513_t = _1c0cd1bbb_findTraitInPackage(&((*(_self_))._field_files), &(_38328_ident));;
	if ((_38513_t != nullptr)) {
		return _38513_t;;
	};
	if ((!(_1c0d01801_IsPub(&(_38328_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa957626:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _39621_imp = *it;
			{
				if ((!(_1c0d02747_impIsLookupable(&(_39621_imp), &(_38328_ident))))) {
					goto _iter_next_1aa957626;
				};
				_38513_t=_1c0cd4e55_FindTrait(_39621_imp.ptr(), _38328_ident);
				if (((_38513_t != nullptr) && _1c0d07a9e_isAccessibleDefine(_self_, (*(_38513_t))._field_Public, (*(_38513_t))._field_Token))) {
					return _38513_t;;
				};
			}
			_iter_next_1aa957626:;
			++it;
			goto _iter_begin_1aa957626;
		}
		_iter_end_1aa957626:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c8704a_Enum> _1c0d0641b_FindEnum(_1c0d04705_Sema* _self_, jule::Str _41527_ident) {
	jule::Ptr<_1c0c8704a_Enum> _41713_e = _1c0cd2040_findEnumInPackage(&((*(_self_))._field_files), &(_41527_ident));;
	if ((_41713_e != nullptr)) {
		return _41713_e;;
	};
	if ((!(_1c0d01801_IsPub(&(_41527_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa95a1c8:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _42821_imp = *it;
			{
				if ((!(_1c0d02747_impIsLookupable(&(_42821_imp), &(_41527_ident))))) {
					goto _iter_next_1aa95a1c8;
				};
				_41713_e=_1c0cd5296_FindEnum(_42821_imp.ptr(), _41527_ident);
				if (((_41713_e != nullptr) && _1c0d07a9e_isAccessibleDefine(_self_, (*(_41713_e))._field_Public, (*(_41713_e))._field_Token))) {
					return _41713_e;;
				};
			}
			_iter_next_1aa95a1c8:;
			++it;
			goto _iter_begin_1aa95a1c8;
		}
		_iter_end_1aa95a1c8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c88755_TypeEnum> _1c0d0675c_FindTypeEnum(_1c0d04705_Sema* _self_, jule::Str _44731_ident) {
	jule::Ptr<_1c0c88755_TypeEnum> _44913_e = _1c0cd23b4_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44731_ident));;
	if ((_44913_e != nullptr)) {
		return _44913_e;;
	};
	if ((!(_1c0d01801_IsPub(&(_44731_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa95cc58:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _46021_imp = *it;
			{
				if ((!(_1c0d02747_impIsLookupable(&(_46021_imp), &(_44731_ident))))) {
					goto _iter_next_1aa95cc58;
				};
				_44913_e=_1c0cd55d7_FindTypeEnum(_46021_imp.ptr(), _44731_ident);
				if (((_44913_e != nullptr) && _1c0d07a9e_isAccessibleDefine(_self_, (*(_44913_e))._field_Public, (*(_44913_e))._field_Token))) {
					return _44913_e;;
				};
			}
			_iter_next_1aa95cc58:;
			++it;
			goto _iter_begin_1aa95cc58;
		}
		_iter_end_1aa95cc58:;
	};
	return nullptr;;
}



inline jule::Bool _1c0d06b69_isFlag(_1c0d04705_Sema* _self_, jule::I64 _47621_flags) {
	return (((*(_self_))._field_flags & _47621_flags) == _47621_flags);;
}



inline void _1c0d06e22_setCurrentFile(_1c0d04705_Sema* _self_, jule::Ptr<_1c0d7a12c_SymbolTable> _47837_f) {
	(*(_self_))._field_file=_47837_f;
}



inline void _1c0d07340_pushErr(_1c0d04705_Sema* _self_, jule::Ptr<_1c0c25406_Token> _48026_token, jule::Str _48041_fmt, jule::Slice<jule::Any> _48054_args) {
	{ jule::Slice<_21ce0c86b_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c0d023c3_compilerErr(&(_48026_token), true, _48041_fmt, _48054_args)); };
}



inline void _1c0d076a3_pushSuggestion(_1c0d04705_Sema* _self_, jule::Str _48533_fmt, jule::Slice<jule::Any> _48546_args) {
	{
		_1c0d03902_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48533_fmt, _48546_args);
	};
}



inline jule::Bool _1c0d07a9e_isAccessibleDefine(_1c0d04705_Sema* _self_, jule::Bool _49033_public, jule::Ptr<_1c0c25406_Token> _49047_token) {
	return ((_49033_public || ((*(_49047_token))._field_File == nullptr)) || (_1c0c2b341_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1c0c2b341_Dir((*(_49047_token))._field_File.ptr())));;
}



inline jule::Bool _1c0d08055_isDuplicatedIdent(_1c0d04705_Sema* _self_, jule::Uintptr _49732_itself, jule::Str* _49750_ident, jule::Bool _49762_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9647ba:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> *_49816_f = it;
			{
				if (_1c0d7d64c_isDuplicatedIdent((*(_49816_f)).ptr(), _49732_itself, _49750_ident, _49762_binded)) {
					return true;;
				};
				{
					auto expr = &((*((*(_49816_f))))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa9651b1:;
					if (it != expr_end) {
						jule::Ptr<_1c0cd353b_ImportInfo> *_50320_imp = it;
						{
							{
								auto expr = &((*((*(_50320_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aa9660b3:;
								if (it != expr_end) {
									jule::Ptr<_1c0c25406_Token> *_50424_selected = it;
									{
										if (((*((*(_50424_selected))))._field_Kind == (*(_49750_ident)))) {
											return true;;
										};
									}
									_iter_next_1aa9660b3:;
									++it;
									goto _iter_begin_1aa9660b3;
								}
								_iter_end_1aa9660b3:;
							};
						}
						_iter_next_1aa9651b1:;
						++it;
						goto _iter_begin_1aa9651b1;
					}
					_iter_end_1aa9651b1:;
				};
			}
			_iter_next_1aa9647ba:;
			++it;
			goto _iter_begin_1aa9647ba;
		}
		_iter_end_1aa9647ba:;
	};
	return false;;
}



inline void _1c0d083b8_checkDirectives(jule::Ptr<_1c0d04705_Sema> _self_, jule::Slice<jule::Ptr<_1c0c39e10_Directive>>* _51440_d, jule::Any _51466_o) {
	_1c0ccc0b2_directiveChecker _51513_dc = _1c0ccc0b2_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1c0c39e10_Directive>>>)(_51440_d)), ._field_o=_51466_o};;
	_1c0ccd547_check(&_51513_dc);
}



inline jule::Bool _1c0d0886e_checkGenericQuantity(_1c0d04705_Sema* _self_, jule::I64 _52339_required, jule::I64 _52354_given, jule::Ptr<_1c0c25406_Token> _52366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52339_required == 0LL) && (_52354_given > 0LL))) {
			_case_begin_1aa968736:;
			{
				_1c0d07340_pushErr(_self_, _52366_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52339_required > 0LL) && (_52354_given == 0LL))) {
			_case_begin_1aa9687ad:;
			{
				_1c0d07340_pushErr(_self_, _52366_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required < _52354_given)) {
			_case_begin_1aa968835:;
			{
				_1c0d07340_pushErr(_self_, _52366_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52339_required > _52354_given)) {
			_case_begin_1aa968a55:;
			{
				_1c0d07340_pushErr(_self_, _52366_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aa968648:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aa96857c:;
	};
}



inline jule::Bool _1c0d08c6a_isDuplicatedImportSelection(_1c0d04705_Sema* _self_, jule::Uintptr _54242_itself, jule::Str* _54260_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa96accc:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> *_54316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54316_imp))) == _54242_itself)) {
					goto _iter_end_1aa96accc;
				};
				if (_1c0cd5dbd_existIdent((*(_54316_imp)).ptr(), (*(_54260_ident)))) {
					return true;;
				};
			}
			_iter_next_1aa96accc:;
			++it;
			goto _iter_begin_1aa96accc;
		}
		_iter_end_1aa96accc:;
	};
	return false;;
}



inline jule::Any _1c0d09166_getImportDef(_1c0d04705_Sema* _self_, jule::Str* _55528_ident, jule::Ptr<_1c0cd353b_ImportInfo>* _55545_imp) {
	if ((_1c0ea1275_findPackageBuiltinDef(&((*((*(_55545_imp))))._field_LinkPath), _55528_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55545_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa96cbbe:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _55921_f = *it;
			{
				;
				jule::Any _56217_def = _1c0d7d196_defByIdent(_55921_f.ptr(), _55528_ident, false);;
				if ((_56217_def != nullptr)) {
					return _56217_def;;
				};
			}
			_iter_next_1aa96cbbe:;
			++it;
			goto _iter_begin_1aa96cbbe;
		}
		_iter_end_1aa96cbbe:;
	};
	return nullptr;;
}



inline jule::Bool _1aa974676_checkImportSelection(_1c0d04705_Sema* _self_, jule::Ptr<_1c0c25406_Token>* _57043_ident, jule::Ptr<_1c0d2b94c_Var>* _57059_s) {
	if ((!(_1c0d07a9e_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1c0d07340_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c0cd2903_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1c0d07340_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aa978647_checkImportSelection(_1c0d04705_Sema* _self_, jule::Ptr<_1c0c25406_Token>* _57043_ident, jule::Ptr<_1c0dae727_TypeAlias>* _57059_s) {
	if ((!(_1c0d07a9e_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1c0d07340_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c0cd2903_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1c0d07340_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aa97c5c4_checkImportSelection(_1c0d04705_Sema* _self_, jule::Ptr<_1c0c25406_Token>* _57043_ident, jule::Ptr<_1c0c5b64b_Struct>* _57059_s) {
	if ((!(_1c0d07a9e_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1c0d07340_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c0cd2903_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1c0d07340_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aa9816d8_checkImportSelection(_1c0d04705_Sema* _self_, jule::Ptr<_1c0c25406_Token>* _57043_ident, jule::Ptr<_1c0c84850_Trait>* _57059_s) {
	if ((!(_1c0d07a9e_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1c0d07340_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c0cd2903_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1c0d07340_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aa985665_checkImportSelection(_1c0d04705_Sema* _self_, jule::Ptr<_1c0c25406_Token>* _57043_ident, jule::Ptr<_1c0c8704a_Enum>* _57059_s) {
	if ((!(_1c0d07a9e_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1c0d07340_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c0cd2903_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1c0d07340_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aa9895e2_checkImportSelection(_1c0d04705_Sema* _self_, jule::Ptr<_1c0c25406_Token>* _57043_ident, jule::Ptr<_1c0c88755_TypeEnum>* _57059_s) {
	if ((!(_1c0d07a9e_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1c0d07340_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c0cd2903_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1c0d07340_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aa98d56e_checkImportSelection(_1c0d04705_Sema* _self_, jule::Ptr<_1c0c25406_Token>* _57043_ident, jule::Ptr<_1c0c715a6_Fn>* _57059_s) {
	if ((!(_1c0d07a9e_isAccessibleDefine(_self_, (*((*(_57059_s))))._field_Public, (*((*(_57059_s))))._field_Token)))) {
		_1c0d07340_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57043_ident))))._field_Kind, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c0cd2903_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57059_s))))._field_Ident), false) != nullptr)) {
		_1c0d07340_pushErr(_self_, (*(_57043_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57059_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1c0d098a3_checkImportSelectedSelections(_1c0d04705_Sema* _self_, jule::Ptr<_1c0cd353b_ImportInfo>* _58453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58453_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa96ed8b:;
		if (it != expr_end) {
			jule::Ptr<_1c0c25406_Token> _58616_ident = *it;
			{
				if ((*(_58616_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1aa96ed8b;
				};
				if (_1c0d08c6a_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_58453_imp)))), &((*(_58616_ident))._field_Kind))) {
					_1c0d07340_pushErr(_self_, _58616_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
					_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1aa96ed8b;
				};
				jule::Any _59817_def = _1c0d09166_getImportDef(_self_, &((*(_58616_ident))._field_Kind), _58453_imp);;
				{
					auto &_match_expr{ _59817_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1aa971266:;
						{
							goto _iter_next_1aa96ed8b;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1aa9729d7:;
						{
							jule::Ptr<_1c0d2b94c_Var> _60421_v = _59817_def.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8);;
							__jule_func_result=(_1aa974676_checkImportSelection(_self_, &(_58616_ident), &(_60421_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1aa972a4d:;
						{
							jule::Ptr<_1c0dae727_TypeAlias> _60721_ta = _59817_def.cast_ptr<_1c0dae727_TypeAlias>(&__jule_any_type66);;
							__jule_func_result=(_1aa978647_checkImportSelection(_self_, &(_58616_ident), &(_60721_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1aa973631:;
						{
							jule::Ptr<_1c0c5b64b_Struct> _61021_s = _59817_def.cast_ptr<_1c0c5b64b_Struct>(&__jule_any_type65);;
							__jule_func_result=(_1aa97c5c4_checkImportSelection(_self_, &(_58616_ident), &(_61021_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1aa973697:;
						{
							jule::Ptr<_1c0c84850_Trait> _61321_t = _59817_def.cast_ptr<_1c0c84850_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1aa9816d8_checkImportSelection(_self_, &(_58616_ident), &(_61321_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1aa97370d:;
						{
							jule::Ptr<_1c0c8704a_Enum> _61621_e = _59817_def.cast_ptr<_1c0c8704a_Enum>(&__jule_any_type67);;
							__jule_func_result=(_1aa985665_checkImportSelection(_self_, &(_58616_ident), &(_61621_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1aa973774:;
						{
							jule::Ptr<_1c0c88755_TypeEnum> _61921_e = _59817_def.cast_ptr<_1c0c88755_TypeEnum>(&__jule_any_type68);;
							__jule_func_result=(_1aa9895e2_checkImportSelection(_self_, &(_58616_ident), &(_61921_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1aa9737da:;
						{
							jule::Ptr<_1c0c715a6_Fn> _62221_f = _59817_def.cast_ptr<_1c0c715a6_Fn>(&__jule_any_type64);;
							__jule_func_result=(_1aa98d56e_checkImportSelection(_self_, &(_58616_ident), &(_62221_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1aa9728c7:;
						{
							_1c0d07340_pushErr(_self_, _58616_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_58616_ident))._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1aa96ed8b;
						}
					}
					_match_end_1aa972872:;
				};
			}
			_iter_next_1aa96ed8b:;
			++it;
			goto _iter_begin_1aa96ed8b;
		}
		_iter_end_1aa96ed8b:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aa992c49_checkImportsAllSelectionsFromCollection(_1c0d04705_Sema* _self_, jule::Slice<jule::Ptr<_1c0d2b94c_Var>>* _63362_s, jule::Ptr<_1c0c25406_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa994575:;
		if (it != expr_end) {
			jule::Ptr<_1c0d2b94c_Var> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1aa974676_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1aa994575:;
			++it;
			goto _iter_begin_1aa994575;
		}
		_iter_end_1aa994575:;
	};
	return _63413_ok;;
}

inline jule::Bool _1aa993d8d_checkImportsAllSelectionsFromCollection(_1c0d04705_Sema* _self_, jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>* _63362_s, jule::Ptr<_1c0c25406_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa997325:;
		if (it != expr_end) {
			jule::Ptr<_1c0dae727_TypeAlias> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1aa978647_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1aa997325:;
			++it;
			goto _iter_begin_1aa997325;
		}
		_iter_end_1aa997325:;
	};
	return _63413_ok;;
}

inline jule::Bool _1aa996b82_checkImportsAllSelectionsFromCollection(_1c0d04705_Sema* _self_, jule::Slice<jule::Ptr<_1c0c5b64b_Struct>>* _63362_s, jule::Ptr<_1c0c25406_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa99a0b4:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5b64b_Struct> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1aa97c5c4_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1aa99a0b4:;
			++it;
			goto _iter_begin_1aa99a0b4;
		}
		_iter_end_1aa99a0b4:;
	};
	return _63413_ok;;
}

inline jule::Bool _1aa9998cc_checkImportsAllSelectionsFromCollection(_1c0d04705_Sema* _self_, jule::Slice<jule::Ptr<_1c0c715a6_Fn>>* _63362_s, jule::Ptr<_1c0c25406_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa99cd75:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1aa98d56e_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1aa99cd75:;
			++it;
			goto _iter_begin_1aa99cd75;
		}
		_iter_end_1aa99cd75:;
	};
	return _63413_ok;;
}

inline jule::Bool _1aa99c6d2_checkImportsAllSelectionsFromCollection(_1c0d04705_Sema* _self_, jule::Slice<jule::Ptr<_1c0c84850_Trait>>* _63362_s, jule::Ptr<_1c0c25406_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9a0ac0:;
		if (it != expr_end) {
			jule::Ptr<_1c0c84850_Trait> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1aa9816d8_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1aa9a0ac0:;
			++it;
			goto _iter_begin_1aa9a0ac0;
		}
		_iter_end_1aa9a0ac0:;
	};
	return _63413_ok;;
}

inline jule::Bool _1aa9a042c_checkImportsAllSelectionsFromCollection(_1c0d04705_Sema* _self_, jule::Slice<jule::Ptr<_1c0c8704a_Enum>>* _63362_s, jule::Ptr<_1c0c25406_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9a381a:;
		if (it != expr_end) {
			jule::Ptr<_1c0c8704a_Enum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1aa985665_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1aa9a381a:;
			++it;
			goto _iter_begin_1aa9a381a;
		}
		_iter_end_1aa9a381a:;
	};
	return _63413_ok;;
}

inline jule::Bool _1aa9a3177_checkImportsAllSelectionsFromCollection(_1c0d04705_Sema* _self_, jule::Slice<jule::Ptr<_1c0c88755_TypeEnum>>* _63362_s, jule::Ptr<_1c0c25406_Token>* _63371_et) {
	jule::Bool _63413_ok = true;;
	{
		auto expr = _63362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9a65ed:;
		if (it != expr_end) {
			jule::Ptr<_1c0c88755_TypeEnum> *_63516_d = it;
			{
				if ((*((*(_63516_d))))._field_Public) {
					_63413_ok=(_1aa9895e2_checkImportSelection(_self_, _63371_et, _63516_d) && _63413_ok);
				};
			}
			_iter_next_1aa9a65ed:;
			++it;
			goto _iter_begin_1aa9a65ed;
		}
		_iter_end_1aa9a65ed:;
	};
	return _63413_ok;;
}



inline jule::Bool _1c0d0a0e0_checkImportAllSelections(_1c0d04705_Sema* _self_, jule::Ptr<_1c0cd353b_ImportInfo>* _64344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64344_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa973be7:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> *_64516_file = it;
			{
				__jule_func_result=(_1aa992c49_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Vars), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aa993d8d_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeAliases), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aa996b82_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Structs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aa9998cc_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Funcs), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aa99c6d2_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Traits), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aa9a042c_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_Enums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aa9a3177_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64516_file))))._field_TypeEnums), &((*((*(_64344_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1aa973be7:;
			++it;
			goto _iter_begin_1aa973be7;
		}
		_iter_end_1aa973be7:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c0d0a431_checkImportSelections(_1c0d04705_Sema* _self_, jule::Ptr<_1c0cd353b_ImportInfo>* _65745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65745_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1c0d098a3_checkImportSelectedSelections(_self_, _65745_imp);
		return __jule_func_result;;
	} else if ((*((*(_65745_imp))))._field_ImportAll) {
		__jule_func_result = _1c0d0a0e0_checkImportAllSelections(_self_, _65745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c0d0a772_isUseAliasDuplication(_1c0d04705_Sema* _self_, jule::Ptr<_1c0cd353b_ImportInfo>* _66641_imp) {
	if (((*((*(_66641_imp))))._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9a8e4c:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _67121_imp2 = *it;
			{
				if ((_67121_imp2 == (*(_66641_imp)))) {
					goto _iter_end_1aa9a8e4c;
				};
				if (((*(_67121_imp2))._field_Alias == (*((*(_66641_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*(_67121_imp2))._field_Ident == (*(_67121_imp2))._field_LinkPath) && ((*(_67121_imp2))._field_Ident == (*((*(_66641_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1aa9a8e4c:;
			++it;
			goto _iter_begin_1aa9a8e4c;
		}
		_iter_end_1aa9a8e4c:;
	};
	return false;;
}



inline jule::Bool _1c0d0aab3_checkImport(_1c0d04705_Sema* _self_, jule::Ptr<_1c0cd353b_ImportInfo>* _68635_imp) {
	if (((*((*(_68635_imp))))._field_Binded || ((*((*((*(_68635_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1c0d0a772_isUseAliasDuplication(_self_, _68635_imp)) {
		_1c0d07340_pushErr(_self_, (*((*(_68635_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_68635_imp))))._field_Alias, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*((*(_68635_imp))))._field_Duplicate))) {
		jule::Ptr<_1c0d04705_Sema> _69717_sema = jule::new_ptr<_1c0d04705_Sema>(_1c0d04705_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1c0d27e76_check(_69717_sema, &((*((*((*(_68635_imp))))._field_Package))._field_Files));
		if (((*(_69717_sema))._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*(_69717_sema))._field_errors);;
			(*(_69717_sema))._field_errors=nullptr;
			return false;;
		};
	};
	return _1c0d0a431_checkImportSelections(_self_, _68635_imp);;
}



inline void _1c0d0acb1_checkImports(_1c0d04705_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9ad924:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _71221_file = *it;
			{
				_1c0d06e22_setCurrentFile(_self_, _71221_file);
				{
					auto expr = &((*(_71221_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa9b175c:;
					if (it != expr_end) {
						jule::Ptr<_1c0cd353b_ImportInfo> _71425_imp = *it;
						{
							jule::Bool _71517_ok = _1c0d0aab3_checkImport(_self_, &(_71425_imp));;
							if ((!(_71517_ok))) {
								return;;
							};
						}
						_iter_next_1aa9b175c:;
						++it;
						goto _iter_begin_1aa9b175c;
					}
					_iter_end_1aa9b175c:;
				};
			}
			_iter_next_1aa9ad924:;
			++it;
			goto _iter_begin_1aa9ad924;
		}
		_iter_end_1aa9ad924:;
	};
}



inline void _1c0d0aeae_implFileImpls(jule::Ptr<_1c0d04705_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9b16a2:;
		if (it != expr_end) {
			jule::Ptr<_1c0cabbc9_Impl> _72521_imp = *it;
			{
				_1c0d196c6_implImpl(_self_, &(_72521_imp));
			}
			_iter_next_1aa9b16a2:;
			++it;
			goto _iter_begin_1aa9b16a2;
		}
		_iter_end_1aa9b16a2:;
	};
}



inline void _1c0d0b1ac_implImpls(jule::Ptr<_1c0d04705_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9b3242:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _73121_file = *it;
			{
				_1c0d06e22_setCurrentFile(_self_.ptr(), _73121_file);
				_1c0d0aeae_implFileImpls(_self_);
			}
			_iter_next_1aa9b3242:;
			++it;
			goto _iter_begin_1aa9b3242;
		}
		_iter_end_1aa9b3242:;
	};
}



inline void _1c0d0b3aa_checkEnums(jule::Ptr<_1c0d04705_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9b3e8a:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _73821_file = *it;
			{
				_1c0d06e22_setCurrentFile(_self_.ptr(), _73821_file);
				{
					
					if ((!(_1c0d15b12_checkEnumDecls(_self_)))) {
						_case_begin_1aa9b571c:;
					}
					else if ((!(_1c0d15d98_checkTypeEnumDecls(_self_)))) {
						_case_begin_1aa9b5794:;
					}
					_match_end_1aa9b5684:;
				};
			}
			_iter_next_1aa9b3e8a:;
			++it;
			goto _iter_begin_1aa9b3e8a;
		}
		_iter_end_1aa9b3e8a:;
	};
}



inline void _1c0d0b5a8_checkFileInherits(jule::Ptr<_1c0d04705_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9b4d37:;
		if (it != expr_end) {
			jule::Ptr<_1c0c84850_Trait> _74821_t = *it;
			{
				jule::Bool _74913_ok = _1c0d1775c__checkTraitDeclInherits(_self_, &(_74821_t));;
				if ((!(_74913_ok))) {
					return;;
				};
			}
			_iter_next_1aa9b4d37:;
			++it;
			goto _iter_begin_1aa9b4d37;
		}
		_iter_end_1aa9b4d37:;
	};
}



inline void _1c0d0b7a6_checkInherits(jule::Ptr<_1c0d04705_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9b6993:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _75721_file = *it;
			{
				_1c0d06e22_setCurrentFile(_self_.ptr(), _75721_file);
				_1c0d0b5a8_checkFileInherits(_self_);
			}
			_iter_next_1aa9b6993:;
			++it;
			goto _iter_begin_1aa9b6993;
		}
		_iter_end_1aa9b6993:;
	};
}



inline _1c0dc23c7_typeChecker _1c0d0bc5c_typeChecker(jule::Ptr<_1c0d04705_Sema> _self_, jule::Trait<_1c0dd0050_Lookup> _76335_l, jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> _76350_generics, jule::Ptr<_1c0dc13d7_referencer> _76413_referencer) {
	_1c0dc23c7_typeChecker _76513_tc = _1c0dc23c7_typeChecker{._field_s=_self_, ._field_rootLookup=_76335_l, ._field_lookup=_76335_l, ._field_referencer=_76413_referencer, ._field_useGenerics=_76350_generics, };;
	{
		auto &_match_expr{ _76335_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1aa9b9512:;
			{
				jule::Ptr<_1c0cb9412_scopeChecker> _77417_hard = _1c0cbc789_getHardRoot(_76335_l.cast_ptr<_1c0cb9412_scopeChecker>(0));;
				_76513_tc._field_refers=(*((*(_77417_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1aa9b94ac:;
	};
	if (((_76413_referencer != nullptr) && ((*(_76413_referencer))._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_76413_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1aa9babc8:;
				{
					_76513_tc._field_ownerAlias=(*(_76413_referencer))._field_owner.cast_ptr<_1c0dae727_TypeAlias>(&__jule_any_type66);
				}
			}
			_match_end_1aa9bab73:;
		};
	};
	return _76513_tc;;
}



inline jule::Ptr<_1c0db0519_TypeKind> _1c0d0c2bd_buildTypeWithRefers(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c3a9e3_TypeDecl>* _79044_t, jule::Trait<_1c0dd0050_Lookup> _79067_l, jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> _79113_generics, jule::Ptr<_1c0dc13d7_referencer> _79141_referencer) {
	return ({ auto _wrap_copy = _1c0d0bc5c_typeChecker(_self_, _79067_l, _79113_generics, _79141_referencer); _1c0dc9a72_checkDecl(&_wrap_copy, _79044_t); });;
}



inline jule::Bool _1c0d0c82e_checkTypeWithRefers(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0db76db_TypeSymbol>* _79744_t, jule::Trait<_1c0dd0050_Lookup> _79764_l, jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> _79813_generics, jule::Ptr<_1c0dc13d7_referencer> _79841_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1c0db7a60_checked((*(_79744_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_79744_t))))._field_Kind=_1c0d0c2bd_buildTypeWithRefers(_self_, &((*((*(_79744_t))))._field_Decl), _79764_l, _79813_generics, _79841_referencer);
	__jule_func_result = _1c0db7a60_checked((*(_79744_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1c0ca9b94_constraintChecker> _1c0d0cab5_constraintChecker(jule::Ptr<_1c0d04705_Sema> _self_) {
	return jule::new_ptr<_1c0ca9b94_constraintChecker>(_1c0ca9b94_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1c0d0ceb1_checkType(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0db76db_TypeSymbol>* _81234_t, jule::Trait<_1c0dd0050_Lookup> _81254_l) {
	return _1c0d0c82e_checkTypeWithRefers(_self_, _81234_t, _81254_l, nullptr, nullptr);;
}



inline jule::Ptr<_1c0db0519_TypeKind> _1c0d0d467_buildTypeWithGenerics(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c3a9e3_TypeDecl>* _81846_t, jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> _81913_generics, jule::Ptr<_1c0c77656_ReferenceStack> _81941_refers) {
	jule::Ptr<_1c0dc23c7_typeChecker> _82013_tc = jule::new_ptr<_1c0dc23c7_typeChecker>(_1c0dc23c7_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c0dd0050_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c0dd0050_Lookup>(_self_, 3), ._field_refers=_81941_refers, ._field_useGenerics=_81913_generics, });;
	return _1c0dc9a72_checkDecl(_82013_tc.ptr(), _81846_t);;
}



inline jule::Ptr<_1c0db0519_TypeKind> _1c0d0dae9_selectType(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c3a9e3_TypeDecl>* _83635_t) {
	jule::Ptr<_1c0dc23c7_typeChecker> _83713_tc = jule::new_ptr<_1c0dc23c7_typeChecker>(_1c0dc23c7_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c0dd0050_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c0dd0050_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1c0dc9a72_checkDecl(_83713_tc.ptr(), _83635_t);;
}



inline jule::Ptr<_1c0d82046_Eval> _1c0d0e0a0_evalpd(jule::Ptr<_1c0d04705_Sema> _self_, jule::Trait<_1c0dd0050_Lookup> _84830_l, jule::Ptr<_1c0db0519_TypeKind> _84845_p, jule::Ptr<_1c0d2b94c_Var> _84863_owner) {
	jule::Ptr<_1c0d82046_Eval> _84913_e = jule::new_ptr<_1c0d82046_Eval>(_1c0d82046_Eval{._field_s=_self_, ._field_lookup=_84830_l, ._field_owner=_84863_owner, });;
	{
		auto &_match_expr{ _84830_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1aa9c4a6c:;
			{
				(*(_84913_e))._field_unsafety=_1c0cbb7bb_isUnsafe(_84830_l.cast_ptr<_1c0cb9412_scopeChecker>(0));
			}
		}
		_match_end_1aa9c4a17:;
	};
	(*(_84913_e))._field_prefix=_84845_p;
	return _84913_e;;
}



inline jule::Ptr<_1c0d82046_Eval> _1c0d0e49b_evalp(jule::Ptr<_1c0d04705_Sema> _self_, jule::Trait<_1c0dd0050_Lookup> _86329_l, jule::Ptr<_1c0db0519_TypeKind> _86344_p) {
	return _1c0d0e0a0_evalpd(_self_, _86329_l, _86344_p, nullptr);;
}



inline jule::Ptr<_1c0d82046_Eval> _1c0d0e7dc_eval(jule::Ptr<_1c0d04705_Sema> _self_, jule::Trait<_1c0dd0050_Lookup> _86828_l) {
	return _1c0d0e49b_evalp(_self_, _86828_l, nullptr);;
}



inline jule::Bool _1c0d0ed4d_checkAssignType(jule::Ptr<_1c0d04705_Sema> _self_, jule::Bool _87235_destIsRef, jule::Ptr<_1c0db0519_TypeKind>* _87257_dest, jule::Ptr<_1c0d80352_Data>* _87314_d, jule::Ptr<_1c0c25406_Token> _87328_errorToken) {
	if ((*((*(_87314_d))))._field_Decl) {
		_1c0d07340_pushErr(_self_.ptr(), _87328_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_87235_destIsRef) {
		if ((!(_1c0db0c23_Equal((*(_87257_dest)), (*((*(_87314_d))))._field_Kind)))) {
			_1c0d07340_pushErr(_self_.ptr(), _87328_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_87257_dest)).ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_87314_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1c0d68e1d_assignTypeChecker> _88417_atc = jule::new_ptr<_1c0d68e1d_assignTypeChecker>(_1c0d68e1d_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_87257_dest)), ._field_d=(*(_87314_d)), ._field_errorToken=_87328_errorToken});;
		jule::Bool _89013_ok = _1c0d6a183_check(_88417_atc.ptr());;
		if ((!(_89013_ok))) {
			return false;;
		};
	};
	if (((!(_1c0d80c26_IsConst((*(_87314_d)).ptr()))) || (_1c0db2b6a_Prim((*(_87257_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _90013_kind = (*(_1c0db2b6a_Prim((*(_87257_dest)).ptr())))._field_Kind;;
	{
		
		if (_203643440_IsSigInt(_90013_kind)) {
			_case_begin_1aa9cbd4e:;
			{
				_203647565_SetI64((*((*(_87314_d))))._field_Constant.ptr(), static_cast<jule::I64>(_203646c90_AsI64((*((*(_87314_d))))._field_Constant.ptr())));
			}
		}
		else if (_20364374d_IsUnsigInt(_90013_kind)) {
			_case_begin_1aa9cbdc6:;
			{
				_20364781d_SetU64((*((*(_87314_d))))._field_Constant.ptr(), static_cast<jule::U64>(_203647026_AsU64((*((*(_87314_d))))._field_Constant.ptr())));
			}
		}
		else if (_203643d58_IsFloat(_90013_kind)) {
			_case_begin_1aa9cbe4d:;
			{
				_203648137_SetF64((*((*(_87314_d))))._field_Constant.ptr(), static_cast<jule::F64>(_2036472ac_AsF64((*((*(_87314_d))))._field_Constant.ptr())));
			}
		}
		_match_end_1aa9cbc83:;
	};
	return true;;
}



inline jule::Bool _1c0d10304_checkTypeCompatibility(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0db0519_TypeKind>* _91447_dest, jule::Ptr<_1c0db0519_TypeKind>* _91514_src, jule::Ptr<_1c0c25406_Token>* _91535_errorToken) {
	if (((*(_91514_src)) == nullptr)) {
		_1c0d07340_pushErr(_self_.ptr(), (*(_91535_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_91447_dest)).ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*(_91514_src)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	if ((_1c0db4991_Tup((*(_91514_src)).ptr()) != nullptr)) {
		_1c0d07340_pushErr(_self_.ptr(), (*(_91535_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_91447_dest)).ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*(_91514_src)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	_1c0d6716e_typeCompatibilityChecker _92913_tcc = _1c0d6716e_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_91447_dest)), ._field_src=(*(_91514_src)), ._field_errorToken=(*(_91535_errorToken))};;
	if (_1c0d68835_check(&_92913_tcc)) {
		return true;;
	};
	_1c0d07340_pushErr(_self_.ptr(), (*(_91535_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_91447_dest)).ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*(_91514_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline jule::Ptr<_1c0db0519_TypeKind> _1c0d107aa_buildNonGenericTypeKind(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c3a9e3_TypeDecl>* _95048_ast, jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>>* _95114_generics, jule::Slice<jule::Ptr<_1c0db0519_TypeKind>>* _95150_ignored) {
	jule::Ptr<_1c0dc23c7_typeChecker> _95213_tc = jule::new_ptr<_1c0dc23c7_typeChecker>(_1c0dc23c7_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c0dd0050_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c0dd0050_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_95114_generics)), ._field_ignoredGenerics=_95150_ignored, });;
	return _1c0dc9a72_checkDecl(_95213_tc.ptr(), _95048_ast);;
}



inline jule::Bool _1c0d10ba6_buildFnNonGenericTypeKinds(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c744aa_FnIns>* _96251_f, jule::Slice<jule::Ptr<_1c0db0519_TypeKind>>* _96267_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>> _96417_generics = nullptr;;
	if (_1c0c71cb0_IsMethod((*((*(_96251_f))))._field_Decl.ptr())) {
		_96417_generics=jule::append((*((*((*(_96251_f))))._field_Decl))._field_Generics,(*((*((*((*(_96251_f))))._field_Decl))._field_Owner))._field_Generics);
	} else {
		_96417_generics=(*((*((*(_96251_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_96251_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9d6d59:;
		if (it != expr_end) {
			jule::Ptr<_1c0c7350e_ParamIns> _97121_p = *it;
			{
				if ((!(_1c0c701ed_IsSelf((*(_97121_p))._field_Decl.ptr())))) {
					(*(_97121_p))._field_Kind=_1c0d107aa_buildNonGenericTypeKind(_self_, &((*((*((*(_97121_p))._field_Decl))._field_Kind))._field_Decl), &(_96417_generics), _96267_ignored);
					__jule_func_result=(__jule_func_result && ((*(_97121_p))._field_Kind != nullptr));
				};
			}
			_iter_next_1aa9d6d59:;
			++it;
			goto _iter_begin_1aa9d6d59;
		}
		_iter_end_1aa9d6d59:;
	};
	if ((!(_1c0c71a29_IsVoid((*((*(_96251_f))))._field_Decl.ptr())))) {
		(*((*(_96251_f))))._field_Result=_1c0d107aa_buildNonGenericTypeKind(_self_, &((*((*((*((*((*(_96251_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl), &(_96417_generics), _96267_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_96251_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1c0c744aa_FnIns> _1c0d10ee7_getTraitCheckFnKind(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c715a6_Fn>* _98444_f) {
	if (((*((*(_98444_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_98444_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1c0c744aa_FnIns> _98813_ins = _1c0c72a80_instanceForce((*(_98444_f)));;
	jule::Ptr<_1c0dc23c7_typeChecker> _99013_tc = jule::new_ptr<_1c0dc23c7_typeChecker>(_1c0dc23c7_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c0dd0050_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c0dd0050_Lookup>(_self_, 3), });;
	{
		auto expr = &((*(_98813_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9dbb61:;
		if (it != expr_end) {
			jule::Ptr<_1c0c7350e_ParamIns> _99521_p = *it;
			{
				if ((!(_1c0c701ed_IsSelf((*(_99521_p))._field_Decl.ptr())))) {
					(*(_99521_p))._field_Kind=_1c0dc9a72_checkDecl(_99013_tc.ptr(), &((*((*((*(_99521_p))._field_Decl))._field_Kind))._field_Decl));
				};
			}
			_iter_next_1aa9dbb61:;
			++it;
			goto _iter_begin_1aa9dbb61;
		}
		_iter_end_1aa9dbb61:;
	};
	if ((!(_1c0c71a29_IsVoid((*(_98444_f)).ptr())))) {
		(*(_98813_ins))._field_Result=_1c0dc9a72_checkDecl(_99013_tc.ptr(), &((*((*((*((*(_98444_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _98813_ins;;
}



inline jule::Bool _1c0d1149d_checkConstraintsFn(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c744aa_FnIns>* _100743_f, jule::Ptr<_1c0c25406_Token>* _100759_et, jule::Ptr<_1c0c744aa_FnIns> _100775_exist) {
	jule::Ptr<_1c0ca9b94_constraintChecker> _100813_cc = _1c0d0cab5_constraintChecker(_self_);;
	(*(_100813_cc))._field_et=(*(_100759_et));
	(*(_100813_cc))._field_fi=(*(_100743_f));
	if ((_100775_exist != nullptr)) {
		{
			auto expr = &((*(_100775_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa9e2848:;
			if (it != expr_end) {
				jule::I64 _101218_i = it - expr->begin();
				jule::Ptr<_1c0dadb33_InsGeneric> _101225_g = *it;
				{
					(*((*((*(_100743_f))))._field_Generics[_101218_i]))._field_Constraint=(*(_101225_g))._field_Constraint;
				}
				_iter_next_1aa9e2848:;
				++it;
				_101218_i++;
				goto _iter_begin_1aa9e2848;
			}
			_iter_end_1aa9e2848:;
		};
	} else {
		(*(_100813_cc))._field_uniq=true;
	};
	return _1c0caaac9_check(_100813_cc);;
}



inline jule::Bool _1c0d11954_checkConstraintsStruct(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _102147_s, jule::Ptr<_1c0c25406_Token>* _102167_et, jule::Ptr<_1c0c5e3c9_StructIns> _102183_exist) {
	jule::Ptr<_1c0ca9b94_constraintChecker> _102213_cc = _1c0d0cab5_constraintChecker(_self_);;
	(*(_102213_cc))._field_et=(*(_102167_et));
	(*(_102213_cc))._field_si=(*(_102147_s));
	if ((_102183_exist != nullptr)) {
		{
			auto expr = &((*(_102183_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa9e58d4:;
			if (it != expr_end) {
				jule::I64 _102618_i = it - expr->begin();
				jule::Ptr<_1c0dadb33_InsGeneric> _102625_g = *it;
				{
					(*((*((*(_102147_s))))._field_Generics[_102618_i]))._field_Constraint=(*(_102625_g))._field_Constraint;
				}
				_iter_next_1aa9e58d4:;
				++it;
				_102618_i++;
				goto _iter_begin_1aa9e58d4;
			}
			_iter_end_1aa9e58d4:;
		};
	} else {
		(*(_102213_cc))._field_uniq=true;
	};
	return _1c0caaac9_check(_102213_cc);;
}



inline jule::Bool _1c0d11d50_fnEnvironment(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c744aa_FnIns>* _103838_f, jule::Fn<jule::Bool(jule::Ptr<_1c0d04705_Sema>*,jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>*)> _103849_algo) {
	jule::Ptr<_1c0d04705_Sema> _103913_sema = (*((*((*(_103838_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1c0d7a12c_SymbolTable> _104013_old = (*((*((*((*(_103838_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1c0d06e22_setCurrentFile((*((*((*(_103838_f))))._field_Decl))._field_sema.ptr(), _104013_old);
	});;
	jule::Ptr<_1c0d7a12c_SymbolTable> _104213_file = _1c0d0344b_findFile(&((*((*((*((*(_103838_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_103838_f))))._field_Decl))._field_Token))._field_File));;
	if ((_104213_file != nullptr)) {
		_1c0d06e22_setCurrentFile((*((*((*(_103838_f))))._field_Decl))._field_sema.ptr(), _104213_file);
	};
	jule::I64 _104713_size = (*((*(_103838_f))))._field_Generics.len();;
	if ((((*((*(_103838_f))))._field_Decl != nullptr) && ((*((*((*(_103838_f))))._field_Decl))._field_Owner != nullptr))) {
		_104713_size+=(*((*((*((*(_103838_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> _105213_generics = jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>::alloc(0LL, _104713_size);;
	_1c0d030c7_appendGenericTypeAliases(&(_105213_generics), _103838_f);
	jule::Bool _10559_ok = _103849_algo(&(_103913_sema), &(_105213_generics));;
	if ((_103913_sema != _self_)) {
		((*(_self_))._field_errors).append((*(_103913_sema))._field_errors);;
		(*(_103913_sema))._field_errors=nullptr;
	};
	return _10559_ok;;
}



inline void _1c0d12108_checkFnParamKind(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c7350e_ParamIns>* _106541_p) {
	(*((*((*(_106541_p))))._field_Kind))._field_Variadic=(*((*((*(_106541_p))))._field_Decl))._field_Variadic;
	if (((*((*((*(_106541_p))))._field_Decl))._field_Reference && (!(_1c0dcba0d_isValidForRef(&((*((*(_106541_p))))._field_Kind)))))) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*((*(_106541_p))))._field_Decl))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_106541_p))))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Bool _1c0d12449_reloadFnInsTypes(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c744aa_FnIns> _107240_f) {
	if ((_1c0c75940_IsBuiltin(_107240_f.ptr()) || _1c0c75bc6_IsAnon(_107240_f.ptr()))) {
		return true;;
	};
	return _1c0d11d50_fnEnvironment(_self_, &(_107240_f), jule::Fn<jule::Bool(jule::Ptr<_1c0d04705_Sema>*,jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>*)>([=](jule::Ptr<_1c0d04705_Sema>* _107643_sema, jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>* _107661_generics) mutable -> jule::Bool {
		jule::Bool _107717_ok = true;;
		{
			auto expr = &((*(_107240_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aaa03a46:;
			if (it != expr_end) {
				jule::Ptr<_1c0c7350e_ParamIns> _107825_p = *it;
				{
					if (_1c0c701ed_IsSelf((*(_107825_p))._field_Decl.ptr())) {
						if (_1c0c70484_IsRef((*(_107825_p))._field_Decl.ptr())) {
							(*(_107825_p))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0dbbb1e_Sptr>(_1c0dbbb1e_Sptr{._field_Elem=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>((*(_107240_f))._field_Owner, 0)})}), 21)});
						} else {
							(*(_107825_p))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>((*(_107240_f))._field_Owner, 0)});
						};
					} else {
						(*(_107825_p))._field_Kind=_1c0d0d467_buildTypeWithGenerics((*(_107643_sema)), &((*((*((*(_107825_p))._field_Decl))._field_Kind))._field_Decl), (*(_107661_generics)), (*(_107240_f))._field_Refers);
						if (((*(_107825_p))._field_Kind != nullptr)) {
							_1c0d12108_checkFnParamKind(_self_, &(_107825_p));
						} else {
							_107717_ok=false;
						};
					};
				}
				_iter_next_1aaa03a46:;
				++it;
				goto _iter_begin_1aaa03a46;
			}
			_iter_end_1aaa03a46:;
		};
		if ((!(_1c0c71a29_IsVoid((*(_107240_f))._field_Decl.ptr())))) {
			(*(_107240_f))._field_Result=_1c0d0d467_buildTypeWithGenerics((*(_107643_sema)), &((*((*((*((*(_107240_f))._field_Decl))._field_Result))._field_Kind))._field_Decl), (*(_107661_generics)), (*(_107240_f))._field_Refers);
			_107717_ok=(((*(_107240_f))._field_Result != nullptr) && _107717_ok);
		};
		return _107717_ok;;
	}));;
}



inline jule::Bool _1c0d12900_checkRefValidityForInitExpr(jule::Ptr<_1c0d04705_Sema> _self_, jule::Bool _110847_leftMut, jule::Ptr<_1c0d80352_Data>* _110867_d, jule::Ptr<_1c0c25406_Token>* _110882_errorToken) {
	if ((!(_1c0d01d95_isValidModelForRef(&((*((*(_110867_d))))._field_Model))))) {
		_1c0d07340_pushErr(_self_.ptr(), (*(_110882_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_110847_leftMut && (!((*((*(_110867_d))))._field_Mutable)))) {
		_1c0d07340_pushErr(_self_.ptr(), (*(_110882_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1c0d12c41_isMutRiskyStruct(_1c0d04705_Sema* _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _112532_s) {
	{
		auto expr = &((*((*(_112532_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa0bc5d:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5d829_FieldIns> *_112616_f = it;
			{
				if ((((*((*((*(_112616_f))))._field_Decl))._field_Mutable && _1c0db1d9a_Mutable((*((*(_112616_f))))._field_Kind.ptr())) && _1c0d07a9e_isAccessibleDefine(_self_, (*((*((*(_112616_f))))._field_Decl))._field_Public, (*((*((*(_112616_f))))._field_Decl))._field_Token))) {
					return true;;
				};
			}
			_iter_next_1aaa0bc5d:;
			++it;
			goto _iter_begin_1aaa0bc5d;
		}
		_iter_end_1aaa0bc5d:;
	};
	return false;;
}



inline jule::Bool _1c0d1335c_checkValidityForInitExpr(jule::Ptr<_1c0d04705_Sema> _self_, jule::Bool _115244_leftMut, jule::Bool _115259_leftRef, jule::Ptr<_1c0db0519_TypeKind>* _115310_leftKind, jule::Ptr<_1c0d80352_Data>* _115336_d, jule::Ptr<_1c0c25406_Token>* _115351_errorToken) {
	if ((_115244_leftMut && (!((*((*(_115336_d))))._field_Mutable)))) {
		if (_1c0db1d9a_Mutable((*((*(_115336_d))))._field_Kind.ptr())) {
			_1c0d07340_pushErr(_self_.ptr(), (*(_115351_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_115336_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1c0c5e3c9_StructIns> _116113_s = _1c0db41dd_Struct((*((*(_115336_d))))._field_Kind.ptr());;
		if (((_116113_s != nullptr) && _1c0d12c41_isMutRiskyStruct(_self_.ptr(), &(_116113_s)))) {
			_1c0d07340_pushErr(_self_.ptr(), (*(_115351_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_115336_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_115259_leftRef) {
		if ((!(_1c0d12900_checkRefValidityForInitExpr(_self_, _115244_leftMut, _115336_d, _115351_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1c0d68e1d_assignTypeChecker> _117213_atc = jule::new_ptr<_1c0d68e1d_assignTypeChecker>(_1c0d68e1d_assignTypeChecker{._field_s=_self_, ._field_d=(*(_115336_d)), ._field_errorToken=(*(_115351_errorToken))});;
	return _1c0d69649_checkValidity(_117213_atc.ptr());;
}



inline jule::Bool _1c0d13758_checkTypeAliasDeclKind(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0dae727_TypeAlias>* _118047_ta, jule::Trait<_1c0dd0050_Lookup> _118067_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0d7a12c_SymbolTable> _118113_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1c0d06e22_setCurrentFile(_self_.ptr(), _118113_old);
	});;
	if (((*((*(_118047_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1c0d7a12c_SymbolTable> _118617_file = _1c0d0344b_findFile(&((*(_self_))._field_files), &((*((*((*(_118047_ta))))._field_Token))._field_File));;
		if ((_118617_file != nullptr)) {
			_1c0d06e22_setCurrentFile(_self_.ptr(), _118617_file);
		};
	};
	__jule_func_result=_1c0d0c82e_checkTypeWithRefers(_self_, &((*((*(_118047_ta))))._field_Kind), _118067_l, nullptr, jule::new_ptr<_1c0dc13d7_referencer>(_1c0dc13d7_referencer{._field_ident=(*((*(_118047_ta))))._field_Ident, ._field_owner=jule::Any((*(_118047_ta)), &__jule_any_type66), ._field_refs=(&((*((*(_118047_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1c0db393a_Arr((*((*((*(_118047_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1c0db393a_Arr((*((*((*(_118047_ta))))._field_Kind))._field_Kind.ptr())))._field_Auto)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*((*((*(_118047_ta))))._field_Kind))._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1c0d13abb_checkTypeAliasDecl(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0dae727_TypeAlias>* _120343_ta, jule::Trait<_1c0dd0050_Lookup> _120363_l) {
	if (_1c0c27d65_IsIgnoreIdent((*((*(_120343_ta))))._field_Ident)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_120343_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1c0d13758_checkTypeAliasDeclKind(_self_, _120343_ta, _120363_l);
}



inline void _1c0d13d74_checkTypeAliasDeclDup(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0dae727_TypeAlias>* _121146_ta) {
	if (_1c0c27d65_IsIgnoreIdent((*((*(_121146_ta))))._field_Ident)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_121146_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1c0d08055_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_121146_ta)))), &((*((*(_121146_ta))))._field_Ident), (*((*(_121146_ta))))._field_Binded)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_121146_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_121146_ta))))._field_Ident, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1c0d13758_checkTypeAliasDeclKind(_self_, _121146_ta, jule::Trait<_1c0dd0050_Lookup>(_self_, 3));
}



inline jule::Bool _1c0d1410a_checkTypeAliasDecls(jule::Ptr<_1c0d04705_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa1dd5d:;
		if (it != expr_end) {
			jule::Ptr<_1c0dae727_TypeAlias> _122421_ta = *it;
			{
				_1c0d13d74_checkTypeAliasDeclDup(_self_, &(_122421_ta));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aaa1dd5d:;
			++it;
			goto _iter_begin_1aaa1dd5d;
		}
		_iter_end_1aaa1dd5d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aaa4b0cc_checkEnumItemsDup(_1c0d04705_Sema* _self_, jule::Slice<jule::Ptr<_1c0c864cd_EnumItem>> _123539_items) {
	{
		auto expr = &(_123539_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa4c3a8:;
		if (it != expr_end) {
			jule::Ptr<_1c0c864cd_EnumItem> *_123616_item = it;
			{
				if (((*((*(_123616_item))))._field_Ident).empty()) {
					goto _iter_next_1aaa4c3a8;
				} else if (_1c0c27d65_IsIgnoreIdent((*((*(_123616_item))))._field_Ident)) {
					_1c0d07340_pushErr(_self_, (*((*(_123616_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_123539_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aaa4d6a6:;
						if (it != expr_end) {
							jule::Ptr<_1c0c864cd_EnumItem> *_124224_citem = it;
							{
								if (((*(_123616_item)) == (*(_124224_citem)))) {
									goto _iter_end_1aaa4d6a6;
								} else if (((*((*(_123616_item))))._field_Ident == (*((*(_124224_citem))))._field_Ident)) {
									_1c0d07340_pushErr(_self_, (*((*(_123616_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_123616_item))))._field_Ident, &__jule_any_type4)}));
									_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1aaa4d6a6;
								};
							}
							_iter_next_1aaa4d6a6:;
							++it;
							goto _iter_begin_1aaa4d6a6;
						}
						_iter_end_1aaa4d6a6:;
					};
				};
			}
			_iter_next_1aaa4c3a8:;
			++it;
			goto _iter_begin_1aaa4c3a8;
		}
		_iter_end_1aaa4c3a8:;
	};
}

inline void _1aaa57e1e_checkEnumItemsDup(_1c0d04705_Sema* _self_, jule::Slice<jule::Ptr<_1c0c8817d_TypeEnumItem>> _123539_items) {
	{
		auto expr = &(_123539_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa591a6:;
		if (it != expr_end) {
			jule::Ptr<_1c0c8817d_TypeEnumItem> *_123616_item = it;
			{
				if (((*((*(_123616_item))))._field_Ident).empty()) {
					goto _iter_next_1aaa591a6;
				} else if (_1c0c27d65_IsIgnoreIdent((*((*(_123616_item))))._field_Ident)) {
					_1c0d07340_pushErr(_self_, (*((*(_123616_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_123539_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aaa5a4a4:;
						if (it != expr_end) {
							jule::Ptr<_1c0c8817d_TypeEnumItem> *_124224_citem = it;
							{
								if (((*(_123616_item)) == (*(_124224_citem)))) {
									goto _iter_end_1aaa5a4a4;
								} else if (((*((*(_123616_item))))._field_Ident == (*((*(_124224_citem))))._field_Ident)) {
									_1c0d07340_pushErr(_self_, (*((*(_123616_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_123616_item))))._field_Ident, &__jule_any_type4)}));
									_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1aaa5a4a4;
								};
							}
							_iter_next_1aaa5a4a4:;
							++it;
							goto _iter_begin_1aaa5a4a4;
						}
						_iter_end_1aaa5a4a4:;
					};
				};
			}
			_iter_next_1aaa591a6:;
			++it;
			goto _iter_begin_1aaa591a6;
		}
		_iter_end_1aaa591a6:;
	};
}



inline void _1c0d1466b_checkEnumItemsStr(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c8704a_Enum>* _125542_e) {
	jule::Ptr<_1c0d82046_Eval> _125613_eval = _1c0d0e7dc_eval(_self_, jule::Trait<_1c0dd0050_Lookup>(_self_, 3));;
	{
		auto expr = &((*((*(_125542_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa20b51:;
		if (it != expr_end) {
			jule::Ptr<_1c0c864cd_EnumItem> _125721_item = *it;
			{
				if (_1c0c86885_AutoExpr(_125721_item.ptr())) {
					(*(_125721_item))._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Constant=static__203645387_NewStr((*(_125721_item))._field_Ident)})});
					(*((*((*(_125721_item))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*(_125721_item))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1c0d80352_Data> _126621_d = _1c0da0020_evalExpr(_125613_eval, (*((*(_125721_item))._field_Value))._field_Expr);;
					if ((_126621_d == nullptr)) {
						goto _iter_next_1aaa20b51;
					};
					if ((!(_1c0d80c26_IsConst(_126621_d.ptr())))) {
						_1c0d07340_pushErr(_self_.ptr(), (*((*((*(_125721_item))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1c0d0ed4d_checkAssignType(_self_, false, &((*((*((*(_125542_e))))._field_Kind))._field_Kind), &(_126621_d), (*(_125721_item))._field_Token);
					(*((*(_125721_item))._field_Value))._field_Data=_126621_d;
				};
			}
			_iter_next_1aaa20b51:;
			++it;
			goto _iter_begin_1aaa20b51;
		}
		_iter_end_1aaa20b51:;
	};
}



inline void _1aaa2ac27_checkEnumItemInt(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0d82046_Eval>* _128146_eval, jule::Ptr<_1c0c8704a_Enum>* _128164_e, jule::Ptr<_1c0db80e3_Prim>* _128175_prim, jule::Ptr<_1c0c864cd_EnumItem>* _128193_item, jule::U64* _1281115_n) {
	if (_1c0c86885_AutoExpr((*(_128193_item)).ptr())) {
		(*((*(_128193_item))))._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()});
		{
			
{
				_case_begin_1aaa2da4e:;
				{
					(*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant=static__203644d04_NewU64((*(_1281115_n)));
				}
			}
			_match_end_1aaa2d972:;
		};
		(*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1c0d80352_Data> _129617_d = _1c0da0020_evalExpr((*(_128146_eval)), (*((*((*(_128193_item))))._field_Value))._field_Expr);;
		if ((_129617_d == nullptr)) {
			return;;
		};
		if ((!(_1c0d80c26_IsConst(_129617_d.ptr())))) {
			_1c0d07340_pushErr(_self_.ptr(), (*((*((*((*(_128193_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1c0d0ed4d_checkAssignType(_self_, false, &((*((*((*(_128164_e))))._field_Kind))._field_Kind), &(_129617_d), (*((*(_128193_item))))._field_Token);
		(*((*((*(_128193_item))))._field_Value))._field_Data=_129617_d;
		{
			
{
				_case_begin_1aaa336e1:;
				{
					(*(_1281115_n))=static_cast<jule::U64>(_203646256_ReadU64((*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1aaa33603:;
		};
	};
}

inline void _1aaa3b1cc_checkEnumItemInt(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0d82046_Eval>* _128146_eval, jule::Ptr<_1c0c8704a_Enum>* _128164_e, jule::Ptr<_1c0db80e3_Prim>* _128175_prim, jule::Ptr<_1c0c864cd_EnumItem>* _128193_item, jule::I64* _1281115_n) {
	if (_1c0c86885_AutoExpr((*(_128193_item)).ptr())) {
		(*((*(_128193_item))))._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()});
		{
			
{
				_case_begin_1aaa3de38:;
				{
					(*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant=static__203644a3a_NewI64((*(_1281115_n)));
				}
			}
			_match_end_1aaa3ddd3:;
		};
		(*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1c0d80352_Data> _129617_d = _1c0da0020_evalExpr((*(_128146_eval)), (*((*((*(_128193_item))))._field_Value))._field_Expr);;
		if ((_129617_d == nullptr)) {
			return;;
		};
		if ((!(_1c0d80c26_IsConst(_129617_d.ptr())))) {
			_1c0d07340_pushErr(_self_.ptr(), (*((*((*((*(_128193_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1c0d0ed4d_checkAssignType(_self_, false, &((*((*((*(_128164_e))))._field_Kind))._field_Kind), &(_129617_d), (*((*(_128193_item))))._field_Token);
		(*((*((*(_128193_item))))._field_Value))._field_Data=_129617_d;
		{
			
{
				_case_begin_1aaa43c62:;
				{
					(*(_1281115_n))=static_cast<jule::I64>(_203645ec0_ReadI64((*((*((*((*(_128193_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1aaa43beb:;
		};
	};
}



inline void _1aaa274e8_checkEnumItemsInt1(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0db80e3_Prim>* _131644_prim, jule::Ptr<_1c0c8704a_Enum>* _131662_e) {
	jule::U64 _131713_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1aaa29220:;
			{
				_131713_max=static_cast<jule::U64>(_20363cbed_MaxU(_1c0db8434_Str((*(_131644_prim)).ptr())));
			}
		}
		_match_end_1aaa28ad2:;
	};
	jule::Ptr<_1c0d82046_Eval> _132713_eval = _1c0d0e7dc_eval(_self_, jule::Trait<_1c0dd0050_Lookup>(_self_, 3));;
	jule::U64 _132813_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1c0c864cd_EnumItem> _132913_first = (*((*(_131662_e))))._field_Items[0LL];;
	_1aaa2ac27_checkEnumItemInt(_self_, &(_132713_eval), _131662_e, _131644_prim, &(_132913_first), &(_132813_n));
	if (((*((*(_132913_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1aaa33ceb:;
				{
					_132813_n=static_cast<jule::U64>(_203647026_AsU64((*((*((*(_132913_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1aaa2bee2:;
		};
	};
	{
		auto expr = (*((*(_131662_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1aaa30666:;
		if (it != expr_end) {
			jule::Ptr<_1c0c864cd_EnumItem> _134121_item = *it;
			{
				if (((_1c0c86885_AutoExpr(_134121_item.ptr()) && (_132813_n > 0LLU)) && ((_131713_max - _132813_n) <= 0LLU))) {
					_1c0d07340_pushErr(_self_.ptr(), (*(_134121_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1aaa30666;
				};
				(_132813_n)++;
				_1aaa2ac27_checkEnumItemInt(_self_, &(_132713_eval), _131662_e, _131644_prim, &(_134121_item), &(_132813_n));
			}
			_iter_next_1aaa30666:;
			++it;
			goto _iter_begin_1aaa30666;
		}
		_iter_end_1aaa30666:;
	};
}

inline void _1aaa35407_checkEnumItemsInt1(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0db80e3_Prim>* _131644_prim, jule::Ptr<_1c0c8704a_Enum>* _131662_e) {
	jule::I64 _131713_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1aaa394b6:;
			{
				_131713_max=static_cast<jule::I64>(_20363c934_MaxI(_1c0db8434_Str((*(_131644_prim)).ptr())));
			}
		}
		_match_end_1aaa38e00:;
	};
	jule::Ptr<_1c0d82046_Eval> _132713_eval = _1c0d0e7dc_eval(_self_, jule::Trait<_1c0dd0050_Lookup>(_self_, 3));;
	jule::I64 _132813_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1c0c864cd_EnumItem> _132913_first = (*((*(_131662_e))))._field_Items[0LL];;
	_1aaa3b1cc_checkEnumItemInt(_self_, &(_132713_eval), _131662_e, _131644_prim, &(_132913_first), &(_132813_n));
	if (((*((*(_132913_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1aaa3a3da:;
				{
					_132813_n=static_cast<jule::I64>(_203646c90_AsI64((*((*((*(_132913_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_1aaa3931d:;
		};
	};
	{
		auto expr = (*((*(_131662_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1aaa45912:;
		if (it != expr_end) {
			jule::Ptr<_1c0c864cd_EnumItem> _134121_item = *it;
			{
				if (((_1c0c86885_AutoExpr(_134121_item.ptr()) && (_132813_n > 0LL)) && ((_131713_max - _132813_n) <= 0LL))) {
					_1c0d07340_pushErr(_self_.ptr(), (*(_134121_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1aaa45912;
				};
				(_132813_n)++;
				_1aaa3b1cc_checkEnumItemInt(_self_, &(_132713_eval), _131662_e, _131644_prim, &(_134121_item), &(_132813_n));
			}
			_iter_next_1aaa45912:;
			++it;
			goto _iter_begin_1aaa45912;
		}
		_iter_end_1aaa45912:;
	};
}



inline void _1c0d1531a_checkEnumItemsInt(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c8704a_Enum>* _135142_e) {
	jule::Ptr<_1c0db80e3_Prim> _13529_prim = _1c0db2b6a_Prim((*((*((*(_135142_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_203643440_IsSigInt((*(_13529_prim))._field_Kind)) {
			_case_begin_1aaa371c8:;
			{
				_1aaa35407_checkEnumItemsInt1(_self_, &(_13529_prim), _135142_e);
			}
		}
		else {
			_case_begin_1aaa26c34:;
			{
				_1aaa274e8_checkEnumItemsInt1(_self_, &(_13529_prim), _135142_e);
			}
		}
		_match_end_1aaa26bbd:;
	};
}



inline void _1c0d155c3_checkEnumDecl(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c8704a_Enum>* _136138_e) {
	if (_1c0c27d65_IsIgnoreIdent((*((*(_136138_e))))._field_Ident)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_136138_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c0d08055_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_136138_e)))), &((*((*(_136138_e))))._field_Ident), false)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_136138_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136138_e))))._field_Ident, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_136138_e))))._field_Items.len() == 0LL)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_136138_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_136138_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1aaa4b0cc_checkEnumItemsDup(_self_.ptr(), (*((*(_136138_e))))._field_Items);
	if (((*((*(_136138_e))))._field_Kind != nullptr)) {
		if ((!(_1c0d0ceb1_checkType(_self_, &((*((*(_136138_e))))._field_Kind), jule::Trait<_1c0dd0050_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*((*(_136138_e))))._field_Kind=(*(_1c0e9ee44_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1c0db80e3_Prim> _138513_t = _1c0db2b6a_Prim((*((*((*(_136138_e))))._field_Kind))._field_Kind.ptr());;
	if ((_138513_t == nullptr)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_136138_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1c0dbb57a_IsStr(_138513_t.ptr())) {
			_case_begin_1aaa52b83:;
			{
				_1c0d1466b_checkEnumItemsStr(_self_, _136138_e);
			}
		}
		else if (_203643a17_IsInt(_1c0db8434_Str(_138513_t.ptr()))) {
			_case_begin_1aaa52886:;
			{
				_1c0d1531a_checkEnumItemsInt(_self_, _136138_e);
			}
		}
		else {
			_case_begin_1aaa52820:;
			{
				_1c0d07340_pushErr(_self_.ptr(), (*((*(_136138_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aaa51e5c:;
	};
}



inline void _1c0d1587b_checkTypeEnumDecl(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c88755_TypeEnum>* _140242_e) {
	if (_1c0c27d65_IsIgnoreIdent((*((*(_140242_e))))._field_Ident)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_140242_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c0d08055_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_140242_e)))), &((*((*(_140242_e))))._field_Ident), false)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_140242_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_140242_e))))._field_Ident, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_140242_e))))._field_Items.len() == 0LL)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_140242_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_140242_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1aaa57e1e_checkEnumItemsDup(_self_.ptr(), (*((*(_140242_e))))._field_Items);
	{
		auto expr = &((*((*(_140242_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa547bc:;
		if (it != expr_end) {
			jule::Ptr<_1c0c8817d_TypeEnumItem> _141621_item = *it;
			{
				if (((*(_141621_item))._field_Kind == nullptr)) {
					_1c0d07340_pushErr(_self_.ptr(), (*(_141621_item))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1aaa547bc;
				};
				jule::Bool _142113_ok = _1c0d0ceb1_checkType(_self_, &((*(_141621_item))._field_Kind), jule::Trait<_1c0dd0050_Lookup>(_self_, 3));;
				if ((!(_142113_ok))) {
					goto _iter_next_1aaa547bc;
				};
				jule::Ptr<_1c0db80e3_Prim> _142513_p = _1c0db2b6a_Prim((*((*(_141621_item))._field_Kind))._field_Kind.ptr());;
				if (((_142513_p != nullptr) && _1c0dbb811_IsAny(_142513_p.ptr()))) {
					_1c0d07340_pushErr(_self_.ptr(), (*(_141621_item))._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1aaa547bc:;
			++it;
			goto _iter_begin_1aaa547bc;
		}
		_iter_end_1aaa547bc:;
	};
	if (((*((*(_140242_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1c0c8817d_TypeEnumItem> _143117_item = (*((*(_140242_e))))._field_Items[0LL];;
		_1c0db0519_TypeKind _143213_tk = _1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>((*(_140242_e)), 4)};;
		if ((((*((*(_143117_item))._field_Kind))._field_Kind != nullptr) && _1c0db0c23_Equal((*((*(_143117_item))._field_Kind))._field_Kind, ((jule::Ptr<_1c0db0519_TypeKind>)((&(_143213_tk))))))) {
			_1c0d07340_pushErr(_self_.ptr(), (*(_143117_item))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1c0c88a96_Str((*(_140242_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1c0d15b12_checkEnumDecls(jule::Ptr<_1c0d04705_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa632d1:;
		if (it != expr_end) {
			jule::Ptr<_1c0c8704a_Enum> _144321_e = *it;
			{
				_1c0d155c3_checkEnumDecl(_self_, &(_144321_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aaa632d1:;
			++it;
			goto _iter_begin_1aaa632d1;
		}
		_iter_end_1aaa632d1:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c0d15d98_checkTypeEnumDecls(jule::Ptr<_1c0d04705_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa63cc6:;
		if (it != expr_end) {
			jule::Ptr<_1c0c88755_TypeEnum> _145521_e = *it;
			{
				_1c0d1587b_checkTypeEnumDecl(_self_, &(_145521_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aaa63cc6:;
			++it;
			goto _iter_begin_1aaa63cc6;
		}
		_iter_end_1aaa63cc6:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c0d161d9_checkDeclGenerics(_1c0d04705_Sema* _self_, jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>>* _146537_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _146537_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa66405:;
		if (it != expr_end) {
			jule::I64 _146713_i = it - expr->begin();
			jule::Ptr<_1c0c47bed_GenericDecl> *_146716_g = it;
			{
				if (_1c0c27d65_IsIgnoreIdent((*((*(_146716_g))))._field_Ident)) {
					_1c0d07340_pushErr(_self_, (*((*(_146716_g))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1aaa66405;
				};
				_julec_label_1aaa67a99:;
				{
					auto expr = _146537_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aaa67c97:;
					if (it != expr_end) {
						jule::I64 _147617_j = it - expr->begin();
						jule::Ptr<_1c0c47bed_GenericDecl> *_147620_ct = it;
						{
							{
								
								if ((_147617_j >= _146713_i)) {
									_case_begin_1aaa688d0:;
									{
										goto _iter_end_1aaa67c97;
									}
								}
								else if (((*((*(_146716_g))))._field_Ident == (*((*(_147620_ct))))._field_Ident)) {
									_case_begin_1aaa68957:;
									{
										_1c0d07340_pushErr(_self_, (*((*(_146716_g))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_146716_g))))._field_Ident, &__jule_any_type4)}));
										_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1aaa67c97;
									}
								}
								_match_end_1aaa687d1:;
							};
						}
						_iter_next_1aaa67c97:;
						++it;
						_147617_j++;
						goto _iter_begin_1aaa67c97;
					}
					_iter_end_1aaa67c97:;
				};
			}
			_iter_next_1aaa66405:;
			++it;
			_146713_i++;
			goto _iter_begin_1aaa66405;
		}
		_iter_end_1aaa66405:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c0d1652a_checkFnDeclParamsDup(_1c0d04705_Sema* _self_, jule::Ptr<_1c0c715a6_Fn>* _149240_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1aaa69628:;
	{
		auto expr = &((*((*(_149240_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa6ac56:;
		if (it != expr_end) {
			jule::I64 _149513_i = it - expr->begin();
			jule::Ptr<_1c0c6ead2_Param> *_149516_p = it;
			{
				{
					auto expr = &((*((*(_149240_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aaa6ac01:;
					if (it != expr_end) {
						jule::Ptr<_1c0c47bed_GenericDecl> *_149720_g = it;
						{
							if (((*((*(_149516_p))))._field_Ident == (*((*(_149720_g))))._field_Ident)) {
								__jule_func_result=false;
								_1c0d07340_pushErr(_self_, (*((*(_149516_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_149516_p))))._field_Ident, &__jule_any_type4)}));
								_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1aaa6ac56;
							};
						}
						_iter_next_1aaa6ac01:;
						++it;
						goto _iter_begin_1aaa6ac01;
					}
					_iter_end_1aaa6ac01:;
				};
				_julec_label_1aaa6b87d:;
				{
					auto expr = &((*((*(_149240_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aaa6c50a:;
					if (it != expr_end) {
						jule::I64 _150717_j = it - expr->begin();
						jule::Ptr<_1c0c6ead2_Param> *_150720_jp = it;
						{
							{
								
								if ((_150717_j >= _149513_i)) {
									_case_begin_1aaa6e353:;
									{
										goto _iter_end_1aaa6c50a;
									}
								}
								else if (_1c0c27d65_IsIgnoreIdent((*((*(_149516_p))))._field_Ident) || _1c0c27d65_IsIgnoreIdent((*((*(_150720_jp))))._field_Ident) || _1c0c2812e_IsAnonIdent((*((*(_149516_p))))._field_Ident) || _1c0c2812e_IsAnonIdent((*((*(_150720_jp))))._field_Ident)) {
									_case_begin_1aaa6e3ca:;
									{
										goto _iter_end_1aaa6c50a;
									}
								}
								else if (((*((*(_149516_p))))._field_Ident == (*((*(_150720_jp))))._field_Ident)) {
									_case_begin_1aaa6e452:;
									{
										__jule_func_result=false;
										_1c0d07340_pushErr(_self_, (*((*(_149516_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_149516_p))))._field_Ident, &__jule_any_type4)}));
										_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1aaa6ac56;
									}
								}
								_match_end_1aaa6e243:;
							};
						}
						_iter_next_1aaa6c50a:;
						++it;
						_150717_j++;
						goto _iter_begin_1aaa6c50a;
					}
					_iter_end_1aaa6c50a:;
				};
			}
			_iter_next_1aaa6ac56:;
			++it;
			_149513_i++;
			goto _iter_begin_1aaa6ac56;
		}
		_iter_end_1aaa6ac56:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c0d1686b_checkFnDeclResultDup(_1c0d04705_Sema* _self_, jule::Ptr<_1c0c715a6_Fn>* _152940_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1c0c71a29_IsVoid((*(_152940_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*((*(_152940_f))))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa727c9:;
		if (it != expr_end) {
			jule::I64 _153613_i = it - expr->begin();
			jule::Ptr<_1c0c25406_Token> *_153616_v = it;
			{
				if ((_1c0c27d65_IsIgnoreIdent((*((*(_153616_v))))._field_Kind) || _1c0c2812e_IsAnonIdent((*((*(_153616_v))))._field_Kind))) {
					goto _iter_next_1aaa727c9;
				};
				{
					auto expr = &((*((*(_152940_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aaa73962:;
					if (it != expr_end) {
						jule::Ptr<_1c0c47bed_GenericDecl> *_154120_g = it;
						{
							if (((*((*(_153616_v))))._field_Kind == (*((*(_154120_g))))._field_Ident)) {
								goto _julec_label_1aaa750b2;
							};
						}
						_iter_next_1aaa73962:;
						++it;
						goto _iter_begin_1aaa73962;
					}
					_iter_end_1aaa73962:;
				};
				{
					auto expr = &((*((*(_152940_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aaa75425:;
					if (it != expr_end) {
						jule::Ptr<_1c0c6ead2_Param> *_154720_p = it;
						{
							if (((*((*(_153616_v))))._field_Kind == (*((*(_154720_p))))._field_Ident)) {
								goto _julec_label_1aaa750b2;
							};
						}
						_iter_next_1aaa75425:;
						++it;
						goto _iter_begin_1aaa75425;
					}
					_iter_end_1aaa75425:;
				};
				_julec_label_1aaa76679:;
				{
					auto expr = &((*((*((*(_152940_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aaa7659c:;
					if (it != expr_end) {
						jule::I64 _155517_j = it - expr->begin();
						jule::Ptr<_1c0c25406_Token> *_155520_jv = it;
						{
							{
								
								if ((_155517_j >= _153613_i)) {
									_case_begin_1aaa77ba8:;
									{
										goto _iter_end_1aaa7659c;
									}
								}
								else if (((*((*(_155520_jv))))._field_Kind == (*((*(_153616_v))))._field_Kind)) {
									_case_begin_1aaa77c30:;
									{
										goto _julec_label_1aaa750b2;
									}
								}
								_match_end_1aaa77a98:;
							};
						}
						_iter_next_1aaa7659c:;
						++it;
						_155517_j++;
						goto _iter_begin_1aaa7659c;
					}
					_iter_end_1aaa7659c:;
				};
				goto _iter_next_1aaa727c9;
				_julec_label_1aaa750b2:;
				_1c0d07340_pushErr(_self_, (*(_153616_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_153616_v))))._field_Kind, &__jule_any_type4)}));
				_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1aaa727c9:;
			++it;
			_153613_i++;
			goto _iter_begin_1aaa727c9;
		}
		_iter_end_1aaa727c9:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c0d16bac_checkFnVariadicParam(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c715a6_Fn>* _157445_f) {
	if (((*((*(_157445_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1c0c6ead2_Param> _157813_param = (*((*(_157445_f))))._field_Params[((*((*(_157445_f))))._field_Params.len() - 1LL)];;
	if (((*(_157813_param))._field_Variadic && (*(_157813_param))._field_Reference)) {
		_1c0d07340_pushErr(_self_.ptr(), (*(_157813_param))._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1c0d16e65_checkFnDeclPrototype(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c715a6_Fn>* _158745_f) {
	if (((*((*(_158745_f))))._field_Exceptional && (*((*(_158745_f))))._field_Binded)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_158745_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_158745_f))))._field_Exceptional) {
		if (_1c0c72046_IsEntryPoint((*(_158745_f)).ptr())) {
			_1c0d07340_pushErr(_self_.ptr(), (*((*(_158745_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1c0c722cc_IsInit((*(_158745_f)).ptr())) {
			_1c0d07340_pushErr(_self_.ptr(), (*((*(_158745_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1c0d161d9_checkDeclGenerics(_self_.ptr(), &((*((*(_158745_f))))._field_Generics))))) {
			_case_begin_1aaa80001:;
		}
		else if ((!(_1c0d1652a_checkFnDeclParamsDup(_self_.ptr(), _158745_f)))) {
			_case_begin_1aaa80078:;
		}
		else if ((!(_1c0d1686b_checkFnDeclResultDup(_self_.ptr(), _158745_f)))) {
			_case_begin_1aaa80100:;
		}
		else if ((!(_1c0d16bac_checkFnVariadicParam(_self_, _158745_f)))) {
			_case_begin_1aaa80177:;
		}
		_match_end_1aaa7d670:;
	};
}



inline jule::Bool _1c0d1741b_catchTraitInheritCycle(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c84850_Trait> _160942_t1, jule::Ptr<_1c0c84850_Trait> _160958_t2, _21cd5e16e_StrBuilder* _160975_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_160958_t2))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa82421:;
		if (it != expr_end) {
			jule::Ptr<_1c0db76db_TypeSymbol> _161121_i = *it;
			{
				if (((*(_161121_i))._field_Kind == nullptr)) {
					goto _iter_next_1aaa82421;
				};
				jule::Ptr<_1c0c84850_Trait> _161517_t3 = _1c0db4474_Trait((*(_161121_i))._field_Kind.ptr());;
				if ((_160942_t1 == _161517_t3)) {
					_1c0d1c19b_pushCycleError(_self_.ptr(), &((*(_160958_t2))._field_Ident), &((*(_161517_t3))._field_Ident), _160975_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1c0d1741b_catchTraitInheritCycle(_self_, _160942_t1, _161517_t3, _160975_message)))) {
					_1c0d1c19b_pushCycleError(_self_.ptr(), &((*(_160958_t2))._field_Ident), &((*(_161517_t3))._field_Ident), _160975_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aaa82421:;
			++it;
			goto _iter_begin_1aaa82421;
		}
		_iter_end_1aaa82421:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c0d1775c__checkTraitDeclInherits(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c84850_Trait>* _162848_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_162848_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa85a73:;
		if (it != expr_end) {
			jule::I64 _163014_i = it - expr->begin();
			jule::Ptr<_1c0db76db_TypeSymbol> _163021_it = *it;
			{
				if ((!(_1c0d0ceb1_checkType(_self_, &(_163021_it), jule::Trait<_1c0dd0050_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1aaa85a73;
				};
				jule::Ptr<_1c0c84850_Trait> _163517_t2 = _1c0db4474_Trait((*(_163021_it))._field_Kind.ptr());;
				if ((_163517_t2 == nullptr)) {
					_1c0d07340_pushErr(_self_.ptr(), (*((*(_163021_it))._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_162848_t))))._field_Ident, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*(_163021_it))._field_Kind.ptr()), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1aaa85a73;
				};
				{
					auto expr = &((*((*(_162848_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aaa87965:;
					if (it != expr_end) {
						jule::I64 _164117_j = it - expr->begin();
						jule::Ptr<_1c0db76db_TypeSymbol> _164120_it2 = *it;
						{
							if ((_164117_j >= _163014_i)) {
								goto _iter_end_1aaa87965;
							};
							if ((((*(_164120_it2))._field_Kind != nullptr) && _1c0db0c23_Equal((*(_163021_it))._field_Kind, (*(_164120_it2))._field_Kind))) {
								_1c0d07340_pushErr(_self_.ptr(), (*((*(_163021_it))._field_Decl))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_163517_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1aaa87965;
							};
						}
						_iter_next_1aaa87965:;
						++it;
						_164117_j++;
						goto _iter_begin_1aaa87965;
					}
					_iter_end_1aaa87965:;
				};
				if (((*(_162848_t)) == _163517_t2)) {
					_1c0d07340_pushErr(_self_.ptr(), (*((*(_163021_it))._field_Decl))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_162848_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_21cd5e16e_StrBuilder _165521_message = static__21cd5e48d_New(64LL);;
					__jule_func_result=(__jule_func_result && _1c0d1741b_catchTraitInheritCycle(_self_, (*(_162848_t)), _163517_t2, &(_165521_message)));
					if ((_21cd68a91_Len(&_165521_message) > 0LL)) {
						jule::Str _165825_errMsg = _21cd6860c_Str(&_165521_message);;
						_21cd6880a_Clear(&_165521_message);
						_1c0d1c19b_pushCycleError(_self_.ptr(), &((*((*(_162848_t))))._field_Ident), &((*(_163517_t2))._field_Ident), &(_165521_message));
						_165825_errMsg+=_21cd6860c_Str(&_165521_message);
						_1c0d07340_pushErr(_self_.ptr(), (*((*(_163021_it))._field_Decl))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_165825_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1aaa85a73:;
			++it;
			_163014_i++;
			goto _iter_begin_1aaa85a73;
		}
		_iter_end_1aaa85a73:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1c0d17a15_checkTraitDeclInherits(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c84850_Trait>* _166947_t) {
	{
		auto expr = &((*((*(_166947_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa8c7b1:;
		if (it != expr_end) {
			jule::I64 _167014_i = it - expr->begin();
			jule::Ptr<_1c0db76db_TypeSymbol> _167021_it = *it;
			{
				jule::Ptr<_1c0c84850_Trait> _167117_t1 = _1c0db4474_Trait((*(_167021_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_166947_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aaa915b7:;
					if (it != expr_end) {
						jule::I64 _167218_j = it - expr->begin();
						jule::Ptr<_1c0db76db_TypeSymbol> _167225_it2 = *it;
						{
							if ((_167218_j == _167014_i)) {
								goto _iter_next_1aaa915b7;
							};
							jule::Ptr<_1c0c84850_Trait> _167621_t2 = _1c0db4474_Trait((*(_167225_it2))._field_Kind.ptr());;
							{
								auto expr = &((*(_167117_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aaa92b5c:;
								if (it != expr_end) {
									jule::Ptr<_1c0c715a6_Fn> _167729_t1m = *it;
									{
										jule::Ptr<_1c0c715a6_Fn> _167825_t2m = _1c0c854ee_FindMethod(_167621_t2.ptr(), (*(_167729_t1m))._field_Ident);;
										if ((_167825_t2m == nullptr)) {
											goto _iter_next_1aaa92b5c;
										};
										jule::Ptr<_1c0c744aa_FnIns> _168221_t1f = _1c0d10ee7_getTraitCheckFnKind(_self_, &(_167729_t1m));;
										jule::Ptr<_1c0c744aa_FnIns> _168321_t2f = _1c0d10ee7_getTraitCheckFnKind(_self_, &(_167825_t2m));;
										if ((!(_1c0c75423_equalTrait(_168221_t1f, &(_168321_t2f))))) {
											_1c0d07340_pushErr(_self_.ptr(), (*((*(_167021_it))._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_166947_t))))._field_Ident, &__jule_any_type4),jule::Any((*(_167621_t2))._field_Ident, &__jule_any_type4),jule::Any(_1c0c76358_GetKindStr(_168221_t1f.ptr(), true), &__jule_any_type4),jule::Any(_1c0c76358_GetKindStr(_168321_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1aaa92b5c:;
									++it;
									goto _iter_begin_1aaa92b5c;
								}
								_iter_end_1aaa92b5c:;
							};
						}
						_iter_next_1aaa915b7:;
						++it;
						_167218_j++;
						goto _iter_begin_1aaa915b7;
					}
					_iter_end_1aaa915b7:;
				};
			}
			_iter_next_1aaa8c7b1:;
			++it;
			_167014_i++;
			goto _iter_begin_1aaa8c7b1;
		}
		_iter_end_1aaa8c7b1:;
	};
}



inline void _1c0d17cbd_checkTraitDeclMethod(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c715a6_Fn>* _169445_f) {
	if (_1c0c27d65_IsIgnoreIdent((*((*(_169445_f))))._field_Ident)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_169445_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c0c2812e_IsAnonIdent((*((*(_169445_f))))._field_Ident)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_169445_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_169445_f))))._field_sema=_self_;
	_1c0d16e65_checkFnDeclPrototype(_self_, _169445_f);
	jule::Ptr<_1c0c744aa_FnIns> _170213_ins = _1c0c72d16_instance((*(_169445_f)));;
	_1c0d12449_reloadFnInsTypes(_self_, _170213_ins);
	(*(_170213_ins))._field_reloaded=true;
	_1c0c73124_appendInstance((*(_169445_f)).ptr(), &(_170213_ins));
}



inline void _1c0d18076_checkTraitDeclMethods(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c84850_Trait>* _170846_t) {
	{
		auto expr = &((*((*(_170846_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa9959d:;
		if (it != expr_end) {
			jule::I64 _170914_i = it - expr->begin();
			jule::Ptr<_1c0c715a6_Fn> _170921_f = *it;
			{
				_1c0d17cbd_checkTraitDeclMethod(_self_, &(_170921_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1c0c85b81_findMethodInherit((*(_170846_t)).ptr(), &((*(_170921_f))._field_Ident)) != nullptr)) {
					_1c0d07340_pushErr(_self_.ptr(), (*(_170921_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_170921_f))._field_Ident, &__jule_any_type4)}));
					_1c0d076a3_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1aaa9959d;
				};
				_julec_label_1aaa9be1e:;
				{
					auto expr = &((*((*(_170846_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aaa9aaee:;
					if (it != expr_end) {
						jule::I64 _172517_j = it - expr->begin();
						jule::Ptr<_1c0c715a6_Fn> _172520_jf = *it;
						{
							{
								
								if ((_172517_j >= _170914_i)) {
									_case_begin_1aaa9d2d8:;
									{
										goto _iter_end_1aaa9aaee;
									}
								}
								else if (((*(_170921_f))._field_Ident == (*(_172520_jf))._field_Ident)) {
									_case_begin_1aaa9d360:;
									{
										_1c0d07340_pushErr(_self_.ptr(), (*(_170921_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_170921_f))._field_Ident, &__jule_any_type4)}));
										_1c0d076a3_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1aaa9aaee;
									}
								}
								_match_end_1aaa9d1c8:;
							};
						}
						_iter_next_1aaa9aaee:;
						++it;
						_172517_j++;
						goto _iter_begin_1aaa9aaee;
					}
					_iter_end_1aaa9aaee:;
				};
			}
			_iter_next_1aaa9959d:;
			++it;
			_170914_i++;
			goto _iter_begin_1aaa9959d;
		}
		_iter_end_1aaa9959d:;
	};
}



inline void _1c0d1832e_checkTraitDecl(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c84850_Trait>* _174439_t) {
	if (_1c0c27d65_IsIgnoreIdent((*((*(_174439_t))))._field_Ident)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_174439_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c0d08055_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_174439_t)))), &((*((*(_174439_t))))._field_Ident), false)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_174439_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_174439_t))))._field_Ident, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1c0d17a15_checkTraitDeclInherits(_self_, _174439_t);
	_1c0d18076_checkTraitDeclMethods(_self_, _174439_t);
}



inline jule::Bool _1c0d185b5_checkTraitDecls(jule::Ptr<_1c0d04705_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaaa3145:;
		if (it != expr_end) {
			jule::Ptr<_1c0c84850_Trait> _175821_t = *it;
			{
				_1c0d1832e_checkTraitDecl(_self_, &(_175821_t));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aaaa3145:;
			++it;
			goto _iter_begin_1aaaa3145;
		}
		_iter_end_1aaaa3145:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c0d189b1_checkTraitImplMethods(_1c0d04705_Sema* _self_, jule::Ptr<_1c0c84850_Trait>* _176845_base, jule::Ptr<_1c0cabbc9_Impl>* _176860_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_176860_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaaa4c7e:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> *_177016_f = it;
			{
				if ((_1c0c854ee_FindMethod((*(_176845_base)).ptr(), (*((*(_177016_f))))._field_Ident) == nullptr)) {
					_1c0d07340_pushErr(_self_, (*((*(_177016_f))))._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_176845_base))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_177016_f))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1aaaa4c7e:;
			++it;
			goto _iter_begin_1aaaa4c7e;
		}
		_iter_end_1aaaa4c7e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c0d18dac_implToStruct(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c5b64b_Struct>* _177937_dest, jule::Ptr<_1c0cabbc9_Impl>* _177957_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_177957_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaaa73d0:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _178321_f = *it;
			{
				if (((_1c0c5c2b7_FindMethod((*(_177937_dest)).ptr(), (*(_178321_f))._field_Ident, (*(_178321_f))._field_Statically) != nullptr) || (_1c0c5c949_FindField((*(_177937_dest)).ptr(), (*(_178321_f))._field_Ident) != nullptr))) {
					_1c0d07340_pushErr(_self_.ptr(), (*(_178321_f))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_177937_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_178321_f))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1aaaa73d0;
				};
				if ((((*((*(_177937_dest))))._field_Generics.len() > 0LL) && ((*(_178321_f))._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*(_178321_f))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aaaaa2c3:;
						if (it != expr_end) {
							jule::Ptr<_1c0c47bed_GenericDecl> _179124_fg = *it;
							{
								{
									auto expr = &((*((*(_177937_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1aaaaab97:;
									if (it != expr_end) {
										jule::Ptr<_1c0c47bed_GenericDecl> _179228_dg = *it;
										{
											if (((*(_179124_fg))._field_Ident == (*(_179228_dg))._field_Ident)) {
												_1c0d07340_pushErr(_self_.ptr(), (*(_179124_fg))._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1aaaaab97:;
										++it;
										goto _iter_begin_1aaaaab97;
									}
									_iter_end_1aaaaab97:;
								};
							}
							_iter_next_1aaaaa2c3:;
							++it;
							goto _iter_begin_1aaaaa2c3;
						}
						_iter_end_1aaaaa2c3:;
					};
				};
				_1c0d083b8_checkDirectives(_self_, &((*(_178321_f))._field_Directives), jule::Any(_178321_f, &__jule_any_type64));
				(*(_178321_f))._field_sema=_self_;
				(*(_178321_f))._field_Owner=(*(_177937_dest));
				{ jule::Slice<jule::Ptr<_1c0c715a6_Fn>> &__jule_push_dest = (*((*(_177937_dest))))._field_Methods; __jule_push_dest.push(_178321_f); };
			}
			_iter_next_1aaaa73d0:;
			++it;
			goto _iter_begin_1aaaa73d0;
		}
		_iter_end_1aaaa73d0:;
	};
	{
		auto expr = &((*((*(_177957_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaaa72ae:;
		if (it != expr_end) {
			jule::Ptr<_1c0d2b94c_Var> _180821_v = *it;
			{
				;
				if (((_1c0c5c2b7_FindMethod((*(_177937_dest)).ptr(), (*(_180821_v))._field_Ident, true) != nullptr) || (_1c0c5c608_FindStatic((*(_177937_dest)).ptr(), (*(_180821_v))._field_Ident) != nullptr))) {
					_1c0d07340_pushErr(_self_.ptr(), (*(_180821_v))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_177937_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_180821_v))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1aaaa72ae;
				};
				{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = (*((*(_177937_dest))))._field_Statics; __jule_push_dest.push(_180821_v); };
			}
			_iter_next_1aaaa72ae:;
			++it;
			goto _iter_begin_1aaaa72ae;
		}
		_iter_end_1aaaa72ae:;
	};
	return __jule_func_result;;
}



inline void _1c0d19165_implTrait(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0cabbc9_Impl>* _182134_decl) {
	jule::Ptr<_1c0db0519_TypeKind> _182213_base_t = _1c0d0dae9_selectType(_self_, &((*((*(_182134_decl))))._field_Base));;
	if ((_182213_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0c84850_Trait> _182613_base = _1c0db4474_Trait(_182213_base_t.ptr());;
	if ((_182613_base == nullptr)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*((*(_182134_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str(_182213_base_t.ptr()), &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_.ptr(), jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0db0519_TypeKind> _183313_destT = _1c0d0dae9_selectType(_self_, &((*((*(_182134_decl))))._field_Dest));;
	if ((_183313_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0c5e3c9_StructIns> _183713_destS = _1c0db41dd_Struct(_183313_destT.ptr());;
	if ((_183713_destS == nullptr)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*((*(_182134_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str(_183313_destT.ptr()), &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0c5b64b_Struct> _184413_dest = (*(_183713_destS))._field_Decl;;
	if ((_1c0c2b341_Dir((*((*(_184413_dest))._field_Token))._field_File.ptr()) != _1c0c2b341_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*((*(_182134_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1c0d29c36_pushImplemented(_182613_base, &(_184413_dest));
	_1c0d2a022_pushImplements(&(_184413_dest), _182613_base);
	if (((*((*(_182134_decl))))._field_Statics.len() > 0LL)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*((*(_182134_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1c0d189b1_checkTraitImplMethods(_self_.ptr(), &(_182613_base), _182134_decl)))) {
			_case_begin_1aaabe491:;
		}
		else if ((!(_1c0d18dac_implToStruct(_self_, &(_184413_dest), _182134_decl)))) {
			_case_begin_1aaabe518:;
		}
		_match_end_1aaabb9cc:;
	};
}



inline void _1c0d1941d_implStruct(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0cabbc9_Impl>* _186435_decl) {
	jule::Ptr<_1c0db0519_TypeKind> _186513_destT = _1c0d0dae9_selectType(_self_, &((*((*(_186435_decl))))._field_Dest));;
	if ((_186513_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0c5e3c9_StructIns> _186913_destS = _1c0db41dd_Struct(_186513_destT.ptr());;
	if ((_186913_destS == nullptr)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*((*(_186435_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str(_186513_destT.ptr()), &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0c5b64b_Struct> _187613_dest = (*(_186913_destS))._field_Decl;;
	if ((_1c0c2b341_Dir((*((*(_187613_dest))._field_Token))._field_File.ptr()) != _1c0c2b341_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*((*(_186435_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1c0d18dac_implToStruct(_self_, &(_187613_dest), _186435_decl)))) {
			_case_begin_1aaac4a4b:;
		}
		_match_end_1aaac3231:;
	};
}



inline void _1c0d196c6_implImpl(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0cabbc9_Impl>* _188833_decl) {
	{
		
		if (_1c0cac092_IsTraitImpl((*(_188833_decl)).ptr())) {
			_case_begin_1aaac562e:;
			{
				_1c0d19165_implTrait(_self_, _188833_decl);
			}
		}
		else if (_1c0cac328_IsStructImpl((*(_188833_decl)).ptr())) {
			_case_begin_1aaac56a6:;
			{
				_1c0d1941d_implStruct(_self_, _188833_decl);
			}
		}
		_match_end_1aaac551e:;
	};
}



inline void _1c0d19a39_checkVarDecl(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0d2b94c_Var>* _189937_decl, jule::Trait<_1c0dd0050_Lookup> _189953_l) {
	if (_1c0c27d65_IsIgnoreIdent((*((*(_189937_decl))))._field_Ident)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1c0d2c068_IsTypeInferred((*(_189937_decl)).ptr())) {
		if ((!(_1c0d2bcd2_IsInitialized((*(_189937_decl)).ptr())))) {
			_1c0d07340_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1c0d0ceb1_checkType(_self_, &((*((*(_189937_decl))))._field_Kind), _189953_l);
	};
	if ((*((*(_189937_decl))))._field_Reference) {
		if ((*((*(_189937_decl))))._field_Constant) {
			_1c0d07340_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_189937_decl))))._field_Statically) {
			_1c0d07340_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1c0d2bcd2_IsInitialized((*(_189937_decl)).ptr())))) {
		if ((*((*(_189937_decl))))._field_Constant) {
			_1c0d07340_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_189937_decl))))._field_Statically) {
			_1c0d07340_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_189937_decl))))._field_Reference) {
			_1c0d07340_pushErr(_self_.ptr(), (*((*(_189937_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1c0d19ce2_checkGlobalVarDecl(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0d2b94c_Var>* _193643_decl) {
	if (_1c0d08055_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_193643_decl)))), &((*((*(_193643_decl))))._field_Ident), (*((*(_193643_decl))))._field_Binded)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_193643_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_193643_decl))))._field_Ident, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_193643_decl))))._field_Binded && (*((*(_193643_decl))))._field_Constant)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_193643_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_193643_decl))))._field_Binded)) && (!((*((*(_193643_decl))))._field_Constant))) && (!((*((*(_193643_decl))))._field_Statically)))) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_193643_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1c0d076a3_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1c0d083b8_checkDirectives(_self_, &((*((*(_193643_decl))))._field_Directives), jule::Any((*(_193643_decl)), &__jule_any_type8));
	_1c0d19a39_checkVarDecl(_self_, _193643_decl, jule::Trait<_1c0dd0050_Lookup>(_self_, 3));
}



inline jule::Bool _1c0d1a078_checkGlobalDecls(jule::Ptr<_1c0d04705_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaad3252:;
		if (it != expr_end) {
			jule::Ptr<_1c0d2b94c_Var> _195421_decl = *it;
			{
				_1c0d19ce2_checkGlobalVarDecl(_self_, &(_195421_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aaad3252:;
			++it;
			goto _iter_begin_1aaad3252;
		}
		_iter_end_1aaad3252:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c0d1a474_checkStructTraitImpl(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c5b64b_Struct>* _196445_strct, jule::Ptr<_1c0c84850_Trait>* _196466_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_196466_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaad4d7a:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _196521_tf = *it;
			{
				jule::Bool _196617_exist = false;;
				jule::Ptr<_1c0c715a6_Fn> _196717_sf = _1c0c5c2b7_FindMethod((*(_196445_strct)).ptr(), (*(_196521_tf))._field_Ident, (*(_196521_tf))._field_Statically);;
				jule::Ptr<_1c0c744aa_FnIns> _196813_tfK = _1c0d10ee7_getTraitCheckFnKind(_self_, &(_196521_tf));;
				if ((_196717_sf != nullptr)) {
					jule::Ptr<_1c0c744aa_FnIns> _197021_sfK = _1c0d10ee7_getTraitCheckFnKind(_self_, &(_196717_sf));;
					_196617_exist=_1c0c75423_equalTrait(_196813_tfK, &(_197021_sfK));
				};
				if (_196617_exist) {
					jule::Ptr<_1c0c39e10_Directive> _197417_d = _1c0da8930_findDirective(&((*(_196717_sf))._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_197417_d != nullptr)) {
						_1c0d07340_pushErr(_self_.ptr(), (*(_197417_d))._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1c0d07340_pushErr(_self_.ptr(), (*((*(_196445_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_196466_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1c0c76358_GetKindStr(_196813_tfK.ptr(), true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1aaad4d7a:;
			++it;
			goto _iter_begin_1aaad4d7a;
		}
		_iter_end_1aaad4d7a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c0d1a7b5_checkStructImpls(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c5b64b_Struct>* _198841_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_198841_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaada248:;
		if (it != expr_end) {
			jule::Ptr<_1c0c84850_Trait> _199021_trt = *it;
			{
				__jule_func_result=(_1c0d1a474_checkStructTraitImpl(_self_, _198841_s, &(_199021_trt)) && __jule_func_result);
			}
			_iter_next_1aaada248:;
			++it;
			goto _iter_begin_1aaada248;
		}
		_iter_end_1aaada248:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c0d1ab06_checkStructFields(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c5b64b_Struct>* _199642_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_199642_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaadb6bc:;
		if (it != expr_end) {
			jule::Ptr<_1c0c58758_Field> _199821_f = *it;
			{
				(*(_199821_f))._field_Owner=(*(_199642_st));
				{
					auto expr = &((*((*(_199642_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aaadc415:;
					if (it != expr_end) {
						jule::Ptr<_1c0c58758_Field> _200020_cf = *it;
						{
							if ((_199821_f == _200020_cf)) {
								goto _iter_end_1aaadc415;
							} else if (((*(_199821_f))._field_Ident == (*(_200020_cf))._field_Ident)) {
								_1c0d07340_pushErr(_self_.ptr(), (*(_199821_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_199821_f))._field_Ident, &__jule_any_type4)}));
								_1c0d076a3_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1aaadc415:;
						++it;
						goto _iter_begin_1aaadc415;
					}
					_iter_end_1aaadc415:;
				};
			}
			_iter_next_1aaadb6bc:;
			++it;
			goto _iter_begin_1aaadb6bc;
		}
		_iter_end_1aaadb6bc:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1c0d1adae_checkStructDecl(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c5b64b_Struct>* _201340_s) {
	if (_1c0c27d65_IsIgnoreIdent((*((*(_201340_s))))._field_Ident)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_201340_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c0d08055_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_201340_s)))), &((*((*(_201340_s))))._field_Ident), (*((*(_201340_s))))._field_Binded)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_201340_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_201340_s))))._field_Ident, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1c0d083b8_checkDirectives(_self_, &((*((*(_201340_s))))._field_Directives), jule::Any((*(_201340_s)), &__jule_any_type65));
	{
		
		if ((!(_1c0d161d9_checkDeclGenerics(_self_.ptr(), &((*((*(_201340_s))))._field_Generics))))) {
			_case_begin_1aaae22a5:;
		}
		else if ((!(_1c0d1ab06_checkStructFields(_self_, _201340_s)))) {
			_case_begin_1aaae231b:;
		}
		else if ((!(_1c0d1a7b5_checkStructImpls(_self_, _201340_s)))) {
			_case_begin_1aaae2382:;
		}
		else if ((!(_1c0d1b9e7_checkFuncDeclsBy(_self_, &((*((*(_201340_s))))._field_Methods))))) {
			_case_begin_1aaae2409:;
		}
		_match_end_1aaae1ccc:;
	};
}



inline jule::Bool _1c0d1b145_checkStructDecls(jule::Ptr<_1c0d04705_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaae41a8:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5b64b_Struct> _203321_s = *it;
			{
				_1c0d1adae_checkStructDecl(_self_, &(_203321_s));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aaae41a8:;
			++it;
			goto _iter_begin_1aaae41a8;
		}
		_iter_end_1aaae41a8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c0d1b3ed_checkAnonFuncDecl(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c715a6_Fn>* _204342_f) {
	(*((*(_204342_f))))._field_sema=_self_;
	_1c0d16e65_checkFnDeclPrototype(_self_, _204342_f);
}



inline void _1c0d1b6a6_checkFuncDecl(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c715a6_Fn>* _204838_f) {
	if (_1c0c27d65_IsIgnoreIdent((*((*(_204838_f))))._field_Ident)) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_204838_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c0c72563_IsAnon((*(_204838_f)).ptr())) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_204838_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1c0d083b8_checkDirectives(_self_, &((*((*(_204838_f))))._field_Directives), jule::Any((*(_204838_f)), &__jule_any_type64));
	_1c0d1b3ed_checkAnonFuncDecl(_self_, _204838_f);
	if ((((*((*(_204838_f))))._field_Owner == nullptr) && _1c0d08055_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_204838_f)))), &((*((*(_204838_f))))._field_Ident), (*((*(_204838_f))))._field_Binded))) {
		if ((*((*(_204838_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1c0c715a6_Fn> _206017_init = _1c0d05c89_FindFn(_self_.ptr(), jule::Str::lit("init", 4), false);;
			if ((_206017_init != nullptr)) {
				return;;
			};
		};
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_204838_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_204838_f))))._field_Ident, &__jule_any_type4)}));
		_1c0d076a3_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c0d1b9e7_checkFuncDeclsBy(jule::Ptr<_1c0d04705_Sema> _self_, jule::Slice<jule::Ptr<_1c0c715a6_Fn>>* _207041_funcs) {
	{
		auto expr = _207041_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaaeb644:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _207121_f = *it;
			{
				_1c0d1b6a6_checkFuncDecl(_self_, &(_207121_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1aaaeb644:;
			++it;
			goto _iter_begin_1aaaeb644;
		}
		_iter_end_1aaaeb644:;
	};
	return true;;
}



inline jule::Bool _1c0d1bc7d_checkFuncDecls(jule::Ptr<_1c0d04705_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1c0d1b9e7_checkFuncDeclsBy(_self_, &((*((*(_self_))._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1c0d1c19b_pushCycleError(_1c0d04705_Sema* _self_, jule::Str* _208630_st1, jule::Str* _208641_st2, _21cd5e16e_StrBuilder* _208656_message) {
	;
	jule::Str _20889_refersTo = _21ce0cccd_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_208630_st1)), &__jule_any_type4),jule::Any((*(_208641_st2)), &__jule_any_type4)}));;
	jule::Slice<jule::U8> _208913_buf = _21cd690ad_Buf(_208656_message);;
	_21cd67d15_WriteStr(_208656_message, _21cd489b6_Repeat(jule::Str::lit(" ", 1), 7LL));
	_21cd67d15_WriteStr(_208656_message, _20889_refersTo);
	_21cd680bd_WriteByte(_208656_message, '\n');
	_21cd67a5c_Write(_208656_message, _208913_buf);
}



inline void _1c0d1c850_checkPackageDecls(jule::Ptr<_1c0d04705_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab0176a:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _211321_f = *it;
			{
				_1c0d06e22_setCurrentFile(_self_.ptr(), _211321_f);
				if ((!(_1c0d1410a_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aab0176a:;
			++it;
			goto _iter_begin_1aab0176a;
		}
		_iter_end_1aab0176a:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab03d44:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _212021_f = *it;
			{
				_1c0d06e22_setCurrentFile(_self_.ptr(), _212021_f);
				if ((!(_1c0d185b5_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aab03d44:;
			++it;
			goto _iter_begin_1aab03d44;
		}
		_iter_end_1aab03d44:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab03607:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _212721_f = *it;
			{
				_1c0d06e22_setCurrentFile(_self_.ptr(), _212721_f);
				if ((!(_1c0d1a078_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aab03607:;
			++it;
			goto _iter_begin_1aab03607;
		}
		_iter_end_1aab03607:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab05cd0:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _213421_f = *it;
			{
				_1c0d06e22_setCurrentFile(_self_.ptr(), _213421_f);
				{
					
					if ((!(_1c0d1bc7d_checkFuncDecls(_self_)))) {
						_case_begin_1aab06b27:;
					}
					else if ((!(_1c0d1b145_checkStructDecls(_self_)))) {
						_case_begin_1aab06b8d:;
					}
					else {
						_case_begin_1aab06ab1:;
						{
							goto _iter_next_1aab05cd0;
						}
					}
					_match_end_1aab06a5b:;
				};
				return;;
			}
			_iter_next_1aab05cd0:;
			++it;
			goto _iter_begin_1aab05cd0;
		}
		_iter_end_1aab05cd0:;
	};
}



inline void _1c0d1cbb3_checkDataForTypeInference(_1c0d04705_Sema* _self_, jule::Ptr<_1c0d80352_Data>* _214645_d, jule::Ptr<_1c0c25406_Token>* _214656_err_token) {
	{
		
		if (_1c0d80709_IsNil((*(_214645_d)).ptr())) {
			_case_begin_1aab07c6b:;
			{
				_1c0d07340_pushErr(_self_, (*(_214656_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1c0d80990_IsVoid((*(_214645_d)).ptr())) {
			_case_begin_1aab07ce3:;
			{
				_1c0d07340_pushErr(_self_, (*(_214656_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_214645_d))))._field_Kind))._field_Variadic) {
			_case_begin_1aab07d6a:;
			{
				_1c0d07340_pushErr(_self_, (*(_214656_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aab07b4a:;
	};
}



inline void _1c0d1ce6b_checkVarValue(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0d2b94c_Var>* _215838_v) {
	if (_1c0d2c068_IsTypeInferred((*(_215838_v)).ptr())) {
		(*((*(_215838_v))))._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=(*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Kind});
		_1c0d1cbb3_checkDataForTypeInference(_self_.ptr(), &((*((*((*(_215838_v))))._field_Value))._field_Data), &((*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token));
		_1c0d1335c_checkValidityForInitExpr(_self_, (*((*(_215838_v))))._field_Mutable, (*((*(_215838_v))))._field_Reference, &((*((*((*(_215838_v))))._field_Kind))._field_Kind), &((*((*((*(_215838_v))))._field_Value))._field_Data), &((*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token));
	} else {
		jule::Ptr<_1c0dbe913_Arr> _217117_arr = _1c0db393a_Arr((*((*((*(_215838_v))))._field_Kind))._field_Kind.ptr());;
		if ((_217117_arr != nullptr)) {
			if ((*(_217117_arr))._field_Auto) {
				jule::Ptr<_1c0dbe913_Arr> _217421_dataArr = _1c0db393a_Arr((*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_217421_dataArr != nullptr)) {
					(*(_217117_arr))._field_N=(*(_217421_dataArr))._field_N;
				};
			};
		};
		if (_1c0d0ed4d_checkAssignType(_self_, (*((*(_215838_v))))._field_Reference, &((*((*((*(_215838_v))))._field_Kind))._field_Kind), &((*((*((*(_215838_v))))._field_Value))._field_Data), (*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token)) {
			_1c0d1335c_checkValidityForInitExpr(_self_, (*((*(_215838_v))))._field_Mutable, (*((*(_215838_v))))._field_Reference, &((*((*((*(_215838_v))))._field_Kind))._field_Kind), &((*((*((*(_215838_v))))._field_Value))._field_Data), &((*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token));
		};
	};
	if (((*((*(_215838_v))))._field_Reference && (!(_1c0dcba0d_isValidForRef(&((*((*((*(_215838_v))))._field_Kind))._field_Kind)))))) {
		_1c0d07340_pushErr(_self_.ptr(), (*((*(_215838_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*((*(_215838_v))))._field_Kind))._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_215838_v))))._field_Constant) {
		jule::Bool _219613_comptime = _1c0db4c27_comptime((*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Kind.ptr());;
		if (((!(_1c0d80c26_IsConst((*((*((*(_215838_v))))._field_Value))._field_Data.ptr()))) && (!(_219613_comptime)))) {
			_1c0d07340_pushErr(_self_.ptr(), (*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_219613_comptime && (_1c0db6014_comptimeRange((*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Kind.ptr()) != nullptr))) {
			_1c0d07340_pushErr(_self_.ptr(), (*((*((*((*(_215838_v))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		(*((*((*((*(_215838_v))))._field_Value))._field_Data))._field_Constant=nullptr;
	};
	if ((_1c0db4991_Tup((*((*((*(_215838_v))))._field_Kind))._field_Kind.ptr()) != nullptr)) {
		(*((*((*(_215838_v))))._field_Kind))._field_Kind=nullptr;
	};
}



inline void _1c0d1d2ce_evalVarValue(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0d2b94c_Var>* _221437_decl, jule::Trait<_1c0dd0050_Lookup> _221453_l) {
	if ((!(_1c0d2bcd2_IsInitialized((*(_221437_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1c0d82046_Eval> _221917_eval = nullptr;;
	if (((*((*(_221437_decl))))._field_Kind != nullptr)) {
		_221917_eval=_1c0d0e0a0_evalpd(_self_, _221453_l, (*((*((*(_221437_decl))))._field_Kind))._field_Kind, (*(_221437_decl)));
	} else {
		_221917_eval=_1c0d0e0a0_evalpd(_self_, _221453_l, nullptr, (*(_221437_decl)));
	};
	(*(_221917_eval))._field_immutable=(!((*((*(_221437_decl))))._field_Mutable));
	(*((*((*(_221437_decl))))._field_Value))._field_Data=_1c0da0020_evalExpr(_221917_eval, (*((*((*(_221437_decl))))._field_Value))._field_Expr);
}



inline void _1c0d1d642_checkVar(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0d2b94c_Var>* _223133_decl, jule::Trait<_1c0dd0050_Lookup> _223149_l) {
	_1c0d1d2ce_evalVarValue(_self_, _223133_decl, _223149_l);
	if (((*((*((*(_223133_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1c0d1ce6b_checkVarValue(_self_, _223133_decl);
}



inline void _1c0d2379b_checkGlobals(jule::Ptr<_1c0d04705_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab20b1e:;
		if (it != expr_end) {
			jule::Ptr<_1c0d2b94c_Var> _224121_decl = *it;
			{
				if ((*(_224121_decl))._field_Binded) {
					goto _iter_next_1aab20b1e;
				};
				if (((_1c0d2bcd2_IsInitialized(_224121_decl.ptr()) && ((*((*(_224121_decl))._field_Value))._field_Data == nullptr)) || (_1c0d2c068_IsTypeInferred(_224121_decl.ptr()) && ((*((*(_224121_decl))._field_Kind))._field_Kind == nullptr)))) {
					_1c0d1d642_checkVar(_self_, &(_224121_decl), jule::Trait<_1c0dd0050_Lookup>(_self_, 3));
				};
			}
			_iter_next_1aab20b1e:;
			++it;
			goto _iter_begin_1aab20b1e;
		}
		_iter_end_1aab20b1e:;
	};
}



inline jule::Ptr<_1c0c744aa_FnIns> _1c0d23a98_readyToCheckFn(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _225539_s, jule::Ptr<_1c0c715a6_Fn>* _225559_f) {
	jule::Ptr<_1c0c744aa_FnIns> _225613_ins = _1c0c72d16_instance((*(_225559_f)));;
	if (((*((*(_225559_f))))._field_Instances.len() != 0LL)) {
		return _225613_ins;;
	};
	(*(_225613_ins))._field_Owner=(*(_225539_s));
	_1c0c73124_appendInstance((*(_225559_f)).ptr(), &(_225613_ins));
	(*(_225613_ins))._field_reloaded=true;
	if (_1c0d12449_reloadFnInsTypes(_self_, _225613_ins)) {
		return _225613_ins;;
	};
	return nullptr;;
}



inline void _1c0d23e0b_checkTypeMethod(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _226940_s, jule::Ptr<_1c0c715a6_Fn>* _226960_f) {
	if (((*((*(_226960_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1c0c744aa_FnIns> _227413_ins = (*((*(_226960_f))))._field_Instances[0LL];;
	if (((*((*(_227413_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1c0d268ae_checkFnIns(_self_, &(_227413_ins));
}



inline jule::Ptr<_1c0c744aa_FnIns> _1c0d243b2_checkStructInsOp(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _228241_s, jule::Ptr<_1c0c715a6_Fn>* _228261_f, jule::Fn<jule::Bool(jule::Ptr<_1c0c715a6_Fn>)> _228269_p) {
	if (((((*(_228261_f)) == nullptr) || ((*((*(_228261_f))))._field_Generics.len() > 0LL)) || (!(_228269_p((*(_228261_f))))))) {
		return nullptr;;
	};
	return (*((*(_228261_f))))._field_Instances[0LL];;
}



inline jule::Bool _1c0d247ad_checkStructEnv(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _229239_s, jule::Ptr<_1c0c25406_Token> _229258_errorToken) {
	jule::Bool __jule_func_result = false;
	_1c0dc23c7_typeChecker _229313_tc = _1c0dc23c7_typeChecker{._field_s=(*((*((*(_229239_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait<_1c0dd0050_Lookup>((*((*((*(_229239_s))))._field_Decl))._field_sema, 3), ._field_lookup=jule::Trait<_1c0dd0050_Lookup>((*((*((*(_229239_s))))._field_Decl))._field_sema, 3), ._field_referencer=jule::new_ptr<_1c0dc13d7_referencer>(_1c0dc13d7_referencer{._field_ident=(*((*((*(_229239_s))))._field_Decl))._field_Ident, ._field_owner=jule::Any((*((*(_229239_s))))._field_Decl, &__jule_any_type65), }), ._field_refers=(*((*(_229239_s))))._field_Refers, };;
	if (((*((*(_229239_s))))._field_Generics.len() > 0LL)) {
		_229313_tc._field_useGenerics=jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>::alloc(0LL, (*((*(_229239_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_229239_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aab2bb4c:;
			if (it != expr_end) {
				jule::I64 _230618_i = it - expr->begin();
				jule::Ptr<_1c0dadb33_InsGeneric> _230625_g = *it;
				{
					jule::Ptr<_1c0c47bed_GenericDecl> _230721_decl = (*((*((*(_229239_s))))._field_Decl))._field_Generics[_230618_i];;
					{ jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> &__jule_push_dest = _229313_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1c0dae727_TypeAlias>(_1c0dae727_TypeAlias{._field_Token=(*(_230721_decl))._field_Token, ._field_Ident=(*(_230721_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=(*(_230625_g))._field_Kind}), })); };
				}
				_iter_next_1aab2bb4c:;
				++it;
				_230618_i++;
				goto _iter_begin_1aab2bb4c;
			}
			_iter_end_1aab2bb4c:;
		};
	};
	jule::Ptr<_1c0d7a12c_SymbolTable> _231613_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1c0d06e22_setCurrentFile(_self_.ptr(), _231613_oldFile);
	});;
	if (((*((*(_self_))._field_file))._field_File != (*((*((*((*(_229239_s))))._field_Decl))._field_Token))._field_File)) {
		jule::Ptr<_1c0d7a12c_SymbolTable> _232017_file = _1c0d0344b_findFile(&((*(_self_))._field_files), &((*((*((*((*(_229239_s))))._field_Decl))._field_Token))._field_File));;
		if ((_232017_file != nullptr)) {
			_1c0d06e22_setCurrentFile(_self_.ptr(), _232017_file);
		};
	};
	if (((*((*(_229239_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1c0ca9b94_constraintChecker> _232717_cc = _1c0d0cab5_constraintChecker(_self_);;
		(*(_232717_cc))._field_et=_229258_errorToken;
		(*(_232717_cc))._field_si=(*(_229239_s));
		(*(_232717_cc))._field_genericsA=_229313_tc._field_useGenerics;
		(*(_232717_cc))._field_uniq=true;
		if ((!(_1c0caaac9_check(_232717_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_229239_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _234017_n = (*(_self_))._field_errors.len();;
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=jule::append(_229313_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_229239_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aab347ae:;
			if (it != expr_end) {
				jule::Ptr<_1c0d2b94c_Var> _234225_v = *it;
				{
					_1c0d19a39_checkVarDecl(_self_, &(_234225_v), jule::Trait<_1c0dd0050_Lookup>(_self_, 3));
					_1c0d1d642_checkVar(_self_, &(_234225_v), jule::Trait<_1c0dd0050_Lookup>(_self_, 3));
					__jule_func_result=((((*(_self_))._field_errors.len() - _234017_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1aab347ae:;
				++it;
				goto _iter_begin_1aab347ae;
			}
			_iter_end_1aab347ae:;
		};
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=(*((*(_self_))._field_files[0LL]))._field_TypeAliases.slice(_229313_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1c0d82046_Eval> _235313_eval = _1c0d0e7dc_eval(_self_, jule::Trait<_1c0dd0050_Lookup>(_self_, 3));;
	(*((*(_229239_s))))._field_Comparable=(!((*((*((*(_229239_s))))._field_Decl))._field_Binded));
	{
		auto expr = &((*((*(_229239_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab37dab:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5d829_FieldIns> _235521_f = *it;
			{
				jule::Ptr<_1c0db0519_TypeKind> _235617_kind = _1c0dc9a72_checkDecl(&_229313_tc, &((*((*((*(_235521_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_235617_kind != nullptr) && __jule_func_result);
				if ((_235617_kind == nullptr)) {
					if (((_self_ != (*((*((*(_229239_s))))._field_Decl))._field_sema) && ((*((*((*((*(_229239_s))))._field_Decl))._field_sema))._field_errors.len() > 0LL))) {
						((*(_self_))._field_errors).append((*((*((*((*(_229239_s))))._field_Decl))._field_sema))._field_errors);;
						(*((*((*((*(_229239_s))))._field_Decl))._field_sema))._field_errors=nullptr;
					};
					goto _iter_next_1aab37dab;
				};
				(*(_235521_f))._field_Kind=_235617_kind;
				(*((*(_229239_s))))._field_Mutable=((*((*(_229239_s))))._field_Mutable || ((!((*((*(_235521_f))._field_Decl))._field_Mutable)) && _1c0db1d9a_Mutable((*(_235521_f))._field_Kind.ptr())));
				(*((*(_229239_s))))._field_Comparable=((*((*(_229239_s))))._field_Comparable && _1c0db1b14_Comparable((*(_235521_f))._field_Kind.ptr()));
				if (((*((*(_235521_f))._field_Decl))._field_Default == nullptr)) {
					goto _iter_next_1aab37dab;
				};
				(*(_235313_eval))._field_prefix=(*(_235521_f))._field_Kind;
				(*(_235313_eval))._field_field=_235521_f;
				(*(_235521_f))._field_Default=_1c0da0020_evalExpr(_235313_eval, (*((*(_235521_f))._field_Decl))._field_Default);
				if (((*(_235521_f))._field_Default == nullptr)) {
					goto _iter_next_1aab37dab;
				};
				;
				_1c0d0ed4d_checkAssignType(_self_, false, &((*(_235521_f))._field_Kind), &((*(_235521_f))._field_Default), (*((*((*(_235521_f))._field_Decl))._field_Default))._field_Token);
			}
			_iter_next_1aab37dab:;
			++it;
			goto _iter_begin_1aab37dab;
		}
		_iter_end_1aab37dab:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c0d24ba9_precheckStructIns(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _238942_s, jule::Ptr<_1c0c25406_Token> _238961_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1c0d247ad_checkStructEnv(_self_, _238942_s, _238961_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_238942_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab433a0:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _239421_f = *it;
			{
				if (((*(_239421_f))._field_Generics.len() == 0LL)) {
					if ((_1c0d23a98_readyToCheckFn(_self_, _238942_s, &(_239421_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1aab433a0:;
			++it;
			goto _iter_begin_1aab433a0;
		}
		_iter_end_1aab433a0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c0d24e62_checkStructIns(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _240439_s) {
	{
		auto expr = &((*((*(_240439_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab43c85:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _240521_f = *it;
			{
				_1c0d23e0b_checkTypeMethod(_self_, _240439_s, &(_240521_f));
			}
			_iter_next_1aab43c85:;
			++it;
			goto _iter_begin_1aab43c85;
		}
		_iter_end_1aab43c85:;
	};
}



inline void _1c0d2521a_checkTypeStruct(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c5b64b_Struct>* _241040_s) {
	if ((*((*(_241040_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_241040_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_241040_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab45d20:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5e3c9_StructIns> _242321_ins = *it;
			{
				_1c0d24e62_checkStructIns(_self_, &(_242321_ins));
			}
			_iter_next_1aab45d20:;
			++it;
			goto _iter_begin_1aab45d20;
		}
		_iter_end_1aab45d20:;
	};
}



inline void _1c0d25418_checkStructTypes(jule::Ptr<_1c0d04705_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab471ea:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5b64b_Struct> _242921_s = *it;
			{
				_1c0d2521a_checkTypeStruct(_self_, &(_242921_s));
			}
			_iter_next_1aab471ea:;
			++it;
			goto _iter_begin_1aab471ea;
		}
		_iter_end_1aab471ea:;
	};
}



inline void _1c0d256c1_checkStructInsOperators(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c5e3c9_StructIns> _243447_s) {
	{
		auto expr = &((*(_243447_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab4874b:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _243521_m = *it;
			{
				{
					auto &_match_expr{ (*(_243521_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1aab496d6:;
						{
							(*(_243447_s))._field_Operators._field_Eq=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d2d7a6_Eq);
							(*(_243447_s))._field_Comparable=((*(_243447_s))._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1aab4975d:;
						{
							(*(_243447_s))._field_Operators._field_Gt=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d2da70_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1aab497d5:;
						{
							(*(_243447_s))._field_Operators._field_GtEq=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d2dd39_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1aab4985c:;
						{
							(*(_243447_s))._field_Operators._field_Lt=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d2e103_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1aab498d4:;
						{
							(*(_243447_s))._field_Operators._field_LtEq=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d2e3bc_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1aab4995b:;
						{
							(*(_243447_s))._field_Operators._field_Shl=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d2ea0a_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1aab499d3:;
						{
							(*(_243447_s))._field_Operators._field_Shr=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d2ecc4_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1aab49a5a:;
						{
							(*(_243447_s))._field_Operators._field_Add=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d3008d_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1aab49ad2:;
						{
							(*(_243447_s))._field_Operators._field_Sub=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d30357_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1aab49b59:;
						{
							(*(_243447_s))._field_Operators._field_Div=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d30621_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1aab49bd1:;
						{
							(*(_243447_s))._field_Operators._field_Mul=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d308da_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1aab49c58:;
						{
							(*(_243447_s))._field_Operators._field_Mod=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d30ba4_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1aab49cd0:;
						{
							(*(_243447_s))._field_Operators._field_BitAnd=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d30e6d_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1aab49d57:;
						{
							(*(_243447_s))._field_Operators._field_BitOr=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d31237_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1aab49dce:;
						{
							(*(_243447_s))._field_Operators._field_BitXor=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d31501_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1aab49e56:;
						{
							(*(_243447_s))._field_Operators._field_Neg=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d31b3e_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1aab49ecd:;
						{
							(*(_243447_s))._field_Operators._field_Pos=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d31e08_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1aab4a055:;
						{
							(*(_243447_s))._field_Operators._field_BitNot=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d321c2_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1aab4a0cc:;
						{
							(*(_243447_s))._field_Operators._field_AddAssign=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d32810_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1aab4a154:;
						{
							(*(_243447_s))._field_Operators._field_SubAssign=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d32ac9_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1aab4a1cb:;
						{
							(*(_243447_s))._field_Operators._field_DivAssign=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d32d93_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1aab4a253:;
						{
							(*(_243447_s))._field_Operators._field_MulAssign=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d3315c_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1aab4a2ca:;
						{
							(*(_243447_s))._field_Operators._field_ModAssign=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d33426_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1aab4a352:;
						{
							(*(_243447_s))._field_Operators._field_ShlAssign=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d336e0_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1aab4a3c9:;
						{
							(*(_243447_s))._field_Operators._field_ShrAssign=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d339a9_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1aab4a451:;
						{
							(*(_243447_s))._field_Operators._field_BitOrAssign=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d33c73_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1aab4a4c8:;
						{
							(*(_243447_s))._field_Operators._field_BitAndAssign=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d3403c_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1aab4a550:;
						{
							(*(_243447_s))._field_Operators._field_BitXorAssign=_1c0d243b2_checkStructInsOp(_self_, &(_243447_s), &(_243521_m), static__1c0d34306_BitXorAssign);
						}
					}
					_match_end_1aab4943e:;
				};
			}
			_iter_next_1aab4874b:;
			++it;
			goto _iter_begin_1aab4874b;
		}
		_iter_end_1aab4874b:;
	};
}



inline void _1c0d25979_precheckStructType(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c5b64b_Struct>* _249843_s) {
	if ((*((*(_249843_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_249843_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_249843_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1c0c5e3c9_StructIns> _250917_ins = _1c0c5baad_instance((*(_249843_s)));;
		(*(_250917_ins))._field_Checked=true;
		_1c0c5bdbb_appendInstance((*(_249843_s)).ptr(), &(_250917_ins));
		_1c0d24ba9_precheckStructIns(_self_, &(_250917_ins), nullptr);
	};
	_1c0d256c1_checkStructInsOperators(_self_, (*((*(_249843_s))))._field_Instances[0LL]);
}



inline void _1c0d25b77_precheckStructTypes(jule::Ptr<_1c0d04705_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab61258:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5b64b_Struct> _251921_s = *it;
			{
				_1c0d25979_precheckStructType(_self_, &(_251921_s));
			}
			_iter_next_1aab61258:;
			++it;
			goto _iter_begin_1aab61258;
		}
		_iter_end_1aab61258:;
	};
}



inline void _1c0d25e30_checkRets(_1c0d04705_Sema* _self_, jule::Ptr<_1c0c744aa_FnIns>* _252433_f) {
	if (_1c0c71a29_IsVoid((*((*(_252433_f))))._field_Decl.ptr())) {
		return;;
	};
	_1c0d283a5_missingRetChecker _25289_mrc = static__1c0d2876d_new();;
	jule::Bool _25299_ok = _1c0d29890_check(&_25289_mrc, (*((*(_252433_f))))._field_Scope);;
	if ((!(_25299_ok))) {
		_1c0d07340_pushErr(_self_, (*((*((*(_252433_f))))._field_Decl))._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1c0d26293_checkFnInsSc(_1c0d04705_Sema* _self_, jule::Ptr<_1c0c744aa_FnIns>* _253536_f, jule::Ptr<_1c0cb9412_scopeChecker>* _253552_sc) {
	_1c0d02a00_appendRetVars(&((*((*((*(_253552_sc))))._field_table))._field_Vars), _253536_f);
	_1c0d02cdb_appendParamVars(&((*((*((*(_253552_sc))))._field_table))._field_Vars), _253536_f);
	_1c0d030c7_appendGenericTypeAliases(&((*((*((*(_253552_sc))))._field_table))._field_TypeAliases), _253536_f);
	_1c0ccadc4_check((*(_253552_sc)), &((*((*((*(_253536_f))))._field_Decl))._field_Scope), &((*((*(_253536_f))))._field_Scope));
	if ((!(_1c0cbbed6_stopped((*(_253552_sc)).ptr())))) {
		_1c0d25e30_checkRets(_self_, _253536_f);
	};
}



inline void _1c0d26606_checkFnInsCaller(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c744aa_FnIns>* _254841_f, jule::Ptr<_1c0c25406_Token> _254856_caller) {
	if ((*((*((*(_254841_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1c0d7a12c_SymbolTable> _255313_old = (*((*((*((*(_254841_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1c0d06e22_setCurrentFile((*((*((*(_254841_f))))._field_Decl))._field_sema.ptr(), _255313_old);
	});;
	jule::Ptr<_1c0d7a12c_SymbolTable> _255513_file = _1c0d0344b_findFile(&((*((*((*((*(_254841_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_254841_f))))._field_Decl))._field_Token))._field_File));;
	if ((_255513_file != nullptr)) {
		_1c0d06e22_setCurrentFile((*((*((*(_254841_f))))._field_Decl))._field_sema.ptr(), _255513_file);
	};
	jule::Ptr<_1c0cb9412_scopeChecker> _256013_sc = _1c0cae2a3_newScopeChecker(&((*((*((*(_254841_f))))._field_Decl))._field_sema), (*(_254841_f)));;
	(*(_256013_sc))._field_calledFrom=_254856_caller;
	_1c0d26293_checkFnInsSc(_self_.ptr(), _254841_f, &(_256013_sc));
	if (((*((*((*(_254841_f))))._field_Decl))._field_sema != _self_)) {
		((*(_self_))._field_errors).append((*((*((*((*(_254841_f))))._field_Decl))._field_sema))._field_errors);;
		(*((*((*((*(_254841_f))))._field_Decl))._field_sema))._field_errors=nullptr;
	};
}



inline void _1c0d268ae_checkFnIns(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c744aa_FnIns>* _257035_f) {
	_1c0d26606_checkFnInsCaller(_self_, _257035_f, nullptr);
}



inline void _1c0d26b67_checkFunc(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c715a6_Fn>* _257434_f) {
	if ((*((*(_257434_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_257434_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_257434_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab6d7a4:;
		if (it != expr_end) {
			jule::Ptr<_1c0c744aa_FnIns> _258421_ins = *it;
			{
				_1c0d268ae_checkFnIns(_self_, &(_258421_ins));
			}
			_iter_next_1aab6d7a4:;
			++it;
			goto _iter_begin_1aab6d7a4;
		}
		_iter_end_1aab6d7a4:;
	};
}



inline void _1c0d26e20_checkTestFn(_1c0d04705_Sema* _self_, jule::Ptr<_1c0c744aa_FnIns>* _258935_f) {
	if ((*((*((*(_258935_f))))._field_Decl))._field_Public) {
		_1c0d07340_pushErr(_self_, (*((*((*(_258935_f))))._field_Decl))._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*((*((*(_258935_f))))._field_Decl))._field_Unsafety || (!(_1c0c71a29_IsVoid((*((*(_258935_f))))._field_Decl.ptr())))) || ((*((*((*(_258935_f))))._field_Decl))._field_Generics.len() != 0LL)) || ((*((*(_258935_f))))._field_Params.len() != 1LL)) || (*((*((*((*(_258935_f))))._field_Decl))._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_258935_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1c0d07340_pushErr(_self_, (*((*((*(_258935_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0dbbb1e_Sptr> _260713_sptr = _1c0db2e01_Sptr((*((*((*(_258935_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_260713_sptr == nullptr)) {
		_1c0d07340_pushErr(_self_, (*((*((*(_258935_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0c5e3c9_StructIns> _26149_s = _1c0db41dd_Struct((*(_260713_sptr))._field_Elem.ptr());;
	if (((_26149_s == nullptr) || (!(_1c0cd893c_isStdPackage(&((*((*((*((*(_26149_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1c0d07340_pushErr(_self_, (*((*((*(_258935_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1c0d076a3_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1c0d271c8_precheckFunc(jule::Ptr<_1c0d04705_Sema> _self_, jule::Ptr<_1c0c715a6_Fn>* _262237_f) {
	if ((*((*(_262237_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_262237_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_262237_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1c0c744aa_FnIns> _263317_ins = _1c0c72a80_instanceForce((*(_262237_f)));;
		{ jule::Slice<jule::Ptr<_1c0c744aa_FnIns>> &__jule_push_dest = (*((*(_262237_f))))._field_Instances; __jule_push_dest.push(_263317_ins); };
		jule::Bool _263513_ok = _1c0d12449_reloadFnInsTypes(_self_, _263317_ins);;
		(*(_263317_ins))._field_reloaded=true;
		if ((_263513_ok && _1c0dcb139_hasDirective(&((*((*(_262237_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1c0d26e20_checkTestFn(_self_.ptr(), &(_263317_ins));
		};
	};
}



inline void _1c0d273c6_precheckFuncs(jule::Ptr<_1c0d04705_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab7bb36:;
		if (it != expr_end) {
			jule::Ptr<_1c0c84850_Trait> _264621_decl = *it;
			{
				{
					auto expr = &((*(_264621_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aab7c76e:;
					if (it != expr_end) {
						jule::Ptr<_1c0c715a6_Fn> _264725_m = *it;
						{
							_1c0d271c8_precheckFunc(_self_, &(_264725_m));
						}
						_iter_next_1aab7c76e:;
						++it;
						goto _iter_begin_1aab7c76e;
					}
					_iter_end_1aab7c76e:;
				};
			}
			_iter_next_1aab7bb36:;
			++it;
			goto _iter_begin_1aab7bb36;
		}
		_iter_end_1aab7bb36:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab7d20e:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _265121_decl = *it;
			{
				_1c0d271c8_precheckFunc(_self_, &(_265121_decl));
			}
			_iter_next_1aab7d20e:;
			++it;
			goto _iter_begin_1aab7d20e;
		}
		_iter_end_1aab7d20e:;
	};
}



inline void _1c0d275c4_checkFuncs(jule::Ptr<_1c0d04705_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab7d9d4:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _265821_decl = *it;
			{
				_1c0d26b67_checkFunc(_self_, &(_265821_decl));
			}
			_iter_next_1aab7d9d4:;
			++it;
			goto _iter_begin_1aab7d9d4;
		}
		_iter_end_1aab7d9d4:;
	};
}



inline void _1c0d277c2_checkPackageTypes(jule::Ptr<_1c0d04705_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab7e8d6:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _266621_f = *it;
			{
				_1c0d06e22_setCurrentFile(_self_.ptr(), _266621_f);
				_1c0d2379b_checkGlobals(_self_);
				_1c0d273c6_precheckFuncs(_self_);
				_1c0d25b77_precheckStructTypes(_self_);
			}
			_iter_next_1aab7e8d6:;
			++it;
			goto _iter_begin_1aab7e8d6;
		}
		_iter_end_1aab7e8d6:;
	};
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab816da:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _267721_f = *it;
			{
				_1c0d06e22_setCurrentFile(_self_.ptr(), _267721_f);
				_1c0d275c4_checkFuncs(_self_);
				_1c0d25418_checkStructTypes(_self_);
			}
			_iter_next_1aab816da:;
			++it;
			goto _iter_begin_1aab816da;
		}
		_iter_end_1aab816da:;
	};
}



inline void _1c0d279c0_setFileSemaFields(jule::Ptr<_1c0d04705_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab821ad:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _268521_f = *it;
			{
				(*(_268521_f))._field_sema=_self_;
			}
			_iter_next_1aab821ad:;
			++it;
			goto _iter_begin_1aab821ad;
		}
		_iter_end_1aab821ad:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab838da:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5b64b_Struct> _268821_st = *it;
			{
				(*(_268821_st))._field_sema=_self_;
			}
			_iter_next_1aab838da:;
			++it;
			goto _iter_begin_1aab838da;
		}
		_iter_end_1aab838da:;
	};
}



inline void _1c0d27bbd_setSemaFields(jule::Ptr<_1c0d04705_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab84413:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _269421_file = *it;
			{
				_1c0d06e22_setCurrentFile(_self_.ptr(), _269421_file);
				_1c0d279c0_setFileSemaFields(_self_);
			}
			_iter_next_1aab84413:;
			++it;
			goto _iter_begin_1aab84413;
		}
		_iter_end_1aab84413:;
	};
}



inline void _1c0d27e76_check(jule::Ptr<_1c0d04705_Sema> _self_, jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>* _270030_files) {
	(*(_self_))._field_files=(*(_270030_files));
	_1c0d0acb1_checkImports(_self_.ptr());
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1c0d27bbd_setSemaFields(_self_);
	_1c0d0b7a6_checkInherits(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1c0d0b1ac_implImpls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1c0d0b3aa_checkEnums(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1c0d1c850_checkPackageDecls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_1c0d277c2_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d04705_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1c0d283a5_missingRetChecker static__1c0d2876d_new(void) {
	return _1c0d283a5_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1c0d28a7b_checkConditional(_1c0d283a5_missingRetChecker* _self_, jule::Ptr<_1c0cb2c46_Conditional> _274835_c) {
	{
		auto expr = &((*(_274835_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab89858:;
		if (it != expr_end) {
			jule::Ptr<_1c0cb252b_If> _274921_elif = *it;
			{
				if ((_274921_elif == nullptr)) {
					return false;;
				};
				if ((!(_1c0d2954e_checkScope(_self_, (*(_274921_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1aab89858:;
			++it;
			goto _iter_begin_1aab89858;
		}
		_iter_end_1aab89858:;
	};
	return (((*(_274835_c))._field_Default != nullptr) && _1c0d2954e_checkScope(_self_, (*((*(_274835_c))._field_Default))._field_Scope));;
}



inline jule::Bool _1c0d28dbc_checkMatch(_1c0d283a5_missingRetChecker* _self_, jule::Ptr<_1c0cb6244_Match> _276029_m) {
	{
		auto expr = &((*(_276029_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab8aded:;
		if (it != expr_end) {
			jule::Ptr<_1c0cb6d7c_Case> _276121_c = *it;
			{
				if ((_276121_c == nullptr)) {
					return false;;
				};
				jule::I64 _276513_n = (*(_self_))._field_breaked.len();;
				jule::Bool _276613_ok = _1c0d2954e_checkScope(_self_, (*(_276121_c))._field_Scope);;
				{
					
					if ((_276513_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1aab8d96c:;
						{
							return false;;
						}
					}
					else if ((!(_276613_ok))) {
						_case_begin_1aab8d9e4:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1aab8da6b;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1aab8da6b:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_276121_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1aab8aded;
						}
					}
					_match_end_1aab8d8a1:;
				};
			}
			_iter_next_1aab8aded:;
			++it;
			goto _iter_begin_1aab8aded;
		}
		_iter_end_1aab8aded:;
	};
	return (((*(_276029_m))._field_Default != nullptr) && _1c0d2954e_checkScope(_self_, (*((*(_276029_m))._field_Default))._field_Scope));;
}



inline jule::Bool _1c0d2920d_checkInfIter(_1c0d283a5_missingRetChecker* _self_, jule::Ptr<_1c0cb3043_InfIter> _278631_it) {
	jule::I64 _27879_n = (*(_self_))._field_breaked.len();;
	if (_1c0d2954e_checkScope(_self_, (*(_278631_it))._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27879_n);
		return true;;
	};
	if ((_27879_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _279313_itaddr = static_cast<jule::Uintptr>(_278631_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_27879_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1aab924dc:;
			if (it != expr_end) {
				jule::Uintptr _279420_addr = *it;
				{
					if ((_279313_itaddr == _279420_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27879_n);
						return false;;
					};
				}
				_iter_next_1aab924dc:;
				++it;
				goto _iter_begin_1aab924dc;
			}
			_iter_end_1aab924dc:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27879_n);
	};
	return true;;
}



inline jule::Bool _1c0d2954e_checkScope(_1c0d283a5_missingRetChecker* _self_, jule::Ptr<_1c0cb210d_Scope> _280529_s) {
	if ((_280529_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_280529_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab93a60:;
		if (it != expr_end) {
			jule::Any _280921_st = *it;
			{
				{
					auto &_match_expr{ _280921_st };
					
					if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1aab94874:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1aab948da:;
						{
							jule::Uintptr _281517_addr = (*(_280921_st.cast_ptr<_1c0cb46a4_BreakSt>(&__jule_any_type49)))._field_It;;
							if ((_281517_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_281517_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1aab94951:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1aab949c8:;
						{
							if (_1c0d2920d_checkInfIter(_self_, _280921_st.cast_ptr<_1c0cb3043_InfIter>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1aab94a50:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1aab94ac7:;
						{
							if (_1c0d2954e_checkScope(_self_, _280921_st.cast_ptr<_1c0cb210d_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1aab94b4e:;
						{
							{
								auto &_match_expr{ (*(_280921_st.cast_ptr<_1c0d80352_Data>(&__jule_any_type24)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1aab984e3:;
									{
										return true;;
									}
								}
								_match_end_1aab9845a:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1aab94bc6:;
						{
							if (_1c0d28a7b_checkConditional(_self_, _280921_st.cast_ptr<_1c0cb2c46_Conditional>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1aab94c4d:;
						{
							if (_1c0d28dbc_checkMatch(_self_, _280921_st.cast_ptr<_1c0cb6244_Match>(&__jule_any_type47))) {
								return true;;
							};
						}
					}
					_match_end_1aab94764:;
				};
			}
			_iter_next_1aab93a60:;
			++it;
			goto _iter_begin_1aab93a60;
		}
		_iter_end_1aab93a60:;
	};
	return false;;
}



inline jule::Bool _1c0d29890_check(_1c0d283a5_missingRetChecker* _self_, jule::Ptr<_1c0cb210d_Scope> _285124_s) {
	return _1c0d2954e_checkScope(_self_, _285124_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d283a5_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d2a792_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0d2bcd2_IsInitialized(_1c0d2b94c_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1c0d2c068_IsTypeInferred(_1c0d2b94c_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1c0d2c2ee_untypedConstant(_1c0d2b94c_Var* _self_) {
	return (_1c0d2c068_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d2b94c_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1c0d2cd9e_Dispose(jule::Ptr<_1c0c715a6_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*(_1023_f))._field_Owner != nullptr)) && (*(_1023_f))._field_Ident.equal("Dispose", 7)) && (!((*(_1023_f))._field_Statically))) && (!((*(_1023_f))._field_Unsafety))) && _1c0c71a29_IsVoid(_1023_f.ptr())) && ((*(_1023_f))._field_Generics.len() == 0LL)) && ((*(_1023_f))._field_Params.len() == 1LL)) && (*((*(_1023_f))._field_Params[0LL]))._field_Mutable) && (!(_1c0c70484_IsRef((*(_1023_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1c0d2d168_Str(jule::Ptr<_1c0c715a6_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _1c0c71a29_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _1c0c70484_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1c0c744aa_FnIns> _3813_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_1c0db80e3_Prim> _399_prim = _1c0db2b6a_Prim((*(_3813_ins))._field_Result.ptr());;
	if ((_399_prim == nullptr)) {
		return false;;
	};
	return _1c0dbb57a_IsStr(_399_prim.ptr());;
}



inline jule::Bool static__1c0d2d4dc_logical(jule::Ptr<_1c0c715a6_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _1c0c71a29_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _1c0c70484_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1c0c744aa_FnIns> _6313_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_1c0db80e3_Prim> _649_prim = _1c0db2b6a_Prim((*(_6313_ins))._field_Result.ptr());;
	if (((_649_prim == nullptr) || (!(_1c0dbb2e4_IsBool(_649_prim.ptr()))))) {
		return false;;
	};
	return ((*(_6313_ins))._field_Owner == _1c0db41dd_Struct((*((*(_6313_ins))._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1c0d2d7a6_Eq(jule::Ptr<_1c0c715a6_Fn> _7218_f) {
	return static__1c0d2d4dc_logical(&(_7218_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1c0d2da70_Gt(jule::Ptr<_1c0c715a6_Fn> _7718_f) {
	return static__1c0d2d4dc_logical(&(_7718_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1c0d2dd39_GtEq(jule::Ptr<_1c0c715a6_Fn> _8220_f) {
	return static__1c0d2d4dc_logical(&(_8220_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1c0d2e103_Lt(jule::Ptr<_1c0c715a6_Fn> _8718_f) {
	return static__1c0d2d4dc_logical(&(_8718_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1c0d2e3bc_LtEq(jule::Ptr<_1c0c715a6_Fn> _9220_f) {
	return static__1c0d2d4dc_logical(&(_9220_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1c0d2e741_result(jule::Ptr<_1c0c715a6_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _1c0c71a29_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _1c0c70484_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1c0c744aa_FnIns> _11313_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_1c0db41dd_Struct((*(_11313_ins))._field_Result.ptr()) == (*(_11313_ins))._field_Owner);;
}



inline jule::Bool static__1c0d2ea0a_Shl(jule::Ptr<_1c0c715a6_Fn> _11819_f) {
	return static__1c0d2e741_result(&(_11819_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1c0d2ecc4_Shr(jule::Ptr<_1c0c715a6_Fn> _12319_f) {
	return static__1c0d2e741_result(&(_12319_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1c0d3008d_Add(jule::Ptr<_1c0c715a6_Fn> _12819_f) {
	return static__1c0d2e741_result(&(_12819_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1c0d30357_Sub(jule::Ptr<_1c0c715a6_Fn> _13319_f) {
	return static__1c0d2e741_result(&(_13319_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1c0d30621_Div(jule::Ptr<_1c0c715a6_Fn> _13819_f) {
	return static__1c0d2e741_result(&(_13819_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1c0d308da_Mul(jule::Ptr<_1c0c715a6_Fn> _14319_f) {
	return static__1c0d2e741_result(&(_14319_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1c0d30ba4_Mod(jule::Ptr<_1c0c715a6_Fn> _14819_f) {
	return static__1c0d2e741_result(&(_14819_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1c0d30e6d_BitAnd(jule::Ptr<_1c0c715a6_Fn> _15322_f) {
	return static__1c0d2e741_result(&(_15322_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1c0d31237_BitOr(jule::Ptr<_1c0c715a6_Fn> _15821_f) {
	return static__1c0d2e741_result(&(_15821_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1c0d31501_BitXor(jule::Ptr<_1c0c715a6_Fn> _16322_f) {
	return static__1c0d2e741_result(&(_16322_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1c0d31875_unary(jule::Ptr<_1c0c715a6_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _1c0c71a29_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _1c0c70484_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1c0c744aa_FnIns> _18213_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_1c0db41dd_Struct((*(_18213_ins))._field_Result.ptr()) == (*(_18213_ins))._field_Owner);;
}



inline jule::Bool static__1c0d31b3e_Neg(jule::Ptr<_1c0c715a6_Fn> _18719_f) {
	return static__1c0d31875_unary(&(_18719_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1c0d31e08_Pos(jule::Ptr<_1c0c715a6_Fn> _19219_f) {
	return static__1c0d31875_unary(&(_19219_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1c0d321c2_BitNot(jule::Ptr<_1c0c715a6_Fn> _19722_f) {
	return static__1c0d31875_unary(&(_19722_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1c0d32546_assign(jule::Ptr<_1c0c715a6_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_1c0c71a29_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _1c0c70484_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1c0d32810_AddAssign(jule::Ptr<_1c0c715a6_Fn> _22125_f) {
	return static__1c0d32546_assign(&(_22125_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1c0d32ac9_SubAssign(jule::Ptr<_1c0c715a6_Fn> _22625_f) {
	return static__1c0d32546_assign(&(_22625_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1c0d32d93_DivAssign(jule::Ptr<_1c0c715a6_Fn> _23125_f) {
	return static__1c0d32546_assign(&(_23125_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1c0d3315c_MulAssign(jule::Ptr<_1c0c715a6_Fn> _23625_f) {
	return static__1c0d32546_assign(&(_23625_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1c0d33426_ModAssign(jule::Ptr<_1c0c715a6_Fn> _24125_f) {
	return static__1c0d32546_assign(&(_24125_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1c0d336e0_ShlAssign(jule::Ptr<_1c0c715a6_Fn> _24625_f) {
	return static__1c0d32546_assign(&(_24625_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1c0d339a9_ShrAssign(jule::Ptr<_1c0c715a6_Fn> _25125_f) {
	return static__1c0d32546_assign(&(_25125_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1c0d33c73_BitOrAssign(jule::Ptr<_1c0c715a6_Fn> _25627_f) {
	return static__1c0d32546_assign(&(_25627_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1c0d3403c_BitAndAssign(jule::Ptr<_1c0c715a6_Fn> _26128_f) {
	return static__1c0d32546_assign(&(_26128_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1c0d34306_BitXorAssign(jule::Ptr<_1c0c715a6_Fn> _26628_f) {
	return static__1c0d32546_assign(&(_26628_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d2c761_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1c0d67669_pushErr(_1c0d6716e_typeCompatibilityChecker* _self_, jule::Str _11826_fmt, jule::Slice<jule::Any> _11839_args) {
	_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11826_fmt, _11839_args);
}



inline jule::Bool _1c0d67900_checkTrait(_1c0d6716e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c0db15e7_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0c84850_Trait> _12613_trt = _1c0db4474_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12713_ref = false;;
	{
		
		if ((_1c0db2e01_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1aabd8687:;
			{
				_12713_ref=true;
				(*(_self_))._field_src=(*(_1c0db2e01_Sptr((*(_self_))._field_src.ptr())))._field_Elem;
				if ((_1c0db41dd_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1aabd870e;
			}
		}
		else if ((_1c0db41dd_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1aabd870e:;
			{
				jule::Ptr<_1c0c5e3c9_StructIns> _13713_s = _1c0db41dd_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1c0c5cc8a_IsImplements((*(_13713_s))._field_Decl.ptr(), _12613_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12713_ref)) && _1c0d65c3e_traitHasReferenceReceiver(&(_12613_trt)))) {
					_1c0d67669_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c0db4474_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1aabd8786:;
			{
				jule::Ptr<_1c0c84850_Trait> _14717_base = _1c0db4474_Trait((*(_self_))._field_src.ptr());;
				if ((_12613_trt == _14717_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1aabdce72:;
				{
					auto expr = &((*(_14717_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aabdd35c:;
					if (it != expr_end) {
						jule::Ptr<_1c0c5b64b_Struct> _15220_s1 = *it;
						{
							{
								auto expr = &((*(_12613_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aabddcb9:;
								if (it != expr_end) {
									jule::Ptr<_1c0c5b64b_Struct> _15324_s2 = *it;
									{
										if ((_15220_s1 == _15324_s2)) {
											goto _iter_next_1aabdd35c;
										};
									}
									_iter_next_1aabddcb9:;
									++it;
									goto _iter_begin_1aabddcb9;
								}
								_iter_end_1aabddcb9:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1aabdd35c:;
						++it;
						goto _iter_begin_1aabdd35c;
					}
					_iter_end_1aabdd35c:;
				};
				{
					auto expr = &((*(_12613_trt))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aabdd11a:;
					if (it != expr_end) {
						jule::Ptr<_1c0c715a6_Fn> _16025_m1 = *it;
						{
							jule::Ptr<_1c0c715a6_Fn> _16121_m2 = _1c0c854ee_FindMethod(_14717_base.ptr(), (*(_16025_m1))._field_Ident);;
							if ((_16121_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1c0c744aa_FnIns> _16517_m1k = _1c0d10ee7_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m1));;
							jule::Ptr<_1c0c744aa_FnIns> _16617_m2k = _1c0d10ee7_getTraitCheckFnKind((*(_self_))._field_s, &(_16121_m2));;
							if ((!(_1c0c75423_equalTrait(_16517_m1k, &(_16617_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1aabdd11a:;
						++it;
						goto _iter_begin_1aabdd11a;
					}
					_iter_end_1aabdd11a:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aabd85cc:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1aabd8577:;
	};
}



inline jule::Bool _1c0d67b86_checkPtr(_1c0d6716e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c0db15e7_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0dc03d6_Ptr> _18113_dest = _1c0db3187_Ptr((*(_self_))._field_dest.ptr());;
	if (_1c0dc0e20_IsUnsafe(_18113_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1c0db0c23_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1c0d67e1c_checkPrim(_1c0d6716e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1c0db80e3_Prim> _19013_prim = _1c0db2b6a_Prim((*(_self_))._field_dest.ptr());;
		if (((_19013_prim != nullptr) && _1c0dbb811_IsAny(_19013_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1c0db0c23_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1c0d68318_typeEnum(_1c0d6716e_typeCompatibilityChecker* _self_, jule::Ptr<_1c0c88755_TypeEnum>* _19828_e, jule::Ptr<_1c0db0519_TypeKind>* _19847_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19828_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabe5908:;
		if (it != expr_end) {
			jule::Ptr<_1c0c8817d_TypeEnumItem> _19921_item = *it;
			{
				if (_1c0db0c23_Equal((*((*(_19921_item))._field_Kind))._field_Kind, (*(_19847_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1c0c88755_TypeEnum> _20317_ke = _1c0db36a4_TypeEnum((*((*(_19921_item))._field_Kind))._field_Kind.ptr());;
				if ((_20317_ke == nullptr)) {
					goto _iter_next_1aabe5908;
				};
				if (_1c0d68318_typeEnum(_self_, &(_20317_ke), _19847_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1aabe5908:;
			++it;
			goto _iter_begin_1aabe5908;
		}
		_iter_end_1aabe5908:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c0d6859e_checkTypeEnum(_1c0d6716e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c0db0c23_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0c88755_TypeEnum> _21813_e = _1c0db36a4_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1c0d68318_typeEnum(_self_, &(_21813_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1c0d68835_check(_1c0d6716e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1c0db3187_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1c0d67b86_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1c0db23b7_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1c0db15e7_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1c0db2b6a_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1aabeb117:;
			{
				__jule_func_result = _1c0d67e1c_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1c0db36a4_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1aabea6cc:;
			{
				__jule_func_result = _1c0d6859e_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1c0db4474_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1aabea743:;
			{
				__jule_func_result = _1c0d67900_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aabea666:;
			{
				__jule_func_result = _1c0db0c23_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1aabe9dd5:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d6716e_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1c0d693b3_pushErr(_1c0d68e1d_assignTypeChecker* _self_, jule::Str _25426_fmt, jule::Slice<jule::Any> _25439_args) {
	_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25426_fmt, _25439_args);
}



inline jule::Bool _1c0d69649_checkValidity(_1c0d68e1d_assignTypeChecker* _self_) {
	jule::Bool _25913_valid = true;;
	{
		
		if ((_1c0db3e57_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aabedb53:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _26213_f = _1c0db3e57_Fn((*((*(_self_))._field_d))._field_Kind.ptr());;
				{
					
					if (_1c0c75940_IsBuiltin(_26213_f.ptr())) {
						_case_begin_1aac00308:;
						{
							_1c0d693b3_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((*((*(_26213_f))._field_Decl))._field_Binded) {
						_case_begin_1aac00380:;
						{
							_1c0d693b3_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if (((!((*((*(_26213_f))._field_Decl))._field_Statically)) && _1c0c71cb0_IsMethod((*(_26213_f))._field_Decl.ptr()))) {
						_case_begin_1aac00407:;
						{
							_1c0d693b3_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					else if ((((*((*(_26213_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_26213_f))._field_Generics.len() == 0LL))) {
						_case_begin_1aac0047e:;
						{
							_1c0d693b3_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1c0d076a3_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25913_valid=false;
						}
					}
					_match_end_1aac0023c:;
				};
			}
		}
		else if ((_1c0db4991_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aabedbca:;
			{
				_1c0d693b3_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25913_valid=false;
			}
		}
		_match_end_1aabeda98:;
	};
	return _25913_valid;;
}



inline jule::Bool _1c0d698d0_checkConst(_1c0d68e1d_assignTypeChecker* _self_) {
	if (((((!(_1c0d80c26_IsConst((*(_self_))._field_d.ptr()))) || (_1c0db2b6a_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1c0db2b6a_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) == nullptr)) || (!(_203644122_IsNum((*(_1c0db2b6a_Prim((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*((*(_self_))._field_d))._field_Model, (*((*(_self_))._field_d))._field_Constant))) {
		return false;;
	};
	jule::Str _2999_kind = (*(_1c0db2b6a_Prim((*(_self_))._field_dest.ptr())))._field_Kind;;
	{
		
		if (_203643d58_IsFloat(_2999_kind)) {
			_case_begin_1aac07e15:;
			{
				if ((!(_1c0d660c4_floatAssignable(&(_2999_kind), &((*(_self_))._field_d))))) {
					_1c0d693b3_pushErr(_self_, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2999_kind;
			}
		}
		else if (_203643a17_IsInt(_2999_kind)) {
			_case_begin_1aac07e8c:;
			{
				if ((!(_1c0d66b85_intAssignable(_2999_kind, &((*(_self_))._field_d))))) {
					_1c0d693b3_pushErr(_self_, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2999_kind;
			}
		}
		else {
			_case_begin_1aac07d6b:;
			{
				return false;;
			}
		}
		_match_end_1aac07d16:;
	};
	return true;;
}



inline jule::Bool _1c0d69b66_isPrim(_1c0d68e1d_assignTypeChecker* _self_) {
	if (((*((*(_self_))._field_dest))._field_Variadic || (*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)) {
		return false;;
	};
	if ((_1c0db1361_Binded((*(_self_))._field_dest.ptr()) || _1c0db1361_Binded((*((*(_self_))._field_d))._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1c0db2b6a_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1c0db2b6a_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1c0d69dec_checkCompatibility(_1c0d68e1d_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1aac0d080:;
			{
				return false;;
			}
		}
		else if ((!(_1c0d69649_checkValidity(_self_)))) {
			_case_begin_1aac0d107:;
			{
				return false;;
			}
		}
		else if (_1c0d698d0_checkConst(_self_)) {
			_case_begin_1aac0d17e:;
			{
				return true;;
			}
		}
		else if ((_1c0db341d_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aac0d206:;
			{
				jule::Ptr<_1c0db0519_TypeKind> _34317_dkind = (*(_self_))._field_dest;;
				if ((_1c0db341d_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34317_dkind=(*((*(_1c0db341d_Enum((*(_self_))._field_dest.ptr())))._field_Kind))._field_Kind;
				} else if ((_1c0db2b6a_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1aac0ce4d;
				};
				if (_20364067e_TypesAreCompatible((*(_1c0db2b6a_Prim((*((*(_1c0db341d_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr())))._field_Kind, (*(_1c0db2b6a_Prim(_34317_dkind.ptr())))._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1c0d69b66_isPrim(_self_)) {
			_case_begin_1aac0d27d:;
			{
				jule::Ptr<_1c0db80e3_Prim> _35313_dest = _1c0db2b6a_Prim((*(_self_))._field_dest.ptr());;
				if (_1c0dbb811_IsAny(_35313_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1c0db80e3_Prim> _35717_src = _1c0db2b6a_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_20364067e_TypesAreCompatible((*(_35313_dest))._field_Kind, (*(_35717_src))._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1aac0ce4d:;
	};
	return _1c0d10304_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*((*(_self_))._field_d))._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1c0d6a183_check(_1c0d68e1d_assignTypeChecker* _self_) {
	jule::Bool _3669_ok = _1c0d69dec_checkCompatibility(_self_);;
	if ((_3669_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1c0dcc9dc_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _3669_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d68e1d_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aac2cb60_annotateConstraintElem(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1aac2e326:;
			{
				jule::Ptr<_1c0db0519_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1aac301a1:;
						{
							_38921_elem=(*(_1c0db393a_Arr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1aac300e6:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c0c3ccae_ArrTypeDecl>(&__jule_any_type69)))._field_Elem;
				return _1c0d6c295_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1aac2e2c1:;
	};
	return false;;
}

inline jule::Bool _1aac2c4bc_annotateConstraintElem(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1aac32c86:;
			{
				jule::Ptr<_1c0db0519_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1aac33b77:;
						{
							_38921_elem=(*(_1c0db3bc1_Slc((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1aac33a56:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c0c3be23_SlcTypeDecl>(&__jule_any_type70)))._field_Elem;
				return _1c0d6c295_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1aac32c31:;
	};
	return false;;
}

inline jule::Bool _1aac2e667_annotateConstraintElem(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1aac366e6:;
			{
				jule::Ptr<_1c0db0519_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1aac3764d:;
						{
							_38921_elem=(*(_1c0db3187_Ptr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1aac374b6:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c0c3c51c_PtrTypeDecl>(&__jule_any_type71)))._field_Elem;
				return _1c0d6c295_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1aac36691:;
	};
	return false;;
}

inline jule::Bool _1aac35c34_annotateConstraintElem(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1aac39d37:;
			{
				jule::Ptr<_1c0db0519_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1aac3ad05:;
						{
							_38921_elem=(*(_1c0db2e01_Sptr((*(_38649_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1aac3ab07:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c0c3ba8d_SptrTypeDecl>(&__jule_any_type72)))._field_Elem;
				return _1c0d6c295_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1aac39cd2:;
	};
	return false;;
}



inline jule::Bool _1c0d6b481_annotateConstraintMap(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _40645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1aac16c6a:;
			{
				jule::Ptr<_1c0dbdc86_Map> _40917_m = _1c0db470a_Map((*(_40645_k)).ptr());;
				jule::Ptr<_1c0c3d50c_MapTypeDecl> _41017_m2 = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c0c3d50c_MapTypeDecl>(&__jule_any_type73);;
				(*(_self_))._field_c=(*(_41017_m2))._field_Key;
				if ((!(_1c0d6c295_annotateConstraint(_self_, &((*(_40917_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*(_41017_m2))._field_Val;
				__jule_func_result = _1c0d6c295_annotateConstraint(_self_, &((*(_40917_m))._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1aac16c15:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c0d6b7c2_annotateConstraintTup(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _42145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1aac1e6ac:;
			{
				jule::Ptr<_1c0c3c220_TupleTypeDecl> _42417_tup = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c0c3c220_TupleTypeDecl>(&__jule_any_type74);;
				jule::Ptr<_1c0dbd1d6_Tuple> _42517_tup2 = _1c0db4991_Tup((*(_42145_k)).ptr());;
				{
					auto expr = &((*(_42517_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aac20911:;
					if (it != expr_end) {
						jule::Ptr<_1c0db0519_TypeKind> _42625_t2 = *it;
						{
							{
								auto expr = &((*(_42417_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aac20449:;
								if (it != expr_end) {
									jule::Ptr<_1c0c3a9e3_TypeDecl> _42729_t = *it;
									{
										(*(_self_))._field_c=_42729_t;
										if (_1c0d6c295_annotateConstraint(_self_, &(_42625_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1aac20449:;
									++it;
									goto _iter_begin_1aac20449;
								}
								_iter_end_1aac20449:;
							};
						}
						_iter_next_1aac20911:;
						++it;
						goto _iter_begin_1aac20911;
					}
					_iter_end_1aac20911:;
				};
			}
		}
		_match_end_1aac1e657:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c0d6bb13_annotateConstraintFn(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _43844_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1aac21b65:;
			{
				jule::Ptr<_1c0c4c6a3_FnDecl> _44117_pf = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c0c4c6a3_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1c0c744aa_FnIns> _44217_f = _1c0db3e57_Fn((*(_43844_k)).ptr());;
				{
					auto expr = &((*(_44217_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aac23529:;
					if (it != expr_end) {
						jule::I64 _44318_i = it - expr->begin();
						jule::Ptr<_1c0c7350e_ParamIns> _44325_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_44117_pf))._field_Params[_44318_i]))._field_Kind;
							if (_1c0d6c295_annotateConstraint(_self_, &((*(_44325_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1aac23529:;
						++it;
						_44318_i++;
						goto _iter_begin_1aac23529;
					}
					_iter_end_1aac23529:;
				};
				if (((*(_44117_pf))._field_Result != nullptr)) {
					(*(_self_))._field_c=(*((*(_44117_pf))._field_Result))._field_Kind;
					if (_1c0d6c295_annotateConstraint(_self_, &((*(_44217_f))._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1aac21b10:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c0d6be54_annotateConstraintIdent(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _45947_k) {
	jule::Ptr<_1c0c3b0ed_IdentTypeDecl> _46013_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c0c3b0ed_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1c0c5e3c9_StructIns> _46113_s = _1c0db41dd_Struct((*(_45947_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac268b2:;
		if (it != expr_end) {
			jule::I64 _46213_i = it - expr->begin();
			jule::Ptr<_1c0c47bed_GenericDecl> _46216_g = *it;
			{
				if (((*(_46216_g))._field_Ident == (*(_46013_ident))._field_Ident)) {
					jule::Ptr<_1c0dadb33_InsGeneric> _46421_fg = (*((*(_self_))._field_f))._field_Generics[_46213_i];;
					if ((_46421_fg != nullptr)) {
						return false;;
					};
					_1c0d6c608_pushGeneric(_self_, _45947_k, _46213_i);
					return true;;
				};
				if ((_46113_s == nullptr)) {
					goto _iter_next_1aac268b2;
				};
				jule::Ptr<_1c0c3a9e3_TypeDecl> _47417_c = (*(_self_))._field_c;;
				{
					auto expr = &((*(_46013_ident))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aac27819:;
					if (it != expr_end) {
						jule::Ptr<_1c0c3a9e3_TypeDecl> _47525_ig = *it;
						{
							(*(_self_))._field_c=_47525_ig;
							{
								auto expr = &((*(_46113_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aac29eae:;
								if (it != expr_end) {
									jule::Ptr<_1c0dadb33_InsGeneric> _47729_sg = *it;
									{
										if (_1c0d6c295_annotateConstraint(_self_, &((*(_47729_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1aac29eae:;
									++it;
									goto _iter_begin_1aac29eae;
								}
								_iter_end_1aac29eae:;
							};
						}
						_iter_next_1aac27819:;
						++it;
						goto _iter_begin_1aac27819;
					}
					_iter_end_1aac27819:;
				};
				(*(_self_))._field_c=_47417_c;
			}
			_iter_next_1aac268b2:;
			++it;
			_46213_i++;
			goto _iter_begin_1aac268b2;
		}
		_iter_end_1aac268b2:;
	};
	return false;;
}



inline jule::Bool _1c0d6c295_annotateConstraint(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _48842_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1aac29ba1:;
			{
				return _1c0d6be54_annotateConstraintIdent(_self_, _48842_k);;
			}
		}
		_match_end_1aac29b4b:;
	};
	{
		
		if ((_1c0db393a_Arr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1aac2b39a:;
			{
				return _1aac2cb60_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1c0db3bc1_Slc((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1aac2b422:;
			{
				return _1aac2c4bc_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1c0db3187_Ptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1aac2b499:;
			{
				return _1aac2e667_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1c0db2e01_Sptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1aac2bba3:;
			{
				return _1aac35c34_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1c0db470a_Map((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1aac2bc19:;
			{
				return _1c0d6b481_annotateConstraintMap(_self_, _48842_k);;
			}
		}
		else if ((_1c0db3e57_Fn((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1aac2bc80:;
			{
				return _1c0d6bb13_annotateConstraintFn(_self_, _48842_k);;
			}
		}
		else if ((_1c0db4991_Tup((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1aac2bce6:;
			{
				return _1c0d6b7c2_annotateConstraintTup(_self_, _48842_k);;
			}
		}
		else {
			_case_begin_1aac2b785:;
			{
				return false;;
			}
		}
		_match_end_1aac2b730:;
	};
}



inline void _1c0d6c608_pushGeneric(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _51335_k, jule::I64 _51349_i) {
	(*((*(_self_))._field_f))._field_Generics[_51349_i]=jule::new_ptr<_1c0dadb33_InsGeneric>(_1c0dadb33_InsGeneric{._field_Kind=(*(_51335_k)), });
	jule::Ptr<_1c0c47bed_GenericDecl> _51513_gd = (*((*((*(_self_))._field_f))._field_Decl))._field_Generics[_51349_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac3dbe8:;
		if (it != expr_end) {
			jule::Ptr<_1c0db0519_TypeKind> _51621_ignored = *it;
			{
				if (((*(_51513_gd))._field_Ident == _1c0db08d2_Str(_51621_ignored.ptr()))) {
					(*(_51621_ignored))._field_Kind=(*((*(_51335_k))))._field_Kind;
				};
			}
			_iter_next_1aac3dbe8:;
			++it;
			goto _iter_begin_1aac3dbe8;
		}
		_iter_end_1aac3dbe8:;
	};
	if ((((*(_51513_gd))._field_Constraint == nullptr) || ((*((*(_51513_gd))._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*(_51513_gd))._field_Constraint))._field_Mask[0LL];
	_1c0d6c295_annotateConstraint(_self_, _51335_k);
}



inline jule::Bool _1c0d6c949_annotatePrim(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _52843_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1c0d6e96d_annotateAny(_self_, _52843_k);
	return __jule_func_result;;
}



inline jule::Bool _1c0d6cc8a_annotateArr(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _53242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0dbe913_Arr> _53313_parr = _1c0db393a_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53313_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0dbe913_Arr> _53713_arr = _1c0db393a_Arr((*(_53242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_53313_parr))._field_Elem));
	__jule_func_result = _1c0d6ecae_annotateKind(_self_, &((*(_53713_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c0d6d0cb_annotateSlc(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _54242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0dbc5e2_Slc> _54313_pslc = _1c0db3bc1_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54313_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0dbc5e2_Slc> _54713_slc = _1c0db3bc1_Slc((*(_54242_k)).ptr());;
	(*(_self_))._field_k=(&((*(_54313_pslc))._field_Elem));
	__jule_func_result = _1c0d6ecae_annotateKind(_self_, &((*(_54713_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c0d6d4c7_checkMapKey(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _55241_k, jule::Ptr<_1c0db0519_TypeKind>* _55261_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0db0519_TypeKind>* _55313_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55241_k;
	__jule_func_result=_1c0d6ecae_annotateKind(_self_, _55261_ck);
	(*(_self_))._field_k=_55313_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c0d6d818_annotateMap(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _56042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0dbdc86_Map> _56113_pmap = _1c0db470a_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56113_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0dbdc86_Map> _56513_m = _1c0db470a_Map((*(_56042_k)).ptr());;
	__jule_func_result = (_1c0d6d4c7_checkMapKey(_self_, (&((*(_56113_pmap))._field_Key)), &((*(_56513_m))._field_Key)) && _1c0d6d4c7_checkMapKey(_self_, (&((*(_56113_pmap))._field_Val)), &((*(_56513_m))._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1c0d6db59_annotateFn(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _57041_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0c744aa_FnIns> _57113_pf = _1c0db3e57_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57113_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0c744aa_FnIns> _57513_f = _1c0db3e57_Fn((*(_57041_k)).ptr());;
	{
		
		if (((*(_57113_pf))._field_Params.len() != (*(_57513_f))._field_Params.len())) {
			_case_begin_1aac4a6c7:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1c0c71a29_IsVoid((*(_57113_pf))._field_Decl.ptr()) != _1c0c71a29_IsVoid((*(_57513_f))._field_Decl.ptr()))) {
			_case_begin_1aac4a74e:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1aac4a661:;
	};
	__jule_func_result=true;
	jule::Ptr<_1c0db0519_TypeKind>* _58413_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_57513_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac4bdc1:;
		if (it != expr_end) {
			jule::I64 _58514_i = it - expr->begin();
			jule::Ptr<_1c0c7350e_ParamIns> _58521_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_57113_pf))._field_Params[_58514_i]))._field_Kind));
				__jule_func_result=(_1c0d6ecae_annotateKind(_self_, &((*(_58521_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1aac4bdc1:;
			++it;
			_58514_i++;
			goto _iter_begin_1aac4bdc1;
		}
		_iter_end_1aac4bdc1:;
	};
	if ((!(_1c0c71a29_IsVoid((*(_57113_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_57113_pf))._field_Result));
		__jule_func_result=(_1c0d6ecae_annotateKind(_self_, &((*(_57513_f))._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58413_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c0d6de9a_annotatePtr(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _59942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0dc03d6_Ptr> _60013_pptr = _1c0db3187_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_60013_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0dc03d6_Ptr> _60413_ptr = _1c0db3187_Ptr((*(_59942_k)).ptr());;
	(*(_self_))._field_k=(&((*(_60013_pptr))._field_Elem));
	__jule_func_result = _1c0d6ecae_annotateKind(_self_, &((*(_60413_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c0d6e2db_annotateSptr(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _60943_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0dbbb1e_Sptr> _61013_ssptr = _1c0db2e01_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_61013_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0dbbb1e_Sptr> _61413_sptr = _1c0db2e01_Sptr((*(_60943_k)).ptr());;
	(*(_self_))._field_k=(&((*(_61013_ssptr))._field_Elem));
	__jule_func_result = _1c0d6ecae_annotateKind(_self_, &((*(_61413_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c0d6e62c_annotateStruct(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _61945_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0c5e3c9_StructIns> _62013_s = _1c0db41dd_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_62013_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0c5e3c9_StructIns> _62413_s2 = _1c0db41dd_Struct((*(_61945_k)).ptr());;
	if (((*(_62013_s))._field_Generics.len() != (*(_62413_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_62013_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac5556c:;
		if (it != expr_end) {
			jule::I64 _62814_i = it - expr->begin();
			jule::Ptr<_1c0dadb33_InsGeneric> _62821_g = *it;
			{
				jule::Ptr<_1c0dadb33_InsGeneric> _62917_g2 = (*(_62413_s2))._field_Generics[_62814_i];;
				if (_1c0db0c23_Equal((*(_62821_g))._field_Kind, (*(_62917_g2))._field_Kind)) {
					goto _iter_next_1aac5556c;
				};
				(*(_self_))._field_k=(&((*(_62821_g))._field_Kind));
				if ((!(_1c0d6ecae_annotateKind(_self_, &((*(_62917_g2))._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aac5556c:;
			++it;
			_62814_i++;
			goto _iter_begin_1aac5556c;
		}
		_iter_end_1aac5556c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c0d6e96d_annotateAny(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _64142_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6429_kind = _1c0db08d2_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac588c2:;
		if (it != expr_end) {
			jule::I64 _64313_i = it - expr->begin();
			jule::Ptr<_1c0c47bed_GenericDecl> _64316_g = *it;
			{
				if ((_6429_kind != (*(_64316_g))._field_Ident)) {
					goto _iter_next_1aac588c2;
				};
				jule::Ptr<_1c0dadb33_InsGeneric> _64713_t = (*((*(_self_))._field_f))._field_Generics[_64313_i];;
				{
					
					if ((_64713_t == nullptr) || ((*(_64713_t))._field_Kind == nullptr)) {
						_case_begin_1aac5a5b6:;
						{
							_1c0d6c608_pushGeneric(_self_, _64142_k, _64313_i);
						}
					}
					else if ((!(_1c0db0c23_Equal((*(_64713_t))._field_Kind, (*(_64142_k)))))) {
						_case_begin_1aac5a63d:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1aac5a495:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_64142_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1aac588c2:;
			++it;
			_64313_i++;
			goto _iter_begin_1aac588c2;
		}
		_iter_end_1aac588c2:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c0d6ecae_annotateKind(_1c0d6aa8a_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0db0519_TypeKind>* _66243_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1c0d6e96d_annotateAny(_self_, _66243_k)) {
			_case_begin_1aac5cba1:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c0db2b6a_Prim((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1aac5cc28:;
			{
				__jule_func_result = _1c0d6c949_annotatePrim(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c0db393a_Arr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1aac5ce8c:;
			{
				__jule_func_result = _1c0d6cc8a_annotateArr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c0db3bc1_Slc((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1aac5d003:;
			{
				__jule_func_result = _1c0d6d0cb_annotateSlc(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c0db470a_Map((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1aac5d069:;
			{
				__jule_func_result = _1c0d6d818_annotateMap(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c0db3e57_Fn((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1aac5d0e1:;
			{
				__jule_func_result = _1c0d6db59_annotateFn(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c0db3187_Ptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1aac5d168:;
			{
				__jule_func_result = _1c0d6de9a_annotatePtr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c0db2e01_Sptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1aac5d278:;
			{
				__jule_func_result = _1c0d6e2db_annotateSptr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c0db41dd_Struct((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1aac5d2de:;
			{
				__jule_func_result = _1c0d6e62c_annotateStruct(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aac5ca80:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1aac5c5da:;
	};
}



inline jule::Bool _1c0d70045_annotate(_1c0d6aa8a_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1c0d6ecae_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d6aa8a_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1c0d70e8b_pushErrToken(_1c0d708e7_fnCallArgChecker* _self_, jule::Ptr<_1c0c25406_Token> _70731_token, jule::Str _70746_fmt, jule::Slice<jule::Any> _70759_args) {
	_1c0d07340_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _70731_token, _70746_fmt, _70759_args);
}



inline void _1c0d712ee_pushErr(_1c0d708e7_fnCallArgChecker* _self_, jule::Str _71126_fmt, jule::Slice<jule::Any> _71139_args) {
	_1c0d70e8b_pushErrToken(_self_, (*(_self_))._field_errorToken, _71126_fmt, _71139_args);
}



inline jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>> _1c0d71585_getParams(_1c0d708e7_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1c0c701ed_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl.ptr()))) {
		return (*((*(_self_))._field_f))._field_Params.slice(1LL);;
	};
	return (*((*(_self_))._field_f))._field_Params;;
}



inline jule::Bool _1c0d71893_checkCounts(_1c0d708e7_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>>* _72431_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _72513_n = (*(_72431_params)).len();;
	if (((_72513_n > 0LL) && _1c0c701ed_IsSelf((*((*(_72431_params))[0LL]))._field_Decl.ptr()))) {
		(_72513_n)--;
	};
	jule::I64 _73013_diff = (_72513_n - (*(_self_))._field_args.len());;
	jule::Str _73113_log = jule::Str();;
	{
		
		if ((_73013_diff == 0LL)) {
			_case_begin_1aac69680:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72513_n > 0LL) && (*((*((*(_72431_params))[(_72513_n - 1LL)]))._field_Decl))._field_Variadic)) {
			_case_begin_1aac695a3:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_73013_diff < 0LL) || (_73013_diff > (*(_72431_params)).len()))) {
			_case_begin_1aac69273:;
			{
				_73113_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1aac6920c:;
			{
				_73113_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1aac69196:;
	};
	_21cd5e16e_StrBuilder _74213_err = static__21cd5e48d_New(32LL);;
	_21cd67d15_WriteStr(&_74213_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_21cd67d15_WriteStr(&_74213_err, jule::Str::lit("\n       wanted (", 16));
	{
		auto expr = _72431_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac6b594:;
		if (it != expr_end) {
			jule::I64 _74513_i = it - expr->begin();
			jule::Ptr<_1c0c7350e_ParamIns> *_74516_p = it;
			{
				_21cd67d15_WriteStr(&_74213_err, _1c0db08d2_Str((*((*(_74516_p))))._field_Kind.ptr()));
				if ((((*(_72431_params)).len() - _74513_i) > 1LL)) {
					_21cd67d15_WriteStr(&_74213_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1aac6b594:;
			++it;
			_74513_i++;
			goto _iter_begin_1aac6b594;
		}
		_iter_end_1aac6b594:;
	};
	_21cd680bd_WriteByte(&_74213_err, ')');
	_1c0d712ee_pushErr(_self_, _73113_log, jule::Slice<jule::Any>::make({jule::Any(_21cd6860c_Str(&_74213_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c0d71d49_checkArg(_1c0d708e7_fnCallArgChecker* _self_, jule::Ptr<_1c0c7350e_ParamIns>* _75632_p, jule::Ptr<_1c0d80352_Data>* _75651_arg, jule::Ptr<_1c0c25406_Token>* _75668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1c0c76787_parameterUsesGenerics(_75632_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_75632_p))))._field_Decl))._field_Variadic)) && _1c0d7923b_isGoodValueToInfer(_75651_arg));
		if (__jule_func_result) {
			_1c0d6aa8a_dynamicTypeAnnotation _76121_dta = _1c0d6aa8a_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75632_p)), ._field_a=(*(_75651_arg)), ._field_errorToken=(*(_75668_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1c0d70045_annotate(&_76121_dta);
		};
		if ((!(__jule_func_result))) {
			_1c0d70e8b_pushErrToken(_self_, (*(_75668_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1c0d1335c_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*((*((*(_75632_p))))._field_Decl))._field_Mutable, (*((*((*(_75632_p))))._field_Decl))._field_Reference, &((*((*(_75632_p))))._field_Kind), _75651_arg, _75668_errorToken)) {
		_1c0d0ed4d_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*((*(_75632_p))))._field_Decl))._field_Reference, &((*((*(_75632_p))))._field_Kind), _75651_arg, (*(_75668_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c0d72245_push(_1c0d708e7_fnCallArgChecker* _self_, jule::Ptr<_1c0c7350e_ParamIns>* _78528_p, jule::Ptr<_1c0c3ed27_Expr> _78546_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0db0519_TypeKind> _78613_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7879_oldImmut = (*((*(_self_))._field_e))._field_immutable;;
	(*((*(_self_))._field_e))._field_immutable=(!((*((*((*(_78528_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*((*((*(_78528_p))))._field_Decl))._field_Variadic)))) {
		(*((*(_self_))._field_e))._field_prefix=(*((*(_78528_p))))._field_Kind;
	} else {
		(*((*(_self_))._field_e))._field_prefix=nullptr;
	};
	jule::Ptr<_1c0d80352_Data> _79513_d = _1c0da0020_evalExpr((*(_self_))._field_e, _78546_arg);;
	(*((*(_self_))._field_e))._field_prefix=_78613_old;
	(*((*(_self_))._field_e))._field_immutable=_7879_oldImmut;
	if ((_79513_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1c0d71d49_checkArg(_self_, _78528_p, &(_79513_d), &((*(_78546_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_79513_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1c0d72641_pushVariadic(_1c0d708e7_fnCallArgChecker* _self_, jule::Ptr<_1c0c7350e_ParamIns>* _80936_p, jule::I64 _80954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _81113_variadiced = false;;
	jule::Bool _8129_more = ((_80954_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1c0c65c1b_SliceExprModel> _81313_model = jule::new_ptr<_1c0c65c1b_SliceExprModel>(_1c0c65c1b_SliceExprModel{._field_ElemKind=(*((*(_80936_p))))._field_Kind, });;
	jule::Ptr<_1c0db0519_TypeKind> _81713_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _8229_variadic = (*((*((*(_80936_p))))._field_Kind))._field_Variadic;;
	(*((*((*(_80936_p))))._field_Kind))._field_Variadic=false;
	__JULE_DEFER({
		(*((*((*(_80936_p))))._field_Kind))._field_Variadic=_8229_variadic;
	});;
	for (; (_80954_i < (*(_self_))._field_args.len()); (_80954_i)++) {
		{
			jule::Ptr<_1c0c3ed27_Expr> _82917_arg = (*(_self_))._field_args[_80954_i];;
			{
				auto &_match_expr{ (*(_82917_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1aac7ce9b:;
					{
						(*((*(_self_))._field_e))._field_prefix=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0dbc5e2_Slc>(_1c0dbc5e2_Slc{._field_Elem=(*((*(_80936_p))))._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1aac7cae4:;
					{
						(*((*(_self_))._field_e))._field_prefix=(*((*(_80936_p))))._field_Kind;
					}
				}
				_match_end_1aac7ca8e:;
			};
			jule::Ptr<_1c0d80352_Data> _84217_d = _1c0d9e88d_eval((*(_self_))._field_e, _82917_arg);;
			if ((_84217_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1aac7b3c8;
			};
			if ((*((*(_84217_d))._field_Kind))._field_Variadic) {
				_81113_variadiced=true;
				(*((*((*(_80936_p))))._field_Kind))._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1c0d71d49_checkArg(_self_, _80936_p, &(_84217_d), &((*(_82917_arg))._field_Token)));
				{
					auto &_match_expr{ (*(_84217_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1aac81532:;
						{
							_81313_model=(*(_84217_d))._field_Model.cast_ptr<_1c0c65c1b_SliceExprModel>(&__jule_any_type76);
							(*(_81313_model))._field_ElemKind=(*((*(_80936_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1aac81169:;
						{
							_81313_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_84217_d))._field_Model); };
						}
					}
					_match_end_1aac81114:;
				};
				(_80954_i)++;
				goto _iter_end_1aac7b3c8;
			};
			__jule_func_result=(__jule_func_result && _1c0d71d49_checkArg(_self_, _80936_p, &(_84217_d), &((*(_82917_arg))._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81313_model))._field_Elems; __jule_push_dest.push((*(_84217_d))._field_Model); };
		}
	_iter_next_1aac7b3c8:;
	}
	_iter_end_1aac7b3c8:;;
	(*((*(_self_))._field_e))._field_prefix=_81713_old;
	if ((_81113_variadiced && _8129_more)) {
		_1c0d70e8b_pushErrToken(_self_, (*((*(_self_))._field_args[_80954_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81313_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_81313_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c0d72982_checkArgs(_1c0d708e7_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>>* _88533_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8869_arg = (*((*(_self_))._field_e))._field_arg;;
	(*((*(_self_))._field_e))._field_arg=true;
	__jule_func_result=true;
	jule::I64 _89013_i = 0LL;;
	if ((((*(_88533_params)).len() > 0LL) && _1c0c701ed_IsSelf((*((*(_88533_params))[0LL]))._field_Decl.ptr()))) {
		(_89013_i)++;
	};
	_julec_label_1aac8614c:;
	while ((_89013_i < (*(_88533_params)).len())) {
		{
			jule::Ptr<_1c0c7350e_ParamIns> _89717_p = (*(_88533_params))[_89013_i];;
			{
				
				if ((*((*(_89717_p))._field_Decl))._field_Variadic) {
					_case_begin_1aac87a66:;
					{
						__jule_func_result=(_1c0d72641_pushVariadic(_self_, &(_89717_p), _89013_i) && __jule_func_result);
						goto _iter_end_1aac8645a;
					}
				}
				else if (((*(_self_))._field_args.len() <= _89013_i)) {
					_case_begin_1aac87b54:;
					{
						__jule_func_result=false;
						goto _iter_end_1aac8645a;
					}
				}
				else {
					_case_begin_1aac876c0:;
					{
						__jule_func_result=(_1c0d72245_push(_self_, &(_89717_p), (*(_self_))._field_args[_89013_i]) && __jule_func_result);
					}
				}
				_match_end_1aac87659:;
			};
			(_89013_i)++;
		}
	_iter_next_1aac8645a:;
	}
	_iter_end_1aac8645a:;;
	(*((*(_self_))._field_e))._field_arg=_8869_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c0d72c18_checkDynamicTypeAnnotation(_1c0d708e7_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac89a35:;
		if (it != expr_end) {
			jule::Ptr<_1c0dadb33_InsGeneric> _91716_g = *it;
			{
				if ((_91716_g == nullptr)) {
					_1c0d712ee_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aac89a35:;
			++it;
			goto _iter_begin_1aac89a35;
		}
		_iter_end_1aac89a35:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c0d72e9e_check(_1c0d708e7_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>> _92713_params = _1c0d71585_getParams(_self_);;
	__jule_func_result=_1c0d71893_checkCounts(_self_, &(_92713_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1c0d72982_checkArgs(_self_, &(_92713_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1c0d72c18_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d708e7_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1c0d73d7e_pushErr(_1c0d7382e_structLitChecker* _self_, jule::Ptr<_1c0c25406_Token> _96526_token, jule::Str _96541_fmt, jule::Slice<jule::Any> _96554_args) {
	_1c0d82596_pushErr((*(_self_))._field_e.ptr(), _96526_token, _96541_fmt, _96554_args);
}



inline void _1c0d741e2_pushSuggestion(_1c0d7382e_structLitChecker* _self_, jule::Str _97033_fmt, jule::Slice<jule::Any> _97046_args) {
	_1c0d82909_pushSuggestion((*(_self_))._field_e.ptr(), _97033_fmt, _97046_args);
}



inline void _1c0d74610_pushMatch(_1c0d7382e_structLitChecker* _self_, jule::Ptr<_1c0c5d829_FieldIns>* _97433_f, jule::Ptr<_1c0d80352_Data>* _97452_d, jule::Ptr<_1c0c25406_Token>* _97467_errorToken) {
	;
	jule::Bool _9809_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_97433_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1c0d1335c_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, _9809_mutable, false, &((*((*(_97433_f))))._field_Kind), _97452_d, _97467_errorToken)) {
		_1c0d0ed4d_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_97433_f))))._field_Kind), _97452_d, (*(_97467_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1c0c64269_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1c0c64269_StructArgExprModel>(_1c0c64269_StructArgExprModel{._field_Token=(*(_97467_errorToken)), ._field_Field=(*(_97433_f)), ._field_Expr=(*(_97452_d))})); };
}



inline void _1c0d74973_checkPair(_1c0d7382e_structLitChecker* _self_, jule::Ptr<_1c0c44546_FieldExprPair>* _99333_pair, jule::Slice<jule::Ptr<_1c0c3ed27_Expr>>* _99360_exprs) {
	jule::Ptr<_1c0c5d829_FieldIns> _99513_f = _1c0c60782_FindField((*(_self_))._field_s.ptr(), (*((*((*(_99333_pair))))._field_Field))._field_Kind);;
	if ((_99513_f == nullptr)) {
		_1c0d73d7e_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1c0d07a9e_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_99513_f))._field_Decl))._field_Public, (*((*(_99513_f))._field_Decl))._field_Token)))) {
		_1c0d73d7e_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		_1c0d741e2_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1aac939d9:;
	{
		auto expr = _99360_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac964d1:;
		if (it != expr_end) {
			jule::Ptr<_1c0c3ed27_Expr> _100721_expr = *it;
			{
				{
					auto &_match_expr{ (*(_100721_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1aac96e82:;
						{
							jule::Ptr<_1c0c44546_FieldExprPair> _101021_dpair = (*(_100721_expr))._field_Kind.cast_ptr<_1c0c44546_FieldExprPair>(&__jule_any_type77);;
							{
								
								if (((*(_99333_pair)) == _101021_dpair)) {
									_case_begin_1aac97c74:;
									{
										goto _iter_end_1aac964d1;
									}
								}
								else if (((*((*((*(_99333_pair))))._field_Field))._field_Kind == (*((*(_101021_dpair))._field_Field))._field_Kind)) {
									_case_begin_1aac97ceb:;
									{
										_1c0d73d7e_pushErr(_self_, (*((*(_99333_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99333_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1aac964d1;
									}
								}
								_match_end_1aac97bb9:;
							};
						}
					}
					_match_end_1aac96e2c:;
				};
			}
			_iter_next_1aac964d1:;
			++it;
			goto _iter_begin_1aac964d1;
		}
		_iter_end_1aac964d1:;
	};
	jule::Ptr<_1c0db0519_TypeKind> _102113_prefix = (*((*(_self_))._field_e))._field_prefix;;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_102113_prefix;
	});;
	(*((*(_self_))._field_e))._field_prefix=(*(_99513_f))._field_Kind;
	jule::Ptr<_1c0d80352_Data> _102513_d = _1c0da0020_evalExpr((*(_self_))._field_e, (*((*(_99333_pair))))._field_Expr);;
	if ((_102513_d == nullptr)) {
		return;;
	};
	_1c0d74610_pushMatch(_self_, &(_99513_f), &(_102513_d), &((*((*(_99333_pair))))._field_Field));
}



inline jule::Bool _1c0d74cb4_readyExprs(_1c0d7382e_structLitChecker* _self_, jule::Slice<jule::Ptr<_1c0c3ed27_Expr>>* _103234_exprs) {
	jule::Bool _103313_ok = true;;
	{
		auto expr = _103234_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac9bb9b:;
		if (it != expr_end) {
			jule::I64 _103414_i = it - expr->begin();
			jule::Ptr<_1c0c3ed27_Expr> _103421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_103421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1aac9c927:;
						{
							jule::Ptr<_1c0c45b52_KeyValPair> _103721_pair = (*(_103421_expr))._field_Kind.cast_ptr<_1c0c45b52_KeyValPair>(&__jule_any_type78);;
							{
								auto &_match_expr{ (*((*(_103721_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1aac9d5a4:;
									{
										goto _match_end_1aac9da8d;
									}
								}
								else {
									_case_begin_1aac9dae3:;
									{
										_1c0d73d7e_pushErr(_self_, (*(_103721_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_103313_ok=false;
										goto _iter_next_1aac9bb9b;
									}
								}
								_match_end_1aac9da8d:;
							};
							(*((*(_103234_exprs))[_103414_i]))._field_Kind=jule::Any(jule::new_ptr<_1c0c44546_FieldExprPair>(_1c0c44546_FieldExprPair{._field_Field=(*((*(_103721_pair))._field_Key))._field_Token, ._field_Expr=(*(_103721_pair))._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1aac9c8c2:;
				};
			}
			_iter_next_1aac9bb9b:;
			++it;
			_103414_i++;
			goto _iter_begin_1aac9bb9b;
		}
		_iter_end_1aac9bb9b:;
	};
	return _103313_ok;;
}



inline void _1c0d7506c_check(_1c0d7382e_structLitChecker* _self_, jule::Slice<jule::Ptr<_1c0c3ed27_Expr>>* _105629_exprs) {
	if (((*(_105629_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1c0d74cb4_readyExprs(_self_, _105629_exprs)))) {
		return;;
	};
	jule::Bool _106313_paired = false;;
	{
		auto expr = _105629_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac9c5e7:;
		if (it != expr_end) {
			jule::I64 _106414_i = it - expr->begin();
			jule::Ptr<_1c0c3ed27_Expr> _106421_expr = *it;
			{
				{
					auto &_match_expr{ (*(_106421_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1aaca6de8:;
						{
							jule::Ptr<_1c0c44546_FieldExprPair> _106721_pair = (*(_106421_expr))._field_Kind.cast_ptr<_1c0c44546_FieldExprPair>(&__jule_any_type77);;
							if (((_106414_i > 0LL) && (!(_106313_paired)))) {
								_1c0d73d7e_pushErr(_self_, (*(_106721_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_106313_paired=true;
							_1c0d74973_checkPair(_self_, &(_106721_pair), _105629_exprs);
						}
					}
					else {
						_case_begin_1aaca1db0:;
						{
							if (_106313_paired) {
								_1c0d73d7e_pushErr(_self_, (*(_106421_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_106414_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1c0d73d7e_pushErr(_self_, (*(_106421_expr))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1aac9c5e7;
							};
							jule::Ptr<_1c0c5d829_FieldIns> _108221_field = (*((*(_self_))._field_s))._field_Fields[_106414_i];;
							if ((!(_1c0d07a9e_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_108221_field))._field_Decl))._field_Public, (*((*(_108221_field))._field_Decl))._field_Token)))) {
								_1c0d73d7e_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1c0d741e2_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1c0db0519_TypeKind> _109021_prefix = (*((*(_self_))._field_e))._field_prefix;;
							__JULE_DEFER({
								(*((*(_self_))._field_e))._field_prefix=_109021_prefix;
							});;
							(*((*(_self_))._field_e))._field_prefix=(*(_108221_field))._field_Kind;
							jule::Ptr<_1c0d80352_Data> _109421_d = _1c0da0020_evalExpr((*(_self_))._field_e, _106421_expr);;
							if ((_109421_d == nullptr)) {
								goto _iter_next_1aac9c5e7;
							};
							_1c0d74610_pushMatch(_self_, &(_108221_field), &(_109421_d), &((*(_106421_expr))._field_Token));
						}
					}
					_match_end_1aaca1d5a:;
				};
			}
			_iter_next_1aac9c5e7:;
			++it;
			_106414_i++;
			goto _iter_begin_1aac9c5e7;
		}
		_iter_end_1aac9c5e7:;
	};
	if ((!(_106313_paired))) {
		jule::I64 _110513_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _110617_diff = (_110513_n - (*(_105629_exprs)).len());;
		{
			
			if ((_110617_diff <= 0LL)) {
				_case_begin_1aaca959e:;
				{
					return;;
				}
			}
			_match_end_1aaca944a:;
		};
		_21cd5e16e_StrBuilder _111217_idents = static__21cd5e48d_New(32LL);;
		for (; (_110617_diff > 0LL); (_110617_diff)--) {
			{
				_21cd67d15_WriteStr(&_111217_idents, jule::Str::lit(", ", 2));
				_21cd67d15_WriteStr(&_111217_idents, (*((*((*((*(_self_))._field_s))._field_Fields[(_110513_n - _110617_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1aaca9d0d:;
		}
		_iter_end_1aaca9d0d:;;
		_1c0d73d7e_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_21cd690ad_Buf(&_111217_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d7382e_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0d2b94c_Var> _1c0d75aea_buildVar(_1c0d75611_rangeChecker* _self_, jule::Ptr<_1c0c4d781_VarDecl>* _113228_decl) {
	jule::Ptr<_1c0d2b94c_Var> _113313_v = _1c0c7cae0_buildVar((*(_113228_decl)));;
	return _113313_v;;
}



inline void _1c0d75ce8_setSizeKey(_1c0d75611_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1c0c27d65_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1c0d75aea_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=(*(_1c0e9ee44_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aacae4b6:;
			{
				(*((*((*(_self_))._field_Kind))._field_KeyA))._field_IterRelation=jule::new_ptr<_1c0d2a792_IterRelation>(_1c0d2a792_IterRelation{._field_Range=(*((*(_self_))._field_d))._field_Model.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1aacae461:;
	};
}



inline void _1c0d76216_checkRangeExprValidity(_1c0d75611_rangeChecker* _self_, jule::Ptr<_1c0d80352_Data>* _115946_d, jule::Ptr<_1c0d2b94c_Var>* _115957_key, jule::Ptr<_1c0db0519_TypeKind>* _115973_k) {
	jule::Bool _116013__mut = (*((*(_115957_key))))._field_Mutable;;
	if ((_116013__mut && (!(_1c0db1d9a_Mutable((*(_115973_k)).ptr()))))) {
		_116013__mut=false;
	};
	_1c0d1335c_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _116013__mut, (*((*(_115957_key))))._field_Reference, &((*((*((*(_115957_key))))._field_Kind))._field_Kind), _115946_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1c0d76414_checkSlice(_1c0d75611_rangeChecker* _self_) {
	_1c0d75ce8_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c0c27d65_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c0dbc5e2_Slc> _117813_slc = _1c0db3bc1_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1c0d75aea_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=(*(_117813_slc))._field_Elem});
	_1c0d76216_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_117813_slc))._field_Elem));
}



inline void _1c0d76612_checkArray(_1c0d75611_rangeChecker* _self_) {
	_1c0d75ce8_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c0c27d65_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c0dbe913_Arr> _119113_arr = _1c0db393a_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1c0d75aea_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=(*(_119113_arr))._field_Elem});
	_1c0d76216_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_119113_arr))._field_Elem));
}



inline void _1c0d76810_checkMapKeyA(_1c0d75611_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1c0c27d65_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c0dbdc86_Map> _120313_m = _1c0db470a_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1c0d75aea_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=(*(_120313_m))._field_Key});
	jule::Ptr<_1c0d80352_Data> _120713_d = jule::new_ptr<_1c0d80352_Data>((*((*(_self_))._field_d)));;
	(*(_120713_d))._field_Kind=(*(_120313_m))._field_Key;
	_1c0d76216_checkRangeExprValidity(_self_, &(_120713_d), &((*((*(_self_))._field_Kind))._field_KeyA), &((*(_120313_m))._field_Key));
}



inline void _1c0d76a0d_checkMapKeyB(_1c0d75611_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c0c27d65_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c0dbdc86_Map> _121813_m = _1c0db470a_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1c0d75aea_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=(*(_121813_m))._field_Val});
	jule::Ptr<_1c0d80352_Data> _122213_d = jule::new_ptr<_1c0d80352_Data>((*((*(_self_))._field_d)));;
	(*(_122213_d))._field_Kind=(*(_121813_m))._field_Val;
	_1c0d76216_checkRangeExprValidity(_self_, &(_122213_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_121813_m))._field_Val));
}



inline void _1c0d76c0b_checkMap(_1c0d75611_rangeChecker* _self_) {
	_1c0d76810_checkMapKeyA(_self_);
	_1c0d76a0d_checkMapKeyB(_self_);
}



inline void _1c0d76e09_checkStr(_1c0d75611_rangeChecker* _self_) {
	_1c0d75ce8_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c0c27d65_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1c0d75aea_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=(*(_1c0e9ee44_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1c0d77107_checkComptime(_1c0d75611_rangeChecker* _self_) {
	_1c0d75ce8_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyA))._field_Mutable)) {
		_1c0d07340_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyA))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyB))._field_Mutable)) {
		_1c0d07340_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyB))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c0c27d65_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1c0d75aea_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
}



inline jule::Bool _1c0d7738d_checkComptimeRange(_1c0d75611_rangeChecker* _self_) {
	jule::Ptr<_1c0c8aaed_comptimeRange> _125713_range = _1c0db6014_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_125713_range))._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1aaccb934:;
			{
				_1c0d77107_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1aaccb5d2:;
			{
				_1c0d07340_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1aaccb57c:;
	};
}



inline jule::Bool _1c0d77624_check(_1c0d75611_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1aacce42b:;
		}
		else if ((_1c0db3bc1_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aaccd5b2:;
			{
				_1c0d76414_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1c0db393a_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aaccd628:;
			{
				_1c0d76612_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1c0db470a_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aaccd68e:;
			{
				_1c0d76c0b_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1c0db6014_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aaccd705:;
			{
				return _1c0d7738d_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1aaccce74:;
			{
				jule::Ptr<_1c0db80e3_Prim> _128913_prim = _1c0db2b6a_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_128913_prim != nullptr) && _1c0dbb57a_IsStr(_128913_prim.ptr()))) {
					_1c0d76e09_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1aacccdb9:;
	};
	_1c0d07340_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d75611_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1c0d78290_prepareTypes(_1c0d77d72_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1c0c756a9_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1c0d78548_prepareExprs(_1c0d77d72_retTypeChecker* _self_, jule::Ptr<_1c0c3ed27_Expr>* _131736_e) {
	if (((*(_131736_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_131736_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1aacd5487:;
			{
				(*(_self_))._field_exprs=(*((*((*(_131736_e))))._field_Kind.cast_ptr<_1c0c409e8_TupleExpr>(&__jule_any_type80)))._field_Expr;
			}
		}
		else {
			_case_begin_1aacd50be:;
			{
				{ jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_131736_e))); };
			}
		}
		_match_end_1aacd5069:;
	};
}



inline void _1c0d78746_checkExprs(_1c0d77d72_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c0d80352_Data>> _133313_datas = jule::Slice<jule::Ptr<_1c0d80352_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1c0d82046_Eval> _133413_eval = _1c0d0e7dc_eval((*((*(_self_))._field_sc))._field_s, jule::Trait<_1c0dd0050_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aacd58e9:;
		if (it != expr_end) {
			jule::I64 _133514_i = it - expr->begin();
			jule::Ptr<_1c0c3ed27_Expr> _133521_expr = *it;
			{
				if ((_133514_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1aacd58e9;
				};
				jule::Ptr<_1c0db0519_TypeKind> _134017_t = (*(_self_))._field_types[_133514_i];;
				(*(_133413_eval))._field_prefix=_134017_t;
				jule::Ptr<_1c0d80352_Data> _134317_d = _1c0da0020_evalExpr(_133413_eval, _133521_expr);;
				if ((_134317_d == nullptr)) {
					goto _iter_next_1aacd58e9;
				};
				{ jule::Slice<jule::Ptr<_1c0d80352_Data>> &__jule_push_dest = _133313_datas; __jule_push_dest.push(_134317_d); };
				if (((!((*(_134317_d))._field_Mutable)) && _1c0db1d9a_Mutable((*(_134317_d))._field_Kind.ptr()))) {
					_1c0d07340_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1c0d68e1d_assignTypeChecker _135517_ac = _1c0d68e1d_assignTypeChecker{._field_s=(*((*(_self_))._field_sc))._field_s, ._field_dest=_134017_t, ._field_d=_134317_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1c0d6a183_check(&_135517_ac);
			}
			_iter_next_1aacd58e9:;
			++it;
			_133514_i++;
			goto _iter_begin_1aacd58e9;
		}
		_iter_end_1aacd58e9:;
	};
	if ((_133313_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1c0c69060_TupleExprModel>(_1c0c69060_TupleExprModel{._field_Datas=_133313_datas}), &__jule_any_type81);
	} else if ((_133313_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_133313_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1c0d78a87_check(_1c0d77d72_retTypeChecker* _self_, jule::Ptr<_1c0c3ed27_Expr>* _137429_e) {
	_1c0d78290_prepareTypes(_self_);
	_1c0d78548_prepareExprs(_self_, _137429_e);
	jule::I64 _13789_n = (*(_self_))._field_exprs.len();;
	if (((_13789_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1c0c727e9_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
			_1c0d07340_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_13789_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1c0c71a29_IsVoid((*((*(_self_))._field_f))._field_Decl.ptr()))) {
		_1c0d07340_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_13789_n > (*(_self_))._field_types.len())) {
		_1c0d07340_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_13789_n < (*(_self_))._field_types.len())) {
		_1c0d07340_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1c0d78746_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d77d72_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0d7a616_SelectPackage(_1c0d7a12c_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aace39b2:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1aace39b2:;
			++it;
			goto _iter_begin_1aace39b2;
		}
		_iter_end_1aace39b2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0d2b94c_Var> _1c0d7aa12_FindVar(_1c0d7a12c_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1c0d7c7e4_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1c0dae727_TypeAlias> _1c0d7ae0d_FindTypeAlias(_1c0d7a12c_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1c0d7cc9a_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1c0c5b64b_Struct> _1c0d7b309_FindStruct(_1c0d7a12c_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aace6201:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5b64b_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*(_5421_s))._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1aace6201:;
			++it;
			goto _iter_begin_1aace6201;
		}
		_iter_end_1aace6201:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c715a6_Fn> _1c0d7b705_FindFn(_1c0d7a12c_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aace7785:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*(_6521_f))._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1aace7785:;
			++it;
			goto _iter_begin_1aace7785;
		}
		_iter_end_1aace7785:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c84850_Trait> _1c0d7ba46_FindTrait(_1c0d7a12c_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aace8aa5:;
		if (it != expr_end) {
			jule::Ptr<_1c0c84850_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1aace8aa5:;
			++it;
			goto _iter_begin_1aace8aa5;
		}
		_iter_end_1aace8aa5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c8704a_Enum> _1c0d7bd87_FindEnum(_1c0d7a12c_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aace927b:;
		if (it != expr_end) {
			jule::Ptr<_1c0c8704a_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1aace927b:;
			++it;
			goto _iter_begin_1aace927b;
		}
		_iter_end_1aace927b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c88755_TypeEnum> _1c0d7c1c8_FindTypeEnum(_1c0d7a12c_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aacea27c:;
		if (it != expr_end) {
			jule::Ptr<_1c0c88755_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1aacea27c:;
			++it;
			goto _iter_begin_1aacea27c;
		}
		_iter_end_1aacea27c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0d2b94c_Var> _1c0d7c7e4_findVar(_1c0d7a12c_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I64 _11017_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11017_i >= 0LL); (_11017_i)--) {
			{
				jule::Ptr<_1c0d2b94c_Var> _11221_v = (*(_self_))._field_Vars[_11017_i];;
				if ((((*(_11221_v))._field_Ident == (*(_10827_ident))) && ((*(_11221_v))._field_Binded == _10839_binded))) {
					return _11221_v;;
				};
			}
		_iter_next_1aacec955:;
		}
		_iter_end_1aacec955:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aacec999:;
			if (it != expr_end) {
				jule::Ptr<_1c0d2b94c_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*(_11825_v))._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1aacec999:;
				++it;
				goto _iter_begin_1aacec999;
			}
			_iter_end_1aacec999:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1c0dae727_TypeAlias> _1c0d7cc9a_findTypeAlias(_1c0d7a12c_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I64 _12917_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12917_i >= 0LL); (_12917_i)--) {
			{
				jule::Ptr<_1c0dae727_TypeAlias> _13121_ta = (*(_self_))._field_TypeAliases[_12917_i];;
				if ((((*(_13121_ta))._field_Ident == (*(_12733_ident))) && ((*(_13121_ta))._field_Binded == _12745_binded))) {
					return _13121_ta;;
				};
			}
		_iter_next_1aad00a24:;
		}
		_iter_end_1aad00a24:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aad00a68:;
			if (it != expr_end) {
				jule::Ptr<_1c0dae727_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*(_13725_ta))._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1aad00a68:;
				++it;
				goto _iter_begin_1aad00a68;
			}
			_iter_end_1aad00a68:;
		};
	};
	return nullptr;;
}



inline jule::Any _1c0d7d196_defByIdent(_1c0d7a12c_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad023e9:;
		if (it != expr_end) {
			jule::Ptr<_1c0d2b94c_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*(_14921_v))._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1aad023e9:;
			++it;
			goto _iter_begin_1aad023e9;
		}
		_iter_end_1aad023e9:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad03cad:;
		if (it != expr_end) {
			jule::Ptr<_1c0dae727_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*(_15521_ta))._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type66);;
				};
			}
			_iter_next_1aad03cad:;
			++it;
			goto _iter_begin_1aad03cad;
		}
		_iter_end_1aad03cad:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad04b7c:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5b64b_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*(_16121_s))._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type65);;
				};
			}
			_iter_next_1aad04b7c:;
			++it;
			goto _iter_begin_1aad04b7c;
		}
		_iter_end_1aad04b7c:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad046e8:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*(_16721_f))._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type64);;
				};
			}
			_iter_next_1aad046e8:;
			++it;
			goto _iter_begin_1aad046e8;
		}
		_iter_end_1aad046e8:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad06299:;
		if (it != expr_end) {
			jule::Ptr<_1c0c84850_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1aad06299:;
			++it;
			goto _iter_begin_1aad06299;
		}
		_iter_end_1aad06299:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad061bc:;
		if (it != expr_end) {
			jule::Ptr<_1c0c8704a_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type67);;
				};
			}
			_iter_next_1aad061bc:;
			++it;
			goto _iter_begin_1aad061bc;
		}
		_iter_end_1aad061bc:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad08367:;
		if (it != expr_end) {
			jule::Ptr<_1c0c88755_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type68);;
				};
			}
			_iter_next_1aad08367:;
			++it;
			goto _iter_begin_1aad08367;
		}
		_iter_end_1aad08367:;
	};
	return nullptr;;
}



inline jule::Bool _1c0d7d64c_isDuplicatedIdent(_1c0d7a12c_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad097ec:;
		if (it != expr_end) {
			jule::Ptr<_1c0d2b94c_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20216_v))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1aad097ec:;
			++it;
			goto _iter_begin_1aad097ec;
		}
		_iter_end_1aad097ec:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad0a523:;
		if (it != expr_end) {
			jule::Ptr<_1c0dae727_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20816_ta))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1aad0a523:;
			++it;
			goto _iter_begin_1aad0a523;
		}
		_iter_end_1aad0a523:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad0b667:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5b64b_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*((*(_21416_s))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1aad0b667:;
			++it;
			goto _iter_begin_1aad0b667;
		}
		_iter_end_1aad0b667:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad0b2c1:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*((*(_22016_f))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1aad0b2c1:;
			++it;
			goto _iter_begin_1aad0b2c1;
		}
		_iter_end_1aad0b2c1:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad0d35b:;
		if (it != expr_end) {
			jule::Ptr<_1c0c84850_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1aad0d35b:;
			++it;
			goto _iter_begin_1aad0d35b;
		}
		_iter_end_1aad0d35b:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad0d27e:;
		if (it != expr_end) {
			jule::Ptr<_1c0c8704a_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1aad0d27e:;
			++it;
			goto _iter_begin_1aad0d27e;
		}
		_iter_end_1aad0d27e:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad1089c:;
		if (it != expr_end) {
			jule::Ptr<_1c0c88755_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1aad1089c:;
			++it;
			goto _iter_begin_1aad1089c;
		}
		_iter_end_1aad1089c:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d7a12c_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c0d80709_IsNil(_1c0d80352_Data* _self_) {
	return _1c0db15e7_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1c0d80990_IsVoid(_1c0d80352_Data* _self_) {
	return _1c0db187d_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1c0d80c26_IsConst(_1c0d80352_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1c0d81067_GoodOperand(_1c0d80352_Data* _self_, jule::Ptr<_1c0d80352_Data>* _10231_other) {
	if ((_1c0db36a4_TypeEnum((*((*(_10231_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1c0db2b6a_Prim((*((*(_10231_other))))._field_Kind.ptr()) == nullptr) || (!(_1c0dbb811_IsAny(_1c0db2b6a_Prim((*((*(_10231_other))))._field_Kind.ptr()).ptr())))) && (_1c0db4474_Trait((*((*(_10231_other))))._field_Kind.ptr()) == nullptr)) && (!(_1c0db15e7_IsNil((*(_self_))._field_Kind.ptr()))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d80352_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d81496_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1c0d82596_pushErr(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c25406_Token> _13326_token, jule::Str _13341_fmt, jule::Slice<jule::Any> _13354_args) {
	_1c0d07340_pushErr((*(_self_))._field_s.ptr(), _13326_token, _13341_fmt, _13354_args);
}



inline void _1c0d82909_pushSuggestion(_1c0d82046_Eval* _self_, jule::Str _13833_fmt, jule::Slice<jule::Any> _13846_args) {
	_1c0d076a3_pushSuggestion((*(_self_))._field_s.ptr(), _13833_fmt, _13846_args);
}



inline void _1c0d82b07_allowBuiltin(_1c0d82046_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1c0d82d05_disallowBuiltin(_1c0d82046_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1c0d8308b_isUnsafe(_1c0d82046_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1c0d83322_isGlobal(_1c0d82046_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1aad52b53:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aad5301b:;
			{
				return false;;
			}
		}
		_match_end_1aad52eb6:;
	};
}



inline jule::Bool _1c0d83630_applyNumericPrefix(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data>* _16542_d) {
	if ((((((*(_16542_d)) == nullptr) || (!(_1c0d80c26_IsConst((*(_16542_d)).ptr())))) || (_1c0db2b6a_Prim((*((*(_16542_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1c0db80e3_Prim> _1729_prim = _1c0db2b6a_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1729_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_203643d58_IsFloat(_1c0db8434_Str(_1729_prim.ptr()))) {
			_case_begin_1aad5576b:;
			{
				(*((*(_16542_d))))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>((*((*(_self_))._field_prefix)));
				_203648137_SetF64((*((*(_16542_d))))._field_Constant.ptr(), static_cast<jule::F64>(_2036472ac_AsF64((*((*(_16542_d))))._field_Constant.ptr())));
				(*((*((*(_16542_d))))._field_Constant))._field_Kind=(*(_1729_prim))._field_Kind;
			}
		}
		else if (_203643440_IsSigInt(_1c0db8434_Str(_1729_prim.ptr()))) {
			_case_begin_1aad557d2:;
			{
				if ((!(_1c0d66448_sigAssignable(_1c0db8434_Str(_1729_prim.ptr()), _16542_d)))) {
					return false;;
				};
				(*((*(_16542_d))))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>((*((*(_self_))._field_prefix)));
				_203647565_SetI64((*((*(_16542_d))))._field_Constant.ptr(), static_cast<jule::I64>(_203646c90_AsI64((*((*(_16542_d))))._field_Constant.ptr())));
				(*((*((*(_16542_d))))._field_Constant))._field_Kind=(*(_1729_prim))._field_Kind;
			}
		}
		else if (_20364374d_IsUnsigInt(_1c0db8434_Str(_1729_prim.ptr()))) {
			_case_begin_1aad55848:;
			{
				if ((!(_1c0d66811_unsigAssignable(_1c0db8434_Str(_1729_prim.ptr()), _16542_d)))) {
					return false;;
				};
				(*((*(_16542_d))))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>((*((*(_self_))._field_prefix)));
				_20364781d_SetU64((*((*(_16542_d))))._field_Constant.ptr(), static_cast<jule::U64>(_203647026_AsU64((*((*(_16542_d))))._field_Constant.ptr())));
				(*((*((*(_16542_d))))._field_Constant))._field_Kind=(*(_1729_prim))._field_Kind;
			}
		}
		_match_end_1aad55491:;
	};
	return true;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d83971_litStr(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c40dc2_LitExpr>* _20022_l) {
	jule::Str _20113_s = (*((*(_20022_l))))._field_Value.slice(1LL, ((*((*(_20022_l))))._field_Value.len() - 1LL));;
	if (_1c0c26825_IsRawStr((*((*(_20022_l))))._field_Value)) {
		_20113_s=_1c0d646cc_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20113_s));
	} else {
		_20113_s=_1c0d64a1d_ToStr(static_cast<jule::Slice<jule::U8>>(_20113_s));
	};
	jule::Ptr<_2036445ea_Const> _20713_constant = static__203645387_NewStr(_20113_s);;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9bced_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_20713_constant, &__jule_any_type19), ._field_Constant=_20713_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d83cb2_litRune(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c40dc2_LitExpr>* _21723_l) {
	jule::Str _2199_lt = (*((*(_21723_l))))._field_Value.slice(1LL, ((*((*(_21723_l))))._field_Value.len() - 1LL));;
	jule::I32 _2209_r = _1c0d64523_ToRune(static_cast<jule::Slice<jule::U8>>(_2199_lt));;
	jule::Ptr<_1c0d80352_Data> _22113_data = jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Constant=static__203644a3a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2209_r)))});;
	jule::Bool _2259_isAscii = _1c0d4ae22_IsAscii(_2209_r);;
	if (_2259_isAscii) {
		(*(_22113_data))._field_Kind=_1c0e9d904_primU8;
	} else {
		(*(_22113_data))._field_Kind=_1c0e9d371_primI32;
	};
	(*(_22113_data))._field_Mutable=true;
	(*(_22113_data))._field_Model=jule::Any(jule::new_ptr<_1c0c6cb9b_RuneExprModel>(_1c0c6cb9b_RuneExprModel{._field_Code=_2209_r}), &__jule_any_type82);
	(*(_22113_data))._field_IsRune=true;
	(*(_22113_data))._field_untyped=true;
	return _22113_data;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d84103_litFloat(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c40dc2_LitExpr>* _23924_l) {
	jule::F64 _2409_f = ({
		auto except = _20362946a_ParseFloat((*((*(_23924_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_2036445ea_Const> _24113_constant = static__203645651_NewF64(_2409_f);;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_untyped=true, ._field_Kind=_1c0e9e98d_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24113_constant, &__jule_any_type19), ._field_Constant=_24113_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d84444_litInt(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c40dc2_LitExpr>* _25126_l) {
	;
	jule::Str _25413_lit = (*((*(_25126_l))))._field_Value;;
	jule::I64 _25513_base = 0LL;;
	{
		
		if (_21cd492ad_HasPrefix(_25413_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1aad6533b:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=16LLU;
			}
		}
		else if (_21cd492ad_HasPrefix(_25413_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1aad65429:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=2LLU;
			}
		}
		else if (_21cd492ad_HasPrefix(_25413_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1aad6502d:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=8LLU;
			}
		}
		else if (((_25413_lit[0LL] == '0') && (_25413_lit.len() > 1LL))) {
			_case_begin_1aad65094:;
			{
				(_25413_lit).mut_slice(1LL);;
				_25513_base=8LLU;
			}
		}
		else {
			_case_begin_1aad64eb7:;
			{
				_25513_base=10LLU;
			}
		}
		_match_end_1aad64e62:;
	};
	jule::Ptr<_1c0d80352_Data> _27513_d = jule::new_ptr<_1c0d80352_Data>();;
	jule::Bool _27713_ok = true;;
	jule::I64 _2789_sig = ({
		auto except = _203622a18_ParseInt(_25413_lit, _25513_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27713_ok=false;

			0LL;
		});
	});;
	if (_27713_ok) {
		(*(_27513_d))._field_Constant=static__203644a3a_NewI64(_2789_sig);
		(*(_27513_d))._field_Kind=_1c0e9ca24_primInt;
	} else {
		jule::U64 _28613_unsig = ({
			auto except = _203622562_ParseUint(_25413_lit, _25513_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1c0d82596_pushErr(_self_, (*((*(_25126_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1c0d82909_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*(_27513_d))._field_Constant=static__203644d04_NewU64(_28613_unsig);
		(*(_27513_d))._field_Kind=_1c0e9c64a_primUint;
	};
	(*(_27513_d))._field_Model=jule::Any((*(_27513_d))._field_Constant, &__jule_any_type19);
	if ((!(_1c0d83630_applyNumericPrefix(_self_, &(_27513_d))))) {
		_1c0da9029_fitBitsize(&(_27513_d));
	};
	(*(_27513_d))._field_Mutable=true;
	(*(_27513_d))._field_untyped=true;
	return _27513_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d84785_litNum(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c40dc2_LitExpr>* _30726_l) {
	{
		
		if (_1c0c27518_IsFloat((*((*(_30726_l))))._field_Value)) {
			_case_begin_1aad6c585:;
			{
				return _1c0d84103_litFloat(_self_, _30726_l);;
			}
		}
		else {
			_case_begin_1aad6bdd1:;
			{
				return _1c0d84444_litInt(_self_, _30726_l);;
			}
		}
		_match_end_1aad6bd37:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d84ac6_evalLit(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c40dc2_LitExpr> _31626_lit) {
	{
		
		if (_1c0c2655b_IsStr((*(_31626_lit))._field_Value)) {
			_case_begin_1aad6d124:;
			{
				return _1c0d83971_litStr(_self_, &(_31626_lit));;
			}
		}
		else if (_1c0c26ade_IsRune((*(_31626_lit))._field_Value)) {
			_case_begin_1aad6d19b:;
			{
				return _1c0d83cb2_litRune(_self_, &(_31626_lit));;
			}
		}
		else if (_1c0c277d2_IsNum((*(_31626_lit))._field_Value)) {
			_case_begin_1aad6d223:;
			{
				return _1c0d84785_litNum(_self_, &(_31626_lit));;
			}
		}
		else {
			_case_begin_1aad6ca3b:;
			{
				return nullptr;;
			}
		}
		_match_end_1aad6c970:;
	};
}



inline jule::Any _1c0d84e17_findBuiltins(_1c0d82046_Eval* _self_, jule::Str* _32932_ident) {
	if (_1c0d01801_IsPub(_32932_ident)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 1)) {
				_case_begin_1aad70456:;
				{
					jule::Any _33321_def = _1c0da8ce8_findBuiltinsImport(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1c0cd353b_ImportInfo>(1));;
					if ((_33321_def != nullptr)) {
						return _33321_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 3)) {
				_case_begin_1aad704bc:;
				{
					jule::Any _33821_def = _1c0da9a52_findBuiltinsSema(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1c0d04705_Sema>(3));;
					if ((_33821_def != nullptr)) {
						return _33821_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 0)) {
				_case_begin_1aad70533:;
				{
					jule::Any _34321_def = _1c0da9a52_findBuiltinsSema(_32932_ident, (*((*(_self_))._field_lookup.cast_ptr<_1c0cb9412_scopeChecker>(0)))._field_s);;
					if ((_34321_def != nullptr)) {
						return _34321_def;;
					};
				}
			}
			_match_end_1aad70401:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1c0ea020d_findBuiltinDef(_32932_ident);;
}



inline jule::Any _1c0d85313_getDef(_1c0d82046_Eval* _self_, jule::Str* _35626_ident, jule::Bool _35638_binded) {
	jule::Ptr<_1c0d2b94c_Var> _36113_v = _1c0dd0050_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0dcd735_FindVar((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36113_v != nullptr)) {
		return jule::Any(_36113_v, &__jule_any_type8);;
	};
	jule::Ptr<_1c0dae727_TypeAlias> _36613_ta = _1c0dd0050_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0dcdb31_FindTypeAlias((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36613_ta != nullptr)) {
		return jule::Any(_36613_ta, &__jule_any_type66);;
	};
	if ((!(_35638_binded))) {
		jule::Ptr<_1c0c8704a_Enum> _37217_enm = _1c0dd0050_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0dceaaa_FindEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37217_enm != nullptr)) {
			return jule::Any(_37217_enm, &__jule_any_type67);;
		};
		jule::Ptr<_1c0c88755_TypeEnum> _37717_tenm = _1c0dd0050_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0dcedeb_FindTypeEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37717_tenm != nullptr)) {
			return jule::Any(_37717_tenm, &__jule_any_type68);;
		};
	};
	jule::Ptr<_1c0c715a6_Fn> _38313_f = _1c0dd0050_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0dce428_FindFn((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38313_f != nullptr)) {
		return jule::Any(_38313_f, &__jule_any_type64);;
	};
	jule::Ptr<_1c0c5b64b_Struct> _38813_s = _1c0dd0050_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0dce02c_FindStruct((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38813_s != nullptr)) {
		return jule::Any(_38813_s, &__jule_any_type65);;
	};
	return _1c0d84e17_findBuiltins(_self_, _35626_ident);;
}



inline void _1aad8c30d_pushReference(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c744aa_FnIns>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1aad8dd04:;
			{
				jule::Ptr<_1c0cb9412_scopeChecker> _39917_sc = _1c0cbc789_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1c0cb9412_scopeChecker>(0));;
				if ((!(_1aad90267_Exist((*((*(_39917_sc))._field_owner))._field_Refers.ptr(), (*(_39640_ref)))))) {
					_1c0c78448_Push((*((*(_39917_sc))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_1aad8d782:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr)) && (!(_1aad90267_Exist((*((*(_self_))._field_owner))._field_Refers.ptr(), (*(_39640_ref))))))) {
					_1c0c78448_Push((*((*(_self_))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_1aad8d72c:;
	};
}

inline void _1aada3d5d_pushReference(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d2b94c_Var>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1aada57dd:;
			{
				jule::Ptr<_1c0cb9412_scopeChecker> _39917_sc = _1c0cbc789_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1c0cb9412_scopeChecker>(0));;
				if ((!(_1aada6c51_Exist((*((*(_39917_sc))._field_owner))._field_Refers.ptr(), (*(_39640_ref)))))) {
					_1c0c78448_Push((*((*(_39917_sc))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_1aada526b:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr)) && (!(_1aada6c51_Exist((*((*(_self_))._field_owner))._field_Refers.ptr(), (*(_39640_ref))))))) {
					_1c0c78448_Push((*((*(_self_))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_1aada5216:;
	};
}

inline void _1ab019b2d_pushReference(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ab01b68a:;
			{
				jule::Ptr<_1c0cb9412_scopeChecker> _39917_sc = _1c0cbc789_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1c0cb9412_scopeChecker>(0));;
				if ((!(_1ab01caed_Exist((*((*(_39917_sc))._field_owner))._field_Refers.ptr(), (*(_39640_ref)))))) {
					_1c0c78448_Push((*((*(_39917_sc))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1ab01b118:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr)) && (!(_1ab01caed_Exist((*((*(_self_))._field_owner))._field_Refers.ptr(), (*(_39640_ref))))))) {
					_1c0c78448_Push((*((*(_self_))._field_owner))._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_1ab01b0b3:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d8590c__evalEnum(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c8704a_Enum> _41328_enm) {
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_41328_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d85d08_evalEnum(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c8704a_Enum> _42231_enm, jule::Ptr<_1c0c25406_Token> _42243_errorToken) {
	if ((!(_1c0d07a9e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42231_enm))._field_Public, (*(_42231_enm))._field_Token)))) {
		_1c0d82596_pushErr(_self_, _42243_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_42231_enm))._field_Ident, &__jule_any_type4)}));
		_1c0d82909_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1c0d8590c__evalEnum(_self_, _42231_enm);;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d86149__evalTypeEnum(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c88755_TypeEnum> _43132_enm) {
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_43132_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d86545_evalTypeEnum(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c88755_TypeEnum> _44035_enm, jule::Ptr<_1c0c25406_Token> _44051_errorToken) {
	if ((!(_1c0d07a9e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44035_enm))._field_Public, (*(_44035_enm))._field_Token)))) {
		_1c0d82596_pushErr(_self_, _44051_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_44035_enm))._field_Ident, &__jule_any_type4)}));
		_1c0d82909_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1c0d86149__evalTypeEnum(_self_, _44035_enm);;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d86886__evalStruct(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c5e3c9_StructIns> _44930_s) {
	jule::Ptr<_1c0d80352_Data> _45013_d = jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_44930_s, 0)}), ._field_Model=jule::Any(_44930_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_44930_s))._field_Decl != nullptr) && (*((*(_44930_s))._field_Decl))._field_Binded)) {
		(*((*(_45013_d))._field_Kind))._field_BindIdent=(*((*(_44930_s))._field_Decl))._field_Ident;
	};
	return _45013_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d86c82_evalStruct(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c5e3c9_StructIns> _46333_s, jule::Ptr<_1c0c25406_Token> _46348_errorToken) {
	if ((!(_1c0d07a9e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46333_s))._field_Decl))._field_Public, (*((*(_46333_s))._field_Decl))._field_Token)))) {
		_1c0d82596_pushErr(_self_, _46348_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_46333_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
		_1c0d82909_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c0d87436_checkDeprecated(_self_, &((*((*(_46333_s))._field_Decl))._field_Directives), _46348_errorToken);
	return _1c0d86886__evalStruct(_self_, _46333_s);;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d870c3_evalFnIns(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c744aa_FnIns> _47328_f) {
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_47328_f, 1)}), ._field_Model=jule::Any(_47328_f, &__jule_any_type7), });;
}



inline void _1c0d87436_checkDeprecated(_1c0d82046_Eval* _self_, jule::Slice<jule::Ptr<_1c0c39e10_Directive>>* _48239_directives, jule::Ptr<_1c0c25406_Token> _48270_tok) {
	if (_1c0d8308b_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1c0c39e10_Directive> _4879_d = _1c0da8930_findDirective(_48239_directives, jule::Str::lit("deprecated", 10));;
	if ((_4879_d != nullptr)) {
		if (((*(_4879_d))._field_Args.len() == 0LL)) {
			_1c0d82596_pushErr(_self_, _48270_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1c0d82596_pushErr(_self_, _48270_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*(_4879_d))._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1c0d82909_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d87832_evalFn(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c715a6_Fn> _49829_f, jule::Ptr<_1c0c25406_Token> _49837_errorToken) {
	if ((!(_1c0d07a9e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_49829_f))._field_Public, (*(_49829_f))._field_Token)))) {
		_1c0d82596_pushErr(_self_, _49837_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_49829_f))._field_Ident, &__jule_any_type4)}));
		_1c0d82909_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c0d87436_checkDeprecated(_self_, &((*(_49829_f))._field_Directives), _49837_errorToken);
	jule::Ptr<_1c0c744aa_FnIns> _50713_ins = _1c0c72d16_instance(_49829_f);;
	_1aad8c30d_pushReference(_self_, &(_50713_ins));
	return _1c0d870c3_evalFnIns(_self_, _50713_ins);;
}



inline void _1c0d87c50_pushIllegalCycleError(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d2b94c_Var>* _51241_v1, jule::Ptr<_1c0d2b94c_Var>* _51252_v2, _21cd5e16e_StrBuilder* _51267_message) {
	;
	jule::Str _5149_refers_to = _21ce0cccd_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51241_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51252_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5159_buf = _21cd690ad_Buf(_51267_message);;
	_21cd67d15_WriteStr(_51267_message, _21cd489b6_Repeat(jule::Str::lit(" ", 1), 7LL));
	_21cd67d15_WriteStr(_51267_message, _5149_refers_to);
	_21cd680bd_WriteByte(_51267_message, '\n');
	_21cd67a5c_Write(_51267_message, _5159_buf);
}



inline jule::Bool _1c0d8814b_checkCrossCycle(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d2b94c_Var>* _52235_v, _21cd5e16e_StrBuilder* _52249_message) {
	{
		auto expr = &((*((*(_52235_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad9503b:;
		if (it != expr_end) {
			jule::Ptr<_1c0d2b94c_Var> *_52316_d = it;
			{
				if (((*(_52316_d)) == (*(_self_))._field_owner)) {
					_1c0d87c50_pushIllegalCycleError(_self_, _52235_v, _52316_d, _52249_message);
					return false;;
				};
				if ((!(_1c0d8814b_checkCrossCycle(_self_, _52316_d, _52249_message)))) {
					_1c0d87c50_pushIllegalCycleError(_self_, _52235_v, _52316_d, _52249_message);
					return false;;
				};
			}
			_iter_next_1aad9503b:;
			++it;
			goto _iter_begin_1aad9503b;
		}
		_iter_end_1aad9503b:;
	};
	return true;;
}



inline jule::Bool _1c0d88547_checkIllegalCycles(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d2b94c_Var>* _53942_v, jule::Ptr<_1c0c25406_Token> _53951_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_53942_v)))) {
		_1c0d82596_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_21cd5e16e_StrBuilder _55213_message = static__21cd5e48d_New(32LL);;
	if ((!(_1c0d8814b_checkCrossCycle(_self_, _53942_v, &(_55213_message))))) {
		jule::Str _55517_errMsg = _21cd6860c_Str(&_55213_message);;
		_21cd6880a_Clear(&_55213_message);
		_1c0d87c50_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _53942_v, &(_55213_message));
		_55517_errMsg+=_21cd6860c_Str(&_55213_message);
		_1c0d82596_pushErr(_self_, _53951_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_55517_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_53942_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d88943_evalVar(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d2b94c_Var> _56730_v, jule::Ptr<_1c0c25406_Token> _56739_errorToken) {
	if ((!(_1c0d07a9e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_56730_v))._field_Public, (*(_56730_v))._field_Token)))) {
		_1c0d82596_pushErr(_self_, _56739_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56730_v))._field_Ident, &__jule_any_type4)}));
		_1c0d82909_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c0d87436_checkDeprecated(_self_, &((*(_56730_v))._field_Directives), _56739_errorToken);
	if (((*(_56730_v))._field_Token == nullptr)) {
		goto _julec_label_1aadadbe2;
	};
	(*(_56730_v))._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1aad9e84d:;
			{
				jule::Bool _58613_ok = _1c0d88547_checkIllegalCycles(_self_, &(_56730_v), _56739_errorToken);;
				if ((!(_58613_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1aad9e8b4:;
			{
				if (((!((*(_56730_v))._field_Reference)) || _1c0d8308b_isUnsafe(_self_))) {
					goto _match_end_1aad9e7e8;
				};
				jule::Ptr<_1c0cb9412_scopeChecker> _59417_s = (*(_self_))._field_lookup.cast_ptr<_1c0cb9412_scopeChecker>(0);;
				while ((((*(_59417_s))._field_owner == nullptr) && ((*(_59417_s))._field_parent != nullptr))) {
					{
						_59417_s=(*(_59417_s))._field_parent;
					}
				_iter_next_1aada1443:;
				}
				_iter_end_1aada1443:;;
				if (((((*(_59417_s))._field_owner != nullptr) && (*((*(_59417_s))._field_owner))._field_Anon) && ((*(_56730_v))._field_Scope != (*((*(_59417_s))._field_owner))._field_Scope))) {
					_1c0d82596_pushErr(_self_, _56739_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*(_56730_v))._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1aad9e7e8:;
	};
	if (((*(_56730_v))._field_Scope == nullptr)) {
		_1aada3d5d_pushReference(_self_, &(_56730_v));
	};
	if (((!((*(_56730_v))._field_Binded)) && (((*(_56730_v))._field_Value == nullptr) || ((*((*(_56730_v))._field_Value))._field_Data == nullptr)))) {
		if ((*(_56730_v))._field_Constant) {
			_1c0d1d642_checkVar((*(_self_))._field_s, &(_56730_v), jule::Trait<_1c0dd0050_Lookup>((*(_self_))._field_s, 3));
			if ((((*(_56730_v))._field_Value == nullptr) || ((*((*(_56730_v))._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*(_56730_v))._field_Kind == nullptr) || ((*((*(_56730_v))._field_Kind))._field_Kind == nullptr))) {
		if (((*(_56730_v))._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1c0d1d642_checkVar((*(_self_))._field_s, &(_56730_v), (*(_self_))._field_lookup);
		if ((((*(_56730_v))._field_Kind == nullptr) || ((*((*(_56730_v))._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1aadadbe2:;
	jule::Ptr<_1c0d80352_Data> _63813_d = jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=(*((*(_56730_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_56730_v))._field_Mutable, ._field_Reference=(*(_56730_v))._field_Reference, ._field_Lvalue=(!((*(_56730_v))._field_Constant)), ._field_Model=jule::Any(_56730_v, &__jule_any_type8), });;
	if ((((!((*(_56730_v))._field_Binded)) && _1c0d2bcd2_IsInitialized(_56730_v.ptr())) && ((*((*(_56730_v))._field_Value))._field_Data != nullptr))) {
		(*(_63813_d))._field_IsRune=(*((*((*(_56730_v))._field_Value))._field_Data))._field_IsRune;
	};
	if (((*(_56730_v))._field_Constant && ((*((*((*(_56730_v))._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*(_63813_d))._field_Constant=jule::new_ptr<_2036445ea_Const>((*((*((*((*(_56730_v))._field_Value))._field_Data))._field_Constant)));
		(*(_63813_d))._field_Model=jule::Any((*(_63813_d))._field_Constant, &__jule_any_type19);
		if (_1c0d2c2ee_untypedConstant(_56730_v.ptr())) {
			_1c0d83630_applyNumericPrefix(_self_, &(_63813_d));
			(*(_63813_d))._field_untyped=true;
		};
	};
	return _63813_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d88d3e_evalTypeAlias(_1c0d82046_Eval* _self_, jule::Ptr<_1c0dae727_TypeAlias> _66236_ta, jule::Ptr<_1c0c25406_Token> _66252_errorToken) {
	if ((!(_1c0d07a9e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66236_ta))._field_Public, (*(_66236_ta))._field_Token)))) {
		_1c0d82596_pushErr(_self_, _66252_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_66236_ta))._field_Ident, &__jule_any_type4)}));
		_1c0d82909_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_66236_ta))._field_Used=true;
	jule::Trait<_1c0db0063_Kind> _67113_kind = (*((*((*(_66236_ta))._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1c0d80352_Data> _67217_d = nullptr;;
	{
		auto &_match_expr{ _67113_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1aadb9989:;
			{
				_67217_d=_1c0d86886__evalStruct(_self_, _67113_kind.cast_ptr<_1c0c5e3c9_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1aadb97ad:;
			{
				_67217_d=_1c0d8590c__evalEnum(_self_, _67113_kind.cast_ptr<_1c0c8704a_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1aadb7a75:;
			{
				_67217_d=_1c0d86149__evalTypeEnum(_self_, _67113_kind.cast_ptr<_1c0c88755_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1aadb7a0e:;
			{
				_67217_d=jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=(*((*((*(_66236_ta))._field_Kind))._field_Kind))._field_Kind}), ._field_Decl=true, });
				if ((*(_66236_ta))._field_Binded) {
					(*((*(_67217_d))._field_Kind))._field_BindIdent=(*(_66236_ta))._field_Ident;
				} else {
					(*((*(_67217_d))._field_Kind))._field_BindIdent=(*((*((*(_66236_ta))._field_Kind))._field_Kind))._field_BindIdent;
				};
				(*(_67217_d))._field_Model=jule::Any((*(_67217_d))._field_Kind, &__jule_any_type83);
			}
		}
		_match_end_1aadb79a9:;
	};
	(*((*(_67217_d))._field_Kind))._field_Generic=(*(_66236_ta))._field_Generic;
	return _67217_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d8923a_evalDef(_1c0d82046_Eval* _self_, jule::Any* _69831_def, jule::Ptr<_1c0c25406_Token> _69841_ident) {
	{
		auto &_match_expr{ (*(_69831_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aadbccde:;
			{
				return _1c0d88943_evalVar(_self_, (*(_69831_def)).cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1aadbcd55:;
			{
				return _1c0d85d08_evalEnum(_self_, (*(_69831_def)).cast_ptr<_1c0c8704a_Enum>(&__jule_any_type67), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1aadbcdbb:;
			{
				return _1c0d86545_evalTypeEnum(_self_, (*(_69831_def)).cast_ptr<_1c0c88755_TypeEnum>(&__jule_any_type68), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1aadbce32:;
			{
				return _1c0d86c82_evalStruct(_self_, _1c0c5baad_instance((*(_69831_def)).cast_ptr<_1c0c5b64b_Struct>(&__jule_any_type65)), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1aadbce98:;
			{
				jule::Ptr<_1c0c715a6_Fn> _70917_f = (*(_69831_def)).cast_ptr<_1c0c715a6_Fn>(&__jule_any_type64);;
				if ((!(*(_70917_f))._field_Ident.equal("init", 4))) {
					return _1c0d87832_evalFn(_self_, _70917_f, _69841_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1aadbd020:;
			{
				return _1c0d870c3_evalFnIns(_self_, (*(_69831_def)).cast_ptr<_1c0c744aa_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1aadbd097:;
			{
				return _1c0d88d3e_evalTypeAlias(_self_, (*(_69831_def)).cast_ptr<_1c0dae727_TypeAlias>(&__jule_any_type66), _69841_ident);;
			}
		}
		_match_end_1aadbcc89:;
	};
	_1c0d82596_pushErr(_self_, _69841_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_69841_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d8957b_evalIdent(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c41752_IdentExpr> _72228_ident) {
	jule::Any _72313_def = _1c0d85313_getDef(_self_, &((*(_72228_ident))._field_Ident), (*(_72228_ident))._field_Binded);;
	return _1c0d8923a_evalDef(_self_, &(_72313_def), (*(_72228_ident))._field_Token);;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d898bc_evalUnary(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c41dd4_UnaryExpr> _72733_u) {
	_1c0da04d7_unaryEval _72813_unary = static__1c0da0927_new(_self_);;
	return _1c0da1d57_eval(&_72813_unary, _72733_u);;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d89c0d_evalVariadic(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c422ad_VariadicExpr> _73236_v) {
	if (((*(_73236_v))._field_Expr == nullptr)) {
		_1c0d82596_pushErr(_self_.ptr(), (*(_73236_v))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0db0519_TypeKind> _73813_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_73813_prefix;
	});;
	jule::Ptr<_1c0d80352_Data> _74213_d = _1c0da0020_evalExpr(_self_, (*(_73236_v))._field_Expr);;
	if ((_74213_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c0db28d4_Variadicable((*(_74213_d))._field_Kind.ptr())))) {
		_1c0d82596_pushErr(_self_.ptr(), (*(_73236_v))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_74213_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0dbc5e2_Slc> _75213_slc = _1c0db3bc1_Slc((*(_74213_d))._field_Kind.ptr());;
	(*(_74213_d))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_BindIdent=(*((*(_75213_slc))._field_Elem))._field_BindIdent, ._field_Generic=(*((*(_75213_slc))._field_Elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*((*(_75213_slc))._field_Elem))._field_Kind});
	return _74213_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d8a04e_evalUnsafe(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c4129b_UnsafeExpr> _76234_u) {
	jule::Bool _7639_unsafety = (*(_self_))._field_unsafety;;
	(*(_self_))._field_unsafety=true;
	jule::Ptr<_1c0d80352_Data> _76513_d = _1c0da0020_evalExpr(_self_, (*(_76234_u))._field_Expr);;
	(*(_self_))._field_unsafety=_7639_unsafety;
	return _76513_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d8a390_evalArr(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c4634a_SliceExpr> _77031_s) {
	jule::Ptr<_1c0dbe913_Arr> _77213_pt = _1c0db393a_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1c0dbe913_Arr> _77413_arr = jule::new_ptr<_1c0dbe913_Arr>(_1c0dbe913_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_77213_pt))._field_Elem});;
	jule::Bool _78013_filled = false;;
	if (((*(_77031_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77031_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1aadcd33d:;
				{
					if (((*((*((*(_77031_s))._field_Exprs[1LL]))._field_Kind.cast_ptr<_1c0c422ad_VariadicExpr>(&__jule_any_type75)))._field_Expr != nullptr)) {
						goto _match_end_1aadcd294;
					};
					if ((*(_77213_pt))._field_Auto) {
						_1c0d82596_pushErr(_self_.ptr(), (*(_77031_s))._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78013_filled=true;
					(*(_77031_s))._field_Exprs=(*(_77031_s))._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1aadcd294:;
		};
	};
	(*(_77413_arr))._field_N=static_cast<jule::I64>((*(_77031_s))._field_Exprs.len());
	if ((!((*(_77213_pt))._field_Auto))) {
		if (((*(_77413_arr))._field_N > (*(_77213_pt))._field_N)) {
			_1c0d82596_pushErr(_self_.ptr(), (*(_77031_s))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*(_77413_arr))._field_N < (*(_77213_pt))._field_N)) {
			(*(_77413_arr))._field_N=(*(_77213_pt))._field_N;
		};
	};
	jule::Ptr<_1c0c68c63_ArrayExprModel> _80913_model = jule::new_ptr<_1c0c68c63_ArrayExprModel>(_1c0c68c63_ArrayExprModel{._field_Kind=_77413_arr, });;
	if (_78013_filled) {
		(*(_80913_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_80913_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_77031_s))._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1c0db0519_TypeKind> _81813_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_77413_arr))._field_Elem;
	{
		auto expr = &((*(_77031_s))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aadd3431:;
		if (it != expr_end) {
			jule::Ptr<_1c0c3ed27_Expr> _82021_elem = *it;
			{
				jule::Ptr<_1c0d80352_Data> _82117_d = _1c0da0020_evalExpr(_self_, _82021_elem);;
				if ((_82117_d == nullptr)) {
					goto _iter_next_1aadd3431;
				};
				_1c0d0ed4d_checkAssignType((*(_self_))._field_s, false, &((*(_77413_arr))._field_Elem), &(_82117_d), (*(_77031_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_80913_model))._field_Elems; __jule_push_dest.push((*(_82117_d))._field_Model); };
			}
			_iter_next_1aadd3431:;
			++it;
			goto _iter_begin_1aadd3431;
		}
		_iter_end_1aadd3431:;
	};
	(*(_self_))._field_prefix=_81813_prefix;
	if (_78013_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_80913_model))._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_77413_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_80913_model, &__jule_any_type84), });;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d8a846_evalExpSlc(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c4634a_SliceExpr> _84434_s, jule::Ptr<_1c0db0519_TypeKind> _84453_t, jule::Any _84471_first) {
	jule::Ptr<_1c0dbc5e2_Slc> _84513_slc = jule::new_ptr<_1c0dbc5e2_Slc>(_1c0dbc5e2_Slc{._field_Elem=_84453_t});;
	jule::I64 _84913_i = 0LL;;
	jule::Ptr<_1c0c65c1b_SliceExprModel> _85013_model = jule::new_ptr<_1c0c65c1b_SliceExprModel>(_1c0c65c1b_SliceExprModel{._field_ElemKind=_84453_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84434_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84471_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85013_model))._field_Elems; __jule_push_dest.push(_84471_first); };
		_84913_i=1LL;
	};
	jule::Ptr<_1c0db0519_TypeKind> _85913_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_84513_slc))._field_Elem;
	{
		auto expr = (*(_84434_s))._field_Exprs.slice(_84913_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1aaddac52:;
		if (it != expr_end) {
			jule::Ptr<_1c0c3ed27_Expr> _86121_elem = *it;
			{
				jule::Ptr<_1c0d80352_Data> _86217_d = _1c0da0020_evalExpr(_self_, _86121_elem);;
				if ((_86217_d == nullptr)) {
					goto _iter_next_1aaddac52;
				};
				_1c0d0ed4d_checkAssignType((*(_self_))._field_s, false, &((*(_84513_slc))._field_Elem), &(_86217_d), (*(_84434_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85013_model))._field_Elems; __jule_push_dest.push((*(_86217_d))._field_Model); };
			}
			_iter_next_1aaddac52:;
			++it;
			goto _iter_begin_1aaddac52;
		}
		_iter_end_1aaddac52:;
	};
	(*(_self_))._field_prefix=_85913_prefix;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_84513_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85013_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d8ab87_evalSliceExpr(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c4634a_SliceExpr> _88037_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1c0db393a_Arr((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1aadde6c3:;
				{
					return _1c0d8a390_evalArr(_self_, _88037_s);;
				}
			}
			else if ((_1c0db3bc1_Slc((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_1aadde74a:;
				{
					jule::Ptr<_1c0dbc5e2_Slc> _88621_pt = _1c0db3bc1_Slc((*(_self_))._field_prefix.ptr());;
					return _1c0d8a846_evalExpSlc(_self_, _88037_s, (*(_88621_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1aadde5b3:;
		};
	};
	jule::Ptr<_1c0db0519_TypeKind> _89113_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	if (((*(_88037_s))._field_Exprs.len() == 0LL)) {
		_1c0d82596_pushErr(_self_.ptr(), (*(_88037_s))._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0d80352_Data> _89913_firstElem = _1c0da0020_evalExpr(_self_, (*(_88037_s))._field_Exprs[0LL]);;
	if ((_89913_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0d80352_Data> _90413_d = _1c0d8a846_evalExpSlc(_self_, _88037_s, (*(_89913_firstElem))._field_Kind, (*(_89913_firstElem))._field_Model);;
	(*(_self_))._field_prefix=_89113_prefix;
	return _90413_d;;
}



inline void _1c0d8aeea_checkIntegerIndexingByData(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data>* _91050_d, jule::Ptr<_1c0c25406_Token> _91060_token) {
	jule::Str _9119_err_key = _1c0dab119_checkDataForIntegerIndexing(_91050_d);;
	{
		auto &_match_expr{ _9119_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1aade4eae:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1aade57d9:;
			{
				_1c0d82596_pushErr(_self_, _91060_token, _9119_err_key, jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_91050_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1aade54ba:;
			{
				_1c0d82596_pushErr(_self_, _91060_token, _9119_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1aade5465:;
	};
}



inline void _1c0d8b418_indexingPtr(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data>* _92235_d, jule::Ptr<_1c0d80352_Data>* _92250_index, jule::Ptr<_1c0c46cda_IndexingExpr>* _92265_i) {
	_1c0d8aeea_checkIntegerIndexingByData(_self_, _92250_index, (*((*(_92265_i))))._field_Token);
	(*((*(_92235_d))))._field_Lvalue=true;
	jule::Ptr<_1c0dc03d6_Ptr> _92613_ptr = _1c0db3187_Ptr((*((*(_92235_d))))._field_Kind.ptr());;
	{
		
		if (_1c0dc0e20_IsUnsafe(_92613_ptr.ptr())) {
			_case_begin_1aade8149:;
			{
				_1c0d82596_pushErr(_self_, (*((*(_92265_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1c0d8308b_isUnsafe(_self_)))) {
			_case_begin_1aade81c1:;
			{
				_1c0d82596_pushErr(_self_, (*((*(_92265_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aade80e4:;
	};
	(*((*(_92235_d))))._field_Kind=(*(_92613_ptr))._field_Elem;
}



inline void _1c0d8b836_indexingArr(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data>* _93835_d, jule::Ptr<_1c0d80352_Data>* _93850_index, jule::Ptr<_1c0c46cda_IndexingExpr>* _93865_i) {
	jule::Ptr<_1c0dbe913_Arr> _93913_arr = _1c0db393a_Arr((*((*(_93835_d))))._field_Kind.ptr());;
	(*((*(_93835_d))))._field_Kind=(*(_93913_arr))._field_Elem;
	_1c0d8aeea_checkIntegerIndexingByData(_self_, _93850_index, (*((*(_93865_i))))._field_Token);
	(*((*(_93835_d))))._field_Lvalue=true;
	if ((_1c0d80c26_IsConst((*(_93850_index)).ptr()) && (_2036472ac_AsF64((*((*(_93850_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*(_93913_arr))._field_N)))) {
		_1c0d82596_pushErr(_self_, (*((*(_93865_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1c0d8bc54_indexingSlc(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data>* _94835_d, jule::Ptr<_1c0d80352_Data>* _94850_index, jule::Ptr<_1c0c46cda_IndexingExpr>* _94865_i) {
	jule::Ptr<_1c0dbc5e2_Slc> _94913_slc = _1c0db3bc1_Slc((*((*(_94835_d))))._field_Kind.ptr());;
	(*((*(_94835_d))))._field_Kind=(*(_94913_slc))._field_Elem;
	_1c0d8aeea_checkIntegerIndexingByData(_self_, _94850_index, (*((*(_94865_i))))._field_Token);
	(*((*(_94835_d))))._field_Lvalue=true;
	if ((!(_1c0d80c26_IsConst((*(_94850_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_94835_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bee24914:;
			{
				jule::Ptr<_1c0c65c1b_SliceExprModel> _96017_m = (*((*(_94835_d))))._field_Model.cast_ptr<_1c0c65c1b_SliceExprModel>(&__jule_any_type76);;
				jule::F64 _96113_indx = _2036472ac_AsF64((*((*(_94850_index))))._field_Constant.ptr());;
				if ((_96113_indx >= static_cast<jule::F64>((*(_96017_m))._field_Elems.len()))) {
					_1c0d82596_pushErr(_self_, (*((*(_94865_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_94835_d))))._field_Model=(*(_96017_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96113_indx))];
					(*((*(_94835_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1bee248ae:;
	};
}



inline void _1c0d8c172_indexingMap(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data>* _97135_d, jule::Ptr<_1c0d80352_Data>* _97150_index, jule::Ptr<_1c0c46cda_IndexingExpr>* _97169_i) {
	(*((*(_97135_d))))._field_Lvalue=true;
	if (((*(_97150_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0dbdc86_Map> _97613_m = _1c0db470a_Map((*((*(_97135_d))))._field_Kind.ptr());;
	_1c0d68e1d_assignTypeChecker _97713_atc = _1c0d68e1d_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_97613_m))._field_Key, ._field_d=(*(_97150_index)), ._field_errorToken=(*((*(_97169_i))))._field_Token};;
	_1c0d6a183_check(&_97713_atc);
	(*((*(_97135_d))))._field_Kind=(*(_97613_m))._field_Val;
}



inline void _1c0d8c590_indexingStr(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data>* _98735_d, jule::Ptr<_1c0d80352_Data>* _98750_index, jule::Ptr<_1c0c46cda_IndexingExpr>* _98765_i) {
	(*((*(_98735_d))))._field_Kind=_1c0e9d904_primU8;
	(*((*(_98735_d))))._field_Mutable=false;
	(*((*(_98735_d))))._field_Lvalue=true;
	if (((*(_98750_index)) == nullptr)) {
		return;;
	};
	_1c0d8aeea_checkIntegerIndexingByData(_self_, _98750_index, (*((*(_98765_i))))._field_Token);
	if ((!(_1c0d80c26_IsConst((*(_98750_index)).ptr())))) {
		(*((*(_98735_d))))._field_Constant=nullptr;
		return;;
	};
	if (_1c0d80c26_IsConst((*(_98735_d)).ptr())) {
		jule::Ptr<_1c0c25406_Token> _100413_errorToken = (*((*(_98765_i))))._field_Token;;
		jule::I64 _100513_j = _203646c90_AsI64((*((*(_98750_index))))._field_Constant.ptr());;
		jule::Str _100613_s = _203646773_ReadStr((*((*(_98735_d))))._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_100513_j) >= _100613_s.len())) {
			_1c0d82596_pushErr(_self_, _100413_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_20364781d_SetU64((*((*(_98735_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_100613_s[_100513_j])));
		};
	};
}



inline void _1c0d8c9ad_toIndexing(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data>* _101534_d, jule::Ptr<_1c0d80352_Data>* _101549_index, jule::Ptr<_1c0c46cda_IndexingExpr>* _101568_i) {
	{
		
		if ((_1c0db3187_Ptr((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bee3017d:;
			{
				_1c0d8b418_indexingPtr(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_1c0db393a_Arr((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bee30205:;
			{
				_1c0d8b836_indexingArr(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_1c0db3bc1_Slc((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bee3027c:;
			{
				_1c0d8bc54_indexingSlc(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_1c0db470a_Map((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bee30304:;
			{
				_1c0d8c172_indexingMap(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_1c0db2b6a_Prim((*((*(_101534_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bee3037b:;
			{
				jule::Ptr<_1c0db80e3_Prim> _103013_prim = _1c0db2b6a_Prim((*((*(_101534_d))))._field_Kind.ptr());;
				{
					
					if (_1c0dbb57a_IsStr(_103013_prim.ptr())) {
						_case_begin_1bee34528:;
						{
							_1c0d8c590_indexingStr(_self_, _101534_d, _101549_index, _101568_i);
							return;;
						}
					}
					_match_end_1bee34490:;
				};
			}
		}
		_match_end_1bee3003a:;
	};
	_1c0d82596_pushErr(_self_, (*((*(_101568_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_101534_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1c0d8ce64_pushGenericsFromExprSubIdent(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c42e3a_SubIdentExpr>* _104053_sexpr, jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>>* _104114_generics, jule::Ptr<_1c0c3ed27_Expr>* _104142_expr) {
	jule::Ptr<_1c0c3b3ea_SubIdentTypeDecl> _104213_t = jule::new_ptr<_1c0c3b3ea_SubIdentTypeDecl>();;
	if ((!(_1c0dac00a_pushSubIdentFromExpr(jule::Any((*(_104053_sexpr)), &__jule_any_type85), &(_104213_t))))) {
		_1c0d82596_pushErr(_self_.ptr(), (*((*(_104142_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> &__jule_push_dest = (*(_104114_generics)); __jule_push_dest.push(jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Kind=jule::Any(_104213_t, &__jule_any_type86)})); };
	return true;;
}



inline jule::Bool _1c0d8d360_pushGenericsFromData(jule::Ptr<_1c0d82046_Eval> _self_, jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>>* _105145_generics, jule::Ptr<_1c0c3ed27_Expr>* _105173_expr) {
	{
		auto &_match_expr{ (*((*(_105173_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1bee37938:;
			{
				jule::Ptr<_1c0c41dd4_UnaryExpr> _105417_u = (*((*(_105173_expr))))._field_Kind.cast_ptr<_1c0c41dd4_UnaryExpr>(&__jule_any_type87);;
				{
					auto &_match_expr{ (*((*(_105417_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1bee39550:;
						{
							jule::Ptr<_1c0c3c51c_PtrTypeDecl> _105721_kind = jule::new_ptr<_1c0c3c51c_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> _105821__generics = jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>>::alloc(0LL, 1LL);;
							_1c0d8d360_pushGenericsFromData(_self_, &(_105821__generics), &((*(_105417_u))._field_Expr));
							(*(_105721_kind))._field_Elem=_105821__generics[0LL];
							{ jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Token=(*((*(_105173_expr))))._field_Token, ._field_Kind=jule::Any(_105721_kind, &__jule_any_type71)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1bee3a6b6:;
						{
							jule::Ptr<_1c0c3ba8d_SptrTypeDecl> _106621_kind = jule::new_ptr<_1c0c3ba8d_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> _106721__generics = jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>>::alloc(0LL, 1LL);;
							_1c0d8d360_pushGenericsFromData(_self_, &(_106721__generics), &((*(_105417_u))._field_Expr));
							(*(_106621_kind))._field_Elem=_106721__generics[0LL];
							{ jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Token=(*((*(_105173_expr))))._field_Token, ._field_Kind=jule::Any(_106621_kind, &__jule_any_type72)})); };
						}
					}
					else {
						_case_begin_1bee39a8e:;
						{
							_1c0d82596_pushErr(_self_.ptr(), (*(_105417_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1bee39a39:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1bee388b2:;
			{
				{ jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push((*((*(_105173_expr))))._field_Kind.cast_ptr<_1c0c3a9e3_TypeDecl>(&__jule_any_type88)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1bee38928:;
			{
				jule::Ptr<_1c0c42e3a_SubIdentExpr> _108117_sexpr = (*((*(_105173_expr))))._field_Kind.cast_ptr<_1c0c42e3a_SubIdentExpr>(&__jule_any_type85);;
				return _1c0d8ce64_pushGenericsFromExprSubIdent(_self_, &(_108117_sexpr), _105145_generics, _105173_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bee3898e:;
			{
				jule::Ptr<_1c0c41752_IdentExpr> _108417_ident = (*((*(_105173_expr))))._field_Kind.cast_ptr<_1c0c41752_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1c0c3b0ed_IdentTypeDecl>(_1c0c3b0ed_IdentTypeDecl{._field_Token=(*(_108417_ident))._field_Token, ._field_Ident=(*(_108417_ident))._field_Ident, ._field_Binded=(*(_108417_ident))._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1bee37d01:;
			{
				{
					auto expr = &((*((*((*(_105173_expr))))._field_Kind.cast_ptr<_1c0c409e8_TupleExpr>(&__jule_any_type80)))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bee42239:;
					if (it != expr_end) {
						jule::Ptr<_1c0c3ed27_Expr> _109325_texpr = *it;
						{
							if ((!(_1c0d8d360_pushGenericsFromData(_self_, _105145_generics, &(_109325_texpr))))) {
								return false;;
							};
						}
						_iter_next_1bee42239:;
						++it;
						goto _iter_begin_1bee42239;
					}
					_iter_end_1bee42239:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bee37d67:;
			{
				jule::Ptr<_1c0c42a61_NsSelectionExpr> _109917_ns = (*((*(_105173_expr))))._field_Kind.cast_ptr<_1c0c42a61_NsSelectionExpr>(&__jule_any_type89);;
				jule::Ptr<_1c0c3b0ed_IdentTypeDecl> _110017_decl = jule::new_ptr<_1c0c3b0ed_IdentTypeDecl>(_1c0c3b0ed_IdentTypeDecl{._field_Token=(*(_109917_ns))._field_Ident, ._field_Ident=(*((*(_109917_ns))._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Token=(*(_110017_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1c0c3b791_NamespaceTypeDecl>(_1c0c3b791_NamespaceTypeDecl{._field_Idents=(*(_109917_ns))._field_Ns, ._field_Kind=jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Token=(*(_110017_decl))._field_Token, ._field_Kind=jule::Any(_110017_decl, &__jule_any_type20)})}), &__jule_any_type90)})); };
			}
		}
		else {
			_case_begin_1bee37c8a:;
			{
				_1c0d82596_pushErr(_self_.ptr(), (*((*(_105173_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1bee37c35:;
	};
	return true;;
}



inline void _1c0d8d6c3_evalIdentDeclFromIndexing(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0d80352_Data>* _112150_d, jule::Ptr<_1c0c46cda_IndexingExpr>* _112165_i) {
	jule::Ptr<_1c0c5e3c9_StructIns> _112213_s = _1c0db41dd_Struct((*((*(_112150_d))))._field_Kind.ptr());;
	if ((_112213_s == nullptr)) {
		_1c0d82596_pushErr(_self_.ptr(), (*((*((*(_112165_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_112150_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		(*(_112150_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c0c3b0ed_IdentTypeDecl> _112917_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_112165_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bee47abe:;
			{
				jule::Ptr<_1c0c41752_IdentExpr> _113217_expr = (*((*((*(_112165_i))))._field_Expr))._field_Kind.cast_ptr<_1c0c41752_IdentExpr>(&__jule_any_type79);;
				_112917_decl=jule::new_ptr<_1c0c3b0ed_IdentTypeDecl>(_1c0c3b0ed_IdentTypeDecl{._field_Token=(*(_113217_expr))._field_Token, ._field_Ident=(*(_113217_expr))._field_Ident, ._field_Binded=(*(_113217_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bee48d45:;
			{
				jule::Ptr<_1c0c42a61_NsSelectionExpr> _113917_expr = (*((*((*(_112165_i))))._field_Expr))._field_Kind.cast_ptr<_1c0c42a61_NsSelectionExpr>(&__jule_any_type89);;
				_112917_decl=jule::new_ptr<_1c0c3b0ed_IdentTypeDecl>(_1c0c3b0ed_IdentTypeDecl{._field_Token=(*(_113917_expr))._field_Ident, ._field_Ident=(*((*(_113917_expr))._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1bee48042:;
			{
				_1c0d82596_pushErr(_self_.ptr(), (*((*(_112165_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112150_d))=nullptr;
				return;;
			}
		}
		_match_end_1bee47edc:;
	};
	if ((!(_1c0d8d360_pushGenericsFromData(_self_, &((*(_112917_decl))._field_Generics), &((*((*(_112165_i))))._field_Index))))) {
		(*(_112150_d))=nullptr;
		return;;
	};
	_112213_s=({ auto _wrap_copy = _1c0d951be_typeChecker(_self_.ptr()); _1c0dc6321_fromStruct(&_wrap_copy, &(_112917_decl), &((*(_112213_s))._field_Decl)); });
	if ((_112213_s == nullptr)) {
		(*(_112150_d))=nullptr;
		return;;
	};
	(*((*((*(_112150_d))))._field_Kind))._field_Kind=jule::Trait<_1c0db0063_Kind>(_112213_s, 0);
}



inline jule::Bool _1c0d8db79_checkGenericFn(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c744aa_FnIns>* _116439_f, jule::Ptr<_1c0c25406_Token>* _116455_et, jule::Any* _116472_model) {
	jule::Bool _11659_ok = _1c0d12449_reloadFnInsTypes((*(_self_))._field_s, (*(_116439_f)));;
	(*((*(_116439_f))))._field_reloaded=true;
	if ((!(_11659_ok))) {
		return false;;
	};
	jule::Ptr<_1c0c744aa_FnIns> _117013_existInstance = _1c0c73124_appendInstance((*((*(_116439_f))))._field_Decl.ptr(), _116439_f);;
	if ((!(_1c0d1149d_checkConstraintsFn((*(_self_))._field_s, _116439_f, _116455_et, _117013_existInstance)))) {
		return false;;
	};
	if ((_117013_existInstance != nullptr)) {
		(*(_116439_f))=_117013_existInstance;
		_1c0dabb86_updateModelToGenericIns(_116472_model, &(_117013_existInstance));
	} else {
		_1c0d26606_checkFnInsCaller((*(_self_))._field_s, _116439_f, (*(_116455_et)));
	};
	return true;;
}



inline void _1c0d8dedc_evalFnGenericFromIndexing(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0d80352_Data>* _118950_d, jule::Ptr<_1c0c46cda_IndexingExpr>* _118965_i) {
	jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> _119013_generics = jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1c0d8d360_pushGenericsFromData(_self_, &(_119013_generics), &((*((*(_118965_i))))._field_Index))))) {
		(*(_118950_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c0c744aa_FnIns> _119613_f = _1c0db3e57_Fn((*((*(_118950_d))))._field_Kind.ptr());;
	jule::I64 _119713_genericsLen = 0LL;;
	if (((*(_119613_f))._field_Decl != nullptr)) {
		_119713_genericsLen=static_cast<jule::I64>((*((*(_119613_f))._field_Decl))._field_Generics.len());
	};
	if ((!(_1c0d0886e_checkGenericQuantity((*(_self_))._field_s.ptr(), _119713_genericsLen, static_cast<jule::I64>(_119013_generics.len()), (*((*((*(_118965_i))))._field_Expr))._field_Token)))) {
		(*(_118950_d))=nullptr;
		return;;
	};
	(*(_119613_f))._field_Generics=jule::Slice<jule::Ptr<_1c0dadb33_InsGeneric>>::alloc(0LL, (*((*(_119613_f))._field_Decl))._field_Generics.len());
	{
		auto expr = &(_119013_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaedd959:;
		if (it != expr_end) {
			jule::Ptr<_1c0c3a9e3_TypeDecl> _120821_g = *it;
			{
				jule::Ptr<_1c0d80352_Data> _120917_k = _1c0d95510_evalType(_self_.ptr(), _120821_g);;
				if ((_120917_k == nullptr)) {
					(*(_118950_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_1c0dadb33_InsGeneric>> &__jule_push_dest = (*(_119613_f))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1c0dadb33_InsGeneric>(_1c0dadb33_InsGeneric{._field_Kind=(*(_120917_k))._field_Kind, })); };
			}
			_iter_next_1aaedd959:;
			++it;
			goto _iter_begin_1aaedd959;
		}
		_iter_end_1aaedd959:;
	};
	if (_1c0c75940_IsBuiltin(_119613_f.ptr())) {
		return;;
	};
	if (_1c0d8db79_checkGenericFn(_self_, &(_119613_f), &((*((*((*(_118965_i))))._field_Expr))._field_Token), &((*((*(_118950_d))))._field_Model))) {
		(*((*((*(_118950_d))))._field_Kind))._field_Kind=jule::Trait<_1c0db0063_Kind>(_119613_f, 1);
	} else {
		(*(_118950_d))=nullptr;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d8e32d_evalIndexing(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c46cda_IndexingExpr> _122836_i) {
	jule::Ptr<_1c0db0519_TypeKind> _122913_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_122913_prefix;
	});;
	jule::Ptr<_1c0d80352_Data> _123313_d = _1c0d9e20b_evalExprKind(_self_, (*((*(_122836_i))._field_Expr))._field_Kind);;
	if ((_123313_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_123313_d))._field_Decl) {
		_1c0d8d6c3_evalIdentDeclFromIndexing(_self_, &(_123313_d), &(_122836_i));
		return _123313_d;;
	};
	if ((_1c0db3e57_Fn((*(_123313_d))._field_Kind.ptr()) != nullptr)) {
		_1c0d8dedc_evalFnGenericFromIndexing(_self_, &(_123313_d), &(_122836_i));
		return _123313_d;;
	};
	_1c0d80352_Data _124913_oldData = (*(_123313_d));;
	jule::Ptr<_1c0d80352_Data> _125113_index = _1c0da0020_evalExpr(_self_, (*(_122836_i))._field_Index);;
	if ((_125113_index == nullptr)) {
		return nullptr;;
	};
	(*(_123313_d))._field_Decl=false;
	_1c0d8c9ad_toIndexing(_self_.ptr(), &(_123313_d), &(_125113_index), &(_122836_i));
	if (_1c0d80c26_IsConst(_123313_d.ptr())) {
		(*(_123313_d))._field_Decl=false;
		(*(_123313_d))._field_Model=jule::Any((*(_123313_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_123313_d))._field_Decl) {
		(*(_123313_d))._field_Decl=false;
	} else {
		(*(_123313_d))._field_Model=jule::Any(jule::new_ptr<_1c0c661c2_IndexingExprModel>(_1c0c661c2_IndexingExprModel{._field_Token=(*(_122836_i))._field_Token, ._field_Expr=jule::new_ptr<_1c0d80352_Data>(_124913_oldData), ._field_Index=_125113_index}), &__jule_any_type45);
	};
	return _123313_d;;
}



inline __jule_tuple_x_1c0d80352_Data__jule_tuple_x_1c0d80352_Data _1c0d8e66e_evalSlicingExprs(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c4744a_SlicingExpr>* _128241_s) {
	__jule_tuple_x_1c0d80352_Data__jule_tuple_x_1c0d80352_Data __jule_func_result;
	jule::Ptr<_1c0db0519_TypeKind> _128313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_128313_prefix;
	});;
	jule::Ptr<_1c0d80352_Data> _128717_l = nullptr;;
	jule::Ptr<_1c0d80352_Data> _128817_r = nullptr;;
	if (((*((*(_128241_s))))._field_Start != nullptr)) {
		_128717_l=_1c0da0020_evalExpr(_self_, (*((*(_128241_s))))._field_Start);
		if ((_128717_l != nullptr)) {
			_1c0d8aeea_checkIntegerIndexingByData(_self_.ptr(), &(_128717_l), (*((*(_128241_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_128717_l=jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9ca24_primInt, ._field_Constant=static__203644a3a_NewI64(0LL)});
		(*((*(_128717_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*(_128717_l))._field_Model=jule::Any((*(_128717_l))._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_128241_s))))._field_To != nullptr)) {
		_128817_r=_1c0da0020_evalExpr(_self_, (*((*(_128241_s))))._field_To);
		if ((_128817_r != nullptr)) {
			_1c0d8aeea_checkIntegerIndexingByData(_self_.ptr(), &(_128817_r), (*((*(_128241_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _128717_l;
	__jule_func_result.__jule_result_arg1 = _128817_r;
	return __jule_func_result;;
}



inline void _1c0d8e927_slicingArr(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data>* _131830_d) {
	jule::Ptr<_1c0db0519_TypeKind> _131913_elemType = (*(_1c0db393a_Arr((*((*(_131830_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_131830_d))))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0dbc5e2_Slc>(_1c0dbc5e2_Slc{._field_Elem=_131913_elemType}), 22)});
	(*((*(_131830_d))))._field_Lvalue=false;
	(*((*(_131830_d))))._field_Mutable=((*((*(_131830_d))))._field_Mutable || (!(_1c0db1d9a_Mutable(_131913_elemType.ptr()))));
}



inline void _1c0d8ed45_slicingStr(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data>* _133330_d, jule::Ptr<_1c0d80352_Data>* _133341_l, jule::Ptr<_1c0d80352_Data>* _133352_r) {
	(*((*(_133330_d))))._field_Lvalue=false;
	(*((*(_133330_d))))._field_Mutable=true;
	if ((!(_1c0d80c26_IsConst((*(_133330_d)).ptr())))) {
		return;;
	};
	if ((((*(_133341_l)) == nullptr) || ((*(_133352_r)) == nullptr))) {
		(*((*(_133330_d))))._field_Constant=nullptr;
		return;;
	};
	if ((_1c0d80c26_IsConst((*(_133341_l)).ptr()) && _1c0d80c26_IsConst((*(_133352_r)).ptr()))) {
		jule::I64 _134613_left = _203646c90_AsI64((*((*(_133341_l))))._field_Constant.ptr());;
		if ((_134613_left < 0LL)) {
			return;;
		};
		jule::Str _135113_s = _203646773_ReadStr((*((*(_133330_d))))._field_Constant.ptr());;
		jule::I64 _135217_right = static_cast<jule::I64>(0LL);;
		if (((*(_133352_r)) == nullptr)) {
			_135217_right=static_cast<jule::I64>(static_cast<jule::I64>(_135113_s.len()));
		} else {
			_135217_right=static_cast<jule::I64>(_203646c90_AsI64((*((*(_133352_r))))._field_Constant.ptr()));
		};
		if ((_134613_left > _135217_right)) {
			return;;
		};
		_203647d7e_SetStr((*((*(_133330_d))))._field_Constant.ptr(), _135113_s.slice(_134613_left, _135217_right));
		(*((*(_133330_d))))._field_Decl=true;
	} else {
		(*((*(_133330_d))))._field_Constant=nullptr;
	};
}



inline void _1c0d9031d_checkSlicing(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data>* _136936_d, jule::Ptr<_1c0d80352_Data>* _136947_l, jule::Ptr<_1c0d80352_Data>* _136958_r, jule::Ptr<_1c0c4744a_SlicingExpr>* _136969_s) {
	{
		
		if ((_1c0db393a_Arr((*((*(_136936_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab007ad8:;
			{
				_1c0d8e927_slicingArr(_self_, _136936_d);
				return;;
			}
		}
		else if ((_1c0db3bc1_Slc((*((*(_136936_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab007b60:;
			{
				return;;
			}
		}
		else if ((_1c0db2b6a_Prim((*((*(_136936_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab007bd7:;
			{
				jule::Ptr<_1c0db80e3_Prim> _137713_prim = _1c0db2b6a_Prim((*((*(_136936_d))))._field_Kind.ptr());;
				{
					
					if (_1c0dbb57a_IsStr(_137713_prim.ptr())) {
						_case_begin_1ab00a2d3:;
						{
							_1c0d8ed45_slicingStr(_self_, _136936_d, _136947_l, _136958_r);
							return;;
						}
					}
					_match_end_1ab00a24a:;
				};
			}
		}
		_match_end_1ab0079b7:;
	};
	_1c0d82596_pushErr(_self_, (*((*(_136969_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_136936_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9065e_evalSlicing(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c4744a_SlicingExpr> _138835_s) {
	jule::Ptr<_1c0d80352_Data> _138913_d = _1c0da0020_evalExpr(_self_, (*(_138835_s))._field_Expr);;
	if ((_138913_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0d80352_Data> _139413_l;;
	jule::Ptr<_1c0d80352_Data> _139420_r;;
	({
		__jule_tuple_x_1c0d80352_Data__jule_tuple_x_1c0d80352_Data __jule_assign_result = _1c0d8e66e_evalSlicingExprs(_self_, &(_138835_s));
		_139413_l = __jule_assign_result.__jule_result_arg0;
		_139420_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_139413_l == nullptr)) {
		return _138913_d;;
	};
	(*(_138913_d))._field_Decl=false;
	_1c0d9031d_checkSlicing(_self_.ptr(), &(_138913_d), &(_139413_l), &(_139420_r), &(_138835_s));
	if (_1c0d80c26_IsConst(_138913_d.ptr())) {
		(*(_138913_d))._field_Decl=false;
		(*(_138913_d))._field_Model=jule::Any((*(_138913_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_138913_d))._field_Decl) {
		(*(_138913_d))._field_Decl=false;
	} else {
		jule::Ptr<_1c0c674ae_SlicingExprModel> _141217_model = jule::new_ptr<_1c0c674ae_SlicingExprModel>(_1c0c674ae_SlicingExprModel{._field_Token=(*(_138835_s))._field_Token, ._field_Expr=(*(_138913_d))._field_Model, ._field_Left=(*(_139413_l))._field_Model, });;
		if ((_139420_r != nullptr)) {
			(*(_141217_model))._field_Right=(*(_139420_r))._field_Model;
		};
		(*(_138913_d))._field_Model=jule::Any(_141217_model, &__jule_any_type91);
	};
	return _138913_d;;
}



inline void _1c0d90a7c_castPtr(_1c0d82046_Eval* _self_, jule::Ptr<_1c0db0519_TypeKind> _142530_t, jule::Ptr<_1c0d80352_Data> _142548_d, jule::Ptr<_1c0c25406_Token> _142558_errorToken) {
	(*(_142548_d))._field_Constant=nullptr;
	jule::Ptr<_1c0dbbb1e_Sptr> _14279_sptr = _1c0db2e01_Sptr((*(_142548_d))._field_Kind.ptr());;
	if ((_14279_sptr != nullptr)) {
		if ((!(_1c0db0c23_Equal((*(_1c0db3187_Ptr(_142530_t.ptr())))._field_Elem, (*(_14279_sptr))._field_Elem)))) {
			_1c0d82596_pushErr(_self_, _142558_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_142548_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str(_142530_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1c0d8308b_isUnsafe(_self_)))) {
		_1c0d82596_pushErr(_self_, _142558_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0db80e3_Prim> _14409_prim = _1c0db2b6a_Prim((*(_142548_d))._field_Kind.ptr());;
	if (((_1c0db3187_Ptr((*(_142548_d))._field_Kind.ptr()) == nullptr) && ((_14409_prim == nullptr) || (!(_203643a17_IsInt(_1c0db8434_Str(_14409_prim.ptr()))))))) {
		_1c0d82596_pushErr(_self_, _142558_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_142548_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str(_142530_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1c0d90e9a_castStruct(_1c0d82046_Eval* _self_, jule::Ptr<_1c0db0519_TypeKind> _144633_t, jule::Ptr<_1c0d80352_Data> _144651_d, jule::Ptr<_1c0c25406_Token> _144661_errorToken) {
	(*(_144651_d))._field_Constant=nullptr;
	jule::Ptr<_1c0c84850_Trait> _144813_tr = _1c0db4474_Trait((*(_144651_d))._field_Kind.ptr());;
	if ((_144813_tr == nullptr)) {
		_1c0d82596_pushErr(_self_, _144661_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_144651_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str(_144633_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1c0c5e3c9_StructIns> _145413_s = _1c0db41dd_Struct(_144633_t.ptr());;
	_1ab019b2d_pushReference(_self_, &(_145413_s));
	if ((!(_1c0c5cc8a_IsImplements((*(_145413_s))._field_Decl.ptr(), _144813_tr)))) {
		_1c0d82596_pushErr(_self_, _144661_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_144651_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str(_144633_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _1c0d913b8_castRef(_1c0d82046_Eval* _self_, jule::Ptr<_1c0db0519_TypeKind> _146230_t, jule::Ptr<_1c0d80352_Data> _146248_d, jule::Ptr<_1c0c25406_Token> _146258_errorToken) {
	(*(_146248_d))._field_Constant=nullptr;
	jule::Ptr<_1c0dbbb1e_Sptr> _146413_sptr = _1c0db2e01_Sptr(_146230_t.ptr());;
	jule::Ptr<_1c0dc03d6_Ptr> _146613_ptr = _1c0db3187_Ptr((*(_146248_d))._field_Kind.ptr());;
	if (((_146613_ptr != nullptr) && _1c0db0c23_Equal((*(_146413_sptr))._field_Elem, (*(_146613_ptr))._field_Elem))) {
		if ((!(_1c0d8308b_isUnsafe(_self_)))) {
			_1c0d82596_pushErr(_self_, _146258_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1c0db41dd_Struct((*(_146413_sptr))._field_Elem.ptr()) != nullptr)) {
		_1c0d90e9a_castStruct(_self_, (*(_146413_sptr))._field_Elem, _146248_d, _146258_errorToken);
		return;;
	};
	_1c0d82596_pushErr(_self_, _146258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_146248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str(_146230_t.ptr()), &__jule_any_type4)}));
}



inline void _1c0d917d6_castSlc(_1c0d82046_Eval* _self_, jule::Ptr<_1c0db0519_TypeKind> _148430_t, jule::Ptr<_1c0d80352_Data> _148448_d, jule::Ptr<_1c0c25406_Token> _148458_errorToken) {
	jule::Ptr<_2036445ea_Const> _14859_c = (*(_148448_d))._field_Constant;;
	(*(_148448_d))._field_Constant=nullptr;
	if ((_1c0db341d_Enum((*(_148448_d))._field_Kind.ptr()) != nullptr)) {
		if (((_1c0db2b6a_Prim((*((*(_1c0db341d_Enum((*(_148448_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1c0dbb57a_IsStr(_1c0db2b6a_Prim((*((*(_1c0db341d_Enum((*(_148448_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()).ptr()))))) {
			_1c0d82596_pushErr(_self_, _148458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_148448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str(_148430_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1c0db2b6a_Prim((*(_148448_d))._field_Kind.ptr()) == nullptr) || (!(_1c0dbb57a_IsStr(_1c0db2b6a_Prim((*(_148448_d))._field_Kind.ptr()).ptr()))))) {
		_1c0d82596_pushErr(_self_, _148458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_148448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str(_148430_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_148430_t=(*(_1c0db3bc1_Slc(_148430_t.ptr())))._field_Elem;
	jule::Ptr<_1c0db80e3_Prim> _14999_prim = _1c0db2b6a_Prim(_148430_t.ptr());;
	if (((_14999_prim == nullptr) || ((!(_1c0db99da_IsU8(_14999_prim.ptr()))) && (!(_1c0db94bd_IsI32(_14999_prim.ptr())))))) {
		_1c0d82596_pushErr(_self_, _148458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_148448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str(_148430_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	if ((_14859_c != nullptr)) {
		{
			
			if (_1c0db99da_IsU8(_14999_prim.ptr())) {
				_case_begin_1ab030319:;
				{
					jule::Str _150917_s = _203646773_ReadStr(_14859_c.ptr());;
					jule::Ptr<_1c0c65c1b_SliceExprModel> _151021_model = jule::new_ptr<_1c0c65c1b_SliceExprModel>(_1c0c65c1b_SliceExprModel{._field_ElemKind=_148430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _150917_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_150917_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab03156d:;
						if (it != expr_end) {
							jule::U8 *_151424_b = it;
							{
								jule::Ptr<_2036445ea_Const> _151525_bc = static__203644d04_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_151424_b)))));;
								(*(_151525_bc))._field_Kind=(*(_14999_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_151021_model))._field_Elems; __jule_push_dest.push(jule::Any(_151525_bc, &__jule_any_type19)); };
							}
							_iter_next_1ab03156d:;
							++it;
							goto _iter_begin_1ab03156d;
						}
						_iter_end_1ab03156d:;
					};
					(*(_148448_d))._field_Model=jule::Any(_151021_model, &__jule_any_type76);
					(*(_148448_d))._field_Decl=true;
				}
			}
			else if (_1c0db94bd_IsI32(_14999_prim.ptr())) {
				_case_begin_1ab030391:;
				{
					jule::Slice<jule::I32> _152217_runes = static_cast<jule::Slice<jule::I32>>(_203646773_ReadStr(_14859_c.ptr()));;
					jule::Ptr<_1c0c65c1b_SliceExprModel> _152321_model = jule::new_ptr<_1c0c65c1b_SliceExprModel>(_1c0c65c1b_SliceExprModel{._field_ElemKind=_148430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _152217_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_152217_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab034461:;
						if (it != expr_end) {
							jule::I32 *_152724_r = it;
							{
								jule::Ptr<_2036445ea_Const> _152825_rc = static__203644a3a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_152724_r)))));;
								(*(_152825_rc))._field_Kind=(*(_14999_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_152321_model))._field_Elems; __jule_push_dest.push(jule::Any(_152825_rc, &__jule_any_type19)); };
							}
							_iter_next_1ab034461:;
							++it;
							goto _iter_begin_1ab034461;
						}
						_iter_end_1ab034461:;
					};
					(*(_148448_d))._field_Model=jule::Any(_152321_model, &__jule_any_type76);
					(*(_148448_d))._field_Decl=true;
				}
			}
			_match_end_1ab030209:;
		};
	};
}



inline void _1c0d91b49_castStr(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data> _153830_d, jule::Ptr<_1c0c25406_Token> _153840_errorToken) {
	if ((_1c0db341d_Enum((*(_153830_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c0c8704a_Enum> _154017_e = _1c0db341d_Enum((*(_153830_d))._field_Kind.ptr());;
		if (((_1c0db2b6a_Prim((*((*(_154017_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1c0dbb57a_IsStr(_1c0db2b6a_Prim((*((*(_154017_e))._field_Kind))._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_2036445ea_Const> _15469_c = (*(_153830_d))._field_Constant;;
	(*(_153830_d))._field_Constant=nullptr;
	if ((_1c0db2b6a_Prim((*(_153830_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c0db80e3_Prim> _154913_prim = _1c0db2b6a_Prim((*(_153830_d))._field_Kind.ptr());;
		if (((!(_1c0db99da_IsU8(_154913_prim.ptr()))) && (!(_1c0db94bd_IsI32(_154913_prim.ptr()))))) {
			_1c0d82596_pushErr(_self_, _153840_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*(_153830_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
		if ((_15469_c != nullptr)) {
			{
				
				if (_1c0db99da_IsU8(_154913_prim.ptr())) {
					_case_begin_1ab03b688:;
					{
						(*(_153830_d))._field_Constant=static__203645387_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_203647026_AsU64(_15469_c.ptr()))));
						(*(_153830_d))._field_Model=jule::Any((*(_153830_d))._field_Constant, &__jule_any_type19);
						(*(_153830_d))._field_Decl=true;
					}
				}
				else if (_1c0db94bd_IsI32(_154913_prim.ptr())) {
					_case_begin_1ab03b710:;
					{
						(*(_153830_d))._field_Constant=static__203645387_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_203646c90_AsI64(_15469_c.ptr()))));
						(*(_153830_d))._field_Model=jule::Any((*(_153830_d))._field_Constant, &__jule_any_type19);
						(*(_153830_d))._field_Decl=true;
					}
				}
				_match_end_1ab03b589:;
			};
		};
		return;;
	};
	jule::Ptr<_1c0dbc5e2_Slc> _157013_s = _1c0db3bc1_Slc((*(_153830_d))._field_Kind.ptr());;
	if ((_157013_s == nullptr)) {
		_1c0d82596_pushErr(_self_, _153840_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*(_153830_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1c0db0519_TypeKind> _157613_t = (*(_157013_s))._field_Elem;;
	jule::Ptr<_1c0db80e3_Prim> _15779_prim = _1c0db2b6a_Prim(_157613_t.ptr());;
	if (((_15779_prim == nullptr) || ((!(_1c0db99da_IsU8(_15779_prim.ptr()))) && (!(_1c0db94bd_IsI32(_15779_prim.ptr())))))) {
		_1c0d82596_pushErr(_self_, _153840_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*(_153830_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
}



inline void _1c0d92067_castInt(_1c0d82046_Eval* _self_, jule::Ptr<_1c0db0519_TypeKind> _158430_t, jule::Ptr<_1c0d80352_Data> _158448_d, jule::Ptr<_1c0c25406_Token> _158458_errorToken) {
	if (_1c0d80c26_IsConst(_158448_d.ptr())) {
		jule::Ptr<_1c0db80e3_Prim> _158613_prim = _1c0db2b6a_Prim(_158430_t.ptr());;
		{
			
			if (_203643440_IsSigInt((*(_158613_prim))._field_Kind)) {
				_case_begin_1ab044251:;
				{
					_203647565_SetI64((*(_158448_d))._field_Constant.ptr(), static_cast<jule::I64>(_203646c90_AsI64((*(_158448_d))._field_Constant.ptr())));
				}
			}
			else if (_20364374d_IsUnsigInt((*(_158613_prim))._field_Kind)) {
				_case_begin_1ab0442c8:;
				{
					_20364781d_SetU64((*(_158448_d))._field_Constant.ptr(), static_cast<jule::U64>(_203647026_AsU64((*(_158448_d))._field_Constant.ptr())));
				}
			}
			_match_end_1ab0441a7:;
		};
	} else {
		(*(_158448_d))._field_Constant=nullptr;
	};
	if ((_1c0db341d_Enum((*(_158448_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c0c8704a_Enum> _159813_e = _1c0db341d_Enum((*(_158448_d))._field_Kind.ptr());;
		if (_203644122_IsNum(_1c0db08d2_Str((*((*(_159813_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1c0db2e01_Sptr((*(_158448_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c0db80e3_Prim> _160513_prim = _1c0db2b6a_Prim(_158430_t.ptr());;
		if ((!(_1c0dbb05d_IsUintptr(_160513_prim.ptr())))) {
			_1c0d82596_pushErr(_self_, _158458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_158448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str(_158430_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1c0db3187_Ptr((*(_158448_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c0db80e3_Prim> _161213_prim = _1c0db2b6a_Prim(_158430_t.ptr());;
		if (_1c0dbb05d_IsUintptr(_161213_prim.ptr())) {
		} else if ((!(_1c0d8308b_isUnsafe(_self_)))) {
			_1c0d82596_pushErr(_self_, _158458_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1c0db80e3_Prim> _16219_prim = _1c0db2b6a_Prim((*(_158448_d))._field_Kind.ptr());;
	if (((_16219_prim != nullptr) && _203644122_IsNum(_1c0db8434_Str(_16219_prim.ptr())))) {
		return;;
	};
	_1c0d82596_pushErr(_self_, _158458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_158448_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str(_158430_t.ptr()), &__jule_any_type4)}));
}



inline void _1c0d92485_castNum(_1c0d82046_Eval* _self_, jule::Ptr<_1c0db0519_TypeKind> _162930_t, jule::Ptr<_1c0d80352_Data> _162948_d, jule::Ptr<_1c0c25406_Token> _162958_errorToken) {
	if (_1c0d80c26_IsConst(_162948_d.ptr())) {
		jule::Ptr<_1c0db80e3_Prim> _163113_prim = _1c0db2b6a_Prim(_162930_t.ptr());;
		{
			
			if (_203643d58_IsFloat((*(_163113_prim))._field_Kind)) {
				_case_begin_1ab04e8cc:;
				{
					_203648137_SetF64((*(_162948_d))._field_Constant.ptr(), static_cast<jule::F64>(_2036472ac_AsF64((*(_162948_d))._field_Constant.ptr())));
				}
			}
			else if (_203643440_IsSigInt((*(_163113_prim))._field_Kind)) {
				_case_begin_1ab04e954:;
				{
					_203647565_SetI64((*(_162948_d))._field_Constant.ptr(), static_cast<jule::I64>(_203646c90_AsI64((*(_162948_d))._field_Constant.ptr())));
				}
			}
			else if (_20364374d_IsUnsigInt((*(_163113_prim))._field_Kind)) {
				_case_begin_1ab04e9cb:;
				{
					_20364781d_SetU64((*(_162948_d))._field_Constant.ptr(), static_cast<jule::U64>(_203647026_AsU64((*(_162948_d))._field_Constant.ptr())));
				}
			}
			_match_end_1ab04e822:;
		};
	} else {
		(*(_162948_d))._field_Constant=nullptr;
	};
	if ((_1c0db341d_Enum((*(_162948_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c0c8704a_Enum> _164513_e = _1c0db341d_Enum((*(_162948_d))._field_Kind.ptr());;
		if (_203644122_IsNum(_1c0db08d2_Str((*((*(_164513_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1c0db80e3_Prim> _16519_prim = _1c0db2b6a_Prim((*(_162948_d))._field_Kind.ptr());;
	if (((_16519_prim != nullptr) && _203644122_IsNum(_1c0db8434_Str(_16519_prim.ptr())))) {
		return;;
	};
	_1c0d82596_pushErr(_self_, _162958_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_162948_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str(_162930_t.ptr()), &__jule_any_type4)}));
}



inline void _1c0d928a3_castPrim(_1c0d82046_Eval* _self_, jule::Ptr<_1c0db0519_TypeKind> _165931_t, jule::Ptr<_1c0d80352_Data> _165949_d, jule::Ptr<_1c0c25406_Token> _165959_errorToken) {
	jule::Ptr<_1c0db80e3_Prim> _16609_prim = _1c0db2b6a_Prim(_165931_t.ptr());;
	{
		
		if (_1c0dbb811_IsAny(_16609_prim.ptr())) {
			_case_begin_1ab0576e8:;
			{
				(*(_165949_d))._field_Constant=nullptr;
			}
		}
		else if (_1c0dbb57a_IsStr(_16609_prim.ptr())) {
			_case_begin_1ab057770:;
			{
				_1c0d91b49_castStr(_self_, _165949_d, _165959_errorToken);
			}
		}
		else if (_203643a17_IsInt(_1c0db8434_Str(_16609_prim.ptr()))) {
			_case_begin_1ab057363:;
			{
				_1c0d92067_castInt(_self_, _165931_t, _165949_d, _165959_errorToken);
			}
		}
		else if (_203644122_IsNum(_1c0db8434_Str(_16609_prim.ptr()))) {
			_case_begin_1ab0573da:;
			{
				_1c0d92485_castNum(_self_, _165931_t, _165949_d, _165959_errorToken);
			}
		}
		else {
			_case_begin_1ab0572ec:;
			{
				_1c0d82596_pushErr(_self_, _165959_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str(_165931_t.ptr()), &__jule_any_type4)}));
			}
		}
		_match_end_1ab057297:;
	};
}



inline void _1c0d92c16_castConstant(_1c0d82046_Eval* _self_, jule::Ptr<_1c0db0519_TypeKind>* _167636_t, jule::Ptr<_1c0d80352_Data>* _167655_d) {
	if ((((*(_167655_d)) == nullptr) || (!(_1c0d80c26_IsConst((*(_167655_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1c0db80e3_Prim> _16809_prim = _1c0db2b6a_Prim((*(_167636_t)).ptr());;
	_1c0dab6e1_castConstByType(&((*(_16809_prim))._field_Kind), _167655_d);
	(*((*(_167655_d))))._field_Model=jule::Any((*((*(_167655_d))))._field_Constant, &__jule_any_type19);
}



inline void _1c0d93134_castTypeEnum(_1c0d82046_Eval* _self_, jule::Ptr<_1c0db0519_TypeKind>* _168536_t, jule::Ptr<_1c0d80352_Data>* _168555_d, jule::Ptr<_1c0c25406_Token>* _168570_errorToken) {
	jule::I64 _16869_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1c0d10304_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_168555_d))))._field_Kind), _168536_t, _168570_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _16869_n);
		_1c0d82596_pushErr(_self_, (*(_168570_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_168555_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*(_168536_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_168555_d))))._field_Constant=nullptr;
}



inline void _1c0d93552_castTypeEnumT(_1c0d82046_Eval* _self_, jule::Ptr<_1c0db0519_TypeKind>* _169437_t, jule::Ptr<_1c0d80352_Data>* _169456_d, jule::Ptr<_1c0c25406_Token>* _169471_errorToken) {
	jule::I64 _16959_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1c0d10304_checkTypeCompatibility((*(_self_))._field_s, _169437_t, &((*((*(_169456_d))))._field_Kind), _169471_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _16959_n);
		_1c0d82596_pushErr(_self_, (*(_169471_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_169456_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*(_169437_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_169456_d))))._field_Constant=nullptr;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d93a08_evalCastByTypeNData(_1c0d82046_Eval* _self_, jule::Ptr<_1c0db0519_TypeKind> _170342_t, jule::Ptr<_1c0d80352_Data> _170360_d, jule::Ptr<_1c0c25406_Token> _170374_errorToken) {
	if (((_170360_d != nullptr) && (*(_170360_d))._field_Decl)) {
		_1c0d82596_pushErr(_self_, _170374_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1c0d80709_IsNil(_170360_d.ptr())) {
			_case_begin_1ab06423d:;
			{
				if ((!(_1c0db23b7_NilCompatible(_170342_t.ptr())))) {
					_1c0d82596_pushErr(_self_, _170374_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1c0db08d2_Str(_170342_t.ptr()), &__jule_any_type4)}));
				};
				(*(_170360_d))._field_Constant=nullptr;
			}
		}
		else if (((_1c0db2b6a_Prim((*(_170360_d))._field_Kind.ptr()) != nullptr) && _1c0dbb811_IsAny(_1c0db2b6a_Prim((*(_170360_d))._field_Kind.ptr()).ptr()))) {
			_case_begin_1ab064150:;
			{
				if ((_1c0db341d_Enum(_170342_t.ptr()) != nullptr)) {
					_1c0d82596_pushErr(_self_, _170374_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1c0d82909_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1c0db36a4_TypeEnum(_170342_t.ptr()) != nullptr)) {
					_1c0d82596_pushErr(_self_, _170374_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*(_170360_d))._field_Constant=nullptr;
			}
		}
		else if ((_1c0db36a4_TypeEnum((*(_170360_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab063dec:;
			{
				_1c0d93134_castTypeEnum(_self_, &(_170342_t), &(_170360_d), &(_170374_errorToken));
			}
		}
		else if ((_1c0db36a4_TypeEnum(_170342_t.ptr()) != nullptr)) {
			_case_begin_1ab063e63:;
			{
				_1c0d93552_castTypeEnumT(_self_, &(_170342_t), &(_170360_d), &(_170374_errorToken));
			}
		}
		else if ((_1c0db3187_Ptr(_170342_t.ptr()) != nullptr)) {
			_case_begin_1ab064b23:;
			{
				_1c0d90a7c_castPtr(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_1c0db2e01_Sptr(_170342_t.ptr()) != nullptr)) {
			_case_begin_1ab064b89:;
			{
				_1c0d913b8_castRef(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_1c0db3bc1_Slc(_170342_t.ptr()) != nullptr)) {
			_case_begin_1ab064c00:;
			{
				_1c0d917d6_castSlc(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_1c0db41dd_Struct(_170342_t.ptr()) != nullptr)) {
			_case_begin_1ab064c66:;
			{
				_1c0d90e9a_castStruct(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_1c0db2b6a_Prim(_170342_t.ptr()) != nullptr)) {
			_case_begin_1ab064ccc:;
			{
				_1c0d928a3_castPrim(_self_, _170342_t, _170360_d, _170374_errorToken);
				_1c0d92c16_castConstant(_self_, &(_170342_t), &(_170360_d));
			}
		}
		else {
			_case_begin_1ab063ccb:;
			{
				_1c0d82596_pushErr(_self_, _170374_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str(_170342_t.ptr()), &__jule_any_type4)}));
				_170360_d=nullptr;
			}
		}
		_match_end_1ab0635b1:;
	};
	if ((_170360_d == nullptr)) {
		return nullptr;;
	};
	(*(_170360_d))._field_Mutable=((*(_170360_d))._field_Mutable || (!(_1c0db1d9a_Mutable((*(_170360_d))._field_Kind.ptr()))));
	if (((!((*(_170360_d))._field_Decl)) && ((_1c0db341d_Enum((*(_170360_d))._field_Kind.ptr()) == nullptr) || (!(_1c0db0c23_Equal((*((*(_1c0db341d_Enum((*(_170360_d))._field_Kind.ptr())))._field_Kind))._field_Kind, _170342_t)))))) {
		_1c0daab41_applyCastKind(&(_170360_d), &(_170342_t));
		(*((*(_170360_d))._field_Model.cast_ptr<_1c0c64e90_CastingExprModel>(&__jule_any_type92)))._field_Token=_170374_errorToken;
	} else {
		(*(_170360_d))._field_Kind=_170342_t;
	};
	(*(_170360_d))._field_Decl=false;
	(*(_170360_d))._field_Lvalue=false;
	(*(_170360_d))._field_untyped=false;
	if (_1c0d80c26_IsConst(_170360_d.ptr())) {
		(*((*(_170360_d))._field_Constant))._field_Kind=(*(_1c0db2b6a_Prim(_170342_t.ptr())))._field_Kind;
	};
	return _170360_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d93eae_evalCastT(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0db0519_TypeKind>* _177434_t, jule::Ptr<_1c0c3ed27_Expr>* _177453_e, jule::Ptr<_1c0c25406_Token>* _177468_et) {
	jule::Ptr<_1c0db0519_TypeKind> _177513_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_177513_prefix;
	});;
	if ((_1c0db3bc1_Slc((*(_177434_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_177453_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1ab074429:;
				{
					(*(_self_))._field_prefix=(*(_177434_t));
				}
			}
			_match_end_1ab0743c4:;
		};
	};
	jule::Ptr<_1c0d80352_Data> _178413_d = _1c0da0020_evalExpr(_self_, (*(_177453_e)));;
	if (((_178413_d == nullptr) || ((*(_self_))._field_prefix != nullptr))) {
		return _178413_d;;
	};
	return _1c0d93a08_evalCastByTypeNData(_self_.ptr(), (*(_177434_t)), _178413_d, (*(_177468_et)));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d94300_evalCast(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c42687_CastExpr> _179132_c) {
	jule::Ptr<_1c0db76db_TypeSymbol> _179213_t = _1c0c78ed7_buildType((*(_179132_c))._field_Kind);;
	jule::Bool _17939_ok = _1c0d0ceb1_checkType((*(_self_))._field_s, &(_179213_t), (*(_self_))._field_lookup);;
	if ((!(_17939_ok))) {
		return nullptr;;
	};
	return _1c0d93eae_evalCastT(_self_, &((*(_179213_t))._field_Kind), &((*(_179132_c))._field_Expr), &((*((*(_179132_c))._field_Kind))._field_Token));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d94641_evalNsSelection(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c42a61_NsSelectionExpr> _180034_s) {
	jule::Str _18019_path = _1c0dcc091_buildLinkPathByTokens(&((*(_180034_s))._field_Ns));;
	jule::Ptr<_1c0cd353b_ImportInfo> _180213_imp = _1c0dd0050_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0dcd339_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)>([=](jule::Ptr<_1c0cd353b_ImportInfo> _180249_imp) mutable -> jule::Bool {
		if ((((*(_180034_s))._field_Ns.len() == 1LL) && ((*(_180249_imp))._field_Alias == _18019_path))) {
			return true;;
		};
		return (((*(_180249_imp))._field_LinkPath == _18019_path) && _1c0cd6154_isAccessibleViaSelection(_180249_imp.ptr()));;
	}));;
	if ((_180213_imp == nullptr)) {
		_1c0d82596_pushErr(_self_, (*(_180034_s))._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18019_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait<_1c0dd0050_Lookup> _181413_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1c0dd0050_Lookup>(_180213_imp, 1);
	;
	_1c0d82d05_disallowBuiltin(_self_);
	jule::Any _181913_def = _1c0d85313_getDef(_self_, &((*((*(_180034_s))._field_Ident))._field_Kind), false);;
	_1c0d82b07_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_181413_lookup;
	jule::Ptr<_1c0d80352_Data> _182213_d = _1c0d8923a_evalDef(_self_, &(_181913_def), (*(_180034_s))._field_Ident);;
	return _182213_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d94ae7_evalStructLitExplicit(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c5e3c9_StructIns> _182645_s, jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _182713_exprs, jule::Ptr<_1c0c25406_Token> _182733_errorToken) {
	jule::Bool _18289_ok = _1c0d0886e_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_182645_s))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_182645_s))._field_Generics.len()), _182733_errorToken);;
	if ((!(_18289_ok))) {
		return nullptr;;
	};
	if ((((*(_self_))._field_field != nullptr) && ((*((*((*(_self_))._field_field))._field_Decl))._field_Owner == (*(_182645_s))._field_Decl))) {
		_1c0d82596_pushErr(_self_.ptr(), _182733_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_182645_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
	};
	_1ab019b2d_pushReference(_self_.ptr(), &(_182645_s));
	_1c0d87436_checkDeprecated(_self_.ptr(), &((*((*(_182645_s))._field_Decl))._field_Directives), _182733_errorToken);
	_1c0d7382e_structLitChecker _184113_slc = _1c0d7382e_structLitChecker{._field_e=_self_, ._field_errorToken=_182733_errorToken, ._field_s=_182645_s, };;
	_1c0d7506c_check(&_184113_slc, &(_182713_exprs));
	jule::Ptr<_1c0d80352_Data> _184813_d = jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_182645_s, 0)}), ._field_Mutable=(!((*(_self_))._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1c0c64610_StructLitExprModel>(_1c0c64610_StructLitExprModel{._field_Strct=_182645_s, ._field_Args=_184113_slc._field_args}), &__jule_any_type94), });;
	if ((*((*(_182645_s))._field_Decl))._field_Binded) {
		(*((*(_184813_d))._field_Kind))._field_BindIdent=(*((*(_182645_s))._field_Decl))._field_Ident;
	};
	return _184813_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d94e38_evalStructLit(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c44d71_StructLit> _186437_lit) {
	jule::Ptr<_1c0db76db_TypeSymbol> _186513_t = _1c0c78ed7_buildType((*(_186437_lit))._field_Kind);;
	jule::Bool _18669_ok = _1c0d0ceb1_checkType((*(_self_))._field_s, &(_186513_t), (*(_self_))._field_lookup);;
	if ((!(_18669_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1c0c5e3c9_StructIns> _187113_s = _1c0db41dd_Struct((*(_186513_t))._field_Kind.ptr());;
	if ((_187113_s == nullptr)) {
		if ((_1c0db2e01_Sptr((*(_186513_t))._field_Kind.ptr()) != nullptr)) {
			_187113_s=_1c0db41dd_Struct((*(_1c0db2e01_Sptr((*(_186513_t))._field_Kind.ptr())))._field_Elem.ptr());
			if ((_187113_s != nullptr)) {
				goto _julec_label_1ab089cbe;
			};
		};
		_1c0d82596_pushErr(_self_.ptr(), (*((*(_186437_lit))._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1ab089cbe:;
	jule::Ptr<_1c0d80352_Data> _188413_d = _1c0d94ae7_evalStructLitExplicit(_self_, _187113_s, (*(_186437_lit))._field_Exprs, (*((*(_186437_lit))._field_Kind))._field_Token);;
	if ((_1c0db2e01_Sptr((*(_186513_t))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c0c64610_StructLitExprModel> _188617_model = (*(_188413_d))._field_Model.cast_ptr<_1c0c64610_StructLitExprModel>(&__jule_any_type94);;
		_1c0da9359_makeStructLitAlloc(&(_188413_d), &(_188617_model));
	};
	return _188413_d;;
}



inline _1c0dc23c7_typeChecker _1c0d951be_typeChecker(_1c0d82046_Eval* _self_) {
	return _1c0d0bc5c_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d95510_evalType(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c3a9e3_TypeDecl> _189631_t) {
	jule::Ptr<_1c0db76db_TypeSymbol> _189713_tk = _1c0c78ed7_buildType(_189631_t);;
	jule::Bool _18989_ok = _1c0d0ceb1_checkType((*(_self_))._field_s, &(_189713_tk), (*(_self_))._field_lookup);;
	if ((!(_18989_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=(*(_189713_tk))._field_Kind, ._field_Model=jule::Any((*(_189713_tk))._field_Kind, &__jule_any_type83), ._field_Decl=true, });;
}



inline void _1c0d95873_callTypeFn(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c43a51_FnCallExpr>* _190935_fc, jule::Ptr<_1c0d80352_Data>* _190957_d) {
	if (((*((*(_190935_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr(_self_.ptr(), (*((*(_190935_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_190935_fc))))._field_Args.len() > 1LL)) {
		_1c0d82596_pushErr(_self_.ptr(), (*((*((*(_190935_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_190957_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_190935_fc))))._field_IsCo) {
		_1c0d82596_pushErr(_self_.ptr(), (*((*(_190935_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_190957_d))=nullptr;
		return;;
	} else if (((*((*(_190935_fc))))._field_Exception != nullptr)) {
		_1c0d82596_pushErr(_self_.ptr(), (*((*(_190935_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_190957_d))=nullptr;
		return;;
	};
	if (((*((*(_190935_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1c0c3ed27_Expr> _192517_arg = (*((*(_190935_fc))))._field_Args[0LL];;
		(*(_190957_d))=_1c0d93eae_evalCastT(_self_, &((*((*(_190957_d))))._field_Kind), &(_192517_arg), &((*(_192517_arg))._field_Token));
		return;;
	};
	if (((*(_190957_d)) != nullptr)) {
		(*((*(_190957_d))))._field_Decl=false;
	};
}



inline void _1c0d95bd6_callBuiltinFn(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c43a51_FnCallExpr>* _193538_fc, jule::Ptr<_1c0d80352_Data>* _193560_d) {
	if ((!(_1c0c43dc5_Unhandled((*(_193538_fc)).ptr())))) {
		_1c0d82596_pushErr(_self_.ptr(), (*((*(_193538_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_193560_d))=(*(_1c0db3e57_Fn((*((*(_193560_d))))._field_Kind.ptr())))._field_caller(&(_self_), _193538_fc, _193560_d);
	if (((*(_193560_d)) == nullptr)) {
		return;;
	};
	(*((*(_193560_d))))._field_Mutable=true;
}



inline void _1c0d96049_checkFnOfConcurrentCall(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c744aa_FnIns>* _194743_f, jule::Ptr<_1c0c25406_Token> _194754_errorToken) {
	if (_1c0d8308b_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_194743_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab098948:;
		if (it != expr_end) {
			jule::Ptr<_1c0c7350e_ParamIns> *_195116_p = it;
			{
				if (_1c0c701ed_IsSelf((*((*(_195116_p))))._field_Decl.ptr())) {
					if ((!(_1c0c70484_IsRef((*((*(_195116_p))))._field_Decl.ptr())))) {
						_1c0d82596_pushErr(_self_, _194754_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1c0d82909_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*((*((*(_195116_p))))._field_Decl))._field_Reference) {
					_1c0d82596_pushErr(_self_, _194754_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1c0d82909_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1ab098948:;
			++it;
			goto _iter_begin_1ab098948;
		}
		_iter_end_1ab098948:;
	};
}



inline void _1c0d96467_processExceptionalHandler(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c744aa_FnIns>* _196649_f, jule::Ptr<_1c0c43a51_FnCallExpr>* _196665_fc, jule::Ptr<_1c0d80352_Data>* _196687_d) {
	jule::Bool _19679_resultNeeded = ((!(_1c0c71a29_IsVoid((*((*(_196649_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1c0cb9412_scopeChecker> _196817_csc = nullptr;;
	jule::Ptr<_1c0cb210d_Scope> _196917_ch = nullptr;;
	jule::Ptr<_1c0c65842_FnCallExprModel> _197113_model = (*((*(_196687_d))))._field_Model.cast_ptr<_1c0c65842_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_1c0cb9412_scopeChecker> _197513_sc = (*(_self_))._field_lookup.cast_ptr<_1c0cb9412_scopeChecker>(0);;
	_196817_csc=_1c0ccb15a_newChildChecker(_197513_sc);
	if (_19679_resultNeeded) {
		(*(_196817_csc))._field_result=(*(_196649_f));
	};
	_196917_ch=_1c0cbe208_getChild(_197513_sc.ptr());
	(*((*((*(_196665_fc))))._field_Exception))._field_Parent=(*(_197513_sc))._field_tree;
	{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = (*((*(_196817_csc))._field_table))._field_Vars; __jule_push_dest.push(_1c0da96cd_buildErrorVar(&(_196917_ch), _196665_fc)); };
	_1c0cbe626_checkChildSsc(_197513_sc, &((*((*(_196665_fc))))._field_Exception), &(_196917_ch), &(_196817_csc));
	(*(_197113_model))._field_Assigned=_19679_resultNeeded;
	(*(_197113_model))._field_Except=_196917_ch;
	if ((_19679_resultNeeded && ((*(_196817_csc))._field_result != nullptr))) {
		_1c0d82596_pushErr(_self_, (*((*(_196665_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1c0d967ca_callFn(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c43a51_FnCallExpr>* _199331_fc, jule::Ptr<_1c0d80352_Data>* _199353_d) {
	jule::Ptr<_1c0c744aa_FnIns> _199413_f = _1c0db3e57_Fn((*((*(_199353_d))))._field_Kind.ptr());;
	if (_1c0c75940_IsBuiltin(_199413_f.ptr())) {
		_1c0d95bd6_callBuiltinFn(_self_, _199331_fc, _199353_d);
		return;;
	};
	if ((_1c0d83322_isGlobal(_self_.ptr()) && (*((*(_199413_f))._field_Decl))._field_Exceptional)) {
		_1c0d82596_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1c0d82909_pushSuggestion(_self_.ptr(), jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_199353_d))=nullptr;
		return;;
	};
	if (((!(_1c0c71cb0_IsMethod((*(_199413_f))._field_Decl.ptr()))) && _1c0dcb139_hasDirective(&((*((*(_199413_f))._field_Decl))._field_Directives), jule::Str::lit("test", 4)))) {
		_1c0d82596_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_199353_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_199353_d))))._field_Mutable)) && _1c0c71cb0_IsMethod((*(_199413_f))._field_Decl.ptr())) && (!((*((*(_199413_f))._field_Decl))._field_Statically))) && (*((*((*(_199413_f))._field_Decl))._field_Params[0LL]))._field_Mutable)) {
		if ((!((*(_self_))._field_immutable))) {
			_1c0d82596_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1c0c64610_StructLitExprModel> _202017_lit = _1c0dac912_isLitBased(&((*((*(_199353_d))))._field_Model));;
			if ((_202017_lit == nullptr)) {
				_1c0d82596_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1c0d73345_checkMutRiskOfStructLit(&((*(_self_))._field_s), &(_202017_lit));
			};
		};
	} else if (((!(_1c0d8308b_isUnsafe(_self_.ptr()))) && (*((*(_199413_f))._field_Decl))._field_Unsafety)) {
		_1c0d82596_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _203213_dynamicAnnotation = ((((*((*(_199413_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_199413_f))._field_Generics.len() == 0LL)) && ((*(_199413_f))._field_Params.len() > 0LL));;
	if (_203213_dynamicAnnotation) {
		(*(_199413_f))._field_Generics=jule::Slice<jule::Ptr<_1c0dadb33_InsGeneric>>::alloc((*((*(_199413_f))._field_Decl))._field_Generics.len(), (*((*(_199413_f))._field_Decl))._field_Generics.len());
	} else if (((*(_199413_f))._field_Generics.len() != (*((*(_199413_f))._field_Decl))._field_Generics.len())) {
		_1c0d0886e_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_199413_f))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_199413_f))._field_Generics.len()), (*((*(_199331_fc))))._field_Token);
		(*(_199353_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c0d04705_Sema> _204113_old = (*(_self_))._field_s;;
	if (((*((*(_199413_f))._field_Decl))._field_Owner != nullptr)) {
		(*(_self_))._field_s=(*((*((*(_199413_f))._field_Decl))._field_Owner))._field_sema;
	};
	__JULE_DEFER({
		if ((_204113_old != (*(_self_))._field_s)) {
			((*(_204113_old))._field_errors).append((*((*(_self_))._field_s))._field_errors);;
			(*((*(_self_))._field_s))._field_errors=nullptr;
		};
		(*(_self_))._field_s=_204113_old;
	});;
	_1c0d708e7_fnCallArgChecker _205413_fcac = _1c0d708e7_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_199331_fc))))._field_Args, ._field_errorToken=(*((*(_199331_fc))))._field_Token, ._field_dynamicAnnotation=_203213_dynamicAnnotation, };;
	if ((!(_203213_dynamicAnnotation))) {
		if ((!((*(_199413_f))._field_reloaded))) {
			jule::Bool _206317_ok = _1c0d12449_reloadFnInsTypes((*(_self_))._field_s, _199413_f);;
			(*(_199413_f))._field_reloaded=true;
			if ((!(_206317_ok))) {
				(*(_199353_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1c0c744aa_FnIns> _207017_existInstance = _1c0c73124_appendInstance((*(_199413_f))._field_Decl.ptr(), &(_199413_f));;
		if ((_207017_existInstance != nullptr)) {
			_199413_f=_207017_existInstance;
		};
	} else if ((!(_1c0d10ba6_buildFnNonGenericTypeKinds((*(_self_))._field_s, &(_199413_f), &(_205413_fcac._field_ignored))))) {
		(*(_199353_d))=nullptr;
		return;;
	};
	_205413_fcac._field_f=_199413_f;
	jule::Bool _208113_ok = false;;
	if (((*((*(_199413_f))._field_Decl))._field_Owner != nullptr)) {
		std::swap(_204113_old, (*(_self_))._field_s);
		_208113_ok=_1c0d72e9e_check(&_205413_fcac);
		std::swap(_204113_old, (*(_self_))._field_s);
	} else {
		_208113_ok=_1c0d72e9e_check(&_205413_fcac);
	};
	if (_203213_dynamicAnnotation) {
		if ((!(_208113_ok))) {
			(*(_199353_d))=nullptr;
			return;;
		};
		if ((!(_1c0d8db79_checkGenericFn(_self_, &(_199413_f), &((*((*(_199331_fc))))._field_Token), &((*((*(_199353_d))))._field_Model))))) {
			(*(_199353_d))=nullptr;
			return;;
		};
	};
	jule::Any _210113_callModel = (*((*(_199353_d))))._field_Model;;
	if (_1c0c71a29_IsVoid((*(_199413_f))._field_Decl.ptr())) {
		(*(_199353_d))=_1c0daad50_buildVoidData();
	} else {
		(*((*(_199353_d))))._field_Kind=(*(_199413_f))._field_Result;
		(*((*(_199353_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1c0c65842_FnCallExprModel> _211013_model = jule::new_ptr<_1c0c65842_FnCallExprModel>(_1c0c65842_FnCallExprModel{._field_Token=(*((*(_199331_fc))))._field_Token, ._field_Func=_199413_f, ._field_IsCo=(*((*(_199331_fc))))._field_IsCo, ._field_Expr=_210113_callModel, ._field_Args=_205413_fcac._field_argModels, });;
	(*((*(_199353_d))))._field_Model=jule::Any(_211013_model, &__jule_any_type34);
	(*((*(_199353_d))))._field_Mutable=true;
	if ((*((*(_199413_f))._field_Decl))._field_Exceptional) {
		if ((*((*(_199331_fc))))._field_IsCo) {
			_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1c0d076a3_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1c0c43dc5_Unhandled((*(_199331_fc)).ptr())) {
				_case_begin_1ab0bd918:;
				{
					_1c0d82596_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1c0d82909_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1c0c4415b_Ignored((*(_199331_fc)).ptr())) {
				_case_begin_1ab0bd97e:;
				{
					goto _match_end_1ab0bc40b;
				}
			}
			else {
				_case_begin_1ab0bc461:;
				{
					_1c0d96467_processExceptionalHandler(_self_.ptr(), &(_199413_f), _199331_fc, _199353_d);
				}
			}
			_match_end_1ab0bc40b:;
		};
	} else if ((!(_1c0c43dc5_Unhandled((*(_199331_fc)).ptr())))) {
		_1c0d82596_pushErr(_self_.ptr(), (*((*(_199331_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_199331_fc))))._field_IsCo) {
		_1c0d96049_checkFnOfConcurrentCall(_self_.ptr(), &((*(_211013_model))._field_Func), (*((*(_199331_fc))))._field_Token);
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d96b1b_evalFnCall(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c43a51_FnCallExpr> _214534_fc) {
	jule::Ptr<_1c0db0519_TypeKind> _214613_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_214613_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_214534_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ab0c2da1:;
			{
				if ((*((*((*(_214534_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1c0ea1a28_builtinCallerError(&(_self_), &(_214534_fc));;
				};
			}
		}
		_match_end_1ab0c2d4b:;
	};
	jule::Ptr<_1c0d80352_Data> _215913_d = _1c0d9e20b_evalExprKind(_self_, (*((*(_214534_fc))._field_Expr))._field_Kind);;
	if ((_215913_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_215913_d))._field_Decl) {
		_1c0d95873_callTypeFn(_self_, &(_214534_fc), &(_215913_d));
		return _215913_d;;
	};
	if ((_1c0db3e57_Fn((*(_215913_d))._field_Kind.ptr()) == nullptr)) {
		_1c0d82596_pushErr(_self_.ptr(), (*(_214534_fc))._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c0d967ca_callFn(_self_, &(_214534_fc), &(_215913_d));
	return _215913_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d97017_evalEnumStatic(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c8704a_Enum> _217837_enm, jule::Ptr<_1c0c25406_Token> _217849_ident) {
	jule::Ptr<_1c0c864cd_EnumItem> _217913_item = _1c0c87b3e_FindItem(_217837_enm.ptr(), (*(_217849_ident))._field_Kind);;
	if ((_217913_item == nullptr)) {
		_1c0d82596_pushErr(_self_, _217849_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_217837_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_217849_ident))._field_Kind, &__jule_any_type4)}));
	};
	return _1c0dac648_evalEnumStatic(&(_217837_enm), &(_217913_item));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d97413_evalTypeEnumStatic(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c88755_TypeEnum> _218641_enm, jule::Ptr<_1c0c25406_Token> _218657_ident) {
	jule::Ptr<_1c0c8817d_TypeEnumItem> _218713_item = _1c0c89316_FindItem(_218641_enm.ptr(), (*(_218657_ident))._field_Kind);;
	if ((_218713_item == nullptr)) {
		_1c0d82596_pushErr(_self_, _218657_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_218641_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_218657_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1c0db341d_Enum((*((*(_218713_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab0cab01:;
			{
				return _1c0d8590c__evalEnum(_self_, _1c0db341d_Enum((*((*(_218713_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1c0db36a4_TypeEnum((*((*(_218713_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab0cab67:;
			{
				return _1c0d86149__evalTypeEnum(_self_, _1c0db36a4_TypeEnum((*((*(_218713_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_1c0db41dd_Struct((*((*(_218713_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab0cabcd:;
			{
				return _1c0d86886__evalStruct(_self_, _1c0db41dd_Struct((*((*(_218713_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1ab0c9072:;
			{
				jule::Ptr<_1c0d80352_Data> _220017_d = jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=(*((*(_218713_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_220017_d))._field_Model=jule::Any((*(_220017_d))._field_Kind, &__jule_any_type83);
				return _220017_d;;
			}
		}
		_match_end_1ab0c9cdc:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9780e_evalStructStatic(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c5e3c9_StructIns> _220939_s, jule::Ptr<_1c0c25406_Token> _220954_ident) {
	jule::Ptr<_1c0d80352_Data> _221013_d = jule::new_ptr<_1c0d80352_Data>();;
	;
	jule::Ptr<_1c0c715a6_Fn> _221413_method = _1c0c60441_FindMethod(_220939_s.ptr(), (*(_220954_ident))._field_Kind, true);;
	if ((_221413_method != nullptr)) {
		if ((!(_1c0d07a9e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_221413_method))._field_Public, (*(_221413_method))._field_Token)))) {
			_1c0d82596_pushErr(_self_, _220954_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_220954_ident))._field_Kind, &__jule_any_type4)}));
			_1c0d82909_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c0c744aa_FnIns> _222117_ins = _1c0c72d16_instance(_221413_method);;
		(*(_222117_ins))._field_Owner=_220939_s;
		_1aad8c30d_pushReference(_self_, &(_222117_ins));
		(*(_221013_d))._field_Model=jule::Any(jule::new_ptr<_1c0c68889_StructStaticIdentExprModel>(_1c0c68889_StructStaticIdentExprModel{._field_Structure=_220939_s, ._field_Expr=(*(_221013_d))._field_Model, ._field_Method=_222117_ins}), &__jule_any_type95);
		(*(_221013_d))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_222117_ins, 1)});
		return _221013_d;;
	};
	jule::Ptr<_1c0d2b94c_Var> _223513_sttc = _1c0c60ac3_FindStatic(_220939_s.ptr(), (*(_220954_ident))._field_Kind);;
	if ((_223513_sttc != nullptr)) {
		return _1c0d88943_evalVar(_self_, _223513_sttc, _220954_ident);;
	};
	_1c0d82596_pushErr(_self_, _220954_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_220939_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(_220954_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d97cb5_evalTraitSubIdent(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data> _224440_d, jule::Ptr<_1c0c84850_Trait> _224454_trt, jule::Ptr<_1c0c25406_Token> _224471_ident) {
	jule::Ptr<_1c0c715a6_Fn> _224513_f = _1c0c854ee_FindMethod(_224454_trt.ptr(), (*(_224471_ident))._field_Kind);;
	if ((_224513_f == nullptr)) {
		_1c0d82596_pushErr(_self_, _224471_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_224454_trt))._field_Ident, &__jule_any_type4),jule::Any((*(_224471_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0c72d16_instance(_224513_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1c0c67a42_TraitSubIdentExprModel>(_1c0c67a42_TraitSubIdentExprModel{._field_Token=_224471_ident, ._field_Expr=(*(_224440_d))._field_Model, ._field_Method=_224513_f, ._field_Trt=_224454_trt}), &__jule_any_type96), });;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d98326_evalStructSubIdentField(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data>* _226447_d, jule::Ptr<_1c0c5e3c9_StructIns>* _226462_s, jule::Ptr<_1c0c25406_Token>* _226482_tok, jule::Ptr<_1c0c5d829_FieldIns>* _2264100_f) {
	jule::Ptr<_1c0c683d3_StructSubIdentExprModel> _226513_model = jule::new_ptr<_1c0c683d3_StructSubIdentExprModel>(_1c0c683d3_StructSubIdentExprModel{._field_Token=(*(_226482_tok)), ._field_Expr=jule::new_ptr<_1c0d80352_Data>((*((*(_226447_d))))), ._field_Field=(*(_2264100_f)), ._field_Owner=(*(_226462_s))});;
	(*((*(_226447_d))))._field_Model=jule::Any(_226513_model, &__jule_any_type97);
	(*((*(_226447_d))))._field_Kind=(*((*(_2264100_f))))._field_Kind;
	(*((*(_226447_d))))._field_Lvalue=true;
	if (((*((*((*(_2264100_f))))._field_Decl))._field_Mutable && (!((*((*(_226447_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1ab0dbbcd:;
				{
					jule::Ptr<_1c0cb9412_scopeChecker> _227917_scope = _1c0cbc503_getRoot((*(_self_))._field_lookup.cast_ptr<_1c0cb9412_scopeChecker>(0));;
					(*((*(_226447_d))))._field_Mutable=(((*(_227917_scope))._field_owner != nullptr) && ((*((*(_227917_scope))._field_owner))._field_Owner == (*(_226462_s))));
				}
			}
			_match_end_1ab0dbb78:;
		};
	};
	return (*(_226447_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d98887_evalStructSubIdent(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data> _228741_d, jule::Ptr<_1c0c5e3c9_StructIns> _228755_s, jule::Ptr<_1c0c42e3a_SubIdentExpr> _228774_si, jule::Bool _228793_ref) {
	jule::Ptr<_1c0c5d829_FieldIns> _228813_f = _1c0c60782_FindField(_228755_s.ptr(), (*((*(_228774_si))._field_Ident))._field_Kind);;
	if ((_228813_f != nullptr)) {
		if ((!(_1c0d07a9e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_228813_f))._field_Decl))._field_Public, (*((*(_228813_f))._field_Decl))._field_Token)))) {
			_1c0d82596_pushErr(_self_, (*(_228774_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_228813_f))._field_Decl))._field_Ident, &__jule_any_type4)}));
			_1c0d82909_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1c0d98326_evalStructSubIdentField(_self_, &(_228741_d), &(_228755_s), &((*(_228774_si))._field_Ident), &(_228813_f));;
	};
	;
	jule::Ptr<_1c0c715a6_Fn> _229813_m = _1c0c60441_FindMethod(_228755_s.ptr(), (*((*(_228774_si))._field_Ident))._field_Kind, false);;
	if ((_229813_m == nullptr)) {
		_1c0d82596_pushErr(_self_, (*(_228774_si))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_228755_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*((*(_228774_si))._field_Ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1c0d07a9e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_229813_m))._field_Public, (*(_229813_m))._field_Token)))) {
		_1c0d82596_pushErr(_self_, (*(_228774_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_229813_m))._field_Ident, &__jule_any_type4)}));
		_1c0d82909_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1c0c70484_IsRef((*(_229813_m))._field_Params[0LL].ptr()) && (!(_228793_ref)))) {
		_1c0d82596_pushErr(_self_, (*(_228774_si))._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1c0d87436_checkDeprecated(_self_, &((*(_229813_m))._field_Directives), (*(_228774_si))._field_Ident);
	jule::Ptr<_1c0c744aa_FnIns> _231413_ins = _1c0c72d16_instance(_229813_m);;
	(*(_231413_ins))._field_Owner=_228755_s;
	_1aad8c30d_pushReference(_self_, &(_231413_ins));
	jule::Ptr<_1c0d80352_Data> _231713_model = jule::new_ptr<_1c0d80352_Data>((*(_228741_d)));;
	(*(_228741_d))._field_Model=jule::Any(jule::new_ptr<_1c0c683d3_StructSubIdentExprModel>(_1c0c683d3_StructSubIdentExprModel{._field_Token=(*(_228774_si))._field_Ident, ._field_Expr=_231713_model, ._field_Method=_231413_ins, ._field_Owner=_228755_s}), &__jule_any_type97);
	(*(_228741_d))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_231413_ins, 1)});
	return _228741_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d98bc8_evalIntTypeStatic(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c25406_Token> _232836_ident) {
	;
	{
		auto &_match_expr{ (*(_232836_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab0ea945:;
			{
				jule::Ptr<_2036445ea_Const> _233217_c = static__203644a3a_NewI64(static_cast<jule::I64>(_20363c934_MaxI(jule::Str::lit("int", 3))));;
				(*(_233217_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9ca24_primInt, ._field_Model=jule::Any(_233217_c, &__jule_any_type19), ._field_Constant=_233217_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab0eb2a3:;
			{
				jule::Ptr<_2036445ea_Const> _234017_c = static__203644a3a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_20363ce2e_Min(jule::Str::lit("int", 3)))));;
				(*(_234017_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9ca24_primInt, ._field_Model=jule::Any(_234017_c, &__jule_any_type19), ._field_Constant=_234017_c});;
			}
		}
		else {
			_case_begin_1ab0ea5d2:;
			{
				_1c0d82596_pushErr(_self_, _232836_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_232836_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab0ea57c:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d99019_evalUintTypeStatic(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c25406_Token> _235337_ident) {
	;
	{
		auto &_match_expr{ (*(_235337_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab0ea7e1:;
			{
				jule::Ptr<_2036445ea_Const> _235717_c = static__203644d04_NewU64(static_cast<jule::U64>(_20363cbed_MaxU(jule::Str::lit("uint", 4))));;
				(*(_235717_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c64a_primUint, ._field_Model=jule::Any(_235717_c, &__jule_any_type19), ._field_Constant=_235717_c});;
			}
		}
		else {
			_case_begin_1ab0edd11:;
			{
				_1c0d82596_pushErr(_self_, _235337_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_235337_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab0edcab:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9935a_evalI8TypeStatic(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c25406_Token> _237035_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_237035_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab102056:;
			{
				jule::Ptr<_2036445ea_Const> _237617_c = static__203644a3a_NewI64(127LL);;
				(*(_237617_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9ccdd_primI8, ._field_Model=jule::Any(_237617_c, &__jule_any_type19), ._field_Constant=_237617_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab1028b4:;
			{
				jule::Ptr<_2036445ea_Const> _238417_c = static__203644a3a_NewI64(-128LL);;
				(*(_238417_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9ccdd_primI8, ._field_Model=jule::Any(_238417_c, &__jule_any_type19), ._field_Constant=_238417_c});;
			}
		}
		else {
			_case_begin_1ab101be3:;
			{
				_1c0d82596_pushErr(_self_, _237035_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_237035_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab101b8d:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9969b_evalI16TypeStatic(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c25406_Token> _239736_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_239736_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab105be7:;
			{
				jule::Ptr<_2036445ea_Const> _240317_c = static__203644a3a_NewI64(32767LL);;
				(*(_240317_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9d0a7_primI16, ._field_Model=jule::Any(_240317_c, &__jule_any_type19), ._field_Constant=_240317_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab106555:;
			{
				jule::Ptr<_2036445ea_Const> _241117_c = static__203644a3a_NewI64(-32768LL);;
				(*(_241117_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9d0a7_primI16, ._field_Model=jule::Any(_241117_c, &__jule_any_type19), ._field_Constant=_241117_c});;
			}
		}
		else {
			_case_begin_1ab105884:;
			{
				_1c0d82596_pushErr(_self_, _239736_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_239736_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab10582e:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d999dc_evalI32TypeStatic(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c25406_Token> _242436_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_242436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab109888:;
			{
				jule::Ptr<_2036445ea_Const> _243017_c = static__203644a3a_NewI64(2147483647LL);;
				(*(_243017_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9d371_primI32, ._field_Model=jule::Any(_243017_c, &__jule_any_type19), ._field_Constant=_243017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab10a1e6:;
			{
				jule::Ptr<_2036445ea_Const> _243817_c = static__203644a3a_NewI64(-2147483648LL);;
				(*(_243817_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9d371_primI32, ._field_Model=jule::Any(_243817_c, &__jule_any_type19), ._field_Constant=_243817_c});;
			}
		}
		else {
			_case_begin_1ab109525:;
			{
				_1c0d82596_pushErr(_self_, _242436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_242436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab1094c0:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d99d2d_evalI64TypeStatic(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c25406_Token> _245136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_245136_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab10d529:;
			{
				jule::Ptr<_2036445ea_Const> _245717_c = static__203644a3a_NewI64(jule::MAX_I64);;
				(*(_245717_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9d63a_primI64, ._field_Model=jule::Any(_245717_c, &__jule_any_type19), ._field_Constant=_245717_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab10dd87:;
			{
				jule::Ptr<_2036445ea_Const> _246517_c = static__203644a3a_NewI64(jule::MIN_I64);;
				(*(_246517_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9d63a_primI64, ._field_Model=jule::Any(_246517_c, &__jule_any_type19), ._field_Constant=_246517_c});;
			}
		}
		else {
			_case_begin_1ab10d1b6:;
			{
				_1c0d82596_pushErr(_self_, _245136_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_245136_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab10d161:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9a16e_evalU8TypeStatic(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c25406_Token> _247835_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_247835_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab111c8b:;
			{
				jule::Ptr<_2036445ea_Const> _248317_c = static__203644d04_NewU64(255LLU);;
				(*(_248317_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9d904_primU8, ._field_Model=jule::Any(_248317_c, &__jule_any_type19), ._field_Constant=_248317_c});;
			}
		}
		else {
			_case_begin_1ab11150a:;
			{
				_1c0d82596_pushErr(_self_, _247835_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_247835_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab1118c3:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9a4b0_evalU16TypeStatic(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c25406_Token> _249636_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_249636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab114684:;
			{
				jule::Ptr<_2036445ea_Const> _250117_c = static__203644d04_NewU64(65535LLU);;
				(*(_250117_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9dbbd_primU16, ._field_Model=jule::Any(_250117_c, &__jule_any_type19), ._field_Constant=_250117_c});;
			}
		}
		else {
			_case_begin_1ab113dae:;
			{
				_1c0d82596_pushErr(_self_, _249636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_249636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab1142bb:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9a801_evalU32TypeStatic(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c25406_Token> _251436_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_251436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab11707c:;
			{
				jule::Ptr<_2036445ea_Const> _251917_c = static__203644d04_NewU64(4294967295LLU);;
				(*(_251917_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9de87_primU32, ._field_Model=jule::Any(_251917_c, &__jule_any_type19), ._field_Constant=_251917_c});;
			}
		}
		else {
			_case_begin_1ab1167a7:;
			{
				_1c0d82596_pushErr(_self_, _251436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_251436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab116bb4:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9ab42_evalU64TypeStatic(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c25406_Token> _253236_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab119975:;
			{
				jule::Ptr<_2036445ea_Const> _253717_c = static__203644d04_NewU64(jule::MAX_U64);;
				(*(_253717_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9e40a_primU64, ._field_Model=jule::Any(_253717_c, &__jule_any_type19), ._field_Constant=_253717_c});;
			}
		}
		else {
			_case_begin_1ab1191a0:;
			{
				_1c0d82596_pushErr(_self_, _253236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_253236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab1195ac:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9ae83_evalF32TypeStatic(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c25406_Token> _255036_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_255036_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab11caee:;
			{
				jule::Ptr<_2036445ea_Const> _255717_c = static__203645651_NewF64(340282346638528860000000000000000000000.0);;
				(*(_255717_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9e6c4_primF32, ._field_Model=jule::Any(_255717_c, &__jule_any_type19), ._field_Constant=_255717_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab11d45c:;
			{
				jule::Ptr<_2036445ea_Const> _256517_c = static__203645651_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_256517_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9e6c4_primF32, ._field_Model=jule::Any(_256517_c, &__jule_any_type19), ._field_Constant=_256517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1ab11d4c3:;
			{
				jule::Ptr<_2036445ea_Const> _257317_c = static__203645651_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_257317_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9e6c4_primF32, ._field_Model=jule::Any(_257317_c, &__jule_any_type19), ._field_Constant=_257317_c});;
			}
		}
		else {
			_case_begin_1ab11c78b:;
			{
				_1c0d82596_pushErr(_self_, _255036_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_255036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab11c736:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9b2c4_evalF64TypeStatic(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c25406_Token> _258636_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_258636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ab1229c2:;
			{
				jule::Ptr<_2036445ea_Const> _259317_c = static__203645651_NewF64(jule::MAX_F64);;
				(*(_259317_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9e98d_primF64, ._field_Model=jule::Any(_259317_c, &__jule_any_type19), ._field_Constant=_259317_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ab123330:;
			{
				jule::Ptr<_2036445ea_Const> _260117_c = static__203645651_NewF64(jule::MIN_F64);;
				(*(_260117_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9e98d_primF64, ._field_Model=jule::Any(_260117_c, &__jule_any_type19), ._field_Constant=_260117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1ab123396:;
			{
				jule::Ptr<_2036445ea_Const> _260917_c = static__203645651_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_260917_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9e98d_primF64, ._field_Model=jule::Any(_260917_c, &__jule_any_type19), ._field_Constant=_260917_c});;
			}
		}
		else {
			_case_begin_1ab12265e:;
			{
				_1c0d82596_pushErr(_self_, _258636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_258636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab122609:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9b6c0_evalPrimStatic(_1c0d82046_Eval* _self_, jule::Str _262233_kind, jule::Ptr<_1c0c25406_Token> _262244_ident) {
	{
		auto &_match_expr{ _262233_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ab12694e:;
			{
				return _1c0d98bc8_evalIntTypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1ab126344:;
			{
				return _1c0d99019_evalUintTypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ab1264ed:;
			{
				return _1c0d9935a_evalI8TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ab126564:;
			{
				return _1c0d9969b_evalI16TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ab1265ca:;
			{
				return _1c0d999dc_evalI32TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ab126641:;
			{
				return _1c0d99d2d_evalI64TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ab127235:;
			{
				return _1c0d9a16e_evalU8TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ab12729b:;
			{
				return _1c0d9a4b0_evalU16TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ab127312:;
			{
				return _1c0d9a801_evalU32TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ab127378:;
			{
				return _1c0d9ab42_evalU64TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab1273de:;
			{
				return _1c0d9ae83_evalF32TypeStatic(_self_, _262244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab127455:;
			{
				return _1c0d9b2c4_evalF64TypeStatic(_self_, _262244_ident);;
			}
		}
		else {
			_case_begin_1ab12285c:;
			{
				_1c0d82596_pushErr(_self_, _262244_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_262233_kind, &__jule_any_type4),jule::Any((*(_262244_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab122807:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9babb_evalTypeStatic(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data> _265437_d, jule::Ptr<_1c0c42e3a_SubIdentExpr> _265451_si) {
	{
		
		if ((_1c0db2b6a_Prim((*(_265437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab12b954:;
			{
				return _1c0d9b6c0_evalPrimStatic(_self_, _1c0db8434_Str(_1c0db2b6a_Prim((*(_265437_d))._field_Kind.ptr()).ptr()), (*(_265451_si))._field_Ident);;
			}
		}
		else if ((_1c0db341d_Enum((*(_265437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab12c67a:;
			{
				return _1c0d97017_evalEnumStatic(_self_, _1c0db341d_Enum((*(_265437_d))._field_Kind.ptr()), (*(_265451_si))._field_Ident);;
			}
		}
		else if ((_1c0db36a4_TypeEnum((*(_265437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab12c6e1:;
			{
				return _1c0d97413_evalTypeEnumStatic(_self_, _1c0db36a4_TypeEnum((*(_265437_d))._field_Kind.ptr()), (*(_265451_si))._field_Ident);;
			}
		}
		else if ((_1c0db41dd_Struct((*(_265437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab12c757:;
			{
				return _1c0d9780e_evalStructStatic(_self_, _1c0db41dd_Struct((*(_265437_d))._field_Kind.ptr()), (*(_265451_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1ab12b59c:;
			{
				_1c0d82596_pushErr(_self_, (*(_265451_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_265437_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab12b503:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1ab13450b_comptimeObjSubIdent(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c9a5be_comptimeTypeInfo>* _267057_ct, jule::Ptr<_1c0d80352_Data>* _267077_d, jule::Ptr<_1c0c42e3a_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1c0d80352_Data> _267113_cd = _1c0ca17c3_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267113_cd == nullptr)) {
		_1c0d82596_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267113_cd;;
}

inline jule::Ptr<_1c0d80352_Data> _1ab1387b8_comptimeObjSubIdent(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c8b659_comptimeStructField>* _267057_ct, jule::Ptr<_1c0d80352_Data>* _267077_d, jule::Ptr<_1c0c42e3a_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1c0d80352_Data> _267113_cd = _1c0c8ce74_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267113_cd == nullptr)) {
		_1c0d82596_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267113_cd;;
}

inline jule::Ptr<_1c0d80352_Data> _1ab14288d_comptimeObjSubIdent(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c92bc1_comptimeEnumField>* _267057_ct, jule::Ptr<_1c0d80352_Data>* _267077_d, jule::Ptr<_1c0c42e3a_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1c0d80352_Data> _267113_cd = _1c0c93bc2_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267113_cd == nullptr)) {
		_1c0d82596_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267113_cd;;
}

inline jule::Ptr<_1c0d80352_Data> _1ab146b4a_comptimeObjSubIdent(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c95663_comptimeParam>* _267057_ct, jule::Ptr<_1c0d80352_Data>* _267077_d, jule::Ptr<_1c0c42e3a_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1c0d80352_Data> _267113_cd = _1c0c9738a_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267113_cd == nullptr)) {
		_1c0d82596_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267113_cd;;
}

inline jule::Ptr<_1c0d80352_Data> _1ab14b138_comptimeObjSubIdent(_1c0d82046_Eval* _self_, jule::Ptr<_1c0c8e915_comptimeStatic>* _267057_ct, jule::Ptr<_1c0d80352_Data>* _267077_d, jule::Ptr<_1c0c42e3a_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1c0d80352_Data> _267113_cd = _1c0c91230_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267113_cd == nullptr)) {
		_1c0d82596_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267113_cd;;
}

inline jule::Ptr<_1c0d80352_Data> _1ab1503a1_comptimeObjSubIdent(_1c0d82046_Eval* _self_, jule::Ptr<_1c0ca1ad1_comptimeValue>* _267057_ct, jule::Ptr<_1c0d80352_Data>* _267077_d, jule::Ptr<_1c0c42e3a_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1c0d80352_Data> _267113_cd = _1c0ca4122_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267113_cd == nullptr)) {
		_1c0d82596_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267113_cd;;
}

inline jule::Ptr<_1c0d80352_Data> _1ab154619_comptimeObjSubIdent(_1c0d82046_Eval* _self_, jule::Ptr<_1c0ca5a2a_comptimeFile>* _267057_ct, jule::Ptr<_1c0d80352_Data>* _267077_d, jule::Ptr<_1c0c42e3a_SubIdentExpr>* _267088_si) {
	jule::Ptr<_1c0d80352_Data> _267113_cd = _1c0ca7345_subIdent((*(_267057_ct)), &((*((*((*(_267088_si))))._field_Ident))._field_Kind));;
	if ((_267113_cd == nullptr)) {
		_1c0d82596_pushErr(_self_, (*((*(_267088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_267077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267088_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267113_cd;;
}



inline __jule_tuple_x_1c0d80352_Data__jule_tuple_bool _1c0d9c46d_tryComptimeObjSubIdent(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data>* _267846_d, jule::Ptr<_1c0c42e3a_SubIdentExpr> _267860_si) {
	__jule_tuple_x_1c0d80352_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1c0db6531_comptimeTypeInfo((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab1329d2:;
			{
				jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _268117_ct = _1c0db6531_comptimeTypeInfo((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ab13450b_comptimeObjSubIdent(_self_, &(_268117_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c0db5244_comptimeStructField((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab13262a:;
			{
				jule::Ptr<_1c0c8b659_comptimeStructField> _268417_ct = _1c0db5244_comptimeStructField((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ab1387b8_comptimeObjSubIdent(_self_, &(_268417_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c0db5761_comptimeEnumField((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab132691:;
			{
				jule::Ptr<_1c0c92bc1_comptimeEnumField> _268717_ct = _1c0db5761_comptimeEnumField((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ab14288d_comptimeObjSubIdent(_self_, &(_268717_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c0db5c7d_comptimeParam((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab132707:;
			{
				jule::Ptr<_1c0c95663_comptimeParam> _269017_ct = _1c0db5c7d_comptimeParam((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ab146b4a_comptimeObjSubIdent(_self_, &(_269017_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c0db6a4d_comptimeStatic((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab13276d:;
			{
				jule::Ptr<_1c0c8e915_comptimeStatic> _269317_ct = _1c0db6a4d_comptimeStatic((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ab14b138_comptimeObjSubIdent(_self_, &(_269317_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c0db6cd4_comptimeValue((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab132d56:;
			{
				jule::Ptr<_1c0ca1ad1_comptimeValue> _269617_ct = _1c0db6cd4_comptimeValue((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ab1503a1_comptimeObjSubIdent(_self_, &(_269617_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c0db706a_comptimeFile((*((*(_267846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab132dbc:;
			{
				jule::Ptr<_1c0ca5a2a_comptimeFile> _269917_ct = _1c0db706a_comptimeFile((*((*(_267846_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _1ab154619_comptimeObjSubIdent(_self_, &(_269917_ct), _267846_d, &(_267860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab1325b4:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ab13251a:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9c869_evalObjSubIdent(_1c0d82046_Eval* _self_, jule::Ptr<_1c0d80352_Data> _270638_d, jule::Ptr<_1c0c42e3a_SubIdentExpr> _270652_si) {
	if (_1c0c27d65_IsIgnoreIdent((*((*(_270652_si))._field_Ident))._field_Kind)) {
		_1c0d82596_pushErr(_self_, (*(_270652_si))._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1c0d80352_Data> _271317_compData;;
		jule::Bool _271327_ok = false;;
		({
			__jule_tuple_x_1c0d80352_Data__jule_tuple_bool __jule_assign_result = _1c0d9c46d_tryComptimeObjSubIdent(_self_, &(_270638_d), _270652_si);
			_271317_compData = __jule_assign_result.__jule_result_arg0;
			_271327_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_271327_ok) {
			return _271317_compData;;
		};
	};
	jule::Ptr<_1c0db0519_TypeKind> _271913_kind = (*(_270638_d))._field_Kind;;
	{
		
		if ((_1c0db3187_Ptr((*(_270638_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab15960d:;
			{
				jule::Ptr<_1c0dc03d6_Ptr> _272213_ptr = _1c0db3187_Ptr((*(_270638_d))._field_Kind.ptr());;
				if (_1c0dc0e20_IsUnsafe(_272213_ptr.ptr())) {
					goto _match_end_1ab159586;
				};
				if ((!(_1c0d8308b_isUnsafe(_self_)))) {
					_1c0d82596_pushErr(_self_, (*(_270652_si))._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_271913_kind=(*(_1c0db3187_Ptr((*(_270638_d))._field_Kind.ptr())))._field_Elem;
				_1c0dacbed_makeImplicitDeref(&(_270638_d), (*(_270652_si))._field_Ident);
			}
		}
		else if ((_1c0db2e01_Sptr((*(_270638_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab159685:;
			{
				_271913_kind=(*(_1c0db2e01_Sptr((*(_270638_d))._field_Kind.ptr())))._field_Elem;
				_1c0dacbed_makeImplicitDeref(&(_270638_d), (*(_270652_si))._field_Ident);
			}
		}
		_match_end_1ab159586:;
	};
	{
		
		if ((_1c0db4474_Trait((*(_270638_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab15c7dc:;
			{
				return _1c0d97cb5_evalTraitSubIdent(_self_, _270638_d, _1c0db4474_Trait((*(_270638_d))._field_Kind.ptr()), (*(_270652_si))._field_Ident);;
			}
		}
		else if ((_1c0db41dd_Struct(_271913_kind.ptr()) != nullptr)) {
			_case_begin_1ab15c864:;
			{
				jule::Ptr<_1c0c5e3c9_StructIns> _274013_s = _1c0db41dd_Struct(_271913_kind.ptr());;
				if (_1c0daa1e5_isInstancedStruct(_274013_s)) {
					jule::Bool _274221_usedReferenceElem = (_1c0db2e01_Sptr((*(_270638_d))._field_Kind.ptr()) != nullptr);;
					return _1c0d98887_evalStructSubIdent(_self_, _270638_d, _1c0db41dd_Struct(_271913_kind.ptr()), _270652_si, _274221_usedReferenceElem);;
				};
			}
		}
		_match_end_1ab15c787:;
	};
	_1c0d82596_pushErr(_self_, (*(_270652_si))._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_270638_d))._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9cbaa_evalSubIdent(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c42e3a_SubIdentExpr> _275036_si) {
	jule::Ptr<_1c0db0519_TypeKind> _275113_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_275113_prefix;
	});;
	jule::Ptr<_1c0d80352_Data> _275413_d = _1c0d9e20b_evalExprKind(_self_, (*((*(_275036_si))._field_Expr))._field_Kind);;
	if ((_275413_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_275413_d))._field_Decl) {
		return _1c0d9babb_evalTypeStatic(_self_.ptr(), _275413_d, _275036_si);;
	};
	return _1c0d9c869_evalObjSubIdent(_self_.ptr(), _275413_d, _275036_si);;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9ceeb_evalTuple(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c409e8_TupleExpr> _276433_tup) {
	jule::Ptr<_1c0dbd1d6_Tuple> _276513_tupT = jule::new_ptr<_1c0dbd1d6_Tuple>();;
	(*(_276513_tupT))._field_Types=jule::Slice<jule::Ptr<_1c0db0519_TypeKind>>::alloc(0LL, (*(_276433_tup))._field_Expr.len());
	jule::Ptr<_1c0c69060_TupleExprModel> _276813_model = jule::new_ptr<_1c0c69060_TupleExprModel>(_1c0c69060_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1c0d80352_Data>>::alloc(0LL, (*(_276433_tup))._field_Expr.len())});;
	jule::Bool _277213_ok = true;;
	{
		auto expr = &((*(_276433_tup))._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab16683a:;
		if (it != expr_end) {
			jule::Ptr<_1c0c3ed27_Expr> _277321_expr = *it;
			{
				jule::Ptr<_1c0d80352_Data> _277417_d = _1c0da0020_evalExpr(_self_, _277321_expr);;
				if ((_277417_d == nullptr)) {
					_277213_ok=false;
					goto _iter_next_1ab16683a;
				};
				{ jule::Slice<jule::Ptr<_1c0db0519_TypeKind>> &__jule_push_dest = (*(_276513_tupT))._field_Types; __jule_push_dest.push((*(_277417_d))._field_Kind); };
				{ jule::Slice<jule::Ptr<_1c0d80352_Data>> &__jule_push_dest = (*(_276813_model))._field_Datas; __jule_push_dest.push(_277417_d); };
			}
			_iter_next_1ab16683a:;
			++it;
			goto _iter_begin_1ab16683a;
		}
		_iter_end_1ab16683a:;
	};
	if ((!(_277213_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_276513_tupT, 23)}), ._field_Model=jule::Any(_276813_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9d3e7_evalMap(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0dbdc86_Map> _279331_m, jule::Ptr<_1c0c45327_BraceLit> _279344_lit) {
	jule::Ptr<_1c0c66e2b_MapExprModel> _279413_model = jule::new_ptr<_1c0c66e2b_MapExprModel>(_1c0c66e2b_MapExprModel{._field_KeyKind=(*(_279331_m))._field_Key, ._field_ValKind=(*(_279331_m))._field_Val, });;
	{
		auto expr = &((*(_279344_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab16a2cd:;
		if (it != expr_end) {
			jule::Ptr<_1c0c3ed27_Expr> _279921_expr = *it;
			{
				{
					auto &_match_expr{ (*(_279921_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1ab16b367:;
						{
							goto _match_end_1ab16ae6b;
						}
					}
					else {
						_case_begin_1ab16aec1:;
						{
							_1c0d82596_pushErr(_self_.ptr(), (*(_279344_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1ab16ae6b:;
				};
				jule::Ptr<_1c0c45b52_KeyValPair> _280917_pair = (*(_279921_expr))._field_Kind.cast_ptr<_1c0c45b52_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1c0d80352_Data> _281117_key = _1c0da0020_evalExpr(_self_, (*(_280917_pair))._field_Key);;
				if ((_281117_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1c0d80352_Data> _281617_val = _1c0da0020_evalExpr(_self_, (*(_280917_pair))._field_Val);;
				if ((_281617_val == nullptr)) {
					return nullptr;;
				};
				_1c0d0ed4d_checkAssignType((*(_self_))._field_s, false, &((*(_279331_m))._field_Key), &(_281117_key), (*(_280917_pair))._field_Colon);
				_1c0d0ed4d_checkAssignType((*(_self_))._field_s, false, &((*(_279331_m))._field_Val), &(_281617_val), (*(_280917_pair))._field_Colon);
				{ jule::Slice<jule::Ptr<_1c0c66975_KeyValPairExprModel>> &__jule_push_dest = (*(_279413_model))._field_Entries; __jule_push_dest.push(jule::new_ptr<_1c0c66975_KeyValPairExprModel>(_1c0c66975_KeyValPairExprModel{._field_Key=(*(_281117_key))._field_Model, ._field_Val=(*(_281617_val))._field_Model})); };
			}
			_iter_next_1ab16a2cd:;
			++it;
			goto _iter_begin_1ab16a2cd;
		}
		_iter_end_1ab16a2cd:;
	};
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_279331_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_279413_model, &__jule_any_type98), });;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9d738_evalBraceLit(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c45327_BraceLit> _283736_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1ab172280:;
			{
				_1c0d82596_pushErr(_self_.ptr(), (*(_283736_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c0db470a_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ab172307:;
			{
				return _1c0d9d3e7_evalMap(_self_, _1c0db470a_Map((*(_self_))._field_prefix.ptr()), _283736_lit);;
			}
		}
		else if ((_1c0db41dd_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ab171900:;
			{
				return _1c0d94ae7_evalStructLitExplicit(_self_, _1c0db41dd_Struct((*(_self_))._field_prefix.ptr()), (*(_283736_lit))._field_Exprs, (*(_283736_lit))._field_Token);;
			}
		}
		else {
			_case_begin_1ab171548:;
			{
				_1c0d82596_pushErr(_self_.ptr(), (*(_283736_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab16a960:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9da79_evalAnonFunc(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c4c6a3_FnDecl> _285236_decl) {
	_1c0dc23c7_typeChecker _285313_tc = _1c0dc23c7_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*(_self_))._field_lookup, ._field_lookup=(*(_self_))._field_lookup, };;
	jule::Ptr<_1c0c744aa_FnIns> _285813_ins = _1c0dc909e_buildFunc(&_285313_tc, _285236_decl);;
	if ((_285813_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ab177241:;
			{
				jule::Ptr<_1c0cb9412_scopeChecker> _286417_sc = (*(_self_))._field_lookup.cast_ptr<_1c0cb9412_scopeChecker>(0);;
				jule::Ptr<_1c0cb9412_scopeChecker> _286517_scc = _1c0ccb15a_newChildChecker(_286417_sc);;
				(*(_286517_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c0cb7e6b_scopeLabel>>>(nullptr);
				(*(_286517_scc))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c0cb84ee_scopeGoto>>>(nullptr);
				(*(_286517_scc))._field_owner=nullptr;
				(*(_286517_scc))._field_childIndex=0LL;
				(*(_286517_scc))._field_it=0LLU;
				(*(_286517_scc))._field_cse=0LLU;
				(*(_286517_scc))._field_owner=_285813_ins;
				_1c0d26293_checkFnInsSc((*(_self_))._field_s.ptr(), &(_285813_ins), &(_286517_scc));
			}
		}
		else {
			_case_begin_1ab176dbc:;
			{
				_1c0d268ae_checkFnIns((*(_self_))._field_s, &(_285813_ins));
			}
		}
		_match_end_1ab176cbd:;
	};
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_285813_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1c0c6659b_AnonFnExprModel>(_1c0c6659b_AnonFnExprModel{._field_Func=_285813_ins, ._field_Global=_1c0d83322_isGlobal(_self_.ptr())}), &__jule_any_type99), });;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9ddba_evalBinop(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c433e1_BinopExpr> _288733_op) {
	_1c0da2473_binaryEval _288813_bs = static__1c0da2a5b_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1c0db80e3_Prim> _289113_prim = _1c0db2b6a_Prim((*(_self_))._field_prefix.ptr());;
		if (((_289113_prim == nullptr) || (!(_203644122_IsNum(_1c0db8434_Str(_289113_prim.ptr())))))) {
			jule::Ptr<_1c0db0519_TypeKind> _289321_prefix = (*(_self_))._field_prefix;;
			(*(_self_))._field_prefix=nullptr;
			__JULE_DEFER({
				(*(_self_))._field_prefix=_289321_prefix;
			});;
			return _1c0da8501_eval(&_288813_bs, &(_288733_op));;
		};
	};
	return _1c0da8501_eval(&_288813_bs, &(_288733_op));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9e20b_evalExprKind(jule::Ptr<_1c0d82046_Eval> _self_, jule::Any _290236_kind) {
	{
		auto &_match_expr{ _290236_kind };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ab17ec1b:;
			{
				jule::Ptr<_1c0c40124_RangeExpr> _290517_e = _290236_kind.cast_ptr<_1c0c40124_RangeExpr>(&__jule_any_type100);;
				return _1c0d9e20b_evalExprKind(_self_, (*((*(_290517_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ab17e8a8:;
			{
				return _1c0d84ac6_evalLit(_self_.ptr(), _290236_kind.cast_ptr<_1c0c40dc2_LitExpr>(&__jule_any_type101));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ab17ee4c:;
			{
				return _1c0d8957b_evalIdent(_self_.ptr(), _290236_kind.cast_ptr<_1c0c41752_IdentExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ab17eec4:;
			{
				return _1c0d898bc_evalUnary(_self_, _290236_kind.cast_ptr<_1c0c41dd4_UnaryExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ab18004b:;
			{
				return _1c0d89c0d_evalVariadic(_self_, _290236_kind.cast_ptr<_1c0c422ad_VariadicExpr>(&__jule_any_type75));;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ab1800c3:;
			{
				return _1c0d8a04e_evalUnsafe(_self_, _290236_kind.cast_ptr<_1c0c4129b_UnsafeExpr>(&__jule_any_type102));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ab1801a0:;
			{
				return _1c0d8ab87_evalSliceExpr(_self_, _290236_kind.cast_ptr<_1c0c4634a_SliceExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ab180227:;
			{
				return _1c0d8e32d_evalIndexing(_self_, _290236_kind.cast_ptr<_1c0c46cda_IndexingExpr>(&__jule_any_type103));;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ab18029e:;
			{
				return _1c0d9065e_evalSlicing(_self_, _290236_kind.cast_ptr<_1c0c4744a_SlicingExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1ab180326:;
			{
				return _1c0d94300_evalCast(_self_, _290236_kind.cast_ptr<_1c0c42687_CastExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ab18039d:;
			{
				return _1c0d94641_evalNsSelection(_self_.ptr(), _290236_kind.cast_ptr<_1c0c42a61_NsSelectionExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1ab180425:;
			{
				return _1c0d94e38_evalStructLit(_self_, _290236_kind.cast_ptr<_1c0c44d71_StructLit>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ab18049c:;
			{
				return _1c0d95510_evalType(_self_.ptr(), _290236_kind.cast_ptr<_1c0c3a9e3_TypeDecl>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ab180524:;
			{
				return _1c0d96b1b_evalFnCall(_self_, _290236_kind.cast_ptr<_1c0c43a51_FnCallExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ab18059b:;
			{
				return _1c0d9cbaa_evalSubIdent(_self_, _290236_kind.cast_ptr<_1c0c42e3a_SubIdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ab180623:;
			{
				return _1c0d9ceeb_evalTuple(_self_, _290236_kind.cast_ptr<_1c0c409e8_TupleExpr>(&__jule_any_type80));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1ab18069a:;
			{
				return _1c0d9d738_evalBraceLit(_self_, _290236_kind.cast_ptr<_1c0c45327_BraceLit>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ab180722:;
			{
				return _1c0d9da79_evalAnonFunc(_self_, _290236_kind.cast_ptr<_1c0c4c6a3_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1ab180799:;
			{
				return _1c0d9ddba_evalBinop(_self_, _290236_kind.cast_ptr<_1c0c433e1_BinopExpr>(&__jule_any_type109));;
			}
		}
		else {
			_case_begin_1ab17ea40:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab17e9da:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9e54c_eval1(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c3ed27_Expr> _295029_expr) {
	jule::Ptr<_1c0d80352_Data> _295113_d = _1c0d9e20b_evalExprKind(_self_, (*(_295029_expr))._field_Kind);;
	if (((_295113_d == nullptr) || ((*(_295113_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1c0db3e57_Fn((*(_295113_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab18b475:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _295817_f = _1c0db3e57_Fn((*(_295113_d))._field_Kind.ptr());;
				if (_1c0c75940_IsBuiltin(_295817_f.ptr())) {
					_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_295029_expr))._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1ab18aa90;
				};
				if (((*(_295817_f))._field_Generics.len() != (*((*(_295817_f))._field_Decl))._field_Generics.len())) {
					_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_295029_expr))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!((*((*(_295817_f))._field_Decl))._field_Statically)) && _1c0c71cb0_IsMethod((*(_295817_f))._field_Decl.ptr()))) {
					_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_295029_expr))._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1ab18aa90:;
	};
	return _295113_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9e88d_eval(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c3ed27_Expr> _297728_expr) {
	jule::Ptr<_1c0d80352_Data> _297813_d = _1c0d9e54c_eval1(_self_, _297728_expr);;
	if ((_297813_d == nullptr)) {
		return nullptr;;
	};
	if (((((*(_self_))._field_owner == nullptr) || (!((*((*(_self_))._field_owner))._field_Constant))) && _1c0db4c27_comptime((*(_297813_d))._field_Kind.ptr()))) {
		_1c0d07340_pushErr((*(_self_))._field_s.ptr(), (*(_297728_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _297813_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0d9ebce_evalExpr1(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c3ed27_Expr> _299233_expr) {
	jule::Ptr<_1c0d80352_Data> _299313_d = _1c0d9e54c_eval1(_self_, _299233_expr);;
	{
		
		if ((_299313_d == nullptr)) {
			_case_begin_1ab193e94:;
			{
				return nullptr;;
			}
		}
		else if ((*(_299313_d))._field_Decl) {
			_case_begin_1ab19401b:;
			{
				_1c0d82596_pushErr(_self_.ptr(), (*(_299233_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ab193dc8:;
			{
				return _299313_d;;
			}
		}
		_match_end_1ab193d62:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0da0020_evalExpr(jule::Ptr<_1c0d82046_Eval> _self_, jule::Ptr<_1c0c3ed27_Expr> _300832_expr) {
	jule::Ptr<_1c0d80352_Data> _300913_d = _1c0d9e88d_eval(_self_, _300832_expr);;
	{
		
		if ((_300913_d == nullptr)) {
			_case_begin_1ab195c43:;
			{
				return nullptr;;
			}
		}
		else if ((*(_300913_d))._field_Decl) {
			_case_begin_1ab195cba:;
			{
				_1c0d82596_pushErr(_self_.ptr(), (*(_300832_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ab195b77:;
			{
				return _300913_d;;
			}
		}
		_match_end_1ab195b11:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0d82046_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1c0da04d7_unaryEval static__1c0da0927_new(jule::Ptr<_1c0d82046_Eval> _302923_e) {
	return _1c0da04d7_unaryEval{._field_e=_302923_e, };;
}



inline void _1c0da0b25_minus(_1c0da04d7_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ab197904:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c0db2b6a_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab1975c4:;
			{
				if ((!(_203644122_IsNum(_1c0db08d2_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c0db41dd_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab19763a:;
			{
				if (((*(_1c0db41dd_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ab19755d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab196617:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1c0d80c26_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_203649105_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ab19c0ce:;
				{
					_203648137_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((-(_203646a09_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_2036485bb_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ab19c2cc:;
				{
					_203647565_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_203645ec0_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_203648852_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ab19c343:;
				{
					_203647565_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_203646c90_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1ab19bc38:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3067:17"));;
				}
			}
			_match_end_1ab19bb7d:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1c0c63c3b_UnaryExprModel>(_1c0c63c3b_UnaryExprModel{._field_Expr=jule::new_ptr<_1c0d80352_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1c0da0d23_plus(_1c0da04d7_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ab1a28dc:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c0db2b6a_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab1a25ac:;
			{
				if ((!(_203644122_IsNum(_1c0db08d2_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c0db41dd_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab1a2623:;
			{
				if (((*(_1c0db41dd_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ab1a2546:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab1a247a:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1c0d80c26_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_203649105_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ab1a70b7:;
				{
					_203648137_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((+(_203646a09_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_2036485bb_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ab1a72b5:;
				{
					_203647565_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_203645ec0_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_203648852_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ab1a732b:;
				{
					_203647565_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_203646c90_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1ab1a6c21:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3112:17"));;
				}
			}
			_match_end_1ab1a6b66:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1c0c63c3b_UnaryExprModel>(_1c0c63c3b_UnaryExprModel{._field_Expr=jule::new_ptr<_1c0d80352_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1c0da1021_caret(_1c0da04d7_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1ab1ac8a3:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c0db2b6a_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab1ac573:;
			{
				if ((!(_203643a17_IsInt(_1c0db08d2_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c0db41dd_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab1ac5d9:;
			{
				if (((*(_1c0db41dd_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ab1ac50c:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab1ac441:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1c0d80c26_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_2036485bb_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ab1b207d:;
				{
					_203647565_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((~(_203645ec0_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_203648852_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ab1b227b:;
				{
					_20364781d_SetU64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::U64>((~(_203646256_ReadU64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1ab1b1bd7:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3155:17"));;
				}
			}
			_match_end_1ab1b1b2c:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1c0c63c3b_UnaryExprModel>(_1c0c63c3b_UnaryExprModel{._field_Expr=jule::new_ptr<_1c0d80352_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1c0da121e_excl(_1c0da04d7_unaryEval* _self_) {
	jule::Ptr<_1c0db80e3_Prim> _31699_t = _1c0db2b6a_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_31699_t == nullptr) || (!(_1c0dbb2e4_IsBool(_31699_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_1c0d80c26_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_203648ad8_IsBool((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_1ab1b8293:;
				{
					_203647ac6_SetBool((*((*(_self_))._field_d))._field_Constant.ptr(), (!(_2036464dc_ReadBool((*((*(_self_))._field_d))._field_Constant.ptr()))));
				}
			}
			else {
				_case_begin_1ab1b7dec:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3183:17"));;
				}
			}
			_match_end_1ab1b7d31:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1c0c63c3b_UnaryExprModel>(_1c0c63c3b_UnaryExprModel{._field_Expr=jule::new_ptr<_1c0d80352_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1c0da141c_star(_1c0da04d7_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1c0c63c3b_UnaryExprModel>(_1c0c63c3b_UnaryExprModel{._field_Expr=jule::new_ptr<_1c0d80352_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1c0db3187_Ptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab1bbad2:;
			{
				if ((!(_1c0d8308b_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c0dc03d6_Ptr> _320817_t = _1c0db3187_Ptr((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_1c0dc0e20_IsUnsafe(_320817_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*((*(_self_))._field_d))._field_Kind=(*(_320817_t))._field_Elem;
				(*((*(_self_))._field_d))._field_Mutable=true;
			}
		}
		else if ((_1c0db2e01_Sptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab1bb7b3:;
			{
				(*((*(_self_))._field_d))._field_Kind=(*(_1c0db2e01_Sptr((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Elem;
			}
		}
		else {
			_case_begin_1ab1bb74c:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab1ba7d4:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_Lvalue=true;
}



inline void _1c0da161a_amper(_1c0da04d7_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ab1c4b40:;
			{
				jule::Ptr<_1c0c64610_StructLitExprModel> _322917_lit = (*((*(_self_))._field_d))._field_Model.cast_ptr<_1c0c64610_StructLitExprModel>(&__jule_any_type94);;
				_1c0da9359_makeStructLitAlloc(&((*(_self_))._field_d), &(_322917_lit));
			}
		}
		else {
			_case_begin_1ab1c2148:;
			{
				{
					
					if (_1c0dcb403_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1ab1c1be7:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0dc03d6_Ptr>(_1c0dc03d6_Ptr{._field_Elem=(*((*(_self_))._field_d))._field_Kind}), 26)});
							(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1c0c63c3b_UnaryExprModel>(_1c0c63c3b_UnaryExprModel{._field_Expr=jule::new_ptr<_1c0d80352_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1ab1c2676:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1ab1c25aa:;
				};
			}
		}
		_match_end_1ab1c20e3:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
}



inline void _1c0da1818_typeDecl(_1c0da04d7_unaryEval* _self_) {
	_1c0dc23c7_typeChecker _325313_tc = _1c0dc23c7_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*((*(_self_))._field_e))._field_lookup, ._field_lookup=(*((*(_self_))._field_e))._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ab1c61d5:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dc77b7_buildPtrFromType(&_325313_tc, &((*((*(_self_))._field_d))._field_Kind)), 26)});
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab1c977c:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0dc7135_buildSptrFromType(&_325313_tc, &((*((*(_self_))._field_d))._field_Kind)), 21)});
			}
		}
		else {
			_case_begin_1ab1c7aaa:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab1c7a55:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1c0da1a16_evalData(_1c0da04d7_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab1cc41c:;
			{
				jule::Ptr<_1c0db0519_TypeKind> _327617_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*((*(_self_))._field_e))._field_prefix=nullptr;
				(*(_self_))._field_d=_1c0d9e88d_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*((*(_self_))._field_e))._field_prefix=_327617_prefix;
			}
		}
		else {
			_case_begin_1ab1cc032:;
			{
				(*(_self_))._field_d=_1c0d9e88d_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1ab1cbeaa:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0da1d57_eval(_1c0da04d7_unaryEval* _self_, jule::Ptr<_1c0c41dd4_UnaryExpr> _328527_u) {
	(*(_self_))._field_u=_328527_u;
	_1c0da1a16_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1c0da1818_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1c0db0519_TypeKind> _32969_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ab1d1a1a:;
			{
				_1c0da0b25_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ab1d171d:;
			{
				_1c0da0d23_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ab1d1784:;
			{
				_1c0da1021_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1ab1d17ea:;
			{
				_1c0da121e_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ab1d1861:;
			{
				_1c0da141c_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab1d1d6c:;
			{
				_1c0da161a_amper(_self_);
			}
		}
		else {
			_case_begin_1ab1d16a7:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1ab1d1652:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ab1d1dd3:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str(_32969_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1c0d80c26_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1ab1d3643:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1ab1d35dd:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0da04d7_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1c0da2473_binaryEval static__1c0da2a5b_newPlain(jule::Ptr<_1c0d82046_Eval> _333328_e) {
	return _1c0da2473_binaryEval{._field_e=_333328_e, };;
}



inline _1c0da2473_binaryEval static__1c0da2d9c_new(jule::Ptr<_1c0d82046_Eval> _333923_e, jule::Ptr<_1c0c25406_Token> _333937_op) {
	return _1c0da2473_binaryEval{._field_e=_333923_e, ._field_op=_333937_op};;
}



inline jule::Bool _1c0da3133_checkTypeCompatibility(_1c0da2473_binaryEval* _self_) {
	return _1c0d10304_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*((*(_self_))._field_r))._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1c0da33b9_checkStructCommonOperatorCompatibility(_1c0da2473_binaryEval* _self_) {
	jule::Ptr<_1c0c744aa_FnIns> _335317_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1ab1d86d1:;
			{
				_335317_overload=(*(_1c0db41dd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ab1da22c:;
			{
				_335317_overload=(*(_1c0db41dd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ab1da293:;
			{
				_335317_overload=(*(_1c0db41dd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ab1d8c0e:;
			{
				_335317_overload=(*(_1c0db41dd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ab1d8c75:;
			{
				_335317_overload=(*(_1c0db41dd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ab1d8cdb:;
			{
				_335317_overload=(*(_1c0db41dd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ab1d8d52:;
			{
				_335317_overload=(*(_1c0db41dd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab1da381:;
			{
				_335317_overload=(*(_1c0db41dd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1ab1da3e7:;
			{
				_335317_overload=(*(_1c0db41dd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ab1da45d:;
			{
				_335317_overload=(*(_1c0db41dd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1ab1d8b98:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1ab1d8b43:;
	};
	if ((_335317_overload == nullptr)) {
		_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1c0c7350e_ParamIns> _338513_p = (*(_335317_overload))._field_Params[1LL];;
	return _1c0d0ed4d_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*(_338513_p))._field_Decl))._field_Reference, &((*(_338513_p))._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1c0d80352_Data> _1c0da3650_evalComptimeTypeInfo(_1c0da2473_binaryEval* _self_) {
	jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _339013_r = _1c0db6531_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_339013_r == nullptr)) {
		_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _339513_l = _1c0db6531_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ab1e858c:;
			{
				jule::Ptr<_2036445ea_Const> _339817_constant = static__2036450bd_NewBool(_1c0db0c23_Equal((*(_339513_l))._field_base, (*(_339013_r))._field_base));;
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, ._field_Model=jule::Any(_339817_constant, &__jule_any_type19), ._field_Constant=_339817_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab1e97ad:;
			{
				jule::Ptr<_2036445ea_Const> _340517_constant = static__2036450bd_NewBool((!(_1c0db0c23_Equal((*(_339513_l))._field_base, (*(_339013_r))._field_base))));;
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, ._field_Model=jule::Any(_340517_constant, &__jule_any_type19), ._field_Constant=_340517_constant});;
			}
		}
		else {
			_case_begin_1ab1e8229:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab1e81c4:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0da38d6_evalNil(_1c0da2473_binaryEval* _self_) {
	if ((!(_1c0db23b7_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab1ec10c:;
			{
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		else {
			_case_begin_1ab1ed718:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab1ed6b3:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0da3b6c_evalEnum(_1c0da2473_binaryEval* _self_) {
	jule::Ptr<_1c0c8704a_Enum> _343613_enm = _1c0db341d_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab200a28:;
			{
				jule::Ptr<_1c0db0519_TypeKind> _344017_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1c0db341d_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
					_344017_rkind=(*((*(_1c0db341d_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind))._field_Kind;
				};
				if ((!(_1c0d10304_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_343613_enm))._field_Kind))._field_Kind), &(_344017_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		_match_end_1ab2009c3:;
	};
	if (((_1c0db341d_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr) || (_343613_enm != _1c0db341d_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_343613_enm))._field_Ident, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ab2061b0:;
			{
				if ((!(_203644122_IsNum(_1c0db08d2_Str((*((*(_343613_enm))._field_Kind))._field_Kind.ptr()))))) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_343613_enm))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab20704b:;
			{
				jule::Ptr<_1c0c864cd_EnumItem> _347013_first = (*(_343613_enm))._field_Items[0LL];;
				{
					
					if (_2036485bb_IsI64((*((*((*(_347013_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1ab20a22a:;
						{
							if ((_203645ec0_ReadI64((*((*((*(_347013_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_1ab20e44e;
							};
							goto _julec_label_1ab20ca35;
						}
					}
					else if (_203648852_IsU64((*((*((*(_347013_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1ab20a2a2:;
						{
							if ((_203646256_ReadU64((*((*((*(_347013_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_1ab20e44e;
							};
							goto _julec_label_1ab20ca35;
						}
					}
					else {
						_case_begin_1ab209d40:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3483:17"));;
						}
					}
					_match_end_1ab209cc9:;
				};
				_julec_label_1ab20ca35:;
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*(_343613_enm))._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1c0d82909_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1ab20e44e:;
				goto _case_begin_1ab2070b2;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ab2070b2:;
			{
				if (((_1c0db2b6a_Prim((*((*(_343613_enm))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_203643a17_IsInt(_1c0db8434_Str(_1c0db2b6a_Prim((*((*(_343613_enm))._field_Kind))._field_Kind.ptr()).ptr())))))) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_343613_enm))._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ab205d4c:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_343613_enm))._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab205ce7:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0da3e03_evalTypeEnum(_1c0da2473_binaryEval* _self_) {
	jule::Ptr<_1c0c88755_TypeEnum> _350313_enm = _1c0db36a4_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1c0da3133_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab214a2b:;
			{
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		else {
			_case_begin_1ab213d9e:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0c88a96_Str(_350313_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab214663:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0da4189_evalSptr(_1c0da2473_binaryEval* _self_) {
	if ((!(_1c0da3133_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab215ba3:;
			{
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		else {
			_case_begin_1ab21692e:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab2168c9:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0da4420_evalPtr(_1c0da2473_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ab218d0a:;
			{
				if ((!(_1c0da3133_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ab21a02b:;
			{
				if ((_1c0db3187_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1c0dc0e20_IsUnsafe(_1c0db3187_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()).ptr())) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				};
				if ((!(_1c0daa569_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ab21837b:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab218304:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0da46a6_evalArr(_1c0da2473_binaryEval* _self_) {
	if ((!(_1c0da3133_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab2132dd:;
			{
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		else {
			_case_begin_1ab220e33:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab220dcd:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0da493c_evalSlc(_1c0da2473_binaryEval* _self_) {
	if ((!(_1c0da3133_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab222671:;
			{
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		else {
			_case_begin_1ab2233ec:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab223397:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0da4bc3_evalStruct(_1c0da2473_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1ab2254cb:;
			{
				if (((*(_1c0db41dd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ab225542:;
			{
				if (((*(_1c0db41dd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1ab2255a8:;
			{
				if (((*(_1c0db41dd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ab225630:;
			{
				if (((*(_1c0db41dd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab2256a7:;
			{
				if ((!(_1c0da3133_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		_match_end_1ab224cc2:;
	};
	if ((!(_1c0da33b9_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0da4e59_evalTrait(_1c0da2473_binaryEval* _self_) {
	if ((!(_1c0da3133_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab230195:;
			{
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		else {
			_case_begin_1ab2309c0:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab23096a:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0da51e0_evalAny(_1c0da2473_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab232560:;
			{
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		else {
			_case_begin_1ab23241c:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab232395:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0da5476_evalBool(_1c0da2473_binaryEval* _self_) {
	if ((!(_1c0da3133_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ab233ce2:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ab234a6d:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab234a18:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0da570c_evalStr(_1c0da2473_binaryEval* _self_) {
	jule::Str _370213_rk = _1c0db08d2_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_370213_rk.equal("str", 3))) {
		_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_370213_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ab238665:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ab239446:;
			{
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		else {
			_case_begin_1ab23809e:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab23829c:;
	};
}



inline void _1c0da590a_setTypeToGreater(_1c0da2473_binaryEval* _self_) {
	jule::Ptr<_1c0db80e3_Prim> _37279_lp = _1c0db2b6a_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1c0db80e3_Prim> _37289_rp = _1c0db2b6a_Prim((*((*(_self_))._field_r))._field_Kind.ptr());;
	if (_1c0d80c26_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1c0d80c26_IsConst((*(_self_))._field_r.ptr())))) {
			(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37289_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1ab23d88a;
	};
	if (_1c0d80c26_IsConst((*(_self_))._field_r.ptr())) {
		(*((*((*(_self_))._field_r))._field_Constant))._field_Kind=(*(_37279_lp))._field_Kind;
		return;;
	};
	_julec_label_1ab23d88a:;
	if (((*((*(_self_))._field_l))._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1c0d80c26_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37289_rp))._field_Kind;
		};
		(*((*(_self_))._field_l))._field_untyped=false;
		return;;
	} else if (((!((*((*(_self_))._field_l))._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		return;;
	};
	if (_2036423d9_IsGreater((*(_37289_rp))._field_Kind, (*(_37279_lp))._field_Kind)) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_1c0d80c26_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37289_rp))._field_Kind;
		};
	};
}



inline void _1c0da5bb3_checkModData(_1c0da2473_binaryEval* _self_, jule::Ptr<_1c0d80352_Data>* _376036_d) {
	if ((!(_1c0d80c26_IsConst((*(_376036_d)).ptr())))) {
		if (((_1c0db2b6a_Prim((*((*(_376036_d))))._field_Kind.ptr()) == nullptr) || (!(_203643a17_IsInt((*(_1c0db2b6a_Prim((*((*(_376036_d))))._field_Kind.ptr())))._field_Kind))))) {
			_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1c0d66448_sigAssignable(jule::Str::lit("i64", 3), _376036_d)) {
			_case_begin_1ab2465eb:;
			{
				_203647565_SetI64((*((*(_376036_d))))._field_Constant.ptr(), static_cast<jule::I64>(_203646c90_AsI64((*((*(_376036_d))))._field_Constant.ptr())));
			}
		}
		else if (_1c0d66811_unsigAssignable(jule::Str::lit("u64", 3), _376036_d)) {
			_case_begin_1ab246673:;
			{
				_20364781d_SetU64((*((*(_376036_d))))._field_Constant.ptr(), static_cast<jule::U64>(_203647026_AsU64((*((*(_376036_d))))._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1ab246277:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab246222:;
	};
}



inline void _1c0da5db1_mod(_1c0da2473_binaryEval* _self_) {
	_1c0da5bb3_checkModData(_self_, &((*(_self_))._field_l));
	_1c0da5bb3_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1c0da62ac_numbersAreCompatibile(_1c0da2473_binaryEval* _self_, jule::Str* _378237_lk, jule::Str* _378247_rk) {
	if ((!(_203644122_IsNum((*(_378247_rk)))))) {
		return false;;
	};
	if ((_1c0d80c26_IsConst((*(_self_))._field_l.ptr()) && (*((*(_self_))._field_l))._field_untyped)) {
		return true;;
	};
	if ((*(_378237_lk)).equal("f32", 3)) {
		if ((_1c0d80c26_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return true;;
		};
		return (*(_378247_rk)).equal("f32", 3);;
	};
	if ((*(_378237_lk)).equal("f64", 3)) {
		if ((_1c0d80c26_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return true;;
		};
		return (*(_378247_rk)).equal("f64", 3);;
	};
	if ((_1c0d80c26_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
		return true;;
	};
	return ((*(_378237_lk)) == (*(_378247_rk)));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0da6543_evalFloat(_1c0da2473_binaryEval* _self_) {
	jule::Str _38089_lk = (*(_1c0db2b6a_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38099_rk = (*(_1c0db2b6a_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	if ((!(_1c0da62ac_numbersAreCompatibile(_self_, &(_38089_lk), &(_38099_rk))))) {
		_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38089_lk, &__jule_any_type4),jule::Any(_38099_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ab250a9a:;
			{
				if (((!(_1c0d80c26_IsConst((*(_self_))._field_l.ptr()))) || (!(_1c0d66b85_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38089_lk, &__jule_any_type4),jule::Any(_38099_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1c0d80c26_IsConst((*(_self_))._field_r.ptr()))) || (!(_1c0d66b85_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38089_lk, &__jule_any_type4),jule::Any(_38099_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_203647565_SetI64((*((*(_self_))._field_l))._field_Constant.ptr(), static_cast<jule::I64>(_203646c90_AsI64((*((*(_self_))._field_l))._field_Constant.ptr())));
				_20364781d_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), static_cast<jule::U64>(_203647026_AsU64((*((*(_self_))._field_r))._field_Constant.ptr())));
				if ((!(_1c0da9d1b_isOkForShifting(&((*(_self_))._field_r))))) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1ab250a45:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ab25113e:;
			{
				_1c0da590a_setTypeToGreater(_self_);
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		_match_end_1ab2510d9:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ab24ecdb:;
			{
				_1c0da590a_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ab25860d:;
			{
				if ((!(_203643a17_IsInt(_38099_rk)))) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38089_lk, &__jule_any_type4),jule::Any(_38099_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1c0da5db1_mod(_self_);
				_1c0da590a_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1ab256e58:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab25794d:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0da67c9_evalInt(_1c0da2473_binaryEval* _self_) {
	jule::Str _38729_lk = (*(_1c0db2b6a_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38739_rk = (*(_1c0db2b6a_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ab25ba62:;
			{
				if (((!(_203643a17_IsInt(_38729_lk))) || (!(_203643a17_IsInt(_38739_rk))))) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38729_lk, &__jule_any_type4),jule::Any(_38739_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1c0da9d1b_isOkForShifting(&((*(_self_))._field_r))))) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1ab25bdd6:;
	};
	if ((!(_1c0da62ac_numbersAreCompatibile(_self_, &(_38729_lk), &(_38739_rk))))) {
		_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38729_lk, &__jule_any_type4),jule::Any(_38739_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ab260181:;
			{
				return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c0b7_primBool, });;
			}
		}
		_match_end_1ab26012b:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ab25c029:;
			{
				_1c0da590a_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ab262309:;
			{
				_1c0da5db1_mod(_self_);
				_1c0da590a_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ab261380:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab26132a:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0da6a60_evalPrim(_1c0da2473_binaryEval* _self_) {
	jule::Ptr<_1c0db80e3_Prim> _39299_prim = _1c0db2b6a_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1c0dbb2e4_IsBool(_39299_prim.ptr())) {
			_case_begin_1ab2645e7:;
			{
				return _1c0da5476_evalBool(_self_);;
			}
		}
		else if (_1c0dbb57a_IsStr(_39299_prim.ptr())) {
			_case_begin_1ab26466e:;
			{
				return _1c0da570c_evalStr(_self_);;
			}
		}
		_match_end_1ab26454d:;
	};
	if ((_1c0db2b6a_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr)) {
		_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c0db8434_Str(_39299_prim.ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_203643d58_IsFloat((*(_39299_prim))._field_Kind)) {
			_case_begin_1ab267001:;
			{
				return _1c0da6543_evalFloat(_self_);;
			}
		}
		else if (_203643a17_IsInt((*(_39299_prim))._field_Kind)) {
			_case_begin_1ab267078:;
			{
				return _1c0da67c9_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1ab266e57:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab264729:;
	};
}



inline void _1c0da6c5d_checkSpecialCases(_1c0da2473_binaryEval* _self_) {
	if (((!(_1c0db1b14_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1c0db15e7_IsNil((*((*(_self_))._field_r))._field_Kind.ptr()))))) {
		_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if (((!(_1c0db1b14_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1c0db15e7_IsNil((*((*(_self_))._field_l))._field_Kind.ptr()))))) {
		_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0da6ee4_evalOp(_1c0da2473_binaryEval* _self_) {
	_1c0da6c5d_checkSpecialCases(_self_);
	{
		
		if (_1c0db187d_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1ab26c5de:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1c0db6531_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab26beb2:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab26c787;
			}
		}
		else if ((_1c0db6531_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab26c787:;
			{
				return _1c0da3650_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1c0db2b6a_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1c0dbb811_IsAny(_1c0db2b6a_Prim((*((*(_self_))._field_r))._field_Kind.ptr()).ptr()))) {
			_case_begin_1ab26d9a8:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab26da1e;
			}
		}
		else if (_1c0db15e7_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1ab26da1e:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab26db0c;
			}
		}
		else if (_1c0db15e7_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1ab26db0c:;
			{
				return _1c0da38d6_evalNil(_self_);;
			}
		}
		else if (((_1c0db2b6a_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1c0dbb811_IsAny(_1c0db2b6a_Prim((*((*(_self_))._field_l))._field_Kind.ptr()).ptr()))) {
			_case_begin_1ab26db73:;
			{
				return _1c0da51e0_evalAny(_self_);;
			}
		}
		else if ((_1c0db36a4_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab26dbd9:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab26dc50;
			}
		}
		else if ((_1c0db36a4_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab26dc50:;
			{
				return _1c0da3e03_evalTypeEnum(_self_);;
			}
		}
		else if ((_1c0db341d_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab26dcb6:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab26dd2c;
			}
		}
		else if ((_1c0db341d_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab26dd2c:;
			{
				return _1c0da3b6c_evalEnum(_self_);;
			}
		}
		else if ((_1c0db2e01_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab26dda4:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab26de2b;
			}
		}
		else if ((_1c0db2e01_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab26de2b:;
			{
				return _1c0da4189_evalSptr(_self_);;
			}
		}
		else if ((_1c0db3187_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab26dea3:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab26e02a;
			}
		}
		else if ((_1c0db3187_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab26e02a:;
			{
				return _1c0da4420_evalPtr(_self_);;
			}
		}
		else if ((_1c0db393a_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab26e0a2:;
			{
				return _1c0da46a6_evalArr(_self_);;
			}
		}
		else if ((_1c0db3bc1_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab26e129:;
			{
				return _1c0da493c_evalSlc(_self_);;
			}
		}
		else if ((_1c0db4474_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab26e1a1:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab26e228;
			}
		}
		else if ((_1c0db4474_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab26e228:;
			{
				return _1c0da4e59_evalTrait(_self_);;
			}
		}
		else if ((_1c0db41dd_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab26e2a0:;
			{
				return _1c0da4bc3_evalStruct(_self_);;
			}
		}
		else if ((_1c0db2b6a_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab26e327:;
			{
				return _1c0da6a60_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1ab26c3e1:;
			{
				_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1c0db08d2_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab26c37a:;
	};
}



inline void _1c0da729c_evalConst(_1c0da2473_binaryEval* _self_, jule::Ptr<_1c0d80352_Data>* _402033_d) {
	{
		
		if (((*(_402033_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1ab282192:;
			{
				return;;
			}
		}
		else if ((!(_1c0d80c26_IsConst((*(_self_))._field_l.ptr()))) || (!(_1c0d80c26_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1ab2823e5:;
			{
				(*((*(_402033_d))))._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1ab2820b5:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ab28457e:;
			{
				(*((*(_402033_d))))._field_Constant=static__2036450bd_NewBool(_20364a1a0_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab2845e5:;
			{
				(*((*(_402033_d))))._field_Constant=static__2036450bd_NewBool((!(_20364a1a0_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ab28465b:;
			{
				(*((*(_402033_d))))._field_Constant=static__2036450bd_NewBool(_203649d5e_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ab2846c2:;
			{
				(*((*(_402033_d))))._field_Constant=static__2036450bd_NewBool(_203649a1d_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1ab284738:;
			{
				(*((*(_402033_d))))._field_Constant=static__2036450bd_NewBool(_20364ab73_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1ab28479e:;
			{
				(*((*(_402033_d))))._field_Constant=static__2036450bd_NewBool(_20364a4e1_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ab284826:;
			{
				(*((*(_402033_d))))._field_Constant=static__2036450bd_NewBool(_20364aeb4_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ab28489d:;
			{
				(*((*(_402033_d))))._field_Constant=static__2036450bd_NewBool(_20364a832_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ab284925:;
			{
				_20364b305_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ab28499c:;
			{
				_20364b646_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ab284a24:;
			{
				_20364b987_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ab284a9b:;
			{
				jule::Bool _405913_ok = _20364bcc8_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_405913_ok)) && (_2036472ac_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
				jule::Ptr<_1c0db80e3_Prim> _406417_prim = _1c0db2b6a_Prim((*((*(_402033_d))))._field_Kind.ptr());;
				{
					
					if (_203643440_IsSigInt((*(_406417_prim))._field_Kind)) {
						_case_begin_1ab295392:;
						{
							_203647565_SetI64((*((*(_402033_d))))._field_Constant.ptr(), static_cast<jule::I64>(_203646c90_AsI64((*((*(_402033_d))))._field_Constant.ptr())));
						}
					}
					else if (_20364374d_IsUnsigInt((*(_406417_prim))._field_Kind)) {
						_case_begin_1ab295419:;
						{
							_20364781d_SetU64((*((*(_402033_d))))._field_Constant.ptr(), static_cast<jule::U64>(_203647026_AsU64((*((*(_402033_d))))._field_Constant.ptr())));
						}
					}
					_match_end_1ab2952e8:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ab284b23:;
			{
				jule::Bool _407213_ok = _20364c119_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_407213_ok)) && (_2036472ac_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1ab284b9a:;
			{
				_20364c79b_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab284c22:;
			{
				_20364c45a_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ab284c99:;
			{
				_20364cadc_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1ab284d21:;
			{
				_20364ce2d_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ab284d98:;
			{
				_20364d26e_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_402033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		_match_end_1ab283d42:;
	};
	(*((*(_402033_d))))._field_Model=jule::Any((*((*(_402033_d))))._field_Constant, &__jule_any_type19);
	_1c0dab405_applyCastModelByEnum(_402033_d, _1c0db341d_Enum((*((*(_402033_d))))._field_Kind.ptr()));
}



inline void _1c0da7555_checkData(_1c0da2473_binaryEval* _self_, jule::Ptr<_1c0d80352_Data>* _409733_d) {
	jule::Ptr<_1c0c744aa_FnIns> _40989_f = _1c0db3e57_Fn((*((*(_409733_d))))._field_Kind.ptr());;
	if ((((_40989_f != nullptr) && ((*(_40989_f))._field_Decl != nullptr)) && _1c0c71cb0_IsMethod((*(_40989_f))._field_Decl.ptr()))) {
		_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1c0da7753_checkDatas(_1c0da2473_binaryEval* _self_) {
	_1c0da7555_checkData(_self_, &((*(_self_))._field_l));
	_1c0da7555_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1c0da7a0b_setModel(_1c0da2473_binaryEval* _self_, jule::Ptr<_1c0d80352_Data>* _410932_d) {
	if (_1c0d80c26_IsConst((*(_410932_d)).ptr())) {
		if (((_1c0d80c26_IsConst((*(_self_))._field_l.ptr()) && _1c0d80c26_IsConst((*(_self_))._field_r.ptr())) || (((*((*(_self_))._field_l))._field_Model == nullptr) && ((*((*(_self_))._field_r))._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1c0d80352_Data> _411813_l;;
	jule::Ptr<_1c0d80352_Data> _411820_r;;
	({
		jule::Ptr<_1c0d80352_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1c0d80352_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_411813_l = ___jule_assign_arg;
		_411820_r = _1___jule_assign_arg;
	});
	if ((!(_1c0d81067_GoodOperand(_411813_l.ptr(), &(_411820_r))))) {
		std::swap(_411813_l, _411820_r);
	};
	(*((*(_410932_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c63862_BinopExprModel>(_1c0c63862_BinopExprModel{._field_Left=jule::new_ptr<_1c0c63367_OperandExprModel>(_1c0c63367_OperandExprModel{._field_Kind=(*(_411813_l))._field_Kind, ._field_Model=(*(_411813_l))._field_Model}), ._field_Right=jule::new_ptr<_1c0c63367_OperandExprModel>(_1c0c63367_OperandExprModel{._field_Kind=(*(_411820_r))._field_Kind, ._field_Model=(*(_411820_r))._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1c0da7cb4_postEval(_1c0da2473_binaryEval* _self_, jule::Ptr<_1c0d80352_Data>* _413632_d) {
	(*((*(_413632_d))))._field_Lvalue=false;
	_1c0da7a0b_setModel(_self_, _413632_d);
}



inline jule::Ptr<_1c0d80352_Data> _1c0da81b0_solveExplicit(_1c0da2473_binaryEval* _self_, jule::Ptr<_1c0d80352_Data>* _414137_l, jule::Ptr<_1c0d80352_Data>* _414152_r) {
	({
		jule::Ptr<_1c0d80352_Data> ___jule_assign_arg = (*(_414137_l));
		jule::Ptr<_1c0d80352_Data> _1___jule_assign_arg = (*(_414152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1c0da7753_checkDatas(_self_);
	jule::Ptr<_1c0d80352_Data> _414613_d = _1c0da6ee4_evalOp(_self_);;
	({
		jule::Ptr<_1c0d80352_Data> ___jule_assign_arg = (*(_414137_l));
		jule::Ptr<_1c0d80352_Data> _1___jule_assign_arg = (*(_414152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1c0da729c_evalConst(_self_, &(_414613_d));
	if ((_414613_d != nullptr)) {
		(*(_414613_d))._field_Mutable=true;
		_1c0da7cb4_postEval(_self_, &(_414613_d));
	};
	return _414613_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0da8501_eval(_1c0da2473_binaryEval* _self_, jule::Ptr<_1c0c433e1_BinopExpr>* _416128_op) {
	if (((*((*((*(_416128_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1c0d82596_pushErr((*(_self_))._field_e.ptr(), (*((*(_416128_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1c0d82909_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0d80352_Data> _416813_l = _1c0d9ebce_evalExpr1((*(_self_))._field_e, (*((*(_416128_op))))._field_Left);;
	if (((_416813_l == nullptr) || ((*(_416813_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1c0db0519_TypeKind> _417313_prefix = (*((*(_self_))._field_e))._field_prefix;;
	(*((*(_self_))._field_e))._field_prefix=(*(_416813_l))._field_Kind;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_417313_prefix;
	});;
	jule::Ptr<_1c0d80352_Data> _417613_r = _1c0d9ebce_evalExpr1((*(_self_))._field_e, (*((*(_416128_op))))._field_Right);;
	if (((_417613_r == nullptr) || ((*(_417613_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_416128_op))))._field_Op;
	jule::Ptr<_1c0d80352_Data> _418313_d = _1c0da81b0_solveExplicit(_self_, &(_416813_l), &(_417613_r));;
	if ((((_418313_d != nullptr) && (*(_416813_l))._field_IsRune) && (*(_417613_r))._field_IsRune)) {
		(*(_418313_d))._field_IsRune=true;
	};
	return _418313_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0da2473_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0dadb33_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0dae727_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0db08d2_Str(_1c0db0519_TypeKind* _self_) {
	if (_1c0db15e7_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_21cd5e16e_StrBuilder _7413_kind = static__21cd5e48d_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_21cd67d15_WriteStr(&_7413_kind, jule::Str::lit("...", 3));
	};
	if (_1c0db1361_Binded(_self_)) {
		_21cd67d15_WriteStr(&_7413_kind, jule::Str::lit("cpp.", 4));
		_21cd67d15_WriteStr(&_7413_kind, (*(_self_))._field_BindIdent);
	} else {
		_21cd67d15_WriteStr(&_7413_kind, _1c0db0063_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1c0daeabd_Str((*(_self_))._field_Kind));
	};
	return _21cd6860c_Str(&_7413_kind);;
}



inline jule::Bool _1c0db0c23_Equal(jule::Ptr<_1c0db0519_TypeKind> _self_, jule::Ptr<_1c0db0519_TypeKind> _9021_other) {
	if (_1c0db15e7_IsNil(_self_.ptr())) {
		return _1c0db15e7_IsNil(_9021_other.ptr());;
	};
	if (_1c0db1361_Binded(_self_.ptr())) {
		return (_1c0db1361_Binded(_9021_other.ptr()) && ((*(_self_))._field_BindIdent == (*(_9021_other))._field_BindIdent));;
	};
	return _1c0db0063_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1c0daee0e_Equal((*(_self_))._field_Kind, _9021_other);;
}



inline jule::Bool _1c0db1361_Binded(_1c0db0519_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1c0db15e7_IsNil(_1c0db0519_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1c0db187d_Void(_1c0db0519_TypeKind* _self_) {
	jule::Ptr<_1c0db80e3_Prim> _1109_prim = _1c0db2b6a_Prim(&(*(_self_)));;
	return ((_1109_prim != nullptr) && (*(_1109_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1c0db1b14_Comparable(_1c0db0519_TypeKind* _self_) {
	{
		_1c0db0519_TypeKind* _11717__self = _self_;;
		if ((_1c0db41dd_Struct(_11717__self) != nullptr)) {
			return (*(_1c0db41dd_Struct(_11717__self)))._field_Comparable;;
		};
		return (((_1c0db470a_Map(_11717__self) == nullptr) && (_1c0db3bc1_Slc(_11717__self) == nullptr)) && (_1c0db3e57_Fn(_11717__self) == nullptr));;
	};
}



inline jule::Bool _1c0db1d9a_Mutable(_1c0db0519_TypeKind* _self_) {
	{
		_1c0db0519_TypeKind* _12817__self = _self_;;
		if ((_1c0db41dd_Struct(_12817__self) != nullptr)) {
			return (*(_1c0db41dd_Struct(_12817__self)))._field_Mutable;;
		};
		if ((_1c0db4474_Trait(_12817__self) != nullptr)) {
			return true;;
		};
		if ((_1c0db2b6a_Prim(_12817__self) != nullptr)) {
			jule::Ptr<_1c0db80e3_Prim> _13617_p = _1c0db2b6a_Prim(_12817__self);;
			return _1c0dbb811_IsAny(_13617_p.ptr());;
		};
		if ((_1c0db393a_Arr(_12817__self) != nullptr)) {
			return _1c0db1d9a_Mutable((*(_1c0db393a_Arr(_12817__self)))._field_Elem.ptr());;
		};
		return (((_1c0db3bc1_Slc(_12817__self) != nullptr) || (_1c0db3187_Ptr(_12817__self) != nullptr)) || (_1c0db2e01_Sptr(_12817__self) != nullptr));;
	};
}



inline jule::Bool _1c0db2131_Ordered(_1c0db0519_TypeKind* _self_) {
	{
		_1c0db0519_TypeKind* _15117__self = _self_;;
		jule::Ptr<_1c0db80e3_Prim> _15213_prim = _1c0db2b6a_Prim(_15117__self);;
		if ((_15213_prim != nullptr)) {
			return (_203644122_IsNum((*(_15213_prim))._field_Kind) || _1c0dbb57a_IsStr(_15213_prim.ptr()));;
		};
		if ((_1c0db3187_Ptr(_15117__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1c0c5e3c9_StructIns> _15913_s = _1c0db41dd_Struct(_15117__self);;
		if ((_15913_s != nullptr)) {
			return (((((*(_15913_s))._field_Operators._field_Gt != nullptr) && ((*(_15913_s))._field_Operators._field_GtEq != nullptr)) && ((*(_15913_s))._field_Operators._field_Lt != nullptr)) && ((*(_15913_s))._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1c0c8704a_Enum> _16613_enm = _1c0db341d_Enum(_15117__self);;
		if ((_16613_enm != nullptr)) {
			return _203644122_IsNum(_1c0db08d2_Str((*((*(_16613_enm))._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1c0db23b7_NilCompatible(_1c0db0519_TypeKind* _self_) {
	{
		_1c0db0519_TypeKind* _17717__self = _self_;;
		jule::Ptr<_1c0db80e3_Prim> _17913_prim = _1c0db2b6a_Prim(_17717__self);;
		if (((_17913_prim != nullptr) && _1c0dbb811_IsAny(_17913_prim.ptr()))) {
			return true;;
		};
		return (((((((_1c0db15e7_IsNil(_17717__self) || (_1c0db3e57_Fn(_17717__self) != nullptr)) || (_1c0db2e01_Sptr(_17717__self) != nullptr)) || (_1c0db3187_Ptr(_17717__self) != nullptr)) || (_1c0db4474_Trait(_17717__self) != nullptr)) || (_1c0db3bc1_Slc(_17717__self) != nullptr)) || (_1c0db470a_Map(_17717__self) != nullptr)) || (_1c0db36a4_TypeEnum(_17717__self) != nullptr));;
	};
}



inline jule::Bool _1c0db264d_PerformsRC(_1c0db0519_TypeKind* _self_) {
	{
		_1c0db0519_TypeKind* _19817__self = _self_;;
		jule::Ptr<_1c0db80e3_Prim> _19913_prim = _1c0db2b6a_Prim(_19817__self);;
		if ((_19913_prim != nullptr)) {
			return (_1c0dbb811_IsAny(_19913_prim.ptr()) || _1c0dbb57a_IsStr(_19913_prim.ptr()));;
		};
		return (((_1c0db2e01_Sptr(_19817__self) != nullptr) || (_1c0db3bc1_Slc(_19817__self) != nullptr)) || (_1c0db4474_Trait(_19817__self) != nullptr));;
	};
}



inline jule::Bool _1c0db28d4_Variadicable(_1c0db0519_TypeKind* _self_) {
	{
		_1c0db0519_TypeKind* _21017__self = _self_;;
		return (_1c0db3bc1_Slc(_21017__self) != nullptr);;
	};
}



inline jule::Ptr<_1c0db80e3_Prim> _1c0db2b6a_Prim(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1ab2e5a41:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0db80e3_Prim>(20);;
			}
		}
		else {
			_case_begin_1ab2e5d82:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2e5d2c:;
	};
}



inline jule::Ptr<_1c0dbbb1e_Sptr> _1c0db2e01_Sptr(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1ab2e64c0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0dbbb1e_Sptr>(21);;
			}
		}
		else {
			_case_begin_1ab2e6c40:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2e6bda:;
	};
}



inline jule::Ptr<_1c0dc03d6_Ptr> _1c0db3187_Ptr(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1ab2e7537:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0dc03d6_Ptr>(26);;
			}
		}
		else {
			_case_begin_1ab2e7944:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2e78de:;
	};
}



inline jule::Ptr<_1c0c8704a_Enum> _1c0db341d_Enum(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1ab2e822a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c8704a_Enum>(3);;
			}
		}
		else {
			_case_begin_1ab2e8626:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2e85c1:;
	};
}



inline jule::Ptr<_1c0c88755_TypeEnum> _1c0db36a4_TypeEnum(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1ab2e8e1d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c88755_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1ab2e932a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2e92c5:;
	};
}



inline jule::Ptr<_1c0dbe913_Arr> _1c0db393a_Arr(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1ab2e9b22:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0dbe913_Arr>(25);;
			}
		}
		else {
			_case_begin_1ab2ea02e:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2e9ec9:;
	};
}



inline jule::Ptr<_1c0dbc5e2_Slc> _1c0db3bc1_Slc(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1ab2ea826:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0dbc5e2_Slc>(22);;
			}
		}
		else {
			_case_begin_1ab2eac33:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2eabcd:;
	};
}



inline jule::Ptr<_1c0c744aa_FnIns> _1c0db3e57_Fn(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1ab2eb519:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c744aa_FnIns>(1);;
			}
		}
		else {
			_case_begin_1ab2eb915:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2eb8b0:;
	};
}



inline jule::Ptr<_1c0c5e3c9_StructIns> _1c0db41dd_Struct(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ab2ec1eb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c5e3c9_StructIns>(0);;
			}
		}
		else {
			_case_begin_1ab2ec5e7:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2ec592:;
	};
}



inline jule::Ptr<_1c0c84850_Trait> _1c0db4474_Trait(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1ab2ecdcd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c84850_Trait>(2);;
			}
		}
		else {
			_case_begin_1ab2ed2c9:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2ed274:;
	};
}



inline jule::Ptr<_1c0dbdc86_Map> _1c0db470a_Map(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1ab2edac1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0dbdc86_Map>(24);;
			}
		}
		else {
			_case_begin_1ab2edecd:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2ede78:;
	};
}



inline jule::Ptr<_1c0dbd1d6_Tuple> _1c0db4991_Tup(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1ab2ee7c5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0dbd1d6_Tuple>(23);;
			}
		}
		else {
			_case_begin_1ab2eebd2:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2eeb7c:;
	};
}



inline jule::Bool _1c0db4c27_comptime(_1c0db0519_TypeKind* _self_) {
	return ((((((((((((((_1c0db629a_comptimeTypeInfos(_self_) != nullptr) || (_1c0db6531_comptimeTypeInfo(_self_) != nullptr)) || (_1c0db4ead_comptimeStructFields(_self_) != nullptr)) || (_1c0db5244_comptimeStructField(_self_) != nullptr)) || (_1c0db54ca_comptimeEnumFields(_self_) != nullptr)) || (_1c0db5761_comptimeEnumField(_self_) != nullptr)) || (_1c0db67b7_comptimeStatics(_self_) != nullptr)) || (_1c0db6a4d_comptimeStatic(_self_) != nullptr)) || (_1c0db59e7_comptimeParams(_self_) != nullptr)) || (_1c0db5c7d_comptimeParam(_self_) != nullptr)) || (_1c0db6014_comptimeRange(_self_) != nullptr)) || (_1c0db6cd4_comptimeValue(_self_) != nullptr)) || (_1c0db7301_comptimeFiles(_self_) != nullptr)) || (_1c0db706a_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1c0c8d309_comptimeStructFields> _1c0db4ead_comptimeStructFields(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1ab30084d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c8d309_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1ab304676:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab304621:;
	};
}



inline jule::Ptr<_1c0c8b659_comptimeStructField> _1c0db5244_comptimeStructField(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1ab304b3d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c8b659_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1ab30504a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab304ee5:;
	};
}



inline jule::Ptr<_1c0c93ed0_comptimeEnumFields> _1c0db54ca_comptimeEnumFields(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1ab305842:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c93ed0_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1ab305c4e:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab305be9:;
	};
}



inline jule::Ptr<_1c0c92bc1_comptimeEnumField> _1c0db5761_comptimeEnumField(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1ab306546:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c92bc1_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1ab306953:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab3068ed:;
	};
}



inline jule::Ptr<_1c0c978c9_comptimeParams> _1c0db59e7_comptimeParams(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1ab30724a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c978c9_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1ab307657:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab307602:;
	};
}



inline jule::Ptr<_1c0c95663_comptimeParam> _1c0db5c7d_comptimeParam(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1ab307e4e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c95663_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1ab30835b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab308306:;
	};
}



inline jule::Ptr<_1c0c8aaed_comptimeRange> _1c0db6014_comptimeRange(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1ab308b53:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c8aaed_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1ab309060:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab30900a:;
	};
}



inline jule::Ptr<_1c0c98ec4_comptimeTypeInfos> _1c0db629a_comptimeTypeInfos(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1ab309857:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c98ec4_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1ab309c64:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab309c0e:;
	};
}



inline jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _1c0db6531_comptimeTypeInfo(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1ab30a55b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c9a5be_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1ab30a968:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab30a913:;
	};
}



inline jule::Ptr<_1c0c915c6_comptimeStatics> _1c0db67b7_comptimeStatics(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1ab30b260:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c915c6_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1ab30b66c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab30b617:;
	};
}



inline jule::Ptr<_1c0c8e915_comptimeStatic> _1c0db6a4d_comptimeStatic(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1ab30be64:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0c8e915_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1ab30c371:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab30c31b:;
	};
}



inline jule::Ptr<_1c0ca1ad1_comptimeValue> _1c0db6cd4_comptimeValue(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1ab30cb68:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0ca1ad1_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1ab30d075:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab30d020:;
	};
}



inline jule::Ptr<_1c0ca5a2a_comptimeFile> _1c0db706a_comptimeFile(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1ab30d86c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0ca5a2a_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1ab30dc79:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab30dc24:;
	};
}



inline jule::Ptr<_1c0ca4430_comptimeFiles> _1c0db7301_comptimeFiles(_1c0db0519_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1ab30e571:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c0ca4430_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1ab30e97d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab30e928:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0db0519_TypeKind _Src) {
	_Stream << _1c0db08d2_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1c0db7a60_checked(_1c0db76db_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0db76db_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0db8434_Str(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1c0db8775_Equal(jule::Ptr<_1c0db80e3_Prim> _self_, jule::Ptr<_1c0db0519_TypeKind> _50721_other) {
	jule::Ptr<_1c0db80e3_Prim> _5089_prim = _1c0db2b6a_Prim(_50721_other.ptr());;
	if ((_5089_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5089_prim))._field_Kind);;
}



inline jule::Bool _1c0db8c1a_IsConstraint(_1c0db80e3_Prim* _self_) {
	return ((((!(_1c0dbb57a_IsStr(_self_))) && (!(_1c0dbb811_IsAny(_self_)))) && (!(_1c0dbb2e4_IsBool(_self_)))) && (!(_203644122_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1c0db8ea1_IsI8(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1c0db9237_IsI16(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1c0db94bd_IsI32(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1c0db9754_IsI64(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1c0db99da_IsU8(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1c0db9c71_IsU16(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1c0dba007_IsU32(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1c0dba28d_IsU64(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1c0dba524_IsF32(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1c0dba7aa_IsF64(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1c0dbaa41_IsInt(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1c0dbacc7_IsUint(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1c0dbb05d_IsUintptr(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1c0dbb2e4_IsBool(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1c0dbb57a_IsStr(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1c0dbb811_IsAny(_1c0db80e3_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0db80e3_Prim _Src) {
	_Stream << _1c0db8434_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0dbbe93_Str(_1c0dbbb1e_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1c0db08d2_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c0dbc2d4_Equal(jule::Ptr<_1c0dbbb1e_Sptr> _self_, jule::Ptr<_1c0db0519_TypeKind> _58421_other) {
	jule::Ptr<_1c0dbbb1e_Sptr> _5859_sptr = _1c0db2e01_Sptr(_58421_other.ptr());;
	if ((_5859_sptr == nullptr)) {
		return false;;
	};
	return _1c0db0c23_Equal((*(_self_))._field_Elem, (*(_5859_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0dbbb1e_Sptr _Src) {
	_Stream << _1c0dbbe93_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0dbca76_Str(_1c0dbc5e2_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1c0db08d2_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c0dbcdb7_Equal(jule::Ptr<_1c0dbc5e2_Slc> _self_, jule::Ptr<_1c0db0519_TypeKind> _60321_other) {
	jule::Ptr<_1c0dbc5e2_Slc> _6049_slc = _1c0db3bc1_Slc(_60321_other.ptr());;
	if ((_6049_slc == nullptr)) {
		return false;;
	};
	return _1c0db0c23_Equal((*(_self_))._field_Elem, (*(_6049_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0dbc5e2_Slc _Src) {
	_Stream << _1c0dbca76_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0dbd55a_Str(_1c0dbd1d6_Tuple* _self_) {
	_21cd5e16e_StrBuilder _62013_s = static__21cd5e48d_New(16LL);;
	_21cd680bd_WriteByte(&_62013_s, '(');
	_21cd67d15_WriteStr(&_62013_s, _1c0db08d2_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ab31ea6a:;
		if (it != expr_end) {
			jule::Ptr<_1c0db0519_TypeKind> *_62316_t = it;
			{
				_21cd680bd_WriteByte(&_62013_s, ',');
				_21cd67d15_WriteStr(&_62013_s, _1c0db08d2_Str((*(_62316_t)).ptr()));
			}
			_iter_next_1ab31ea6a:;
			++it;
			goto _iter_begin_1ab31ea6a;
		}
		_iter_end_1ab31ea6a:;
	};
	_21cd680bd_WriteByte(&_62013_s, ')');
	return _21cd6860c_Str(&_62013_s);;
}



inline jule::Bool _1c0dbd89b_Equal(jule::Ptr<_1c0dbd1d6_Tuple> _self_, jule::Ptr<_1c0db0519_TypeKind> _63221_other) {
	jule::Ptr<_1c0dbd1d6_Tuple> _6339_tup = _1c0db4991_Tup(_63221_other.ptr());;
	if ((_6339_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6339_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _64013_i = 0LL;;
	for (; (_64013_i < (*(_self_))._field_Types.len()); (_64013_i)++) {
		{
			if ((!(_1c0db0c23_Equal((*(_self_))._field_Types[_64013_i], (*(_6339_tup))._field_Types[_64013_i])))) {
				return false;;
			};
		}
	_iter_next_1ab32274e:;
	}
	_iter_end_1ab32274e:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0dbd1d6_Tuple _Src) {
	_Stream << _1c0dbd55a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0dbe10a_Str(_1c0dbdc86_Map* _self_) {
	_21cd5e16e_StrBuilder _66013_s = static__21cd5e48d_New(16LL);;
	_21cd67d15_WriteStr(&_66013_s, jule::Str::lit("map[", 4));
	_21cd67d15_WriteStr(&_66013_s, _1c0db08d2_Str((*(_self_))._field_Key.ptr()));
	_21cd680bd_WriteByte(&_66013_s, ']');
	_21cd67d15_WriteStr(&_66013_s, _1c0db08d2_Str((*(_self_))._field_Val.ptr()));
	return _21cd6860c_Str(&_66013_s);;
}



inline jule::Bool _1c0dbe44b_Equal(jule::Ptr<_1c0dbdc86_Map> _self_, jule::Ptr<_1c0db0519_TypeKind> _66921_other) {
	jule::Ptr<_1c0dbdc86_Map> _6709_m = _1c0db470a_Map(_66921_other.ptr());;
	if ((_6709_m == nullptr)) {
		return false;;
	};
	return (_1c0db0c23_Equal((*(_self_))._field_Key, (*(_6709_m))._field_Key) && _1c0db0c23_Equal((*(_self_))._field_Val, (*(_6709_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0dbdc86_Map _Src) {
	_Stream << _1c0dbe10a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0dbec87_Str(_1c0dbe913_Arr* _self_) {
	_21cd5e16e_StrBuilder _68813_s = static__21cd5e48d_New(16LL);;
	_21cd680bd_WriteByte(&_68813_s, '[');
	_21cd67d15_WriteStr(&_68813_s, _203634387_Itoa((*(_self_))._field_N));
	_21cd680bd_WriteByte(&_68813_s, ']');
	_21cd67d15_WriteStr(&_68813_s, _1c0db08d2_Str((*(_self_))._field_Elem.ptr()));
	return _21cd6860c_Str(&_68813_s);;
}



inline jule::Bool _1c0dc00c8_Equal(jule::Ptr<_1c0dbe913_Arr> _self_, jule::Ptr<_1c0db0519_TypeKind> _69721_other) {
	jule::Ptr<_1c0dbe913_Arr> _6989_arr = _1c0db393a_Arr(_69721_other.ptr());;
	if ((_6989_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6989_arr))._field_N) && _1c0db0c23_Equal((*(_self_))._field_Elem, (*(_6989_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0dbe913_Arr _Src) {
	_Stream << _1c0dbec87_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c0dc075a_Str(_1c0dc03d6_Ptr* _self_) {
	if (_1c0dc0e20_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1c0db08d2_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c0dc0a9b_Equal(jule::Ptr<_1c0dc03d6_Ptr> _self_, jule::Ptr<_1c0db0519_TypeKind> _72121_other) {
	jule::Ptr<_1c0dc03d6_Ptr> _7229_ptr = _1c0db3187_Ptr(_72121_other.ptr());;
	if ((_7229_ptr == nullptr)) {
		return false;;
	};
	return _1c0db0c23_Equal((*(_self_))._field_Elem, (*(_7229_ptr))._field_Elem);;
}



inline jule::Bool _1c0dc0e20_IsUnsafe(_1c0dc03d6_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0dc03d6_Ptr _Src) {
	_Stream << _1c0dc075a_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0dc13d7_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1c0dc2b14_pushErr(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c25406_Token> _80726_token, jule::Str _80741_fmt, jule::Slice<jule::Any> _80754_args) {
	_1c0d07340_pushErr((*(_self_))._field_s.ptr(), _80726_token, _80741_fmt, _80754_args);
}



inline void _1c0dc2d12_allowBuiltin(_1c0dc23c7_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1c0dc3010_disallowBuiltin(_1c0dc23c7_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1ab33175d_pushReference(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _81940_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ab01caed_Exist((*(_self_))._field_refers.ptr(), (*(_81940_t)))) {
		return;;
	};
	_1c0c78448_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_81940_t)), &__jule_any_type9));
}

inline void _1ab3345a7_pushReference(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c84850_Trait>* _81940_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ab336301_Exist((*(_self_))._field_refers.ptr(), (*(_81940_t)))) {
		return;;
	};
	_1c0c78448_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_81940_t)), &__jule_any_type10));
}



inline void _1c0dc3571_pushReferenceByKind(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0db0519_TypeKind>* _82943_k) {
	{
		
		if ((_1c0db41dd_Struct((*(_82943_k)).ptr()) != nullptr)) {
			_case_begin_1ab3304c6:;
			{
				jule::Ptr<_1c0c5e3c9_StructIns> _83217_t = _1c0db41dd_Struct((*(_82943_k)).ptr());;
				_1ab33175d_pushReference(_self_, &(_83217_t));
			}
		}
		else if ((_1c0db4474_Trait((*(_82943_k)).ptr()) != nullptr)) {
			_case_begin_1ab33054d:;
			{
				jule::Ptr<_1c0c84850_Trait> _83517_t = _1c0db4474_Trait((*(_82943_k)).ptr());;
				_1ab3345a7_pushReference(_self_, &(_83517_t));
			}
		}
		_match_end_1ab3303b6:;
	};
}



inline void _1c0dc398e_pushCycleError(_1c0dc23c7_typeChecker* _self_, jule::Any _84029_def1, jule::Any _84040_def2, _21cd5e16e_StrBuilder* _84056_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _8429_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _84225_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_84225_def)) };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1ab338b72:;
				{
					return (*((*(_84225_def)).cast_ptr<_1c0dae727_TypeAlias>(&__jule_any_type66)))._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1ab339227:;
				{
					return (*((*(_84225_def)).cast_ptr<_1c0c5b64b_Struct>(&__jule_any_type65)))._field_Ident;;
				}
			}
			else {
				_case_begin_1ab338d1a:;
				{
					return jule::Str();;
				}
			}
			_match_end_1ab338cb5:;
		};
	});;
	jule::Slice<jule::U8> _8529_buf = _21cd690ad_Buf(_84056_message);;
	jule::Str _8539_def1Ident = _8429_getIdent(&(_84029_def1));;
	jule::Str _8549_def2Ident = _8429_getIdent(&(_84040_def2));;
	jule::Str _8559_refersTo = _21ce0cccd_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8539_def1Ident, &__jule_any_type4),jule::Any(_8549_def2Ident, &__jule_any_type4)}));;
	_21cd67d15_WriteStr(_84056_message, _21cd489b6_Repeat(jule::Str::lit(" ", 1), 7LL));
	_21cd67d15_WriteStr(_84056_message, _8559_refersTo);
	_21cd680bd_WriteByte(_84056_message, '\n');
	_21cd67a5c_Write(_84056_message, _8529_buf);
}



inline jule::Bool _1c0dc3d8a_checkCrossCycle(_1c0dc23c7_typeChecker* _self_, jule::Any _86230_decl, _21cd5e16e_StrBuilder* _86246_message) {
	{
		auto &_match_expr{ _86230_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ab33be2d:;
			{
				jule::Ptr<_1c0dae727_TypeAlias> _86513_ta = _86230_decl.cast_ptr<_1c0dae727_TypeAlias>(&__jule_any_type66);;
				{
					auto expr = &((*(_86513_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab33c5b0:;
					if (it != expr_end) {
						jule::Any *_86620_d = it;
						{
							{
								
								if (((*(_86620_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1ab33d4e5:;
									{
										_1c0dc398e_pushCycleError(_self_, jule::Any(_86513_ta, &__jule_any_type66), (*(_86620_d)), _86246_message);
										return false;;
									}
								}
								else if ((!(_1c0dc3d8a_checkCrossCycle(_self_, (*(_86620_d)), _86246_message)))) {
									_case_begin_1ab33d56c:;
									{
										_1c0dc398e_pushCycleError(_self_, jule::Any(_86513_ta, &__jule_any_type66), (*(_86620_d)), _86246_message);
										return false;;
									}
								}
								_match_end_1ab33d3d5:;
							};
						}
						_iter_next_1ab33c5b0:;
						++it;
						goto _iter_begin_1ab33c5b0;
					}
					_iter_end_1ab33c5b0:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab33be94:;
			{
				jule::Ptr<_1c0c5b64b_Struct> _87713_s = _86230_decl.cast_ptr<_1c0c5b64b_Struct>(&__jule_any_type65);;
				{
					auto expr = &((*(_87713_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab33eb9a:;
					if (it != expr_end) {
						jule::Ptr<_1c0c5b64b_Struct> *_87820_d = it;
						{
							{
								
								if ((__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*(_87820_d))))) {
									_case_begin_1ab3405c4:;
									{
										_1c0dc398e_pushCycleError(_self_, jule::Any(_87713_s, &__jule_any_type65), jule::Any((*(_87820_d)), &__jule_any_type65), _86246_message);
										return false;;
									}
								}
								else if ((!(_1c0dc3d8a_checkCrossCycle(_self_, jule::Any((*(_87820_d)), &__jule_any_type65), _86246_message)))) {
									_case_begin_1ab34064b:;
									{
										_1c0dc398e_pushCycleError(_self_, jule::Any(_87713_s, &__jule_any_type65), jule::Any((*(_87820_d)), &__jule_any_type65), _86246_message);
										return false;;
									}
								}
								_match_end_1ab3404b4:;
							};
						}
						_iter_next_1ab33eb9a:;
						++it;
						goto _iter_begin_1ab33eb9a;
					}
					_iter_end_1ab33eb9a:;
				};
			}
		}
		_match_end_1ab33bdc8:;
	};
	return true;;
}



inline jule::Bool _1c0dc4286_checkIllegalCycles(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>* _89638_ident, jule::Any _89665_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _89665_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab3425a4:;
			{
				if ((*(_89665_decl.cast_ptr<_1c0c5b64b_Struct>(&__jule_any_type65)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ab34261a:;
			{
				if ((*(_89665_decl.cast_ptr<_1c0dae727_TypeAlias>(&__jule_any_type66)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ab34254e:;
	};
	if ((_89665_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1c0dc2b14_pushErr(_self_, (*((*(_89638_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_21cd5e16e_StrBuilder _91913_message = static__21cd5e48d_New(32LL);;
	if ((!(_1c0dc3d8a_checkCrossCycle(_self_, _89665_decl, &(_91913_message))))) {
		jule::Str _92217_errMsg = _21cd6860c_Str(&_91913_message);;
		_21cd6880a_Clear(&_91913_message);
		_1c0dc398e_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _89665_decl, &(_91913_message));
		_92217_errMsg+=_21cd6860c_Str(&_91913_message);
		_1c0dc2b14_pushErr(_self_, (*((*(_89638_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_92217_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ab346982:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_89665_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab3469e8:;
			{
				{
					auto &_match_expr{ _89665_decl };
					
					if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1ab34790b:;
						{
							jule::Ptr<_1c0c5b64b_Struct> _93821_s = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1c0c5b64b_Struct>(&__jule_any_type65);;
							{ jule::Slice<jule::Ptr<_1c0c5b64b_Struct>> &__jule_push_dest = (*(_93821_s))._field_Depends; __jule_push_dest.push(_89665_decl.cast_ptr<_1c0c5b64b_Struct>(&__jule_any_type65)); };
						}
					}
					_match_end_1ab346d6c:;
				};
			}
		}
		_match_end_1ab34692c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1c0db0063_Kind> _1c0dc4682_fromTypeAlias(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>* _94633_decl, jule::Ptr<_1c0dae727_TypeAlias>* _94660_ta) {
	if ((!(_1c0d07a9e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_94660_ta))))._field_Public, (*((*(_94660_ta))))._field_Token)))) {
		_1c0dc2b14_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_94660_ta))))._field_Used=true;
	if (((*((*(_94633_decl))))._field_Generics.len() > 0LL)) {
		_1c0dc2b14_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab34bec6:;
			if (it != expr_end) {
				jule::Ptr<_1c0dae727_TypeAlias> _96320_bg = *it;
				{
					if (((_96320_bg == (*(_94660_ta))) || (((*((*((*(_94660_ta))))._field_Kind))._field_Kind != nullptr) && _1c0db0c23_Equal((*((*((*(_94660_ta))))._field_Kind))._field_Kind, (*((*(_96320_bg))._field_Kind))._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1ab34bec6;
					};
				}
				_iter_next_1ab34bec6:;
				++it;
				goto _iter_begin_1ab34bec6;
			}
			_iter_end_1ab34bec6:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab34cbb9:;
			if (it != expr_end) {
				jule::Ptr<_1c0dae727_TypeAlias> _97420_bg = *it;
				{
					if ((_97420_bg == (*(_94660_ta)))) {
						_1c0dc2b14_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_94660_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab35098b:;
						if (it != expr_end) {
							jule::Ptr<_1c0dae727_TypeAlias> _97924_dg = *it;
							{
								if ((_97420_bg == _97924_dg)) {
									_1c0dc2b14_pushErr(_self_, (*((*(_94633_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_94633_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1ab35098b:;
							++it;
							goto _iter_begin_1ab35098b;
						}
						_iter_end_1ab35098b:;
					};
				}
				_iter_next_1ab34cbb9:;
				++it;
				goto _iter_begin_1ab34cbb9;
			}
			_iter_end_1ab34cbb9:;
		};
	};
	jule::Bool _98813_ok = _1c0dc4286_checkIllegalCycles(_self_, _94633_decl, jule::Any((*(_94660_ta)), &__jule_any_type66));;
	if ((!(_98813_ok))) {
		return nullptr;;
	};
	if (((*((*((*(_94660_ta))))._field_Kind))._field_Kind == nullptr)) {
		_98813_ok=_1c0d13758_checkTypeAliasDeclKind((*(_self_))._field_s, _94660_ta, (*(_self_))._field_lookup);
		if ((!(_98813_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_94660_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_ownerAlias))._field_Generics; __jule_push_dest.push((*(_94660_ta))); };
	};
	jule::Ptr<_1c0db0519_TypeKind> _100713_tk = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Generic=(*((*(_94660_ta))))._field_Generic, ._field_Kind=(*((*((*((*(_94660_ta))))._field_Kind))._field_Kind))._field_Kind});;
	_1c0dc3571_pushReferenceByKind(_self_, &(_100713_tk));
	if ((*((*(_94660_ta))))._field_Binded) {
		(*(_100713_tk))._field_BindIdent=(*((*(_94660_ta))))._field_Ident;
	} else {
		(*(_100713_tk))._field_BindIdent=(*((*((*((*(_94660_ta))))._field_Kind))._field_Kind))._field_BindIdent;
	};
	return jule::Trait<_1c0db0063_Kind>(_100713_tk, 19);;
}



inline jule::Ptr<_1c0c8704a_Enum> _1c0dc4a7d_fromEnum(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>* _102028_decl, jule::Ptr<_1c0c8704a_Enum>* _102055_e) {
	if ((!(_1c0d07a9e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102055_e))))._field_Public, (*((*(_102055_e))))._field_Token)))) {
		_1c0dc2b14_pushErr(_self_, (*((*(_102028_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102028_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102028_decl))))._field_Generics.len() > 0LL)) {
		_1c0dc2b14_pushErr(_self_, (*((*(_102028_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102028_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102055_e));;
}



inline jule::Ptr<_1c0c88755_TypeEnum> _1c0dc4e79_fromTypeEnum(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>* _103232_decl, jule::Ptr<_1c0c88755_TypeEnum>* _103259_e) {
	if ((!(_1c0d07a9e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103259_e))))._field_Public, (*((*(_103259_e))))._field_Token)))) {
		_1c0dc2b14_pushErr(_self_, (*((*(_103232_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103232_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103232_decl))))._field_Generics.len() > 0LL)) {
		_1c0dc2b14_pushErr(_self_, (*((*(_103232_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103232_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103259_e));;
}



inline jule::Ptr<_1c0c84850_Trait> _1c0dc5375_fromTrait(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>* _104429_decl, jule::Ptr<_1c0c84850_Trait>* _104456_t) {
	if ((!(_1c0d07a9e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104456_t))))._field_Public, (*((*(_104456_t))))._field_Token)))) {
		_1c0dc2b14_pushErr(_self_, (*((*(_104429_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104429_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104429_decl))))._field_Generics.len() > 0LL)) {
		_1c0dc2b14_pushErr(_self_, (*((*(_104429_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104429_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1ab3345a7_pushReference(_self_, _104456_t);
	return (*(_104456_t));;
}



inline jule::Bool _1c0dc5771_checkStructIns(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _105738_ins, jule::Ptr<_1c0c25406_Token>* _105760_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_105738_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_105738_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*((*(_105738_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1c0d24ba9_precheckStructIns((*(_self_))._field_s, _105738_ins, (*(_105760_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_105738_ins))))._field_Generics.len() > 0LL)) {
		_1c0d256c1_checkStructInsOperators((*(_self_))._field_s, (*(_105738_ins)));
		_1c0d24e62_checkStructIns((*(_self_))._field_s, _105738_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c0dc5a29_appendUsedStructReference(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c5b64b_Struct>* _107849_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab363806:;
			{
				jule::Ptr<_1c0c5b64b_Struct> _108417_refS = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_1c0c5b64b_Struct>(&__jule_any_type65);;
				if ((!(_1c0c5d0cb_IsUses(_108417_refS.ptr(), (*(_107849_s)))))) {
					{ jule::Slice<jule::Ptr<_1c0c5b64b_Struct>> &__jule_push_dest = (*(_108417_refS))._field_Uses; __jule_push_dest.push((*(_107849_s))); };
				};
			}
		}
		_match_end_1ab3637a1:;
	};
}



inline jule::Ptr<_1c0c5e3c9_StructIns> _1c0dc5e25_buildStructInstance(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>* _109143_decl, jule::Ptr<_1c0c5b64b_Struct>* _109170_s) {
	jule::Ptr<_1c0dc13d7_referencer> _109313_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> _109513_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1ab366353:;
				{
					jule::Ptr<_1c0cb9412_scopeChecker> _110221_sc = (*(_self_))._field_lookup.cast_ptr<_1c0cb9412_scopeChecker>(0);;
					jule::Ptr<_1c0cb9412_scopeChecker> _110321_hard = _1c0cbc789_getHardRoot(_110221_sc);;
					if ((((*((*(_110321_hard))._field_owner))._field_Owner == nullptr) || ((*((*((*(_110321_hard))._field_owner))._field_Owner))._field_Decl != (*(_109170_s))))) {
						goto _match_end_1ab3662ed;
					};
					jule::I64 _110717_n = ((*((*(_110321_hard))._field_owner))._field_Generics.len() + (*((*((*(_110321_hard))._field_owner))._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*(_110321_hard))._field_table))._field_TypeAliases.slice(0LL, _110717_n);
				}
			}
			_match_end_1ab3662ed:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1c0dd0050_Lookup> _111713_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1c0c5e3c9_StructIns> _112113_ins = _1c0c5baad_instance((*(_109170_s)));;
	(*(_112113_ins))._field_Generics=jule::Slice<jule::Ptr<_1c0dadb33_InsGeneric>>::alloc(0LL, (*((*(_109143_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109143_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab36a92e:;
		if (it != expr_end) {
			jule::Ptr<_1c0c3a9e3_TypeDecl> _112321_g = *it;
			{
				jule::Ptr<_1c0db0519_TypeKind> _112417_kind = _1c0dc9731_build(_self_, &((*(_112321_g))._field_Kind));;
				if ((_112417_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1c0dadb33_InsGeneric>> &__jule_push_dest = (*(_112113_ins))._field_Generics; __jule_push_dest.push(jule::new_ptr<_1c0dadb33_InsGeneric>(_1c0dadb33_InsGeneric{._field_Kind=_112417_kind, })); };
			}
			_iter_next_1ab36a92e:;
			++it;
			goto _iter_begin_1ab36a92e;
		}
		_iter_end_1ab36a92e:;
	};
	(*(_self_))._field_lookup=_111713_lookup;
	(*(_self_))._field_bannedGenerics=_109513_bannedGenerics;
	(*(_self_))._field_referencer=_109313_referencer;
	return _112113_ins;;
}



inline jule::Ptr<_1c0c5e3c9_StructIns> _1c0dc6321_fromStruct(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>* _113934_decl, jule::Ptr<_1c0c5b64b_Struct>* _113961_s) {
	if ((!(_1c0d07a9e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_113961_s))))._field_Public, (*((*(_113961_s))))._field_Token)))) {
		_1c0dc2b14_pushErr(_self_, (*((*(_113934_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_113934_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_113934_decl))))._field_Generics.len() > 0LL)) {
			_1c0dc2b14_pushErr(_self_, (*((*(_113934_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1c0c5e3c9_StructIns>(_1c0c5e3c9_StructIns{._field_Decl=(*(_113961_s)), });;
	};
	jule::Bool _115713_ok = _1c0dc4286_checkIllegalCycles(_self_, _113934_decl, jule::Any((*(_113961_s)), &__jule_any_type65));;
	if ((!(_115713_ok))) {
		return nullptr;;
	};
	_1c0dc5a29_appendUsedStructReference(_self_, _113961_s);
	jule::Ptr<_1c0c5e3c9_StructIns> _116313_ins = _1c0dc5e25_buildStructInstance(_self_, _113934_decl, _113961_s);;
	if ((_116313_ins == nullptr)) {
		return nullptr;;
	};
	_115713_ok=_1c0d0886e_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_116313_ins))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_116313_ins))._field_Generics.len()), (*((*(_113934_decl))))._field_Token);
	if ((!(_115713_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1c0c5e3c9_StructIns> _117313_existInstance = _1c0c5bdbb_appendInstance((*(_113961_s)).ptr(), &(_116313_ins));;
	if ((_117313_existInstance != nullptr)) {
		if ((!(_1c0d11954_checkConstraintsStruct((*(_self_))._field_s, &(_116313_ins), &((*((*(_113934_decl))))._field_Token), _117313_existInstance)))) {
			return nullptr;;
		};
		_1ab33175d_pushReference(_self_, &(_117313_existInstance));
		return _117313_existInstance;;
	};
	if ((!(_1c0dc5771_checkStructIns(_self_, &(_116313_ins), &((*((*(_113934_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1ab33175d_pushReference(_self_, &(_116313_ins));
	return _116313_ins;;
}



inline jule::Trait<_1c0db0063_Kind> _1c0dc6662_getDef(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3b0ed_IdentTypeDecl>* _119730_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab375bd1:;
		if (it != expr_end) {
			jule::Ptr<_1c0c47bed_GenericDecl> _119816_g = *it;
			{
				if (((*(_119816_g))._field_Ident == (*((*(_119730_decl))))._field_Ident)) {
					return jule::Trait<_1c0db0063_Kind>(_1c0dcc437_buildPrimType((*(_119816_g))._field_Ident), 20);;
				};
			}
			_iter_next_1ab375bd1:;
			++it;
			goto _iter_begin_1ab375bd1;
		}
		_iter_end_1ab375bd1:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab377122:;
		if (it != expr_end) {
			jule::Ptr<_1c0dae727_TypeAlias> _120421_g = *it;
			{
				if (((*(_120421_g))._field_Ident == (*((*(_119730_decl))))._field_Ident)) {
					if (((*((*(_119730_decl))))._field_Generics.len() > 0LL)) {
						_1c0dc2b14_pushErr(_self_, (*((*(_119730_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_119730_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1c0c5e3c9_StructIns> _121021_st = _1c0db41dd_Struct((*((*(_120421_g))._field_Kind))._field_Kind.ptr());;
					if ((_121021_st != nullptr)) {
						jule::Bool _121221_ok = _1c0dc4286_checkIllegalCycles(_self_, _119730_decl, jule::Any((*(_121021_st))._field_Decl, &__jule_any_type65));;
						if ((!(_121221_ok))) {
							return nullptr;;
						};
					};
					return (*((*((*(_120421_g))._field_Kind))._field_Kind))._field_Kind;;
				};
			}
			_iter_next_1ab377122:;
			++it;
			goto _iter_begin_1ab377122;
		}
		_iter_end_1ab377122:;
	};
	if ((!((*((*(_119730_decl))))._field_Binded))) {
		jule::Ptr<_1c0c8704a_Enum> _122217_e = _1c0dd0050_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0dceaaa_FindEnum((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident);;
		if ((_122217_e != nullptr)) {
			return jule::Trait<_1c0db0063_Kind>(_1c0dc4a7d_fromEnum(_self_, _119730_decl, &(_122217_e)), 3);;
		};
		jule::Ptr<_1c0c88755_TypeEnum> _122717_te = _1c0dd0050_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0dcedeb_FindTypeEnum((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident);;
		if ((_122717_te != nullptr)) {
			return jule::Trait<_1c0db0063_Kind>(_1c0dc4e79_fromTypeEnum(_self_, _119730_decl, &(_122717_te)), 4);;
		};
		jule::Ptr<_1c0c84850_Trait> _123217_t = _1c0dd0050_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0dce769_FindTrait((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident);;
		if ((_123217_t != nullptr)) {
			return jule::Trait<_1c0db0063_Kind>(_1c0dc5375_fromTrait(_self_, _119730_decl, &(_123217_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1c0dc2b14_pushErr(_self_, (*((*(_119730_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c5b64b_Struct> _124113_s = _1c0dd0050_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0dce02c_FindStruct((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident, (*((*(_119730_decl))))._field_Binded);;
	if ((_124113_s != nullptr)) {
		return jule::Trait<_1c0db0063_Kind>(_1c0dc6321_fromStruct(_self_, _119730_decl, &(_124113_s)), 0);;
	};
	jule::Ptr<_1c0dae727_TypeAlias> _124613_ta = _1c0dd0050_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0dcdb31_FindTypeAlias((*(_self_))._field_lookup, (*((*(_119730_decl))))._field_Ident, (*((*(_119730_decl))))._field_Binded);;
	if (((_124613_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_124613_ta=_1c0e9ee44_findBuiltinTypeAlias((*((*(_119730_decl))))._field_Ident);
	};
	if ((_124613_ta != nullptr)) {
		return _1c0dc4682_fromTypeAlias(_self_, _119730_decl, &(_124613_ta));;
	};
	_1c0dc2b14_pushErr(_self_, (*((*(_119730_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_119730_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait<_1c0db0063_Kind> _1c0dc69a3_buildIdent(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3b0ed_IdentTypeDecl> _125833_decl) {
	return _1c0dc6662_getDef(_self_, &(_125833_decl));;
}



inline jule::Trait<_1c0db0063_Kind> _1c0dc6ce4_buildSubIdent(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3b3ea_SubIdentTypeDecl> _126236_decl) {
	jule::Trait<_1c0db0063_Kind> _126313_ident = _1c0dc69a3_buildIdent(_self_, (*(_126236_decl))._field_Idents[0LL]);;
	if ((_126313_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _126313_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1ab383826:;
			{
				goto _match_end_1ab383293;
			}
		}
		else {
			_case_begin_1ab3832e8:;
			{
				_1c0dc2b14_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab383293:;
	};
	jule::Ptr<_1c0c88755_TypeEnum> _127413_t = _126313_ident.cast_ptr<_1c0c88755_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1c0c3b0ed_IdentTypeDecl>> _127513_idents = (*(_126236_decl))._field_Idents.slice(1LL);;
	{
		auto expr = &(_127513_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3845b3:;
		if (it != expr_end) {
			jule::I64 _127613_i = it - expr->begin();
			jule::Ptr<_1c0c3b0ed_IdentTypeDecl> _127616_id = *it;
			{
				jule::Ptr<_1c0c8817d_TypeEnumItem> _127717_item = _1c0c89316_FindItem(_127413_t.ptr(), (*(_127616_id))._field_Ident);;
				if ((_127717_item == nullptr)) {
					_1c0dc2b14_pushErr(_self_, (*(_127616_id))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_127413_t))._field_Ident, &__jule_any_type4),jule::Any((*(_127616_id))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_127513_idents.len() - _127613_i) == 1LL)) {
					_1c0dc3571_pushReferenceByKind(_self_, &((*((*(_127717_item))._field_Kind))._field_Kind));
					return jule::Trait<_1c0db0063_Kind>((*((*(_127717_item))._field_Kind))._field_Kind, 19);;
				};
				_127413_t=_1c0db36a4_TypeEnum((*((*(_127717_item))._field_Kind))._field_Kind.ptr());
				if ((_127413_t == nullptr)) {
					_1c0dc2b14_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1ab3845b3:;
			++it;
			_127613_i++;
			goto _iter_begin_1ab3845b3;
		}
		_iter_end_1ab3845b3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0dbbb1e_Sptr> _1c0dc7135_buildSptrFromType(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0db0519_TypeKind>* _129641_elem) {
	{
		
		if (((*(_129641_elem)) == nullptr)) {
			_case_begin_1ab388b06:;
			{
				return nullptr;;
			}
		}
		else if ((_1c0db41dd_Struct((*(_129641_elem)).ptr()) != nullptr)) {
			_case_begin_1ab388b7d:;
			{
				jule::Ptr<_1c0c5e3c9_StructIns> _130213_s = _1c0db41dd_Struct((*(_129641_elem)).ptr());;
				if ((((*(_130213_s))._field_Decl != nullptr) && (*((*(_130213_s))._field_Decl))._field_Binded)) {
					_1c0dc2b14_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1c0db393a_Arr((*(_129641_elem)).ptr()) != nullptr) && (*(_1c0db393a_Arr((*(_129641_elem)).ptr())))._field_Auto)) {
			_case_begin_1ab388c05:;
			{
				_1c0dc2b14_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab384ddd:;
	};
	return jule::new_ptr<_1c0dbbb1e_Sptr>(_1c0dbbb1e_Sptr{._field_Elem=(*(_129641_elem))});;
}



inline jule::Ptr<_1c0dbbb1e_Sptr> _1c0dc7476_buildSptr(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3ba8d_SptrTypeDecl> _131632_decl) {
	jule::Bool _13179_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13179_cycleRisk;
	});;
	jule::Ptr<_1c0db0519_TypeKind> _132113_elem = _1c0dc9a72_checkDecl(_self_, &((*(_131632_decl))._field_Elem));;
	return _1c0dc7135_buildSptrFromType(_self_, &(_132113_elem));;
}



inline jule::Ptr<_1c0dc03d6_Ptr> _1c0dc77b7_buildPtrFromType(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0db0519_TypeKind>* _132540_elem) {
	{
		
		if (((*(_132540_elem)) == nullptr)) {
			_case_begin_1ab38d820:;
			{
				return nullptr;;
			}
		}
		else if (((_1c0db393a_Arr((*(_132540_elem)).ptr()) != nullptr) && (*(_1c0db393a_Arr((*(_132540_elem)).ptr())))._field_Auto)) {
			_case_begin_1ab38d897:;
			{
				_1c0dc2b14_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1c0dc03d6_Ptr>();;
			}
		}
		_match_end_1ab38d710:;
	};
	return jule::new_ptr<_1c0dc03d6_Ptr>(_1c0dc03d6_Ptr{._field_Elem=(*(_132540_elem))});;
}



inline jule::Ptr<_1c0dc03d6_Ptr> _1c0dc7b08_buildPtr(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3c51c_PtrTypeDecl> _134031_decl) {
	jule::Bool _13419_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13419_cycleRisk;
	});;
	jule::Ptr<_1c0db0519_TypeKind> _134517_elem = nullptr;;
	if ((!(_1c0c3c880_IsUnsafe(_134031_decl.ptr())))) {
		_134517_elem=_1c0dc9a72_checkDecl(_self_, &((*(_134031_decl))._field_Elem));
		return _1c0dc77b7_buildPtrFromType(_self_, &(_134517_elem));;
	};
	return jule::new_ptr<_1c0dc03d6_Ptr>(_1c0dc03d6_Ptr{._field_Elem=_134517_elem});;
}



inline jule::Ptr<_1c0dbc5e2_Slc> _1c0dc7e49_buildSlc(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3be23_SlcTypeDecl> _135731_decl) {
	jule::Bool _13589_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13589_cycleRisk;
	});;
	jule::Ptr<_1c0db0519_TypeKind> _136213_elem = _1c0dc9a72_checkDecl(_self_, &((*(_135731_decl))._field_Elem));;
	{
		
		if ((_136213_elem == nullptr)) {
			_case_begin_1ab393517:;
			{
				return nullptr;;
			}
		}
		else if (((_1c0db393a_Arr(_136213_elem.ptr()) != nullptr) && (*(_1c0db393a_Arr(_136213_elem.ptr())))._field_Auto)) {
			_case_begin_1ab39358e:;
			{
				_1c0dc2b14_pushErr(_self_, (*((*(_135731_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab39345c:;
	};
	return jule::new_ptr<_1c0dbc5e2_Slc>(_1c0dbc5e2_Slc{._field_Elem=_136213_elem});;
}



inline jule::Ptr<_1c0dbe913_Arr> _1c0dc828a_buildArr(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3ccae_ArrTypeDecl> _137831_decl) {
	jule::I64 _137913_n = 0LL;;
	if ((!(_1c0c3d122_AutoSized(_137831_decl.ptr())))) {
		jule::Ptr<_1c0d80352_Data> _138217_size = _1c0da0020_evalExpr(_1c0d0e7dc_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*(_137831_decl))._field_Size);;
		if ((_138217_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1c0d80c26_IsConst(_138217_size.ptr())))) {
			_1c0dc2b14_pushErr(_self_, (*((*(_137831_decl))._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1c0db2b6a_Prim((*(_138217_size))._field_Kind.ptr()) == nullptr) || (!(_203643a17_IsInt((*(_1c0db2b6a_Prim((*(_138217_size))._field_Kind.ptr())))._field_Kind))))) {
			_1c0dc2b14_pushErr(_self_, (*((*(_137831_decl))._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_137913_n=static_cast<jule::I64>(static_cast<jule::I64>(_203646c90_AsI64((*(_138217_size))._field_Constant.ptr())));
		if ((_137913_n < 0LL)) {
			_1c0dc2b14_pushErr(_self_, (*((*(_137831_decl))._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _140017_max = _20363c934_MaxI(jule::Str::lit("int", 3));;
			if (((_203635641_BitSize != 64LL) && (static_cast<jule::I64>(_137913_n) > _140017_max))) {
				_1c0dc2b14_pushErr(_self_, (*((*(_137831_decl))._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1c0dac2c4_constoa(&((*(_138217_size))._field_Constant)), &__jule_any_type4),jule::Any(_2036340bd_FmtInt(_140017_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1c0db0519_TypeKind> _140913_elem = _1c0dc9a72_checkDecl(_self_, &((*(_137831_decl))._field_Elem));;
	{
		
		if ((_140913_elem == nullptr)) {
			_case_begin_1ab39c93e:;
			{
				return nullptr;;
			}
		}
		else if (((_1c0db393a_Arr(_140913_elem.ptr()) != nullptr) && (*(_1c0db393a_Arr(_140913_elem.ptr())))._field_Auto)) {
			_case_begin_1ab39c9b6:;
			{
				_1c0dc2b14_pushErr(_self_, (*((*(_137831_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab39c8b7:;
	};
	return jule::new_ptr<_1c0dbe913_Arr>(_1c0dbe913_Arr{._field_Auto=_1c0c3d122_AutoSized(_137831_decl.ptr()), ._field_N=_137913_n, ._field_Elem=_140913_elem});;
}



inline jule::Ptr<_1c0dbdc86_Map> _1c0dc85cb_buildMap(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3d50c_MapTypeDecl> _142731_decl) {
	jule::Bool _14289_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14289_cycleRisk;
	});;
	jule::Ptr<_1c0db0519_TypeKind> _143213_key = _1c0dc9a72_checkDecl(_self_, &((*(_142731_decl))._field_Key));;
	if ((_143213_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0db0519_TypeKind> _143713_val = _1c0dc9a72_checkDecl(_self_, &((*(_142731_decl))._field_Val));;
	if ((_143713_val == nullptr)) {
		return nullptr;;
	};
	if ((_1c0db341d_Enum(_143713_val.ptr()) != nullptr)) {
		_1c0dc2b14_pushErr(_self_, (*((*(_142731_decl))._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1c0dbdc86_Map>(_1c0dbdc86_Map{._field_Key=_143213_key, ._field_Val=_143713_val});;
}



inline jule::Ptr<_1c0dbd1d6_Tuple> _1c0dc891c_buildTuple(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3c220_TupleTypeDecl> _145133_decl) {
	jule::Slice<jule::Ptr<_1c0db0519_TypeKind>> _145213_types = jule::Slice<jule::Ptr<_1c0db0519_TypeKind>>::alloc(0LL, (*(_145133_decl))._field_Types.len());;
	{
		auto expr = &((*(_145133_decl))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3a334b:;
		if (it != expr_end) {
			jule::Ptr<_1c0c3a9e3_TypeDecl> _145321_t = *it;
			{
				jule::Ptr<_1c0db0519_TypeKind> _145417_kind = _1c0dc9a72_checkDecl(_self_, &(_145321_t));;
				if ((_145417_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1c0db0519_TypeKind>> &__jule_push_dest = _145213_types; __jule_push_dest.push(_145417_kind); };
			}
			_iter_next_1ab3a334b:;
			++it;
			goto _iter_begin_1ab3a334b;
		}
		_iter_end_1ab3a334b:;
	};
	return jule::new_ptr<_1c0dbd1d6_Tuple>(_1c0dbd1d6_Tuple{._field_Types=_145213_types});;
}



inline jule::Bool _1c0dc8c5d_checkFuncTypes(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c744aa_FnIns>* _146438_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146438_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3a4c87:;
		if (it != expr_end) {
			jule::Ptr<_1c0c7350e_ParamIns> _146521_p = *it;
			{
				(*(_146521_p))._field_Kind=_1c0dc9731_build(_self_, &((*((*((*((*(_146521_p))._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*(_146521_p))._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1c0d12108_checkFnParamKind((*(_self_))._field_s, &(_146521_p));
			}
			_iter_next_1ab3a4c87:;
			++it;
			goto _iter_begin_1ab3a4c87;
		}
		_iter_end_1ab3a4c87:;
	};
	if ((!(_1c0c71a29_IsVoid((*((*(_146438_f))))._field_Decl.ptr())))) {
		(*((*(_146438_f))))._field_Result=_1c0dc9731_build(_self_, &((*((*((*((*((*((*(_146438_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl))._field_Kind));
		__jule_func_result = ((*((*(_146438_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c0c744aa_FnIns> _1c0dc909e_buildFunc(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c4c6a3_FnDecl> _148232_decl) {
	jule::Bool _14839_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14839_cycleRisk;
	});;
	if (((*(_148232_decl))._field_Generics.len() > 0LL)) {
		_1c0dc2b14_pushErr(_self_, (*(_148232_decl))._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c715a6_Fn> _149213_f = _1c0c7ab76_buildFunc(_148232_decl);;
	jule::I64 _14949_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1c0d1b3ed_checkAnonFuncDecl((*(_self_))._field_s, &(_149213_f));
	if ((_14949_n != (*((*(_self_))._field_s))._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1c0c744aa_FnIns> _150013_ins = _1c0c72a80_instanceForce(_149213_f);;
	(*(_150013_ins))._field_Anon=true;
	jule::Bool _15039_ok = _1c0dc8c5d_checkFuncTypes(_self_, &(_150013_ins));;
	if ((!(_15039_ok))) {
		return nullptr;;
	};
	return _150013_ins;;
}



inline jule::Trait<_1c0db0063_Kind> _1c0dc93e0_buildByNamespace(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3b791_NamespaceTypeDecl> _151139_decl) {
	jule::Str _15129_path = _1c0dcc091_buildLinkPathByTokens(&((*(_151139_decl))._field_Idents));;
	jule::Ptr<_1c0cd353b_ImportInfo> _151313_imp = _1c0dd0050_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c0dcd339_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)>([=](jule::Ptr<_1c0cd353b_ImportInfo> _151349_imp) mutable -> jule::Bool {
		if ((((*(_151139_decl))._field_Idents.len() == 1LL) && ((*(_151349_imp))._field_Alias == _15129_path))) {
			return true;;
		};
		return (((*(_151349_imp))._field_LinkPath == _15129_path) && _1c0cd6154_isAccessibleViaSelection(_151349_imp.ptr()));;
	}));;
	jule::Str _15209_selfIdent = jule::Str::lit("self", 4);;
	if (((_151313_imp == nullptr) || (!(_1c0cd5a7c_isLookupable(_151313_imp.ptr(), &(_15209_selfIdent)))))) {
		_1c0dc2b14_pushErr(_self_, (*(_151139_decl))._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15129_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1c0dc3010_disallowBuiltin(_self_);
	jule::Trait<_1c0dd0050_Lookup> _152713_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1c0dd0050_Lookup>(_151313_imp, 1);
	jule::Ptr<_1c0db0519_TypeKind> _152913_kind = _1c0dc9a72_checkDecl(_self_, &((*(_151139_decl))._field_Kind));;
	(*(_self_))._field_lookup=_152713_lookup;
	_1c0dc2d12_allowBuiltin(_self_);
	return jule::Trait<_1c0db0063_Kind>(_152913_kind, 19);;
}



inline jule::Ptr<_1c0db0519_TypeKind> _1c0dc9731_build(_1c0dc23c7_typeChecker* _self_, jule::Any* _153529_declKind) {
	jule::Trait<_1c0db0063_Kind> _153617_kind = nullptr;;
	{
		auto &_match_expr{ (*(_153529_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ab3b4093:;
			{
				jule::Trait<_1c0db0063_Kind> _153917_t = _1c0dc69a3_buildIdent(_self_, (*(_153529_declKind)).cast_ptr<_1c0c3b0ed_IdentTypeDecl>(&__jule_any_type20));;
				if ((_153917_t != nullptr)) {
					_153617_kind=_153917_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ab3b345a:;
			{
				jule::Trait<_1c0db0063_Kind> _154417_t = _1c0dc6ce4_buildSubIdent(_self_, (*(_153529_declKind)).cast_ptr<_1c0c3b3ea_SubIdentTypeDecl>(&__jule_any_type86));;
				if ((_154417_t != nullptr)) {
					_153617_kind=_154417_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ab3b3658:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c0dbbb1e_Sptr> _155017_t = _1c0dc7476_buildSptr(_self_, (*(_153529_declKind)).cast_ptr<_1c0c3ba8d_SptrTypeDecl>(&__jule_any_type72));;
				if ((_155017_t != nullptr)) {
					_153617_kind=jule::Trait<_1c0db0063_Kind>(_155017_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ab3b36be:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c0dc03d6_Ptr> _155617_t = _1c0dc7b08_buildPtr(_self_, (*(_153529_declKind)).cast_ptr<_1c0c3c51c_PtrTypeDecl>(&__jule_any_type71));;
				if ((_155617_t != nullptr)) {
					_153617_kind=jule::Trait<_1c0db0063_Kind>(_155617_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ab3b3735:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c0dbc5e2_Slc> _156217_t = _1c0dc7e49_buildSlc(_self_, (*(_153529_declKind)).cast_ptr<_1c0c3be23_SlcTypeDecl>(&__jule_any_type70));;
				if ((_156217_t != nullptr)) {
					_153617_kind=jule::Trait<_1c0db0063_Kind>(_156217_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ab3b379b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c0dbe913_Arr> _156817_t = _1c0dc828a_buildArr(_self_, (*(_153529_declKind)).cast_ptr<_1c0c3ccae_ArrTypeDecl>(&__jule_any_type69));;
				if ((_156817_t != nullptr)) {
					_153617_kind=jule::Trait<_1c0db0063_Kind>(_156817_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ab3b4170:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c0dbdc86_Map> _157417_t = _1c0dc85cb_buildMap(_self_, (*(_153529_declKind)).cast_ptr<_1c0c3d50c_MapTypeDecl>(&__jule_any_type73));;
				if ((_157417_t != nullptr)) {
					_153617_kind=jule::Trait<_1c0db0063_Kind>(_157417_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ab3b41d6:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c0dbd1d6_Tuple> _158017_t = _1c0dc891c_buildTuple(_self_, (*(_153529_declKind)).cast_ptr<_1c0c3c220_TupleTypeDecl>(&__jule_any_type74));;
				if ((_158017_t != nullptr)) {
					_153617_kind=jule::Trait<_1c0db0063_Kind>(_158017_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ab3b424c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c0c744aa_FnIns> _158617_t = _1c0dc909e_buildFunc(_self_, (*(_153529_declKind)).cast_ptr<_1c0c4c6a3_FnDecl>(&__jule_any_type14));;
				if ((_158617_t != nullptr)) {
					_153617_kind=jule::Trait<_1c0db0063_Kind>(_158617_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ab3b42b3:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1c0db0063_Kind> _159217_t = _1c0dc93e0_buildByNamespace(_self_, (*(_153529_declKind)).cast_ptr<_1c0c3b791_NamespaceTypeDecl>(&__jule_any_type90));;
				if ((_159217_t != nullptr)) {
					_153617_kind=_159217_t;
				};
			}
		}
		else {
			_case_begin_1ab3b35e2:;
			{
				_1c0dc2b14_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab3b358c:;
	};
	if ((_153617_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _153617_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1ab3c08da:;
			{
				return _153617_kind.cast_ptr<_1c0db0519_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1ab3bd5ca:;
			{
				jule::Ptr<_1c0db0519_TypeKind> _160717_tk = jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=_153617_kind});;
				{
					auto &_match_expr{ _153617_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1ab3be2ac:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1c0db0519_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_160717_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1ab3be334:;
						{
							jule::Ptr<_1c0c5e3c9_StructIns> _161417_s = _153617_kind.cast_ptr<_1c0c5e3c9_StructIns>(0);;
							if ((((*(_161417_s))._field_Decl != nullptr) && (*((*(_161417_s))._field_Decl))._field_Binded)) {
								(*(_160717_tk))._field_BindIdent=(*((*(_161417_s))._field_Decl))._field_Ident;
							};
						}
					}
					_match_end_1ab3be246:;
				};
				return _160717_tk;;
			}
		}
		_match_end_1ab3b4329:;
	};
}



inline jule::Ptr<_1c0db0519_TypeKind> _1c0dc9a72_checkDecl(_1c0dc23c7_typeChecker* _self_, jule::Ptr<_1c0c3a9e3_TypeDecl>* _162333_decl) {
	jule::Ptr<_1c0c25406_Token> _162513_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162333_decl))))._field_Token;
	jule::Ptr<_1c0db0519_TypeKind> _162813_kind = _1c0dc9731_build(_self_, &((*((*(_162333_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_162513_errorToken;
	return _162813_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0dc23c7_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1c0dca4bd_prim(jule::Str* _165021_ident, jule::Ptr<_1c0db80e3_Prim> _165033_t) {
	return ((*(_165033_t))._field_Kind == (*(_165021_ident)));;
}



inline jule::Bool static__1c0dca842_exist(jule::Str* _165422_ident, jule::Ptr<_1c0db0519_TypeKind>* _165439_k) {
	{
		
		if ((_1c0db2b6a_Prim((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ab3c5626:;
			{
				return static__1c0dca4bd_prim(_165422_ident, _1c0db2b6a_Prim((*(_165439_k)).ptr()));;
			}
		}
		else if ((_1c0db2e01_Sptr((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ab3c569d:;
			{
				jule::Ptr<_1c0dbbb1e_Sptr> _165917_sptr = _1c0db2e01_Sptr((*(_165439_k)).ptr());;
				return static__1c0dca842_exist(_165422_ident, &((*(_165917_sptr))._field_Elem));;
			}
		}
		else if ((_1c0db3187_Ptr((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ab3c5923:;
			{
				jule::Ptr<_1c0dc03d6_Ptr> _166217_ptr = _1c0db3187_Ptr((*(_165439_k)).ptr());;
				return static__1c0dca842_exist(_165422_ident, &((*(_166217_ptr))._field_Elem));;
			}
		}
		else if ((_1c0db3bc1_Slc((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ab3c5989:;
			{
				jule::Ptr<_1c0dbc5e2_Slc> _166517_slc = _1c0db3bc1_Slc((*(_165439_k)).ptr());;
				return static__1c0dca842_exist(_165422_ident, &((*(_166517_slc))._field_Elem));;
			}
		}
		else if ((_1c0db393a_Arr((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ab3c5a00:;
			{
				jule::Ptr<_1c0dbe913_Arr> _166817_arr = _1c0db393a_Arr((*(_165439_k)).ptr());;
				return static__1c0dca842_exist(_165422_ident, &((*(_166817_arr))._field_Elem));;
			}
		}
		else if ((_1c0db470a_Map((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ab3c5a77:;
			{
				jule::Ptr<_1c0dbdc86_Map> _167117_m = _1c0db470a_Map((*(_165439_k)).ptr());;
				return (static__1c0dca842_exist(_165422_ident, &((*(_167117_m))._field_Key)) || static__1c0dca842_exist(_165422_ident, &((*(_167117_m))._field_Val)));;
			}
		}
		else if ((_1c0db41dd_Struct((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ab3c5aee:;
			{
				jule::Ptr<_1c0c5e3c9_StructIns> _167517_s = _1c0db41dd_Struct((*(_165439_k)).ptr());;
				{
					auto expr = &((*(_167517_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab3cba6c:;
					if (it != expr_end) {
						jule::Ptr<_1c0dadb33_InsGeneric> _167625_g = *it;
						{
							if (static__1c0dca842_exist(_165422_ident, &((*(_167625_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ab3cba6c:;
						++it;
						goto _iter_begin_1ab3cba6c;
					}
					_iter_end_1ab3cba6c:;
				};
				return false;;
			}
		}
		else if ((_1c0db3e57_Fn((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ab3c5c0e:;
			{
				jule::Ptr<_1c0c744aa_FnIns> _168317_f = _1c0db3e57_Fn((*(_165439_k)).ptr());;
				{
					auto expr = &((*(_168317_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab3cc809:;
					if (it != expr_end) {
						jule::Ptr<_1c0c7350e_ParamIns> _168425_p = *it;
						{
							if (_1c0c701ed_IsSelf((*(_168425_p))._field_Decl.ptr())) {
								goto _iter_next_1ab3cc809;
							};
							if (static__1c0dca842_exist(_165422_ident, &((*(_168425_p))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ab3cc809:;
						++it;
						goto _iter_begin_1ab3cc809;
					}
					_iter_end_1ab3cc809:;
				};
				if (((*(_168317_f))._field_Result != nullptr)) {
					return static__1c0dca842_exist(_165422_ident, &((*(_168317_f))._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1c0db4991_Tup((*(_165439_k)).ptr()) != nullptr)) {
			_case_begin_1ab3c5c75:;
			{
				jule::Ptr<_1c0dbd1d6_Tuple> _169717_tup = _1c0db4991_Tup((*(_165439_k)).ptr());;
				{
					auto expr = &((*(_169717_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab3cd50d:;
					if (it != expr_end) {
						jule::Ptr<_1c0db0519_TypeKind> _169825_t = *it;
						{
							if (static__1c0dca842_exist(_165422_ident, &(_169825_t))) {
								return true;;
							};
						}
						_iter_next_1ab3cd50d:;
						++it;
						goto _iter_begin_1ab3cd50d;
					}
					_iter_end_1ab3cd50d:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1ab3c54d3:;
			{
				return false;;
			}
		}
		_match_end_1ab3c5428:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0dca05b_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c181ad86_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c1866c17_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1c1867c18_stop(_1c18675a8_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1c1867e9e_stopped(_1c18675a8_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1c1868235_finished(_1c18675a8_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1c18684bb_isLastSt(_1c18675a8_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1c186882e_pushErr(_1c18675a8_scopeParser* _self_, jule::Ptr<_1c0c25406_Token> _18926_token, jule::Str _18941_fmt) {
	_1c1886231_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _1c1868b92_pushSuggestion(_1c18675a8_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_1c1886594_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _1c1868e4a_insertAsNext(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1c1866c17_stmt>(_1c1866c17_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_1c1866c17_stmt> _1c18691d1_next(_1c18675a8_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1c0c4aa14_ScopeTree> _1c18695cc_buildScope(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _20834_tokens, jule::Ptr<_1c0c25406_Token> _20856_end) {
	jule::Ptr<_1c0c4aa14_ScopeTree> _20913_s = _1c18659a2_newScope();;
	(*(_20913_s))._field_Parent=(*(_self_))._field_s;
	(*(_20913_s))._field_End=_20856_end;
	_1c18675a8_scopeParser _21213_ssp = _1c18675a8_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1c187410e_build(&_21213_ssp, _20834_tokens, &(_20913_s));
	return _20913_s;;
}



inline jule::Ptr<_1c0c4d781_VarDecl> _1c186991d_buildVarSt(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _21934_tokens) {
	jule::Ptr<_1c0c4d781_VarDecl> _22013_v = _1c18890ad_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	(*(_22013_v))._field_Scope=(*(_self_))._field_s;
	return _22013_v;;
}



inline jule::Ptr<_1c0c4db5a_RetSt> _1c1869c5e_buildRetSt(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _22533_tokens) {
	jule::Ptr<_1c0c4db5a_RetSt> _22613_st = jule::new_ptr<_1c0c4db5a_RetSt>(_1c0c4db5a_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		(_22533_tokens).mut_slice(1LL);;
		(*(_22613_st))._field_Expr=_1c18868d5_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22613_st;;
}



inline jule::Ptr<_1c0c4e2ed_Iter> _1c186a0a0_buildWhileNextIter(_1c18675a8_scopeParser* _self_, jule::Ptr<_1c1866c17_stmt>* _23642_s) {
	jule::Ptr<_1c0c4e2ed_Iter> _23713_it = jule::new_ptr<_1c0c4e2ed_Iter>(_1c0c4e2ed_Iter{._field_Token=(*((*(_23642_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _24013_tokens = (*((*(_23642_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1c0c4eb28_WhileKind> _24113_kind = jule::new_ptr<_1c0c4eb28_WhileKind>();;
	if ((_24013_tokens.len() > 0LL)) {
		(*(_24113_kind))._field_Expr=_1c18868d5_buildExpr((*(_self_))._field_p, &(_24013_tokens));
	};
	if (_1c18684bb_isLastSt(_self_)) {
		_1c186882e_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_24013_tokens=(*(_1c18691d1_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _25313_stTokens = _1c1880978_getBlockExpr(&(_24013_tokens));;
	if ((_25313_stTokens.len() > 0LL)) {
		jule::Ptr<_1c1866c17_stmt> _25517_stmt = jule::new_ptr<_1c1866c17_stmt>(_1c1866c17_stmt{._field_tokens=_25313_stTokens, ._field_terminated=(*((*(_23642_s))))._field_terminated});;
		(*(_24113_kind))._field_NextToken=_25313_stTokens[0LL];
		(*(_24113_kind))._field_Next=_1c1873c9b_buildSt(_self_, &(_25517_stmt));
	};
	jule::I64 _26313_i = _25313_stTokens.len();;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _26413_blockTokens = _1c1883b68_range(&(_26313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_24013_tokens));;
	if ((_26413_blockTokens == nullptr)) {
		_1c1867c18_stop(_self_);
		_1c186882e_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1c1868b92_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26313_i < _24013_tokens.len())) {
		_1c186882e_pushErr(_self_, _24013_tokens[_26313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_23713_it))._field_Scope=_1c18695cc_buildScope(_self_, &(_26413_blockTokens), _24013_tokens[(_26313_i - 1LL)]);
	(*(_23713_it))._field_Kind=jule::Any(_24113_kind, &__jule_any_type37);
	return _23713_it;;
}



inline jule::Ptr<_1c0c4eb28_WhileKind> _1c186a3e1_buildWhileIterKind(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _28142_tokens) {
	return jule::new_ptr<_1c0c4eb28_WhileKind>(_1c0c4eb28_WhileKind{._field_Expr=_1c18868d5_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _1c186a732_getRangeKindKeysTokens(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _28813_vars;;
	jule::Slice<_21ce0c86b_Log> _28819_errs;;
	({
		__jule_tuple_ssx_1c0c25406_Token__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c18843d8_parts(_28746_toks, static_cast<jule::U64>(5LLU), true);
		_28813_vars = __jule_assign_result.__jule_result_arg0;
		_28819_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_28819_errs);;
	return _28813_vars;;
}



inline jule::Ptr<_1c0c4d781_VarDecl> _1c186aa73_buildRangeKindKey(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1c0c4d781_VarDecl> _29713_key = jule::new_ptr<_1c0c4d781_VarDecl>(_1c0c4d781_VarDecl{._field_Token=(*(_29341_tokens))[0LL], });;
	if (((*((*(_29713_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_29713_key))._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_1c186882e_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*(_29713_key))._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_1c186882e_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_29713_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c186882e_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		_1c1868b92_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_29713_key))._field_Ident=(*((*(_29713_key))._field_Token))._field_Kind;
	return _29713_key;;
}



inline jule::Slice<jule::Ptr<_1c0c4d781_VarDecl>> _1c186adb4_buildRangeKindKeys(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>>* _31842_parts) {
	jule::Slice<jule::Ptr<_1c0c4d781_VarDecl>> _31917_keys = nullptr;;
	{
		auto expr = _31842_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5a14a0:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c25406_Token>> _32021_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c4d781_VarDecl>> &__jule_push_dest = _31917_keys; __jule_push_dest.push(_1c186aa73_buildRangeKindKey(_self_, &(_32021_tokens))); };
			}
			_iter_next_1ab5a14a0:;
			++it;
			goto _iter_begin_1ab5a14a0;
		}
		_iter_end_1ab5a14a0:;
	};
	return _31917_keys;;
}



inline void _1c186b227_setupRangeKindKeysPlain(_1c18675a8_scopeParser* _self_, jule::Ptr<_1c0c50530_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _32669_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _32713_keyTokens = _1c186a732_getRangeKindKeysTokens(_self_, _32669_tokens);;
	if ((_32713_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32713_keyTokens.len() > 2LL)) {
		_1c186882e_pushErr(_self_, (*((*(_32647_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1c0c4d781_VarDecl>> _33413_keys = _1c186adb4_buildRangeKindKeys(_self_, &(_32713_keyTokens));;
	(*((*(_32647_rng))))._field_KeyA=_33413_keys[0LL];
	if ((_33413_keys.len() > 1LL)) {
		(*((*(_32647_rng))))._field_KeyB=_33413_keys[1LL];
	};
}



inline void _1c186b58a_setupRangeKindKeysExplicit(_1c18675a8_scopeParser* _self_, jule::Ptr<_1c0c50530_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _34172_tokens) {
	jule::I64 _34213_i = 0LL;;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _34313_rang = _1c1883b68_range(&(_34213_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34172_tokens);;
	if ((_34213_i < (*(_34172_tokens)).len())) {
		_1c186882e_pushErr(_self_, (*((*(_34150_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1c186b227_setupRangeKindKeysPlain(_self_, _34150_rng, &(_34313_rang));
}



inline void _1c186b8ed_setupRangeKindKeys(_1c18675a8_scopeParser* _self_, jule::Ptr<_1c0c50530_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _35064_tokens) {
	if (((*((*(_35064_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1c186b58a_setupRangeKindKeysExplicit(_self_, _35042_rng, _35064_tokens);
		return;;
	};
	_1c186b227_setupRangeKindKeysPlain(_self_, _35042_rng, _35064_tokens);
}



inline jule::Ptr<_1c0c50530_RangeKind> _1c186bda4_buildRangeIterKind(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _35914_exprTokens, jule::Ptr<_1c0c25406_Token>* _35941_inToken) {
	jule::Ptr<_1c0c50530_RangeKind> _36013_rng = jule::new_ptr<_1c0c50530_RangeKind>(_1c0c50530_RangeKind{._field_InToken=(*(_35941_inToken)), });;
	if (((*(_35914_exprTokens)).len() == 0LL)) {
		_1c186882e_pushErr(_self_, (*(_36013_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _36013_rng;;
	};
	(*(_36013_rng))._field_Expr=_1c18868d5_buildExpr((*(_self_))._field_p, _35914_exprTokens);
	if (((*(_35842_var_tokens)).len() > 0LL)) {
		_1c186b8ed_setupRangeKindKeys(_self_, &(_36013_rng), _35842_var_tokens);
	};
	return _36013_rng;;
}



inline jule::Any _1c186c2a0_buildCommonIterKind(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _37443_tokens, jule::Ptr<_1c0c25406_Token>* _37462_err_tok) {
	jule::I64 _37513_braceN = 0LL;;
	{
		auto expr = _37443_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5aa267:;
		if (it != expr_end) {
			jule::I64 _37614_i = it - expr->begin();
			jule::Ptr<_1c0c25406_Token> _37621_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ab5ab3ab:;
						{
							(_37513_braceN)++;
							goto _iter_next_1ab5aa267;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ab5ab433:;
						{
							(_37513_braceN)--;
						}
					}
					_match_end_1ab5ab2e0:;
				};
				if ((_37513_braceN != 0LL)) {
					goto _iter_next_1ab5aa267;
				};
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1ab5aaec1:;
						{
							jule::Slice<jule::Ptr<_1c0c25406_Token>> _39321_declTokens = (*(_37443_tokens)).slice(0LL, _37614_i);;
							jule::Slice<jule::Ptr<_1c0c25406_Token>> _39421_exprTokens = (*(_37443_tokens)).slice((_37614_i + 1LL));;
							return jule::Any(_1c186bda4_buildRangeIterKind(_self_, &(_39321_declTokens), &(_39421_exprTokens), &(_37621_tok)), &__jule_any_type39);;
						}
					}
					_match_end_1ab5ac896:;
				};
			}
			_iter_next_1ab5aa267:;
			++it;
			_37614_i++;
			goto _iter_begin_1ab5aa267;
		}
		_iter_end_1ab5aa267:;
	};
	return jule::Any(_1c186a3e1_buildWhileIterKind(_self_, _37443_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_1c0c4e2ed_Iter> _1c186c5e1_buildCommonIter(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _40138_tokens) {
	jule::Ptr<_1c0c4e2ed_Iter> _40213_it = jule::new_ptr<_1c0c4e2ed_Iter>(_1c0c4e2ed_Iter{._field_Token=_40138_tokens[0LL], });;
	(_40138_tokens).mut_slice(1LL);;
	if ((_40138_tokens.len() == 0LL)) {
		_1c1867c18_stop(_self_);
		_1c186882e_pushErr(_self_, (*(_40213_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1c1868b92_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _41213_exprTokens = _1c1880978_getBlockExpr(&(_40138_tokens));;
	if ((_41213_exprTokens.len() > 0LL)) {
		(*(_40213_it))._field_Kind=_1c186c2a0_buildCommonIterKind(_self_, &(_41213_exprTokens), &((*(_40213_it))._field_Token));
	};
	jule::I64 _41613_i = _41213_exprTokens.len();;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _41713_scopeTokens = _1c1883b68_range(&(_41613_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40138_tokens));;
	if ((_41713_scopeTokens == nullptr)) {
		_1c1867c18_stop(_self_);
		_1c186882e_pushErr(_self_, (*(_40213_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1c1868b92_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41613_i < _40138_tokens.len())) {
		_1c186882e_pushErr(_self_, _40138_tokens[_41613_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_40213_it))._field_Scope=_1c18695cc_buildScope(_self_, &(_41713_scopeTokens), _40138_tokens[(_41613_i - 1LL)]);
	return _40213_it;;
}



inline jule::Ptr<_1c0c4e2ed_Iter> _1c186c932_buildIterSt(_1c18675a8_scopeParser* _self_, jule::Ptr<_1c1866c17_stmt>* _43135_st) {
	if ((*((*(_43135_st))))._field_terminated) {
		return _1c186a0a0_buildWhileNextIter(_self_, _43135_st);;
	};
	return _1c186c5e1_buildCommonIter(_self_, (*((*(_43135_st))))._field_tokens);;
}



inline jule::Ptr<_1c0c50909_BreakSt> _1c186cc73_buildBreakSt(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _43836_tokens) {
	jule::Ptr<_1c0c50909_BreakSt> _43913_brk = jule::new_ptr<_1c0c50909_BreakSt>(_1c0c50909_BreakSt{._field_Token=(*(_43836_tokens))[0LL], });;
	if (((*(_43836_tokens)).len() > 1LL)) {
		if (((*((*(_43836_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1c186882e_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1c1868b92_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_43913_brk))._field_Label=(*(_43836_tokens))[1LL];
			if (((*(_43836_tokens)).len() > 2LL)) {
				_1c186882e_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _43913_brk;;
}



inline jule::Ptr<_1c0c50cd3_ContSt> _1c186d0b4_buildContSt(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _45635_tokens) {
	jule::Ptr<_1c0c50cd3_ContSt> _45713_cont = jule::new_ptr<_1c0c50cd3_ContSt>(_1c0c50cd3_ContSt{._field_Token=(*(_45635_tokens))[0LL], });;
	if (((*(_45635_tokens)).len() > 1LL)) {
		if (((*((*(_45635_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1c186882e_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1c1868b92_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45713_cont))._field_Label=(*(_45635_tokens))[1LL];
			if (((*(_45635_tokens)).len() > 2LL)) {
				_1c186882e_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _45713_cont;;
}



inline jule::Ptr<_1c0c51289_If> _1c186d405_buildIf(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _47431_tokens) {
	jule::Ptr<_1c0c51289_If> _47513_model = jule::new_ptr<_1c0c51289_If>(_1c0c51289_If{._field_Token=(*(_47431_tokens))[0LL], });;
	((*(_47431_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _47913_exprTokens = _1c1880978_getBlockExpr(_47431_tokens);;
	jule::I64 _48013_i = 0LL;;
	if ((_47913_exprTokens.len() == 0LL)) {
		_1c186882e_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_48013_i=static_cast<jule::I64>(_47913_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _48613_scopeTokens = _1c1883b68_range(&(_48013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47431_tokens);;
	if ((_48613_scopeTokens == nullptr)) {
		_1c1867c18_stop(_self_);
		_1c186882e_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1c1868b92_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c25406_Token> _49313_end = (*(_47431_tokens))[(_48013_i - 1LL)];;
	if ((_48013_i < (*(_47431_tokens)).len())) {
		if (((*((*(_47431_tokens))[_48013_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47431_tokens))).mut_slice(_48013_i);;
		} else {
			_1c186882e_pushErr(_self_, (*(_47431_tokens))[_48013_i], jule::Str::lit("invalid syntax", 14));
			(*(_47431_tokens))=nullptr;
		};
	};
	(*(_47513_model))._field_Expr=_1c18868d5_buildExpr((*(_self_))._field_p, &(_47913_exprTokens));
	(*(_47513_model))._field_Scope=_1c18695cc_buildScope(_self_, &(_48613_scopeTokens), _49313_end);
	return _47513_model;;
}



inline jule::Ptr<_1c0c51663_Else> _1c186d746_buildElse(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _50733_tokens) {
	jule::Ptr<_1c0c51663_Else> _50813_els = jule::new_ptr<_1c0c51663_Else>(_1c0c51663_Else{._field_Token=(*(_50733_tokens))[0LL], });;
	((*(_50733_tokens))).mut_slice(1LL);;
	jule::I64 _51213_i = 0LL;;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _51313_scopeTokens = _1c1883b68_range(&(_51213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50733_tokens);;
	if ((_51313_scopeTokens == nullptr)) {
		if ((_51213_i < (*(_50733_tokens)).len())) {
			_1c186882e_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1c1867c18_stop(_self_);
			_1c186882e_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1c1868b92_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51213_i < (*(_50733_tokens)).len())) {
		_1c186882e_pushErr(_self_, (*(_50733_tokens))[_51213_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_50813_els))._field_Scope=_1c18695cc_buildScope(_self_, &(_51313_scopeTokens), (*(_50733_tokens))[(_51213_i - 1LL)]);
	return _50813_els;;
}



inline jule::Ptr<_1c0c51b19_Conditional> _1c186da87_buildIfElseChain(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _53139_tokens) {
	jule::Ptr<_1c0c51b19_Conditional> _53213_chain = jule::new_ptr<_1c0c51b19_Conditional>(_1c0c51b19_Conditional{._field_Head=_1c186d405_buildIf(_self_, &(_53139_tokens)), });;
	if (((*(_53213_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53139_tokens.len() != 0LL)) {
		{
			if (((*(_53139_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1ab5c56e4;
			};
			if (((_53139_tokens.len() > 1LL) && ((*(_53139_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53139_tokens).mut_slice(1LL);;
				jule::Ptr<_1c0c51289_If> _54421_elif = _1c186d405_buildIf(_self_, &(_53139_tokens));;
				{ jule::Slice<jule::Ptr<_1c0c51289_If>> &__jule_push_dest = (*(_53213_chain))._field_Tail; __jule_push_dest.push(_54421_elif); };
				goto _iter_next_1ab5c56e4;
			};
			(*(_53213_chain))._field_Default=_1c186d746_buildElse(_self_, &(_53139_tokens));
			goto _iter_end_1ab5c56e4;
		}
	_iter_next_1ab5c56e4:;
	}
	_iter_end_1ab5c56e4:;;
	return _53213_chain;;
}



inline jule::Ptr<_1c0c3ed27_Expr> _1c186ddc8_buildCoCallSt(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _55436_tokens) {
	jule::Ptr<_1c0c25406_Token> _5559_token = _55436_tokens[0LL];;
	(_55436_tokens).mut_slice(1LL);;
	jule::Ptr<_1c0c3ed27_Expr> _55713_e = _1c18868d5_buildExpr((*(_self_))._field_p, &(_55436_tokens));;
	if ((_55713_e == nullptr)) {
		return _55713_e;;
	};
	{
		auto &_match_expr{ (*(_55713_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ab5c96c6:;
			{
				(*((*(_55713_e))._field_Kind.cast_ptr<_1c0c43a51_FnCallExpr>(&__jule_any_type107)))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1ab5c9c48:;
			{
				_1c186882e_pushErr(_self_, _5559_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1ab5c9be3:;
	};
	return _55713_e;;
}



inline jule::Ptr<_1c0c484a1_GotoSt> _1c186e219_buildGotoSt(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _57035_tokens) {
	jule::Ptr<_1c0c484a1_GotoSt> _57113_gt = jule::new_ptr<_1c0c484a1_GotoSt>(_1c0c484a1_GotoSt{._field_Token=(*(_57035_tokens))[0LL], });;
	if (((*(_57035_tokens)).len() == 1LL)) {
		_1c186882e_pushErr(_self_, (*(_57113_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57035_tokens)).len() > 2LL)) {
		_1c186882e_pushErr(_self_, (*(_57035_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1c0c25406_Token> _58013_identToken = (*(_57035_tokens))[1LL];;
	if (((*(_58013_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c186882e_pushErr(_self_, _58013_identToken, jule::Str::lit("invalid syntax", 14));
		_1c1868b92_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57113_gt;;
	};
	(*(_57113_gt))._field_Label=_58013_identToken;
	return _57113_gt;;
}



inline jule::Ptr<_1c0c4879d_FallSt> _1c186e55a_buildFallSt(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _59035_tokens) {
	jule::Ptr<_1c0c4879d_FallSt> _59113_fll = jule::new_ptr<_1c0c4879d_FallSt>(_1c0c4879d_FallSt{._field_Token=(*(_59035_tokens))[0LL]});;
	if (((*(_59035_tokens)).len() > 1LL)) {
		_1c186882e_pushErr(_self_, (*(_59035_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _59113_fll;;
}



inline jule::Ptr<_1c0c52356_TypeAliasDecl> _1c186e89b_buildTypeAliasSt(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _60040_tokens) {
	jule::Ptr<_1c0c52356_TypeAliasDecl> _60113_tad = _1c1888178_buildTypeAliasDecl((*(_self_))._field_p, _60040_tokens);;
	(*(_60113_tad))._field_Scope=(*(_self_))._field_s;
	return _60113_tad;;
}



inline void _1c186ed74_pushCaseExpr(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _60635_tokens, jule::Ptr<_1c0c25406_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1c0c3ed27_Expr>>* _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61317_i = 0LL;;
		jule::Ptr<_1c0c3a9e3_TypeDecl> _61417_t;;
		jule::Bool _61420_ok = false;;
		({
			__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType((*(_self_))._field_p, &(_60635_tokens), (&(_61317_i)), true);
			_61417_t = __jule_assign_result.__jule_result_arg0;
			_61420_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61420_ok) {
			{ jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(jule::new_ptr<_1c0c3ed27_Expr>(_1c0c3ed27_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61417_t, &__jule_any_type88)})); };
			if ((_61317_i < _60635_tokens.len())) {
				_1c186882e_pushErr(_self_, _60635_tokens[_61317_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(_1c18868d5_buildExpr((*(_self_))._field_p, &(_60635_tokens))); };
}



inline jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _1c187032a_buildCaseExprs(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _63038_tokens, jule::Ptr<_1c0c25406_Token>* _63061_colon, jule::Bool _63076_typeMatch) {
	jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _63113_exprs = jule::Slice<jule::Ptr<_1c0c3ed27_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63313_braceN = 0LL;;
	jule::I64 _63413_j = 0LL;;
	{
		auto expr = _63038_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5d5605:;
		if (it != expr_end) {
			jule::I64 _63514_i = it - expr->begin();
			jule::Ptr<_1c0c25406_Token> _63521_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63521_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ab5d6aac:;
						{
							(_63313_braceN)++;
							goto _iter_next_1ab5d5605;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ab5d6b34:;
						{
							(_63313_braceN)--;
							goto _iter_next_1ab5d5605;
						}
					}
					_match_end_1ab5d69e1:;
				};
				if ((_63313_braceN != 0LL)) {
					goto _iter_next_1ab5d5605;
				};
				{
					
					if (((*(_63521_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1ab5d7edc:;
						{
							jule::Slice<jule::Ptr<_1c0c25406_Token>> _65417_exprTokens = (*(_63038_tokens)).slice(_63413_j, _63514_i);;
							if ((_65417_exprTokens.len() == 0LL)) {
								_1c186882e_pushErr(_self_, _63521_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1c186ed74_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63413_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63113_exprs));
							};
							_63413_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if (((*(_63521_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1ab5d8064:;
						{
							(*(_63061_colon))=_63521_tok;
							_1c186ed74_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63413_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63113_exprs));
							((*(_63038_tokens))).mut_slice((_63514_i + 1LL));;
							return _63113_exprs;;
						}
					}
					_match_end_1ab5d79c0:;
				};
			}
			_iter_next_1ab5d5605:;
			++it;
			_63514_i++;
			goto _iter_begin_1ab5d5605;
		}
		_iter_end_1ab5d5605:;
	};
	_1c186882e_pushErr(_self_, (*(_63038_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_63038_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1c0c4aa14_ScopeTree> _1c187066b_buildCaseScope(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _67338_tokens) {
	jule::I64 _67413_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67617_i = 0LL;;
			jule::Slice<jule::Ptr<_1c0c25406_Token>> _67717_next;;
			({
				__jule_tuple_sx_1c0c25406_Token__jule_tuple_bool __jule_assign_result = _1c18668d7_skipSt(&(_67617_i), (*(_67338_tokens)).slice(_67413_n));
				_67717_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67717_next.len() == 0LL)) {
				goto _iter_end_1ab5db133;
			};
			jule::Ptr<_1c0c25406_Token> _68113_tok = _67717_next[0LL];;
			if (((*(_68113_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_67413_n+=_67617_i;
				goto _iter_next_1ab5db133;
			};
			jule::Slice<jule::Ptr<_1c0c25406_Token>> _68617_scopeTokens = (*(_67338_tokens)).slice(0LL, _67413_n);;
			jule::Ptr<_1c0c4aa14_ScopeTree> _68717_scope = _1c18695cc_buildScope(_self_, &(_68617_scopeTokens), (*(_67338_tokens))[_67413_n]);;
			((*(_67338_tokens))).mut_slice(_67413_n);;
			return _68717_scope;;
		}
	_iter_next_1ab5db133:;
	}
	_iter_end_1ab5db133:;;
	jule::Ptr<_1c0c25406_Token> _69117_end;;
	if (((*(_67338_tokens)).len() > 0LL)) {
		_69117_end=(*(_67338_tokens))[((*(_67338_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1c0c4aa14_ScopeTree> _69513_scope = _1c18695cc_buildScope(_self_, _67338_tokens, _69117_end);;
	(*(_67338_tokens))=nullptr;
	return _69513_scope;;
}



inline __jule_tuple_x_1c0c5280c_Case__jule_tuple_bool _1c1870a67_buildCase(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _70033_tokens, jule::Bool _70051_typeMatch) {
	__jule_tuple_x_1c0c5280c_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c0c5280c_Case> _70113_c = jule::new_ptr<_1c0c5280c_Case>(_1c0c5280c_Case{._field_Token=(*(_70033_tokens))[0LL], });;
	((*(_70033_tokens))).mut_slice(1LL);;
	jule::Ptr<_1c0c25406_Token> _70517_colon = nullptr;;
	(*(_70113_c))._field_Exprs=_1c187032a_buildCaseExprs(_self_, _70033_tokens, &(_70517_colon), _70051_typeMatch);
	(*(_70113_c))._field_Scope=_1c187066b_buildCaseScope(_self_, _70033_tokens);
	if (((*((*(_70113_c))._field_Scope))._field_End == nullptr)) {
		(*((*(_70113_c))._field_Scope))._field_End=_70517_colon;
	};
	jule::Bool _7119_isDefault = ((*(_70113_c))._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70113_c;
	__jule_func_result.__jule_result_arg1 = _7119_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1c0c5280c_Case__jule_tuple_x_1c0c51663_Else _1c1870e63_buildCases(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _71533_tokens, jule::Bool _71551_typeMatch) {
	__jule_tuple_sx_1c0c5280c_Case__jule_tuple_x_1c0c51663_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1c0c5280c_Case>> _71617_cases = nullptr;;
	jule::Ptr<_1c0c51663_Else> _71717_def = nullptr;;
	jule::Bool _71813_defNotLast = false;;
	while ((_71533_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1c0c25406_Token> _72017_tok = _71533_tokens[0LL];;
			if (((*(_72017_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1c186882e_pushErr(_self_, _72017_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1ab5e3525;
			};
			jule::Ptr<_1c0c5280c_Case> _72517_c;;
			jule::Bool _72520_isDefault = false;;
			({
				__jule_tuple_x_1c0c5280c_Case__jule_tuple_bool __jule_assign_result = _1c1870a67_buildCase(_self_, &(_71533_tokens), _71551_typeMatch);
				_72517_c = __jule_assign_result.__jule_result_arg0;
				_72520_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72520_isDefault) {
				(*(_72517_c))._field_Token=_72017_tok;
				if ((_71717_def == nullptr)) {
					_71717_def=jule::new_ptr<_1c0c51663_Else>(_1c0c51663_Else{._field_Token=(*(_72517_c))._field_Token, ._field_Scope=(*(_72517_c))._field_Scope});
				} else {
					_1c186882e_pushErr(_self_, _72017_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_71813_defNotLast=(_71813_defNotLast || (_71717_def != nullptr));
				{ jule::Slice<jule::Ptr<_1c0c5280c_Case>> &__jule_push_dest = _71617_cases; __jule_push_dest.push(_72517_c); };
			};
		}
	_iter_next_1ab5e3525:;
	}
	_iter_end_1ab5e3525:;;
	if (_71813_defNotLast) {
		_1c186882e_pushErr(_self_, (*(_71717_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71617_cases;
	__jule_func_result.__jule_result_arg1 = _71717_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1c0c53049_MatchCase> _1c18712a4_buildMatchCase(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _74937_tokens) {
	jule::Ptr<_1c0c53049_MatchCase> _75013_m = jule::new_ptr<_1c0c53049_MatchCase>(_1c0c53049_MatchCase{._field_Token=_74937_tokens[0LL], });;
	(_74937_tokens).mut_slice(1LL);;
	if (((_74937_tokens.len() > 0LL) && ((*(_74937_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_75013_m))._field_TypeMatch=true;
		(_74937_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _76013_exprTokens = _1c1880978_getBlockExpr(&(_74937_tokens));;
	if ((_76013_exprTokens.len() > 0LL)) {
		(*(_75013_m))._field_Expr=_1c18868d5_buildExpr((*(_self_))._field_p, &(_76013_exprTokens));
	} else if ((*(_75013_m))._field_TypeMatch) {
		_1c186882e_pushErr(_self_, (*(_75013_m))._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I64 _76713_i = _76013_exprTokens.len();;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _76813_blockToks = _1c1883b68_range(&(_76713_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74937_tokens));;
	if ((_76813_blockToks == nullptr)) {
		_1c1867c18_stop(_self_);
		_1c186882e_pushErr(_self_, (*(_75013_m))._field_Token, jule::Str::lit("body is not exist", 17));
		_1c1868b92_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76713_i < _74937_tokens.len())) {
		_1c186882e_pushErr(_self_, _74937_tokens[_76713_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_75013_m))._field_End=_74937_tokens[(_76713_i - 1LL)];
	({
		__jule_tuple_sx_1c0c5280c_Case__jule_tuple_x_1c0c51663_Else __jule_assign_result = _1c1870e63_buildCases(_self_, _76813_blockToks, (*(_75013_m))._field_TypeMatch);
		(*(_75013_m))._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*(_75013_m))._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75013_m;;
}



inline jule::Ptr<_1c0c4aa14_ScopeTree> _1c18715e5_buildScopeSt(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _78235_tokens) {
	jule::Bool _78313_isUnsafe = false;;
	jule::Bool _78413_isDeferred = false;;
	jule::Ptr<_1c0c25406_Token> _78513_token = _78235_tokens[0LL];;
	if (((*(_78513_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_78313_isUnsafe=true;
		(_78235_tokens).mut_slice(1LL);;
		if ((_78235_tokens.len() == 0LL)) {
			_1c186882e_pushErr(_self_, _78513_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_78513_token=_78235_tokens[0LL];
		if (((*(_78513_token))._field_Id == static_cast<jule::U64>(33LLU))) {
			_78413_isDeferred=true;
			(_78235_tokens).mut_slice(1LL);;
			if ((_78235_tokens.len() == 0LL)) {
				_1c186882e_pushErr(_self_, _78513_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78513_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_78413_isDeferred=true;
		(_78235_tokens).mut_slice(1LL);;
		if ((_78235_tokens.len() == 0LL)) {
			_1c186882e_pushErr(_self_, _78513_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81113_i = 0LL;;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _81213_scopeTokens = _1c1883b68_range(&(_81113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78235_tokens));;
	if ((_81213_scopeTokens == nullptr)) {
		_1c186882e_pushErr(_self_, _78513_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_81113_i < _78235_tokens.len())) {
		_1c186882e_pushErr(_self_, _78235_tokens[_81113_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1c0c4aa14_ScopeTree> _81913_scope = _1c18695cc_buildScope(_self_, &(_81213_scopeTokens), _78235_tokens[(_81113_i - 1LL)]);;
	(*(_81913_scope))._field_Unsafety=_78313_isUnsafe;
	(*(_81913_scope))._field_Deferred=_78413_isDeferred;
	return _81913_scope;;
}



inline jule::Ptr<_1c0c480c7_LabelSt> _1c1871936_buildLabelSt(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _82536_tokens) {
	jule::Ptr<_1c0c480c7_LabelSt> _82613_lbl = jule::new_ptr<_1c0c480c7_LabelSt>(_1c0c480c7_LabelSt{._field_Token=(*(_82536_tokens))[0LL], ._field_Ident=(*((*(_82536_tokens))[0LL]))._field_Kind});;
	if (((*(_82536_tokens)).len() > 2LL)) {
		((*(_82536_tokens))).mut_slice(2LL);;
		_1c1868e4a_insertAsNext(_self_, _82536_tokens);
	};
	return _82613_lbl;;
}



inline __jule_tuple__1c0c4a151_StmtData__jule_tuple_bool _1c1871c77_buildIdSt(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _84033_tokens) {
	__jule_tuple__1c0c4a151_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84033_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1c0c25406_Token> _84513_token = (*(_84033_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84513_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1aaded02d:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1c1871936_buildLabelSt(_self_, _84033_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aaded45c:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1c18820d9_assignInfo> _1c18720b8_buildAssignInfo(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _85439_tokens) {
	jule::Ptr<_1c18820d9_assignInfo> _85513_info = jule::new_ptr<_1c18820d9_assignInfo>(_1c18820d9_assignInfo{._field_ok=true});;
	jule::I64 _85813_braceN = 0LL;;
	{
		auto expr = _85439_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aadee370:;
		if (it != expr_end) {
			jule::I64 _85914_i = it - expr->begin();
			jule::Ptr<_1c0c25406_Token> _85921_token = *it;
			{
				{
					auto &_match_expr{ (*(_85921_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aae001b7:;
						{
							(_85813_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aae0023e:;
						{
							(_85813_braceN)--;
						}
					}
					_match_end_1aae000eb:;
				};
				{
					
					if ((_85813_braceN > 0LL)) {
						_case_begin_1aae010a8:;
						{
							goto _iter_next_1aadee370;
						}
					}
					else if (((!(_1c0c2a362_IsAssignOp((*(_85921_token))._field_Id))) && ((*(_85921_token))._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1aae01130:;
						{
							goto _iter_next_1aadee370;
						}
					}
					_match_end_1aae01031:;
				};
				(*(_85513_info))._field_l=(*(_85439_tokens)).slice(0LL, _85914_i);
				if (((*(_85513_info))._field_l.len() == 0LL)) {
					(*(_85513_info))._field_ok=false;
				};
				(*(_85513_info))._field_setter=_85921_token;
				if (((_85914_i + 1LL) >= (*(_85439_tokens)).len())) {
					(*(_85513_info))._field_r=nullptr;
					(*(_85513_info))._field_ok=_1c0c2a098_IsPostfixOp((*((*(_85513_info))._field_setter))._field_Id);
					goto _iter_end_1aadee370;
				};
				(*(_85513_info))._field_r=(*(_85439_tokens)).slice((_85914_i + 1LL));
				if (_1c0c2a098_IsPostfixOp((*((*(_85513_info))._field_setter))._field_Id)) {
					if (((*(_85513_info))._field_r.len() > 0LL)) {
						_1c186882e_pushErr(_self_, (*(_85513_info))._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*(_85513_info))._field_r=nullptr;
					};
				};
				goto _iter_end_1aadee370;
			}
			_iter_next_1aadee370:;
			++it;
			_85914_i++;
			goto _iter_begin_1aadee370;
		}
		_iter_end_1aadee370:;
	};
	return _85513_info;;
}



inline jule::Ptr<_1c0c48e0d_AssignLeft> _1c1872409_buildAssignL(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _89936_tokens) {
	jule::Ptr<_1c0c48e0d_AssignLeft> _90013_l = jule::new_ptr<_1c0c48e0d_AssignLeft>(_1c0c48e0d_AssignLeft{._field_Token=(*(_89936_tokens))[0LL], });;
	if (((*((*(_89936_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_90013_l))._field_Ident=(*((*(_90013_l))._field_Token))._field_Kind;
	};
	(*(_90013_l))._field_Expr=_1c18868d5_buildExpr((*(_self_))._field_p, _89936_tokens);
	return _90013_l;;
}



inline jule::Slice<jule::Ptr<_1c0c48e0d_AssignLeft>> _1c187274a_buildAssignLs(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>>* _91037_parts) {
	jule::Slice<jule::Ptr<_1c0c48e0d_AssignLeft>> _91117_lefts = nullptr;;
	{
		auto expr = _91037_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae089ea:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c25406_Token>> _91221_part = *it;
			{
				jule::Ptr<_1c0c48e0d_AssignLeft> _91317_l = _1c1872409_buildAssignL(_self_, &(_91221_part));;
				{ jule::Slice<jule::Ptr<_1c0c48e0d_AssignLeft>> &__jule_push_dest = _91117_lefts; __jule_push_dest.push(_91317_l); };
			}
			_iter_next_1aae089ea:;
			++it;
			goto _iter_begin_1aae089ea;
		}
		_iter_end_1aae089ea:;
	};
	return _91117_lefts;;
}



inline __jule_tuple_x_1c0c49491_AssignSt__jule_tuple_bool _1c1872a8b_buildPlainAssign(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _91940_tokens) {
	__jule_tuple_x_1c0c49491_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c18820d9_assignInfo> _92013_info = _1c18720b8_buildAssignInfo(_self_, _91940_tokens);;
	if ((!((*(_92013_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0c49491_AssignSt> _92513_assign = jule::new_ptr<_1c0c49491_AssignSt>(_1c0c49491_AssignSt{._field_Setter=(*(_92013_info))._field_setter, });;
	if (((*((*(_92013_info))._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_92513_assign))._field_Declarative=true;
		(*(_92513_assign))._field_Right=_1c18868d5_buildExpr((*(_self_))._field_p, &((*(_92013_info))._field_r));
		jule::Bool _93313_ok = _1c1872e87_buildDeclAssign1(_self_, &((*(_92013_info))._field_l), &(_92513_assign));;
		__jule_func_result.__jule_result_arg0 = _92513_assign;
		__jule_func_result.__jule_result_arg1 = _93313_ok;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _93713_parts;;
	jule::Slice<_21ce0c86b_Log> _93720_errs;;
	({
		__jule_tuple_ssx_1c0c25406_Token__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c18843d8_parts(&((*(_92013_info))._field_l), static_cast<jule::U64>(5LLU), true);
		_93713_parts = __jule_assign_result.__jule_result_arg0;
		_93720_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93720_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_93720_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*(_92513_assign))._field_Left=_1c187274a_buildAssignLs(_self_, &(_93713_parts));
	if (((*(_92013_info))._field_r != nullptr)) {
		(*(_92513_assign))._field_Right=_1c18868d5_buildExpr((*(_self_))._field_p, &((*(_92013_info))._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _92513_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1c1872e87_buildDeclAssign1(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _95140_lefts, jule::Ptr<_1c0c49491_AssignSt>* _95162_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _95313_parts;;
	jule::Slice<_21ce0c86b_Log> _95320_errs;;
	({
		__jule_tuple_ssx_1c0c25406_Token__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c18843d8_parts(_95140_lefts, static_cast<jule::U64>(5LLU), true);
		_95313_parts = __jule_assign_result.__jule_result_arg0;
		_95320_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95320_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_95320_errs);;
		return false;;
	};
	{
		auto expr = &(_95313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae1251a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c25406_Token>> _95921_part = *it;
			{
				jule::Bool _96017_isMut = false;;
				jule::Bool _96117_isRef = false;;
				jule::Ptr<_1c0c25406_Token> _96313_token = _95921_part[0LL];;
				if (((*(_96313_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_96017_isMut=true;
					(_95921_part).mut_slice(1LL);;
					if ((_95921_part.len() == 0LL)) {
						_1c186882e_pushErr(_self_, _96313_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_1aae1251a;
					};
				};
				if (((*(_95921_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_96117_isRef=true;
					(_95921_part).mut_slice(1LL);;
					if ((_95921_part.len() == 0LL)) {
						_1c186882e_pushErr(_self_, _96313_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_1aae1251a;
					};
				};
				if ((((*(_95921_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_95921_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1c186882e_pushErr(_self_, _96313_token, jule::Str::lit("invalid syntax", 14));
					goto _iter_next_1aae1251a;
				};
				jule::Ptr<_1c0c48e0d_AssignLeft> _98717_l = _1c1872409_buildAssignL(_self_, &(_95921_part));;
				(*(_98717_l))._field_Mutable=_96017_isMut;
				(*(_98717_l))._field_Reference=_96117_isRef;
				{ jule::Slice<jule::Ptr<_1c0c48e0d_AssignLeft>> &__jule_push_dest = (*((*(_95162_assign))))._field_Left; __jule_push_dest.push(_98717_l); };
			}
			_iter_next_1aae1251a:;
			++it;
			goto _iter_begin_1aae1251a;
		}
		_iter_end_1aae1251a:;
	};
	return true;;
}



inline __jule_tuple_x_1c0c49491_AssignSt__jule_tuple_bool _1c18732c8_buildDeclAssign(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _99638_tokens) {
	__jule_tuple_x_1c0c49491_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99638_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99638_tokens).mut_slice(1LL);;
	jule::Ptr<_1c0c25406_Token> _100213_token = _99638_tokens[0LL];;
	if (((*(_100213_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0c49491_AssignSt> _100713_assign = jule::new_ptr<_1c0c49491_AssignSt>(_1c0c49491_AssignSt{._field_Declarative=true, });;
	jule::I64 _101113_i = 0LL;;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _101213_rang = _1c1883b68_range(&(_101113_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_99638_tokens));;
	if ((_101213_rang == nullptr)) {
		_1c186882e_pushErr(_self_, _100213_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_101113_i + 1LL) < _99638_tokens.len())) {
		(*(_100713_assign))._field_Setter=_99638_tokens[_101113_i];
		if (((*((*(_100713_assign))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1c186882e_pushErr(_self_, (*(_100713_assign))._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_101113_i)++;
		jule::Slice<jule::Ptr<_1c0c25406_Token>> _102217_exprTokens = _99638_tokens.slice(_101113_i);;
		(*(_100713_assign))._field_Right=_1c18868d5_buildExpr((*(_self_))._field_p, &(_102217_exprTokens));
	};
	jule::Bool _10269_ok = _1c1872e87_buildDeclAssign1(_self_, &(_101213_rang), &(_100713_assign));;
	__jule_func_result.__jule_result_arg0 = _100713_assign;
	__jule_func_result.__jule_result_arg1 = _10269_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c0c49491_AssignSt__jule_tuple_bool _1c1873619_buildAssignSt(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _103037_tokens) {
	__jule_tuple_x_1c0c49491_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1c1882491_checkAssignTokens(_103037_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_103037_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1aae1e505:;
			{
				({
					__jule_tuple_x_1c0c49491_AssignSt__jule_tuple_bool __jule_assign_result = _1c18732c8_buildDeclAssign(_self_, (*(_103037_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1aae1e109:;
			{
				({
					__jule_tuple_x_1c0c49491_AssignSt__jule_tuple_bool __jule_assign_result = _1c1872a8b_buildPlainAssign(_self_, _103037_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1aae1e093:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1c0c406eb_UseExpr> _1c187395a_buildUseExpr(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _104536_tokens) {
	if (((*(_104536_tokens)).len() == 1LL)) {
		_1c186882e_pushErr(_self_, (*(_104536_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1c0c406eb_UseExpr> _105013_ue = jule::new_ptr<_1c0c406eb_UseExpr>(_1c0c406eb_UseExpr{._field_Token=(*(_104536_tokens))[0LL], });;
	((*(_104536_tokens))).mut_slice(1LL);;
	(*(_105013_ue))._field_Expr=_1c18868d5_buildExpr((*(_self_))._field_p, _104536_tokens);
	return _105013_ue;;
}



inline jule::Any _1c1873c9b_buildSt(_1c18675a8_scopeParser* _self_, jule::Ptr<_1c1866c17_stmt>* _105831_st) {
	jule::Ptr<_1c0c25406_Token> _105913_token = (*((*(_105831_st))))._field_tokens[0LL];;
	if (((*(_105913_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _106117_s = jule::Any(nullptr);;
		jule::Bool _106120_ok = false;;
		({
			__jule_tuple__1c0c4a151_StmtData__jule_tuple_bool __jule_assign_result = _1c1871c77_buildIdSt(_self_, &((*((*(_105831_st))))._field_tokens));
			_106117_s = __jule_assign_result.__jule_result_arg0;
			_106120_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_106120_ok) {
			return _106117_s;;
		};
	};
	jule::Ptr<_1c0c49491_AssignSt> _106713_s;;
	jule::Bool _106716_ok = false;;
	({
		__jule_tuple_x_1c0c49491_AssignSt__jule_tuple_bool __jule_assign_result = _1c1873619_buildAssignSt(_self_, &((*((*(_105831_st))))._field_tokens));
		_106713_s = __jule_assign_result.__jule_result_arg0;
		_106716_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106716_ok) {
		return jule::Any(_106713_s, &__jule_any_type58);;
	};
	{
		auto &_match_expr{ (*(_105913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1aae24708:;
			{
				return jule::Any(_1c187395a_buildUseExpr(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1aae241a8:;
			{
				return jule::Any(_1c186991d_buildVarSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1aae24906:;
			{
				return jule::Any(_1c1869c5e_buildRetSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1aae2496c:;
			{
				return jule::Any(_1c186c932_buildIterSt(_self_, _105831_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1aae249d3:;
			{
				return jule::Any(_1c186cc73_buildBreakSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1aae24a49:;
			{
				return jule::Any(_1c186d0b4_buildContSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1aae24ac1:;
			{
				return jule::Any(_1c186da87_buildIfElseChain(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1aae24b48:;
			{
				return jule::Any(_1c186ddc8_buildCoCallSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1aae24bc0:;
			{
				return jule::Any(_1c186e219_buildGotoSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1aae24c47:;
			{
				return jule::Any(_1c186e55a_buildFallSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aae24cbe:;
			{
				return jule::Any(_1c186e89b_buildTypeAliasSt(_self_, &((*((*(_105831_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1aae24d46:;
			{
				return jule::Any(_1c18712a4_buildMatchCase(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1aae24dbd:;
			{
				return jule::Any(_1c18715e5_buildScopeSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1aae24e45:;
			{
				return jule::Any(_1c18715e5_buildScopeSt(_self_, (*((*(_105831_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		_match_end_1aae2451b:;
	};
	jule::Ptr<_1c0c3ed27_Expr> _110613_expr = _1c18868d5_buildExpr((*(_self_))._field_p, &((*((*(_105831_st))))._field_tokens));;
	if ((_110613_expr != nullptr)) {
		return jule::Any(_110613_expr, &__jule_any_type52);;
	};
	_1c186882e_pushErr(_self_, _105913_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1c187410e_build(_1c18675a8_scopeParser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _111429_tokens, jule::Ptr<_1c0c4aa14_ScopeTree>* _111452_s) {
	if (((*(_111452_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1c18670be_splitStmts(_111429_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_111452_s));
	while (((!(_1c18684bb_isLastSt(_self_))) && (!(_1c1868235_finished(_self_))))) {
		{
			jule::Ptr<_1c1866c17_stmt> _112217_st = _1c18691d1_next(_self_);;
			jule::Any _112317_data = _1c1873c9b_buildSt(_self_, &(_112217_st));;
			if ((_112317_data != nullptr)) {
				{ jule::Slice<_1c0c4a3a4_Stmt> &__jule_push_dest = (*((*(_self_))._field_s))._field_Stmts; __jule_push_dest.push(_1c0c4a3a4_Stmt{._field_Token=(*(_112217_st))._field_tokens[0LL], ._field_Data=_112317_data}); };
			};
			if (_1c1867e9e_stopped(_self_)) {
				goto _iter_end_1aae2de1b;
			};
		}
	_iter_next_1aae2de1b:;
	}
	_iter_end_1aae2de1b:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c18675a8_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1c1875440_pushErr(_1c1874b7b_exprBuilder* _self_, jule::Ptr<_1c0c25406_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1c1886231_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1c18757a3_pushSuggestion(_1c1874b7b_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1c1886594_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1c0c409e8_TupleExpr> _1c1875ae4_buildTuple(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>>* _5434_parts) {
	jule::Ptr<_1c0c409e8_TupleExpr> _5513_tuple = jule::new_ptr<_1c0c409e8_TupleExpr>(_1c0c409e8_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1c0c3ed27_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae4adc2:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c25406_Token>> _5821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> &__jule_push_dest = (*(_5513_tuple))._field_Expr; __jule_push_dest.push(_1c187eed8_buildFromTokens(_self_, _5821_part)); };
			}
			_iter_next_1aae4adc2:;
			++it;
			goto _iter_begin_1aae4adc2;
		}
		_iter_end_1aae4adc2:;
	};
	return _5513_tuple;;
}



inline jule::Ptr<_1c0c40dc2_LitExpr> _1c1875e35_buildLit(_1c1874b7b_exprBuilder* _self_, jule::Ptr<_1c0c25406_Token> _6427_token) {
	return jule::new_ptr<_1c0c40dc2_LitExpr>(_1c0c40dc2_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _1c18765b7_buildSingle(_1c1874b7b_exprBuilder* _self_, jule::Ptr<_1c0c25406_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1aae4cdb3:;
			{
				return jule::Any(_1c1875e35_buildLit(_self_, _7534_token), &__jule_any_type101);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1aae4ce3a:;
			{
				return jule::Any(jule::new_ptr<_1c0c422ad_VariadicExpr>(_1c0c422ad_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1aae4ceb2:;
			{
				return jule::Any(_1c18813c4_buildIdentExpr(&(_7534_token)), &__jule_any_type79);;
			}
		}
		_match_end_1aae4ccd6:;
	};
	_1c1875440_pushErr(_self_, _7534_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1c0c41752_IdentExpr> _1c1876908_buildBindIdent(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1c1875440_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c18757a3_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c25406_Token> _10013_token = (*(_9238_tokens))[2LL];;
	if (((*(_10013_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1875440_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c18757a3_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c41752_IdentExpr> _10613_expr = _1c18813c4_buildIdentExpr(&(_10013_token));;
	(*(_10613_expr))._field_Binded=true;
	return _10613_expr;;
}



inline jule::Ptr<_1c0c41dd4_UnaryExpr> _1c1876c49_buildUnary(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _11133_tokens) {
	jule::Ptr<_1c0c25406_Token> _11213_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1c1875440_pushErr(_self_, _11213_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1c0c25b43_IsUnaryOp((*(_11213_op))._field_Id)))) {
		_1c1875440_pushErr(_self_, _11213_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_11213_op))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11133_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1c0c41dd4_UnaryExpr>(_1c0c41dd4_UnaryExpr{._field_Op=_11213_op, ._field_Expr=_1c187eed8_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1c0c42e3a_SubIdentExpr> _1c187708a_buildObjSubIdent(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _13239_tokens) {
	jule::I64 _13313_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1c0c25406_Token> _13413_identToken = _13239_tokens[_13313_i];;
	(_13313_i)--;
	(_13239_tokens).mut_slice(0LL, _13313_i);;
	if ((_13239_tokens.len() == 0LL)) {
		_1c1875440_pushErr(_self_, _13413_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c0c42e3a_SubIdentExpr>(_1c0c42e3a_SubIdentExpr{._field_Expr=_1c187eed8_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13413_identToken});;
}



inline jule::Ptr<_1c0c42a61_NsSelectionExpr> _1c18773cb_buildNsSubIdent(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _14739_tokens) {
	jule::Ptr<_1c0c42a61_NsSelectionExpr> _14813_ns = jule::new_ptr<_1c0c42a61_NsSelectionExpr>();;
	{
		auto expr = _14739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae57b37:;
		if (it != expr_end) {
			jule::I64 _14914_i = it - expr->begin();
			jule::Ptr<_1c0c25406_Token> _14921_token = *it;
			{
				if (((_14914_i & 1LL) == 0LL)) {
					if (((*(_14921_token))._field_Id != static_cast<jule::U64>(1LLU))) {
						_1c1875440_pushErr(_self_, _14921_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1c18757a3_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					{ jule::Slice<jule::Ptr<_1c0c25406_Token>> &__jule_push_dest = (*(_14813_ns))._field_Ns; __jule_push_dest.push(_14921_token); };
				} else if (((*(_14921_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c1875440_pushErr(_self_, _14921_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1c18757a3_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1aae57b37:;
			++it;
			_14914_i++;
			goto _iter_begin_1aae57b37;
		}
		_iter_end_1aae57b37:;
	};
	(*(_14813_ns))._field_Ident=(*(_14813_ns))._field_Ns[((*(_14813_ns))._field_Ns.len() - 1LL)];
	(*(_14813_ns))._field_Ns=(*(_14813_ns))._field_Ns.slice(0LL, ((*(_14813_ns))._field_Ns.len() - 1LL));
	return _14813_ns;;
}



inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c187771c_buildType(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _16633_tokens) {
	jule::I64 _16713_i = 0LL;;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _16813_t;;
	jule::Bool _16816_ok = false;;
	({
		__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType((*(_self_))._field_p, _16633_tokens, (&(_16713_i)), false);
		_16813_t = __jule_assign_result.__jule_result_arg0;
		_16816_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_16816_ok))) {
		_1c1875440_pushErr(_self_, (*(_16633_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16713_i < (*(_16633_tokens)).len())) {
		_1c1875440_pushErr(_self_, (*(_16633_tokens))[_16713_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _16813_t;;
}



inline jule::Any _1c1877a5d_buildSubIdent(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _18037_tokens) {
	jule::I64 _1819_i = ((*(_18037_tokens)).len() - 2LL);;
	jule::Ptr<_1c0c25406_Token> _1829_token = (*(_18037_tokens))[_1819_i];;
	{
		auto &_match_expr{ (*(_1829_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1aae5ea40:;
			{
				return jule::Any(_1c187708a_buildObjSubIdent(_self_, (*(_18037_tokens))), &__jule_any_type85);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1aae6026b:;
			{
				return jule::Any(_1c18773cb_buildNsSubIdent(_self_, _18037_tokens), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1aae602d2:;
			{
				return jule::Any(_1c187771c_buildType(_self_, _18037_tokens), &__jule_any_type88);;
			}
		}
		_match_end_1aae6015b:;
	};
	_1c1875440_pushErr(_self_, _1829_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1c0c422ad_VariadicExpr> _1c1877d9e_buildVariadic(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _19636_tokens) {
	jule::Ptr<_1c0c25406_Token> _19713_token = _19636_tokens[(_19636_tokens.len() - 1LL)];;
	(_19636_tokens).mut_slice(0LL, (_19636_tokens.len() - 1LL));;
	return jule::new_ptr<_1c0c422ad_VariadicExpr>(_1c0c422ad_VariadicExpr{._field_Token=_19713_token, ._field_Expr=_1c187eed8_buildFromTokens(_self_, _19636_tokens)});;
}



inline jule::Ptr<_1c0c40124_RangeExpr> _1c18781e0_buildBetweenParentheses(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _20546_tokens) {
	if ((_20546_tokens.len() == 2LL)) {
		_1c1875440_pushErr(_self_, _20546_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1c18757a3_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_20546_tokens).mut_slice(1LL, (_20546_tokens.len() - 1LL));;
	return jule::new_ptr<_1c0c40124_RangeExpr>(_1c0c40124_RangeExpr{._field_Expr=_1c187eed8_buildFromTokens(_self_, _20546_tokens)});;
}



inline jule::Ptr<_1c0c42687_CastExpr> _1c1878531_tryBuildCast(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _21736_tokens) {
	jule::I64 _21813_rangeN = 0LL;;
	{
		auto expr = _21736_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae65073:;
		if (it != expr_end) {
			jule::I64 _21913_i = it - expr->begin();
			jule::Ptr<_1c0c25406_Token> _21916_token = *it;
			{
				{
					auto &_match_expr{ (*(_21916_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aae65d65:;
						{
							(_21813_rangeN)++;
							goto _iter_next_1aae65073;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aae65ddc:;
						{
							(_21813_rangeN)--;
						}
					}
					_match_end_1aae65c99:;
				};
				if ((_21813_rangeN > 0LL)) {
					goto _iter_next_1aae65073;
				} else if (((_21913_i + 1LL) == (*(_21736_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1c0c25406_Token>> _23817_typeTokens = (*(_21736_tokens)).slice(0LL, (_21913_i + 1LL));;
				jule::Slice<jule::Ptr<_1c0c25406_Token>> _23917_exprTokens = (*(_21736_tokens)).slice((_21913_i + 1LL));;
				if ((_23917_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1c0c25406_Token> _24613_tok = _23917_exprTokens[0LL];;
				if (((*(_24613_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1c0c42687_CastExpr> _25117_cast = jule::new_ptr<_1c0c42687_CastExpr>(_1c0c42687_CastExpr{});;
				if ((_23917_exprTokens.len() == 2LL)) {
					_1c1875440_pushErr(_self_, _23917_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1c18757a3_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_23817_typeTokens.len() == 2LL)) {
					_1c1875440_pushErr(_self_, _23817_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1c18757a3_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_23817_typeTokens).mut_slice(1LL, (_23817_typeTokens.len() - 1LL));;
					jule::I64 _26521_typeIndex = 0LL;;
					jule::Ptr<_1c0c3a9e3_TypeDecl> _26621_t;;
					jule::Bool _26624_ok = false;;
					({
						__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType((*(_self_))._field_p, &(_23817_typeTokens), (&(_26521_typeIndex)), true);
						_26621_t = __jule_assign_result.__jule_result_arg0;
						_26624_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_26624_ok && (_26521_typeIndex < _23817_typeTokens.len()))) {
						_1c1875440_pushErr(_self_, _23817_typeTokens[_26521_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_26624_ok))) {
						return _25117_cast;;
					};
					(*(_25117_cast))._field_Kind=_26621_t;
					if ((_23917_exprTokens.len() > 2LL)) {
						jule::I64 _27625_j = 0LL;;
						_1c1883b68_range(&(_27625_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_23917_exprTokens));
						if ((_27625_j < _23917_exprTokens.len())) {
							return nullptr;;
						};
						(_23917_exprTokens).mut_slice(0LL, _27625_j);;
						(*(_25117_cast))._field_Expr=_1c187eed8_buildFromTokens(_self_, _23917_exprTokens);
					};
				};
				return _25117_cast;;
			}
			_iter_next_1aae65073:;
			++it;
			_21913_i++;
			goto _iter_begin_1aae65073;
		}
		_iter_end_1aae65073:;
	};
	return nullptr;;
}



inline void _1c187894e_pushArg(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c3ed27_Expr>>* _29131_args, jule::Slice<jule::Ptr<_1c0c25406_Token>> _29150_tokens, jule::Ptr<_1c0c25406_Token> _29168_err_token) {
	if ((_29150_tokens.len() == 0LL)) {
		_1c1875440_pushErr(_self_, _29168_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c18757a3_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> &__jule_push_dest = (*(_29131_args)); __jule_push_dest.push(_1c187eed8_buildFromTokens(_self_, _29150_tokens)); };
}



inline jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _1c1878c90_buildArgs(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _30032_tokens) {
	if ((_30032_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _30617_args = nullptr;;
	jule::I64 _30713_last = 0LL;;
	jule::I64 _30813_rangeN = 0LL;;
	(_30032_tokens).mut_slice(1LL, (_30032_tokens.len() - 1LL));;
	{
		auto expr = &(_30032_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae72305:;
		if (it != expr_end) {
			jule::I64 _31013_i = it - expr->begin();
			jule::Ptr<_1c0c25406_Token> _31016_token = *it;
			{
				{
					auto &_match_expr{ (*(_31016_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aae733d3:;
						{
							(_30813_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aae7345a:;
						{
							(_30813_rangeN)--;
						}
					}
					_match_end_1aae73317:;
				};
				if (((_30813_rangeN > 0LL) || ((*(_31016_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1aae72305;
				};
				_1c187894e_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30713_last, _31013_i), _31016_token);
				_30713_last=static_cast<jule::I64>((_31013_i + 1LL));
			}
			_iter_next_1aae72305:;
			++it;
			_31013_i++;
			goto _iter_begin_1aae72305;
		}
		_iter_end_1aae72305:;
	};
	if ((_30713_last < _30032_tokens.len())) {
		if ((_30713_last == 0LL)) {
			if ((_30032_tokens.len() > 0LL)) {
				_1c187894e_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30713_last), _30032_tokens[_30713_last]);
			};
		} else {
			_1c187894e_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30713_last), _30032_tokens[(_30713_last - 1LL)]);
		};
	};
	return _30617_args;;
}



inline jule::Ptr<_1c0c43a51_FnCallExpr> _1c1879587_buildFnCall(_1c1874b7b_exprBuilder* _self_, jule::Ptr<_1c0c25406_Token>* _36635_token, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _36655_expr, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _36676_args) {
	return jule::new_ptr<_1c0c43a51_FnCallExpr>(_1c0c43a51_FnCallExpr{._field_Token=(*(_36635_token)), ._field_Expr=_1c187eed8_buildFromTokens(_self_, (*(_36655_expr))), ._field_Args=_1c1878c90_buildArgs(_self_, (*(_36676_args))), });;
}



inline jule::Any _1c18798c8_buildParenthesesRange(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _37445_tokens) {
	jule::Ptr<_1c0c25406_Token> _37513_token = (*(_37445_tokens))[0LL];;
	if (((*(_37513_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1c0c42687_CastExpr> _37717_expr = _1c1878531_tryBuildCast(_self_, _37445_tokens);;
		if ((_37717_expr != nullptr)) {
			return jule::Any(_37717_expr, &__jule_any_type105);;
		};
	};
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _38213_exprTokens;;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _38229_args_tokens;;
	({
		__jule_tuple_sx_1c0c25406_Token__jule_tuple_sx_1c0c25406_Token __jule_assign_result = _1c1883e32_rangeLast(_37445_tokens);
		_38213_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38229_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38213_exprTokens.len() == 0LL)) {
		return jule::Any(_1c18781e0_buildBetweenParentheses(_self_, _38229_args_tokens), &__jule_any_type100);;
	};
	return jule::Any(_1c1879587_buildFnCall(_self_, &(_37513_token), &(_38213_exprTokens), &(_38229_args_tokens)), &__jule_any_type107);;
}



inline jule::Ptr<_1c0c4129b_UnsafeExpr> _1c1879c19_buildUnsafeExpr(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _39138_tokens) {
	jule::Ptr<_1c0c25406_Token> _39213_token = _39138_tokens[0LL];;
	(_39138_tokens).mut_slice(1LL);;
	jule::I64 _39413_i = 0LL;;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _39513_rangeTokens = _1c1883b68_range(&(_39413_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_39138_tokens));;
	if ((_39513_rangeTokens.len() == 0LL)) {
		_1c1875440_pushErr(_self_, _39138_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c0c4129b_UnsafeExpr>(_1c0c4129b_UnsafeExpr{._field_Token=_39213_token, ._field_Expr=_1c187eed8_buildFromTokens(_self_, _39513_rangeTokens)});;
}



inline jule::Ptr<_1c0c4c6a3_FnDecl> _1c187a05a_buildAnonFn(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _40635_tokens) {
	jule::Ptr<_1c0c4c6a3_FnDecl> _40713_f = _1c188c479_buildFn((*(_self_))._field_p, _40635_tokens, false, false);;
	if ((!(_1c0c4ca16_IsAnon(_40713_f.ptr())))) {
		_1c1875440_pushErr(_self_, (*(_40713_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c18757a3_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _40713_f;;
}



inline jule::Any _1c187a39b_buildUnsafe(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _41535_tokens) {
	{
		auto &_match_expr{ (*((*(_41535_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1aae8337c:;
			{
				return jule::Any(_1c187a05a_buildAnonFn(_self_, _41535_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1aae838aa:;
			{
				return jule::Any(_1c1879c19_buildUnsafeExpr(_self_, (*(_41535_tokens))), &__jule_any_type102);;
			}
		}
		_match_end_1aae837de:;
	};
}



inline void _1c187a7b9_pushRangeLitPart(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _42539_part, jule::Ptr<_1c0c25406_Token> _4269_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>>* _42634_parts) {
	if ((_42539_part.len() == 0LL)) {
		_1c1875440_pushErr(_self_, _4269_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c18757a3_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> &__jule_push_dest = (*(_42634_parts)); __jule_push_dest.push(_42539_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _1c187ab0a_getBraceRangeLitExprParts(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _43648_tokens) {
	if ((_43648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _44217_parts = nullptr;;
	jule::I64 _44413_last = 0LL;;
	jule::I64 _44513_rangeN = 0LL;;
	(_43648_tokens).mut_slice(1LL, (_43648_tokens.len() - 1LL));;
	{
		auto expr = &(_43648_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae871d8:;
		if (it != expr_end) {
			jule::I64 _44713_i = it - expr->begin();
			jule::Ptr<_1c0c25406_Token> _44716_token = *it;
			{
				{
					auto &_match_expr{ (*(_44716_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aae882b6:;
						{
							(_44513_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aae8833d:;
						{
							(_44513_rangeN)--;
						}
					}
					_match_end_1aae881ea:;
				};
				if (((_44513_rangeN > 0LL) || ((*(_44716_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1aae871d8;
				};
				_1c187a7b9_pushRangeLitPart(_self_, _43648_tokens.slice(_44413_last, _44713_i), _44716_token, &(_44217_parts));
				_44413_last=static_cast<jule::I64>((_44713_i + 1LL));
			}
			_iter_next_1aae871d8:;
			++it;
			_44713_i++;
			goto _iter_begin_1aae871d8;
		}
		_iter_end_1aae871d8:;
	};
	if ((_44413_last < _43648_tokens.len())) {
		if ((_44413_last == 0LL)) {
			if ((_43648_tokens.len() > 0LL)) {
				_1c187a7b9_pushRangeLitPart(_self_, _43648_tokens.slice(_44413_last), _43648_tokens[_44413_last], &(_44217_parts));
			};
		} else {
			_1c187a7b9_pushRangeLitPart(_self_, _43648_tokens.slice(_44413_last), _43648_tokens[(_44413_last - 1LL)], &(_44217_parts));
		};
	};
	return _44217_parts;;
}



inline jule::Ptr<_1c0c44546_FieldExprPair> _1c187ae4b_buildFieldExprPair(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _47841_tokens) {
	if (((_47841_tokens.len() - 2LL) == 0LL)) {
		_1c1875440_pushErr(_self_, _47841_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c44546_FieldExprPair> _48313_pair = jule::new_ptr<_1c0c44546_FieldExprPair>(_1c0c44546_FieldExprPair{._field_Field=_47841_tokens[0LL], });;
	(_47841_tokens).mut_slice(2LL);;
	(*(_48313_pair))._field_Expr=_1c187eed8_buildFromTokens(_self_, _47841_tokens);
	return _48313_pair;;
}



inline jule::Ptr<_1c0c3ed27_Expr> _1c187b28c_buildStructLitExpr(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _49142_tokens) {
	jule::Ptr<_1c0c25406_Token> _49213_token = (*(_49142_tokens))[0LL];;
	if ((((*(_49213_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_49142_tokens)).len() > 1LL))) {
		_49213_token=(*(_49142_tokens))[1LL];
		if (((*(_49213_token))._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1c0c3ed27_Expr>(_1c0c3ed27_Expr{._field_Token=_49213_token, ._field_End=(*(_49142_tokens))[((*(_49142_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1c187ae4b_buildFieldExprPair(_self_, (*(_49142_tokens))), &__jule_any_type77)});;
		};
	};
	return _1c187eed8_buildFromTokens(_self_, (*(_49142_tokens)));;
}



inline jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _1c187b5cd_buildStructLitExprs(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _50643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _50713_parts = _1c187ab0a_getBraceRangeLitExprParts(_self_, (*(_50643_tokens)));;
	if ((_50713_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> _51213_pairs = jule::Slice<jule::Ptr<_1c0c3ed27_Expr>>::alloc(0LL, _50713_parts.len());;
	{
		auto expr = &(_50713_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae914cd:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c25406_Token>> _51321_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> &__jule_push_dest = _51213_pairs; __jule_push_dest.push(_1c187b28c_buildStructLitExpr(_self_, &(_51321_part))); };
			}
			_iter_next_1aae914cd:;
			++it;
			goto _iter_begin_1aae914cd;
		}
		_iter_end_1aae914cd:;
	};
	return _51213_pairs;;
}



inline jule::Ptr<_1c0c44d71_StructLit> _1c187b91e_buildTypedStructLiteral(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _51946_tokens) {
	jule::I64 _52013_i = 0LL;;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _52113_t;;
	jule::Bool _52116_ok = false;;
	({
		__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType((*(_self_))._field_p, &(_51946_tokens), (&(_52013_i)), true);
		_52113_t = __jule_assign_result.__jule_result_arg0;
		_52116_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52116_ok))) {
		return nullptr;;
	} else if ((_52013_i >= _51946_tokens.len())) {
		_1c1875440_pushErr(_self_, _51946_tokens[_52013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_51946_tokens).mut_slice(_52013_i);;
	jule::Ptr<_1c0c25406_Token> _5309_token = _51946_tokens[0LL];;
	if (((*(_5309_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1c1875440_pushErr(_self_, _5309_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c0c44d71_StructLit>(_1c0c44d71_StructLit{._field_End=_51946_tokens[(_51946_tokens.len() - 1LL)], ._field_Kind=_52113_t, ._field_Exprs=_1c187b5cd_buildStructLitExprs(_self_, &(_51946_tokens))});;
}



inline jule::Ptr<_1c0c3ed27_Expr> _1c187bc60_buildBraceLitPart(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _54341_tokens) {
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _54413_l;;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _54420_r;;
	({
		__jule_tuple_sx_1c0c25406_Token__jule_tuple_sx_1c0c25406_Token __jule_assign_result = _1c1880d41_splitDelim(_54341_tokens, static_cast<jule::U64>(8LLU));
		_54413_l = __jule_assign_result.__jule_result_arg0;
		_54420_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54413_l != nullptr)) {
		return jule::new_ptr<_1c0c3ed27_Expr>(_1c0c3ed27_Expr{._field_Token=(*(_54341_tokens))[0LL], ._field_End=(*(_54341_tokens))[((*(_54341_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1c0c45b52_KeyValPair>(_1c0c45b52_KeyValPair{._field_Key=_1c187eed8_buildFromTokens(_self_, _54413_l), ._field_Val=_1c187eed8_buildFromTokens(_self_, _54420_r), ._field_Colon=(*(_54341_tokens))[_54413_l.len()]}), &__jule_any_type78)});;
	};
	return _1c187eed8_buildFromTokens(_self_, (*(_54341_tokens)));;
}



inline jule::Ptr<_1c0c45327_BraceLit> _1c187c0a1_buildBraceLit(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _56037_tokens) {
	jule::Ptr<_1c0c45327_BraceLit> _56113_lit = jule::new_ptr<_1c0c45327_BraceLit>(_1c0c45327_BraceLit{._field_Token=(*(_56037_tokens))[0LL], ._field_End=(*(_56037_tokens))[((*(_56037_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _56613_parts = _1c187ab0a_getBraceRangeLitExprParts(_self_, (*(_56037_tokens)));;
	if ((_56613_parts == nullptr)) {
		return _56113_lit;;
	};
	(*(_56113_lit))._field_Exprs=jule::Slice<jule::Ptr<_1c0c3ed27_Expr>>::alloc(0LL, _56613_parts.len());
	{
		auto expr = &(_56613_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae9a3d8:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c25406_Token>> _57221_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> &__jule_push_dest = (*(_56113_lit))._field_Exprs; __jule_push_dest.push(_1c187bc60_buildBraceLitPart(_self_, &(_57221_part))); };
			}
			_iter_next_1aae9a3d8:;
			++it;
			goto _iter_begin_1aae9a3d8;
		}
		_iter_end_1aae9a3d8:;
	};
	return _56113_lit;;
}



inline jule::Any _1c187c3e2_buildBraceRange(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _57939_tokens) {
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _58013_exprTokens;;
	jule::I64 _58025_rangeN = 0;;
	({
		__jule_tuple_sx_1c0c25406_Token__jule_tuple_int __jule_assign_result = _1c188168d_getRangeExprTokens(_57939_tokens);
		_58013_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58025_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58013_exprTokens.len() == 0LL)) {
			_case_begin_1aae9b076:;
			{
				return jule::Any(_1c187c0a1_buildBraceLit(_self_, _57939_tokens), &__jule_any_type108);;
			}
		}
		else if ((_58025_rangeN > 0LL)) {
			_case_begin_1aae9bc7a:;
			{
				_1c1875440_pushErr(_self_, (*(_57939_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aae9b186:;
	};
	jule::Ptr<_1c0c25406_Token> _5919_elseToken = _58013_exprTokens[(_58013_exprTokens.len() - 1LL)];;
	if (((*(_58013_exprTokens[(_58013_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_58013_exprTokens).mut_slice(0LL, (_58013_exprTokens.len() - 1LL));;
		jule::Any _59417_d = _1c187e856_build(_self_, &(_58013_exprTokens));;
		if ((_59417_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _59417_d };
			
			if (_match_expr.type == &__jule_any_type107) {
				_case_begin_1aae9eb6d:;
				{
					((*(_57939_tokens))).mut_slice((_58013_exprTokens.len() + 1LL));;
					jule::I64 _60121_i = 0LL;;
					jule::Slice<jule::Ptr<_1c0c25406_Token>> _60221_rangeTokens = _1c1883b68_range(&(_60121_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _57939_tokens);;
					jule::Ptr<_1c0c43a51_FnCallExpr> _60321_model = _59417_d.cast_ptr<_1c0c43a51_FnCallExpr>(&__jule_any_type107);;
					if (_1c0c4415b_Ignored(_60321_model.ptr())) {
						_1c1875440_pushErr(_self_, _5919_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1c18757a3_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*(_60321_model))._field_Exception=_1c18873ca_buildScope((*(_self_))._field_p, &(_60221_rangeTokens), (*(_57939_tokens))[(_60121_i - 1LL)]);
					return _59417_d;;
				}
			}
			else {
				_case_begin_1aae9e640:;
				{
					_1c1875440_pushErr(_self_, _58013_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1aae9e5da:;
		};
	};
	{
		auto &_match_expr{ (*(_58013_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aaea3688:;
			{
				return _1c187a39b_buildUnsafe(_self_, _57939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1aaea3cb5:;
			{
				return jule::Any(_1c187a05a_buildAnonFn(_self_, _57939_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1aaea3d2b:;
			{
				return jule::Any(_1c187b91e_buildTypedStructLiteral(_self_, (*(_57939_tokens))), &__jule_any_type106);;
			}
		}
		else {
			_case_begin_1aaea0124:;
			{
				_1c1875440_pushErr(_self_, _58013_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aaea316b:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _1c187c733_getEnumerableParts(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _63141_tokens) {
	(_63141_tokens).mut_slice(1LL, (_63141_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _63313_parts;;
	jule::Slice<_21ce0c86b_Log> _63320_errors;;
	({
		__jule_tuple_ssx_1c0c25406_Token__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c18843d8_parts(&(_63141_tokens), static_cast<jule::U64>(5LLU), true);
		_63313_parts = __jule_assign_result.__jule_result_arg0;
		_63320_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_63320_errors);;
	return _63313_parts;;
}



inline jule::Ptr<_1c0c4634a_SliceExpr> _1c187ca74_buildSlice(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _63833_tokens) {
	jule::Ptr<_1c0c4634a_SliceExpr> _63913_slc = jule::new_ptr<_1c0c4634a_SliceExpr>(_1c0c4634a_SliceExpr{._field_Token=_63833_tokens[0LL], ._field_End=_63833_tokens[(_63833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _64413_parts = _1c187c733_getEnumerableParts(_self_, _63833_tokens);;
	if ((_64413_parts.len() == 0LL)) {
		return _63913_slc;;
	};
	(*(_63913_slc))._field_Exprs=jule::Slice<jule::Ptr<_1c0c3ed27_Expr>>::alloc(0LL, _64413_parts.len());
	{
		auto expr = &(_64413_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaea8825:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c25406_Token>> _65021_p = *it;
			{
				if ((_65021_p.len() == 0LL)) {
					goto _iter_next_1aaea8825;
				};
				{ jule::Slice<jule::Ptr<_1c0c3ed27_Expr>> &__jule_push_dest = (*(_63913_slc))._field_Exprs; __jule_push_dest.push(_1c187eed8_buildFromTokens(_self_, _65021_p)); };
			}
			_iter_next_1aaea8825:;
			++it;
			goto _iter_begin_1aaea8825;
		}
		_iter_end_1aaea8825:;
	};
	return _63913_slc;;
}



inline jule::Ptr<_1c0c46cda_IndexingExpr> _1c187d02a_buildIndexing(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _66036_exprTokens, jule::Slice<jule::Ptr<_1c0c25406_Token>> _66113_tokens, jule::Ptr<_1c0c25406_Token> _66135_errorToken) {
	jule::Ptr<_1c0c25406_Token> _66213_end = _66113_tokens[(_66113_tokens.len() - 1LL)];;
	(_66113_tokens).mut_slice(1LL, (_66113_tokens.len() - 1LL));;
	if ((_66113_tokens.len() == 0LL)) {
		_1c1875440_pushErr(_self_, _66135_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c3ed27_Expr> _66813_expr = _1c187eed8_buildFromTokens(_self_, _66036_exprTokens);;
	if ((_66813_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0c3ed27_Expr> _67213_index = _1c187eed8_buildFromTokens(_self_, _66113_tokens);;
	if ((_67213_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0c46cda_IndexingExpr>(_1c0c46cda_IndexingExpr{._field_Token=_66135_errorToken, ._field_End=_66213_end, ._field_Expr=_66813_expr, ._field_Index=_67213_index});;
}



inline jule::Ptr<_1c0c4744a_SlicingExpr> _1c187d646_buildSlicing(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _68436_exprTokens, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _68463_start, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _68514_to, jule::Ptr<_1c0c25406_Token>* _68533_errorToken, jule::Ptr<_1c0c25406_Token> _68557_end) {
	jule::Ptr<_1c0c4744a_SlicingExpr> _68613_slc = jule::new_ptr<_1c0c4744a_SlicingExpr>(_1c0c4744a_SlicingExpr{._field_Token=(*(_68533_errorToken)), ._field_End=_68557_end, ._field_Expr=_1c187eed8_buildFromTokens(_self_, (*(_68436_exprTokens))), });;
	if (((*(_68463_start)).len() > 0LL)) {
		(*(_68613_slc))._field_Start=_1c187eed8_buildFromTokens(_self_, (*(_68463_start)));
	};
	if (((*(_68514_to)).len() > 0LL)) {
		(*(_68613_slc))._field_To=_1c187eed8_buildFromTokens(_self_, (*(_68514_to)));
	};
	return _68613_slc;;
}



inline jule::Any _1c187d987_buildBracketRange(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _70040_tokens) {
	jule::Ptr<_1c0c25406_Token> _70113_errorToken = _70040_tokens[0LL];;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _70213_exprTokens;;
	jule::I64 _70225_rangeN = 0;;
	({
		__jule_tuple_sx_1c0c25406_Token__jule_tuple_int __jule_assign_result = _1c188168d_getRangeExprTokens(&(_70040_tokens));
		_70213_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70225_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70213_exprTokens.len() == 0LL)) {
		return jule::Any(_1c187ca74_buildSlice(_self_, _70040_tokens), &__jule_any_type93);;
	} else if ((_70225_rangeN > 0LL)) {
		_1c1875440_pushErr(_self_, _70113_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_70040_tokens).mut_slice(_70213_exprTokens.len());;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _71713_splitTokens = _70040_tokens.slice(1LL, (_70040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _71813_start;;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _71824_to;;
	({
		__jule_tuple_sx_1c0c25406_Token__jule_tuple_sx_1c0c25406_Token __jule_assign_result = _1c1880d41_splitDelim(&(_71713_splitTokens), static_cast<jule::U64>(8LLU));
		_71813_start = __jule_assign_result.__jule_result_arg0;
		_71824_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_71813_start != nullptr) || (_71824_to != nullptr))) {
		return jule::Any(_1c187d646_buildSlicing(_self_, &(_70213_exprTokens), &(_71813_start), &(_71824_to), &(_70113_errorToken), _70040_tokens[(_70040_tokens.len() - 1LL)]), &__jule_any_type104);;
	};
	return jule::Any(_1c187d02a_buildIndexing(_self_, _70213_exprTokens, _70040_tokens, _70113_errorToken), &__jule_any_type103);;
}



inline jule::Any _1c187dcc8_buildExclRight(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _72538_tokens) {
	jule::Ptr<_1c0c25406_Token> _7269_token = (*(_72538_tokens))[((*(_72538_tokens)).len() - 1LL)];;
	((*(_72538_tokens))).mut_slice(0LL, ((*(_72538_tokens)).len() - 1LL));;
	jule::Any _72813_d = _1c187e856_build(_self_, _72538_tokens);;
	if ((_72813_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _72813_d };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1aaeb5678:;
			{
				(*(_72813_d.cast_ptr<_1c0c43a51_FnCallExpr>(&__jule_any_type107)))._field_Exception=jule::new_ptr<_1c0c4aa14_ScopeTree>(_1c0c4aa14_ScopeTree{._field_Deferred=true, });
				return _72813_d;;
			}
		}
		_match_end_1aaeb5403:;
	};
	_1c1875440_pushErr(_self_, _7269_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1c187e119_buildData(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _74333_tokens) {
	{
		auto _match_expr{ (*(_74333_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1aaeb6d3e:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1aaeb6da5:;
			{
				return _1c18765b7_buildSingle(_self_, (*(_74333_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aaeb6e2c:;
			{
				if (((*((*(_74333_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1c1876908_buildBindIdent(_self_, _74333_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1aaeb6b52:;
	};
	jule::Ptr<_1c0c25406_Token> _75513_token = (*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];;
	if (((*(_75513_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1c1877d9e_buildVariadic(_self_, (*(_74333_tokens))), &__jule_any_type75);;
	};
	_75513_token=(*(_74333_tokens))[0LL];
	if (_1c0c25b43_IsUnaryOp((*(_75513_token))._field_Id)) {
		if (((*(_74333_tokens)).len() > 1LL)) {
			_75513_token=(*(_74333_tokens))[1LL];
			if (((*(_75513_token))._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1c187771c_buildType(_self_, _74333_tokens), &__jule_any_type88);;
			};
		};
		return jule::Any(_1c1876c49_buildUnary(_self_, (*(_74333_tokens))), &__jule_any_type87);;
	};
	if (((*(_74333_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_75513_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1aaebb4b4:;
				{
					if (((*(_74333_tokens)).len() > 3LL)) {
						jule::Ptr<_1c0c25406_Token> _78121_t = (*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];;
						if (((*(_78121_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1aaebb409;
						};
					};
					jule::Ptr<_1c0c25406_Token> _78717_next = (*(_74333_tokens))[1LL];;
					if (((*(_78717_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1aaebb409;
					};
					return jule::Any(_1c187771c_buildType(_self_, _74333_tokens), &__jule_any_type88);;
				}
			}
			_match_end_1aaebb409:;
		};
	};
	_75513_token=(*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_75513_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1aaebe1dc:;
			{
				return _1c1877a5d_buildSubIdent(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1aaebe253:;
			{
				return _1c187dcc8_buildExclRight(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1aaebe2b9:;
			{
				return _1c18798c8_buildParenthesesRange(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1aaebe330:;
			{
				return _1c187c3e2_buildBraceRange(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1aaebe3a7:;
			{
				return _1c187d987_buildBracketRange(_self_, (*(_74333_tokens)));;
			}
		}
		_match_end_1aaebe121:;
	};
	if (((*(_75513_token))._field_Id == static_cast<jule::U64>(29LLU))) {
		return jule::Any(_1c187771c_buildType(_self_, _74333_tokens), &__jule_any_type88);;
	};
	_1c1875440_pushErr(_self_, _75513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1c187e515_buildBinop(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _81834_tokens, jule::I64 _81852_i) {
	jule::Ptr<_1c0c25406_Token> _81913_op = (*(_81834_tokens))[_81852_i];;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _82013_leftTokens = (*(_81834_tokens)).slice(0LL, _81852_i);;
	if ((_1c18803a1_isTypeOp(&((*(_81913_op))._field_Id)) && _1c18806ae_isTypeRange(&(_82013_leftTokens)))) {
		return jule::Any(_1c187771c_buildType(_self_, _81834_tokens), &__jule_any_type88);;
	};
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _82513_rightTokens = (*(_81834_tokens)).slice((_81852_i + 1LL));;
	if ((_82013_leftTokens.len() == 0LL)) {
		_1c1875440_pushErr(_self_, (*(_81834_tokens))[_81852_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c18757a3_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82513_rightTokens.len() == 0LL)) {
		_1c1875440_pushErr(_self_, (*(_81834_tokens))[_81852_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c18757a3_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1c0c433e1_BinopExpr>(_1c0c433e1_BinopExpr{._field_Left=_1c187eed8_buildFromTokens(_self_, _82013_leftTokens), ._field_Right=_1c187eed8_buildFromTokens(_self_, _82513_rightTokens), ._field_Op=_81913_op}), &__jule_any_type109);;
}



inline jule::Any _1c187e856_build(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _84329_tokens) {
	if (((*((*(_84329_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1c187771c_buildType(_self_, _84329_tokens), &__jule_any_type88);;
	};
	jule::I64 _8479_i = _1c188110a_findLowestPrecOp(_84329_tokens);;
	if ((_8479_i == -1LL)) {
		return _1c187e119_buildData(_self_, _84329_tokens);;
	};
	return _1c187e515_buildBinop(_self_, _84329_tokens, _8479_i);;
}



inline jule::Any _1c187eb97_buildKind(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _85433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _85513_parts;;
	jule::Slice<_21ce0c86b_Log> _85520_errors;;
	({
		__jule_tuple_ssx_1c0c25406_Token__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c18843d8_parts(_85433_tokens, static_cast<jule::U64>(5LLU), true);
		_85513_parts = __jule_assign_result.__jule_result_arg0;
		_85520_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85520_errors != nullptr)) {
		((*((*(_self_))._field_p))._field_errors).append(_85520_errors);;
		return nullptr;;
	} else if ((_85513_parts.len() > 1LL)) {
		return jule::Any(_1c1875ae4_buildTuple(_self_, &(_85513_parts)), &__jule_any_type80);;
	};
	return _1c187e856_build(_self_, _85433_tokens);;
}



inline jule::Ptr<_1c0c3ed27_Expr> _1c187eed8_buildFromTokens(_1c1874b7b_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _86538_tokens) {
	if ((_86538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _86913_kind = _1c187eb97_buildKind(_self_, &(_86538_tokens));;
	if ((_86913_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0c3ed27_Expr>(_1c0c3ed27_Expr{._field_Token=_86538_tokens[0LL], ._field_End=_86538_tokens[(_86538_tokens.len() - 1LL)], ._field_Kind=_86913_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1c1874b7b_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c18820d9_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1c1885a7c_stop(_1c1885780_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1c1885d13_stopped(_1c1885780_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1c1886231_pushErr(_1c1885780_parser* _self_, jule::Ptr<_1c0c25406_Token> _23626_token, jule::Str _23641_fmt, jule::Slice<jule::Any> _23654_args) {
	{ jule::Slice<_21ce0c86b_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c1884ad1_compilerErr(&(_23626_token), &(_23641_fmt), _23654_args)); };
}



inline void _1c1886594_pushSuggestion(_1c1885780_parser* _self_, jule::Str _24133_fmt, jule::Slice<jule::Any> _24146_args) {
	{
		_1c1884e77_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _24133_fmt, _24146_args);
	};
}



inline jule::Ptr<_1c0c3ed27_Expr> _1c18868d5_buildExpr(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _24534_tokens) {
	return _1c187eed8_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_24534_tokens)));;
}



inline jule::Ptr<_1c0c39e10_Directive> _1c1886c26_buildDirective(_1c1885780_parser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _24937_tokens) {
	if ((_24937_tokens.len() == 1LL)) {
		_1c1886231_pushErr(_self_, _24937_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_24937_tokens[1LL]))._field_Column != ((*(_24937_tokens[0LL]))._field_Column + 1LL))) {
		_1c1886231_pushErr(_self_, _24937_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c0c39e10_Directive>(_1c0c39e10_Directive{._field_Tag=_24937_tokens[1LL], ._field_Args=_24937_tokens.slice(2LL)});;
}



inline void _1c1886ece_pushDirective(_1c1885780_parser* _self_, jule::Ptr<_1c0c39e10_Directive> _26436_d) {
	if ((_26436_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6da71b:;
		if (it != expr_end) {
			jule::Ptr<_1c0c39e10_Directive> _26916_pd = *it;
			{
				if (((*((*(_26436_d))._field_Tag))._field_Kind == (*((*(_26916_pd))._field_Tag))._field_Kind)) {
					return;;
				};
			}
			_iter_next_1ab6da71b:;
			++it;
			goto _iter_begin_1ab6da71b;
		}
		_iter_end_1ab6da71b:;
	};
	{ jule::Slice<jule::Ptr<_1c0c39e10_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_26436_d); };
}



inline jule::Ptr<_1c0c4aa14_ScopeTree> _1c18873ca_buildScope(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _27735_tokens, jule::Ptr<_1c0c25406_Token> _27757_end) {
	jule::Ptr<_1c0c4aa14_ScopeTree> _27813_s = _1c18659a2_newScope();;
	(*(_27813_s))._field_End=_27757_end;
	_1c18675a8_scopeParser _28013_sp = _1c18675a8_scopeParser{._field_p=_self_, };;
	_1c187410e_build(&_28013_sp, _27735_tokens, &(_27813_s));
	return _27813_s;;
}



inline __jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool _1c1887881__buildType(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _28742_tokens, jule::I64* _28813_i, jule::Bool _28822_err) {
	__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1c18975e9_typeBuilder _28913_tb = _1c18975e9_typeBuilder{._field_p=_self_, ._field_tokens=(*(_28742_tokens)), ._field_i=_28813_i, ._field_err=_28822_err};;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _29513_decl;;
	jule::Bool _29519_ok = false;;
	({
		__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c189a5ca_build(&_28913_tb);
		_29513_decl = __jule_assign_result.__jule_result_arg0;
		_29519_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _29513_decl;
	__jule_func_result.__jule_result_arg1 = _29519_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool _1c1887d37_buildType(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _30041_tokens, jule::I64* _30113_i, jule::Bool _30122_err) {
	__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c0c25406_Token> _3029_token = (*(_30041_tokens))[(*(_30113_i))];;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _30313_t;;
	jule::Bool _30316_ok = false;;
	({
		__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887881__buildType(_self_, _30041_tokens, _30113_i, _30122_err);
		_30313_t = __jule_assign_result.__jule_result_arg0;
		_30316_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_30122_err && (!(_30316_ok)))) {
		_1c1886231_pushErr(_self_.ptr(), _3029_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _30313_t;
	__jule_func_result.__jule_result_arg1 = _30316_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1c0c52356_TypeAliasDecl> _1c1888178_buildTypeAliasDecl(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _31043_tokens) {
	jule::I64 _31113_i = 1LL;;
	if ((_31113_i >= (*(_31043_tokens)).len())) {
		_1c1886231_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31113_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c52356_TypeAliasDecl> _31613_tad = jule::new_ptr<_1c0c52356_TypeAliasDecl>(_1c0c52356_TypeAliasDecl{._field_Token=(*(_31043_tokens))[1LL], ._field_Ident=(*((*(_31043_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1c0c25406_Token> _32013_token = (*(_31043_tokens))[_31113_i];;
	if (((*(_32013_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1886231_pushErr(_self_.ptr(), _32013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_31113_i)++;
	if ((_31113_i >= (*(_31043_tokens)).len())) {
		_1c1886231_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31113_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _31613_tad;;
	};
	_32013_token=(*(_31043_tokens))[_31113_i];
	if (((*(_32013_token))._field_Id != static_cast<jule::U64>(8LLU))) {
		_1c1886231_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31113_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _31613_tad;;
	};
	(_31113_i)++;
	if ((_31113_i >= (*(_31043_tokens)).len())) {
		_1c1886231_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31113_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _31613_tad;;
	};
	jule::Ptr<_1c0c3a9e3_TypeDecl> _34113_t;;
	jule::Bool _34116_ok = false;;
	({
		__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType(_self_, _31043_tokens, (&(_31113_i)), true);
		_34113_t = __jule_assign_result.__jule_result_arg0;
		_34116_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_31613_tad))._field_Kind=_34113_t;
	if ((_34116_ok && (_31113_i < (*(_31043_tokens)).len()))) {
		_1c1886231_pushErr(_self_.ptr(), (*(_31043_tokens))[_31113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_31613_tad))._field_Public=_1c0d01801_IsPub(&((*(_31613_tad))._field_Ident));
	return _31613_tad;;
}



inline void _1c18884db_buildVarTypeAndExpr(jule::Ptr<_1c1885780_parser> _self_, jule::Ptr<_1c0c4d781_VarDecl>* _35044_v, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _35062_tokens) {
	jule::I64 _35113_i = 0LL;;
	jule::Ptr<_1c0c25406_Token> _35213_tok = (*(_35062_tokens))[_35113_i];;
	if (((*(_35213_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_35113_i)++;
		if (((_35113_i >= (*(_35062_tokens)).len()) || ((*((*(_35062_tokens))[_35113_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1c1886231_pushErr(_self_.ptr(), _35213_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1c0c3a9e3_TypeDecl> _35917_t;;
		jule::Bool _35920_ok = false;;
		({
			__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType(_self_, _35062_tokens, (&(_35113_i)), true);
			_35917_t = __jule_assign_result.__jule_result_arg0;
			_35920_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_35920_ok) {
			(*((*(_35044_v))))._field_Kind=_35917_t;
			if ((_35113_i >= (*(_35062_tokens)).len())) {
				return;;
			};
			_35213_tok=(*(_35062_tokens))[_35113_i];
		};
	};
	if (((*(_35213_tok))._field_Id != static_cast<jule::U64>(71LLU))) {
		_1c1886231_pushErr(_self_.ptr(), _35213_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _37413_exprTokens = (*(_35062_tokens)).slice((_35113_i + 1LL));;
	if ((_37413_exprTokens.len() == 0LL)) {
		_1c1886231_pushErr(_self_.ptr(), _35213_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35044_v))))._field_Expr=_1c18868d5_buildExpr(_self_, &(_37413_exprTokens));
}



inline void _1c188884e_buildVarCommon(jule::Ptr<_1c1885780_parser> _self_, jule::Ptr<_1c0c4d781_VarDecl>* _38239_v, jule::Slice<jule::Ptr<_1c0c25406_Token>> _38256_tokens) {
	(*((*(_38239_v))))._field_Token=_38256_tokens[0LL];
	if (((*((*((*(_38239_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1886231_pushErr(_self_.ptr(), (*((*(_38239_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_38239_v))))._field_Ident=(*((*((*(_38239_v))))._field_Token))._field_Kind;
	(*((*(_38239_v))))._field_Public=_1c0d01801_IsPub(&((*((*(_38239_v))))._field_Ident));
	(*((*(_38239_v))))._field_Kind=nullptr;
	if ((_38256_tokens.len() > 1LL)) {
		(_38256_tokens).mut_slice(1LL);;
		_1c18884db_buildVarTypeAndExpr(_self_, _38239_v, &(_38256_tokens));
	};
}



inline void _1c1888c6c_buildVarBegin(_1c1885780_parser* _self_, jule::Ptr<_1c0c4d781_VarDecl>* _39837_v, jule::I64* _39855_i, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _39864_tokens) {
	jule::Ptr<_1c0c25406_Token> _3999_tok = (*(_39864_tokens))[(*(_39855_i))];;
	{
		auto &_match_expr{ (*(_3999_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ab704c96:;
			{
				(*((*(_39837_v))))._field_Statically=true;
				goto _case_begin_1ab70522a;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ab70522a:;
			{
				((*(_39855_i)))++;
				if (((*(_39855_i)) >= (*(_39864_tokens)).len())) {
					_1c1886231_pushErr(_self_, _3999_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*((*(_39864_tokens))[(*(_39855_i))]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_39837_v))))._field_Mutable=true;
					((*(_39855_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1ab704966:;
			{
				((*(_39855_i)))++;
				(*((*(_39837_v))))._field_Constant=true;
			}
		}
		else {
			_case_begin_1ab704900:;
			{
				_1c1886231_pushErr(_self_, _3999_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ab70489a:;
	};
	if (((*(_39855_i)) >= (*(_39864_tokens)).len())) {
		_1c1886231_pushErr(_self_, _3999_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1c0c4d781_VarDecl> _1c18890ad_buildVar(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _42832_tokens) {
	jule::I64 _42913_i = 0LL;;
	jule::Ptr<_1c0c4d781_VarDecl> _43013_v = jule::new_ptr<_1c0c4d781_VarDecl>(_1c0c4d781_VarDecl{._field_Token=_42832_tokens[0LL], });;
	_1c1888c6c_buildVarBegin(_self_.ptr(), &(_43013_v), &(_42913_i), &(_42832_tokens));
	if ((_42913_i >= _42832_tokens.len())) {
		return nullptr;;
	};
	(_42832_tokens).mut_slice(_42913_i);;
	if (((*(_42832_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_43013_v))._field_Reference=true;
		if ((_42832_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_42832_tokens).mut_slice(1LL);;
	};
	_1c188884e_buildVarCommon(_self_, &(_43013_v), _42832_tokens);
	return _43013_v;;
}



inline jule::Ptr<_1c0c47bed_GenericDecl> _1c18893ee_buildGeneric(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _45037_tokens) {
	jule::Ptr<_1c0c47bed_GenericDecl> _45113_g = jule::new_ptr<_1c0c47bed_GenericDecl>(_1c0c47bed_GenericDecl{._field_Token=(*(_45037_tokens))[0LL], });;
	if (((*((*(_45113_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1886231_pushErr(_self_.ptr(), (*(_45113_g))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_45113_g))._field_Ident=(*((*(_45113_g))._field_Token))._field_Kind;
	if (((*(_45037_tokens)).len() > 1LL)) {
		if (((*((*(_45037_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1c1886231_pushErr(_self_.ptr(), (*(_45037_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_45037_tokens)).len() == 2LL)) {
			_1c1886231_pushErr(_self_.ptr(), (*(_45037_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1c0c25406_Token>> _46817_constraintTokens = (*(_45037_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _46917_parts;;
		jule::Slice<_21ce0c86b_Log> _46924_errors;;
		({
			__jule_tuple_ssx_1c0c25406_Token__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c18843d8_parts(&(_46817_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_46917_parts = __jule_assign_result.__jule_result_arg0;
			_46924_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_46924_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_46924_errors);;
			return nullptr;;
		};
		(*(_45113_g))._field_Constraint=jule::new_ptr<_1c0c47747_Constraint>(_1c0c47747_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>>::alloc(0LL, _46917_parts.len())});
		{
			auto expr = &(_46917_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab7113bd:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1c0c25406_Token>> _47525_part = *it;
				{
					jule::I64 _47621_i = 0LL;;
					jule::Ptr<_1c0c3a9e3_TypeDecl> _47721_kind;;
					({
						__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType(_self_, &(_47525_part), (&(_47621_i)), true);
						_47721_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> &__jule_push_dest = (*((*(_45113_g))._field_Constraint))._field_Mask; __jule_push_dest.push(_47721_kind); };
					if ((_47621_i < _47525_part.len())) {
						_1c1886231_pushErr(_self_.ptr(), _47525_part[_47621_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1ab7113bd:;
				++it;
				goto _iter_begin_1ab7113bd;
			}
			_iter_end_1ab7113bd:;
		};
	};
	return _45113_g;;
}



inline jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>> _1c18897ea_buildGenerics(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _48738_tokens, jule::Ptr<_1c0c25406_Token>* _48757_errorToken) {
	if (((*(_48738_tokens)).len() == 0LL)) {
		_1c1886231_pushErr(_self_.ptr(), (*(_48757_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _49313_parts;;
	jule::Slice<_21ce0c86b_Log> _49320_errors;;
	({
		__jule_tuple_ssx_1c0c25406_Token__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c18843d8_parts(_48738_tokens, static_cast<jule::U64>(5LLU), true);
		_49313_parts = __jule_assign_result.__jule_result_arg0;
		_49320_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_49320_errors.len() > 0LL)) {
		((*(_self_))._field_errors).append(_49320_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>> _49913_generics = jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>>::alloc(0LL, _49313_parts.len());;
	{
		auto expr = &(_49313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab715ba8:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c25406_Token>> _50021_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>> &__jule_push_dest = _49913_generics; __jule_push_dest.push(_1c18893ee_buildGeneric(_self_, &(_50021_part))); };
			}
			_iter_next_1ab715ba8:;
			++it;
			goto _iter_begin_1ab715ba8;
		}
		_iter_end_1ab715ba8:;
	};
	return _49913_generics;;
}



inline jule::Ptr<_1c0c4b251_ParamDecl> _1c1889b3b_buildSelfParam(_1c1885780_parser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _50737_tokens) {
	if ((_50737_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1c0c4b251_ParamDecl> _51213_param = jule::new_ptr<_1c0c4b251_ParamDecl>();;
	jule::I64 _51513_i = 0LL;;
	if (((*(_50737_tokens[_51513_i]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_51213_param))._field_Mutable=true;
		(_51513_i)++;
		if ((_51513_i >= _50737_tokens.len())) {
			_1c1886231_pushErr(_self_, _50737_tokens[(_51513_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	_21cd5e16e_StrBuilder _52513_ident = static__21cd5e48d_New(5LL);;
	if (((*(_50737_tokens[_51513_i]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_21cd67d15_WriteStr(&_52513_ident, jule::Str::lit("&", 1));
		(_51513_i)++;
		if ((_51513_i >= _50737_tokens.len())) {
			_1c1886231_pushErr(_self_, _50737_tokens[(_51513_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (((*(_50737_tokens[_51513_i]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_21cd67d15_WriteStr(&_52513_ident, jule::Str::lit("self", 4));
		(*(_51213_param))._field_Token=_50737_tokens[_51513_i];
		(_51513_i)++;
		if ((_51513_i < _50737_tokens.len())) {
			_1c1886231_pushErr(_self_, _50737_tokens[_51513_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*(_51213_param))._field_Ident=_21cd6860c_Str(&_52513_ident);
	return _51213_param;;
}



inline void _1c188a059_paramTypeBegin(_1c1885780_parser* _self_, jule::Ptr<_1c0c4b251_ParamDecl>* _54938_param, jule::I64* _54962_i, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _54971_tokens) {
	for (; ((*(_54962_i)) < (*(_54971_tokens)).len()); ((*(_54962_i)))++) {
		{
			jule::Ptr<_1c0c25406_Token> _55113_token = (*(_54971_tokens))[(*(_54962_i))];;
			if (((*(_55113_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_54938_param))))._field_Variadic) {
				_1c1886231_pushErr(_self_, _55113_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1ab71d82b;
			};
			(*((*(_54938_param))))._field_Variadic=true;
		}
	_iter_next_1ab71d82b:;
	}
	_iter_end_1ab71d82b:;;
}



inline void _1c188a3bc_buildParamType(jule::Ptr<_1c1885780_parser> _self_, jule::Ptr<_1c0c4b251_ParamDecl>* _56439_param, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _56463_tokens) {
	jule::I64 _56513_i = 0LL;;
	_1c188a059_paramTypeBegin(_self_.ptr(), _56439_param, &(_56513_i), _56463_tokens);
	if ((_56513_i >= (*(_56463_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType(_self_, _56463_tokens, (&(_56513_i)), true);
		(*((*(_56439_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_56513_i < (*(_56463_tokens)).len())) {
		_1c1886231_pushErr(_self_.ptr(), (*(_56463_tokens))[_56513_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c188a730_buildParamBody(jule::Ptr<_1c1885780_parser> _self_, jule::Ptr<_1c0c4b251_ParamDecl>* _57739_param, jule::Slice<jule::Ptr<_1c0c25406_Token>> _57762_tokens) {
	jule::Ptr<_1c0c25406_Token> _57813_tok = _57762_tokens[0LL];;
	if ((_57762_tokens.len() == 1LL)) {
		(*((*(_57739_param))))._field_Ident=(*(_57813_tok))._field_Kind;
		return;;
	} else if ((_57762_tokens.len() < 3LL)) {
		_1c1886231_pushErr(_self_.ptr(), _57813_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_57762_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_57739_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1c188a3bc_buildParamType(_self_, _57739_param, &(_57762_tokens));
		return;;
	};
	(*((*(_57739_param))))._field_Ident=(*(_57813_tok))._field_Kind;
	(_57762_tokens).mut_slice(2LL);;
	_1c188a3bc_buildParamType(_self_, _57739_param, &(_57762_tokens));
}



inline jule::Ptr<_1c0c4b251_ParamDecl> _1c188aa71_buildParam(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _59734_tokens) {
	jule::Ptr<_1c0c4b251_ParamDecl> _59813_param = jule::new_ptr<_1c0c4b251_ParamDecl>(_1c0c4b251_ParamDecl{._field_Token=_59734_tokens[0LL], });;
	if (((*((*(_59813_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_59813_param))._field_Mutable=true;
		if ((_59734_tokens.len() == 1LL)) {
			_1c1886231_pushErr(_self_.ptr(), _59734_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_59734_tokens).mut_slice(1LL);;
		(*(_59813_param))._field_Token=_59734_tokens[0LL];
	};
	if ((_59734_tokens.len() >= 3LL)) {
		if (((*((*(_59813_param))._field_Token))._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_59734_tokens.len() == 1LL)) {
				_1c1886231_pushErr(_self_.ptr(), _59734_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_59734_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_59734_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*(_59813_param))._field_Reference=true;
				(_59734_tokens).mut_slice(1LL);;
				(*(_59813_param))._field_Token=_59734_tokens[0LL];
			};
		};
	};
	if (((*((*(_59813_param))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		(*(_59813_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1c188a3bc_buildParamType(_self_, &(_59813_param), &(_59734_tokens));
	} else {
		_1c188a730_buildParamBody(_self_, &(_59813_param), _59734_tokens);
	};
	return _59813_param;;
}



inline void _1c188ad29_checkParams(_1c1885780_parser* _self_, jule::Slice<jule::Ptr<_1c0c4b251_ParamDecl>>* _64035_params) {
	{
		auto expr = _64035_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab72d0bb:;
		if (it != expr_end) {
			jule::Ptr<_1c0c4b251_ParamDecl> _64121_param = *it;
			{
				if ((_1c0c4b5c5_IsSelf(_64121_param.ptr()) || ((*(_64121_param))._field_Kind != nullptr))) {
					goto _iter_next_1ab72d0bb;
				};
				if (((*(_64121_param))._field_Token == nullptr)) {
					_1c1886231_pushErr(_self_, (*(_64121_param))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*(_64121_param))._field_Kind=jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Token=(*(_64121_param))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1c0c3b0ed_IdentTypeDecl>(_1c0c3b0ed_IdentTypeDecl{._field_Token=(*(_64121_param))._field_Token, ._field_Ident=(*((*(_64121_param))._field_Token))._field_Kind, }), &__jule_any_type20)});
					(*(_64121_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1ab72d0bb:;
			++it;
			goto _iter_begin_1ab72d0bb;
		}
		_iter_end_1ab72d0bb:;
	};
}



inline jule::Slice<jule::Ptr<_1c0c4b251_ParamDecl>> _1c188b225_buildParams(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _66036_tokens, jule::Bool _66054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _66113_parts;;
	jule::Slice<_21ce0c86b_Log> _66120_errs;;
	({
		__jule_tuple_ssx_1c0c25406_Token__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c18843d8_parts(_66036_tokens, static_cast<jule::U64>(5LLU), true);
		_66113_parts = __jule_assign_result.__jule_result_arg0;
		_66120_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_66120_errs);;
	if ((_66113_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c4b251_ParamDecl>> _66717_params = nullptr;;
	if ((_66054_method && (_66113_parts.len() > 0LL))) {
		jule::Ptr<_1c0c4b251_ParamDecl> _66917_param = _1c1889b3b_buildSelfParam(_self_.ptr(), _66113_parts[0LL]);;
		if (((_66917_param != nullptr) && _1c0c4b5c5_IsSelf(_66917_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_1c0c4b251_ParamDecl>> &__jule_push_dest = _66717_params; __jule_push_dest.push(_66917_param); };
			(_66113_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_66113_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab734820:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c25406_Token>> _67621_part = *it;
			{
				jule::Ptr<_1c0c4b251_ParamDecl> _67717_param = _1c188aa71_buildParam(_self_, _67621_part);;
				if ((_67717_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1c0c4b251_ParamDecl>> &__jule_push_dest = _66717_params; __jule_push_dest.push(_67717_param); };
				};
			}
			_iter_next_1ab734820:;
			++it;
			goto _iter_begin_1ab734820;
		}
		_iter_end_1ab734820:;
	};
	_1c188ad29_checkParams(_self_.ptr(), &(_66717_params));
	return _66717_params;;
}



inline __jule_tuple_x_1c0c3d8d6_RetTypeDecl__jule_tuple_bool _1c188b621_buildMultiRetType(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _68742_tokens, jule::I64* _68765_i) {
	__jule_tuple_x_1c0c3d8d6_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1c0c3d8d6_RetTypeDecl>();
	((*(_68765_i)))++;
	if (((*(_68765_i)) >= (*(_68742_tokens)).len())) {
		((*(_68765_i)))--;
		({
			__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType(_self_, _68742_tokens, _68765_i, false);
			(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_68765_i)))--;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _69713_rangeTokens = _1c1883b68_range(_68765_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _68742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _69913_parts;;
	jule::Slice<_21ce0c86b_Log> _69920_errs;;
	({
		__jule_tuple_ssx_1c0c25406_Token__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c18843d8_parts(&(_69713_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_69913_parts = __jule_assign_result.__jule_result_arg0;
		_69920_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_69920_errs);;
	if ((_69913_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> _70513_types = jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>>::alloc(0LL, _69913_parts.len());;
	(*(__jule_func_result.__jule_result_arg0))._field_Idents=jule::Slice<jule::Ptr<_1c0c25406_Token>>::alloc(0LL, _69913_parts.len());
	{
		auto expr = &(_69913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab739a34:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c25406_Token>> _70721_part = *it;
			{
				jule::Ptr<_1c0c25406_Token> _70817_token = _70721_part[0LL];;
				jule::I64 _70917_offset = 0LL;;
				if ((_70721_part.len() > 1LL)) {
					_70817_token=_70721_part[1LL];
					if (((*(_70817_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_70917_offset=2LL;
						if ((_70721_part.len() < 3LL)) {
							_1c1886231_pushErr(_self_.ptr(), _70817_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1ab739a34;
						};
					};
				};
				_70817_token=_70721_part[0LL];
				if ((_70917_offset != 2LL)) {
					jule::Ptr<_1c0c25406_Token> _72521_newToken = jule::new_ptr<_1c0c25406_Token>((*(_70817_token)));;
					(*(_72521_newToken))._field_Kind=jule::Str::lit("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_1c0c25406_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_72521_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_1c0c25406_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_70817_token); };
				};
				jule::Ptr<_1c0c3a9e3_TypeDecl> _73217_tk;;
				({
					__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType(_self_, &(_70721_part), (&(_70917_offset)), true);
					_73217_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_70917_offset < _70721_part.len())) {
					_1c1886231_pushErr(_self_.ptr(), _70721_part[_70917_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> &__jule_push_dest = _70513_types; __jule_push_dest.push(_73217_tk); };
			}
			_iter_next_1ab739a34:;
			++it;
			goto _iter_begin_1ab739a34;
		}
		_iter_end_1ab739a34:;
	};
	if ((_70513_types.len() > 1LL)) {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Token=(*(_68742_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1c0c3c220_TupleTypeDecl>(_1c0c3c220_TupleTypeDecl{._field_Types=_70513_types}), &__jule_any_type74)});
	} else {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=_70513_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c0c3d8d6_RetTypeDecl__jule_tuple_bool _1c188ba1c_buildRetType(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _75537_tokens, jule::I64* _75560_i) {
	__jule_tuple_x_1c0c3d8d6_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1c0c3d8d6_RetTypeDecl>();
	if (((*(_75560_i)) >= (*(_75537_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1c0c25406_Token> _76113_token = (*(_75537_tokens))[(*(_75560_i))];;
	{
		auto &_match_expr{ (*(_76113_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1ab742cd4:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1ab742d5b:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1ab742dd3:;
			{
				if ((((*(_75560_i)) + 1LL) >= (*(_75537_tokens)).len())) {
					_1c1886231_pushErr(_self_.ptr(), _76113_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_75560_i)))++;
				_76113_token=(*(_75537_tokens))[(*(_75560_i))];
				{
					auto &_match_expr{ (*(_76113_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ab744b71:;
						{
							({
								__jule_tuple_x_1c0c3d8d6_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1c188b621_buildMultiRetType(_self_, _75537_tokens, _75560_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ab744be8:;
						{
							_1c1886231_pushErr(_self_.ptr(), _76113_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1ab744b0a:;
				};
				({
					__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType(_self_, _75537_tokens, _75560_i, true);
					(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1ab742c5c:;
	};
	((*(_75560_i)))++;
	_1c1886231_pushErr(_self_.ptr(), _76113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1c0c4c6a3_FnDecl> _1c188bec3_buildFnPrototype(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _79441_tokens, jule::I64* _79464_i, jule::Bool _79472_method) {
	jule::Ptr<_1c0c4c6a3_FnDecl> _79513_f = jule::new_ptr<_1c0c4c6a3_FnDecl>(_1c0c4c6a3_FnDecl{._field_Token=(*(_79441_tokens))[(*(_79464_i))], });;
	if (((*((*(_79513_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*(_79513_f))._field_Statically=true;
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_1c1886231_pushErr(_self_.ptr(), (*(_79513_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_79513_f))._field_Token=(*(_79441_tokens))[(*(_79464_i))];
	};
	if (((*((*(_79513_f))._field_Token))._field_Id == static_cast<jule::U64>(31LLU))) {
		(*(_79513_f))._field_Unsafety=true;
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_1c1886231_pushErr(_self_.ptr(), (*(_79513_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_79513_f))._field_Token=(*(_79441_tokens))[(*(_79464_i))];
	};
	((*(_79464_i)))++;
	if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
		_1c1886231_pushErr(_self_.ptr(), (*(_79513_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c25406_Token> _8289_tok = (*(_79441_tokens))[(*(_79464_i))];;
	if (((*(_8289_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_1c1886231_pushErr(_self_.ptr(), (*(_79513_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_79513_f))._field_Ident=(*(_8289_tok))._field_Kind;
	} else {
		(*(_79513_f))._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1c0c25406_Token> _8409_errorToken = (*(_79441_tokens))[(*(_79464_i))];;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _84113_genericsTokens = _1c1883b68_range(_79464_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _79441_tokens);;
	if ((_84113_genericsTokens != nullptr)) {
		(*(_79513_f))._field_Generics=_1c18897ea_buildGenerics(_self_, &(_84113_genericsTokens), &(_8409_errorToken));
	};
	if (((*((*(_79441_tokens))[(*(_79464_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1c1886231_pushErr(_self_.ptr(), (*(_79441_tokens))[(*(_79464_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _85113_paramsToks = _1c1883b68_range(_79464_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _79441_tokens);;
	if ((_85113_paramsToks.len() > 0LL)) {
		(*(_79513_f))._field_Params=_1c188b225_buildParams(_self_, &(_85113_paramsToks), _79472_method);
	};
	if (((*(_79464_i)) < (*(_79441_tokens)).len())) {
		jule::Ptr<_1c0c25406_Token> _85713_token = (*(_79441_tokens))[(*(_79464_i))];;
		if (((*(_85713_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*(_79513_f))._field_Exceptional=true;
			((*(_79464_i)))++;
		};
	};
	(*(_79513_f))._field_Public=_1c0d01801_IsPub(&((*(_79513_f))._field_Ident));
	({
		__jule_tuple_x_1c0c3d8d6_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1c188ba1c_buildRetType(_self_, _79441_tokens, _79464_i);
		(*(_79513_f))._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _79513_f;;
}



inline jule::Ptr<_1c0c4c6a3_FnDecl> _1c188c479_buildFn(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _87132_tokens, jule::Bool _87150_method, jule::Bool _87164_prototype) {
	jule::I64 _87213_i = 0LL;;
	jule::Ptr<_1c0c4c6a3_FnDecl> _87313_f = _1c188bec3_buildFnPrototype(_self_, _87132_tokens, &(_87213_i), _87150_method);;
	if (_87164_prototype) {
		if ((_87213_i < (*(_87132_tokens)).len())) {
			_1c1886231_pushErr(_self_.ptr(), (*(_87132_tokens))[(_87213_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _87313_f;;
	} else if ((_87313_f == nullptr)) {
		return _87313_f;;
	};
	if ((_87213_i >= (*(_87132_tokens)).len())) {
		_1c1885a7c_stop(_self_.ptr());
		_1c1886231_pushErr(_self_.ptr(), (*(_87313_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _88913_blockTokens = _1c1883b68_range(&(_87213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _87132_tokens);;
	if ((_88913_blockTokens != nullptr)) {
		(*(_87313_f))._field_Scope=_1c18873ca_buildScope(_self_, &(_88913_blockTokens), (*(_87132_tokens))[(_87213_i - 1LL)]);
		(*((*(_87313_f))._field_Scope))._field_Unsafety=(*(_87313_f))._field_Unsafety;
		if ((_87213_i < (*(_87132_tokens)).len())) {
			_1c1886231_pushErr(_self_.ptr(), (*(_87132_tokens))[_87213_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1c1885a7c_stop(_self_.ptr());
		_1c1886231_pushErr(_self_.ptr(), (*(_87313_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _87313_f;;
}



inline jule::Slice<jule::Ptr<_1c0c25406_Token>> _1c188c7ba_getUseDeclSelectors(_1c1885780_parser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _90542_tokens) {
	jule::I64 _90613_i = 0LL;;
	_90542_tokens=_1c1883b68_range(&(_90613_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_90542_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _90813_parts;;
	jule::Slice<_21ce0c86b_Log> _90820_errs;;
	({
		__jule_tuple_ssx_1c0c25406_Token__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c18843d8_parts(&(_90542_tokens), static_cast<jule::U64>(5LLU), true);
		_90813_parts = __jule_assign_result.__jule_result_arg0;
		_90820_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_90820_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_90820_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _91413_selectors = jule::Slice<jule::Ptr<_1c0c25406_Token>>::alloc(0LL, _90813_parts.len());;
	{
		auto expr = &(_90813_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab75bd64:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c25406_Token>> _91521_part = *it;
			{
				if ((_91521_part.len() > 1LL)) {
					_1c1886231_pushErr(_self_, _91521_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c0c25406_Token> _91917_tok = _91521_part[0LL];;
				if ((((*(_91917_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_91917_tok))._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1c1886231_pushErr(_self_, _91917_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1c1886594_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1ab75bd64;
				};
				{ jule::Slice<jule::Ptr<_1c0c25406_Token>> &__jule_push_dest = _91413_selectors; __jule_push_dest.push(_91917_tok); };
			}
			_iter_next_1ab75bd64:;
			++it;
			goto _iter_begin_1ab75bd64;
		}
		_iter_end_1ab75bd64:;
	};
	return _91413_selectors;;
}



inline void _1c188cb2d_buildBindUseDecl(_1c1885780_parser* _self_, jule::Ptr<_1c0c53863_UseDecl>* _93040_decl, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _93057_tokens) {
	if (((*(_93057_tokens)).len() > 1LL)) {
		_1c1886231_pushErr(_self_, (*(_93057_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0c25406_Token> _9349_token = (*(_93057_tokens))[0LL];;
	if ((((*(_9349_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*(_9349_token))._field_Kind[0LL] != '`') && ((*(_9349_token))._field_Kind[0LL] != '\"')))) {
		_1c1886231_pushErr(_self_, _9349_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_93040_decl))))._field_Binded=true;
	(*((*(_93040_decl))))._field_LinkPath=(*(_9349_token))._field_Kind.slice(1LL, ((*(_9349_token))._field_Kind.len() - 1LL));
}



inline void _1c188ce91_buildStdUseDecl(_1c1885780_parser* _self_, jule::Ptr<_1c0c53863_UseDecl>* _94339_decl, jule::Slice<jule::Ptr<_1c0c25406_Token>> _94359_tokens) {
	(*((*(_94339_decl))))._field_Std=true;
	jule::Ptr<_1c0c25406_Token> _94613_token = _94359_tokens[0LL];;
	if ((_94359_tokens.len() < 3LL)) {
		_1c1886231_pushErr(_self_, _94613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_94359_tokens).mut_slice(2LL);;
	_94613_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_94613_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ab7653cd:;
			{
				_1c1886231_pushErr(_self_, _94613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ab765455:;
			{
				jule::Slice<jule::Ptr<_1c0c25406_Token>> _95921_selectors = nullptr;;
				({
					__jule_tuple_sx_1c0c25406_Token__jule_tuple_sx_1c0c25406_Token __jule_assign_result = _1c1883e32_rangeLast(&(_94359_tokens));
					_94359_tokens = __jule_assign_result.__jule_result_arg0;
					_95921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_94339_decl))))._field_Selected=_1c188c7ba_getUseDeclSelectors(_self_, _95921_selectors);
				if ((_94359_tokens.len() == 0LL)) {
					_1c1886231_pushErr(_self_, _94613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94613_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
				if (((*(_94613_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c1886231_pushErr(_self_, _94613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94359_tokens).mut_slice(0LL, (_94359_tokens.len() - 1LL));;
				if ((_94359_tokens.len() == 0LL)) {
					_1c1886231_pushErr(_self_, _94613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ab7654cc:;
			{
				(_94359_tokens).mut_slice(0LL, (_94359_tokens.len() - 1LL));;
				if ((_94359_tokens.len() == 0LL)) {
					_1c1886231_pushErr(_self_, _94613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94613_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
				if (((*(_94613_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c1886231_pushErr(_self_, _94613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94359_tokens).mut_slice(0LL, (_94359_tokens.len() - 1LL));;
				if ((_94359_tokens.len() == 0LL)) {
					_1c1886231_pushErr(_self_, _94613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_94339_decl))))._field_Full=true;
			}
		}
		_match_end_1ab765356:;
	};
	(*((*(_94339_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1c188531d_tokstoa(&(_94359_tokens)));
}



inline void _1c188d304_buildIdentUseDecl(_1c1885780_parser* _self_, jule::Ptr<_1c0c53863_UseDecl>* _99741_decl, jule::Slice<jule::Ptr<_1c0c25406_Token>> _99761_tokens) {
	(*((*(_99741_decl))))._field_Std=false;
	jule::Ptr<_1c0c25406_Token> _100013_token = _99761_tokens[(_99761_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_100013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ab76cc10:;
			{
				_1c1886231_pushErr(_self_, _100013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ab76da02:;
			{
				jule::Slice<jule::Ptr<_1c0c25406_Token>> _100621_selectors = nullptr;;
				({
					__jule_tuple_sx_1c0c25406_Token__jule_tuple_sx_1c0c25406_Token __jule_assign_result = _1c1883e32_rangeLast(&(_99761_tokens));
					_99761_tokens = __jule_assign_result.__jule_result_arg0;
					_100621_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_99741_decl))))._field_Selected=_1c188c7ba_getUseDeclSelectors(_self_, _100621_selectors);
				if ((_99761_tokens.len() == 0LL)) {
					_1c1886231_pushErr(_self_, _100013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100013_token=_99761_tokens[(_99761_tokens.len() - 1LL)];
				if (((*(_100013_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c1886231_pushErr(_self_, _100013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_99761_tokens).mut_slice(0LL, (_99761_tokens.len() - 1LL));;
				if ((_99761_tokens.len() == 0LL)) {
					_1c1886231_pushErr(_self_, _100013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ab76da68:;
			{
				(_99761_tokens).mut_slice(0LL, (_99761_tokens.len() - 1LL));;
				if ((_99761_tokens.len() == 0LL)) {
					_1c1886231_pushErr(_self_, _100013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100013_token=_99761_tokens[(_99761_tokens.len() - 1LL)];
				if (((*(_100013_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c1886231_pushErr(_self_, _100013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_99761_tokens).mut_slice(0LL, (_99761_tokens.len() - 1LL));;
				if ((_99761_tokens.len() == 0LL)) {
					_1c1886231_pushErr(_self_, _100013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_99741_decl))))._field_Full=true;
			}
		}
		_match_end_1ab76d8e2:;
	};
	(*((*(_99741_decl))))._field_LinkPath=_1c188531d_tokstoa(&(_99761_tokens));
}



inline void _1c188d667_parseUseDecl(_1c1885780_parser* _self_, jule::Ptr<_1c0c53863_UseDecl>* _104536_decl, jule::Slice<jule::Ptr<_1c0c25406_Token>> _104556_tokens) {
	if ((*((*(_104536_decl))))._field_Binded) {
		_1c188cb2d_buildBindUseDecl(_self_, _104536_decl, &(_104556_tokens));
		return;;
	};
	jule::Ptr<_1c0c25406_Token> _105113_token = _104556_tokens[0LL];;
	if (((*(_105113_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1886231_pushErr(_self_, _105113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_104556_tokens.len() > 2LL) && ((*(_104556_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_104536_decl))))._field_Alias=(*(_105113_token))._field_Kind;
		if (((*(_104556_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1c1886231_pushErr(_self_, _105113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1c1886594_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_104556_tokens).mut_slice(2LL);;
		_105113_token=_104556_tokens[0LL];
	};
	;
	{
		
		if ((*(_105113_token))._field_Kind.equal("std", 3)) {
			_case_begin_1ab77a79a:;
			{
				_1c188ce91_buildStdUseDecl(_self_, _104536_decl, _104556_tokens);
			}
		}
		else {
			_case_begin_1ab77a316:;
			{
				_1c188d304_buildIdentUseDecl(_self_, _104536_decl, _104556_tokens);
			}
		}
		_match_end_1ab77a2a0:;
	};
}



inline jule::Ptr<_1c0c53863_UseDecl> _1c188da63_buildUseDecl(_1c1885780_parser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _107935_tokens, jule::Bool _107953_binded) {
	jule::Ptr<_1c0c53863_UseDecl> _108013_decl = jule::new_ptr<_1c0c53863_UseDecl>(_1c0c53863_UseDecl{._field_Token=_107935_tokens[0LL], ._field_Binded=_107953_binded, });;
	if ((_107935_tokens.len() < 2LL)) {
		_1c1886231_pushErr(_self_, (*(_108013_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_107935_tokens).mut_slice(1LL);;
	_1c188d667_parseUseDecl(_self_, &(_108013_decl), _107935_tokens);
	return _108013_decl;;
}



inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c188de5e_buildTypeEnumItemKind(jule::Ptr<_1c1885780_parser> _self_, jule::I64* _109346_i, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _109359_tokens) {
	jule::I64 _109413_braceN = 0LL;;
	jule::I64 _10959_exprStart = (*(_109346_i));;
	for (; ((*(_109346_i)) < (*(_109359_tokens)).len()); ((*(_109346_i)))++) {
		{
			jule::Ptr<_1c0c25406_Token> _109713_t = (*(_109359_tokens))[(*(_109346_i))];;
			{
				auto &_match_expr{ (*(_109713_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ab77e4e6:;
					{
						(_109413_braceN)++;
						goto _iter_next_1ab77d957;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ab77e56d:;
					{
						(_109413_braceN)--;
					}
				}
				_match_end_1ab77e480:;
			};
			if ((_109413_braceN > 0LL)) {
				goto _iter_next_1ab77d957;
			};
			if ((((*(_109713_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_109346_i)) + 1LL) >= (*(_109359_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1c0c25406_Token>> _111325_kindTokens = nullptr;;
				if (((*(_109713_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_111325_kindTokens=(*(_109359_tokens)).slice(_10959_exprStart, (*(_109346_i)));
				} else {
					_111325_kindTokens=(*(_109359_tokens)).slice(_10959_exprStart);
				};
				jule::I64 _111921_j = 0LL;;
				jule::Ptr<_1c0c3a9e3_TypeDecl> _112021_kind;;
				({
					__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType(_self_, &(_111325_kindTokens), (&(_111921_j)), true);
					_112021_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_111921_j < _111325_kindTokens.len())) {
					_1c1886231_pushErr(_self_.ptr(), _111325_kindTokens[_111921_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _112021_kind;;
			};
		}
	_iter_next_1ab77d957:;
	}
	_iter_end_1ab77d957:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1c0c55205_TypeEnumItemDecl>> _1c188e2a0_buildTypeEnumItems(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _113043_tokens) {
	jule::Slice<jule::Ptr<_1c0c55205_TypeEnumItemDecl>> _113113_items = jule::Slice<jule::Ptr<_1c0c55205_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _113213_i = 0LL;;
	for (; (_113213_i < (*(_113043_tokens)).len()); (_113213_i)++) {
		{
			jule::Ptr<_1c0c25406_Token> _113417_t = (*(_113043_tokens))[_113213_i];;
			jule::Ptr<_1c0c55205_TypeEnumItemDecl> _113517_item = jule::new_ptr<_1c0c55205_TypeEnumItemDecl>();;
			(*(_113517_item))._field_Token=_113417_t;
			if ((((*((*(_113517_item))._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_113043_tokens)).len() - _113213_i) > 2LL))) {
				_113417_t=(*(_113043_tokens))[(_113213_i + 1LL)];
				if (((*(_113417_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*(_113517_item))._field_Ident=(*((*(_113517_item))._field_Token))._field_Kind;
					_113213_i+=2LL;
					if (((_113213_i >= (*(_113043_tokens)).len()) || ((*((*(_113043_tokens))[_113213_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1c1886231_pushErr(_self_.ptr(), _113417_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1ab784364;
					};
				};
			};
			(*(_113517_item))._field_Kind=_1c188de5e_buildTypeEnumItemKind(_self_, &(_113213_i), _113043_tokens);
			{ jule::Slice<jule::Ptr<_1c0c55205_TypeEnumItemDecl>> &__jule_push_dest = _113113_items; __jule_push_dest.push(_113517_item); };
		}
	_iter_next_1ab784364:;
	}
	_iter_end_1ab784364:;;
	return _113113_items;;
}



inline jule::Ptr<_1c0c55865_TypeEnumDecl> _1c188e5e1_buildTypeEnumDecl(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _115442_tokens) {
	jule::I64 _115513_i = 1LL;;
	jule::Ptr<_1c0c55865_TypeEnumDecl> _115613_e = jule::new_ptr<_1c0c55865_TypeEnumDecl>(_1c0c55865_TypeEnumDecl{._field_Token=(*(_115442_tokens))[_115513_i], });;
	if (((*((*(_115613_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1886231_pushErr(_self_.ptr(), (*(_115613_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_115613_e))._field_Ident=(*((*(_115613_e))._field_Token))._field_Kind;
	_115513_i+=3LL;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _116613_itemTokens = _1c1883b68_range(&(_115513_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _115442_tokens);;
	if ((_116613_itemTokens == nullptr)) {
		_1c1885a7c_stop(_self_.ptr());
		_1c1886231_pushErr(_self_.ptr(), (*(_115613_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _115613_e;;
	} else if ((_115513_i < (*(_115442_tokens)).len())) {
		_1c1886231_pushErr(_self_.ptr(), (*(_115442_tokens))[_115513_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_115613_e))._field_Public=_1c0d01801_IsPub(&((*(_115613_e))._field_Ident));
	(*(_115613_e))._field_End=(*(_115442_tokens))[(_115513_i - 1LL)];
	(*(_115613_e))._field_Items=_1c188e2a0_buildTypeEnumItems(_self_, &(_116613_itemTokens));
	return _115613_e;;
}



inline jule::Ptr<_1c0c3ed27_Expr> _1c188e9dc_buildEnumItemExpr(jule::Ptr<_1c1885780_parser> _self_, jule::I64* _118142_i, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _118155_tokens) {
	jule::I64 _118213_braceN = 0LL;;
	jule::I64 _11839_exprStart = (*(_118142_i));;
	for (; ((*(_118142_i)) < (*(_118155_tokens)).len()); ((*(_118142_i)))++) {
		{
			jule::Ptr<_1c0c25406_Token> _118513_t = (*(_118155_tokens))[(*(_118142_i))];;
			{
				auto &_match_expr{ (*(_118513_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ab790d65:;
					{
						(_118213_braceN)++;
						goto _iter_next_1ab7902c6;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ab790ddc:;
					{
						(_118213_braceN)--;
					}
				}
				_match_end_1ab790cee:;
			};
			if ((_118213_braceN > 0LL)) {
				goto _iter_next_1ab7902c6;
			};
			if ((((*(_118513_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_118142_i)) + 1LL) >= (*(_118155_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1c0c25406_Token>> _120125_exprTokens = nullptr;;
				if (((*(_118513_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_120125_exprTokens=(*(_118155_tokens)).slice(_11839_exprStart, (*(_118142_i)));
				} else {
					_120125_exprTokens=(*(_118155_tokens)).slice(_11839_exprStart);
				};
				return _1c18868d5_buildExpr(_self_, &(_120125_exprTokens));;
			};
		}
	_iter_next_1ab7902c6:;
	}
	_iter_end_1ab7902c6:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1c0c53d19_EnumItemDecl>> _1c188ed2d_buildEnumItems(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _121339_tokens) {
	jule::Slice<jule::Ptr<_1c0c53d19_EnumItemDecl>> _121413_items = jule::Slice<jule::Ptr<_1c0c53d19_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121513_i = 0LL;;
	for (; (_121513_i < (*(_121339_tokens)).len()); (_121513_i)++) {
		{
			jule::Ptr<_1c0c25406_Token> _121717_t = (*(_121339_tokens))[_121513_i];;
			jule::Ptr<_1c0c53d19_EnumItemDecl> _121817_item = jule::new_ptr<_1c0c53d19_EnumItemDecl>();;
			(*(_121817_item))._field_Token=_121717_t;
			if (((*((*(_121817_item))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1c1886231_pushErr(_self_.ptr(), (*(_121817_item))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*(_121817_item))._field_Ident=(*((*(_121817_item))._field_Token))._field_Kind;
			if ((((_121513_i + 1LL) >= (*(_121339_tokens)).len()) || ((*((*(_121339_tokens))[(_121513_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_121513_i + 1LL) < (*(_121339_tokens)).len())) {
					(_121513_i)++;
				};
				{ jule::Slice<jule::Ptr<_1c0c53d19_EnumItemDecl>> &__jule_push_dest = _121413_items; __jule_push_dest.push(_121817_item); };
				goto _iter_next_1ab794aa0;
			};
			(_121513_i)++;
			_121717_t=(*(_121339_tokens))[_121513_i];
			(_121513_i)++;
			if (((*(_121717_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1c1886231_pushErr(_self_.ptr(), _121717_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1ab794aa0;
			};
			if (((_121513_i >= (*(_121339_tokens)).len()) || ((*((*(_121339_tokens))[_121513_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1c1886231_pushErr(_self_.ptr(), _121717_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1ab794aa0;
			};
			(*(_121817_item))._field_Expr=_1c188e9dc_buildEnumItemExpr(_self_, &(_121513_i), _121339_tokens);
			{ jule::Slice<jule::Ptr<_1c0c53d19_EnumItemDecl>> &__jule_push_dest = _121413_items; __jule_push_dest.push(_121817_item); };
		}
	_iter_next_1ab794aa0:;
	}
	_iter_end_1ab794aa0:;;
	return _121413_items;;
}



inline jule::Ptr<_1c0c548ca_EnumDecl> _1c189016e_buildEnumDecl(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _125038_tokens) {
	if (((*(_125038_tokens)).len() < 3LL)) {
		_1c1886231_pushErr(_self_.ptr(), (*(_125038_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c548ca_EnumDecl> _125513_e = jule::new_ptr<_1c0c548ca_EnumDecl>(_1c0c548ca_EnumDecl{._field_Token=(*(_125038_tokens))[1LL], });;
	if (((*((*(_125513_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1886231_pushErr(_self_.ptr(), (*(_125513_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_125513_e))._field_Ident=(*((*(_125513_e))._field_Token))._field_Kind;
	jule::I64 _126313_i = 2LL;;
	if (((*((*(_125038_tokens))[_126313_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_126313_i)++;
		if ((_126313_i >= (*(_125038_tokens)).len())) {
			_1c1886231_pushErr(_self_.ptr(), (*(_125038_tokens))[(_126313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _125513_e;;
		};
		({
			__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType(_self_, _125038_tokens, (&(_126313_i)), true);
			(*(_125513_e))._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_126313_i >= (*(_125038_tokens)).len())) {
			_1c1885a7c_stop(_self_.ptr());
			_1c1886231_pushErr(_self_.ptr(), (*(_125513_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _125513_e;;
		};
	} else {
		(*(_125513_e))._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _128013_itemTokens = _1c1883b68_range(&(_126313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _125038_tokens);;
	if ((_128013_itemTokens == nullptr)) {
		_1c1885a7c_stop(_self_.ptr());
		_1c1886231_pushErr(_self_.ptr(), (*(_125513_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _125513_e;;
	} else if ((_126313_i < (*(_125038_tokens)).len())) {
		_1c1886231_pushErr(_self_.ptr(), (*(_125038_tokens))[_126313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_125513_e))._field_Public=_1c0d01801_IsPub(&((*(_125513_e))._field_Ident));
	(*(_125513_e))._field_End=(*(_125038_tokens))[(_126313_i - 1LL)];
	(*(_125513_e))._field_Items=_1c188ed2d_buildEnumItems(_self_, &(_128013_itemTokens));
	return _125513_e;;
}



inline jule::Any _1c18904b0_buildNodeEnumDecl(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _129542_tokens) {
	if ((((*(_129542_tokens)).len() > 3LL) && ((*((*(_129542_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_129542_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1c188e5e1_buildTypeEnumDecl(_self_, _129542_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1c189016e_buildEnumDecl(_self_, _129542_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1c0c55b2e_FieldDecl> _1c1890801_buildField(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _130434_tokens) {
	jule::Ptr<_1c0c55b2e_FieldDecl> _130513_f = jule::new_ptr<_1c0c55b2e_FieldDecl>();;
	(*(_130513_f))._field_Mutable=((*(_130434_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*(_130513_f))._field_Mutable) {
		if ((_130434_tokens.len() == 1LL)) {
			_1c1886231_pushErr(_self_.ptr(), _130434_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_130434_tokens).mut_slice(1LL);;
	};
	(*(_130513_f))._field_Token=_130434_tokens[0LL];
	if (((*((*(_130513_f))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1886231_pushErr(_self_.ptr(), (*(_130513_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_130513_f))._field_Ident=(*((*(_130513_f))._field_Token))._field_Kind;
	if ((_130434_tokens.len() == 1LL)) {
		_1c1886231_pushErr(_self_.ptr(), _130434_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_130434_tokens.len() < 3LL) || ((*(_130434_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1c1886231_pushErr(_self_.ptr(), _130434_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_130434_tokens).mut_slice(2LL);;
	jule::I64 _133313_i = 0LL;;
	({
		__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType(_self_, &(_130434_tokens), (&(_133313_i)), true);
		(*(_130513_f))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_133313_i < _130434_tokens.len())) {
		jule::Ptr<_1c0c25406_Token> _133613_token = _130434_tokens[_133313_i];;
		if (((*(_133613_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1c1886231_pushErr(_self_.ptr(), _130434_tokens[_133313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_133313_i)++;
		if ((_133313_i >= _130434_tokens.len())) {
			_1c1886231_pushErr(_self_.ptr(), _133613_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_130434_tokens).mut_slice(_133313_i);;
		(*(_130513_f))._field_Default=_1c18868d5_buildExpr(_self_, &(_130434_tokens));
	};
	(*(_130513_f))._field_Public=_1c0d01801_IsPub(&((*(_130513_f))._field_Ident));
	return _130513_f;;
}



inline jule::Slice<jule::Ptr<_1c0c55b2e_FieldDecl>> _1c1890b42_buildStructDeclFields(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _135345_tokens) {
	jule::Slice<jule::Ptr<_1c0c55b2e_FieldDecl>> _135417_fields = nullptr;;
	jule::Slice<jule::Ptr<_1c1866c17_stmt>> _135513_stmts = _1c18670be_splitStmts(&(_135345_tokens));;
	{
		auto expr = &(_135513_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7b334e:;
		if (it != expr_end) {
			jule::Ptr<_1c1866c17_stmt> _135621_stmt = *it;
			{
				_135345_tokens=(*(_135621_stmt))._field_tokens;
				jule::Ptr<_1c0c55b2e_FieldDecl> _135817_f = _1c1890801_buildField(_self_, _135345_tokens);;
				{ jule::Slice<jule::Ptr<_1c0c55b2e_FieldDecl>> &__jule_push_dest = _135417_fields; __jule_push_dest.push(_135817_f); };
			}
			_iter_next_1ab7b334e:;
			++it;
			goto _iter_begin_1ab7b334e;
		}
		_iter_end_1ab7b334e:;
	};
	return _135417_fields;;
}



inline jule::Ptr<_1c0c56525_StructDecl> _1c1890e83_buildStructDecl(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _136440_tokens) {
	if (((*(_136440_tokens)).len() < 3LL)) {
		_1c1886231_pushErr(_self_.ptr(), (*(_136440_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _137013_i = 1LL;;
	jule::Ptr<_1c0c56525_StructDecl> _137113_s = jule::new_ptr<_1c0c56525_StructDecl>(_1c0c56525_StructDecl{._field_Token=(*(_136440_tokens))[_137013_i], });;
	if (((*((*(_137113_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1886231_pushErr(_self_.ptr(), (*(_137113_s))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_137013_i)++;
	if ((_137013_i >= (*(_136440_tokens)).len())) {
		_1c1886231_pushErr(_self_.ptr(), (*(_136440_tokens))[_137013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _137113_s;;
	};
	(*(_137113_s))._field_Ident=(*((*(_137113_s))._field_Token))._field_Kind;
	jule::Ptr<_1c0c25406_Token> _13859_errorToken = (*(_136440_tokens))[_137013_i];;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _138613_genericsTokens = _1c1883b68_range(&(_137013_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _136440_tokens);;
	if ((_138613_genericsTokens != nullptr)) {
		(*(_137113_s))._field_Generics=_1c18897ea_buildGenerics(_self_, &(_138613_genericsTokens), &(_13859_errorToken));
	};
	if ((_137013_i >= (*(_136440_tokens)).len())) {
		_1c1886231_pushErr(_self_.ptr(), (*(_136440_tokens))[(_137013_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137113_s;;
	};
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _139613_bodyTokens = _1c1883b68_range(&(_137013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _136440_tokens);;
	if ((_139613_bodyTokens == nullptr)) {
		_1c1885a7c_stop(_self_.ptr());
		_1c1886231_pushErr(_self_.ptr(), (*(_137113_s))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137113_s;;
	};
	if ((_137013_i < (*(_136440_tokens)).len())) {
		_1c1886231_pushErr(_self_.ptr(), (*(_136440_tokens))[_137013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_137113_s))._field_Public=_1c0d01801_IsPub(&((*(_137113_s))._field_Ident));
	(*(_137113_s))._field_Fields=_1c1890b42_buildStructDeclFields(_self_, _139613_bodyTokens);
	(*(_137113_s))._field_End=(*(_136440_tokens))[(_137013_i - 1LL)];
	return _137113_s;;
}



inline void _1c189123b_checkMethodReceiver(_1c1885780_parser* _self_, jule::Ptr<_1c0c4c6a3_FnDecl>* _141239_f) {
	if ((*((*(_141239_f))))._field_Statically) {
		if ((((*((*(_141239_f))))._field_Params.len() > 0LL) && _1c0c4b5c5_IsSelf((*((*(_141239_f))))._field_Params[0LL].ptr()))) {
			_1c1886231_pushErr(_self_, (*((*(_141239_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_141239_f))))._field_Params.len() == 0LL)) {
		_1c1886231_pushErr(_self_, (*((*(_141239_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0c4b251_ParamDecl> _14249_param = (*((*(_141239_f))))._field_Params[0LL];;
	if ((!(_1c0c4b5c5_IsSelf(_14249_param.ptr())))) {
		_1c1886231_pushErr(_self_, (*((*(_141239_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1c189159e_buildTraitBody(jule::Ptr<_1c1885780_parser> _self_, jule::Ptr<_1c0c56c62_TraitDecl>* _143139_t, jule::Slice<jule::Ptr<_1c0c25406_Token>> _143158_tokens) {
	jule::Slice<jule::Ptr<_1c1866c17_stmt>> _143213_stmts = _1c18670be_splitStmts(&(_143158_tokens));;
	{
		auto expr = &(_143213_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7c312d:;
		if (it != expr_end) {
			jule::Ptr<_1c1866c17_stmt> _143321_stmt = *it;
			{
				_143158_tokens=(*(_143321_stmt))._field_tokens;
				if ((_143158_tokens.len() == 0LL)) {
					goto _iter_next_1ab7c312d;
				};
				{
					auto &_match_expr{ (*(_143158_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1ab7c65d7:;
						{
							jule::Ptr<_1c0c4c6a3_FnDecl> _144021_f = _1c188c479_buildFn(_self_, &(_143158_tokens), true, true);;
							if ((_144021_f == nullptr)) {
								goto _match_end_1ab7c442b;
							};
							_1c189123b_checkMethodReceiver(_self_.ptr(), &(_144021_f));
							if (((*(_144021_f))._field_Generics.len() > 0LL)) {
								_1c1886231_pushErr(_self_.ptr(), (*(_144021_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1c0c4c6a3_FnDecl>> &__jule_push_dest = (*((*(_143139_t))))._field_Methods; __jule_push_dest.push(_144021_f); };
						}
					}
					else {
						_case_begin_1ab7c3c00:;
						{
							jule::I64 _145021_i = 0LL;;
							jule::Ptr<_1c0c3a9e3_TypeDecl> _145121_ti;;
							jule::Bool _145125_ok = false;;
							({
								__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType(_self_, &(_143158_tokens), (&(_145021_i)), true);
								_145121_ti = __jule_assign_result.__jule_result_arg0;
								_145125_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_145125_ok))) {
								goto _match_end_1ab7c442b;
							};
							if ((_145021_i < _143158_tokens.len())) {
								_1c1886231_pushErr(_self_.ptr(), _143158_tokens[_145021_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> &__jule_push_dest = (*((*(_143139_t))))._field_Inherits; __jule_push_dest.push(_145121_ti); };
						}
					}
					_match_end_1ab7c442b:;
				};
			}
			_iter_next_1ab7c312d:;
			++it;
			goto _iter_begin_1ab7c312d;
		}
		_iter_end_1ab7c312d:;
	};
}



inline jule::Ptr<_1c0c56c62_TraitDecl> _1c18918e0_buildTraitDecl(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _146339_tokens) {
	if (((*(_146339_tokens)).len() < 3LL)) {
		_1c1886231_pushErr(_self_.ptr(), (*(_146339_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c56c62_TraitDecl> _146813_t = jule::new_ptr<_1c0c56c62_TraitDecl>(_1c0c56c62_TraitDecl{._field_Token=(*(_146339_tokens))[1LL], });;
	if (((*((*(_146813_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1886231_pushErr(_self_.ptr(), (*(_146813_t))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_146813_t))._field_Ident=(*((*(_146813_t))._field_Token))._field_Kind;
	jule::I64 _147613_i = 2LL;;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _147713_bodyTokens = _1c1883b68_range(&(_147613_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _146339_tokens);;
	if ((_147713_bodyTokens == nullptr)) {
		_1c1885a7c_stop(_self_.ptr());
		_1c1886231_pushErr(_self_.ptr(), (*(_146813_t))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_147613_i < (*(_146339_tokens)).len())) {
		_1c1886231_pushErr(_self_.ptr(), (*(_146339_tokens))[_147613_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_146813_t))._field_Public=_1c0d01801_IsPub(&((*(_146813_t))._field_Ident));
	_1c189159e_buildTraitBody(_self_, &(_146813_t), _147713_bodyTokens);
	(*(_146813_t))._field_End=(*(_146339_tokens))[(_147613_i - 1LL)];
	return _146813_t;;
}



inline jule::Ptr<_1c0c4c6a3_FnDecl> _1c1891c31_buildBindFn(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _149335_tokens) {
	(_149335_tokens).mut_slice(1LL);;
	jule::Ptr<_1c0c4c6a3_FnDecl> _149513_f = _1c188c479_buildFn(_self_, &(_149335_tokens), false, true);;
	if ((_149513_f != nullptr)) {
		(*(_149513_f))._field_Public=false;
		(*(_149513_f))._field_Binded=true;
	};
	return _149513_f;;
}



inline jule::Ptr<_1c0c4d781_VarDecl> _1c1892072_buildBindVar(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _150336_tokens) {
	(_150336_tokens).mut_slice(1LL);;
	jule::Ptr<_1c0c4d781_VarDecl> _150513_v = _1c18890ad_buildVar(_self_, _150336_tokens);;
	if ((_150513_v != nullptr)) {
		(*(_150513_v))._field_Public=false;
		(*(_150513_v))._field_Binded=true;
		if (((*(_150513_v))._field_Expr != nullptr)) {
			_1c1886231_pushErr(_self_.ptr(), (*(_150513_v))._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _150513_v;;
}



inline jule::Ptr<_1c0c56525_StructDecl> _1c18923b3_buildBindStruct(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _151639_tokens) {
	(_151639_tokens).mut_slice(1LL);;
	jule::Ptr<_1c0c56525_StructDecl> _151813_s = _1c1890e83_buildStructDecl(_self_, &(_151639_tokens));;
	if ((_151813_s != nullptr)) {
		(*(_151813_s))._field_Public=false;
		{
			auto expr = &((*(_151813_s))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab7d4cbb:;
			if (it != expr_end) {
				jule::Ptr<_1c0c55b2e_FieldDecl> _152125_f = *it;
				{
					(*(_152125_f))._field_Public=true;
				}
				_iter_next_1ab7d4cbb:;
				++it;
				goto _iter_begin_1ab7d4cbb;
			}
			_iter_end_1ab7d4cbb:;
		};
		(*(_151813_s))._field_Binded=true;
	};
	return _151813_s;;
}



inline jule::Ptr<_1c0c52356_TypeAliasDecl> _1c1892704_buildBindTypeAlias(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _153042_tokens) {
	(_153042_tokens).mut_slice(1LL);;
	jule::Ptr<_1c0c52356_TypeAliasDecl> _153213_t = _1c1888178_buildTypeAliasDecl(_self_, &(_153042_tokens));;
	if ((_153213_t != nullptr)) {
		(*(_153213_t))._field_Public=false;
		(*(_153213_t))._field_Binded=true;
	};
	return _153213_t;;
}



inline jule::Ptr<_1c0c53863_UseDecl> _1c1892a45_buildBindUse(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _154036_tokens) {
	if ((_154036_tokens.len() == 1LL)) {
		_1c1886231_pushErr(_self_.ptr(), _154036_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_154036_tokens).mut_slice(1LL);;
	;
	return _1c188da63_buildUseDecl(_self_.ptr(), _154036_tokens, true);;
}



inline jule::Any _1c1892d86_buildBind(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _155134_tokens) {
	jule::Ptr<_1c0c25406_Token> _155213_token = (*(_155134_tokens))[0LL];;
	if (((*(_155134_tokens)).len() == 1LL)) {
		_1c1886231_pushErr(_self_.ptr(), _155213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_155213_token=(*(_155134_tokens))[1LL];
	{
		auto &_match_expr{ (*(_155213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ab7da992:;
			{
				return jule::Any(_1c1891c31_buildBindFn(_self_, (*(_155134_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ab7da695:;
			{
				return jule::Any(_1c1892072_buildBindVar(_self_, (*(_155134_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1ab7da70b:;
			{
				return jule::Any(_1c18923b3_buildBindStruct(_self_, (*(_155134_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ab7da772:;
			{
				return jule::Any(_1c1892704_buildBindTypeAlias(_self_, (*(_155134_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1ab7da62e:;
			{
				_1c1886231_pushErr(_self_.ptr(), _155213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab7da5c9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c4c6a3_FnDecl> _1c18931c7_getMethod(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _157534_tokens) {
	jule::I64 _157613_i = 0LL;;
	jule::Ptr<_1c0c25406_Token> _157713_token = (*(_157534_tokens))[_157613_i];;
	if (((*(_157713_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_157613_i + 1LL) >= (*(_157534_tokens)).len())) {
			_1c1886231_pushErr(_self_.ptr(), _157713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157613_i)++;
		_157713_token=(*(_157534_tokens))[_157613_i];
	};
	if (((*(_157713_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_157613_i + 1LL) >= (*(_157534_tokens)).len())) {
			_1c1886231_pushErr(_self_.ptr(), _157713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157613_i)++;
		_157713_token=(*(_157534_tokens))[_157613_i];
	};
	if (((*(_157713_token))._field_Id != static_cast<jule::U64>(29LLU))) {
		_1c1886231_pushErr(_self_.ptr(), _157713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1c188c479_buildFn(_self_, _157534_tokens, true, false);;
}



inline void _1c189353a_parseImplBody(jule::Ptr<_1c1885780_parser> _self_, jule::Ptr<_1c0c573c2_Impl>* _160438_ipl, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _160455_tokens) {
	jule::Slice<jule::Ptr<_1c1866c17_stmt>> _160513_stmts = _1c18670be_splitStmts(_160455_tokens);;
	{
		auto expr = &(_160513_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7e2a98:;
		if (it != expr_end) {
			jule::Ptr<_1c1866c17_stmt> _160621_stmt = *it;
			{
				(*(_160455_tokens))=(*(_160621_stmt))._field_tokens;
				jule::Ptr<_1c0c25406_Token> _160817_token = (*(_160455_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_160817_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1ab7e31e7:;
						{
							_1c1886ece_pushDirective(_self_.ptr(), _1c1886c26_buildDirective(_self_.ptr(), (*(_160455_tokens))));
							goto _iter_next_1ab7e2a98;
						}
					}
					_match_end_1ab7e3bba:;
				};
				{
					auto &_match_expr{ (*(_160817_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1ab7e42e7:;
						{
							jule::Ptr<_1c0c4d781_VarDecl> _161721_v = _1c18890ad_buildVar(_self_, (*(_160455_tokens)));;
							if ((_161721_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1c0c4d781_VarDecl>> &__jule_push_dest = (*((*(_160438_ipl))))._field_Statics; __jule_push_dest.push(_161721_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1ab7e3cec:;
						{
							jule::Ptr<_1c0c4c6a3_FnDecl> _162421_f = _1c18931c7_getMethod(_self_, _160455_tokens);;
							if ((_162421_f != nullptr)) {
								_1c189123b_checkMethodReceiver(_self_.ptr(), &(_162421_f));
								_1c1893e75_applyFnMeta(_self_.ptr(), &(_162421_f));
								{ jule::Slice<jule::Ptr<_1c0c4c6a3_FnDecl>> &__jule_push_dest = (*((*(_160438_ipl))))._field_Methods; __jule_push_dest.push(_162421_f); };
							};
						}
					}
					else {
						_case_begin_1ab7e423c:;
						{
							_1c1886231_pushErr(_self_.ptr(), _160817_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1ab7e2a98;
						}
					}
					_match_end_1ab7e41d7:;
				};
			}
			_iter_next_1ab7e2a98:;
			++it;
			goto _iter_begin_1ab7e2a98;
		}
		_iter_end_1ab7e2a98:;
	};
}



inline jule::Ptr<_1c0c573c2_Impl> _1c189387b_buildImpl(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _163733_tokens) {
	jule::Ptr<_1c0c25406_Token> _163813_token = _163733_tokens[0LL];;
	if ((_163733_tokens.len() < 2LL)) {
		_1c1886231_pushErr(_self_.ptr(), _163813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _164413_i = 1LL;;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _164613_base;;
	jule::Bool _164623_ok = false;;
	({
		__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType(_self_, &(_163733_tokens), (&(_164413_i)), true);
		_164613_base = __jule_assign_result.__jule_result_arg0;
		_164623_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164623_ok))) {
		return nullptr;;
	};
	if ((_164413_i >= _163733_tokens.len())) {
		_1c1886231_pushErr(_self_.ptr(), _163813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c573c2_Impl> _165513_ipl = jule::new_ptr<_1c0c573c2_Impl>(_1c0c573c2_Impl{._field_Base=_164613_base, });;
	_163813_token=_163733_tokens[_164413_i];
	if (((*(_163813_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*(_163813_token))._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_165513_ipl))._field_Base, (*(_165513_ipl))._field_Dest);
			goto _julec_label_1ab8018dc;
		};
		_1c1885a7c_stop(_self_.ptr());
		_1c1886231_pushErr(_self_.ptr(), _163813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_164413_i)++;
	if ((_164413_i >= _163733_tokens.len())) {
		_1c1885a7c_stop(_self_.ptr());
		_1c1886231_pushErr(_self_.ptr(), _163813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType(_self_, &(_163733_tokens), (&(_164413_i)), true);
		(*(_165513_ipl))._field_Dest = __jule_assign_result.__jule_result_arg0;
		_164623_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164623_ok))) {
		return nullptr;;
	};
	if ((_164413_i >= _163733_tokens.len())) {
		_1c1885a7c_stop(_self_.ptr());
		_1c1886231_pushErr(_self_.ptr(), _163813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1ab8018dc:;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _169313_bodyTokens = _1c1883b68_range(&(_164413_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_163733_tokens));;
	if ((_169313_bodyTokens == nullptr)) {
		_1c1885a7c_stop(_self_.ptr());
		_1c1886231_pushErr(_self_.ptr(), _163813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_164413_i < _163733_tokens.len())) {
		_1c1886231_pushErr(_self_.ptr(), _163733_tokens[_164413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_165513_ipl))._field_End=_163733_tokens[(_164413_i - 1LL)];
	_1c189353a_parseImplBody(_self_, &(_165513_ipl), &(_169313_bodyTokens));
	return _165513_ipl;;
}



inline jule::Any _1c1893bbc_buildNodeData(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _170838_tokens) {
	jule::Ptr<_1c0c25406_Token> _170913_token = (*(_170838_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_170913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ab805902:;
			{
				jule::Ptr<_1c0c4c6a3_FnDecl> _171317_f = _1c188c479_buildFn(_self_, _170838_tokens, false, false);;
				if ((_171317_f != nullptr)) {
					(*(_171317_f))._field_Global=true;
				};
				return jule::Any(_171317_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ab805209:;
			{
				return jule::Any(_1c18890ad_buildVar(_self_, (*(_170838_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ab806040:;
			{
				return jule::Any(_1c1888178_buildTypeAliasDecl(_self_, _170838_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1ab8055c2:;
			{
				return _1c18904b0_buildNodeEnumDecl(_self_, _170838_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1ab805638:;
			{
				return jule::Any(_1c1890e83_buildStructDecl(_self_, _170838_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1ab80569e:;
			{
				return jule::Any(_1c18918e0_buildTraitDecl(_self_, _170838_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1ab805715:;
			{
				return jule::Any(_1c189387b_buildImpl(_self_, (*(_170838_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ab80613e:;
			{
				return _1c1892d86_buildBind(_self_, _170838_tokens);;
			}
		}
		else {
			_case_begin_1ab80555b:;
			{
				_1c1886231_pushErr(_self_.ptr(), _170913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab805506:;
	};
}



inline void _1c1893e75_applyFnMeta(_1c1885780_parser* _self_, jule::Ptr<_1c0c4c6a3_FnDecl>* _174135_f) {
	(*((*(_174135_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1c189422d_applyMeta(_1c1885780_parser* _self_, _1c0c399e2_Node* _174633_node) {
	{
		auto &_match_expr{ (*(_174633_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ab80b771:;
			{
				jule::Ptr<_1c0c4d781_VarDecl> _174917_v = (*(_174633_node))._field_Data.cast_ptr<_1c0c4d781_VarDecl>(&__jule_any_type16);;
				if ((_174917_v == nullptr)) {
					return;;
				};
				(*(_174917_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ab80b7d7:;
			{
				jule::Ptr<_1c0c4c6a3_FnDecl> _175617_f = (*(_174633_node))._field_Data.cast_ptr<_1c0c4c6a3_FnDecl>(&__jule_any_type14);;
				if ((_175617_f == nullptr)) {
					return;;
				};
				_1c1893e75_applyFnMeta(_self_, &(_175617_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ab80b85e:;
			{
				jule::Ptr<_1c0c56525_StructDecl> _176217_sd = (*(_174633_node))._field_Data.cast_ptr<_1c0c56525_StructDecl>(&__jule_any_type13);;
				if ((_176217_sd == nullptr)) {
					return;;
				};
				(*(_176217_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1ab80b71b:;
	};
}



inline void _1c18944d6_pushUseDecl(jule::Ptr<_1c1885780_parser> _self_, jule::Ptr<_1c0c53863_UseDecl>* _177136_decl) {
	{ jule::Slice<jule::Ptr<_1c0c53863_UseDecl>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_UseDecls; __jule_push_dest.push((*(_177136_decl))); };
	if (((*((*(_self_))._field_ast))._field_Nodes.len() > 0LL)) {
		_1c1886231_pushErr(_self_.ptr(), (*((*(_177136_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1c1886594_pushSuggestion(_self_.ptr(), jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c1894827_pushMetaNodes(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _177938_tokens) {
	{
		auto &_match_expr{ (*((*(_177938_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1ab8125ce:;
			{
				;
				jule::Ptr<_1c0c53863_UseDecl> _178317_decl = _1c188da63_buildUseDecl(_self_.ptr(), (*(_177938_tokens)), false);;
				_1c18944d6_pushUseDecl(_self_, &(_178317_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ab812656:;
			{
				if ((((*(_177938_tokens)).len() > 1LL) && ((*((*(_177938_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1c0c53863_UseDecl> _178821_decl = _1c1892a45_buildBindUse(_self_, (*(_177938_tokens)));;
					_1c18944d6_pushUseDecl(_self_, &(_178821_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1ab8126cd:;
			{
				_1c1886ece_pushDirective(_self_.ptr(), _1c1886c26_buildDirective(_self_.ptr(), (*(_177938_tokens))));
				return true;;
			}
		}
		_match_end_1ab8124ad:;
	};
	return false;;
}



inline _1c0c399e2_Node _1c1894b68_parseNode(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _179934_st) {
	_1c0c399e2_Node _180013_node = _1c0c399e2_Node{._field_Token=(*(_179934_st))[0LL], };;
	if (_1c1894827_pushMetaNodes(_self_, _179934_st)) {
		return _180013_node;;
	};
	jule::Any _180813_data = _1c1893bbc_buildNodeData(_self_, _179934_st);;
	if ((_180813_data == nullptr)) {
		return _180013_node;;
	};
	_180013_node._field_Data=_180813_data;
	_1c189422d_applyMeta(_self_.ptr(), &(_180013_node));
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1c1886231_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*(_self_))._field_directives=nullptr;
	return _180013_node;;
}



inline void _1c1894e21_appendNode(jule::Ptr<_1c1885780_parser> _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _182335_st) {
	if (((*(_182335_st)).len() == 0LL)) {
		return;;
	};
	_1c0c399e2_Node _182713_node = _1c1894b68_parseNode(_self_, _182335_st);;
	if (((_182713_node._field_Data == nullptr) || _1c1885d13_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_1c0c399e2_Node> &__jule_push_dest = (*((*(_self_))._field_ast))._field_Nodes; __jule_push_dest.push(_182713_node); };
}



inline void _1c18953e9_removeRange(_1c1885780_parser* _self_, jule::I64 _183430_i, jule::U64 _183438_id, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _183452_tokens, jule::Slice<jule::I64>* _183475_ranges) {
	jule::U64 _18359_close = _1c18846a2_getCloseOfBrace(_183438_id);;
	for (; (_183430_i >= 0LL); (_183430_i)--) {
		{
			jule::Ptr<_1c0c25406_Token> _183713_tok = (*(_183452_tokens))[(*(_183475_ranges))[_183430_i]];;
			if (((*(_183713_tok))._field_Id != _18359_close)) {
				goto _iter_next_1ab81bad3;
			};
			(*(_183475_ranges))=jule::append((*(_183475_ranges)).slice(0LL, _183430_i),(*(_183475_ranges)).slice((_183430_i + 1LL)));
			goto _iter_end_1ab81bad3;
		}
	_iter_next_1ab81bad3:;
	}
	_iter_end_1ab81bad3:;;
}



inline void _1c1895817_pushWrongOrderCloseErr(_1c1885780_parser* _self_, jule::Ptr<_1c0c25406_Token>* _184642_t, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _184654_tokens, jule::Slice<jule::I64>* _184673_ranges) {
	{
		auto &_match_expr{ (*((*(_184654_tokens))[(*(_184673_ranges))[((*(_184673_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1ab81e09c:;
			{
				_1c1886231_pushErr(_self_, (*(_184642_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1ab81e124:;
			{
				_1c1886231_pushErr(_self_, (*(_184642_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1ab81e19b:;
			{
				_1c1886231_pushErr(_self_, (*(_184642_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab81de7b:;
	};
}



inline void _1c1895ce0_pushRangeClose(_1c1885780_parser* _self_, jule::Ptr<_1c0c25406_Token> _185733_t, jule::U64 _185744_left, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _185760_tokens, jule::Slice<jule::I64>* _185783_ranges) {
	jule::I64 _18589_n = (*(_185783_ranges)).len();;
	if ((_18589_n == 0LL)) {
		{
			auto &_match_expr{ (*(_185733_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1ab821a3e:;
				{
					_1c1886231_pushErr(_self_, _185733_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1ab821ab6:;
				{
					_1c1886231_pushErr(_self_, _185733_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1ab821b3d:;
				{
					_1c1886231_pushErr(_self_, _185733_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1ab821962:;
		};
		return;;
	} else if (((*((*(_185760_tokens))[(*(_185783_ranges))[(_18589_n - 1LL)]]))._field_Id != _185744_left)) {
		_1c1895817_pushWrongOrderCloseErr(_self_, &(_185733_t), _185760_tokens, _185783_ranges);
	};
	_1c18953e9_removeRange(_self_, static_cast<jule::I64>((_18589_n - 1LL)), (*(_185733_t))._field_Id, _185760_tokens, _185783_ranges);
}



inline void _1c1896098_checkRanges(_1c1885780_parser* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _187531_tokens) {
	jule::Slice<jule::I64> _187617_ranges = nullptr;;
	{
		auto expr = _187531_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8299e2:;
		if (it != expr_end) {
			jule::I64 _187813_i = it - expr->begin();
			jule::Ptr<_1c0c25406_Token> *_187816_token = it;
			{
				{
					auto &_match_expr{ (*((*(_187816_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ab82a806:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _187617_ranges; __jule_push_dest.push(_187813_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ab82a87d:;
						{
							_1c1895ce0_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U64>(74LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1ab82a905:;
						{
							_1c1895ce0_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U64>(72LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ab82a97c:;
						{
							_1c1895ce0_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U64>(76LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					_match_end_1ab82a718:;
				};
			}
			_iter_next_1ab8299e2:;
			++it;
			_187813_i++;
			goto _iter_begin_1ab8299e2;
		}
		_iter_end_1ab8299e2:;
	};
	{
		auto expr = &(_187617_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab82997b:;
		if (it != expr_end) {
			jule::I64 _189316_i = *it;
			{
				jule::Ptr<_1c0c25406_Token> _189413_token = (*(_187531_tokens))[_189316_i];;
				{
					auto &_match_expr{ (*(_189413_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ab82d320:;
						{
							_1c1886231_pushErr(_self_, _189413_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ab82d397:;
						{
							_1c1886231_pushErr(_self_, _189413_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ab82d41e:;
						{
							_1c1886231_pushErr(_self_, _189413_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1ab82d298:;
				};
			}
			_iter_next_1ab82997b:;
			++it;
			goto _iter_begin_1ab82997b;
		}
		_iter_end_1ab82997b:;
	};
}



inline void _1c1896351_parse(jule::Ptr<_1c1885780_parser> _self_, jule::Ptr<_1c0c2abc0_File>* _190630_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1c0c38a46_Ast>(_1c0c38a46_Ast{._field_File=(*(_190630_f)), });
	(*(_self_))._field_ep=jule::new_ptr<_1c1874b7b_exprBuilder>(_1c1874b7b_exprBuilder{._field_p=_self_});
	_1c1896098_checkRanges(_self_.ptr(), &((*((*(_190630_f))))._field_Tokens));
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c1866c17_stmt>> _191913_stmts = _1c18670be_splitStmts(&((*((*(_190630_f))))._field_Tokens));;
	jule::I64 _192213_i = 0LL;;
	for (; (_192213_i < _191913_stmts.len()); (_192213_i)++) {
		{
			jule::Ptr<_1c1866c17_stmt> _192417_stmt = _191913_stmts[_192213_i];;
			if (((*(_192417_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*(_192417_stmt))._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1ab831972;
			};
			if ((!(_21ce0e5d7_IsTopDirective((*((*(_192417_stmt))._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1ab831972;
			};
			{ jule::Slice<jule::Ptr<_1c0c39e10_Directive>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_TopDirectives; __jule_push_dest.push(_1c1886c26_buildDirective(_self_.ptr(), (*(_192417_stmt))._field_tokens)); };
		}
	_iter_next_1ab831972:;
	}
	_iter_end_1ab831972:;;
	(*(_self_))._field_errors=nullptr;
	for (; (_192213_i < _191913_stmts.len()); (_192213_i)++) {
		{
			jule::Ptr<_1c1866c17_stmt> _194117_stmt = _191913_stmts[_192213_i];;
			_1c1894e21_appendNode(_self_, &((*(_194117_stmt))._field_tokens));
			if (_1c1885d13_stopped(_self_.ptr())) {
				goto _iter_end_1ab83426b;
			};
		}
	_iter_next_1ab83426b:;
	}
	_iter_end_1ab83426b:;;
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_1c1886231_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c1885780_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1c1897b8d_pushErr(_1c18975e9_typeBuilder* _self_, jule::Ptr<_1c0c25406_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1c1886231_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1c1898001_pushSuggestion(_1c18975e9_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1c1886594_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c1898287_buildNamespace(_1c18975e9_typeBuilder* _self_) {
	jule::Ptr<_1c0c3a9e3_TypeDecl> _5513_t = jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1c0c3b791_NamespaceTypeDecl> _5913_nst = jule::new_ptr<_1c0c3b791_NamespaceTypeDecl>();;
	jule::I64 _6013_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1c0c25406_Token> _6217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6013_n & 1LL) == 0LL)) {
				if (((*(_6217_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1c1897b8d_pushErr(_self_, _6217_token, jule::Str::lit("invalid syntax", 14));
					_1c1898001_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1c0c25406_Token>> &__jule_push_dest = (*(_5913_nst))._field_Idents; __jule_push_dest.push(_6217_token); };
			} else if (((*(_6217_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1ab83a4b4;
			};
			(_6013_n)++;
		}
	_iter_next_1ab83a4b4:;
	}
	_iter_end_1ab83a4b4:;;
	(*(_5913_nst))._field_Idents=(*(_5913_nst))._field_Idents.slice(0LL, ((*(_5913_nst))._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	(*(_5913_nst))._field_Kind=_1c1898a3a_buildIdent(_self_);
	(*(_5513_t))._field_Kind=jule::Any(_5913_nst, &__jule_any_type90);
	return _5513_t;;
}



inline jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> _1c189851d_buildGenerics(_1c18975e9_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1c0c25406_Token> _889_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_889_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _9313_parts = _1c18987a4_identGenerics(_self_);;
	if ((_9313_parts.len() == 0LL)) {
		_1c1897b8d_pushErr(_self_, _889_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> _9913_types = jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>>::alloc(0LL, _9313_parts.len());;
	{
		auto expr = &(_9313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab842400:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c25406_Token>> _10021_part = *it;
			{
				jule::I64 _10117_j = 0LL;;
				jule::Ptr<_1c0c3a9e3_TypeDecl> _10217_t;;
				({
					__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType((*(_self_))._field_p, &(_10021_part), (&(_10117_j)), true);
					_10217_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10117_j < _10021_part.len())) {
					_1c1897b8d_pushErr(_self_, _10021_part[_10117_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>> &__jule_push_dest = _9913_types; __jule_push_dest.push(_10217_t); };
			}
			_iter_next_1ab842400:;
			++it;
			goto _iter_begin_1ab842400;
		}
		_iter_end_1ab842400:;
	};
	return _9913_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _1c18987a4_identGenerics(_1c18975e9_typeBuilder* _self_) {
	jule::I64 _1129_first = (*((*(_self_))._field_i));;
	jule::I64 _11313_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1c0c25406_Token> _11513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11513_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1ab84548b:;
					{
						(_11313_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1ab845513:;
					{
						(_11313_rangeN)--;
					}
				}
				_match_end_1ab845425:;
			};
			if ((_11313_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1ab844622;
			};
		}
	_iter_next_1ab844622:;
	}
	_iter_end_1ab844622:;;
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _12713_tokens = (*(_self_))._field_tokens.slice((_1129_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _12813_parts;;
	jule::Slice<_21ce0c86b_Log> _12820_errors;;
	({
		__jule_tuple_ssx_1c0c25406_Token__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c18843d8_parts(&(_12713_tokens), static_cast<jule::U64>(5LLU), true);
		_12813_parts = __jule_assign_result.__jule_result_arg0;
		_12820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*((*(_self_))._field_p))._field_errors).append(_12820_errors);;
	};
	return _12813_parts;;
}



inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c1898a3a_buildIdent(_1c18975e9_typeBuilder* _self_) {
	jule::Bool _13613_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13613_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1c1898287_buildNamespace(_self_);;
	};
	jule::Ptr<_1c0c25406_Token> _14013_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1c0c3b0ed_IdentTypeDecl> _14113_it = jule::new_ptr<_1c0c3b0ed_IdentTypeDecl>(_1c0c3b0ed_IdentTypeDecl{._field_Token=_14013_token, ._field_Ident=(*(_14013_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _14713_itd = jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_14113_it, &__jule_any_type20)});;
	if (((!(_13613_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_14113_it))._field_Generics=_1c189851d_buildGenerics(_self_);
		return _14713_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1c1897b8d_pushErr(_self_, _14013_token, jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c1897b8d_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	jule::Ptr<_1c0c3b3ea_SubIdentTypeDecl> _16413_sit = jule::new_ptr<_1c0c3b3ea_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_1c0c3b0ed_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push(_14113_it); };
	jule::Ptr<_1c0c3a9e3_TypeDecl> _16613_ident = _1c1898a3a_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16613_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ab850177:;
			{
				{ jule::Slice<jule::Ptr<_1c0c3b0ed_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push((*(_16613_ident))._field_Kind.cast_ptr<_1c0c3b0ed_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ab8501dd:;
			{
				((*(_16413_sit))._field_Idents).append((*((*(_16613_ident))._field_Kind.cast_ptr<_1c0c3b3ea_SubIdentTypeDecl>(&__jule_any_type86)))._field_Idents);;
			}
		}
		_match_end_1ab850122:;
	};
	return jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_16413_sit, &__jule_any_type86)});;
}



inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c1898cc1_buildCppLink(_1c18975e9_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1c1897b8d_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _18513_t = _1c1898a3a_buildIdent(_self_);;
	(*((*(_18513_t))._field_Kind.cast_ptr<_1c0c3b0ed_IdentTypeDecl>(&__jule_any_type20)))._field_Binded=true;
	return _18513_t;;
}



inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c1899057_buildFn(_1c18975e9_typeBuilder* _self_) {
	jule::Ptr<_1c0c25406_Token> _19113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1c0c4c6a3_FnDecl> _19213_f = _1c188bec3_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19213_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c0c4ca16_IsAnon(_19213_f.ptr())))) {
		_1c1897b8d_pushErr(_self_, (*(_19213_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Token=_19113_token, ._field_Kind=jule::Any(_19213_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c18992dd_buildPtr(_1c18975e9_typeBuilder* _self_) {
	jule::Ptr<_1c0c25406_Token> _20613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1c1897b8d_pushErr(_self_, _20613_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1c0c3c51c_PtrTypeDecl>(_1c0c3c51c_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type71)});;
	};
	jule::Ptr<_1c0c3a9e3_TypeDecl> _22313_elem = _1c189a344_step(_self_);;
	if ((_22313_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1c0c3c51c_PtrTypeDecl>(_1c0c3c51c_PtrTypeDecl{._field_Elem=_22313_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c1899574_buildSptr(_1c18975e9_typeBuilder* _self_) {
	jule::Ptr<_1c0c25406_Token> _23713_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1c1897b8d_pushErr(_self_, _23713_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _24413_elem = _1c189a344_step(_self_);;
	if ((_24413_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Token=_23713_token, ._field_Kind=jule::Any(jule::new_ptr<_1c0c3ba8d_SptrTypeDecl>(_1c0c3ba8d_SptrTypeDecl{._field_Elem=_24413_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c189980a_buildSlc(_1c18975e9_typeBuilder* _self_) {
	jule::Ptr<_1c0c25406_Token> _25813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _26013_elem = _1c189a344_step(_self_);;
	if ((_26013_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Token=_25813_token, ._field_Kind=jule::Any(jule::new_ptr<_1c0c3be23_SlcTypeDecl>(_1c0c3be23_SlcTypeDecl{._field_Elem=_26013_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c1899a91_buildArr(_1c18975e9_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _27313_exprTokens = _1c1883b68_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1c1897b8d_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1c0c3a9e3_TypeDecl> _27913_elem = _1c189a344_step(_self_);;
	if ((_27913_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0c3ccae_ArrTypeDecl> _28413_arrt = jule::new_ptr<_1c0c3ccae_ArrTypeDecl>(_1c0c3ccae_ArrTypeDecl{._field_Elem=_27913_elem, });;
	jule::Ptr<_1c0c25406_Token> _28813_token = _27313_exprTokens[0LL];;
	if (((_27313_exprTokens.len() == 1LL) && ((*(_28813_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_28413_arrt))._field_Size=_1c18868d5_buildExpr((*(_self_))._field_p, &(_27313_exprTokens));
	};
	return jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Token=_28813_token, ._field_Kind=jule::Any(_28413_arrt, &__jule_any_type69)});;
}



inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c1899d27_buildMap(_1c18975e9_typeBuilder* _self_) {
	jule::Ptr<_1c0c25406_Token> _30213_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1c1897b8d_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _31013_keyTokens = _1c1883b68_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1c1897b8d_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_31013_keyTokens.len() == 0LL)) {
		_1c1897b8d_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1c0c3d50c_MapTypeDecl> _31913_mapt = jule::new_ptr<_1c0c3d50c_MapTypeDecl>();;
	jule::I64 _32013_j = 0LL;;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _32113_keyt;;
	jule::Bool _32123_ok = false;;
	({
		__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType((*(_self_))._field_p, &(_31013_keyTokens), (&(_32013_j)), (*(_self_))._field_err);
		_32113_keyt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	} else if ((_32013_j < _31013_keyTokens.len())) {
		_1c1897b8d_pushErr(_self_, _31013_keyTokens[_32013_j], jule::Str::lit("invalid syntax", 14));
	};
	(*(_31913_mapt))._field_Key=_32113_keyt;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _32913_valt;;
	({
		__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_assign_result = _1c1887d37_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32913_valt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	};
	(*(_31913_mapt))._field_Val=_32913_valt;
	return jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Token=_30213_mapToken, ._field_Kind=jule::Any(_31913_mapt, &__jule_any_type73)});;
}



inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c189a0ad_buildEnumerable(_1c18975e9_typeBuilder* _self_) {
	jule::Ptr<_1c0c25406_Token> _34113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1c1897b8d_pushErr(_self_, _34113_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34113_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34113_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1c189980a_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1c1899a91_buildArr(_self_);;
}



inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c189a344_step(_1c18975e9_typeBuilder* _self_) {
	jule::Ptr<_1c0c25406_Token> _3569_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3569_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ab86d470:;
			{
				return _1c1898a3a_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ab86d4d6:;
			{
				return _1c1898cc1_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ab86c969:;
			{
				return _1c1899057_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ab86c9d0:;
			{
				return _1c18992dd_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab86ca46:;
			{
				return _1c1899574_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ab86caac:;
			{
				return jule::new_ptr<_1c0c3a9e3_TypeDecl>(_1c0c3a9e3_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1c0c3ba8d_SptrTypeDecl>(_1c0c3ba8d_SptrTypeDecl{._field_Elem=_1c1899574_buildSptr(_self_)}), &__jule_any_type72)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1ab86d56e:;
			{
				return _1c189a0ad_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1ab86d5d5:;
			{
				return _1c1899d27_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1ab86c903:;
			{
				((*((*(_self_))._field_i)))++;
				_1c1897b8d_pushErr(_self_, _3569_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1ab86c89d:;
	};
}



inline __jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool _1c189a5ca_build(_1c18975e9_typeBuilder* _self_) {
	__jule_tuple_x_1c0c3a9e3_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c0c3a9e3_TypeDecl> _38813_root = _1c189a344_step(_self_);;
	if ((_38813_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1c1896d46_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38813_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c18975e9_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c10b5a1b_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1c10b7523_pushErr(_1c10b6ec3_directiveEval* _self_, jule::Ptr<_1c0c25406_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_21ce0c86b_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_21ce0c86b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*(_2126_t))._field_Column, ._field_Path=(*((*(_2126_t))._field_File))._field_Path, ._field_Text=_21ce0cccd_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _1c10b791e_splitOperans(_1c10b6ec3_directiveEval* _self_, jule::U64 _3331_op, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _3413_parts = jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3513_i = 0LL;;
	jule::I64 _3613_rangeN = 0LL;;
	jule::I64 _3713_last = 0LL;;
	for (; (_3513_i < ((*(_3349_tokens)).len() - 1LL)); (_3513_i)++) {
		{
			jule::Ptr<_1c0c25406_Token> _3913_b = (*(_3349_tokens))[_3513_i];;
			{
				auto &_match_expr{ (*(_3913_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ab891cac:;
					{
						(_3613_rangeN)++;
						goto _iter_next_1ab8911c9;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ab891d34:;
					{
						(_3613_rangeN)--;
					}
				}
				_match_end_1ab891c46:;
			};
			if (((_3613_rangeN > 0LL) || ((*(_3913_b))._field_Id != _3331_op))) {
				goto _iter_next_1ab8911c9;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last, _3513_i)); };
			_3713_last=static_cast<jule::I64>((_3513_i + 1LL));
		}
	_iter_next_1ab8911c9:;
	}
	_iter_end_1ab8911c9:;;
	if ((_3713_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last)); };
	} else {
		_1c10b7523_pushErr(_self_, (*(_3349_tokens))[(_3713_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3413_parts;;
}



inline jule::Bool _1c10b7c60_evalDirectiveIdent(_1c10b6ec3_directiveEval* _self_, jule::Str _6433_ident) {
	if ((_6433_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8946d8:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1ab8946d8:;
			++it;
			goto _iter_begin_1ab8946d8;
		}
		_iter_end_1ab8946d8:;
	};
	return false;;
}



inline jule::Bool _1c10b80a1_evalDirectivePart(_1c10b6ec3_directiveEval* _self_, jule::Slice<jule::Ptr<_1c0c25406_Token>> _7840_part) {
	jule::Bool _799_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_799_logicalNot) {
		(_7840_part).mut_slice(1LL);;
	};
	if ((_7840_part.len() > 1LL)) {
		_1c10b7523_pushErr(_self_, _7840_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8913_result = _1c10b7c60_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_799_logicalNot) {
		_8913_result=(!(_8913_result));
	};
	return _8913_result;;
}



inline jule::Bool _1c10b8337_eval(_1c10b6ec3_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1c10b7523_pushErr(_self_, (*((*(_self_))._field_d))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10213_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _10413_logicalOrParts = _1c10b791e_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*((*(_self_))._field_d))._field_Args));;
	if ((_10413_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10413_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8998db:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c0c25406_Token>> _10921_part = *it;
			{
				jule::Bool _11017_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _11117_logicalAndParts = _1c10b791e_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10921_part));;
				if ((_11117_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11117_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab89ad1b:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1c0c25406_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1c0c25406_Token> _11717_first = _11625_andPart[0LL];;
							if (((*(_11717_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1c0c25406_Token> _11921_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11921_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1c10b7523_pushErr(_self_, _11717_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11625_andPart).mut_slice(1LL, (_11625_andPart.len() - 1LL));;
							};
							_11017_and=(_11017_and && _1c10b80a1_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1ab89ad1b:;
						++it;
						goto _iter_begin_1ab89ad1b;
					}
					_iter_end_1ab89ad1b:;
				};
				_10213_result=(_10213_result || _11017_and);
			}
			_iter_next_1ab8998db:;
			++it;
			goto _iter_begin_1ab8998db;
		}
		_iter_end_1ab8998db:;
	};
	return _10213_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c10b6ec3_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c189b5dc_JuleImporter> static__1c189b9d8_New(_1c10b5a1b_CompileInfo _5819_info) {
	jule::Ptr<_1c189b5dc_JuleImporter> _5913_imp = jule::new_ptr<_1c189b5dc_JuleImporter>(_1c189b5dc_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_21d2d524e_PathStdlib}), });;
	_1c10b639b_initVars(&((*(_5913_imp))._field_vars), &(_5819_info));
	return _5913_imp;;
}



inline jule::Slice<jule::Ptr<_1c0cd353b_ImportInfo>> _1c189bc6e_AllPackages(_1c189b5dc_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1c189c1ae_SetModPath(_1c189b5dc_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1c189c445_GetModPath(_1c189b5dc_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1c189c786_ModById(_1c189b5dc_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1c0cd353b_ImportInfo> _1c189cac7_GetImport(_1c189b5dc_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8a2086:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1ab8a2086:;
			++it;
			goto _iter_begin_1ab8a2086;
		}
		_iter_end_1ab8a2086:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1c0c38a46_Ast__jule_tuple_s_21ce0c86b_Log _1c189cec3_ImportPackage(_1c189b5dc_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1c0c38a46_Ast__jule_tuple_s_21ce0c86b_Log __jule_func_result;
	jule::Slice<jule::Ptr<_21b9b0d8d_DirEntry>> _9713_dirents = ({
		auto except = static__21cd6e49d_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_21ce0c86b_Log>::make({_1c189b103_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_21b9b0d8d_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10213_newMod = _1c0d009ed_FindModuleFileDeep(_9632_path);;
		if ((_10213_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10213_newMod;
			jule::Slice<_21ce0c86b_Log> _10521_errs = _1c0d00cb7_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10521_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10521_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1c0c38a46_Ast>> _11213_asts = jule::Slice<jule::Ptr<_1c0c38a46_Ast>>::alloc(0LL, _9713_dirents.len());;
	{
		auto expr = &(_9713_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8a34a5:;
		if (it != expr_end) {
			jule::Ptr<_21b9b0d8d_DirEntry> _11316_dirent = *it;
			{
				if ((_21b9be990_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_21cd49aa5_HasSuffix((*(_11316_dirent))._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1ab8a34a5;
				};
				jule::Str _11913__path = _21cd6b467_Join(jule::Slice<jule::Str>::make({_9632_path,(*(_11316_dirent))._field_Name}));;
				jule::Ptr<_1c0c2abc0_File> _12017_file = _1c0c2c067_NewFileSet(_11913__path);;
				_1c0c2b0aa_Fill(_12017_file.ptr(), _1c189ad28_readBuff((*(_12017_file))._field_Path));
				jule::Slice<_21ce0c86b_Log> _12217_errors = _1c0c3867d_Lex(_12017_file, static_cast<jule::I64>(0LL));;
				if ((_12217_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12217_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1c181ad86_FileInfo> _12717_finfo = _1c181db25_ParseFile(_12017_file);;
				if (((*(_12717_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*(_12717_finfo))._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1c10b4bb3_isPassFileAnnotation((*(_11316_dirent))._field_Name)))) {
					goto _iter_next_1ab8a34a5;
				};
				jule::Bool _13713_r = false;;
				jule::Slice<_21ce0c86b_Log> _13720_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c189d6aa_isPassBuildDirectives(_self_, &((*(_12717_finfo))._field_Ast));
					_13713_r = __jule_assign_result.__jule_result_arg0;
					_13720_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13720_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13720_logs;
					return __jule_func_result;;
				};
				if ((!(_13713_r))) {
					goto _iter_next_1ab8a34a5;
				};
				{ jule::Slice<jule::Ptr<_1c0c38a46_Ast>> &__jule_push_dest = _11213_asts; __jule_push_dest.push((*(_12717_finfo))._field_Ast); };
			}
			_iter_next_1ab8a34a5:;
			++it;
			goto _iter_begin_1ab8a34a5;
		}
		_iter_end_1ab8a34a5:;
	};
	__jule_func_result.__jule_result_arg0 = _11213_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1c189d27b_Imported(_1c189b5dc_JuleImporter* _self_, jule::Ptr<_1c0cd353b_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8a5d8c:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*(_15516_p))._field_LinkPath == (*(_15331_imp))._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1ab8a5d8c:;
			++it;
			goto _iter_begin_1ab8a5d8c;
		}
		_iter_end_1ab8a5d8c:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab8accc8:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*(_15331_imp))._field_ModId=_16217_i;
						goto _julec_label_1ab8aea11;
					};
				}
				_iter_next_1ab8accc8:;
				++it;
				_16217_i++;
				goto _iter_begin_1ab8accc8;
			}
			_iter_end_1ab8accc8:;
		};
		(*(_15331_imp))._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1ab8aea11:;
	};
	{ jule::Slice<jule::Ptr<_1c0cd353b_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_21ce0c86b_Log _1c189d6aa_isPassBuildDirectives(_1c189b5dc_JuleImporter* _self_, jule::Ptr<_1c0c38a46_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_21ce0c86b_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8b0e41:;
		if (it != expr_end) {
			jule::Ptr<_1c0c39e10_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1ab8b0e41;
				};
				_1c10b6ec3_directiveEval _18417_de = _1c10b6ec3_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18813_result = _1c10b8337_eval(&_18417_de);;
				if ((_18417_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18417_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18813_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab8b0e41:;
			++it;
			goto _iter_begin_1ab8b0e41;
		}
		_iter_end_1ab8b0e41:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c189b5dc_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c18a15d1_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab8d1acc_isCommonOrdered(jule::Slice<jule::Ptr<_1c0c5b64b_Struct>> _1834_s, jule::Ptr<_1c0c5b64b_Struct> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8d2b22:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5b64b_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab8d356d:;
					if (it != expr_end) {
						jule::Ptr<_1c0c5b64b_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1ab8d356d:;
						++it;
						goto _iter_begin_1ab8d356d;
					}
					_iter_end_1ab8d356d:;
				};
			}
			_iter_next_1ab8d2b22:;
			++it;
			goto _iter_begin_1ab8d2b22;
		}
		_iter_end_1ab8d2b22:;
	};
	return true;;
}

inline jule::Bool _1ab8d65e8_isCommonOrdered(jule::Slice<jule::Ptr<_1c0d2b94c_Var>> _1834_s, jule::Ptr<_1c0d2b94c_Var> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8d75e9:;
		if (it != expr_end) {
			jule::Ptr<_1c0d2b94c_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab8d8045:;
					if (it != expr_end) {
						jule::Ptr<_1c0d2b94c_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1ab8d8045:;
						++it;
						goto _iter_begin_1ab8d8045;
					}
					_iter_end_1ab8d8045:;
				};
			}
			_iter_next_1ab8d75e9:;
			++it;
			goto _iter_begin_1ab8d75e9;
		}
		_iter_end_1ab8d75e9:;
	};
	return true;;
}



inline void _1ab8cd6de_orderCommon(jule::Slice<jule::Ptr<_1c0c5b64b_Struct>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8ce4c0:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1ab8d1acc_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1ab8d0449:;
				}
				_iter_end_1ab8d0449:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1ab8ce4c0;
				};
				(_3213_n)--;
			}
			_iter_next_1ab8ce4c0:;
			++it;
			goto _iter_begin_1ab8ce4c0;
		}
		_iter_end_1ab8ce4c0:;
	};
}

inline void _1ab8d246d_orderCommon(jule::Slice<jule::Ptr<_1c0d2b94c_Var>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8d452a:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_1ab8d65e8_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_1ab8d4e65:;
				}
				_iter_end_1ab8d4e65:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_1ab8d452a;
				};
				(_3213_n)--;
			}
			_iter_next_1ab8d452a:;
			++it;
			goto _iter_begin_1ab8d452a;
		}
		_iter_end_1ab8d452a:;
	};
}



inline void static__1c18a223b_orderStructures(jule::Slice<jule::Ptr<_1c0c5b64b_Struct>>* _5136_structs) {
	_1ab8cd6de_orderCommon(_5136_structs);
}



inline void static__1c18a246c_orderVars(jule::Slice<jule::Ptr<_1c0d2b94c_Var>>* _5730_vars) {
	_1ab8d246d_orderCommon(_5730_vars);
}





std::ostream &operator<<(std::ostream &_Stream, _1c18a1845_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c19d2b96_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1c1a1779c_optimizeChild(jule::Ptr<_1c1a172e6_scopeDeadCode> _self_, jule::Ptr<_1c0cb210d_Scope>* _3938_s) {
	jule::Ptr<_1c1a172e6_scopeDeadCode> _4013_sdc = jule::new_ptr<_1c1a172e6_scopeDeadCode>(_1c1a172e6_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1c1a1a1b7_optimizeStmts(_4013_sdc);
	};
}



inline void _1c1a17a55_optimizeBodyChildExceptional(jule::Ptr<_1c1a172e6_scopeDeadCode> _self_, jule::Ptr<_1c0cb210d_Scope>* _5053_s) {
	jule::Ptr<_1c1a172e6_scopeDeadCode> _5113_sdc = jule::new_ptr<_1c1a172e6_scopeDeadCode>(_1c1a172e6_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, ._field_except=true});;
	{
		_1c1a1a1b7_optimizeStmts(_5113_sdc);
	};
}



inline void _1c1a17d0d_optimizeBodyChild(jule::Ptr<_1c1a172e6_scopeDeadCode> _self_, jule::Ptr<_1c0cb210d_Scope>* _6142_s) {
	jule::Ptr<_1c1a172e6_scopeDeadCode> _6213_sdc = jule::new_ptr<_1c1a172e6_scopeDeadCode>(_1c1a172e6_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_1c1a1a1b7_optimizeStmts(_6213_sdc);
	};
}



inline void _1c1a180b6_optimizeExprModel(jule::Ptr<_1c1a172e6_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1c1a1b54d_exprDeadCode _729_edc = static__1c1a1bb8b_new(&(_self_));;
	_1c1a22ab5_optimize(&_729_edc, _7142_model);
}



inline void _1c1a182b4_eliminateFollowed(_1c1a172e6_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1c1a172e6_scopeDeadCode> _8313_parent = (*(_self_))._field_parent;;
	while ((_8313_parent != nullptr)) {
		{
			{
				(*((*(_8313_parent))._field_stmts))=(*((*(_8313_parent))._field_stmts)).slice(0LL, ((*(_8313_parent))._field_i + 1LL));
			};
			_8313_parent=(*(_8313_parent))._field_parent;
		}
	_iter_next_1ab958eb7:;
	}
	_iter_end_1ab958eb7:;;
}



inline void _1c1a1856c_pushGoto(jule::Ptr<_1c1a172e6_scopeDeadCode> _self_, jule::Ptr<_1c0cb4d7a_GotoSt> _9232_gt) {
	jule::I64 _9313_i = 0LL;;
	for (; (_9313_i < (*((*(_self_))._field_labels)).len()); (_9313_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_9313_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1ab95c20c:;
	}
	_iter_end_1ab95c20c:;;
	{ jule::Slice<jule::Ptr<_1c0cb4d7a_GotoSt>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _1c1a18825_pushLabel(jule::Ptr<_1c1a172e6_scopeDeadCode> _self_, jule::Ptr<_1c0cb49a1_Label> _10233_l) {
	jule::I64 _10313_i = 0LL;;
	while ((_10313_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_10313_i]))._field_Ident)) {
				jule::copy(((*((*(_self_))._field_gotos)).slice(_10313_i)), ((*((*(_self_))._field_gotos)).slice((_10313_i + 1LL))));
				(*((*(_self_))._field_gotos))=(*((*(_self_))._field_gotos)).slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));
				goto _iter_next_1ab95e2ca;
			};
			(_10313_i)++;
		}
	_iter_next_1ab95e2ca:;
	}
	_iter_end_1ab95e2ca:;;
	{ jule::Slice<jule::Ptr<_1c0cb49a1_Label>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _1c1a18acd_optimizeRangeIter(jule::Ptr<_1c1a172e6_scopeDeadCode> _self_, jule::Ptr<_1c0cb3e45_RangeIter> _11541_it) {
	_1c1a180b6_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_1c1a17d0d_optimizeBodyChild(_self_, &((*(_11541_it))._field_Scope));
}



inline void _1c1a18d86_optimizeWhileIter(jule::Ptr<_1c1a172e6_scopeDeadCode> _self_, jule::Ptr<_1c0cb34e9_WhileIter> _12041_it) {
	_1c1a180b6_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*(_12041_it))._field_Next != nullptr)) {
		_1c1a19eb9_optimizeStmt(_self_, (*(_12041_it))._field_Next);
	};
	_1c1a17d0d_optimizeBodyChild(_self_, &((*(_12041_it))._field_Scope));
}



inline void _1c1a1913e_optimizeInfIter(jule::Ptr<_1c1a172e6_scopeDeadCode> _self_, jule::Ptr<_1c0cb3043_InfIter> _12839_it) {
	_1c1a17d0d_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _1c1a193e7_optimizeConditional(jule::Ptr<_1c1a172e6_scopeDeadCode> _self_, jule::Ptr<_1c0cb2c46_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab96615b:;
		if (it != expr_end) {
			jule::Ptr<_1c0cb252b_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1c1a180b6_optimizeExprModel(_self_, &((*(_13321_case))._field_Expr));
					_1c1a17d0d_optimizeBodyChild(_self_, &((*(_13321_case))._field_Scope));
				};
			}
			_iter_next_1ab96615b:;
			++it;
			goto _iter_begin_1ab96615b;
		}
		_iter_end_1ab96615b:;
	};
	if (((*(_13243_c))._field_Default != nullptr)) {
		if (((*(_13243_c))._field_Elifs.len() == 0LL)) {
			_1c1a1779c_optimizeChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		} else {
			_1c1a17d0d_optimizeBodyChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		};
	};
}



inline void _1c1a196a0_optimizeMatch(jule::Ptr<_1c1a172e6_scopeDeadCode> _self_, jule::Ptr<_1c0cb6244_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9696c0:;
		if (it != expr_end) {
			jule::Ptr<_1c0cb6d7c_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab96a11b:;
					if (it != expr_end) {
						jule::Ptr<_1c0d80352_Data> _15225_expr = *it;
						{
							_1c1a180b6_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_1ab96a11b:;
						++it;
						goto _iter_begin_1ab96a11b;
					}
					_iter_end_1ab96a11b:;
				};
				_1c1a17d0d_optimizeBodyChild(_self_, &((*(_15121_case))._field_Scope));
			}
			_iter_next_1ab9696c0:;
			++it;
			goto _iter_begin_1ab9696c0;
		}
		_iter_end_1ab9696c0:;
	};
	if (((*(_15037_m))._field_Default != nullptr)) {
		if (((*(_15037_m))._field_Cases.len() == 0LL)) {
			_1c1a1779c_optimizeChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		} else {
			_1c1a17d0d_optimizeBodyChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		};
	};
}



inline void _1c1a19958_optimizeAssign(jule::Ptr<_1c1a172e6_scopeDeadCode> _self_, jule::Ptr<_1c0cb570a_Assign> _16838_assign) {
	_1c1a180b6_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_L))._field_Model));
	_1c1a180b6_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_R))._field_Model));
}



inline void _1c1a19c11_optimizeMultiAssign(jule::Ptr<_1c1a172e6_scopeDeadCode> _self_, jule::Ptr<_1c0cb5ad4_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab96e52c:;
		if (it != expr_end) {
			jule::Ptr<_1c0d80352_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1c1a180b6_optimizeExprModel(_self_, &((*(_17421_l))._field_Model));
				};
			}
			_iter_next_1ab96e52c:;
			++it;
			goto _iter_begin_1ab96e52c;
		}
		_iter_end_1ab96e52c:;
	};
	_1c1a180b6_optimizeExprModel(_self_, &((*(_17343_assign))._field_R));
}



inline void _1c1a19eb9_optimizeStmt(jule::Ptr<_1c1a172e6_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ab9711cc:;
			{
				jule::Ptr<_1c0cb210d_Scope> _18517_scope = _18236_st.cast_ptr<_1c0cb210d_Scope>(&__jule_any_type22);;
				if ((*(_18517_scope))._field_Deferred) {
					_1c1a1a4e7_eliminateDeadCodeOfScope(_18517_scope);
				} else {
					_1c1a1779c_optimizeChild(_self_, &(_18517_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ab971243:;
			{
				_1c1a18acd_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1c0cb3e45_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ab9712a9:;
			{
				_1c1a18d86_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1c0cb34e9_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ab971331:;
			{
				_1c1a1913e_optimizeInfIter(_self_, _18236_st.cast_ptr<_1c0cb3043_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ab9713a8:;
			{
				_1c1a193e7_optimizeConditional(_self_, _18236_st.cast_ptr<_1c0cb2c46_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ab971430:;
			{
				_1c1a196a0_optimizeMatch(_self_, _18236_st.cast_ptr<_1c0cb6244_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ab9714a7:;
			{
				_1c1a19958_optimizeAssign(_self_, _18236_st.cast_ptr<_1c0cb570a_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ab97152e:;
			{
				_1c1a19c11_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1c0cb5ad4_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ab9715a6:;
			{
				jule::Ptr<_1c0d80352_Data> _20617_d = _18236_st.cast_ptr<_1c0d80352_Data>(&__jule_any_type24);;
				if ((*(_self_))._field_except) {
					goto _match_end_1ab971089;
				};
				{
					auto &_match_expr{ (*(_20617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type29) {
						_case_begin_1ab976820:;
						{
							_1c1a182b4_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1ab976eb3:;
						{
							_1c1a180b6_optimizeExprModel(_self_, &((*(_20617_d))._field_Model));
						}
					}
					_match_end_1ab976e5d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1ab97162d:;
			{
				_1c1a182b4_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1ab9716a5:;
			{
				_1c1a1856c_pushGoto(_self_, _18236_st.cast_ptr<_1c0cb4d7a_GotoSt>(&__jule_any_type42));
				_1c1a182b4_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ab97172c:;
			{
				_1c1a18825_pushLabel(_self_, _18236_st.cast_ptr<_1c0cb49a1_Label>(&__jule_any_type21));
			}
		}
		_match_end_1ab971089:;
	};
}



inline void _1c1a1a1b7_optimizeStmts(jule::Ptr<_1c1a172e6_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_stmts)).len()); ((*(_self_))._field_i)++) {
		{
			_1c1a19eb9_optimizeStmt(_self_, (*((*(_self_))._field_stmts))[(*(_self_))._field_i]);
		}
	_iter_next_1ab97967a:;
	}
	_iter_end_1ab97967a:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c1a172e6_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1c1a1b54d_exprDeadCode static__1c1a1bb8b_new(jule::Ptr<_1c1a172e6_scopeDeadCode>* _4824_s) {
	return _1c1a1b54d_exprDeadCode{._field_s=(*(_4824_s))};;
}



inline void _1c1a1be44_binary(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c63862_BinopExprModel> _5425_m) {
	_1c1a22ab5_optimize(_self_, &((*((*(_5425_m))._field_Left))._field_Model));
	_1c1a22ab5_optimize(_self_, &((*((*(_5425_m))._field_Right))._field_Model));
}



inline void _1c1a1c1ec_unary(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c63c3b_UnaryExprModel> _5924_m) {
	_1c1a22ab5_optimize(_self_, &((*((*(_5924_m))._field_Expr))._field_Model));
}



inline void _1c1a1c4a5_structureLit(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c64610_StructLitExprModel> _6331_m) {
	{
		auto expr = &((*(_6331_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab97d20b:;
		if (it != expr_end) {
			jule::Ptr<_1c0c64269_StructArgExprModel> _6421_arg = *it;
			{
				_1c1a22ab5_optimize(_self_, &((*((*(_6421_arg))._field_Expr))._field_Model));
			}
			_iter_next_1ab97d20b:;
			++it;
			goto _iter_begin_1ab97d20b;
		}
		_iter_end_1ab97d20b:;
	};
}



inline void _1c1a1c75d_allocStructure(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c6490c_AllocStructLitExprModel> _6933_m) {
	_1c1a1c4a5_structureLit(_self_, (*(_6933_m))._field_Lit);
}



inline void _1c1a1ca16_casting(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c64e90_CastingExprModel> _7326_m) {
	_1c1a22ab5_optimize(_self_, &((*(_7326_m))._field_Expr));
}



inline void _1c1a1ccbe_args(_1c1a1b54d_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args) {
	{
		auto expr = _7724_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9854ee:;
		if (it != expr_end) {
			jule::Any _7821_arg = *it;
			{
				_1c1a22ab5_optimize(_self_, &(_7821_arg));
			}
			_iter_next_1ab9854ee:;
			++it;
			goto _iter_begin_1ab9854ee;
		}
		_iter_end_1ab9854ee:;
	};
}



inline void _1c1a1d077_funcCall(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c65842_FnCallExprModel> _8327_m) {
	_1c1a22ab5_optimize(_self_, &((*(_8327_m))._field_Expr));
	_1c1a1ccbe_args(_self_, &((*(_8327_m))._field_Args));
	if (((*(_8327_m))._field_Except != nullptr)) {
		_1c1a17a55_optimizeBodyChildExceptional((*(_self_))._field_s, &((*(_8327_m))._field_Except));
	};
}



inline void _1c1a1d330_slice(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c65c1b_SliceExprModel> _9124_m) {
	_1c1a1ccbe_args(_self_, &((*(_9124_m))._field_Elems));
}



inline void _1c1a1d5d8_array(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c68c63_ArrayExprModel> _9524_m) {
	if ((((*(_9524_m))._field_Elems.len() == 2LL) && ((*(_9524_m))._field_Elems[1LL] == nullptr))) {
		_1c1a22ab5_optimize(_self_, &((*(_9524_m))._field_Elems[0LL]));
	};
	_1c1a1ccbe_args(_self_, &((*(_9524_m))._field_Elems));
}



inline void _1c1a1d891_indexing(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c661c2_IndexingExprModel> _10227_m) {
	_1c1a22ab5_optimize(_self_, &((*((*(_10227_m))._field_Expr))._field_Model));
	_1c1a22ab5_optimize(_self_, &((*((*(_10227_m))._field_Index))._field_Model));
}



inline void _1c1a1db49_anonFunc(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c6659b_AnonFnExprModel> _10727_m) {
	_1c1a1a4e7_eliminateDeadCodeOfScope((*((*(_10727_m))._field_Func))._field_Scope);
}



inline void _1c1a1de02_mapExpr(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c66e2b_MapExprModel> _11126_m) {
	{
		auto expr = &((*(_11126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab98bb98:;
		if (it != expr_end) {
			jule::Ptr<_1c0c66975_KeyValPairExprModel> _11221_pair = *it;
			{
				_1c1a22ab5_optimize(_self_, &((*(_11221_pair))._field_Key));
				_1c1a22ab5_optimize(_self_, &((*(_11221_pair))._field_Val));
			}
			_iter_next_1ab98bb98:;
			++it;
			goto _iter_begin_1ab98bb98;
		}
		_iter_end_1ab98bb98:;
	};
}



inline void _1c1a1e1aa_slicing(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c674ae_SlicingExprModel> _11826_m) {
	_1c1a22ab5_optimize(_self_, &((*(_11826_m))._field_Expr));
	_1c1a22ab5_optimize(_self_, &((*(_11826_m))._field_Left));
	if (((*(_11826_m))._field_Right != nullptr)) {
		_1c1a22ab5_optimize(_self_, &((*(_11826_m))._field_Right));
	};
}



inline void _1c1a1e463_traitSub(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c67a42_TraitSubIdentExprModel> _12627_m) {
	_1c1a22ab5_optimize(_self_, &((*(_12627_m))._field_Expr));
}



inline void _1c1a1e71b_structureSub(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c683d3_StructSubIdentExprModel> _13031_m) {
	_1c1a22ab5_optimize(_self_, &((*((*(_13031_m))._field_Expr))._field_Model));
}



inline void _1c1a1e9c4_tuple(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c69060_TupleExprModel> _13424_m) {
	{
		auto expr = &((*(_13424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab990c9b:;
		if (it != expr_end) {
			jule::Ptr<_1c0d80352_Data> _13521_d = *it;
			{
				_1c1a22ab5_optimize(_self_, &((*(_13521_d))._field_Model));
			}
			_iter_next_1ab990c9b:;
			++it;
			goto _iter_begin_1ab990c9b;
		}
		_iter_end_1ab990c9b:;
	};
}



inline void _1c1a1ec7c_newCall(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c69bdc_BuiltinNewCallExprModel> _14026_m) {
	if (((*(_14026_m))._field_Init != nullptr)) {
		_1c1a22ab5_optimize(_self_, &((*(_14026_m))._field_Init));
	};
}



inline void _1c1a20035_outCall(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c69439_BuiltinOutCallExprModel> _14626_m) {
	_1c1a22ab5_optimize(_self_, &((*(_14626_m))._field_Expr));
}



inline void _1c1a202dd_outlnCall(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c69813_BuiltinOutlnCallExprModel> _15028_m) {
	_1c1a22ab5_optimize(_self_, &((*(_15028_m))._field_Expr));
}



inline void _1c1a20596_panicCall(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c6a0b6_BuiltinPanicCallExprModel> _15428_m) {
	_1c1a22ab5_optimize(_self_, &((*(_15428_m))._field_Expr));
}



inline void _1c1a2084e_assertCall(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c6a56c_BuiltinAssertCallExprModel> _15829_m) {
	_1c1a22ab5_optimize(_self_, &((*(_15829_m))._field_Expr));
}



inline void _1c1a20b07_errorCall(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c6c173_BuiltinErrorCallExprModel> _16228_m) {
	_1c1a22ab5_optimize(_self_, &((*((*(_16228_m))._field_Err))._field_Model));
}



inline void _1c1a20db0_makeCall(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c6aa23_BuiltinMakeCallExprModel> _16627_m) {
	if (((*(_16627_m))._field_Len != nullptr)) {
		_1c1a22ab5_optimize(_self_, &((*(_16627_m))._field_Len));
	};
	if (((*(_16627_m))._field_Cap != nullptr)) {
		_1c1a22ab5_optimize(_self_, &((*(_16627_m))._field_Cap));
	};
}



inline void _1c1a21168_appendCall(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c6adec_BuiltinAppendCallExprModel> _17529_m) {
	_1c1a22ab5_optimize(_self_, &((*(_17529_m))._field_Dest));
	_1c1a22ab5_optimize(_self_, &((*(_17529_m))._field_Elements));
}



inline void _1c1a21421_lenCall(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c6b1e9_BuiltinLenCallExprModel> _18026_m) {
	_1c1a22ab5_optimize(_self_, &((*((*(_18026_m))._field_Expr))._field_Model));
}



inline void _1c1a216c9_capCall(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c6b4e6_BuiltinCapCallExprModel> _18426_m) {
	_1c1a22ab5_optimize(_self_, &((*((*(_18426_m))._field_Expr))._field_Model));
}



inline void _1c1a21982_deleteCall(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c6b8c0_BuiltinDeleteCallExprModel> _18829_m) {
	_1c1a22ab5_optimize(_self_, &((*((*(_18829_m))._field_Dest))._field_Model));
	if (((*(_18829_m))._field_Key != nullptr)) {
		_1c1a22ab5_optimize(_self_, &((*((*(_18829_m))._field_Key))._field_Model));
	};
}



inline void _1c1a21c3a_sizeof(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c67c2e_SizeofExprModel> _19525_m) {
	_1c1a22ab5_optimize(_self_, &((*(_19525_m))._field_Expr));
}



inline void _1c1a21ee3_alignof(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c6c89e_AlignofExprModel> _19926_m) {
	_1c1a22ab5_optimize(_self_, &((*(_19926_m))._field_Expr));
}



inline void _1c1a2229b_integratedToStr(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c6ce98_IntegratedToStrExprModel> _20334_m) {
	_1c1a22ab5_optimize(_self_, &((*(_20334_m))._field_Expr));
}



inline void _1c1a22554_free(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c6d66e_FreeExprModel> _20723_m) {
	_1c1a22ab5_optimize(_self_, &((*(_20723_m))._field_Expr));
}



inline void _1c1a2280c_backendEmit(_1c1a1b54d_exprDeadCode* _self_, jule::Ptr<_1c0c6d372_BackendEmitExprModel> _21130_m) {
	_1c1a1ccbe_args(_self_, &((*(_21130_m))._field_Exprs));
}



inline void _1c1a22ab5_optimize(_1c1a1b54d_exprDeadCode* _self_, jule::Any* _21528_model) {
	{
		auto &_match_expr{ (*(_21528_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ab99e309:;
			{
				_1c1a1be44_binary(_self_, (*(_21528_model)).cast_ptr<_1c0c63862_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ab99e370:;
			{
				_1c1a1c1ec_unary(_self_, (*(_21528_model)).cast_ptr<_1c0c63c3b_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ab99e3d6:;
			{
				_1c1a1c4a5_structureLit(_self_, (*(_21528_model)).cast_ptr<_1c0c64610_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ab99e45d:;
			{
				_1c1a1c75d_allocStructure(_self_, (*(_21528_model)).cast_ptr<_1c0c6490c_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ab99e4d5:;
			{
				_1c1a1ca16_casting(_self_, (*(_21528_model)).cast_ptr<_1c0c64e90_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ab99e55c:;
			{
				_1c1a1d077_funcCall(_self_, (*(_21528_model)).cast_ptr<_1c0c65842_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ab99e5d4:;
			{
				_1c1a1d330_slice(_self_, (*(_21528_model)).cast_ptr<_1c0c65c1b_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1ab99e65b:;
			{
				_1c1a1d5d8_array(_self_, (*(_21528_model)).cast_ptr<_1c0c68c63_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ab99e6d3:;
			{
				_1c1a1d891_indexing(_self_, (*(_21528_model)).cast_ptr<_1c0c661c2_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ab99e75a:;
			{
				_1c1a1db49_anonFunc(_self_, (*(_21528_model)).cast_ptr<_1c0c6659b_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ab99e7d2:;
			{
				_1c1a1de02_mapExpr(_self_, (*(_21528_model)).cast_ptr<_1c0c66e2b_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ab99e859:;
			{
				_1c1a1e1aa_slicing(_self_, (*(_21528_model)).cast_ptr<_1c0c674ae_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ab99e8d1:;
			{
				_1c1a1e463_traitSub(_self_, (*(_21528_model)).cast_ptr<_1c0c67a42_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ab99e958:;
			{
				_1c1a1e71b_structureSub(_self_, (*(_21528_model)).cast_ptr<_1c0c683d3_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ab99e9d0:;
			{
				_1c1a1e9c4_tuple(_self_, (*(_21528_model)).cast_ptr<_1c0c69060_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ab99ea57:;
			{
				_1c1a20035_outCall(_self_, (*(_21528_model)).cast_ptr<_1c0c69439_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ab99eace:;
			{
				_1c1a202dd_outlnCall(_self_, (*(_21528_model)).cast_ptr<_1c0c69813_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ab99eb56:;
			{
				_1c1a1ec7c_newCall(_self_, (*(_21528_model)).cast_ptr<_1c0c69bdc_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ab99ebcd:;
			{
				_1c1a20596_panicCall(_self_, (*(_21528_model)).cast_ptr<_1c0c6a0b6_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ab99ec55:;
			{
				_1c1a2084e_assertCall(_self_, (*(_21528_model)).cast_ptr<_1c0c6a56c_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab99eccc:;
			{
				_1c1a20b07_errorCall(_self_, (*(_21528_model)).cast_ptr<_1c0c6c173_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ab99ed54:;
			{
				_1c1a20db0_makeCall(_self_, (*(_21528_model)).cast_ptr<_1c0c6aa23_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ab99edcb:;
			{
				_1c1a21168_appendCall(_self_, (*(_21528_model)).cast_ptr<_1c0c6adec_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ab99ee53:;
			{
				_1c1a21421_lenCall(_self_, (*(_21528_model)).cast_ptr<_1c0c6b1e9_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ab99eeca:;
			{
				_1c1a216c9_capCall(_self_, (*(_21528_model)).cast_ptr<_1c0c6b4e6_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ab9a0052:;
			{
				_1c1a21982_deleteCall(_self_, (*(_21528_model)).cast_ptr<_1c0c6b8c0_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ab9a00c9:;
			{
				_1c1a21c3a_sizeof(_self_, (*(_21528_model)).cast_ptr<_1c0c67c2e_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ab9a0151:;
			{
				_1c1a21ee3_alignof(_self_, (*(_21528_model)).cast_ptr<_1c0c6c89e_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ab9a01c8:;
			{
				_1c1a2229b_integratedToStr(_self_, (*(_21528_model)).cast_ptr<_1c0c6ce98_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ab9a0250:;
			{
				_1c1a22554_free(_self_, (*(_21528_model)).cast_ptr<_1c0c6d66e_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ab9a02c7:;
			{
				_1c1a2280c_backendEmit(_self_, (*(_21528_model)).cast_ptr<_1c0c6d372_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1ab99e062:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c1a1b54d_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0ead43b_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0ead859_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0eadb56_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0eae184_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0eae717_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0eaea14_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0eaed11_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0eb0240_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0eb0619_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0eb0916_InlineStdInternalNosafeStobs _Src) {
	_Stream << "InlineStdInternalNosafeStobs{";
	_Stream << "Str:" << _Src._field_Str;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0eb1ab0_scopeOptimizer> static__1c0eb20ee_new(jule::Ptr<_1c0cb210d_Scope> _4623_scope) {
	return jule::new_ptr<_1c0eb1ab0_scopeOptimizer>(_1c0eb1ab0_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1c0eb23a7_setCurrentStmt(_1c0eb1ab0_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1c0eb25a5_removeCurrent(_1c0eb1ab0_scopeOptimizer* _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*((*(_self_))._field_scope))._field_Stmts.slice(0LL, (*(_self_))._field_i),(*((*(_self_))._field_scope))._field_Stmts.slice(((*(_self_))._field_i + 1LL)));
}



inline void _1c0eb285d_optimizeData(_1c0eb1ab0_scopeOptimizer* _self_, jule::Ptr<_1c0d80352_Data> _6135_d) {
	{
		auto &_match_expr{ (*(_6135_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1aba08462:;
			{
				jule::Ptr<_1c0c65842_FnCallExprModel> _6417_m = (*(_6135_d))._field_Model.cast_ptr<_1c0c65842_FnCallExprModel>(&__jule_any_type34);;
				if (_21a9586a5_Production) {
					if (((!(_1c0c75940_IsBuiltin((*(_6417_m))._field_Func.ptr()))) && _1c0eb5e16_isStdPackage(&((*((*((*((*((*(_6417_m))._field_Func))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1c0eb23a7_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1aba0840c:;
	};
	static__1c0eb82e2_optimize(&((*(_6135_d))._field_Model));
}



inline void _1c0eb2b16_optimizeVar(_1c0eb1ab0_scopeOptimizer* _self_, jule::Ptr<_1c0d2b94c_Var> _7634_v) {
	if (((*(_7634_v))._field_Value != nullptr)) {
		static__1c0eb82e2_optimize(&((*((*((*(_7634_v))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1c0eb2dbe_optimizeConditional(_1c0eb1ab0_scopeOptimizer* _self_, jule::Ptr<_1c0cb2c46_Conditional> _8242_c) {
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba0cbd6:;
		if (it != expr_end) {
			jule::Ptr<_1c0cb252b_If> _8321_elif = *it;
			{
				static__1c0eb82e2_optimize(&((*(_8321_elif))._field_Expr));
				_1c0eb5795_optimizeChild(_self_, (*(_8321_elif))._field_Scope);
			}
			_iter_next_1aba0cbd6:;
			++it;
			goto _iter_begin_1aba0cbd6;
		}
		_iter_end_1aba0cbd6:;
	};
	if (((*(_8242_c))._field_Default != nullptr)) {
		_1c0eb5795_optimizeChild(_self_, (*((*(_8242_c))._field_Default))._field_Scope);
	};
	if ((!(_1c18a6471_Cond))) {
		return;;
	};
	jule::Bool _9513_constCase = false;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba0ec2c:;
		if (it != expr_end) {
			jule::I64 _9814_i = it - expr->begin();
			jule::Ptr<_1c0cb252b_If> _9821_elif = *it;
			{
				if ((!(_1c0eb6224_isConstantValidConditionalCase(&(_9821_elif))))) {
					goto _iter_next_1aba0ec2c;
				};
				_9513_constCase=true;
				(*(_8242_c))._field_Elifs=(*(_8242_c))._field_Elifs.slice(0LL, _9814_i);
				(*(_8242_c))._field_Default=jule::new_ptr<_1c0cb2828_Else>(_1c0cb2828_Else{._field_Scope=(*(_9821_elif))._field_Scope});
				goto _iter_end_1aba0ec2c;
			}
			_iter_next_1aba0ec2c:;
			++it;
			_9814_i++;
			goto _iter_begin_1aba0ec2c;
		}
		_iter_end_1aba0ec2c:;
	};
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c0cb252b_If>* _11513_i = (&((*(_8242_c))._field_Elifs[0LL]));;
	jule::Ptr<_1c0cb252b_If>* _1169_end = (&((*(_8242_c))._field_Elifs[((*(_8242_c))._field_Elifs.len() - 1LL)]));;
	for (; (_11513_i <= _1169_end); (_11513_i)++) {
		{
			{
				if (_1c0eb6ae8_isUnreachableConditionalCase(&((*(_11513_i))))) {
					(*(_11513_i))=nullptr;
				};
			};
		}
	_iter_next_1aba1335c:;
	}
	_iter_end_1aba1335c:;;
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9513_constCase))) {
		return;;
	};
	jule::I64 _13413_only = -1LL;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba1476a:;
		if (it != expr_end) {
			jule::I64 _13513_j = it - expr->begin();
			jule::Ptr<_1c0cb252b_If> _13516_elif = *it;
			{
				if ((_13516_elif != nullptr)) {
					if ((_13413_only != -1LL)) {
						return;;
					};
					_13413_only=_13513_j;
				};
			}
			_iter_next_1aba1476a:;
			++it;
			_13513_j++;
			goto _iter_begin_1aba1476a;
		}
		_iter_end_1aba1476a:;
	};
	if ((_13413_only != -1LL)) {
		_1c0eb23a7_setCurrentStmt(_self_, jule::Any((*((*(_8242_c))._field_Elifs[_13413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1c0eb32dc_buildDefaultConstantTrueCase(_1c0eb1ab0_scopeOptimizer* _self_, jule::Ptr<_1c0cb6d7c_Case> _15151_case, jule::I64* _15169_i, jule::Ptr<_1c0cb6244_Match>* _15182_m) {
	(*(_15151_case))._field_Exprs=nullptr;
	jule::I64 _1539_start = (*(_15169_i));;
	_julec_label_1aba171eb:;
	for (;;) {
		{
			if (((*((*(_15151_case))._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1aba16c34;
			};
			jule::Any *_15918_stmt = &((*((*(_15151_case))._field_Scope))._field_Stmts[((*((*(_15151_case))._field_Scope))._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15918_stmt)) };
				
				if (_match_expr.type == &__jule_any_type48) {
					_case_begin_1aba19132:;
					{
						((*(_15169_i)))++;
						if (((*(_15169_i)) >= (*((*(_15182_m))))._field_Cases.len())) {
							(*(_15918_stmt))=jule::Any((*((*((*(_15182_m))))._field_Default))._field_Scope, &__jule_any_type22);
							goto _iter_end_1aba16c34;
						};
						_15151_case=(*((*(_15182_m))))._field_Cases[(*(_15169_i))];
						(*(_15918_stmt))=jule::Any((*(_15151_case))._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1aba19286:;
					{
						goto _iter_end_1aba16c34;
					}
				}
				_match_end_1aba19231:;
			};
		}
	_iter_next_1aba16c34:;
	}
	_iter_end_1aba16c34:;;
	(*((*(_15182_m))))._field_Default=(*((*(_15182_m))))._field_Cases[_1539_start];
	(*((*(_15182_m))))._field_Cases=(*((*(_15182_m))))._field_Cases.slice(0LL, _1539_start);
}



inline void _1c0eb3595_optimizeMatch(_1c0eb1ab0_scopeOptimizer* _self_, jule::Ptr<_1c0cb6244_Match> _17736_m) {
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba1bb29:;
		if (it != expr_end) {
			jule::Ptr<_1c0cb6d7c_Case> _17821_case = *it;
			{
				{
					auto expr = &((*(_17821_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aba1c575:;
					if (it != expr_end) {
						jule::Ptr<_1c0d80352_Data> _17925_expr = *it;
						{
							static__1c0eb82e2_optimize(&((*(_17925_expr))._field_Model));
						}
						_iter_next_1aba1c575:;
						++it;
						goto _iter_begin_1aba1c575;
					}
					_iter_end_1aba1c575:;
				};
				_1c0eb5795_optimizeChild(_self_, (*(_17821_case))._field_Scope);
			}
			_iter_next_1aba1bb29:;
			++it;
			goto _iter_begin_1aba1bb29;
		}
		_iter_end_1aba1bb29:;
	};
	if (((*(_17736_m))._field_Default != nullptr)) {
		_1c0eb5795_optimizeChild(_self_, (*((*(_17736_m))._field_Default))._field_Scope);
	};
	if ((!(_1c18a6471_Cond))) {
		return;;
	};
	jule::Bool _19213_constCase = false;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba1e2ad:;
		if (it != expr_end) {
			jule::I64 _19518_i = it - expr->begin();
			jule::Ptr<_1c0cb6d7c_Case> _19525_case = *it;
			{
				if ((!(_1c0eb682e_isConstantValidMatchCase(&(_19525_case))))) {
					goto _iter_next_1aba1e2ad;
				};
				_19213_constCase=true;
				_1c0eb32dc_buildDefaultConstantTrueCase(_self_, _19525_case, &(_19518_i), &(_17736_m));
				goto _iter_end_1aba1e2ad;
			}
			_iter_next_1aba1e2ad:;
			++it;
			_19518_i++;
			goto _iter_begin_1aba1e2ad;
		}
		_iter_end_1aba1e2ad:;
	};
	if (((*(_17736_m))._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c0cb6d7c_Case>* _20913_i = (&((*(_17736_m))._field_Cases[0LL]));;
	jule::Ptr<_1c0cb6d7c_Case>* _2109_end = (&((*(_17736_m))._field_Cases[((*(_17736_m))._field_Cases.len() - 1LL)]));;
	for (; (_20913_i <= _2109_end); (_20913_i)++) {
		{
			{
				if (_1c0eb6db2_isUnreachableMatchCase(&((*(_20913_i))))) {
					(*(_20913_i))=nullptr;
				};
			};
		}
	_iter_next_1aba21db5:;
	}
	_iter_end_1aba21db5:;;
	if ((!(_19213_constCase))) {
		return;;
	};
	jule::I64 _22413_only = -1LL;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba2217e:;
		if (it != expr_end) {
			jule::I64 _22513_j = it - expr->begin();
			jule::Ptr<_1c0cb6d7c_Case> _22516_case = *it;
			{
				if ((_22516_case != nullptr)) {
					if ((_22413_only != -1LL)) {
						return;;
					};
					_22413_only=_22513_j;
				};
			}
			_iter_next_1aba2217e:;
			++it;
			_22513_j++;
			goto _iter_begin_1aba2217e;
		}
		_iter_end_1aba2217e:;
	};
	if ((_22413_only != -1LL)) {
		_1c0eb23a7_setCurrentStmt(_self_, jule::Any((*((*(_17736_m))._field_Cases[_22413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _1c0eb384d_optimizeRangeIter(_1c0eb1ab0_scopeOptimizer* _self_, jule::Ptr<_1c0cb3e45_RangeIter> _24140_it) {
	static__1c0eb82e2_optimize(&((*((*(_24140_it))._field_Expr))._field_Model));
	_1c0eb5795_optimizeChild(_self_, (*(_24140_it))._field_Scope);
}



inline void _1c0eb3b06_optimizeWhileIter(_1c0eb1ab0_scopeOptimizer* _self_, jule::Ptr<_1c0cb34e9_WhileIter> _24640_it) {
	static__1c0eb82e2_optimize(&((*(_24640_it))._field_Expr));
	_1c0eb54dc_optimizeStmt(_self_, (*(_24640_it))._field_Next);
	_1c0eb5795_optimizeChild(_self_, (*(_24640_it))._field_Scope);
}



inline jule::Bool _1c0eb3e47_substr(_1c0eb1ab0_scopeOptimizer* _self_, jule::Ptr<_1c0cb570a_Assign> _25229_a) {
	if (((*((*(_25229_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_25229_a))._field_R))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1aba27c9a:;
			{
				jule::Ptr<_1c0c674ae_SlicingExprModel> _25817_sem = (*((*(_25229_a))._field_R))._field_Model.cast_ptr<_1c0c674ae_SlicingExprModel>(&__jule_any_type91);;
				if (((*(_25817_sem))._field_Expr == (*((*(_25229_a))._field_L))._field_Model)) {
					_1c0eb23a7_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c0eae717_MutSlicingExprModel>(_1c0eae717_MutSlicingExprModel{._field_Token=(*(_25817_sem))._field_Token, ._field_Expr=(*(_25817_sem))._field_Expr, ._field_Left=(*(_25817_sem))._field_Left, ._field_Right=(*(_25817_sem))._field_Right}), &__jule_any_type120));
					return true;;
				};
			}
		}
		_match_end_1aba27c45:;
	};
	return false;;
}



inline jule::Bool _1c0eb4288_strAssign(_1c0eb1ab0_scopeOptimizer* _self_, jule::Ptr<_1c0cb570a_Assign> _27232_a) {
	if ((!(_1c18a673a_Str))) {
		return false;;
	};
	jule::Ptr<_1c0db80e3_Prim> _2769_lp = _1c0db2b6a_Prim((*((*(_27232_a))._field_L))._field_Kind.ptr());;
	if (((_2769_lp == nullptr) || (!(_1c0dbb57a_IsStr(_2769_lp.ptr()))))) {
		return false;;
	};
	return _1c0eb3e47_substr(_self_, _27232_a);;
}



inline jule::Bool _1c0eb45c9_sliceAssign(_1c0eb1ab0_scopeOptimizer* _self_, jule::Ptr<_1c0cb570a_Assign> _28334_a) {
	if (((!(_1c18a6a04_Slice)) || (_1c0db3bc1_Slc((*((*(_28334_a))._field_L))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1c0eb3e47_substr(_self_, _28334_a);;
}



inline void _1c0eb4882_optimizeAssign(_1c0eb1ab0_scopeOptimizer* _self_, jule::Ptr<_1c0cb570a_Assign> _29137_assign) {
	if ((((*((*(_29137_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1c0eac87a_equalModels((*((*(_29137_assign))._field_L))._field_Model, (*((*(_29137_assign))._field_R))._field_Model))) {
		_1c0eb25a5_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return;;
	};
	{
		
		if (_1c0eb4288_strAssign(_self_, _29137_assign) || _1c0eb45c9_sliceAssign(_self_, _29137_assign)) {
			_case_begin_1aba2ed4b:;
			{
				return;;
			}
		}
		_match_end_1aba2d9a4:;
	};
	static__1c0eb82e2_optimize(&((*((*(_29137_assign))._field_L))._field_Model));
	static__1c0eb82e2_optimize(&((*((*(_29137_assign))._field_R))._field_Model));
	{
		auto &_match_expr{ (*((*(_29137_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1aba316bb:;
			{
				if ((_1c18a574a_Math && (_1c0db41dd_Struct((*((*(_29137_assign))._field_L))._field_Kind.ptr()) == nullptr))) {
					(*((*(_29137_assign))._field_Op))._field_Kind=(*((*(_29137_assign))._field_Op))._field_Kind.slice(0LL, ((*((*(_29137_assign))._field_Op))._field_Kind.len() - 1LL));
					jule::Any _31321_model = jule::Any(jule::new_ptr<_1c0c63862_BinopExprModel>(_1c0c63862_BinopExprModel{._field_Left=(*(_29137_assign))._field_L, ._field_Right=(*(_29137_assign))._field_R, ._field_Op=(*(_29137_assign))._field_Op}), &__jule_any_type111);;
					static__1c0eb82e2_optimize(&(_31321_model));
					{
						auto &_match_expr{ _31321_model };
						
						if (_match_expr.type == &__jule_any_type111) {
							_case_begin_1aba34636:;
							{
								(*(_29137_assign))._field_R=jule::new_ptr<_1c0c63367_OperandExprModel>((*((*(_29137_assign))._field_R)));
								(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(71LLU);
								(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("=", 1);
								(*((*(_29137_assign))._field_R))._field_Model=_31321_model;
								return;;
							}
						}
						_match_end_1aba34449:;
					};
					(*((*(_29137_assign))._field_Op))._field_Kind+=jule::Str::lit("=", 1);
					return;;
				};
			}
		}
		_match_end_1aba31666:;
	};
	if (_1c18a543c_Append) {
		{
			auto &_match_expr{ (*((*(_29137_assign))._field_R))._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1aba373d6:;
				{
					jule::Ptr<_1c0c6adec_BuiltinAppendCallExprModel> _33521_m = (*((*(_29137_assign))._field_R))._field_Model.cast_ptr<_1c0c6adec_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_1c0ec03d7_areSameLvalueExprModel(&((*((*(_29137_assign))._field_L))._field_Model), &((*(_33521_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_33521_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1aba394e8:;
							{
								_1c0eb23a7_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c0eb0240_PushToSliceExprModel>(_1c0eb0240_PushToSliceExprModel{._field_Dest=(*(_33521_m))._field_Dest, ._field_Elems=(*(_33521_m))._field_Elements.cast_ptr<_1c0c65c1b_SliceExprModel>(&__jule_any_type76)}), &__jule_any_type121));
							}
						}
						else {
							_case_begin_1aba39130:;
							{
								_1c0eb23a7_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c0eb0619_AppendToSliceExprModel>(_1c0eb0619_AppendToSliceExprModel{._field_Dest=(*((*(_29137_assign))._field_L))._field_Model, ._field_Slice=(*(_33521_m))._field_Elements}), &__jule_any_type122));
							}
						}
						_match_end_1aba390ca:;
					};
				}
			}
			_match_end_1aba37381:;
		};
	};
}



inline jule::Bool _1c0eb4bc3_tryOptimizeSwap(_1c0eb1ab0_scopeOptimizer* _self_, jule::Ptr<_1c0cb5ad4_MultiAssign>* _35739_assign) {
	if (((!(_1c18a6cbd_Assign)) || ((*((*(_35739_assign))))._field_L.len() != 2LL))) {
		return false;;
	};
	jule::Ptr<_1c0c69060_TupleExprModel> _36117_tup;;
	{
		auto &_match_expr{ (*((*(_35739_assign))))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1aba3bc6a:;
			{
				_36117_tup=(*((*(_35739_assign))))._field_R.cast_ptr<_1c0c69060_TupleExprModel>(&__jule_any_type81);
			}
		}
		_match_end_1aba3bc15:;
	};
	if (((_36117_tup == nullptr) || ((*(_36117_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1c0eac87a_equalModels((*((*((*(_35739_assign))))._field_L[0LL]))._field_Model, (*((*(_36117_tup))._field_Datas[0LL]))._field_Model) && _1c0eac87a_equalModels((*((*((*(_35739_assign))))._field_L[1LL]))._field_Model, (*((*(_36117_tup))._field_Datas[1LL]))._field_Model))) {
		_1c0eb25a5_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return true;;
	};
	if (((!(_1c0eac87a_equalModels((*((*((*(_35739_assign))))._field_L[0LL]))._field_Model, (*((*(_36117_tup))._field_Datas[1LL]))._field_Model))) || (!(_1c0eac87a_equalModels((*((*((*(_35739_assign))))._field_L[1LL]))._field_Model, (*((*(_36117_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1c0ead43b_SwapExprModel> _38313_model = jule::new_ptr<_1c0ead43b_SwapExprModel>(_1c0ead43b_SwapExprModel{._field_Left=(*((*(_35739_assign))))._field_L[0LL], ._field_Right=(*((*(_35739_assign))))._field_L[1LL]});;
	static__1c0eb82e2_optimize(&((*((*(_38313_model))._field_Left))._field_Model));
	static__1c0eb82e2_optimize(&((*((*(_38313_model))._field_Right))._field_Model));
	_1c0eb23a7_setCurrentStmt(_self_, jule::Any(_38313_model, &__jule_any_type123));
	return true;;
}



inline void _1c0eb4e7b_optimizeMultiAssign(_1c0eb1ab0_scopeOptimizer* _self_, jule::Ptr<_1c0cb5ad4_MultiAssign> _39342_assign) {
	if (_1c0eb4bc3_tryOptimizeSwap(_self_, &(_39342_assign))) {
		return;;
	};
	{
		auto expr = &((*(_39342_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba440b3:;
		if (it != expr_end) {
			jule::Ptr<_1c0d80352_Data> _39821_l = *it;
			{
				if ((_39821_l != nullptr)) {
					static__1c0eb82e2_optimize(&((*(_39821_l))._field_Model));
				};
			}
			_iter_next_1aba440b3:;
			++it;
			goto _iter_begin_1aba440b3;
		}
		_iter_end_1aba440b3:;
	};
	static__1c0eb82e2_optimize(&((*(_39342_assign))._field_R));
}



inline void _1c0eb5234_optimizeRet(_1c0eb1ab0_scopeOptimizer* _self_, jule::Ptr<_1c0cb780b_RetSt> _40634_r) {
	static__1c0eb82e2_optimize(&((*(_40634_r))._field_Expr));
}



inline void _1c0eb54dc_optimizeStmt(_1c0eb1ab0_scopeOptimizer* _self_, jule::Any _41035_stmt) {
	{
		auto &_match_expr{ _41035_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1aba461e7:;
			{
				_1c0eb5795_optimizeChild(_self_, _41035_stmt.cast_ptr<_1c0cb210d_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1aba4625d:;
			{
				_1c0eb285d_optimizeData(_self_, _41035_stmt.cast_ptr<_1c0d80352_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aba462c4:;
			{
				_1c0eb2b16_optimizeVar(_self_, _41035_stmt.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1aba4634b:;
			{
				_1c0eb2dbe_optimizeConditional(_self_, _41035_stmt.cast_ptr<_1c0cb2c46_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1aba463c3:;
			{
				_1c0eb384d_optimizeRangeIter(_self_, _41035_stmt.cast_ptr<_1c0cb3e45_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1aba4644a:;
			{
				_1c0eb3b06_optimizeWhileIter(_self_, _41035_stmt.cast_ptr<_1c0cb34e9_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1aba464c2:;
			{
				_1c0eb5795_optimizeChild(_self_, (*(_41035_stmt.cast_ptr<_1c0cb3043_InfIter>(&__jule_any_type36)))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1aba46549:;
			{
				_1c0eb4882_optimizeAssign(_self_, _41035_stmt.cast_ptr<_1c0cb570a_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1aba465c1:;
			{
				_1c0eb4e7b_optimizeMultiAssign(_self_, _41035_stmt.cast_ptr<_1c0cb5ad4_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1aba46648:;
			{
				_1c0eb3595_optimizeMatch(_self_, _41035_stmt.cast_ptr<_1c0cb6244_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1aba466c0:;
			{
				_1c0eb5234_optimizeRet(_self_, _41035_stmt.cast_ptr<_1c0cb780b_RetSt>(&__jule_any_type50));
			}
		}
		_match_end_1aba460b5:;
	};
}



inline void _1c0eb5795_optimizeChild(_1c0eb1ab0_scopeOptimizer* _self_, jule::Ptr<_1c0cb210d_Scope> _43736_child) {
	jule::Ptr<_1c0eb1ab0_scopeOptimizer> _43813_so = static__1c0eb20ee_new(_43736_child);;
	_1c0eb5993_optimize(_43813_so.ptr());
}



inline void _1c0eb5993_optimize(_1c0eb1ab0_scopeOptimizer* _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_scope))._field_Stmts.len()); ((*(_self_))._field_i)++) {
		{
			_1c0eb54dc_optimizeStmt(_self_, (*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]);
		}
	_iter_next_1aba4bd68:;
	}
	_iter_end_1aba4bd68:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0eb1ab0_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1c0eb82e2_optimize(jule::Any* _5629_model) {
	if (_1c1a23137_exprEnabled) {
		jule::Ptr<_1c0eb7c92_exprOptimizer> _5917_exop = jule::new_ptr<_1c0eb7c92_exprOptimizer>(_1c0eb7c92_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_5629_model))});;
		_1c0ebea9b_do(_5917_exop.ptr());
	};
}



inline jule::Bool _1c0eb8633_strCond(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c63862_BinopExprModel> _6626_m) {
	jule::Ptr<_1c0db80e3_Prim> _679_lp = _1c0db2b6a_Prim((*((*(_6626_m))._field_Left))._field_Kind.ptr());;
	if (((_679_lp == nullptr) || (!(_1c0dbb57a_IsStr(_679_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*(_6626_m))._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*((*(_6626_m))._field_Op))._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aba5bdcd:;
			{
				std::swap((*(_6626_m))._field_Left, (*(_6626_m))._field_Right);
				goto _julec_label_1aba5d7e7;
			}
		}
		_match_end_1aba5bd78:;
	};
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aba5aa14:;
			{
				goto _match_end_1aba5d594;
			}
		}
		else {
			_case_begin_1aba5d5e9:;
			{
				return false;;
			}
		}
		_match_end_1aba5d594:;
	};
	_julec_label_1aba5d7e7:;
	jule::Ptr<_2036445ea_Const> _8613_c = (*((*(_6626_m))._field_Right))._field_Model.cast_ptr<_2036445ea_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1aba5e9a2:;
			{
				if ((_203646773_ReadStr(_8613_c.ptr())).empty()) {
					jule::Any _9021_model = jule::Any(jule::new_ptr<_1c0ead859_EmptyCompareExprModel>(_1c0ead859_EmptyCompareExprModel{._field_Expr=(*((*(_6626_m))._field_Left))._field_Model, ._field_Neg=false}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9021_model))))));
					goto _match_end_1aba5e93b;
				};
				jule::Any _9717_model = jule::Any(jule::new_ptr<_1c0eae184_StrCompExprModel>(_1c0eae184_StrCompExprModel{._field_Left=(*((*(_6626_m))._field_Left))._field_Model, ._field_Right=_8613_c, ._field_NotEq=false}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9717_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aba5ea29:;
			{
				if ((_203646773_ReadStr(_8613_c.ptr())).empty()) {
					jule::Any _10521_model = jule::Any(jule::new_ptr<_1c0ead859_EmptyCompareExprModel>(_1c0ead859_EmptyCompareExprModel{._field_Expr=(*((*(_6626_m))._field_Left))._field_Model, ._field_Neg=true}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_10521_model))))));
					goto _match_end_1aba5e93b;
				};
				jule::Any _11217_model = jule::Any(jule::new_ptr<_1c0eae184_StrCompExprModel>(_1c0eae184_StrCompExprModel{._field_Left=(*((*(_6626_m))._field_Left))._field_Model, ._field_Right=_8613_c, ._field_NotEq=true}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_11217_model))))));
			}
		}
		_match_end_1aba5e93b:;
	};
	return true;;
}



inline void _1c0eb88db_binary(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c63862_BinopExprModel> _12225_m) {
	static__1c0eb82e2_optimize(&((*((*(_12225_m))._field_Left))._field_Model));
	static__1c0eb82e2_optimize(&((*((*(_12225_m))._field_Right))._field_Model));
	{
		auto &_match_expr{ (*((*(_12225_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aba5d6c6:;
			{
				goto _match_end_1aba66e0a;
			}
		}
		else {
			_case_begin_1aba66e60:;
			{
				return;;
			}
		}
		_match_end_1aba66e0a:;
	};
	if ((_1c18a6471_Cond && _1c0eb8633_strCond(_self_, _12225_m))) {
		return;;
	};
	if ((!(_1c18a574a_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_12225_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aba6815e:;
			{
				jule::Bool _14213_ok = false;;
				jule::U64 _14217_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1c0ec001e_checkForBitShiftOpt(&((*(_12225_m))._field_Left), &((*(_12225_m))._field_Right));
					_14213_ok = __jule_assign_result.__jule_result_arg0;
					_14217_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_14213_ok) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_2036445ea_Const> _14621_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_2036445ea_Const>(&__jule_any_type19);;
					_20364781d_SetU64(_14621_c.ptr(), _14217_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1aba681d6:;
			{
				jule::Bool _15113_ok = false;;
				jule::U64 _15117_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1c0ec001e_checkForBitShiftOpt(&((*(_12225_m))._field_Left), &((*(_12225_m))._field_Right));
					_15113_ok = __jule_assign_result.__jule_result_arg0;
					_15117_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15113_ok) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_2036445ea_Const> _15521_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_2036445ea_Const>(&__jule_any_type19);;
					_20364781d_SetU64(_15521_c.ptr(), _15117_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1aba6825d:;
			{
				jule::Ptr<_2036445ea_Const> _16017_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_2036445ea_Const>(&__jule_any_type19);;
				jule::F64 _16113_d = _2036472ac_AsF64(_16017_c.ptr());;
				if ((_16113_d == 2LL)) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str::lit("&", 1);
					_203647565_SetI64(_16017_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1aba680d7:;
	};
	jule::Any _16813_model = jule::Any(jule::new_ptr<_1c0eaea14_UnsafeBinopExprModel>(_1c0eaea14_UnsafeBinopExprModel{._field_Node=_12225_m}), &__jule_any_type126);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_16813_model))))));
}



inline void _1c0eb8b94_unary(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c63c3b_UnaryExprModel> _17224_m) {
	static__1c0eb82e2_optimize(&((*((*(_17224_m))._field_Expr))._field_Model));
	if ((!(_1c18a6097_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_17224_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aba71585:;
			{
				{
					auto &_match_expr{ (*((*(_17224_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1aba7317a:;
						{
							jule::Ptr<_1c0c63c3b_UnaryExprModel> _18121_um = (*((*(_17224_m))._field_Expr))._field_Model.cast_ptr<_1c0c63c3b_UnaryExprModel>(&__jule_any_type110);;
							if (((*((*(_18121_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*(_18121_um))._field_Expr))._field_Model;
							};
						}
					}
					_match_end_1aba73125:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aba72520:;
			{
				{
					auto &_match_expr{ (*((*(_17224_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1aba7529d:;
						{
							jule::Ptr<_1c0d2b94c_Var> _18921_v = (*((*(_17224_m))._field_Expr))._field_Model.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8);;
							if ((*(_18921_v))._field_Reference) {
								jule::Any _19125_model = jule::Any(jule::new_ptr<_1c0eadb56_RefExprModel>(_1c0eadb56_RefExprModel{._field_Var=_18921_v}), &__jule_any_type127);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_19125_model))))));
							};
						}
					}
					_match_end_1aba75248:;
				};
			}
		}
		_match_end_1aba72410:;
	};
}



inline void _1c0eb8e4c_structureLit(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c64610_StructLitExprModel> _19831_m) {
	{
		auto expr = &((*(_19831_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba76b95:;
		if (it != expr_end) {
			jule::Ptr<_1c0c64269_StructArgExprModel> _19921_arg = *it;
			{
				static__1c0eb82e2_optimize(&((*((*(_19921_arg))._field_Expr))._field_Model));
			}
			_iter_next_1aba76b95:;
			++it;
			goto _iter_begin_1aba76b95;
		}
		_iter_end_1aba76b95:;
	};
}



inline void _1c0eb9205_allocStructure(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c6490c_AllocStructLitExprModel> _20433_m) {
	_1c0eb8e4c_structureLit(_self_, (*(_20433_m))._field_Lit);
}



inline void _1c0eb94ad_casting(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c64e90_CastingExprModel> _20826_m) {
	static__1c0eb82e2_optimize(&((*(_20826_m))._field_Expr));
}



inline void _1c0eb9766_args(_1c0eb7c92_exprOptimizer* _self_, jule::Slice<jule::Any>* _21224_args) {
	{
		auto expr = _21224_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba78c41:;
		if (it != expr_end) {
			jule::I64 _21314_i = it - expr->begin();
			jule::Any _21321_arg = *it;
			{
				static__1c0eb82e2_optimize(&(_21321_arg));
				(*(_21224_args))[_21314_i]=_21321_arg;
			}
			_iter_next_1aba78c41:;
			++it;
			_21314_i++;
			goto _iter_begin_1aba78c41;
		}
		_iter_end_1aba78c41:;
	};
}



inline void _1c0eb9a1e_scope(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0cb210d_Scope>* _21925_s) {
	jule::Ptr<_1c0eb1ab0_scopeOptimizer> _22013_scopt = static__1c0eb20ee_new((*(_21925_s)));;
	_1c0eb5993_optimize(_22013_scopt.ptr());
}



inline jule::Bool _1c0eb9d60_optimizeSpecialFuncCalls(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c65842_FnCallExprModel>* _22444_m) {
	_1c18a3160_stdCacheData _2259_data;;
	jule::Bool _22515_ok = false;;
	_1c18a358e_stdCache.lookup(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*((*(_22444_m))))._field_Func)), &(_2259_data), &(_22515_ok));
	if ((!(_22515_ok))) {
		return false;;
	};
	_2259_data._field_do(_self_, &(_2259_data), _22444_m);
	return true;;
}



inline void _1c0eba118_funcCall(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c65842_FnCallExprModel> _23327_m) {
	if ((_1c1a23676_stdEnabled && _1c0eb9d60_optimizeSpecialFuncCalls(_self_, &(_23327_m)))) {
		return;;
	};
	static__1c0eb82e2_optimize(&((*(_23327_m))._field_Expr));
	_1c0eb9766_args(_self_, &((*(_23327_m))._field_Args));
	if (((*(_23327_m))._field_Except != nullptr)) {
		_1c0eb9a1e_scope(_self_, &((*(_23327_m))._field_Except));
	};
}



inline void _1c0eba3c1_slice(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c65c1b_SliceExprModel> _24424_m) {
	_1c0eb9766_args(_self_, &((*(_24424_m))._field_Elems));
}



inline void _1c0eba679_array(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c68c63_ArrayExprModel> _24824_m) {
	if ((((*(_24824_m))._field_Elems.len() == 2LL) && ((*(_24824_m))._field_Elems[1LL] == nullptr))) {
		jule::Any _25017_elem = (*(_24824_m))._field_Elems[0LL];;
		static__1c0eb82e2_optimize(&(_25017_elem));
		(*(_24824_m))._field_Elems[0LL]=_25017_elem;
	};
	_1c0eb9766_args(_self_, &((*(_24824_m))._field_Elems));
}



inline void _1c0eba932_indexing(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c661c2_IndexingExprModel> _25727_m) {
	static__1c0eb82e2_optimize(&((*((*(_25727_m))._field_Expr))._field_Model));
	static__1c0eb82e2_optimize(&((*((*(_25727_m))._field_Index))._field_Model));
	if ((!(_1c18a5a14_Access))) {
		return;;
	};
	jule::Bool _2639_array = (_1c0db393a_Arr((*((*(_25727_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_2639_array && _1c0d80c26_IsConst((*(_25727_m))._field_Index.ptr()))) {
		jule::Any _26617_model = jule::Any(jule::new_ptr<_1c0eaed11_UnsafeIndexingExprModel>(_1c0eaed11_UnsafeIndexingExprModel{._field_Node=_25727_m}), &__jule_any_type128);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26617_model))))));
		return;;
	};
	{
		auto &_match_expr{ (*((*(_25727_m))._field_Index))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aba84411:;
			{
				jule::Ptr<_1c0d2b94c_Var> _27213_i = (*((*(_25727_m))._field_Index))._field_Model.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8);;
				if (((*(_27213_i))._field_Mutable || ((*(_27213_i))._field_IterRelation == nullptr))) {
					goto _match_end_1aba843ab;
				};
				{
					auto &_match_expr{ (*((*(_25727_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1aba8605b:;
						{
							jule::Ptr<_1c0d2b94c_Var> _27817_r = (*((*(_25727_m))._field_Expr))._field_Model.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8);;
							if (((*((*(_27213_i))._field_IterRelation))._field_Range == _27817_r)) {
								jule::Any _28125_model = jule::Any(jule::new_ptr<_1c0eaed11_UnsafeIndexingExprModel>(_1c0eaed11_UnsafeIndexingExprModel{._field_Node=_25727_m}), &__jule_any_type128);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_28125_model))))));
							};
						}
					}
					_match_end_1aba86006:;
				};
			}
		}
		_match_end_1aba843ab:;
	};
}



inline void _1c0ebabda_anonFunc(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c6659b_AnonFnExprModel> _28827_m) {
	_1c0eb9a1e_scope(_self_, &((*((*(_28827_m))._field_Func))._field_Scope));
}



inline void _1c0ebae93_mapExpr(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c66e2b_MapExprModel> _29226_m) {
	{
		auto expr = &((*(_29226_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba888dd:;
		if (it != expr_end) {
			jule::Ptr<_1c0c66975_KeyValPairExprModel> _29321_pair = *it;
			{
				static__1c0eb82e2_optimize(&((*(_29321_pair))._field_Key));
				static__1c0eb82e2_optimize(&((*(_29321_pair))._field_Val));
			}
			_iter_next_1aba888dd:;
			++it;
			goto _iter_begin_1aba888dd;
		}
		_iter_end_1aba888dd:;
	};
}



inline void _1c0ebb24b_slicing(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c674ae_SlicingExprModel> _29926_m) {
	static__1c0eb82e2_optimize(&((*(_29926_m))._field_Expr));
	static__1c0eb82e2_optimize(&((*(_29926_m))._field_Left));
	if (((*(_29926_m))._field_Right != nullptr)) {
		static__1c0eb82e2_optimize(&((*(_29926_m))._field_Right));
	};
}



inline void _1c0ebb504_traitSub(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c67a42_TraitSubIdentExprModel> _30727_m) {
	static__1c0eb82e2_optimize(&((*(_30727_m))._field_Expr));
}



inline void _1c0ebb7ac_structureSub(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c683d3_StructSubIdentExprModel> _31131_m) {
	static__1c0eb82e2_optimize(&((*((*(_31131_m))._field_Expr))._field_Model));
}



inline void _1c0ebba65_tuple(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c69060_TupleExprModel> _31524_m) {
	{
		auto expr = &((*(_31524_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba8bc32:;
		if (it != expr_end) {
			jule::Ptr<_1c0d80352_Data> _31621_d = *it;
			{
				static__1c0eb82e2_optimize(&((*(_31621_d))._field_Model));
			}
			_iter_next_1aba8bc32:;
			++it;
			goto _iter_begin_1aba8bc32;
		}
		_iter_end_1aba8bc32:;
	};
}



inline void _1c0ebbd1d_newCall(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c69bdc_BuiltinNewCallExprModel> _32126_m) {
	if (((*(_32126_m))._field_Init != nullptr)) {
		static__1c0eb82e2_optimize(&((*(_32126_m))._field_Init));
	};
}



inline void _1c0ebc0c6_outCall(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c69439_BuiltinOutCallExprModel> _32726_m) {
	static__1c0eb82e2_optimize(&((*(_32726_m))._field_Expr));
}



inline void _1c0ebc37e_outlnCall(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c69813_BuiltinOutlnCallExprModel> _33128_m) {
	static__1c0eb82e2_optimize(&((*(_33128_m))._field_Expr));
}



inline void _1c0ebc637_panicCall(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c6a0b6_BuiltinPanicCallExprModel> _33528_m) {
	static__1c0eb82e2_optimize(&((*(_33528_m))._field_Expr));
}



inline void _1c0ebc8e0_assertCall(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c6a56c_BuiltinAssertCallExprModel> _33929_m) {
	static__1c0eb82e2_optimize(&((*(_33929_m))._field_Expr));
}



inline void _1c0ebcb98_errorCall(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c6c173_BuiltinErrorCallExprModel> _34328_m) {
	static__1c0eb82e2_optimize(&((*((*(_34328_m))._field_Err))._field_Model));
}



inline void _1c0ebce51_makeCall(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c6aa23_BuiltinMakeCallExprModel> _34727_m) {
	if (((*(_34727_m))._field_Len != nullptr)) {
		static__1c0eb82e2_optimize(&((*(_34727_m))._field_Len));
	};
	if (((*(_34727_m))._field_Cap != nullptr)) {
		static__1c0eb82e2_optimize(&((*(_34727_m))._field_Cap));
	};
}



inline void _1c0ebd209_appendCall(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c6adec_BuiltinAppendCallExprModel> _35629_m) {
	static__1c0eb82e2_optimize(&((*(_35629_m))._field_Dest));
	static__1c0eb82e2_optimize(&((*(_35629_m))._field_Elements));
}



inline void _1c0ebd4b2_lenCall(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c6b1e9_BuiltinLenCallExprModel> _36126_m) {
	static__1c0eb82e2_optimize(&((*((*(_36126_m))._field_Expr))._field_Model));
}



inline void _1c0ebd76a_capCall(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c6b4e6_BuiltinCapCallExprModel> _36526_m) {
	static__1c0eb82e2_optimize(&((*((*(_36526_m))._field_Expr))._field_Model));
}



inline void _1c0ebda23_deleteCall(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c6b8c0_BuiltinDeleteCallExprModel> _36929_m) {
	static__1c0eb82e2_optimize(&((*((*(_36929_m))._field_Dest))._field_Model));
	if (((*(_36929_m))._field_Key != nullptr)) {
		static__1c0eb82e2_optimize(&((*((*(_36929_m))._field_Key))._field_Model));
	};
}



inline void _1c0ebdccb_sizeof(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c67c2e_SizeofExprModel> _37625_m) {
	static__1c0eb82e2_optimize(&((*(_37625_m))._field_Expr));
}



inline void _1c0ebe084_alignof(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c6c89e_AlignofExprModel> _38026_m) {
	static__1c0eb82e2_optimize(&((*(_38026_m))._field_Expr));
}



inline void _1c0ebe33c_integratedToStr(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c6ce98_IntegratedToStrExprModel> _38434_m) {
	static__1c0eb82e2_optimize(&((*(_38434_m))._field_Expr));
}



inline void _1c0ebe5e5_free(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c6d66e_FreeExprModel> _38823_m) {
	static__1c0eb82e2_optimize(&((*(_38823_m))._field_Expr));
}



inline void _1c0ebe89d_backendEmit(_1c0eb7c92_exprOptimizer* _self_, jule::Ptr<_1c0c6d372_BackendEmitExprModel> _39230_m) {
	_1c0eb9766_args(_self_, &((*(_39230_m))._field_Exprs));
}



inline void _1c0ebea9b_do(_1c0eb7c92_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1aba97017:;
			{
				_1c0eb88db_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c63862_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aba9707d:;
			{
				_1c0eb8b94_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c63c3b_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1aba970e4:;
			{
				_1c0eb8e4c_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c64610_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1aba9716b:;
			{
				_1c0eb9205_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c6490c_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1aba971e3:;
			{
				_1c0eb94ad_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c64e90_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1aba9726a:;
			{
				_1c0eba118_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c65842_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1aba972e2:;
			{
				_1c0eba3c1_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c65c1b_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1aba97369:;
			{
				_1c0eba679_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c68c63_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1aba973e1:;
			{
				_1c0eba932_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c661c2_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1aba97468:;
			{
				_1c0ebabda_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c6659b_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aba974e0:;
			{
				_1c0ebae93_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c66e2b_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1aba97567:;
			{
				_1c0ebb24b_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c674ae_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1aba975de:;
			{
				_1c0ebb504_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c67a42_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1aba97666:;
			{
				_1c0ebb7ac_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c683d3_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1aba976dd:;
			{
				_1c0ebba65_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c69060_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1aba97765:;
			{
				_1c0ebc0c6_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c69439_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1aba977dc:;
			{
				_1c0ebc37e_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c69813_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1aba97864:;
			{
				_1c0ebbd1d_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c69bdc_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1aba978db:;
			{
				_1c0ebc637_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c6a0b6_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1aba97963:;
			{
				_1c0ebc8e0_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c6a56c_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aba979da:;
			{
				_1c0ebcb98_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c6c173_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1aba97a62:;
			{
				_1c0ebce51_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c6aa23_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1aba97ad9:;
			{
				_1c0ebd209_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c6adec_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1aba97b61:;
			{
				_1c0ebd4b2_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c6b1e9_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1aba97bd8:;
			{
				_1c0ebd76a_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c6b4e6_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1aba97c60:;
			{
				_1c0ebda23_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c6b8c0_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1aba97cd7:;
			{
				_1c0ebdccb_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c67c2e_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1aba97d5e:;
			{
				_1c0ebe084_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c6c89e_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1aba97dd6:;
			{
				_1c0ebe33c_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c6ce98_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aba97e5d:;
			{
				_1c0ebe5e5_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c6d66e_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1aba97ed5:;
			{
				_1c0ebe89d_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c0c6d372_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1aba96c70:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c0eb7c92_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c18a3160_stdCacheData _Src) {
	_Stream << "stdCacheData{";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "do:" << _Src._field_do;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c1a2390c_Optimizer> static__1c1a23d4c_New(jule::Ptr<_1c189de2a_IR>* _2724_ir) {
	return jule::new_ptr<_1c1a2390c_Optimizer>(_1c1a2390c_Optimizer{._field_ir=(*(_2724_ir))});;
}



inline void _1c1a24105_optimizeGlobal(_1c1a2390c_Optimizer* _self_, jule::Ptr<_1c0d2b94c_Var>* _3338_v) {
	if ((!((*((*(_3338_v))))._field_Binded))) {
		static__1c0eb82e2_optimize(&((*((*((*((*(_3338_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1c1a243ad_optimizeFunction(_1c1a2390c_Optimizer* _self_, jule::Ptr<_1c0c715a6_Fn>* _3940_func) {
	if ((*((*(_3940_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3940_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abab3ad3:;
		if (it != expr_end) {
			jule::Ptr<_1c0c744aa_FnIns> _4321_ins = *it;
			{
				jule::Ptr<_1c0eb1ab0_scopeOptimizer> _4417_so = static__1c0eb20ee_new((*(_4321_ins))._field_Scope);;
				_1c0eb5993_optimize(_4417_so.ptr());
			}
			_iter_next_1abab3ad3:;
			++it;
			goto _iter_begin_1abab3ad3;
		}
		_iter_end_1abab3ad3:;
	};
}



inline void _1c1a24666_optimizeStruct(_1c1a2390c_Optimizer* _self_, jule::Ptr<_1c0c5b64b_Struct>* _4938_s) {
	if ((*((*(_4938_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4938_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abab4595:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5e3c9_StructIns> _5321_ins = *it;
			{
				{
					auto expr = &((*(_5321_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abab5ba1:;
					if (it != expr_end) {
						jule::Ptr<_1c0c5d829_FieldIns> _5425_f = *it;
						{
							if (((*(_5425_f))._field_Default != nullptr)) {
								static__1c0eb82e2_optimize(&((*((*(_5425_f))._field_Default))._field_Model));
							};
						}
						_iter_next_1abab5ba1:;
						++it;
						goto _iter_begin_1abab5ba1;
					}
					_iter_end_1abab5ba1:;
				};
				{
					auto expr = &((*(_5321_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abab7169:;
					if (it != expr_end) {
						jule::Ptr<_1c0c715a6_Fn> _5925_m = *it;
						{
							_1c1a243ad_optimizeFunction(_self_, &(_5925_m));
						}
						_iter_next_1abab7169:;
						++it;
						goto _iter_begin_1abab7169;
					}
					_iter_end_1abab7169:;
				};
			}
			_iter_next_1abab4595:;
			++it;
			goto _iter_begin_1abab4595;
		}
		_iter_end_1abab4595:;
	};
}



inline void _1c1a2491e_optimizeGlobals(_1c1a2390c_Optimizer* _self_, jule::Ptr<_1c0cd6462_Package>* _6539_p) {
	{
		auto expr = &((*((*(_6539_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abab74bb:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _6621_f = *it;
			{
				{
					auto expr = &((*(_6621_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abab8258:;
					if (it != expr_end) {
						jule::Ptr<_1c0d2b94c_Var> _6725_v = *it;
						{
							_1c1a24105_optimizeGlobal(_self_, &(_6725_v));
						}
						_iter_next_1abab8258:;
						++it;
						goto _iter_begin_1abab8258;
					}
					_iter_end_1abab8258:;
				};
			}
			_iter_next_1abab74bb:;
			++it;
			goto _iter_begin_1abab74bb;
		}
		_iter_end_1abab74bb:;
	};
}



inline void _1c1a24bc7_optimizeFunctions(_1c1a2390c_Optimizer* _self_, jule::Ptr<_1c0cd6462_Package>* _7341_p) {
	{
		auto expr = &((*((*(_7341_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abab891d:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _7421_f = *it;
			{
				{
					auto expr = &((*(_7421_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abab9699:;
					if (it != expr_end) {
						jule::Ptr<_1c0c715a6_Fn> _7525_func = *it;
						{
							_1c1a243ad_optimizeFunction(_self_, &(_7525_func));
						}
						_iter_next_1abab9699:;
						++it;
						goto _iter_begin_1abab9699;
					}
					_iter_end_1abab9699:;
				};
			}
			_iter_next_1abab891d:;
			++it;
			goto _iter_begin_1abab891d;
		}
		_iter_end_1abab891d:;
	};
}



inline void _1c1a24e80_optimizeStructs(_1c1a2390c_Optimizer* _self_, jule::Ptr<_1c0cd6462_Package>* _8139_p) {
	{
		auto expr = &((*((*(_8139_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abab9d5e:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _8221_f = *it;
			{
				{
					auto expr = &((*(_8221_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ababaada:;
					if (it != expr_end) {
						jule::Ptr<_1c0c5b64b_Struct> _8325_s = *it;
						{
							_1c1a24666_optimizeStruct(_self_, &(_8325_s));
						}
						_iter_next_1ababaada:;
						++it;
						goto _iter_begin_1ababaada;
					}
					_iter_end_1ababaada:;
				};
			}
			_iter_next_1abab9d5e:;
			++it;
			goto _iter_begin_1abab9d5e;
		}
		_iter_end_1abab9d5e:;
	};
}



inline void _1c1a25238_optimizePackage(_1c1a2390c_Optimizer* _self_, jule::Ptr<_1c0cd6462_Package>* _8939_p) {
	_1c1a2491e_optimizeGlobals(_self_, _8939_p);
	_1c1a24bc7_optimizeFunctions(_self_, _8939_p);
	_1c1a24e80_optimizeStructs(_self_, _8939_p);
}



inline void _1c1a25436_Optimize(_1c1a2390c_Optimizer* _self_) {
	_1c1a256ab_detectEnabled();
	if (_1c1a23676_stdEnabled) {
		_1c18a3803_buildCache(&((*(_self_))._field_ir));
	};
	if (_1c18a5173_Deadcode) {
		_1c1a158dd_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1c1a233ac_scopeEnabled || _1c1a23137_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ababc4e3:;
			if (it != expr_end) {
				jule::Ptr<_1c0cd353b_ImportInfo> _10825_u = *it;
				{
					if ((!((*(_10825_u))._field_Binded))) {
						_1c1a25238_optimizePackage(_self_, &((*(_10825_u))._field_Package));
					};
				}
				_iter_next_1ababc4e3:;
				++it;
				goto _iter_begin_1ababc4e3;
			}
			_iter_end_1ababc4e3:;
		};
		_1c1a25238_optimizePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	};
	if (_1c18a5173_Deadcode) {
		_1c1a1ae87_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c1a2390c_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1c1a259ca_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1c1a4a758_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1c1a259ca_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1c1a4b869_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1c1a4d261_LogFlat(_21ce0c86b_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1c1a4d492_LogError(_21ce0c86b_Log* _1925_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1c1a259ca_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_203634387_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_203634387_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3617_line = _21cd51a35_TrimLeft((*(_1925_l))._field_Line, jule::Str::lit("\r\n\v\b ", 5));;
		jule::I64 _3717_offset = (((*(_1925_l))._field_Line.len() - _3617_line.len()) + 1LL);;
		jule::I64 _3817_oldLen = _3617_line.len();;
		_3617_line=_21cd51a35_TrimLeft(_3617_line, jule::Str::lit("\t", 1));
		if ((_3817_oldLen != _3617_line.len())) {
			_3717_offset+=((_3817_oldLen - _3617_line.len()) << 3LLU);
		};
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _4413_row = _203634387_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4413_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_3617_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_21cd489b6_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(_4413_row.len())));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_21cd489b6_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3717_offset))));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_21cd489b6_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(_4413_row.len())));
			jule::out(jule::Str::lit(" | ", 3));
			static__1c1a4a758_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1c1a4d6c3_Log(_21ce0c86b_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1abacab94:;
			{
				static__1c1a4d261_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1abacac1b:;
			{
				static__1c1a4d492_LogError(_6520_l);
			}
		}
		_match_end_1abacab0b:;
	};
}



inline void static__1c1a4d904_PrintLogs(jule::Slice<_21ce0c86b_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abac68c6:;
		if (it != expr_end) {
			_21ce0c86b_Log *_7616_l = it;
			{
				static__1c1a4d6c3_Log(_7616_l);
			}
			_iter_next_1abac68c6:;
			++it;
			goto _iter_begin_1abac68c6;
		}
		_iter_end_1abac68c6:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_203634387_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1c1a4ce97_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a885a7d4_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1a885aeaa_Time static__1a885b362_Unix(jule::U64 _9120_sec) {
	return _1a885aeaa_Time{._field_sec=_9120_sec};;
}



inline _1a885aeaa_Time static__1a885b571_Now(void) {
	return static__1a885b362_Unix(static_cast<jule::U64>(_1a885d09a_unix()));;
}



inline _1a885a7d4_AbsTime _1a885cc59_Abs(_1a885aeaa_Time* _self_) {
	jule::U64 _1279_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12813_days = (_1279_secs / 86400LLU);;
	jule::U64 _12913_remSecs = (_1279_secs % 86400LL);;
	if ((_12913_remSecs < 0LLU)) {
		_12913_remSecs+=86400LLU;
		(_12813_days)--;
	};
	jule::U64 _13513_qcCycles = (_12813_days / 146097LLU);;
	jule::U64 _13613_remDays = (_12813_days % 146097LL);;
	if ((_13613_remDays < 0LLU)) {
		_13613_remDays+=146097LLU;
		(_13513_qcCycles)--;
	};
	jule::U64 _14213_cCycles = (_13613_remDays / 36524LLU);;
	if ((_14213_cCycles == 4LLU)) {
		(_14213_cCycles)--;
	};
	_13613_remDays-=(_14213_cCycles * 36524LLU);
	jule::U64 _14813_qCycles = (_13613_remDays / 1461LLU);;
	if ((_14813_qCycles == 25LLU)) {
		(_14813_qCycles)--;
	};
	_13613_remDays-=(_14813_qCycles * 1461LLU);
	jule::U64 _15413_remYears = (_13613_remDays / 365LLU);;
	if ((_15413_remYears == 4LLU)) {
		(_15413_remYears)--;
	};
	_13613_remDays-=(_15413_remYears * 365LLU);
	jule::U64 _16013_leap = static_cast<jule::U64>(0LLU);;
	if (((_15413_remYears == 0LLU) && ((_14813_qCycles > 0LLU) || (_14213_cCycles == 0LLU)))) {
		_16013_leap=1LLU;
	};
	jule::U64 _16413_yDay = (((_13613_remDays + 31LLU) + 28LLU) + _16013_leap);;
	if ((_16413_yDay >= (365LLU + _16013_leap))) {
		_16413_yDay-=(365LLU + _16013_leap);
	};
	jule::U64 _16913_months = static_cast<jule::U64>(0LLU);;
	for (; (_1a8859cab_mdays[static_cast<jule::I64>(_16913_months)] <= _13613_remDays); (_16913_months)++) {
		{
			_13613_remDays-=_1a8859cab_mdays[static_cast<jule::I64>(_16913_months)];
		}
	_iter_next_1abb0ee70:;
	}
	_iter_end_1abb0ee70:;;
	_1a885a7d4_AbsTime _17413_t = _1a885a7d4_AbsTime{};;
	_17413_t._field_Year=static_cast<jule::U64>(((((_15413_remYears + (4LLU * _14813_qCycles)) + (100LLU * _14213_cCycles)) + (400LLU * _13513_qcCycles)) + 100LLU));
	_17413_t._field_Month=static_cast<jule::U64>((_16913_months + 2LLU));
	if ((_17413_t._field_Month >= 12LLU)) {
		_17413_t._field_Month-=12LLU;
		(_17413_t._field_Year)++;
	};
	_17413_t._field_Month+=1LLU;
	_17413_t._field_Year+=1900LLU;
	_17413_t._field_Day=static_cast<jule::U64>((_13613_remDays + 1LLU));
	_17413_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12813_days) % 7LL));
	if ((_17413_t._field_WeekDay < 0LLU)) {
		_17413_t._field_WeekDay+=7LLU;
	};
	_17413_t._field_YearDay=_16413_yDay;
	_17413_t._field_Hour=static_cast<jule::U64>((_12913_remSecs / 3600LLU));
	_17413_t._field_Minute=static_cast<jule::U64>(((_12913_remSecs / 60LLU) % 60LL));
	_17413_t._field_Second=static_cast<jule::U64>((_12913_remSecs % 60LL));
	return _17413_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a885aeaa_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a877de22_scopeCoder> static__1a877e53d_new(jule::Ptr<_1a8865459_ObjectCoder>* _6524_oc) {
	return jule::new_ptr<_1a877de22_scopeCoder>(_1a877de22_scopeCoder{._field_oc=(*(_6524_oc))});;
}



inline void _1abb9e691_iterHead(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb3e45_RangeIter>* _7232_it, jule::Bool* _7244_ref, jule::Str* _7256_begin) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a8865d0b_addIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1c18a4d65_Copy && _1a8785577_isCopyOptimizable(&((*((*(_7232_it))))._field_Expr)))) {
		(*(_7244_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_7232_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1abba0d8a:;
				{
					jule::Ptr<_1c0d2b94c_Var> _8117_v = (*((*((*(_7232_it))))._field_Expr))._field_Model.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8);;
					if ((*(_8117_v))._field_Reference) {
						_1a879a5ae_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
						goto _match_end_1abba3189;
					};
					goto _case_begin_1abba31de;
				}
			}
			else {
				_case_begin_1abba31de:;
				{
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a879a5ae_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1abba3189:;
		};
	} else {
		_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7232_it))))._field_Expr))._field_Model);
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_7244_ref))) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_7244_ref))) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, (*(_7256_begin)));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1a8865d0b_addIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
}



inline void _1a877ec14_rangeIndexIter(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb3e45_RangeIter>* _12139_it) {
	jule::Str _1229_begin = static__1a87a3d8c_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it)))));;
	jule::Str _1239_next = static__1a87a4420_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it)))));;
	jule::Bool _12513_ref = false;;
	_1abb9e691_iterHead(_self_, _12139_it, &(_12513_ref), &(_1229_begin));
	if (((*((*(_12139_it))))._field_KeyA != nullptr)) {
		_1a886d4c8_varInitExpr((*(_self_))._field_oc, &((*((*(_12139_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12513_ref) {
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
			} else {
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
			};
		}));
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a8866207_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12139_it))))._field_KeyB != nullptr)) {
		(*((*((*(_12139_it))))._field_KeyB))._field_Reference=(_1c18a4d65_Copy && _1a8785940_isIterCopyOptimizable(&((*((*(_12139_it))))._field_Expr), &((*((*(_12139_it))))._field_KeyB)));
		_1a886d4c8_varInitExpr((*(_self_))._field_oc, &((*((*(_12139_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*((*((*(_12139_it))))._field_KeyB))._field_Reference) {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				} else {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("*it", 3));
				};
			};
		}));
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a8866207_indent((*(_self_))._field_oc);
	};
	_1a8784e06_scope(_self_, (*((*(_12139_it))))._field_Scope);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, _1239_next);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1a8866207_indent((*(_self_))._field_oc);
	if (((*((*(_12139_it))))._field_KeyA != nullptr)) {
		_1a8865b0d_write((*(_self_))._field_oc, static__1a87a3ac3_var((*((*(_12139_it))))._field_KeyA));
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1a8866207_indent((*(_self_))._field_oc);
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a8865b0d_write((*(_self_))._field_oc, _1229_begin);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a8866009_doneIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a4156_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12139_it))))));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a8866009_doneIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a877eebc_rangeHashmapIter(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb3e45_RangeIter>* _18441_it) {
	jule::Str _1859_begin = static__1a87a3d8c_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it)))));;
	jule::Str _1869_next = static__1a87a4420_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it)))));;
	jule::Bool _18813_ref = false;;
	_1abb9e691_iterHead(_self_, _18441_it, &(_18813_ref), &(_1859_begin));
	if (((*((*(_18441_it))))._field_KeyA != nullptr)) {
		_1a886d4c8_varInitExpr((*(_self_))._field_oc, &((*((*(_18441_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("it->first", 9));
		}));
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a8866207_indent((*(_self_))._field_oc);
	};
	if (((*((*(_18441_it))))._field_KeyB != nullptr)) {
		_1a886d4c8_varInitExpr((*(_self_))._field_oc, &((*((*(_18441_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("it->second", 10));
		}));
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a8866207_indent((*(_self_))._field_oc);
	};
	_1a8784e06_scope(_self_, (*((*(_18441_it))))._field_Scope);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, _1869_next);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a8865b0d_write((*(_self_))._field_oc, _1859_begin);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a8866009_doneIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a4156_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18441_it))))));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a8866009_doneIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a8780275_ifCase(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb252b_If> _22730_i) {
	if (((*(_22730_i))._field_Expr != nullptr)) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_22730_i))._field_Expr);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1a8784e06_scope(_self_, (*(_22730_i))._field_Scope);
}



inline void _1a878052d_conditional(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb2c46_Conditional> _23635_c) {
	jule::Bool _23713_writed = false;;
	{
		auto expr = &((*(_23635_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbd1eba:;
		if (it != expr_end) {
			jule::Ptr<_1c0cb252b_If> _23821_elif = *it;
			{
				if ((_23821_elif == nullptr)) {
					goto _iter_next_1abbd1eba;
				};
				if (_23713_writed) {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_23713_writed=true;
				_1a8780275_ifCase(_self_, _23821_elif);
			}
			_iter_next_1abbd1eba:;
			++it;
			goto _iter_begin_1abbd1eba;
		}
		_iter_end_1abbd1eba:;
	};
	if (((*(_23635_c))._field_Default != nullptr)) {
		if (_23713_writed) {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1a8784e06_scope(_self_, (*((*(_23635_c))._field_Default))._field_Scope);
	};
}



inline void _1a87807d6_infIter(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb3043_InfIter> _25631_it) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1a8865d0b_addIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8784e06_scope(_self_, (*(_25631_it))._field_Scope);
	_1a8866009_doneIndent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a4420_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25631_it))));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a4156_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25631_it))));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a8780a8e_whileIter(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb34e9_WhileIter> _27333_it) {
	if ((((*(_27333_it))._field_Expr != nullptr) && ((*(_27333_it))._field_Next == nullptr))) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_27333_it))._field_Expr);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	} else {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_27333_it))._field_Expr != nullptr)) {
			_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_27333_it))._field_Expr);
		};
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*(_27333_it))._field_Next != nullptr)) {
			_1a8784895_st(_self_, (*(_27333_it))._field_Next);
		};
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	};
	_1a8865d0b_addIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8784e06_scope(_self_, (*(_27333_it))._field_Scope);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a8866009_doneIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a4420_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27333_it))));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a4156_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27333_it))));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a8780d47_rangeIter(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb3e45_RangeIter> _30633_it) {
	{
		
		if ((_1c0db3bc1_Slc((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abbe661c:;
			{
				_1a877ec14_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		else if ((_1c0db393a_Arr((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abbe62dc:;
			{
				_1a877ec14_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		else if ((_1c0db470a_Map((*((*(_30633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abbe6353:;
			{
				_1a877eebc_rangeHashmapIter(_self_, &(_30633_it));
			}
		}
		else {
			_case_begin_1abbe6276:;
			{
				_1a877ec14_rangeIndexIter(_self_, &(_30633_it));
			}
		}
		_match_end_1abbe61aa:;
	};
}



inline void _1a8781100_cont(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb42ca_ContSt> _31924_c) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a4420_iterNext((*(_31924_c))._field_It));
}



inline void _1a87813a8_label(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb49a1_Label> _32425_l) {
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a46d9_label(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_32425_l))));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1a8781661_gotoSt(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb4d7a_GotoSt> _32926_gt) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a46d9_label(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_32926_gt))._field_Label))));
}



inline void _1a8781919_postfix(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb5254_Postfix> _33431_p) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_33431_p))._field_Expr);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1a8865b0d_write((*(_self_))._field_oc, (*(_33431_p))._field_Op);
}



inline void _1a8781bc2_assign(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb570a_Assign> _34130_a) {
	_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34130_a))._field_L))._field_Model);
	_1a8865b0d_write((*(_self_))._field_oc, (*((*(_34130_a))._field_Op))._field_Kind);
	_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34130_a))._field_R))._field_Model);
}



inline void _1a8781e7a_mapLookupAssign(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb5ad4_MultiAssign>* _34740_a) {
	jule::Ptr<_1c0c661c2_IndexingExprModel> _34813_iem = (*((*(_34740_a))))._field_R.cast_ptr<_1c0c661c2_IndexingExprModel>(&__jule_any_type45);;
	_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34813_iem))._field_Expr))._field_Model);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".lookup(", 8));
	_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_34813_iem))._field_Index))._field_Model);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_34740_a))))._field_L[0LL] != nullptr)) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_34740_a))))._field_L[0LL]))._field_Model);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_34740_a))))._field_L[1LL] != nullptr)) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_34740_a))))._field_L[1LL]))._field_Model);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a8782233_multiAssignTup(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb5ad4_MultiAssign>* _37039_a) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a8865d0b_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1c0c69060_TupleExprModel> _37413_tup = (*((*(_37039_a))))._field_R.cast_ptr<_1c0c69060_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_37413_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc0be6d:;
		if (it != expr_end) {
			jule::I64 _37614_i = it - expr->begin();
			jule::Ptr<_1c0d80352_Data> _37621_r = *it;
			{
				_1a8866207_indent((*(_self_))._field_oc);
				jule::Ptr<_1c0d80352_Data> _37817_l = (*((*(_37039_a))))._field_L[_37614_i];;
				if ((_37817_l != nullptr)) {
					{
						auto &_match_expr{ (*(_37817_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1abc0eb0d:;
							{
								jule::Ptr<_1c0d2b94c_Var> _38225_v = (*(_37817_l))._field_Model.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8);;
								if (((*(_38225_v))._field_Reference && (!(_1c0d2bcd2_IsInitialized(_38225_v.ptr()))))) {
									_1a8865b0d_write((*(_self_))._field_oc, static__1a87a3ac3_var(_38225_v));
									_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_37621_r))._field_Model);
									_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_37039_a))))._field_L[_37614_i]=nullptr;
									goto _iter_next_1abc0be6d;
								};
							}
						}
						_match_end_1abc0eaa8:;
					};
					_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_37817_l))._field_Kind));
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					_1a8865b0d_write((*(_self_))._field_oc, static__1a87a1e67_toOut(&(_1a877d7e5_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37614_i))));
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_37621_r))._field_Model);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1abc0be6d:;
			++it;
			_37614_i++;
			goto _iter_begin_1abc0be6d;
		}
		_iter_end_1abc0be6d:;
	};
	{
		auto expr = &((*((*(_37039_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc15a6a:;
		if (it != expr_end) {
			jule::I64 _40314_i = it - expr->begin();
			jule::Ptr<_1c0d80352_Data> _40321_l = *it;
			{
				if ((_40321_l == nullptr)) {
					goto _iter_next_1abc15a6a;
				};
				_1a8866207_indent((*(_self_))._field_oc);
				_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_40321_l))._field_Model);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1a8865b0d_write((*(_self_))._field_oc, static__1a87a1e67_toOut(&(_1a877d7e5_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40314_i))));
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1abc15a6a:;
			++it;
			_40314_i++;
			goto _iter_begin_1abc15a6a;
		}
		_iter_end_1abc15a6a:;
	};
	_1a8866009_doneIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a87824db_multiAssignFn(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb5ad4_MultiAssign>* _41938_a) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a8865d0b_addIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	jule::Ptr<_1c0c65842_FnCallExprModel> _42413_f = (*((*(_41938_a))))._field_R.cast_ptr<_1c0c65842_FnCallExprModel>(&__jule_any_type34);;
	_1a8880573_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_42413_f))._field_Func))._field_Result));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_41938_a))))._field_R);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	{
		auto expr = &((*((*(_41938_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc1de2a:;
		if (it != expr_end) {
			jule::I64 _43014_i = it - expr->begin();
			jule::Ptr<_1c0d80352_Data> _43021_l = *it;
			{
				if ((_43021_l != nullptr)) {
					_1a8866207_indent((*(_self_))._field_oc);
					_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_43021_l))._field_Model);
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
					_1a8865b0d_write((*(_self_))._field_oc, _203634387_Itoa(_43014_i));
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1abc1de2a:;
			++it;
			_43014_i++;
			goto _iter_begin_1abc1de2a;
		}
		_iter_end_1abc1de2a:;
	};
	_1a8866009_doneIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a8782794_multiAssign(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb5ad4_MultiAssign> _44535_a) {
	{
		auto &_match_expr{ (*(_44535_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1abc2423d:;
			{
				_1a8781e7a_mapLookupAssign(_self_, &(_44535_a));
				return;;
			}
		}
		_match_end_1abc241d8:;
	};
	{
		auto &_match_expr{ (*(_44535_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1abc246d3:;
			{
				_1a8782233_multiAssignTup(_self_, &(_44535_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1abc23da8:;
			{
				_1a87824db_multiAssignFn(_self_, &(_44535_a));
			}
		}
		else {
			_case_begin_1abc24628:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:459:13"));;
			}
		}
		_match_end_1abc245c3:;
	};
}



inline jule::Fn<void(void)> _1a8782ad5_matchExpr(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb6244_Match> _46333_m) {
	if ((!(_1c0d80c26_IsConst((*(_46333_m))._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
		});;
	};
	if (((!(_203648ad8_IsBool((*((*(_46333_m))._field_Expr))._field_Constant.ptr()))) || (!(_2036464dc_ReadBool((*((*(_46333_m))._field_Expr))._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_46333_m))._field_Expr))._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1a8782e48_case(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb6244_Match> _47328_m, jule::Ptr<_1c0cb6d7c_Case> _47343_c) {
	if ((((*(_47343_c))._field_Exprs.len() != 0LL) && (!((*(_47328_m))._field_Comptime)))) {
		if ((((*(_47328_m))._field_Cases.len() > 0LL) && ((*(_47328_m))._field_Cases[0LL] == _47343_c))) {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*(_47343_c))._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abc2b267:;
			if (it != expr_end) {
				jule::I64 _48018_i = it - expr->begin();
				jule::Ptr<_1c0d80352_Data> _48025_expr = *it;
				{
					{
						
						if ((!((*(_47328_m))._field_TypeMatch))) {
							_case_begin_1abb80870:;
							{
								jule::Fn<void(void)> _48321_caseExpr = _1a8782ad5_matchExpr(_self_, _47328_m);;
								if (_1c0d81067_GoodOperand((*(_47328_m))._field_Expr.ptr(), &(_48025_expr))) {
									if ((_48321_caseExpr != nullptr)) {
										_48321_caseExpr();
										_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
									};
									_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_48025_expr))._field_Model);
								} else {
									_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_48025_expr))._field_Model);
									if ((_48321_caseExpr != nullptr)) {
										_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_48321_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1abc2cc4c:;
							{
								_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1c0db0519_TypeKind> _49925_tk = (*(_48025_expr))._field_Model.cast_ptr<_1c0db0519_TypeKind>(&__jule_any_type83);;
								if ((_1c0db4474_Trait((*((*(_47328_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1a8788a64_boolean((*((*(_self_))._field_oc))._field_ec, (_1c0db2e01_Sptr((*(_48025_expr))._field_Kind.ptr()) != nullptr));
									_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									_1a8865b0d_write((*(_self_))._field_oc, _203634387_Itoa(static_cast<jule::I64>(_1a88676e2_findTypeOffset((*(_self_))._field_oc.ptr(), _1c0db4474_Trait((*((*(_47328_m))._field_Expr))._field_Kind.ptr()), (*(_48025_expr))._field_Kind))));
									_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _50725_j = _1a8866889_pushAnyType((*(_self_))._field_oc, _49925_tk);;
									_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1a8865b0d_write((*(_self_))._field_oc, _203634387_Itoa(_50725_j));
								};
							}
						}
						_match_end_1abc2cb81:;
					};
					if ((((*(_47343_c))._field_Exprs.len() - _48018_i) > 1LL)) {
						_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1abc2b267:;
				++it;
				_48018_i++;
				goto _iter_begin_1abc2b267;
			}
			_iter_end_1abc2b267:;
		};
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_47328_m))._field_Default == _47343_c) && ((*(_47328_m))._field_Cases.len() != 0LL))) {
		_1a8866207_indent((*(_self_))._field_oc);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1a8865d0b_addIndent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a4c6c_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47343_c))));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_47343_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1a8866207_indent((*(_self_))._field_oc);
		_1a8784e06_scope(_self_, (*(_47343_c))._field_Scope);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1a8866009_doneIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a8783201_matchSt(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb6244_Match> _54131_m) {
	if ((((*(_54131_m))._field_Cases.len() == 0LL) && ((*(_54131_m))._field_Default == nullptr))) {
		return;;
	};
	if (((*(_54131_m))._field_Comptime && (((*(_54131_m))._field_Default == nullptr) || ((*((*((*(_54131_m))._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a8865d0b_addIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	if (((!((*(_54131_m))._field_Comptime)) && (!(_1c0d80c26_IsConst((*(_54131_m))._field_Expr.ptr()))))) {
		if ((_1c18a4d65_Copy && _1a8785577_isCopyOptimizable(&((*(_54131_m))._field_Expr)))) {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_54131_m))._field_Expr))._field_Model);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1a8866207_indent((*(_self_))._field_oc);
	};
	if (((*(_54131_m))._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*(_54131_m))._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abc4c156:;
			if (it != expr_end) {
				jule::Ptr<_1c0cb6d7c_Case> _56925_c = *it;
				{
					if ((_56925_c == nullptr)) {
						goto _iter_next_1abc4c156;
					};
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1a8866207_indent((*(_self_))._field_oc);
					_1a8782e48_case(_self_, _54131_m, _56925_c);
				}
				_iter_next_1abc4c156:;
				++it;
				goto _iter_begin_1abc4c156;
			}
			_iter_end_1abc4c156:;
		};
	};
	if (((*(_54131_m))._field_Default != nullptr)) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a8782e48_case(_self_, _54131_m, (*(_54131_m))._field_Default);
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a49a3_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54131_m))));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a8866009_doneIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a87834a9_fallSt(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb7476_FallSt> _59626_f) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a4c6c_caseBegin((*(_59626_f))._field_DestCase));
}



inline void _1a8783762_breakSt(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb46a4_BreakSt> _60127_b) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_60127_b))._field_It != 0LLU)) {
		_1a8865b0d_write((*(_self_))._field_oc, static__1a87a4156_iterEnd((*(_60127_b))._field_It));
	} else {
		_1a8865b0d_write((*(_self_))._field_oc, static__1a87a49a3_matchEnd((*(_60127_b))._field_Mtch));
	};
}



inline void _1a8783a1a_setResult(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb780b_RetSt> _61033_r) {
	if (((*((*((*((*(_61033_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_61033_r))._field_Expr);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1a8866207_indent((*(_self_))._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1c0d80352_Data>> _61813_datas = (*((*(_61033_r))._field_Expr.cast_ptr<_1c0c69060_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
	{
		auto expr = &(_61813_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc5a175:;
		if (it != expr_end) {
			jule::I64 _61913_i = it - expr->begin();
			jule::Ptr<_1c0d80352_Data> _61916_data = *it;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1a8865b0d_write((*(_self_))._field_oc, _203634387_Itoa(_61913_i));
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_61916_data))._field_Model);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				_1a8866207_indent((*(_self_))._field_oc);
			}
			_iter_next_1abc5a175:;
			++it;
			_61913_i++;
			goto _iter_begin_1abc5a175;
		}
		_iter_end_1abc5a175:;
	};
}



inline void _1a8783cc3_retSt(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb780b_RetSt> _62929_r) {
	if (_1c0c71a29_IsVoid((*((*(_62929_r))._field_Func))._field_Decl.ptr())) {
		if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional();", 31));
			return;;
		};
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_62929_r))._field_Func))._field_Result));
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(), ", 15));
			_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_62929_r))._field_Expr);
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
		} else {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_62929_r))._field_Expr);
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_62929_r))._field_Expr != nullptr)) {
		_1a8783a1a_setResult(_self_, _62929_r);
	};
	if ((*((*((*(_62929_r))._field_Func))._field_Decl))._field_Exceptional) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1a8880573_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_62929_r))._field_Func))._field_Result));
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1a878407b_var(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0d2b94c_Var> _66527_v) {
	if ((!((*(_66527_v))._field_Constant))) {
		_1a886d781_var((*(_self_))._field_oc, _66527_v);
	};
}



inline void _1a8784334_mutSlicing(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0eae717_MutSlicingExprModel> _67134_m) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Expr);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_21a9586a5_Production))) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a8867d0d_locInfo((*(_self_))._field_oc, &((*(_67134_m))._field_Token));
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Left);
	if (((*(_67134_m))._field_Right != nullptr)) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_67134_m))._field_Right);
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1a87845dc_swap(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0ead43b_SwapExprModel> _68828_m) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_68828_m))._field_Left))._field_Model);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a87912db_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_68828_m))._field_Right))._field_Model);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a8784895_st(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Any _69726_st) {
	if ((_69726_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _69726_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1abc74aeb:;
			{
				_1a8784e06_scope(_self_, _69726_st.cast_ptr<_1c0cb210d_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1abc756ac:;
			{
				_1a878407b_var(_self_, _69726_st.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1abc75723:;
			{
				_1a879a5ae_model((*((*(_self_))._field_oc))._field_ec, (*(_69726_st.cast_ptr<_1c0d80352_Data>(&__jule_any_type24)))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1abc75789:;
			{
				_1a878052d_conditional(_self_, _69726_st.cast_ptr<_1c0cb2c46_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1abc75800:;
			{
				_1a87807d6_infIter(_self_, _69726_st.cast_ptr<_1c0cb3043_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1abc75866:;
			{
				_1a8780a8e_whileIter(_self_, _69726_st.cast_ptr<_1c0cb34e9_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1abc758cc:;
			{
				_1a8780d47_rangeIter(_self_, _69726_st.cast_ptr<_1c0cb3e45_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1abc75943:;
			{
				_1a8781100_cont(_self_, _69726_st.cast_ptr<_1c0cb42ca_ContSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1abc759a9:;
			{
				_1a87813a8_label(_self_, _69726_st.cast_ptr<_1c0cb49a1_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1abc75a20:;
			{
				_1a8781661_gotoSt(_self_, _69726_st.cast_ptr<_1c0cb4d7a_GotoSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1abc75a86:;
			{
				_1a8781919_postfix(_self_, _69726_st.cast_ptr<_1c0cb5254_Postfix>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1abc75aec:;
			{
				_1a8781bc2_assign(_self_, _69726_st.cast_ptr<_1c0cb570a_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1abc75b63:;
			{
				_1a8782794_multiAssign(_self_, _69726_st.cast_ptr<_1c0cb5ad4_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1abc75bc9:;
			{
				_1a8783201_matchSt(_self_, _69726_st.cast_ptr<_1c0cb6244_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1abc75c40:;
			{
				_1a87834a9_fallSt(_self_, _69726_st.cast_ptr<_1c0cb7476_FallSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1abc75ca6:;
			{
				_1a8783762_breakSt(_self_, _69726_st.cast_ptr<_1c0cb46a4_BreakSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1abc75d2d:;
			{
				_1a8783cc3_retSt(_self_, _69726_st.cast_ptr<_1c0cb780b_RetSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1abc75da5:;
			{
				_1a8798090_pushToSlice((*((*(_self_))._field_oc))._field_ec, _69726_st.cast_ptr<_1c0eb0240_PushToSliceExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1abc75e2c:;
			{
				_1a8798348_appendToSlice((*((*(_self_))._field_oc))._field_ec, _69726_st.cast_ptr<_1c0eb0619_AppendToSliceExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1abc75ea4:;
			{
				_1a8784334_mutSlicing(_self_, _69726_st.cast_ptr<_1c0eae717_MutSlicingExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1abc7602b:;
			{
				_1a87845dc_swap(_self_, _69726_st.cast_ptr<_1c0ead43b_SwapExprModel>(&__jule_any_type123));
			}
		}
		else {
			_case_begin_1abc74ba6:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1abc74755:;
	};
}



inline void _1a8784b4d_scopeStmts(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb210d_Scope>* _74935_s) {
	{
		auto expr = &((*((*(_74935_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc7755a:;
		if (it != expr_end) {
			jule::Any _75021_st = *it;
			{
				_1a8866207_indent((*(_self_))._field_oc);
				_1a8784895_st(_self_, _75021_st);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1abc7755a:;
			++it;
			goto _iter_begin_1abc7755a;
		}
		_iter_end_1abc7755a:;
	};
}



inline void _1a8784e06_scope(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0cb210d_Scope> _75829_s) {
	_1a8865d0b_addIndent((*(_self_))._field_oc);
	if ((*(_75829_s))._field_Deferred) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a8784b4d_scopeStmts(_self_, &(_75829_s));
	_1a8866009_doneIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*(_75829_s))._field_Deferred) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1a87851ae_funcScope(jule::Ptr<_1a877de22_scopeCoder> _self_, jule::Ptr<_1c0c744aa_FnIns> _77433_f) {
	if (((*(_77433_f))._field_Scope == nullptr)) {
		return;;
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a8865d0b_addIndent((*(_self_))._field_oc);
	if ((!(_1c0c71a29_IsVoid((*(_77433_f))._field_Decl.ptr())))) {
		jule::Ptr<_1c0dbd1d6_Tuple> _78117_tup = _1c0db4991_Tup((*(_77433_f))._field_Result.ptr());;
		if ((_78117_tup != nullptr)) {
			_1a8866207_indent((*(_self_))._field_oc);
			_1a887ed9c_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _78117_tup);
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*(_78117_tup))._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1abc8b481:;
				if (it != expr_end) {
					jule::I64 _78622_i = it - expr->begin();
					jule::Ptr<_1c0db0519_TypeKind> _78629_t = *it;
					{
						if (_1a8882971_shouldInitialized(&(_78629_t))) {
							_1a8866207_indent((*(_self_))._field_oc);
							_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a8865b0d_write((*(_self_))._field_oc, _203634387_Itoa(_78622_i));
							_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1a879a867_initExpr((*((*(_self_))._field_oc))._field_ec, _78629_t);
							_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1abc8b481:;
					++it;
					_78622_i++;
					goto _iter_begin_1abc8b481;
				}
				_iter_end_1abc8b481:;
			};
		} else if (((*((*((*(_77433_f))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
			_1a8866207_indent((*(_self_))._field_oc);
			_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_77433_f))._field_Result));
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1a8882971_shouldInitialized(&((*(_77433_f))._field_Result))) {
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1a879a867_initExpr((*((*(_self_))._field_oc))._field_ec, (*(_77433_f))._field_Result);
			};
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1a8784b4d_scopeStmts(_self_, &((*(_77433_f))._field_Scope));
	if (((*((*(_77433_f))._field_Decl))._field_Exceptional && _1c0c71a29_IsVoid((*(_77433_f))._field_Decl.ptr()))) {
		_1a8866207_indent((*(_self_))._field_oc);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional();\n", 32));
	};
	_1a8866009_doneIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1a877de22_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a878813a_exprCoder> static__1a8788503_new(jule::Ptr<_1a8865459_ObjectCoder>* _10724_oc) {
	return jule::new_ptr<_1a878813a_exprCoder>(_1a878813a_exprCoder{._field_oc=(*(_10724_oc))});;
}



inline void _1a87887ab_string(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_2036445ea_Const>* _11327_c) {
	jule::Str _1149_content = _203646773_ReadStr((*(_11327_c)).ptr());;
	if ((_1149_content.len() == 0LL)) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1199_len = _2036340bd_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_1149_content.len())), 10LL);;
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1a879b659_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), _1149_content);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a8865b0d_write((*(_self_))._field_oc, _1199_len);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a8788a64_boolean(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Bool _12827_b) {
	if (_12827_b) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1a8788c62_nilLit(jule::Ptr<_1a878813a_exprCoder> _self_) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1a87890a3_ftoaSpecialCases(jule::Ptr<_1a878813a_exprCoder> _self_, jule::F64* _14037_x) {
	{
		
		if (_2035d7add_IsNaN((*(_14037_x)))) {
			_case_begin_1abcb0e78:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_2035d81e8_IsInf((*(_14037_x)), 1LL)) {
			_case_begin_1abcb1000:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_2035d81e8_IsInf((*(_14037_x)), -1LL)) {
			_case_begin_1abcb1077:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1abcb0d9b:;
			{
				return false;;
			}
		}
		_match_end_1abcb0cd0:;
	};
	return true;;
}



inline void _1a878935b_float32(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_2036445ea_Const>* _15428_c) {
	jule::F64 _1559_x = _2036472ac_AsF64((*(_15428_c)).ptr());;
	if (_1a87890a3_ftoaSpecialCases(_self_, &(_1559_x))) {
		return;;
	};
	{
		
		if ((_1559_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1abcb4454:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1559_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1abcb419b:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1abcb4135:;
			{
				_1a879ba00_ftoa(&((*((*(_self_))._field_oc))._field_Obj), _1559_x, 32LL);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1abcb3e04:;
	};
}



inline void _1a8789614_float64(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_2036445ea_Const>* _17328_c) {
	jule::F64 _1749_x = _2036472ac_AsF64((*(_17328_c)).ptr());;
	if (_1a87890a3_ftoaSpecialCases(_self_, &(_1749_x))) {
		return;;
	};
	{
		
		if ((_1749_x == jule::MAX_F64)) {
			_case_begin_1abcb7864:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1749_x == jule::MIN_F64)) {
			_case_begin_1abcb80e5:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1abcb7545:;
			{
				_1a879ba00_ftoa(&((*((*(_self_))._field_oc))._field_Obj), _1749_x, 64LL);
			}
		}
		_match_end_1abcb7314:;
	};
}



inline void _1a87898bc_constant(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_2036445ea_Const> _19132_c) {
	{
		
		if (_203648d6e_IsStr(_19132_c.ptr())) {
			_case_begin_1abcb9c2e:;
			{
				_1a87887ab_string(_self_, &(_19132_c));
			}
		}
		else if (_203648ad8_IsBool(_19132_c.ptr())) {
			_case_begin_1abcb9811:;
			{
				_1a8788a64_boolean(_self_, _2036464dc_ReadBool(_19132_c.ptr()));
			}
		}
		else if (_203649105_IsF64(_19132_c.ptr())) {
			_case_begin_1abcb9877:;
			{
				{
					
					if ((*(_19132_c))._field_Kind.equal("f32", 3)) {
						_case_begin_1abcbc3d5:;
						{
							_1a878935b_float32(_self_, &(_19132_c));
						}
					}
					else {
						_case_begin_1abcbbe51:;
						{
							_1a8789614_float64(_self_, &(_19132_c));
						}
					}
					_match_end_1abcbbd96:;
				};
			}
		}
		else if (_2036485bb_IsI64(_19132_c.ptr())) {
			_case_begin_1abcb98dd:;
			{
				_1a879bcdb_itoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::I64>(_203645ec0_ReadI64(_19132_c.ptr())));
			}
		}
		else if (_203648852_IsU64(_19132_c.ptr())) {
			_case_begin_1abcb9954:;
			{
				_1a879c0c7_utoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::U64>(_203646256_ReadU64(_19132_c.ptr())));
			}
		}
		else if (_20364938b_IsNil(_19132_c.ptr())) {
			_case_begin_1abcba416:;
			{
				_1a8788c62_nilLit(_self_);
			}
		}
		else {
			_case_begin_1abcb979a:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1abcb96ce:;
	};
}



inline void _1a8789cda_divByZeroBinary(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c25406_Token>* _21536_op, jule::Ptr<_1c0c63367_OperandExprModel>* _21553_l, jule::Ptr<_1c0c63367_OperandExprModel>* _21580_r) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_21536_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1abcc10ba:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1abcc1142:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1abcc1054:;
	};
	if ((!(_21a9586a5_Production))) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a8867d0d_locInfo((*(_self_))._field_oc, _21536_op);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\",", 2));
	};
	_1a87912db_possibleRefExpr(_self_, (*((*(_21553_l))))._field_Model);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1a87912db_possibleRefExpr(_self_, (*((*(_21580_r))))._field_Model);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a878a093_unsafeBinary(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c63862_BinopExprModel> _23736_m) {
	if ((((*((*(_23736_m))._field_Op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*((*(_23736_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_1a879ca34_isAny(&((*((*(_23736_m))._field_Left))._field_Kind))) {
			if (((!(_1c0db15e7_IsNil((*((*(_23736_m))._field_Right))._field_Kind.ptr()))) && (!(_1a879ca34_isAny(&((*((*(_23736_m))._field_Right))._field_Kind)))))) {
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*((*(_23736_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU))) {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
				};
				jule::I64 _24721_i = _1a8866889_pushAnyType((*(_self_))._field_oc, (*((*(_23736_m))._field_Right))._field_Kind);;
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("__jule_any_type", 15));
				_1a8865b0d_write((*(_self_))._field_oc, _203634387_Itoa(_24721_i));
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("_compare(", 9));
				_1a87912db_possibleRefExpr(_self_, (*((*(_23736_m))._field_Left))._field_Model);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a87912db_possibleRefExpr(_self_, (*((*(_23736_m))._field_Right))._field_Model);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a87912db_possibleRefExpr(_self_, (*((*(_23736_m))._field_Left))._field_Model);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a8865b0d_write((*(_self_))._field_oc, (*((*(_23736_m))._field_Op))._field_Kind);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a87912db_possibleRefExpr(_self_, (*((*(_23736_m))._field_Right))._field_Model);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a878a34b_binary(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c63862_BinopExprModel> _26830_m) {
	{
		auto &_match_expr{ (*((*(_26830_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1abcd20ba:;
			{
				if ((_1c0db41dd_Struct((*((*(_26830_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1a8789cda_divByZeroBinary(_self_, &((*(_26830_m))._field_Op), &((*(_26830_m))._field_Left), &((*(_26830_m))._field_Right));
					return;;
				};
			}
		}
		_match_end_1abcd2010:;
	};
	_1a878a093_unsafeBinary(_self_, _26830_m);
}



inline void _1a878a604_var(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0d2b94c_Var> _28027_m) {
	if ((*(_28027_m))._field_Binded) {
		jule::Ptr<_1c0c39e10_Directive> _28213_d = _1a88822de_findDirective(&((*(_28027_m))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_28213_d != nullptr)) {
			_1a8865b0d_write((*(_self_))._field_oc, _1a88726ec_concatAllParts((*(_28213_d))._field_Args));
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a3ac3_var(_28027_m));
}



inline void _1a878a8ac_structureIns(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c5e3c9_StructIns> _29136_m) {
	_1a8865b0d_write((*(_self_))._field_oc, _1a8878b65_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), _29136_m));
}



inline void _1a878ab65_unary(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c63c3b_UnaryExprModel> _29529_m) {
	{
		auto &_match_expr{ (*((*(_29529_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1abcd829c:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1a87912db_possibleRefExpr(_self_, (*((*(_29529_m))._field_Expr))._field_Model);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1abcd8324:;
			{
				if ((_21a9586a5_Production || (_1c0db2e01_Sptr((*((*(_29529_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1abcd81d1;
				};
				_1a87912db_possibleRefExpr(_self_, (*((*(_29529_m))._field_Expr))._field_Model);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".get(\"", 6));
				_1a8867d0d_locInfo((*(_self_))._field_oc, &((*(_29529_m))._field_Op));
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1abcd81d1:;
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a8865b0d_write((*(_self_))._field_oc, (*((*(_29529_m))._field_Op))._field_Kind);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a87912db_possibleRefExpr(_self_, (*((*(_29529_m))._field_Expr))._field_Model);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a878ae1d_structureLit(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c64610_StructLitExprModel> _31936_m) {
	if ((*((*((*(_31936_m))._field_Strct))._field_Decl))._field_Binded) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a3540_structureIns(&((*(_31936_m))._field_Strct)));
	if ((*((*((*(_31936_m))._field_Strct))._field_Decl))._field_Binded) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	if (((*(_31936_m))._field_Args.len() > 0LL)) {
		_julec_label_1abce30dc:;
		{
			auto expr = &((*((*(_31936_m))._field_Strct))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abce321e:;
			if (it != expr_end) {
				jule::I64 _33217_i = it - expr->begin();
				jule::Ptr<_1c0c5d829_FieldIns> _33220_f = *it;
				{
					{
						auto expr = &((*(_31936_m))._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1abce4099:;
						if (it != expr_end) {
							jule::Ptr<_1c0c64269_StructArgExprModel> _33329_arg = *it;
							{
								if (((*(_33329_arg))._field_Field == _33220_f)) {
									_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
									_1a8865b0d_write((*(_self_))._field_oc, static__1a87a3809_field(&((*((*(_33329_arg))._field_Field))._field_Decl)));
									_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
									_1a87912db_possibleRefExpr(_self_, (*((*(_33329_arg))._field_Expr))._field_Model);
									if ((((*((*(_31936_m))._field_Strct))._field_Fields.len() - _33217_i) > 1LL)) {
										_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1abce321e;
								};
							}
							_iter_next_1abce4099:;
							++it;
							goto _iter_begin_1abce4099;
						}
						_iter_end_1abce4099:;
					};
				}
				_iter_next_1abce321e:;
				++it;
				_33217_i++;
				goto _iter_begin_1abce321e;
			}
			_iter_end_1abce321e:;
		};
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a8791088_allocStructure(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6490c_AllocStructLitExprModel> _35038_m) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a3540_structureIns(&((*((*(_35038_m))._field_Lit))._field_Strct)));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a878ae1d_structureLit(_self_, (*(_35038_m))._field_Lit);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a87912db_possibleRefExpr(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Any _35835_expr) {
	{
		auto &_match_expr{ _35835_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1abceb766:;
			{
				jule::Ptr<_1c0d2b94c_Var> _36113_v = _35835_expr.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8);;
				if ((*(_36113_v))._field_Reference) {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1a879a5ae_model(_self_, _35835_expr);
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1abceb711:;
	};
	_1a879a5ae_model(_self_, _35835_expr);
}



inline void _1a8791709_castTraitFromTrait(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c64e90_CastingExprModel>* _37243_m, jule::Ptr<_1c0c84850_Trait> _37269_t1, jule::Ptr<_1c0c84850_Trait> _37285_t2) {
	_1a87912db_possibleRefExpr(_self_, (*((*(_37243_m))))._field_Expr);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".mask<", 6));
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a2be3_traitDecl(_37269_t1));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a8867a55_pushAndWriteMaskMapper((*(_self_))._field_oc, _37269_t1, _37285_t2);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a87919b2_casting(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c64e90_CastingExprModel> _38731_m) {
	{
		
		if (_1a879ca34_isAny(&((*(_38731_m))._field_Kind))) {
			_case_begin_1abd01cbb:;
			{
				if (_1c0db15e7_IsNil((*(_38731_m))._field_ExprKind.ptr())) {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1c0db36a4_TypeEnum((*(_38731_m))._field_ExprKind.ptr()) != nullptr)) {
					_1a87912db_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
					return;;
				};
				jule::I64 _39813_i = _1a8866889_pushAnyType((*(_self_))._field_oc, (*(_38731_m))._field_ExprKind);;
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*(_38731_m))._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1abd04d57:;
						{
							jule::Ptr<_1c0db80e3_Prim> _40217_prim = _1c0db2b6a_Prim((*(_38731_m))._field_ExprKind.ptr());;
							if (((_40217_prim != nullptr) && _203643a17_IsInt((*(_40217_prim))._field_Kind))) {
								_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1a8865b0d_write((*(_self_))._field_oc, _1a8875dd7_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _40217_prim));
								_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1a87912db_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
								_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1abd056c6;
							};
							goto _case_begin_1abd0572b;
						}
					}
					else {
						_case_begin_1abd0572b:;
						{
							_1a87912db_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
						}
					}
					_match_end_1abd056c6:;
				};
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1a8865b0d_write((*(_self_))._field_oc, _203634387_Itoa(_39813_i));
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1a879ca34_isAny(&((*(_38731_m))._field_ExprKind))) {
			_case_begin_1abd01d43:;
			{
				_1a87912db_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1c0db2e01_Sptr((*(_38731_m))._field_Kind.ptr()) != nullptr)) {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_1c0db2e01_Sptr((*(_38731_m))._field_Kind.ptr())))._field_Elem));
				} else {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38731_m))._field_Kind));
				};
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_21a9586a5_Production))) {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a8867d0d_locInfo((*(_self_))._field_oc, &((*(_38731_m))._field_Token));
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1a8865b0d_write((*(_self_))._field_oc, _203634387_Itoa(static_cast<jule::I64>(_1a8866889_pushAnyType((*(_self_))._field_oc, (*(_38731_m))._field_Kind))));
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1c0db3187_Ptr((*(_38731_m))._field_ExprKind.ptr()) != nullptr) || (_1c0db3187_Ptr((*(_38731_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd01dba:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38731_m))._field_Kind));
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1a87912db_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1c0db4474_Trait((*(_38731_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1abd01e42:;
			{
				if ((_1c0db4474_Trait((*(_38731_m))._field_Kind.ptr()) != nullptr)) {
					_1a8791709_castTraitFromTrait(_self_, &(_38731_m), _1c0db4474_Trait((*(_38731_m))._field_Kind.ptr()), _1c0db4474_Trait((*(_38731_m))._field_ExprKind.ptr()));
					return;;
				};
				_1a87912db_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1c0db2e01_Sptr((*(_38731_m))._field_Kind.ptr()) != nullptr)) {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_1c0db2e01_Sptr((*(_38731_m))._field_Kind.ptr())))._field_Elem));
				} else {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38731_m))._field_Kind));
				};
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_21a9586a5_Production))) {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a8867d0d_locInfo((*(_self_))._field_oc, &((*(_38731_m))._field_Token));
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a8865b0d_write((*(_self_))._field_oc, _203634387_Itoa(static_cast<jule::I64>(_1a88676e2_findTypeOffset((*(_self_))._field_oc.ptr(), _1c0db4474_Trait((*(_38731_m))._field_ExprKind.ptr()), (*(_38731_m))._field_Kind))));
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1c0db4474_Trait((*(_38731_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd01eb9:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38731_m))._field_Kind));
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1a87912db_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a8865b0d_write((*(_self_))._field_oc, _203634387_Itoa(static_cast<jule::I64>(_1a88676e2_findTypeOffset((*(_self_))._field_oc.ptr(), _1c0db4474_Trait((*(_38731_m))._field_Kind.ptr()), (*(_38731_m))._field_ExprKind))));
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1abd01b78:;
	};
	jule::Ptr<_1c0db80e3_Prim> _4799_prim = _1c0db2b6a_Prim((*(_38731_m))._field_Kind.ptr());;
	jule::Ptr<_1c0db80e3_Prim> _4809_eprim = _1c0db2b6a_Prim((*(_38731_m))._field_ExprKind.ptr());;
	if ((((_4809_eprim != nullptr) && (_4799_prim != nullptr)) && _1c0dbb57a_IsStr(_4799_prim.ptr()))) {
		if (_1c0db99da_IsU8(_4809_eprim.ptr())) {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1a87912db_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_38731_m))._field_Kind));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a87912db_possibleRefExpr(_self_, (*(_38731_m))._field_Expr);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a8791c6a_models(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Slice<jule::Any> _49830_args) {
	if ((_49830_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_49830_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd2c577:;
		if (it != expr_end) {
			jule::I64 _50214_i = it - expr->begin();
			jule::Any _50221_a = *it;
			{
				_1a87912db_possibleRefExpr(_self_, _50221_a);
				if (((_49830_args.len() - _50214_i) > 1LL)) {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1abd2c577:;
			++it;
			_50214_i++;
			goto _iter_begin_1abd2c577;
		}
		_iter_end_1abd2c577:;
	};
}



inline void _1a8792023_args(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c65842_FnCallExprModel>* _51029_m) {
	jule::I64 _51113_j = 0LL;;
	if (((((*((*((*(_51029_m))))._field_Func))._field_Owner != nullptr) && (!((*((*((*((*(_51029_m))))._field_Func))._field_Decl))._field_Statically))) || (((*((*((*(_51029_m))))._field_Func))._field_Params.len() > 0LL) && _1c0c701ed_IsSelf((*((*((*((*(_51029_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_51113_j)++;
	};
	{
		auto expr = &((*((*(_51029_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd3037c:;
		if (it != expr_end) {
			jule::I64 _51613_i = it - expr->begin();
			jule::Any _51616_arg = *it;
			{
				jule::Ptr<_1c0c7350e_ParamIns> _51713_p = (*((*((*(_51029_m))))._field_Func))._field_Params[_51113_j];;
				if ((((*(_51713_p))._field_Decl != nullptr) && (*((*(_51713_p))._field_Decl))._field_Reference)) {
					{
						auto &_match_expr{ _51616_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1abd32eea:;
							{
								jule::Ptr<_1c0d2b94c_Var> _52121_v = _51616_arg.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8);;
								if ((*(_52121_v))._field_Reference) {
									_1a879a5ae_model(_self_, _51616_arg);
									goto _julec_label_1abd3632d;
								};
							}
						}
						_match_end_1abd32e95:;
					};
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a879a5ae_model(_self_, _51616_arg);
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1abd3632d;
				};
				_1a87912db_possibleRefExpr(_self_, _51616_arg);
				_julec_label_1abd3632d:;
				if ((((*((*(_51029_m))))._field_Args.len() - _51613_i) > 1LL)) {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_51113_j)++;
			}
			_iter_next_1abd3037c:;
			++it;
			_51613_i++;
			goto _iter_begin_1abd3037c;
		}
		_iter_end_1abd3037c:;
	};
}



inline void _1a87922cb_modelForCall(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Any _54136_expr) {
	{
		auto &_match_expr{ _54136_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1abd37bd1:;
			{
				_1a8795510_funcIns(_self_, _54136_expr.cast_ptr<_1c0c744aa_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1abd37c58:;
			{
				jule::Ptr<_1c0c683d3_StructSubIdentExprModel> _54717_ssie = _54136_expr.cast_ptr<_1c0c683d3_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_54717_ssie))._field_Method != nullptr)) {
					_1a8795510_funcIns(_self_, (*(_54717_ssie))._field_Method);
					return;;
				};
			}
		}
		_match_end_1abd37b6a:;
	};
	_1a87912db_possibleRefExpr(_self_, _54136_expr);
}



inline void _1a8792584_pushCallInf(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c65842_FnCallExprModel>* _55632_m) {
	if ((_21a9586a5_Production || (!((*((*((*(_55632_m))))._field_Func))._field_Anon)))) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*((*((*(_55632_m))))._field_Func))._field_Anon) {
		{
			auto &_match_expr{ (*((*(_55632_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1abd3b4ed:;
				{
					if ((*((*((*((*((*((*(_55632_m))))._field_Expr.cast_ptr<_1c0c683d3_StructSubIdentExprModel>(&__jule_any_type97)))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1abd3b498:;
		};
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1a8867d0d_locInfo((*(_self_))._field_oc, &((*((*(_55632_m))))._field_Token));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_55632_m))))._field_Args.len() != 0LL)) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1a87928c5_isWrapped(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c65842_FnCallExprModel>* _57934_m) {
	if ((((!(_1c0c75940_IsBuiltin((*((*(_57934_m))))._field_Func.ptr()))) && ((*((*((*((*(_57934_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1c0c701ed_IsSelf((*((*((*((*(_57934_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_57934_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1abd4128e:;
				{
					jule::Ptr<_1c0c683d3_StructSubIdentExprModel> _58321_ssie = (*((*(_57934_m))))._field_Expr.cast_ptr<_1c0c683d3_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1c0c70484_IsRef((*((*((*((*(_57934_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1c0db2e01_Sptr((*((*(_58321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1abd42c30:;
							{
								goto _match_end_1abd41ec6;
							}
						}
						else {
							_case_begin_1abd4203c:;
							{
								if ((_1c0db41dd_Struct((*((*(_58321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*((*(_58321_ssie))._field_Expr))._field_Lvalue))) {
										_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1a879a5ae_model(_self_, (*((*(_58321_ssie))._field_Expr))._field_Model);
										_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1abd41ec6:;
					};
				}
			}
			_match_end_1abd41239:;
		};
	};
	return false;;
}



inline void _1a8792b7d_pureFuncCall(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c65842_FnCallExprModel>* _60337_m) {
	jule::Bool _6049_wrapped = _1a87928c5_isWrapped(_self_, _60337_m);;
	_1a87922cb_modelForCall(_self_, (*((*(_60337_m))))._field_Expr);
	if ((!(_1c0c75940_IsBuiltin((*((*(_60337_m))))._field_Func.ptr())))) {
		if (((*((*((*((*(_60337_m))))._field_Func))._field_Decl))._field_Binded && ((*((*((*(_60337_m))))._field_Func))._field_Generics.len() > 0LL))) {
			if ((!(_1a88826a7_hasDirective(&((*((*((*((*(_60337_m))))._field_Func))._field_Decl))._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*((*((*(_60337_m))))._field_Func))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abd49099:;
					if (it != expr_end) {
						jule::I64 _61026_i = it - expr->begin();
						jule::Ptr<_1c0dadb33_InsGeneric> _61033_g = *it;
						{
							_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_61033_g))._field_Kind));
							if ((((*((*((*(_60337_m))))._field_Func))._field_Generics.len() - _61026_i) > 1LL)) {
								_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1abd49099:;
						++it;
						_61026_i++;
						goto _iter_begin_1abd49099;
					}
					_iter_end_1abd49099:;
				};
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1a8792584_pushCallInf(_self_, _60337_m);
	jule::Bool _62113_locinfo = false;;
	if ((((!(_1c0c75940_IsBuiltin((*((*(_60337_m))))._field_Func.ptr()))) && ((*((*((*((*(_60337_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _1c0c701ed_IsSelf((*((*((*((*(_60337_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_60337_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1abd4e7a8:;
				{
					jule::Ptr<_1c0c683d3_StructSubIdentExprModel> _62521_ssie = (*((*(_60337_m))))._field_Expr.cast_ptr<_1c0c683d3_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_1c0c70484_IsRef((*((*((*((*(_60337_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1abd53d1d:;
							{
								_1a87912db_possibleRefExpr(_self_, (*((*((*((*(_62521_ssie))._field_Expr))._field_Model.cast_ptr<_1c0c63c3b_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
							}
						}
						else if ((_1c0db2e01_Sptr((*((*(_62521_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1abd50644:;
							{
								_1a87912db_possibleRefExpr(_self_, (*((*((*((*(_62521_ssie))._field_Expr))._field_Model.cast_ptr<_1c0c63c3b_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
								if ((!(_21a9586a5_Production))) {
									_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									_1a8867d0d_locInfo((*(_self_))._field_oc, &((*((*(_60337_m))))._field_Token));
									_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
								};
								_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1abd505cd:;
							{
								if ((_1c0db41dd_Struct((*((*(_62521_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_62521_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1abd50da3:;
											{
												jule::Ptr<_1c0d2b94c_Var> _64429_v = (*((*(_62521_ssie))._field_Expr))._field_Model.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8);;
												if ((*(_64429_v))._field_Reference) {
													goto _match_end_1abd513c0;
												};
												goto _case_begin_1abd51425;
											}
										}
										else {
											_case_begin_1abd51425:;
											{
												_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1abd513c0:;
									};
								};
								if (_6049_wrapped) {
									_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1c0db3187_Ptr((*((*(_62521_ssie))._field_Expr))._field_Kind.ptr()) == nullptr)) {
									_1a879a5ae_model(_self_, (*((*(_62521_ssie))._field_Expr))._field_Model);
								} else {
									_1a87912db_possibleRefExpr(_self_, (*((*((*((*(_62521_ssie))._field_Expr))._field_Model.cast_ptr<_1c0c63c3b_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1abd50567:;
					};
					if (((*((*(_60337_m))))._field_Args.len() > 0LL)) {
						_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1abd4e830:;
				{
					_1a87912db_possibleRefExpr(_self_, (*((*((*(_60337_m))))._field_Expr.cast_ptr<_1c0c67a42_TraitSubIdentExprModel>(&__jule_any_type96)))._field_Expr);
					if ((!(_21a9586a5_Production))) {
						_62113_locinfo=true;
					};
					if (((*((*(_60337_m))))._field_Args.len() > 0LL)) {
						_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1abd4e742:;
		};
	};
	_1a8792023_args(_self_, _60337_m);
	if (_62113_locinfo) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", \"", 3));
		_1a8867d0d_locInfo((*(_self_))._field_oc, &((*((*(_60337_m))))._field_Token));
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_6049_wrapped) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1a8792e36_coFuncCall(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c65842_FnCallExprModel>* _68935_m) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a8865d0b_addIndent((*(_self_))._field_oc);
	_21cd5e16e_StrBuilder _69213_head = static__21cd5e48d_New(32LL);;
	_21cd67d15_WriteStr(&_69213_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_68935_m))))._field_Func))._field_Owner != nullptr)) {
		_21cd67d15_WriteStr(&_69213_head, jule::Str::lit("_self_", 6));
		if (((*((*(_68935_m))))._field_Args.len() > 0LL)) {
			_21cd67d15_WriteStr(&_69213_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_68935_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd64db7:;
		if (it != expr_end) {
			jule::I64 _70013_i = it - expr->begin();
			jule::Any _70016_arg = *it;
			{
				if ((_70013_i > 0LL)) {
					_21cd67d15_WriteStr(&_69213_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _70016_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1abd663e6:;
						{
							jule::Ptr<_1c0d2b94c_Var> _70621_v = _70016_arg.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8);;
							_21cd67d15_WriteStr(&_69213_head, static__1a87a3ac3_var(_70621_v));
							goto _iter_next_1abd64db7;
						}
					}
					_match_end_1abd65b54:;
				};
				jule::Str _71013_name = (jule::Str::lit("_co_arg_", 8) + _203634387_Itoa(_70013_i));;
				_21cd67d15_WriteStr(&_69213_head, _71013_name);
				_1a8866207_indent((*(_self_))._field_oc);
				_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*((*((*(_68935_m))))._field_Func))._field_Params[_70013_i]))._field_Kind));
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*((*((*(_68935_m))))._field_Func))._field_Params[_70013_i]))._field_Decl))._field_Reference) {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
				};
				_1a8865b0d_write((*(_self_))._field_oc, _71013_name);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1a87912db_possibleRefExpr(_self_, _70016_arg);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _72213_argS = jule::Any(_71013_name, &__jule_any_type4);;
				(*((*(_68935_m))))._field_Args[_70013_i]=(*(((jule::Any*)((&(_72213_argS))))));
			}
			_iter_next_1abd64db7:;
			++it;
			_70013_i++;
			goto _iter_begin_1abd64db7;
		}
		_iter_end_1abd64db7:;
	};
	_1a8866207_indent((*(_self_))._field_oc);
	_21cd67a5c_Write(&(*((*(_self_))._field_oc))._field_Obj, _21cd690ad_Buf(&_69213_head));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1a8865d0b_addIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8792b7d_pureFuncCall(_self_, _68935_m);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a8866009_doneIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1a8866009_doneIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a8793299_writeUseExpr(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c744aa_FnIns>* _74037_f, jule::Ptr<_1c0d80352_Data> _74052_d) {
	if ((_1c0db4991_Tup((*(_74052_d))._field_Kind.ptr()) == nullptr)) {
		_1a87912db_possibleRefExpr(_self_, (*(_74052_d))._field_Model);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1c0c69060_TupleExprModel> _74613_tup = (*(_74052_d))._field_Model.cast_ptr<_1c0c69060_TupleExprModel>(&__jule_any_type81);;
	_1a887ed9c_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _1c0db4991_Tup((*((*(_74037_f))))._field_Result.ptr()));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*(_74613_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd72a84:;
		if (it != expr_end) {
			jule::I64 _74913_i = it - expr->begin();
			jule::Ptr<_1c0d80352_Data> _74916_data = *it;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1a8865b0d_write((*(_self_))._field_oc, _203634387_Itoa(_74913_i));
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1a87912db_possibleRefExpr(_self_, (*(_74916_data))._field_Model);
				if ((((*(_74613_tup))._field_Datas.len() - _74913_i) > 1LL)) {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1abd72a84:;
			++it;
			_74913_i++;
			goto _iter_begin_1abd72a84;
		}
		_iter_end_1abd72a84:;
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1a8793552_funcCall(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c65842_FnCallExprModel> _76132_m) {
	if ((*(_76132_m))._field_IsCo) {
		_1a8792e36_coFuncCall(_self_, &(_76132_m));
		return;;
	};
	if (((_1c0c75940_IsBuiltin((*(_76132_m))._field_Func.ptr()) || (!((*((*((*(_76132_m))._field_Func))._field_Decl))._field_Exceptional))) || (((*(_76132_m))._field_Except != nullptr) && ((*((*(_76132_m))._field_Except))._field_Stmts.len() == 0LL)))) {
		_1a8792b7d_pureFuncCall(_self_, &(_76132_m));
		return;;
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a8865d0b_addIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1a8792b7d_pureFuncCall(_self_, &(_76132_m));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a8866207_indent((*(_self_))._field_oc);
	if (((*(_76132_m))._field_Except != nullptr)) {
		if ((((*((*(_76132_m))._field_Func))._field_Result == nullptr) || (!((*(_76132_m))._field_Assigned)))) {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1a8784e06_scope((*((*(_self_))._field_oc))._field_sc, (*(_76132_m))._field_Except);
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _78717_forwarded = _1a879c4a1_isForwarded(&((*(_76132_m))._field_Except));;
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_78717_forwarded) {
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _79221_stmt = (*((*(_76132_m))._field_Except))._field_Stmts[((*((*(_76132_m))._field_Except))._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79221_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1abd826cb:;
					{
						(*((*(_76132_m))._field_Except))._field_Stmts=(*((*(_76132_m))._field_Except))._field_Stmts.slice(0LL, ((*((*(_76132_m))._field_Except))._field_Stmts.len() - 1LL));
						_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1a8865d0b_addIndent((*(_self_))._field_oc);
						_1a8784b4d_scopeStmts((*((*(_self_))._field_oc))._field_sc, &((*(_76132_m))._field_Except));
						_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1a8866207_indent((*(_self_))._field_oc);
						_1a8793299_writeUseExpr(_self_, &((*(_76132_m))._field_Func), _79221_stmt.cast_ptr<_1c0d80352_Data>(&__jule_any_type24));
						_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1a8866009_doneIndent((*(_self_))._field_oc);
						_1a8866207_indent((*(_self_))._field_oc);
						_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1abd84568:;
					{
						_1a8784e06_scope((*((*(_self_))._field_oc))._field_sc, (*(_76132_m))._field_Except);
					}
				}
				_match_end_1abd84513:;
			};
			if (_78717_forwarded) {
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1a879a867_initExpr(_self_, (*((*(_76132_m))._field_Func))._field_Result);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1a8866009_doneIndent((*(_self_))._field_oc);
	} else {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1a8867d0d_locInfo((*(_self_))._field_oc, &((*(_76132_m))._field_Token));
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1c0c71a29_IsVoid((*((*(_76132_m))._field_Func))._field_Decl.ptr())))) {
			_1a8866207_indent((*(_self_))._field_oc);
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1a8866009_doneIndent((*(_self_))._field_oc);
	};
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a879380a_slice(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c65c1b_SliceExprModel> _83229_m) {
	if (((*(_83229_m))._field_Elems.len() == 0LL)) {
		_1a8865b0d_write((*(_self_))._field_oc, _1a88776be_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_83229_m))._field_ElemKind));
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1a8865b0d_write((*(_self_))._field_oc, _1a88776be_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_83229_m))._field_ElemKind));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("::make({", 8));
	_1a8791c6a_models(_self_, (*(_83229_m))._field_Elems);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a8793ab3_indexing(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c661c2_IndexingExprModel> _84432_m) {
	_1a87912db_possibleRefExpr(_self_, (*((*(_84432_m))._field_Expr))._field_Model);
	{
		
		if (_21a9586a5_Production || (_1c0db3187_Ptr((*((*(_84432_m))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1c0db470a_Map((*((*(_84432_m))._field_Expr))._field_Kind.ptr()) != nullptr) || _1a879c76a_isExprComesFromBind(&((*(_84432_m))._field_Expr))) {
			_case_begin_1abd95a63:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1a87912db_possibleRefExpr(_self_, (*((*(_84432_m))._field_Index))._field_Model);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1abd964d1:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1a8867d0d_locInfo((*(_self_))._field_oc, &((*(_84432_m))._field_Token));
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1a87912db_possibleRefExpr(_self_, (*((*(_84432_m))._field_Index))._field_Model);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1abd9646a:;
	};
}



inline void _1a8793d6b_unsafeIndexing(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0eaed11_UnsafeIndexingExprModel> _86438_m) {
	_1a87912db_possibleRefExpr(_self_, (*((*((*(_86438_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_21a9586a5_Production || (_1c0db3187_Ptr((*((*((*(_86438_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr) || (_1c0db470a_Map((*((*((*(_86438_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd9b98c:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1a87912db_possibleRefExpr(_self_, (*((*((*(_86438_m))._field_Node))._field_Index))._field_Model);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1abd9c5a3:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".__at(", 6));
				_1a87912db_possibleRefExpr(_self_, (*((*((*(_86438_m))._field_Node))._field_Index))._field_Model);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1abd9c53c:;
	};
}



inline void _1a8794124_anonFunc(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6659b_AnonFnExprModel> _88132_m) {
	_1a8865b0d_write((*(_self_))._field_oc, _1a887a46e_func((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_88132_m))._field_Func));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("([=]", 4));
	_1a886d165_paramsIns((*(_self_))._field_oc, &((*((*(_88132_m))._field_Func))._field_Params));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" mutable -> ", 12));
	_1a8879cdc_funcInsResult((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*(_88132_m))._field_Func));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1a87851ae_funcScope((*((*(_self_))._field_oc))._field_sc, (*(_88132_m))._field_Func);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a87943cc_mapExpr(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c66e2b_MapExprModel> _89231_m) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_89231_m))._field_KeyKind));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_89231_m))._field_ValKind));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(">({", 3));
	if (((*(_89231_m))._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*(_89231_m))._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abdb05e9:;
			if (it != expr_end) {
				jule::I64 _89918_i = it - expr->begin();
				jule::Ptr<_1c0c66975_KeyValPairExprModel> _89925_pair = *it;
				{
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
					_1a87912db_possibleRefExpr(_self_, (*(_89925_pair))._field_Key);
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					_1a87912db_possibleRefExpr(_self_, (*(_89925_pair))._field_Val);
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					if ((((*(_89231_m))._field_Entries.len() - _89918_i) > 1LL)) {
						_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1abdb05e9:;
				++it;
				_89918_i++;
				goto _iter_begin_1abdb05e9;
			}
			_iter_end_1abdb05e9:;
		};
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a8794685_slicing(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c674ae_SlicingExprModel> _91331_m) {
	_1a87912db_possibleRefExpr(_self_, (*(_91331_m))._field_Expr);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_21a9586a5_Production))) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a8867d0d_locInfo((*(_self_))._field_oc, &((*(_91331_m))._field_Token));
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a87912db_possibleRefExpr(_self_, (*(_91331_m))._field_Left);
	if (((*(_91331_m))._field_Right != nullptr)) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a87912db_possibleRefExpr(_self_, (*(_91331_m))._field_Right);
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a879493d_traitSub(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c67a42_TraitSubIdentExprModel> _92932_m) {
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a2be3_traitDecl((*(_92932_m))._field_Trt));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("[(", 2));
	_1a87912db_possibleRefExpr(_self_, (*(_92932_m))._field_Expr);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(").type_offset].", 15));
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a2660_func(&((*(_92932_m))._field_Method)));
}



inline void _1a8794be6_structureSub(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c683d3_StructSubIdentExprModel> _93836_m) {
	_1a87912db_possibleRefExpr(_self_, (*((*(_93836_m))._field_Expr))._field_Model);
	if (((*(_93836_m))._field_Field == nullptr)) {
		return;;
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a3809_field(&((*((*(_93836_m))._field_Field))._field_Decl)));
}



inline void _1a8794e9e_array(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c68c63_ArrayExprModel> _94729_m) {
	_1a8865b0d_write((*(_self_))._field_oc, _1a8878ea6_array((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_94729_m))._field_Kind));
	if (((*(_94729_m))._field_Elems.len() == 0LL)) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*(_94729_m))._field_Elems.len() == 2LL) && ((*(_94729_m))._field_Elems[1LL] == nullptr))) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a87912db_possibleRefExpr(_self_, (*(_94729_m))._field_Elems[0LL]);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("({", 2));
	_1a8791c6a_models(_self_, (*(_94729_m))._field_Elems);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1a8795257_funcInsCommon(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c744aa_FnIns> _97037_m) {
	_1a8865b0d_write((*(_self_))._field_oc, _1a887a46e_func((*((*(_self_))._field_oc))._field_tc.ptr(), _97037_m));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a8795510_funcIns(_self_, _97037_m);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a8795510_funcIns(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c744aa_FnIns> _97731_m) {
	if ((((*(_97731_m))._field_Decl != nullptr) && (*((*(_97731_m))._field_Decl))._field_Binded)) {
		jule::Ptr<_1c0c39e10_Directive> _97913_d = _1a88822de_findDirective(&((*((*(_97731_m))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_97913_d != nullptr)) {
			_1a8865b0d_write((*(_self_))._field_oc, _1a88726ec_concatAllParts((*(_97913_d))._field_Args));
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a2929_funcIns(&(_97731_m)));
}



inline void _1a87957b8_tuple(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c69060_TupleExprModel> _98829_m) {
	{
		auto expr = &((*(_98829_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abdc9ee8:;
		if (it != expr_end) {
			jule::I64 _98914_i = it - expr->begin();
			jule::Ptr<_1c0d80352_Data> _98921_d = *it;
			{
				_1a87912db_possibleRefExpr(_self_, (*(_98921_d))._field_Model);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
				if ((((*(_98829_m))._field_Datas.len() - _98914_i) > 1LL)) {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1a8866207_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1abdc9ee8:;
			++it;
			_98914_i++;
			goto _iter_begin_1abdc9ee8;
		}
		_iter_end_1abdc9ee8:;
	};
}



inline void _1a8795a71_newCall(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c69bdc_BuiltinNewCallExprModel> _99931_m) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_99931_m))._field_Kind));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*(_99931_m))._field_Init != nullptr)) {
		_1a87912db_possibleRefExpr(_self_, (*(_99931_m))._field_Init);
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a8795d29_outCall(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c69439_BuiltinOutCallExprModel> _100931_m) {
	if (((*(_100931_m))._field_Debug && _21a9586a5_Production)) {
		return;;
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1a87912db_possibleRefExpr(_self_, (*(_100931_m))._field_Expr);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a87960d2_outlnCall(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c69813_BuiltinOutlnCallExprModel> _101833_m) {
	if (((*(_101833_m))._field_Debug && _21a9586a5_Production)) {
		return;;
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1a87912db_possibleRefExpr(_self_, (*(_101833_m))._field_Expr);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a879638a_panicCall(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6a0b6_BuiltinPanicCallExprModel> _102733_m) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1a87912db_possibleRefExpr(_self_, (*(_102733_m))._field_Expr);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1a8867d0d_locInfo((*(_self_))._field_oc, &((*(_102733_m))._field_Token));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a8796643_assertCall(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6a56c_BuiltinAssertCallExprModel> _103534_m) {
	if (_21a9586a5_Production) {
		return;;
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1a87912db_possibleRefExpr(_self_, (*(_103534_m))._field_Expr);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1a879b659_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), (*(_103534_m))._field_Log);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1a8867d0d_locInfo((*(_self_))._field_oc, &((*(_103534_m))._field_Token));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a87968eb_errorCall(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6c173_BuiltinErrorCallExprModel> _104833_m) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1c0c71a29_IsVoid((*((*(_104833_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_104833_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1abddb878:;
				{
					jule::Ptr<_1c0d2b94c_Var> _105317_v = (*((*(_104833_m))._field_Err))._field_Model.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8);;
					if ((*(_105317_v))._field_Ident.equal("error", 5)) {
						_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1abddb823:;
		};
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1a8880573_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), &((*((*(_104833_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_104833_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1abde0b9b:;
				{
					jule::Ptr<_1c0d2b94c_Var> _106517_v = (*((*(_104833_m))._field_Err))._field_Model.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8);;
					if ((*(_106517_v))._field_Ident.equal("error", 5)) {
						_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1abde0b46:;
		};
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(", 12));
	};
	_1a87912db_possibleRefExpr(_self_, (*((*(_104833_m))._field_Err))._field_Model);
	jule::I64 _10749_i = _1a8866889_pushAnyType((*(_self_))._field_oc, (*((*(_104833_m))._field_Err))._field_Kind);;
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1a8865b0d_write((*(_self_))._field_oc, _203634387_Itoa(_10749_i));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a8796ba4_copyCall(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6bc99_BuiltinCopyCallExprModel> _108032_m) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::copy((", 12));
	_1a87912db_possibleRefExpr(_self_, (*((*(_108032_m))._field_Dest))._field_Model);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_1c0db2b6a_Prim((*((*(_108032_m))._field_Dest))._field_Kind.ptr()) != nullptr)) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", (", 3));
	_1a87912db_possibleRefExpr(_self_, (*((*(_108032_m))._field_Src))._field_Model);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_1c0db2b6a_Prim((*((*(_108032_m))._field_Src))._field_Kind.ptr()) != nullptr)) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a8796e5c_lenCall(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6b1e9_BuiltinLenCallExprModel> _109631_m) {
	_1a87912db_possibleRefExpr(_self_, (*((*(_109631_m))._field_Expr))._field_Model);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1a8797215_capCall(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6b4e6_BuiltinCapCallExprModel> _110131_m) {
	_1a87912db_possibleRefExpr(_self_, (*((*(_110131_m))._field_Expr))._field_Model);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1a87974bd_deleteCall(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6b8c0_BuiltinDeleteCallExprModel> _110634_m) {
	_1a87912db_possibleRefExpr(_self_, (*((*(_110634_m))._field_Dest))._field_Model);
	if (((*(_110634_m))._field_Key != nullptr)) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".del(", 5));
		_1a87912db_possibleRefExpr(_self_, (*((*(_110634_m))._field_Key))._field_Model);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1a8797776_makeCallSlice(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6aa23_BuiltinMakeCallExprModel>* _111738_m) {
	jule::Ptr<_1c0dbc5e2_Slc> _111813_slice = _1c0db3bc1_Slc((*((*(_111738_m))))._field_Kind.ptr());;
	_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_111738_m))))._field_Kind));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a87912db_possibleRefExpr(_self_, (*((*(_111738_m))))._field_Len);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_111738_m))))._field_Cap != nullptr)) {
		_1a87912db_possibleRefExpr(_self_, (*((*(_111738_m))))._field_Cap);
	} else {
		_1a87912db_possibleRefExpr(_self_, (*((*(_111738_m))))._field_Len);
	};
	if (_1a8882971_shouldInitialized(&((*(_111813_slice))._field_Elem))) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a879a867_initExpr(_self_, (*(_111813_slice))._field_Elem);
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a8797a2e_makeCallStr(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6aa23_BuiltinMakeCallExprModel>* _113536_m) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a87912db_possibleRefExpr(_self_, (*((*(_113536_m))))._field_Len);
	if (((*((*(_113536_m))))._field_Cap != nullptr)) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a87912db_possibleRefExpr(_self_, (*((*(_113536_m))))._field_Cap);
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a8797cd7_makeCall(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6aa23_BuiltinMakeCallExprModel> _114632_m) {
	if ((_1c0db3bc1_Slc((*(_114632_m))._field_Kind.ptr()) != nullptr)) {
		_1a8797776_makeCallSlice(_self_, &(_114632_m));
		return;;
	};
	_1a8797a2e_makeCallStr(_self_, &(_114632_m));
}



inline void _1a8798090_pushToSlice(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0eb0240_PushToSliceExprModel> _115435_m) {
	;
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1a8865b0d_write((*(_self_))._field_oc, _1a88776be_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), (*((*(_115435_m))._field_Elems))._field_ElemKind));
	jule::Bool _116213_ptr = false;;
	{
		auto &_match_expr{ (*(_115435_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1abe0b018:;
			{
				jule::Ptr<_1c0c63c3b_UnaryExprModel> _116617_u = (*(_115435_m))._field_Dest.cast_ptr<_1c0c63c3b_UnaryExprModel>(&__jule_any_type110);;
				if ((_1c0db3187_Ptr((*((*(_116617_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1a87912db_possibleRefExpr(_self_, (*((*(_116617_u))._field_Expr))._field_Model);
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_116213_ptr=true;
					goto _match_end_1abe0cc95;
				};
				goto _case_begin_1abe0ccea;
			}
		}
		else {
			_case_begin_1abe0ccea:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1a87912db_possibleRefExpr(_self_, (*(_115435_m))._field_Dest);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1abe0cc95:;
	};
	if (((*((*(_115435_m))._field_Elems))._field_Elems.len() == 1LL)) {
		if (_116213_ptr) {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1a87912db_possibleRefExpr(_self_, (*((*(_115435_m))._field_Elems))._field_Elems[0LL]);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_116213_ptr) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1a8865b0d_write((*(_self_))._field_oc, _203634387_Itoa(static_cast<jule::I64>((*((*(_115435_m))._field_Elems))._field_Elems.len())));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*((*(_115435_m))._field_Elems))._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe158c4:;
		if (it != expr_end) {
			jule::Any _120021_e = *it;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_116213_ptr) {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1a87912db_possibleRefExpr(_self_, _120021_e);
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1abe158c4:;
			++it;
			goto _iter_begin_1abe158c4;
		}
		_iter_end_1abe158c4:;
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a8798348_appendToSlice(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0eb0619_AppendToSliceExprModel> _121437_m) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a87912db_possibleRefExpr(_self_, (*(_121437_m))._field_Dest);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1a87912db_possibleRefExpr(_self_, (*(_121437_m))._field_Slice);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1a8798601_appendCall(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6adec_BuiltinAppendCallExprModel> _122234_m) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1a87912db_possibleRefExpr(_self_, (*(_122234_m))._field_Dest);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1a87912db_possibleRefExpr(_self_, (*(_122234_m))._field_Elements);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a87988a9_sizeof(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c67c2e_SizeofExprModel> _123030_m) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1a87912db_possibleRefExpr(_self_, (*(_123030_m))._field_Expr);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a8798b62_alignof(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6c89e_AlignofExprModel> _123631_m) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1a87912db_possibleRefExpr(_self_, (*(_123631_m))._field_Expr);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a8798e1a_runeLit(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6cb9b_RuneExprModel> _124227_m) {
	if (((*(_124227_m))._field_Code <= 127LL)) {
		_21cd680bd_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\'');
		jule::Str _124517_b = _1a879b03d_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>((*(_124227_m))._field_Code)));;
		if (_124517_b.equal("'", 1)) {
			_21cd680bd_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\\');
		};
		_21cd67d15_WriteStr(&(*((*(_self_))._field_oc))._field_Obj, _124517_b);
		_21cd680bd_WriteByte(&(*((*(_self_))._field_oc))._field_Obj, '\'');
		return;;
	};
	_1a879bcdb_itoa(&((*((*(_self_))._field_oc))._field_Obj), static_cast<jule::I64>(static_cast<jule::I64>((*(_124227_m))._field_Code)));
}



inline void _1a87991c3_structureStatic(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c68889_StructStaticIdentExprModel> _125639_m) {
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a2929_funcIns(&((*(_125639_m))._field_Method)));
}



inline void _1a879947b_integratedToStr(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6ce98_IntegratedToStrExprModel> _126039_m) {
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1a87912db_possibleRefExpr(_self_, (*(_126039_m))._field_Expr);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a8799734_backendEmit(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6d372_BackendEmitExprModel> _126635_m) {
	if (((*(_126635_m))._field_Exprs.len() == 0LL)) {
		_1a8865b0d_write((*(_self_))._field_oc, (*(_126635_m))._field_Code);
		return;;
	};
	jule::I64 _12719_n = _21cd68a91_Len(&(*((*(_self_))._field_oc))._field_Obj);;
	jule::Slice<jule::Any> _127213_args = jule::Slice<jule::Any>::alloc((*(_126635_m))._field_Exprs.len(), (*(_126635_m))._field_Exprs.len());;
	{
		auto expr = &((*(_126635_m))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe28332:;
		if (it != expr_end) {
			jule::I64 _127314_i = it - expr->begin();
			jule::Any _127321_expr = *it;
			{
				_1a87912db_possibleRefExpr(_self_, _127321_expr);
				jule::Slice<jule::U8> _127517_buf = _21cd690ad_Buf(&(*((*(_self_))._field_oc))._field_Obj);;
				_127213_args[_127314_i]=jule::Any(static_cast<jule::Str>(_127517_buf.slice(_12719_n)), &__jule_any_type4);
				{
					_21cd69366_SetBuf(&(*((*(_self_))._field_oc))._field_Obj, _127517_buf.slice(0LL, _12719_n));
				};
			}
			_iter_next_1abe28332:;
			++it;
			_127314_i++;
			goto _iter_begin_1abe28332;
		}
		_iter_end_1abe28332:;
	};
	_1a8865b0d_write((*(_self_))._field_oc, _1c0e9a36d_Format((*(_126635_m))._field_Code, _127213_args));
}



inline void _1a87999dc_free(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0c6d66e_FreeExprModel> _128228_m) {
	_1a87912db_possibleRefExpr(_self_, (*(_128228_m))._field_Expr);
	if (_21a958012_RC) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1a8799c95_strComp(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0eae184_StrCompExprModel> _129131_m) {
	if ((*(_129131_m))._field_NotEq) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _12959_s = _203646773_ReadStr((*(_129131_m))._field_Right.ptr());;
	_1a87912db_possibleRefExpr(_self_, (*(_129131_m))._field_Left);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1a879b659_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), _12959_s);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a8865b0d_write((*(_self_))._field_oc, _203634387_Itoa(static_cast<jule::I64>(_12959_s.len())));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*(_129131_m))._field_NotEq) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1a879a04d_inlineStdInternalNosafeStobs(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0eb0916_InlineStdInternalNosafeStobs> _130752_m) {
	_1a87912db_possibleRefExpr(_self_, (*(_130752_m))._field_Str);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
}



inline void _1a879a306_emptyCompare(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0ead859_EmptyCompareExprModel> _131236_m) {
	if ((*(_131236_m))._field_Neg) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a87912db_possibleRefExpr(_self_, (*(_131236_m))._field_Expr);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1a879a5ae_model(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Any _132129_m) {
	{
		auto &_match_expr{ _132129_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1abe37aa0:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, _132129_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1abe3753e:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _132129_m.cast_ptr<_1c0db0519_TypeKind>(&__jule_any_type83)));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1abe3774d:;
			{
				_1a87898bc_constant(_self_, _132129_m.cast_ptr<_2036445ea_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1abe377b4:;
			{
				_1a878a604_var(_self_, _132129_m.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1abe3782a:;
			{
				_1a878a8ac_structureIns(_self_, _132129_m.cast_ptr<_1c0c5e3c9_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1abe37891:;
			{
				_1a8795257_funcInsCommon(_self_, _132129_m.cast_ptr<_1c0c744aa_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1abe385b7:;
			{
				_1a878a093_unsafeBinary(_self_, (*(_132129_m.cast_ptr<_1c0eaea14_UnsafeBinopExprModel>(&__jule_any_type126)))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1abe3862d:;
			{
				_1a878a34b_binary(_self_, _132129_m.cast_ptr<_1c0c63862_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1abe386a5:;
			{
				_1a878ab65_unary(_self_, _132129_m.cast_ptr<_1c0c63c3b_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1abe3872c:;
			{
				_1a878ae1d_structureLit(_self_, _132129_m.cast_ptr<_1c0c64610_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1abe387a4:;
			{
				_1a8791088_allocStructure(_self_, _132129_m.cast_ptr<_1c0c6490c_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1abe3882b:;
			{
				_1a87919b2_casting(_self_, _132129_m.cast_ptr<_1c0c64e90_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1abe388a3:;
			{
				_1a8793552_funcCall(_self_, _132129_m.cast_ptr<_1c0c65842_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1abe3892a:;
			{
				_1a879380a_slice(_self_, _132129_m.cast_ptr<_1c0c65c1b_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1abe389a2:;
			{
				_1a8794e9e_array(_self_, _132129_m.cast_ptr<_1c0c68c63_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1abe38a29:;
			{
				_1a8793d6b_unsafeIndexing(_self_, _132129_m.cast_ptr<_1c0eaed11_UnsafeIndexingExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1abe38aa1:;
			{
				_1a8793ab3_indexing(_self_, _132129_m.cast_ptr<_1c0c661c2_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1abe38b28:;
			{
				_1a8794124_anonFunc(_self_, _132129_m.cast_ptr<_1c0c6659b_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1abe38ba0:;
			{
				_1a87943cc_mapExpr(_self_, _132129_m.cast_ptr<_1c0c66e2b_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1abe38c27:;
			{
				_1a8794685_slicing(_self_, _132129_m.cast_ptr<_1c0c674ae_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1abe38c9e:;
			{
				_1a879493d_traitSub(_self_, _132129_m.cast_ptr<_1c0c67a42_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1abe38d26:;
			{
				_1a8794be6_structureSub(_self_, _132129_m.cast_ptr<_1c0c683d3_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1abe38d9d:;
			{
				_1a87957b8_tuple(_self_, _132129_m.cast_ptr<_1c0c69060_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1abe38e25:;
			{
				_1a8795d29_outCall(_self_, _132129_m.cast_ptr<_1c0c69439_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1abe38e9c:;
			{
				_1a87960d2_outlnCall(_self_, _132129_m.cast_ptr<_1c0c69813_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1abe39024:;
			{
				_1a8795a71_newCall(_self_, _132129_m.cast_ptr<_1c0c69bdc_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1abe3909b:;
			{
				_1a879638a_panicCall(_self_, _132129_m.cast_ptr<_1c0c6a0b6_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1abe39123:;
			{
				_1a8796643_assertCall(_self_, _132129_m.cast_ptr<_1c0c6a56c_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1abe3919a:;
			{
				_1a87968eb_errorCall(_self_, _132129_m.cast_ptr<_1c0c6c173_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1abe39222:;
			{
				_1a8797cd7_makeCall(_self_, _132129_m.cast_ptr<_1c0c6aa23_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1abe39299:;
			{
				_1a8798601_appendCall(_self_, _132129_m.cast_ptr<_1c0c6adec_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1abe39321:;
			{
				_1a8796ba4_copyCall(_self_, _132129_m.cast_ptr<_1c0c6bc99_BuiltinCopyCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1abe39398:;
			{
				_1a8796e5c_lenCall(_self_, _132129_m.cast_ptr<_1c0c6b1e9_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1abe39420:;
			{
				_1a8797215_capCall(_self_, _132129_m.cast_ptr<_1c0c6b4e6_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1abe39497:;
			{
				_1a87974bd_deleteCall(_self_, _132129_m.cast_ptr<_1c0c6b8c0_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1abe3951e:;
			{
				_1a87988a9_sizeof(_self_, _132129_m.cast_ptr<_1c0c67c2e_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1abe39596:;
			{
				_1a8798b62_alignof(_self_, _132129_m.cast_ptr<_1c0c6c89e_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1abe3961d:;
			{
				_1a8798e1a_runeLit(_self_, _132129_m.cast_ptr<_1c0c6cb9b_RuneExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1abe39695:;
			{
				_1a87991c3_structureStatic(_self_, _132129_m.cast_ptr<_1c0c68889_StructStaticIdentExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1abe3971c:;
			{
				_1a879947b_integratedToStr(_self_, _132129_m.cast_ptr<_1c0c6ce98_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1abe39794:;
			{
				_1a8799734_backendEmit(_self_, _132129_m.cast_ptr<_1c0c6d372_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1abe3981b:;
			{
				_1a87999dc_free(_self_, _132129_m.cast_ptr<_1c0c6d66e_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1abe39893:;
			{
				_1a8799c95_strComp(_self_, _132129_m.cast_ptr<_1c0eae184_StrCompExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1abe3991a:;
			{
				_1a879a04d_inlineStdInternalNosafeStobs(_self_, _132129_m.cast_ptr<_1c0eb0916_InlineStdInternalNosafeStobs>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1abe39992:;
			{
				_1a878a604_var(_self_, (*(_132129_m.cast_ptr<_1c0eadb56_RefExprModel>(&__jule_any_type127)))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1abe39a19:;
			{
				_1a879a306_emptyCompare(_self_, _132129_m.cast_ptr<_1c0ead859_EmptyCompareExprModel>(&__jule_any_type124));
			}
		}
		else {
			_case_begin_1abe376d7:;
			{
				_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1abe37682:;
	};
}



inline void _1a879a867_initExpr(jule::Ptr<_1a878813a_exprCoder> _self_, jule::Ptr<_1c0db0519_TypeKind> _142032_t) {
	if (_1c0db23b7_NilCompatible(_142032_t.ptr())) {
		if ((_1c0db3187_Ptr(_142032_t.ptr()) != nullptr)) {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _142032_t));
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1c0dbd1d6_Tuple> _143013_tup = _1c0db4991_Tup(_142032_t.ptr());;
	if ((_143013_tup != nullptr)) {
		_1a887ed9c_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Obj), _143013_tup);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*(_143013_tup))._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abe5676c:;
			if (it != expr_end) {
				jule::I64 _143418_i = it - expr->begin();
				jule::Ptr<_1c0db0519_TypeKind> _143425_tt = *it;
				{
					if ((!(_1a8882971_shouldInitialized(&(_143425_tt))))) {
						goto _iter_next_1abe5676c;
					};
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1a8865b0d_write((*(_self_))._field_oc, _203634387_Itoa(_143418_i));
					_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1a879a867_initExpr(_self_, _143425_tt);
					if ((((*(_143013_tup))._field_Types.len() - _143418_i) > 1LL)) {
						_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1abe5676c:;
				++it;
				_143418_i++;
				goto _iter_begin_1abe5676c;
			}
			_iter_end_1abe5676c:;
		};
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1c0c8704a_Enum> _144913_enm = _1c0db341d_Enum(_142032_t.ptr());;
	if ((_144913_enm != nullptr)) {
		_1a879a5ae_model(_self_, (*((*((*((*(_144913_enm))._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1c0db80e3_Prim> _14549_prim = _1c0db2b6a_Prim(_142032_t.ptr());;
	if ((_14549_prim != nullptr)) {
		if (_203644122_IsNum((*(_14549_prim))._field_Kind)) {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1c0dbb2e4_IsBool(_14549_prim.ptr())) {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1c0dbb57a_IsStr(_14549_prim.ptr())) {
			_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1c0db393a_Arr(_142032_t.ptr()) != nullptr)) {
		jule::Ptr<_1c0dbe913_Arr> _146617_arr = _1c0db393a_Arr(_142032_t.ptr());;
		_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _142032_t));
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a879a867_initExpr(_self_, (*(_146617_arr))._field_Elem);
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1c0c5e3c9_StructIns> _147313_s = _1c0db41dd_Struct(_142032_t.ptr());;
	if ((((_147313_s != nullptr) && (*((*(_147313_s))._field_Decl))._field_Binded) && (_1a88822de_findDirective(&((*((*(_147313_s))._field_Decl))._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _142032_t));
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1a8865b0d_write((*(_self_))._field_oc, _1a887a7b0_kind((*((*(_self_))._field_oc))._field_tc.ptr(), _142032_t));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1a878813a_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a879d8d1_TestCoder> static__1a879dd21_New(jule::Ptr<_1a8865459_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1a879d8d1_TestCoder>(_1a879d8d1_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_1c0cd353b_ImportInfo> _1a879e0a7_findTestingPackage(jule::Ptr<_1a879d8d1_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe66491:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _3521_imp = *it;
			{
				if ((*(_3521_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_1abe66491:;
			++it;
			goto _iter_begin_1abe66491;
		}
		_iter_end_1abe66491:;
	};
	return nullptr;;
}



inline void _1a879e360_appendTest(jule::Ptr<_1a879d8d1_TestCoder> _self_, jule::Ptr<_1c0c744aa_FnIns> _4334_f) {
	_1a8866207_indent((*(_self_))._field_oc);
	_1a879ea9c_callTmReset(_self_);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1a879b659_cstrLit(&((*((*(_self_))._field_oc))._field_Obj), (*((*(_4334_f))._field_Decl))._field_Ident);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a2929_funcIns(&(_4334_f)));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1a879e618_appendPackageTests(jule::Ptr<_1a879d8d1_TestCoder> _self_, jule::Ptr<_1c0cd6462_Package>* _5843_p) {
	{
		auto expr = &((*((*(_5843_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe6cdd2:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _5921_file = *it;
			{
				{
					auto expr = &((*(_5921_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abe6d82d:;
					if (it != expr_end) {
						jule::Ptr<_1c0c715a6_Fn> _6025_f = *it;
						{
							if (_1a88826a7_hasDirective(&((*(_6025_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1a879e360_appendTest(_self_, (*(_6025_f))._field_Instances[0LL]);
							};
						}
						_iter_next_1abe6d82d:;
						++it;
						goto _iter_begin_1abe6d82d;
					}
					_iter_end_1abe6d82d:;
				};
			}
			_iter_next_1abe6cdd2:;
			++it;
			goto _iter_begin_1abe6cdd2;
		}
		_iter_end_1abe6cdd2:;
	};
}



inline jule::Bool _1a879e89e_readyTestingPackage(jule::Ptr<_1a879d8d1_TestCoder> _self_) {
	jule::Ptr<_1c0cd353b_ImportInfo> _6913_p = _1a879e0a7_findTestingPackage(_self_);;
	if ((_6913_p == nullptr)) {
		return false;;
	};
	(*(_self_))._field_t=(*(_1c0cd4718_FindStruct(_6913_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*(_self_))._field_tmReset=_1c0c60441_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*(_self_))._field_tmFailed=_1c0c60441_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Failed", 6), false);
	(*(_self_))._field_tmSkipped=_1c0c60441_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1a879ea9c_callTmReset(jule::Ptr<_1a879d8d1_TestCoder> _self_) {
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a2660_func(&((*(_self_))._field_tmReset)));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a879ec9a_callTmFailed(jule::Ptr<_1a879d8d1_TestCoder> _self_) {
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a2660_func(&((*(_self_))._field_tmFailed)));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a879ee98_callTmSkipped(jule::Ptr<_1a879d8d1_TestCoder> _self_) {
	_1a8865b0d_write((*(_self_))._field_oc, static__1a87a2660_func(&((*(_self_))._field_tmSkipped)));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a87a0196_Serialize(jule::Ptr<_1a879d8d1_TestCoder> _self_) {
	_1a8871d06_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1a8871b08_end((*(_self_))._field_oc);
	});;
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1a8865d0b_addIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	if ((!(_1a879e89e_readyTestingPackage(_self_)))) {
		_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1a8866009_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_1a8865b0d_write((*(_self_))._field_oc, _1a8876569_asSptr((*((*(_self_))._field_oc))._field_tc.ptr(), _1a8878b65_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_self_))._field_t)));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1a8865b0d_write((*(_self_))._field_oc, _1a8878b65_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), (*(_self_))._field_t));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1a8865d0b_addIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1a879ec9a_callTmFailed(_self_);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1a879ee98_callTmSkipped(_self_);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1a8866009_doneIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1a879e618_appendPackageTests(_self_, &((*((*((*(_self_))._field_oc))._field_ir))._field_Main));
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1a8866009_doneIndent((*(_self_))._field_oc);
	_1a8866207_indent((*(_self_))._field_oc);
	_1a8865b0d_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1a879d8d1_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1a87a1ae3_writeIdentTo(_21cd5e16e_StrBuilder* _3333_buf, jule::Str* _3351_ident) {
	{
		auto expr = _3351_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe886b1:;
		if (it != expr_end) {
			jule::U8 *_3416_b = it;
			{
				if (((*(_3416_b)) >= 128LLU)) {
					goto _julec_label_1abe88a02;
				};
			}
			_iter_next_1abe886b1:;
			++it;
			goto _iter_begin_1abe886b1;
		}
		_iter_end_1abe886b1:;
	};
	_21cd67d15_WriteStr(_3333_buf, (*(_3351_ident)));
	return;;
	_julec_label_1abe88a02:;
	{
		auto expr = static_cast<jule::Slice<jule::I32>>((*(_3351_ident)));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1abe89a69:;
		if (it != expr_end) {
			jule::I32 _4416_r = *it;
			{
				if ((_4416_r < 128LL)) {
					_21cd680bd_WriteByte(_3333_buf, static_cast<jule::U8>(static_cast<jule::U8>(_4416_r)));
					goto _iter_next_1abe89a69;
				};
				_21cd67d15_WriteStr(_3333_buf, _2036340bd_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_4416_r)), 15LL));
			}
			_iter_next_1abe89a69:;
			++it;
			goto _iter_begin_1abe89a69;
		}
		_iter_end_1abe89a69:;
	};
}



inline jule::Str static__1a87a1e67_toOut(jule::Str* _6122_ident, jule::Uintptr _6134_addr) {
	if ((_6134_addr != 0LLU)) {
		_21cd5e16e_StrBuilder _6317_obj = static__21cd5e48d_New(40LL);;
		_21cd680bd_WriteByte(&_6317_obj, '_');
		_21cd67d15_WriteStr(&_6317_obj, _203633c05_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_6134_addr)), 15LL));
		_21cd680bd_WriteByte(&_6317_obj, '_');
		static__1a87a1ae3_writeIdentTo(&(_6317_obj), _6122_ident);
		return _21cd6860c_Str(&_6317_obj);;
	};
	_21cd5e16e_StrBuilder _7013_obj = static__21cd5e48d_New(static_cast<jule::I64>(((*(_6122_ident)).len() + 1LL)));;
	_21cd680bd_WriteByte(&_7013_obj, '_');
	static__1a87a1ae3_writeIdentTo(&(_7013_obj), _6122_ident);
	return _21cd6860c_Str(&_7013_obj);;
}



inline jule::Str static__1a87a2396_toLocal(jule::I64 _8223_row, jule::I64 _8233_col, jule::Str* _8244_ident) {
	_21cd5e16e_StrBuilder _8313_obj = static__21cd5e48d_New(40LL);;
	_21cd680bd_WriteByte(&_8313_obj, '_');
	_21cd67d15_WriteStr(&_8313_obj, _203634387_Itoa(_8223_row));
	_21cd67d15_WriteStr(&_8313_obj, _203634387_Itoa(_8233_col));
	_21cd680bd_WriteByte(&_8313_obj, '_');
	static__1a87a1ae3_writeIdentTo(&(_8313_obj), _8244_ident);
	return _21cd6860c_Str(&_8313_obj);;
}



inline jule::Str static__1a87a2660_func(jule::Ptr<_1c0c715a6_Fn>* _9321_f) {
	{
		
		if ((*((*(_9321_f))))._field_Binded) {
			_case_begin_1abe9118b:;
			{
				return (*((*(_9321_f))))._field_Ident;;
			}
		}
		else if ((*((*(_9321_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1abe908e9:;
			{
				return jule::Str::lit("entry_point", 11);;
			}
		}
		else if (_1c0c71cb0_IsMethod((*(_9321_f)).ptr())) {
			_case_begin_1abe90960:;
			{
				jule::Str _10017_obj = static__1a87a1e67_toOut(&((*((*(_9321_f))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_9321_f)))));;
				if ((*((*(_9321_f))))._field_Statically) {
					_10017_obj=(jule::Str::lit("static_", 7) + _10017_obj);
					return _10017_obj;;
				};
				return _10017_obj;;
			}
		}
		else {
			_case_begin_1abe90883:;
			{
				return static__1a87a1e67_toOut(&((*((*(_9321_f))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_9321_f)))));;
			}
		}
		_match_end_1abe8eb6d:;
	};
}



inline jule::Str static__1a87a2929_funcIns(jule::Ptr<_1c0c744aa_FnIns>* _11224_f) {
	if (_1c0c75940_IsBuiltin((*(_11224_f)).ptr())) {
		return (jule::Str::lit("jule::", 6) + (*((*((*(_11224_f))))._field_Decl))._field_Ident);;
	};
	if (((*((*((*(_11224_f))))._field_Decl))._field_Binded || ((*((*(_11224_f))))._field_Generics.len() == 0LL))) {
		return static__1a87a2660_func(&((*((*(_11224_f))))._field_Decl));;
	};
	return static__1a87a1e67_toOut(&((*((*((*(_11224_f))))._field_Decl))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11224_f)))));;
}



inline jule::Str static__1a87a2be3_traitDecl(jule::Ptr<_1c0c84850_Trait> _12525_t) {
	return static__1a87a1e67_toOut(&((*(_12525_t))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12525_t)));;
}



inline jule::Str static__1a87a2eac_param(jule::Ptr<_1c0c6ead2_Param>* _13022_p) {
	if ((_1c0c2812e_IsAnonIdent((*((*(_13022_p))))._field_Ident) || _1c0c27d65_IsIgnoreIdent((*((*(_13022_p))))._field_Ident))) {
		return jule::Str();;
	};
	if (_1c0c701ed_IsSelf((*(_13022_p)).ptr())) {
		return jule::Str::lit("_self_", 6);;
	};
	if (((*((*(_13022_p))))._field_Token == nullptr)) {
		return static__1a87a2396_toLocal(0LL, 0LL, &((*((*(_13022_p))))._field_Ident));;
	};
	return static__1a87a2396_toLocal((*((*((*(_13022_p))))._field_Token))._field_Row, (*((*((*(_13022_p))))._field_Token))._field_Column, &((*((*(_13022_p))))._field_Ident));;
}



inline jule::Str static__1a87a3276_structure(jule::Ptr<_1c0c5b64b_Struct>* _14426_s) {
	if ((*((*(_14426_s))))._field_Binded) {
		if (_1a88826a7_hasDirective(&((*((*(_14426_s))))._field_Directives), jule::Str::lit("typedef", 7))) {
			return (*((*(_14426_s))))._field_Ident;;
		};
		return (jule::Str::lit("struct ", 7) + (*((*(_14426_s))))._field_Ident);;
	};
	return static__1a87a1e67_toOut(&((*((*(_14426_s))))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_14426_s)))));;
}



inline jule::Str static__1a87a3540_structureIns(jule::Ptr<_1c0c5e3c9_StructIns>* _15529_s) {
	if (((*((*((*(_15529_s))))._field_Decl))._field_Binded || ((*((*(_15529_s))))._field_Generics.len() == 0LL))) {
		return static__1a87a3276_structure(&((*((*(_15529_s))))._field_Decl));;
	};
	return static__1a87a1e67_toOut(&((*((*((*(_15529_s))))._field_Decl))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_15529_s)))));;
}



inline jule::Str static__1a87a3809_field(jule::Ptr<_1c0c58758_Field>* _16322_f) {
	if ((*((*((*(_16322_f))))._field_Owner))._field_Binded) {
		return (*((*(_16322_f))))._field_Ident;;
	};
	_21cd5e16e_StrBuilder _16713_obj = static__21cd5e48d_New(static_cast<jule::I64>((7LL + (*((*(_16322_f))))._field_Ident.len())));;
	_21cd67d15_WriteStr(&_16713_obj, jule::Str::lit("_field_", 7));
	static__1a87a1ae3_writeIdentTo(&(_16713_obj), &((*((*(_16322_f))))._field_Ident));
	return _21cd6860c_Str(&_16713_obj);;
}



inline jule::Str static__1a87a3ac3_var(jule::Ptr<_1c0d2b94c_Var> _17423_v) {
	{
		
		if ((*(_17423_v))._field_Binded) {
			_case_begin_1abe9d2ca:;
			{
				return (*(_17423_v))._field_Ident;;
			}
		}
		else if ((*(_17423_v))._field_Ident.equal("error", 5)) {
			_case_begin_1abe9d341:;
			{
				return jule::Str::lit("except.error", 12);;
			}
		}
		else if ((*(_17423_v))._field_Ident.equal("self", 4)) {
			_case_begin_1abe9d3a7:;
			{
				return jule::Str::lit("_self_", 6);;
			}
		}
		else if (((*(_17423_v))._field_RetOrder == -1LL)) {
			_case_begin_1abe9d41d:;
			{
				return jule::Str::lit("__jule_func_result", 18);;
			}
		}
		else if (((*(_17423_v))._field_RetOrder >= 0LL)) {
			_case_begin_1abe9d6a4:;
			{
				return (jule::Str::lit("__jule_func_result.__jule_result_arg", 36) + _203634387_Itoa((*(_17423_v))._field_RetOrder));;
			}
		}
		else if (((*(_17423_v))._field_Scope != nullptr)) {
			_case_begin_1abe9d71a:;
			{
				return static__1a87a2396_toLocal((*((*(_17423_v))._field_Token))._field_Row, (*((*(_17423_v))._field_Token))._field_Column, &((*(_17423_v))._field_Ident));;
			}
		}
		else {
			_case_begin_1abe9d264:;
			{
				return static__1a87a1e67_toOut(&((*(_17423_v))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_17423_v)));;
			}
		}
		_match_end_1abe9ceab:;
	};
}



inline jule::Str static__1a87a3d8c_iterBegin(jule::Uintptr _19625_it) {
	_21cd5e16e_StrBuilder _19713_obj = static__21cd5e48d_New(30LL);;
	_21cd67d15_WriteStr(&_19713_obj, jule::Str::lit("_iter_begin_", 12));
	_21cd67d15_WriteStr(&_19713_obj, _203633c05_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19625_it)), 15LL));
	return _21cd6860c_Str(&_19713_obj);;
}



inline jule::Str static__1a87a4156_iterEnd(jule::Uintptr _20423_it) {
	_21cd5e16e_StrBuilder _20513_obj = static__21cd5e48d_New(30LL);;
	_21cd67d15_WriteStr(&_20513_obj, jule::Str::lit("_iter_end_", 10));
	_21cd67d15_WriteStr(&_20513_obj, _203633c05_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20423_it)), 15LL));
	return _21cd6860c_Str(&_20513_obj);;
}



inline jule::Str static__1a87a4420_iterNext(jule::Uintptr _21224_it) {
	_21cd5e16e_StrBuilder _21313_obj = static__21cd5e48d_New(30LL);;
	_21cd67d15_WriteStr(&_21313_obj, jule::Str::lit("_iter_next_", 11));
	_21cd67d15_WriteStr(&_21313_obj, _203633c05_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_21224_it)), 15LL));
	return _21cd6860c_Str(&_21313_obj);;
}



inline jule::Str static__1a87a46d9_label(jule::Uintptr _22021_u) {
	_21cd5e16e_StrBuilder _22113_obj = static__21cd5e48d_New(30LL);;
	_21cd67d15_WriteStr(&_22113_obj, jule::Str::lit("_julec_label_", 13));
	_21cd67d15_WriteStr(&_22113_obj, _203633c05_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_22021_u)), 15LL));
	return _21cd6860c_Str(&_22113_obj);;
}



inline jule::Str static__1a87a49a3_matchEnd(jule::Uintptr _22824_m) {
	_21cd5e16e_StrBuilder _22913_obj = static__21cd5e48d_New(30LL);;
	_21cd67d15_WriteStr(&_22913_obj, jule::Str::lit("_match_end_", 11));
	_21cd67d15_WriteStr(&_22913_obj, _203633c05_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_22824_m)), 15LL));
	return _21cd6860c_Str(&_22913_obj);;
}



inline jule::Str static__1a87a4c6c_caseBegin(jule::Uintptr _23625_c) {
	_21cd5e16e_StrBuilder _23713_obj = static__21cd5e48d_New(30LL);;
	_21cd67d15_WriteStr(&_23713_obj, jule::Str::lit("_case_begin_", 12));
	_21cd67d15_WriteStr(&_23713_obj, _203633c05_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_23625_c)), 15LL));
	return _21cd6860c_Str(&_23713_obj);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a87a15b5_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8863941_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8864018_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a88643e2_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8874996_Str(_1a8874611_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1a8874cd7_Equal(jule::Ptr<_1a8874611_customType> _self_, jule::Ptr<_1c0db0519_TypeKind> _4021_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8874611_customType _Src) {
	_Stream << _1a8874996_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a8875216_typeCoder> static__1a8875755_new(jule::Ptr<_1a8865459_ObjectCoder>* _6424_oc) {
	jule::Ptr<_1a8875216_typeCoder> _6513_tc = jule::new_ptr<_1a8875216_typeCoder>(_1a8875216_typeCoder{._field_oc=(*(_6424_oc)), });;
	(*(_6513_tc))._field_rc=static__1a887d4b6_new(&(_6513_tc));
	return _6513_tc;;
}



inline jule::Str _1a8875a96_toType(_1a8875216_typeCoder* _self_, jule::Str _7129_id) {
	if ((!_7129_id.equal("uintptr", 7))) {
		_7129_id=_203636433_RealKindOf(_7129_id);
	};
	_21cd5e16e_StrBuilder _7513_obj = static__21cd5e48d_New(32LL);;
	_21cd67d15_WriteStr(&_7513_obj, jule::Str::lit("jule::", 6));
	if (((97LL <= _7129_id[0LL]) && (_7129_id[0LL] <= 122LLU))) {
		_21cd680bd_WriteByte(&_7513_obj, static_cast<jule::U8>((_7129_id[0LL] - 32LLU)));
	} else {
		_21cd680bd_WriteByte(&_7513_obj, _7129_id[0LL]);
	};
	_21cd67d15_WriteStr(&_7513_obj, _7129_id.slice(1LL));
	return _21cd6860c_Str(&_7513_obj);;
}



inline jule::Str _1a8875dd7_prim(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0db80e3_Prim> _8723_p) {
	return _1a8875a96_toType(_self_, _1c0db8434_Str(_8723_p.ptr()));;
}



inline jule::Str _1a8876228_tuple(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0dbd1d6_Tuple> _9228_t) {
	_21cd5e16e_StrBuilder _9313_obj = static__21cd5e48d_New(32LL);;
	_21cd67d15_WriteStr(&_9313_obj, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*(_9228_t))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac10be83:;
		if (it != expr_end) {
			jule::I64 _9514_i = it - expr->begin();
			jule::Ptr<_1c0db0519_TypeKind> _9521_tk = *it;
			{
				_21cd67d15_WriteStr(&_9313_obj, _1a887a7b0_kind(_self_, _9521_tk));
				if ((((*(_9228_t))._field_Types.len() - _9514_i) > 1LL)) {
					_21cd680bd_WriteByte(&_9313_obj, ',');
				};
			}
			_iter_next_1ac10be83:;
			++it;
			_9514_i++;
			goto _iter_begin_1ac10be83;
		}
		_iter_end_1ac10be83:;
	};
	_21cd680bd_WriteByte(&_9313_obj, '>');
	return _21cd6860c_Str(&_9313_obj);;
}



inline jule::Str _1a8876569_asSptr(_1a8875216_typeCoder* _self_, jule::Str _10625_elem) {
	_21cd5e16e_StrBuilder _10713_obj = static__21cd5e48d_New(static_cast<jule::I64>((11LL + _10625_elem.len())));;
	_21cd67d15_WriteStr(&_10713_obj, jule::Str::lit("jule::Ptr<", 10));
	_21cd67d15_WriteStr(&_10713_obj, _10625_elem);
	_21cd680bd_WriteByte(&_10713_obj, '>');
	return _21cd6860c_Str(&_10713_obj);;
}



inline jule::Str _1a88768aa_sptr(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0dbbb1e_Sptr> _11527_sptr) {
	return _1a8876569_asSptr(_self_, _1a887a7b0_kind(_self_, (*(_11527_sptr))._field_Elem));;
}



inline jule::Str _1a8876beb_ptr(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0dc03d6_Ptr> _12026_p) {
	;
	if (_1c0dc0e20_IsUnsafe(_12026_p.ptr())) {
		return jule::Str::lit("void*", 5);;
	};
	return (_1a887a7b0_kind(_self_, (*(_12026_p))._field_Elem) + jule::Str::lit("*", 1));;
}



inline jule::Str _1a887703c_enumDecl(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0c8704a_Enum> _12931_e) {
	return _1a887a7b0_kind(_self_, (*((*(_12931_e))._field_Kind))._field_Kind);;
}



inline jule::Str _1a887737d_typeEnumDecl(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0c88755_TypeEnum> _13435_e) {
	return jule::Str::lit("jule::Any", 9);;
}



inline jule::Str _1a88776be_asSlice(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0db0519_TypeKind> _13830_elem) {
	_21cd5e16e_StrBuilder _13913_obj = static__21cd5e48d_New(45LL);;
	_21cd67d15_WriteStr(&_13913_obj, jule::Str::lit("jule::Slice<", 12));
	_21cd67d15_WriteStr(&_13913_obj, _1a887a7b0_kind(_self_, _13830_elem));
	_21cd680bd_WriteByte(&_13913_obj, '>');
	return _21cd6860c_Str(&_13913_obj);;
}



inline jule::Str _1a8877a10_slice(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0dbc5e2_Slc> _14728_s) {
	return _1a88776be_asSlice(_self_, (*(_14728_s))._field_Elem);;
}



inline jule::Str _1a8877d51_mapType(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0dbdc86_Map> _15230_m) {
	_21cd5e16e_StrBuilder _15313_obj = static__21cd5e48d_New(43LL);;
	_21cd67d15_WriteStr(&_15313_obj, jule::Str::lit("jule::Map<", 10));
	_21cd67d15_WriteStr(&_15313_obj, _1a887a7b0_kind(_self_, (*(_15230_m))._field_Key));
	_21cd680bd_WriteByte(&_15313_obj, ',');
	_21cd67d15_WriteStr(&_15313_obj, _1a887a7b0_kind(_self_, (*(_15230_m))._field_Val));
	_21cd680bd_WriteByte(&_15313_obj, '>');
	return _21cd6860c_Str(&_15313_obj);;
}



inline jule::Str _1a8878192_traitIdent(_1a8875216_typeCoder* _self_, jule::Str _16229_ident) {
	_21cd5e16e_StrBuilder _16313_obj = static__21cd5e48d_New(static_cast<jule::I64>((13LL + _16229_ident.len())));;
	_21cd67d15_WriteStr(&_16313_obj, jule::Str::lit("jule::Trait<", 12));
	_21cd67d15_WriteStr(&_16313_obj, _16229_ident);
	_21cd680bd_WriteByte(&_16313_obj, '>');
	return _21cd6860c_Str(&_16313_obj);;
}



inline jule::Str _1a88784d3_traitDecl(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0c84850_Trait> _17128_t) {
	return _1a8878192_traitIdent(_self_, static__1a87a2be3_traitDecl(_17128_t));;
}



inline jule::Str _1a8878824_structure(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0c5b64b_Struct> _17628_s) {
	_21cd5e16e_StrBuilder _17713_rep = static__21cd5e48d_New(32LL);;
	if (((*(_17628_s))._field_Binded && (!(_1a88826a7_hasDirective(&((*(_17628_s))._field_Directives), jule::Str::lit("typedef", 7)))))) {
		_21cd67d15_WriteStr(&_17713_rep, jule::Str::lit("struct ", 7));
	};
	_21cd67d15_WriteStr(&_17713_rep, static__1a87a3276_structure(&(_17628_s)));
	return _21cd6860c_Str(&_17713_rep);;
}



inline jule::Str _1a8878b65_structureIns(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0c5e3c9_StructIns> _18635_s) {
	if ((*((*(_18635_s))._field_Decl))._field_Binded) {
		_21cd5e16e_StrBuilder _18817_ident = static__21cd5e48d_New(32LL);;
		_21cd67d15_WriteStr(&_18817_ident, static__1a87a3540_structureIns(&(_18635_s)));
		if (((*(_18635_s))._field_Generics.len() > 0LL)) {
			_21cd680bd_WriteByte(&_18817_ident, '<');
			{
				auto expr = &((*(_18635_s))._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ac11b800:;
				if (it != expr_end) {
					jule::I64 _19222_i = it - expr->begin();
					jule::Ptr<_1c0dadb33_InsGeneric> _19229_g = *it;
					{
						_21cd67d15_WriteStr(&_18817_ident, _1a887a7b0_kind(_self_, (*(_19229_g))._field_Kind));
						if ((((*(_18635_s))._field_Generics.len() - _19222_i) > 1LL)) {
							_21cd680bd_WriteByte(&_18817_ident, ',');
						};
					}
					_iter_next_1ac11b800:;
					++it;
					_19222_i++;
					goto _iter_begin_1ac11b800;
				}
				_iter_end_1ac11b800:;
			};
			_21cd680bd_WriteByte(&_18817_ident, '>');
		};
		jule::Ptr<_1c0c39e10_Directive> _20013_d = _1a88822de_findDirective(&((*((*(_18635_s))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_20013_d != nullptr)) {
			jule::Str _20221_buf = _21cd6860c_Str(&_18817_ident);;
			_21cd6880a_Clear(&_18817_ident);
			_21cd67d15_WriteStr(&_18817_ident, _1a88726ec_concatAllParts((*(_20013_d))._field_Args));
			_21cd67d15_WriteStr(&_18817_ident, jule::Str::lit("::", 2));
			_21cd67d15_WriteStr(&_18817_ident, _20221_buf);
		};
		return _21cd6860c_Str(&_18817_ident);;
	};
	return static__1a87a3540_structureIns(&(_18635_s));;
}



inline jule::Str _1a8878ea6_array(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0dbe913_Arr> _21428_a) {
	_21cd5e16e_StrBuilder _21513_obj = static__21cd5e48d_New(45LL);;
	_21cd67d15_WriteStr(&_21513_obj, jule::Str::lit("jule::Array<", 12));
	_21cd67d15_WriteStr(&_21513_obj, _1a887a7b0_kind(_self_, (*(_21428_a))._field_Elem));
	_21cd680bd_WriteByte(&_21513_obj, ',');
	_21cd67d15_WriteStr(&_21513_obj, _203634387_Itoa((*(_21428_a))._field_N));
	_21cd680bd_WriteByte(&_21513_obj, '>');
	return _21cd6860c_Str(&_21513_obj);;
}



inline jule::Str _1a8879638_paramIns(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0c7350e_ParamIns>* _24132_p) {
	_21cd5e16e_StrBuilder _24213_obj = static__21cd5e48d_New(32LL);;
	if ((*((*((*(_24132_p))))._field_Decl))._field_Variadic) {
		_21cd67d15_WriteStr(&_24213_obj, jule::Str::lit("jule::Slice<", 12));
		_21cd67d15_WriteStr(&_24213_obj, _1a887a7b0_kind(_self_, (*((*(_24132_p))))._field_Kind));
		_21cd680bd_WriteByte(&_24213_obj, '>');
	} else {
		_21cd67d15_WriteStr(&_24213_obj, _1a887a7b0_kind(_self_, (*((*(_24132_p))))._field_Kind));
	};
	if ((*((*((*(_24132_p))))._field_Decl))._field_Reference) {
		_21cd680bd_WriteByte(&_24213_obj, '*');
	};
	return _21cd6860c_Str(&_24213_obj);;
}



inline void _1a8879cdc_funcInsResult(_1a8875216_typeCoder* _self_, _21cd5e16e_StrBuilder* _27137_s, jule::Ptr<_1c0c744aa_FnIns>* _27157_f) {
	if (_1c0c71a29_IsVoid((*((*(_27157_f))))._field_Decl.ptr())) {
		if ((*((*((*(_27157_f))))._field_Decl))._field_Exceptional) {
			_21cd67d15_WriteStr(_27137_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_21cd67d15_WriteStr(_27137_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*((*((*(_27157_f))))._field_Decl))._field_Exceptional) {
		_21cd67d15_WriteStr(_27137_s, jule::Str::lit("jule::Exceptional<", 18));
		_1a8880573_codeMut1((*(_self_))._field_rc.ptr(), _27137_s, &((*((*(_27157_f))))._field_Result));
		_21cd680bd_WriteByte(_27137_s, '>');
		return;;
	};
	_1a8880573_codeMut1((*(_self_))._field_rc.ptr(), _27137_s, &((*((*(_27157_f))))._field_Result));
}



inline jule::Str _1a887a12d_anonFunc(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0c744aa_FnIns> _28931_f) {
	if ((((*(_28931_f))._field_Result != nullptr) && (_1c0db4991_Tup((*(_28931_f))._field_Result.ptr()) != nullptr))) {
		_1a8866b42_pushResultIns((*(_self_))._field_oc, &(_28931_f));
	};
	_21cd5e16e_StrBuilder _29313_decl = static__21cd5e48d_New(20LL);;
	_1a8879cdc_funcInsResult(_self_, &(_29313_decl), &(_28931_f));
	_21cd680bd_WriteByte(&_29313_decl, '(');
	if (((*(_28931_f))._field_Params.len() > 0LL)) {
		{
			auto expr = &((*(_28931_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac13146e:;
			if (it != expr_end) {
				jule::I64 _29718_i = it - expr->begin();
				jule::Ptr<_1c0c7350e_ParamIns> _29725_param = *it;
				{
					if (_1c0c701ed_IsSelf((*(_29725_param))._field_Decl.ptr())) {
						goto _iter_next_1ac13146e;
					};
					_21cd67d15_WriteStr(&_29313_decl, _1a8879638_paramIns(_self_, &(_29725_param)));
					if ((((*(_28931_f))._field_Params.len() - _29718_i) > 1LL)) {
						_21cd680bd_WriteByte(&_29313_decl, ',');
					};
				}
				_iter_next_1ac13146e:;
				++it;
				_29718_i++;
				goto _iter_begin_1ac13146e;
			}
			_iter_end_1ac13146e:;
		};
	} else {
		_21cd67d15_WriteStr(&_29313_decl, jule::Str::lit("void", 4));
	};
	_21cd680bd_WriteByte(&_29313_decl, ')');
	return _21cd6860c_Str(&_29313_decl);;
}



inline jule::Str _1a887a46e_func(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0c744aa_FnIns> _31427_f) {
	_21cd5e16e_StrBuilder _31513_obj = static__21cd5e48d_New(42LL);;
	_21cd67d15_WriteStr(&_31513_obj, jule::Str::lit("jule::Fn<", 9));
	_21cd67d15_WriteStr(&_31513_obj, _1a887a12d_anonFunc(_self_, _31427_f));
	_21cd680bd_WriteByte(&_31513_obj, '>');
	return _21cd6860c_Str(&_31513_obj);;
}



inline jule::Str _1a887a7b0_kind(_1a8875216_typeCoder* _self_, jule::Ptr<_1c0db0519_TypeKind> _32327_k) {
	{
		
		if ((_1c0db41dd_Struct(_32327_k.ptr()) != nullptr)) {
			_case_begin_1ac135a4a:;
			{
				return _1a8878b65_structureIns(_self_, _1c0db41dd_Struct(_32327_k.ptr()));;
			}
		}
		else if (_1c0db1361_Binded(_32327_k.ptr())) {
			_case_begin_1ac135ac2:;
			{
				return (*(_32327_k))._field_BindIdent;;
			}
		}
		else if ((_1c0db2b6a_Prim(_32327_k.ptr()) != nullptr)) {
			_case_begin_1ac135b49:;
			{
				return _1a8875dd7_prim(_self_, _1c0db2b6a_Prim(_32327_k.ptr()));;
			}
		}
		else if ((_1c0db4991_Tup(_32327_k.ptr()) != nullptr)) {
			_case_begin_1ac135bc1:;
			{
				return _1a8876228_tuple(_self_, _1c0db4991_Tup(_32327_k.ptr()));;
			}
		}
		else if ((_1c0db2e01_Sptr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1ac135c48:;
			{
				return _1a88768aa_sptr(_self_, _1c0db2e01_Sptr(_32327_k.ptr()));;
			}
		}
		else if ((_1c0db3187_Ptr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1ac135cc0:;
			{
				return _1a8876beb_ptr(_self_, _1c0db3187_Ptr(_32327_k.ptr()));;
			}
		}
		else if ((_1c0db341d_Enum(_32327_k.ptr()) != nullptr)) {
			_case_begin_1ac135d47:;
			{
				return _1a887703c_enumDecl(_self_, _1c0db341d_Enum(_32327_k.ptr()));;
			}
		}
		else if ((_1c0db36a4_TypeEnum(_32327_k.ptr()) != nullptr)) {
			_case_begin_1ac135dbe:;
			{
				return _1a887737d_typeEnumDecl(_self_, _1c0db36a4_TypeEnum(_32327_k.ptr()));;
			}
		}
		else if ((_1c0db3bc1_Slc(_32327_k.ptr()) != nullptr)) {
			_case_begin_1ac135e46:;
			{
				return _1a8877a10_slice(_self_, _1c0db3bc1_Slc(_32327_k.ptr()));;
			}
		}
		else if ((_1c0db470a_Map(_32327_k.ptr()) != nullptr)) {
			_case_begin_1ac135ebd:;
			{
				return _1a8877d51_mapType(_self_, _1c0db470a_Map(_32327_k.ptr()));;
			}
		}
		else if ((_1c0db4474_Trait(_32327_k.ptr()) != nullptr)) {
			_case_begin_1ac136045:;
			{
				return _1a88784d3_traitDecl(_self_, _1c0db4474_Trait(_32327_k.ptr()));;
			}
		}
		else if ((_1c0db393a_Arr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1ac1360bc:;
			{
				return _1a8878ea6_array(_self_, _1c0db393a_Arr(_32327_k.ptr()));;
			}
		}
		else if ((_1c0db3e57_Fn(_32327_k.ptr()) != nullptr)) {
			_case_begin_1ac136144:;
			{
				return _1a887a46e_func(_self_, _1c0db3e57_Fn(_32327_k.ptr()));;
			}
		}
		_match_end_1ac13586e:;
	};
	{
		auto &_match_expr{ (*(_32327_k))._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1ac1361ee:;
			{
				return (*((*(_32327_k))._field_Kind.cast_ptr<_1a8874611_customType>(27)))._field_kind;;
			}
		}
		else {
			_case_begin_1ac13e25c:;
			{
				return jule::Str::lit("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1ac13e207:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a8875216_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a887cedd_resultCoder> static__1a887d4b6_new(jule::Ptr<_1a8875216_typeCoder>* _37724_tc) {
	return jule::new_ptr<_1a887cedd_resultCoder>(_1a887cedd_resultCoder{._field_tc=(*(_37724_tc))});;
}



inline void _1a887d829_ptr(_1a887cedd_resultCoder* _self_, _21cd5e16e_StrBuilder* _38127_s, jule::Ptr<_1c0dc03d6_Ptr> _38146_p) {
	_21cd67d15_WriteStr(_38127_s, jule::Str::lit("p", 1));
	_1a8880210_codeMut(_self_, _38127_s, &((*(_38146_p))._field_Elem));
}



inline void _1a887db8c_sptr(_1a887cedd_resultCoder* _self_, _21cd5e16e_StrBuilder* _38628_s, jule::Ptr<_1c0dbbb1e_Sptr> _38647_p) {
	_21cd67d15_WriteStr(_38628_s, jule::Str::lit("x", 1));
	_1a8880210_codeMut(_self_, _38628_s, &((*(_38647_p))._field_Elem));
}



inline void _1a887e000_mapType(_1a887cedd_resultCoder* _self_, _21cd5e16e_StrBuilder* _39131_s, jule::Ptr<_1c0dbdc86_Map> _39150_p) {
	_21cd67d15_WriteStr(_39131_s, jule::Str::lit("m", 1));
	_1a8880210_codeMut(_self_, _39131_s, &((*(_39150_p))._field_Key));
	_1a8880210_codeMut(_self_, _39131_s, &((*(_39150_p))._field_Val));
}



inline void _1a887e363_slice(_1a887cedd_resultCoder* _self_, _21cd5e16e_StrBuilder* _39729_s, jule::Ptr<_1c0dbc5e2_Slc> _39748_slc) {
	_21cd67d15_WriteStr(_39729_s, jule::Str::lit("s", 1));
	_1a8880210_codeMut(_self_, _39729_s, &((*(_39748_slc))._field_Elem));
}



inline void _1a887e6c6_arr(_1a887cedd_resultCoder* _self_, _21cd5e16e_StrBuilder* _40227_s, jule::Ptr<_1c0dbe913_Arr> _40246_arr) {
	_21cd67d15_WriteStr(_40227_s, jule::Str::lit("a", 1));
	_21cd67d15_WriteStr(_40227_s, _2036340bd_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_40246_arr))._field_N)), 16LL));
	_1a8880210_codeMut(_self_, _40227_s, &((*(_40246_arr))._field_Elem));
}



inline void _1a887ea39_func(_1a887cedd_resultCoder* _self_, _21cd5e16e_StrBuilder* _40828_s, jule::Ptr<_1c0c744aa_FnIns> _40847_f) {
	_21cd67d15_WriteStr(_40828_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_40847_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac146396:;
		if (it != expr_end) {
			jule::Ptr<_1c0c7350e_ParamIns> _41021_p = *it;
			{
				if ((*((*(_41021_p))._field_Decl))._field_Reference) {
					_21cd67d15_WriteStr(_40828_s, jule::Str::lit("r", 1));
				};
				_1a8880210_codeMut(_self_, _40828_s, &((*(_41021_p))._field_Kind));
			}
			_iter_next_1ac146396:;
			++it;
			goto _iter_begin_1ac146396;
		}
		_iter_end_1ac146396:;
	};
	if (((*(_40847_f))._field_Result != nullptr)) {
		_1a8880210_codeMut(_self_, _40828_s, &((*(_40847_f))._field_Result));
	};
}



inline void _1a887ed9c_tup(_1a887cedd_resultCoder* _self_, _21cd5e16e_StrBuilder* _42127_s, jule::Ptr<_1c0dbd1d6_Tuple> _42146_tup) {
	{
		auto expr = &((*(_42146_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac148a3b:;
		if (it != expr_end) {
			jule::Ptr<_1c0db0519_TypeKind> _42221_t = *it;
			{
				_21cd67d15_WriteStr(_42127_s, jule::Str::lit("__jule_tuple_", 13));
				_1a8880210_codeMut(_self_, _42127_s, &(_42221_t));
			}
			_iter_next_1ac148a3b:;
			++it;
			goto _iter_begin_1ac148a3b;
		}
		_iter_end_1ac148a3b:;
	};
}



inline void _1a8880210_codeMut(_1a887cedd_resultCoder* _self_, _21cd5e16e_StrBuilder* _42831_s, jule::Ptr<_1c0db0519_TypeKind>* _42851_t) {
	{
		auto &_match_expr{ (*((*(_42851_t))))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1ac149ca1:;
			{
				_1a887d829_ptr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1c0dc03d6_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1ac14a169:;
			{
				_1a887db8c_sptr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1c0dbbb1e_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1ac14a1d0:;
			{
				_1a887e000_mapType(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1c0dbdc86_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1ac14a246:;
			{
				_1a887e363_slice(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1c0dbc5e2_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1ac14a2bd:;
			{
				_1a887e6c6_arr(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1c0dbe913_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1ac14a752:;
			{
				_1a887ea39_func(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1c0c744aa_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1ac14a7c9:;
			{
				jule::Ptr<_1c0c8704a_Enum> _44313_te = (*((*(_42851_t))))._field_Kind.cast_ptr<_1c0c8704a_Enum>(3);;
				_21cd67d15_WriteStr(_42831_s, static__1a87a1e67_toOut(&((*(_44313_te))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44313_te))));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1ac14a851:;
			{
				jule::Ptr<_1c0c88755_TypeEnum> _44613_te = (*((*(_42851_t))))._field_Kind.cast_ptr<_1c0c88755_TypeEnum>(4);;
				_21cd67d15_WriteStr(_42831_s, static__1a87a1e67_toOut(&((*(_44613_te))._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44613_te))));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1ac14a8c8:;
			{
				jule::Ptr<_1c0c5e3c9_StructIns> _44917_si = (*((*(_42851_t))))._field_Kind.cast_ptr<_1c0c5e3c9_StructIns>(0);;
				_21cd67d15_WriteStr(_42831_s, static__1a87a3540_structureIns(&(_44917_si)));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1ac14a950:;
			{
				jule::Ptr<_1c0c84850_Trait> _45217_trt = (*((*(_42851_t))))._field_Kind.cast_ptr<_1c0c84850_Trait>(2);;
				_21cd67d15_WriteStr(_42831_s, static__1a87a2be3_traitDecl(_45217_trt));
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1ac14a9c7:;
			{
				_21cd67d15_WriteStr(_42831_s, (*((*((*(_42851_t))))._field_Kind.cast_ptr<_1c0db80e3_Prim>(20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1ac14aa4e:;
			{
				_1a887ed9c_tup(_self_, _42831_s, (*((*(_42851_t))))._field_Kind.cast_ptr<_1c0dbd1d6_Tuple>(23));
			}
		}
		else {
			_case_begin_1ac14a103:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:459:13"));;
			}
		}
		_match_end_1ac14a09d:;
	};
}



inline void _1a8880573_codeMut1(_1a887cedd_resultCoder* _self_, _21cd5e16e_StrBuilder* _46332_s, jule::Ptr<_1c0db0519_TypeKind>* _46352_t) {
	jule::Ptr<_1c0dbd1d6_Tuple> _46413_tup = _1c0db4991_Tup((*(_46352_t)).ptr());;
	if ((_46413_tup != nullptr)) {
		_1a887ed9c_tup(_self_, _46332_s, _46413_tup);
	} else {
		_21cd67d15_WriteStr(_46332_s, _1a887a7b0_kind((*(_self_))._field_tc.ptr(), (*(_46352_t))));
	};
}



inline jule::Str _1a8880881_code(_1a887cedd_resultCoder* _self_, jule::Ptr<_1c0db0519_TypeKind>* _47228_t) {
	_21cd5e16e_StrBuilder _47313_s = static__21cd5e48d_New(20LL);;
	_1a8880210_codeMut(_self_, &(_47313_s), _47228_t);
	return _21cd6860c_Str(&_47313_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a887cedd_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac156461_Name(_1ac156043_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ac1565b5_What(_1ac156043_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ac156719_Reset(_1ac156043_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ac15686d_Short(_1ac156043_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac156043_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1ac1597c7_Name(_1ac159b90_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ac15991a_What(_1ac159b90_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ac159e7b_Reset(_1ac159b90_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ac15a0be_Short(_1ac159b90_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac159b90_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1ac15cec3_Name(_1ac15d38b_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ac15d116_What(_1ac15d38b_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ac15d677_Reset(_1ac15d38b_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ac15d7ba_Short(_1ac15d38b_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac15d38b_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1ac161713_Name(_1ac161acb_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ac161856_What(_1ac161acb_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ac161db7_Reset(_1ac161acb_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ac16200a_Short(_1ac161acb_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac161acb_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1ac164e0e_Name(_1ac1652c7_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ac165052_What(_1ac1652c7_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ac1655b3_Reset(_1ac1652c7_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ac165706_Short(_1ac1652c7_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac1652c7_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8bb627c_FlagSet> static__1a8bb6568_New(void) {
	return jule::new_ptr<_1a8bb627c_FlagSet>(_1a8bb627c_FlagSet{._field_flags=jule::Slice<jule::Trait<_1a8bb46cb_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1a8bb46cb_CommonFlag> _1a8bb69db_FindFlag(_1a8bb627c_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1748be:;
		if (it != expr_end) {
			jule::Trait<_1a8bb46cb_CommonFlag> _7221_flag = *it;
			{
				if ((_1a8bb46cb_CommonFlag_mptr_data[(_7221_flag).type_offset]._1a88b618b_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1ac1748be:;
			++it;
			goto _iter_begin_1ac1748be;
		}
		_iter_end_1ac1748be:;
	};
	return nullptr;;
}



inline jule::Trait<_1a8bb46cb_CommonFlag> _1a8bb6d2c_FindFlagShort(_1a8bb627c_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1761c8:;
		if (it != expr_end) {
			jule::Trait<_1a8bb46cb_CommonFlag> _8221_flag = *it;
			{
				if ((_1a8bb46cb_CommonFlag_mptr_data[(_8221_flag).type_offset]._1a88b6334_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1ac1761c8:;
			++it;
			goto _iter_begin_1ac1761c8;
		}
		_iter_end_1ac1761c8:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a8bb7404_Parse(_1a8bb627c_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1a8bb8c0d_argParser _11613_ap = _1a8bb8c0d_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1a8bba209_parse(&_11613_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11613_ap._field_content);;
}



inline jule::Ptr<_1ac1652c7_Flag> _1beea0d25_addFlagCommon(_1a8bb627c_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1beea25da:;
			{
				goto _match_end_1beea2574;
			}
		}
		_match_end_1beea2574:;
	};
	if ((_1a8bb69db_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1a8bb6d2c_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1ac1652c7_Flag> _14813_flag = jule::new_ptr<_1ac1652c7_Flag>(_1ac1652c7_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1a8bb46cb_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1a8bb46cb_CommonFlag>(_14813_flag, 4)); };
	return _14813_flag;;
}

inline jule::Ptr<_1ac161acb_Flag> _1beea913b_addFlagCommon(_1a8bb627c_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1beeaa8ac:;
			{
				goto _match_end_1beeaa846;
			}
		}
		_match_end_1beeaa846:;
	};
	if ((_1a8bb69db_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1a8bb6d2c_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1ac161acb_Flag> _14813_flag = jule::new_ptr<_1ac161acb_Flag>(_1ac161acb_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1a8bb46cb_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1a8bb46cb_CommonFlag>(_14813_flag, 3)); };
	return _14813_flag;;
}



inline void _1bee9e065_AddVar(_1a8bb627c_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1ac1652c7_Flag> _17613_flag = _1beea0d25_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	(*(_17613_flag))._field_default=(*(_17532_var));
	(*(_17613_flag))._field_data=_17532_var;
}

inline void _1beea73c0_AddVar(_1a8bb627c_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1ac161acb_Flag> _17613_flag = _1beea913b_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	(*(_17613_flag))._field_default=(*(_17532_var));
	(*(_17613_flag))._field_data=_17532_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1a8bb627c_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1ac17c9d7_parseInteger(_1a8bb8c0d_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_19031_s))).empty()) {
			_case_begin_1ac18048a:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_21cd492ad_HasPrefix((*(_19031_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1ac180a0c:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_21cd492ad_HasPrefix((*(_19031_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1ac1807dc:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_21cd492ad_HasPrefix((*(_19031_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1ac180853:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1ac18015a:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1ac1800e4:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1ac180028:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1bee53239_parseInteger(_1a8bb8c0d_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_19031_s))).empty()) {
			_case_begin_1bee55b98:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_21cd492ad_HasPrefix((*(_19031_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1bee5621a:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_21cd492ad_HasPrefix((*(_19031_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1bee55eea:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_21cd492ad_HasPrefix((*(_19031_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1bee56061:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1bee55868:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bee55802:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bee55736:;
	};
	return __jule_func_result;;
}



inline jule::Str _1a8bb9527_getData(_1a8bb8c0d_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1a8bb979c_processFlag(_1a8bb8c0d_argParser* _self_, jule::Trait<_1a8bb46cb_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1ac17a177:;
			{
				jule::Ptr<_1ac161acb_Flag> _22017_bf = (*(_21735_flag)).cast_ptr<_1ac161acb_Flag>(3);;
				(*((*(_22017_bf))._field_data))=(!((*(_22017_bf))._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1ac17a122:;
	};
	jule::Str _2259_data = _1a8bb9527_getData(_self_);;
	if ((_2259_data).empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1a8bb46cb_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a88b618b_Name((*(_21735_flag)))) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ac17bc5b:;
			{
				jule::Ptr<_1ac156043_Flag> _23217_intf = (*(_21735_flag)).cast_ptr<_1ac156043_Flag>(0);;
				jule::Bool _23327_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1ac17c9d7_parseInteger(_self_, &(_2259_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23365_s, jule::I64 _23373_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _203622a18_ParseInt(_23365_s, _23373_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_23217_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23327_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23327_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1a8bb46cb_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a88b618b_Name((*(_21735_flag)))) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1ac17bcc2:;
			{
				jule::Ptr<_1ac159b90_Flag> _24017_uintf = (*(_21735_flag)).cast_ptr<_1ac159b90_Flag>(1);;
				jule::Bool _24128_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1bee53239_parseInteger(_self_, &(_2259_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24166_s, jule::I64 _24174_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _203622562_ParseUint(_24166_s, _24174_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_24017_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24128_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24128_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1a8bb46cb_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a88b618b_Name((*(_21735_flag)))) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1ac17bd38:;
			{
				jule::Ptr<_1ac15d38b_Flag> _24817_ff = (*(_21735_flag)).cast_ptr<_1ac15d38b_Flag>(2);;
				(*((*(_24817_ff))._field_data))=static_cast<jule::F64>(({
					auto except = _20362946a_ParseFloat(_2259_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _1a8bb46cb_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a88b618b_Name((*(_21735_flag)))) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1ac17bd9e:;
			{
				(*((*((*(_21735_flag)).cast_ptr<_1ac1652c7_Flag>(4)))._field_data))=_2259_data;
			}
		}
		_match_end_1ac17b442:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a8bb9a55_singleDash(_1a8bb8c0d_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Slice<jule::I32> _2619_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_2619_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee5bd9c:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1a8bb46cb_CommonFlag> _26317_flag = _1a8bb6d2c_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26317_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_26216_r)))), &__jule_any_type4));
				};
				({
					auto except = _1a8bb979c_processFlag(_self_, &(_26317_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1bee5bd9c:;
			++it;
			goto _iter_begin_1bee5bd9c;
		}
		_iter_end_1bee5bd9c:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a8bb9d0d_doubleDash(_1a8bb8c0d_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Trait<_1a8bb46cb_CommonFlag> _27613_flag = _1a8bb69db_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27613_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4));
	};
	({
		auto except = _1a8bb979c_processFlag(_self_, &(_27613_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a8bba00b_tryArg(_1a8bb8c0d_argParser* _self_) {
	jule::Str _2849_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_2849_arg[0LL] == '-')) {
		if (((_2849_arg.len() > 1LL) && (_2849_arg[1LL] == '-'))) {
			({
				auto except = _1a8bb9d0d_doubleDash(_self_, &(_2849_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1a8bb9a55_singleDash(_self_, &(_2849_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2849_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a8bba209_parse(_1a8bb8c0d_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1a8bba00b_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1bee64448:;
	}
	_iter_end_1bee64448:;;
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _1a8bb8c0d_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8865459_ObjectCoder> static__1a8865855_New(jule::Ptr<_1c189de2a_IR>* _9324_ir, _1a8863941_SerializationInfo _9333_info) {
	jule::Ptr<_1a8865459_ObjectCoder> _9413_oc = jule::new_ptr<_1a8865459_ObjectCoder>(_1a8865459_ObjectCoder{._field_ir=(*(_9324_ir)), ._field_info=_9333_info, });;
	(*(_9413_oc))._field_ec=static__1a8788503_new(&(_9413_oc));
	(*(_9413_oc))._field_sc=static__1a877e53d_new(&(_9413_oc));
	(*(_9413_oc))._field_tc=static__1a8875755_new(&(_9413_oc));
	return _9413_oc;;
}



inline void _1a8865b0d_write(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Str _10425_s) {
	_21cd67d15_WriteStr(&(*(_self_))._field_Obj, _10425_s);
}



inline void _1a8865d0b_addIndent(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_indentBuffer; __jule_push_dest.push(9LLU); };
}



inline void _1a8866009_doneIndent(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=(*(_self_))._field_indentBuffer.slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));
}



inline void _1a8866207_indent(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	_21cd67a5c_Write(&(*(_self_))._field_Obj, (*(_self_))._field_indentBuffer);
}



inline jule::I64 _1a8866548_findAnyType(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0db0519_TypeKind>* _12336_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abec3289:;
		if (it != expr_end) {
			jule::I64 _12414_i = it - expr->begin();
			jule::Ptr<_1c0db0519_TypeKind> _12421_at = *it;
			{
				if (_1c0db0c23_Equal(_12421_at, (*(_12336_t)))) {
					return _12414_i;;
				};
			}
			_iter_next_1abec3289:;
			++it;
			_12414_i++;
			goto _iter_begin_1abec3289;
		}
		_iter_end_1abec3289:;
	};
	return -1LL;;
}



inline jule::I64 _1a8866889_pushAnyType(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0db0519_TypeKind> _13235_t) {
	if ((_1c0db341d_Enum(_13235_t.ptr()) != nullptr)) {
		_13235_t=(*((*(_1c0db341d_Enum(_13235_t.ptr())))._field_Kind))._field_Kind;
	};
	jule::I64 _13613_i = _1a8866548_findAnyType(_self_, &(_13235_t));;
	if ((_13613_i != -1LL)) {
		return _13613_i;;
	};
	_13613_i=static_cast<jule::I64>((*(_self_))._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_1c0db0519_TypeKind>> &__jule_push_dest = (*(_self_))._field_anyTypeMap; __jule_push_dest.push(_13235_t); };
	jule::Str _1429_si = _203634387_Itoa(_13613_i);;
	if ((_1c0db2e01_Sptr(_13235_t.ptr()) != nullptr)) {
		jule::Str _14413_elem_kind = _1a887a7b0_kind((*(_self_))._field_tc.ptr(), (*(_1c0db2e01_Sptr(_13235_t.ptr())))._field_Elem);;
		jule::Str _14513_kind = _1a8876569_asSptr((*(_self_))._field_tc.ptr(), _14413_elem_kind);;
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _14413_elem_kind);
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _14513_kind);
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _17113_comparable = _1c0db1b14_Comparable(_13235_t.ptr());;
		jule::Str _17213_kind = _1a887a7b0_kind((*(_self_))._field_tc.ptr(), _13235_t);;
		if (_17213_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1c0db08d2_Str(_13235_t.ptr()));
		};
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (_17113_comparable) {
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1c0db3187_Ptr(_13235_t.ptr()) == nullptr)) {
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("const ", 6));
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
		} else {
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("* const", 7));
		};
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, ", 10));
		if (_17113_comparable) {
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
		_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_17113_comparable) {
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _17213_kind);
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _1429_si);
			_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _13613_i;;
}



inline void _1a8866b42_pushResultIns(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c744aa_FnIns>* _24038_f) {
	jule::Str _2419_s = _1a8880881_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_24038_f))))._field_Result));;
	jule::Bool _24212_ok = false;;
	(*(_self_))._field_resultMap.lookup(_2419_s, nullptr, &(_24212_ok));
	if (_24212_ok) {
		return;;
	};
	(*(_self_))._field_resultMap[_2419_s]=false;
	_21cd67d15_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("struct ", 7));
	_21cd67d15_WriteStr(&(*(_self_))._field_resultDecls, _2419_s);
	_21cd67d15_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1c0db4991_Tup((*((*(_24038_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abee2ad3:;
		if (it != expr_end) {
			jule::I64 _25014_i = it - expr->begin();
			jule::Ptr<_1c0db0519_TypeKind> _25021_t = *it;
			{
				_21cd680bd_WriteByte(&(*(_self_))._field_resultDecls, 9LLU);
				_21cd67d15_WriteStr(&(*(_self_))._field_resultDecls, _1a887a7b0_kind((*(_self_))._field_tc.ptr(), _25021_t));
				_21cd680bd_WriteByte(&(*(_self_))._field_resultDecls, ' ');
				_21cd67d15_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_21cd67d15_WriteStr(&(*(_self_))._field_resultDecls, _203634387_Itoa(_25014_i));
				_21cd67d15_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1abee2ad3:;
			++it;
			_25014_i++;
			goto _iter_begin_1abee2ad3;
		}
		_iter_end_1abee2ad3:;
	};
	_21cd67d15_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1a8866dea_pushResult(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c715a6_Fn>* _26135_f) {
	if ((_1c0c71a29_IsVoid((*(_26135_f)).ptr()) || ((*((*((*(_26135_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _26513_n = (*((*(_26135_f))))._field_Instances.len();;
	if (((*((*(_26135_f))))._field_Generics.len() == 0LL)) {
		_26513_n=1LL;
	};
	{
		auto expr = (*((*(_26135_f))))._field_Instances.slice(0LL, _26513_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1abee7d6e:;
		if (it != expr_end) {
			jule::Ptr<_1c0c744aa_FnIns> _26921_ins = *it;
			{
				_1a8866b42_pushResultIns(_self_, &(_26921_ins));
			}
			_iter_next_1abee7d6e:;
			++it;
			goto _iter_begin_1abee7d6e;
		}
		_iter_end_1abee7d6e:;
	};
}



inline jule::I64 _1a88672e6_findTypeOffsetS(_1a8865459_ObjectCoder* _self_, jule::Ptr<_1c0c84850_Trait> _27430_t, jule::Ptr<_1c0c5e3c9_StructIns> _27445_s) {
	if (((*(_27430_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abee9359:;
		if (it != expr_end) {
			jule::Ptr<_1a8864018_traitHash> *_27816_hash = it;
			{
				if ((((*((*(_27816_hash))))._field_t == _27430_t) && ((*((*(_27816_hash))))._field_s == _27445_s))) {
					return (*((*(_27816_hash))))._field_i;;
				};
			}
			_iter_next_1abee9359:;
			++it;
			goto _iter_begin_1abee9359;
		}
		_iter_end_1abee9359:;
	};
	return -1LL;;
}



inline jule::I64 _1a88676e2_findTypeOffset(_1a8865459_ObjectCoder* _self_, jule::Ptr<_1c0c84850_Trait> _28629_t, jule::Ptr<_1c0db0519_TypeKind> _28644_k) {
	if (((*(_28629_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1c0c5e3c9_StructIns> _29017_s = nullptr;;
	if ((_1c0db2e01_Sptr(_28644_k.ptr()) != nullptr)) {
		_28644_k=(*(_1c0db2e01_Sptr(_28644_k.ptr())))._field_Elem;
	};
	_29017_s=_1c0db41dd_Struct(_28644_k.ptr());
	if ((_29017_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1a88672e6_findTypeOffsetS(_self_, _28629_t, _29017_s));;
}



inline void _1a8867a55_pushAndWriteMaskMapper(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c84850_Trait> _30146_t1, jule::Ptr<_1c0c84850_Trait> _30162_t2) {
	_21cd5e16e_StrBuilder _30213_ident = static__21cd5e48d_New(32LL);;
	_21cd67d15_WriteStr(&_30213_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_21cd67d15_WriteStr(&_30213_ident, _203633c05_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30162_t2))), 15LL));
	_21cd67d15_WriteStr(&_30213_ident, jule::Str::lit("_to_", 4));
	_21cd67d15_WriteStr(&_30213_ident, _203633c05_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30146_t1))), 15LL));
	_21cd67a5c_Write(&(*(_self_))._field_Obj, _21cd690ad_Buf(&_30213_ident));
	{
		auto expr = &((*(_self_))._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abeee826:;
		if (it != expr_end) {
			_1a88643e2_traitCast _31016_m = *it;
			{
				if (((_31016_m._field_t1 == _30146_t1) && (_31016_m._field_t2 == _30162_t2))) {
					return;;
				};
			}
			_iter_next_1abeee826:;
			++it;
			goto _iter_begin_1abeee826;
		}
		_iter_end_1abeee826:;
	};
	{ jule::Slice<_1a88643e2_traitCast> &__jule_push_dest = (*(_self_))._field_traitCastMap; __jule_push_dest.push(_1a88643e2_traitCast{._field_t1=_30146_t1, ._field_t2=_30162_t2}); };
	;
	_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Int", 9));
	_21cd680bd_WriteByte(&(*(_self_))._field_anyObj, ' ');
	_21cd67a5c_Write(&(*(_self_))._field_anyObj, _21cd690ad_Buf(&_30213_ident));
	_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("(const jule::Int offset) noexcept { ", 36));
	{
		auto expr = &((*(_30146_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac003363:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5b64b_Struct> _32921_s1 = *it;
			{
				{
					auto expr = &((*(_30162_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac003b9e:;
					if (it != expr_end) {
						jule::Ptr<_1c0c5b64b_Struct> _33020_s2 = *it;
						{
							if ((_32921_s1 == _33020_s2)) {
								{
									auto expr = &((*(_32921_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ac004a07:;
									if (it != expr_end) {
										jule::Ptr<_1c0c5e3c9_StructIns> _33233_s1i = *it;
										{
											jule::I64 _33325_i1 = _1a88672e6_findTypeOffsetS(_self_.ptr(), _30146_t1, _33233_s1i);;
											jule::I64 _33425_i2 = _1a88672e6_findTypeOffsetS(_self_.ptr(), _30162_t2, _33233_s1i);;
											_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("if (offset == ", 14));
											_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _203634387_Itoa(_33425_i2));
											_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(") return ", 9));
											_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _203634387_Itoa(_33325_i1));
											_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1ac004a07:;
										++it;
										goto _iter_begin_1ac004a07;
									}
									_iter_end_1ac004a07:;
								};
							};
						}
						_iter_next_1ac003b9e:;
						++it;
						goto _iter_begin_1ac003b9e;
					}
					_iter_end_1ac003b9e:;
				};
			}
			_iter_next_1ac003363:;
			++it;
			goto _iter_begin_1ac003363;
		}
		_iter_end_1ac003363:;
	};
	_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" return ", 8));
	_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, _203634387_Itoa(0LL));
	_21cd67d15_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; }\n", 4));
}



inline void _1a8867d0d_locInfo(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c25406_Token>* _35028_t) {
	jule::Str *_35110_loc = &((*((*((*(_35028_t))))._field_File))._field_Path);;
	if (_21a9586a5_Production) {
		{
			
			if (_21cd492ad_HasPrefix((*(_35110_loc)), _21d2d524e_PathStdlib)) {
				_case_begin_1ac0098b9:;
				{
					_1a879b329_cstrBytes(&((*(_self_))._field_Obj), (*(_35110_loc)).slice((_21cd6c15a_Dir(_21d2d524e_PathStdlib).len() + 1LL)));
				}
			}
			else if (_21cd492ad_HasPrefix((*(_35110_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1ac009930:;
				{
					_1a879b329_cstrBytes(&((*(_self_))._field_Obj), (*(_35110_loc)).slice((_21cd6c15a_Dir((*((*(_self_))._field_ir))._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1ac009435:;
				{
					_1a879b329_cstrBytes(&((*(_self_))._field_Obj), (*(_35110_loc)));
				}
			}
			_match_end_1ac009369:;
		};
	} else {
		_1a879b329_cstrBytes(&((*(_self_))._field_Obj), (*(_35110_loc)));
	};
	_1a8865b0d_write(_self_, jule::Str::lit(":", 1));
	_1a8865b0d_write(_self_, _203634387_Itoa((*((*(_35028_t))))._field_Row));
	_1a8865b0d_write(_self_, jule::Str::lit(":", 1));
	_1a8865b0d_write(_self_, _203634387_Itoa((*((*(_35028_t))))._field_Column));
}



inline void _1a886800b_head(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	_1a885aeaa_Time _3779_time = static__1a885b571_Now();;
	_1a885a7d4_AbsTime _3789_abs = _1a885cc59_Abs(&_3779_time);;
	_1a8865b0d_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1a8865b0d_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1a8865b0d_write(_self_, jule::Str::lit("jule0.0.15 @master", 18));
	_1a8865b0d_write(_self_, jule::Str::lit("\n", 1));
	_1a8865b0d_write(_self_, jule::Str::lit("// Date: ", 9));
	_1a8865b0d_write(_self_, _203633c05_FmtUint(_3789_abs._field_Day, 10LL));
	_1a8865b0d_write(_self_, jule::Str::lit("/", 1));
	_1a8865b0d_write(_self_, _203633c05_FmtUint(_3789_abs._field_Month, 10LL));
	_1a8865b0d_write(_self_, jule::Str::lit("/", 1));
	_1a8865b0d_write(_self_, _203633c05_FmtUint(_3789_abs._field_Year, 10LL));
	_1a8865b0d_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a8865b0d_write(_self_, (*(_self_))._field_info._field_Compiler);
	_1a8865b0d_write(_self_, jule::Str::lit(" ", 1));
	_1a8865b0d_write(_self_, (*(_self_))._field_info._field_CompilerCommand);
	_1a8865b0d_write(_self_, jule::Str::lit("\n\n", 2));
	if (_21a9586a5_Production) {
		_1a8865b0d_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_21a958012_RC))) {
		_1a8865b0d_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_21a9583db_Safety))) {
		_1a8865b0d_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a8868209_links(_self_);
	_1a8865b0d_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1a8865b0d_write(_self_, _21d2d5a68_PathApi);
	_1a8865b0d_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1a8868209_links(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac01ab2d:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _41516_used = *it;
			{
				{
					
					if ((!((*(_41516_used))._field_Binded))) {
						_case_begin_1ac01b8dc:;
						{
							goto _iter_next_1ac01ab2d;
						}
					}
					else if (_21ce0070a_IsStdHeaderPath((*(_41516_used))._field_Path)) {
						_case_begin_1ac01b964:;
						{
							_1a8865b0d_write(_self_, jule::Str::lit("#include ", 9));
							_1a8865b0d_write(_self_, (*(_41516_used))._field_Path);
							_1a8865b0d_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_21ce009b3_IsValidHeaderExt(_21cd6b731_Ext((*(_41516_used))._field_Path))) {
						_case_begin_1ac01b9db:;
						{
							_1a8865b0d_write(_self_, jule::Str::lit("#include \"", 10));
							_1a8865b0d_write(_self_, (*(_41516_used))._field_Path);
							_1a8865b0d_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1ac01b7bb:;
				};
			}
			_iter_next_1ac01ab2d:;
			++it;
			goto _iter_begin_1ac01ab2d;
		}
		_iter_end_1ac01ab2d:;
	};
}



inline void _1a88684b2_prepareStructure(_1a8865459_ObjectCoder* _self_, jule::Ptr<_1c0c5b64b_Struct>* _43140_s) {
	{
		auto expr = &((*((*(_43140_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac01db75:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5e3c9_StructIns> _43221_ins = *it;
			{
				{
					auto expr = &((*(_43221_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac020292:;
					if (it != expr_end) {
						jule::Ptr<_1c0c715a6_Fn> _43325_m = *it;
						{
							if ((*(_43325_m))._field_Statically) {
								goto _iter_next_1ac020292;
							};
							{
								auto expr = &((*(_43325_m))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac021150:;
								if (it != expr_end) {
									jule::Ptr<_1c0c744aa_FnIns> _43729_mins = *it;
									{
										jule::Ptr<_1c0c7350e_ParamIns> _43825_p = (*(_43729_mins))._field_Params[0LL];;
										if ((!(_1c0c70484_IsRef((*(_43825_p))._field_Decl.ptr())))) {
											(*(_43825_p))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1a8874611_customType>(_1a8874611_customType{._field_kind=(_1a887a7b0_kind((*(_self_))._field_tc.ptr(), (*(_43825_p))._field_Kind) + jule::Str::lit("*", 1))}), 27)});
										} else {
											(*(_43825_p))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1a8874611_customType>(_1a8874611_customType{._field_kind=_1a887a7b0_kind((*(_self_))._field_tc.ptr(), (*(_43825_p))._field_Kind)}), 27)});
										};
									}
									_iter_next_1ac021150:;
									++it;
									goto _iter_begin_1ac021150;
								}
								_iter_end_1ac021150:;
							};
						}
						_iter_next_1ac020292:;
						++it;
						goto _iter_begin_1ac020292;
					}
					_iter_end_1ac020292:;
				};
			}
			_iter_next_1ac01db75:;
			++it;
			goto _iter_begin_1ac01db75;
		}
		_iter_end_1ac01db75:;
	};
}



inline void _1a88686b0_prepareStructures(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac021837:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5b64b_Struct> _45821_s = *it;
			{
				if (((*(_45821_s))._field_Token != nullptr)) {
					_1a88684b2_prepareStructure(_self_.ptr(), &(_45821_s));
				};
			}
			_iter_next_1ac021837:;
			++it;
			goto _iter_begin_1ac021837;
		}
		_iter_end_1ac021837:;
	};
}



inline void _1a8868968_iterPackages(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1c0cd6462_Package>*)> _46532_f) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac023b69:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _46621_used = *it;
			{
				if ((!((*(_46621_used))._field_Binded))) {
					_46532_f(&((*(_46621_used))._field_Package));
				};
			}
			_iter_next_1ac023b69:;
			++it;
			goto _iter_begin_1ac023b69;
		}
		_iter_end_1ac023b69:;
	};
	_46532_f(&((*((*(_self_))._field_ir))._field_Main));
}



inline void _1a8868b66_buildTraitMap(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	_1a8868968_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c0cd6462_Package>*)>([=](jule::Ptr<_1c0cd6462_Package>* _47535_pkg) mutable -> void {
		_1a88723de_iterFiles(_47535_pkg, jule::Fn<void(jule::Ptr<_1c0d7a12c_SymbolTable>*)>([=](jule::Ptr<_1c0d7a12c_SymbolTable>* _47636_file) mutable -> void {
			{
				auto expr = &((*((*(_47636_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ac029257:;
				if (it != expr_end) {
					jule::Ptr<_1c0c84850_Trait> _47729_t = *it;
					{
						if (((*(_47729_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_47729_t))._field_Implemented.len() == 0LL)) {
							jule::Ptr<_1a8864018_traitHash> _48229_hash = jule::new_ptr<_1a8864018_traitHash>(_1a8864018_traitHash{._field_t=_47729_t, ._field_s=nullptr, ._field_i=0LL});;
							_21cd5e16e_StrBuilder _48729_b = static__21cd5e48d_New(static_cast<jule::I64>((*(_47729_t))._field_Ident.len()));;
							static__1a87a1ae3_writeIdentTo(&(_48729_b), &((*(_47729_t))._field_Ident));
							(*(_48229_hash))._field_ti=_21cd6860c_Str(&_48729_b);
							{ jule::Slice<jule::Ptr<_1a8864018_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_48229_hash); };
							goto _iter_next_1ac029257;
						};
						jule::I64 _49325_i = 0LL;;
						{
							auto expr = &((*(_47729_t))._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ac029b5e:;
							if (it != expr_end) {
								jule::Ptr<_1c0c5b64b_Struct> _49433_s = *it;
								{
									{
										auto expr = &((*(_49433_s))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ac02d27d:;
										if (it != expr_end) {
											jule::Ptr<_1c0c5e3c9_StructIns> _49537_ins = *it;
											{
												jule::Ptr<_1a8864018_traitHash> _49633_hash = jule::new_ptr<_1a8864018_traitHash>(_1a8864018_traitHash{._field_t=_47729_t, ._field_s=_49537_ins, ._field_i=_49325_i});;
												_21cd5e16e_StrBuilder _50133_b = static__21cd5e48d_New(static_cast<jule::I64>((*(_47729_t))._field_Ident.len()));;
												static__1a87a1ae3_writeIdentTo(&(_50133_b), &((*(_47729_t))._field_Ident));
												(*(_49633_hash))._field_ti=_21cd6860c_Str(&_50133_b);
												{ jule::Slice<jule::Ptr<_1a8864018_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_49633_hash); };
												(_49325_i)++;
											}
											_iter_next_1ac02d27d:;
											++it;
											goto _iter_begin_1ac02d27d;
										}
										_iter_end_1ac02d27d:;
									};
								}
								_iter_next_1ac029b5e:;
								++it;
								goto _iter_begin_1ac029b5e;
							}
							_iter_end_1ac029b5e:;
						};
						_1a887318c_pushMethodsFromInherits(&(_47729_t), &(_47729_t));
					}
					_iter_next_1ac029257:;
					++it;
					goto _iter_begin_1ac029257;
				}
				_iter_end_1ac029257:;
			};
		}));
	}));
}



inline void _1a8868d64_traitDecls(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	_1a8868968_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c0cd6462_Package>*)>([=](jule::Ptr<_1c0cd6462_Package>* _51735_pkg) mutable -> void {
		_1a88723de_iterFiles(_51735_pkg, jule::Fn<void(jule::Ptr<_1c0d7a12c_SymbolTable>*)>([=](jule::Ptr<_1c0d7a12c_SymbolTable>* _51836_file) mutable -> void {
			{
				auto expr = &((*((*(_51836_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ac031b99:;
				if (it != expr_end) {
					jule::Ptr<_1c0c84850_Trait> _51929_t = *it;
					{
						if (((*(_51929_t))._field_Token == nullptr)) {
							return;;
						};
						_1a8866207_indent(_self_);
						_1a8865b0d_write(_self_, jule::Str::lit("struct ", 7));
						_1a8865b0d_write(_self_, static__1a87a2be3_traitDecl(_51929_t));
						_1a8865b0d_write(_self_, jule::Str::lit("{};\n", 4));
					}
					_iter_next_1ac031b99:;
					++it;
					goto _iter_begin_1ac031b99;
				}
				_iter_end_1ac031b99:;
			};
		}));
	}));
}



inline void _1a886911c_structurePlainDecl(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c5b64b_Struct>* _53243_s) {
	{
		auto expr = &((*((*(_53243_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac029a71:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5e3c9_StructIns> _53321_ins = *it;
			{
				_1a8865b0d_write(_self_, jule::Str::lit("struct ", 7));
				_1a8865b0d_write(_self_, static__1a87a3540_structureIns(&(_53321_ins)));
				_1a8865b0d_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ac029a71:;
			++it;
			goto _iter_begin_1ac029a71;
		}
		_iter_end_1ac029a71:;
	};
}



inline void _1a886931a_structurePlainDecls(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac034075:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5b64b_Struct> _54121_s = *it;
			{
				if (((*(_54121_s))._field_Token != nullptr)) {
					_1a886911c_structurePlainDecl(_self_, &(_54121_s));
				};
			}
			_iter_next_1ac034075:;
			++it;
			goto _iter_begin_1ac034075;
		}
		_iter_end_1ac034075:;
	};
}



inline void _1a88695c3_fieldDecl(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c5d829_FieldIns>* _54834_f) {
	_1a8865b0d_write(_self_, _1a887a7b0_kind((*(_self_))._field_tc.ptr(), (*((*(_54834_f))))._field_Kind));
	_1a8865b0d_write(_self_, jule::Str::lit(" ", 1));
	_1a8865b0d_write(_self_, static__1a87a3809_field(&((*((*(_54834_f))))._field_Decl)));
	if (((*((*(_54834_f))))._field_Default == nullptr)) {
		if (_1a8882971_shouldInitialized(&((*((*(_54834_f))))._field_Kind))) {
			_1a8865b0d_write(_self_, jule::Str::lit(" = ", 3));
			_1a879a867_initExpr((*(_self_))._field_ec, (*((*(_54834_f))))._field_Kind);
		};
	} else {
		_1a8865b0d_write(_self_, jule::Str::lit(" = ", 3));
		_1a87912db_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_54834_f))))._field_Default))._field_Model);
	};
	_1a8865b0d_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a886987b_structureDestructor(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _56644_s) {
	;
	jule::Ptr<_1c0c715a6_Fn> _5699_disposeMethod = _1c0c60441_FindMethod((*(_56644_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _57013_disposed = static__1c0d2cd9e_Dispose(_5699_disposeMethod);;
	if ((!(_57013_disposed))) {
		return;;
	};
	_1a8865b0d_write(_self_, jule::Str::lit("~", 1));
	_1a8865b0d_write(_self_, static__1a87a3540_structureIns(_56644_s));
	_1a8865b0d_write(_self_, jule::Str::lit("(void) { ", 9));
	_1a8865b0d_write(_self_, static__1a87a2660_func(&(_5699_disposeMethod)));
	_1a8865b0d_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1a8869bde_structureOperatorEq(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Str* _58240_ident, jule::Ptr<_1c0c5e3c9_StructIns>* _58257_s) {
	if ((!((*((*(_58257_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_58257_s))))._field_Operators._field_Eq != nullptr)) {
		_1a886a470_structureOperator(_self_, _58240_ident, &((*((*(_58257_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_1a8866207_indent(_self_);
	if (_1c18a5ccd_Inline) {
		_1a8865b0d_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a8865b0d_write(_self_, jule::Str::lit("bool operator==(", 16));
	_1a8865b0d_write(_self_, (*(_58240_ident)));
	_1a8865b0d_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_58257_s))))._field_Fields.len() > 0LL)) {
		_1a8865d0b_addIndent(_self_);
		_1a8865b0d_write(_self_, jule::Str::lit("\n", 1));
		_1a8866207_indent(_self_);
		_1a8865b0d_write(_self_, jule::Str::lit("return ", 7));
		_1a8865d0b_addIndent(_self_);
		jule::Bool _60517_writed = false;;
		{
			auto expr = &((*((*(_58257_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac0430ea:;
			if (it != expr_end) {
				jule::Ptr<_1c0c5d829_FieldIns> _60625_f = *it;
				{
					jule::Ptr<_1c0c5e3c9_StructIns> _60817_strct = _1c0db41dd_Struct((*(_60625_f))._field_Kind.ptr());;
					if ((((_60817_strct != nullptr) && ((*(_60817_strct))._field_Decl != nullptr)) && (*((*(_60817_strct))._field_Decl))._field_Binded)) {
						goto _iter_next_1ac0430ea;
					};
					if (_60517_writed) {
						_1a8865b0d_write(_self_, jule::Str::lit(" &&", 3));
					};
					_60517_writed=true;
					_1a8865b0d_write(_self_, jule::Str::lit("\n", 1));
					_1a8866207_indent(_self_);
					_1a8865b0d_write(_self_, jule::Str::lit("this->", 6));
					jule::Str _61917_fIdent = static__1a87a3809_field(&((*(_60625_f))._field_Decl));;
					_1a8865b0d_write(_self_, _61917_fIdent);
					_1a8865b0d_write(_self_, jule::Str::lit(" == _other.", 11));
					_1a8865b0d_write(_self_, _61917_fIdent);
				}
				_iter_next_1ac0430ea:;
				++it;
				goto _iter_begin_1ac0430ea;
			}
			_iter_end_1ac0430ea:;
		};
		_1a8866009_doneIndent(_self_);
		if ((!(_60517_writed))) {
			_1a8865b0d_write(_self_, jule::Str::lit("true", 4));
		};
		_1a8865b0d_write(_self_, jule::Str::lit(";\n", 2));
		_1a8866009_doneIndent(_self_);
		_1a8866207_indent(_self_);
		_1a8865b0d_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1a8865b0d_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_1a8865b0d_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1a886a052_structureOperatorNotEq(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Str* _63843_ident, jule::Ptr<_1c0c5e3c9_StructIns>* _63860_s) {
	if ((!((*((*(_63860_s))))._field_Comparable))) {
		return;;
	};
	_1a8866207_indent(_self_);
	if (_1c18a5ccd_Inline) {
		_1a8865b0d_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a8865b0d_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_1a8865b0d_write(_self_, (*(_63843_ident)));
	_1a8865b0d_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1a886a470_structureOperator(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Str* _65238_ident, jule::Ptr<_1c0c744aa_FnIns>* _65255_f, jule::Str _65266_op) {
	if (((*(_65255_f)) == nullptr)) {
		return;;
	};
	jule::Bool _6579_unary = ((*((*(_65255_f))))._field_Params.len() == 1LL);;
	jule::Bool _6589_assignment = _1c0c71a29_IsVoid((*((*(_65255_f))))._field_Decl.ptr());;
	_1a8866207_indent(_self_);
	if (_1c18a5ccd_Inline) {
		_1a8865b0d_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_6589_assignment) {
		_1a8865b0d_write(_self_, (*(_65238_ident)));
		_1a8865b0d_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_1c0db2b6a_Prim((*((*(_65255_f))))._field_Result.ptr()) == nullptr)) {
			_1a8865b0d_write(_self_, (*(_65238_ident)));
		} else {
			_1a8865b0d_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_1a8865b0d_write(_self_, jule::Str::lit(" operator", 9));
	_1a8865b0d_write(_self_, _65266_op);
	_1a8865b0d_write(_self_, jule::Str::lit("(", 1));
	if ((!(_6579_unary))) {
		jule::Ptr<_1c0c7350e_ParamIns> _68017_p = (*((*(_65255_f))))._field_Params[1LL];;
		_1a8865b0d_write(_self_, _1a8879638_paramIns((*(_self_))._field_tc.ptr(), &(_68017_p)));
		_1a8865b0d_write(_self_, jule::Str::lit(" _other", 7));
	};
	_1a8865b0d_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_6589_assignment))) {
		_1a8865b0d_write(_self_, jule::Str::lit("return ", 7));
	};
	_1a8865b0d_write(_self_, static__1a87a2929_funcIns(_65255_f));
	if ((!(_6579_unary))) {
		_1a8865b0d_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_6589_assignment) {
			_1a8865b0d_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_1a8865b0d_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1a8865b0d_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_1a8865b0d_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1a886a728_structureOperators(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _70143_s) {
	jule::Str _7029_ident = static__1a87a3540_structureIns(_70143_s);;
	_1a8869bde_structureOperatorEq(_self_, &(_7029_ident), _70143_s);
	_1a886a052_structureOperatorNotEq(_self_, &(_7029_ident), _70143_s);
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_1a886a470_structureOperator(_self_, &(_7029_ident), &((*((*(_70143_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _1a886a9d1_structureInsDecl(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _74041_s) {
	{
		auto expr = &((*((*(_74041_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac064e52:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _74121_m = *it;
			{
				if (_1a8873720_isHeadDecl(&(_74121_m))) {
					_1a886be77_funcDecl(_self_, &(_74121_m), false);
				};
			}
			_iter_next_1ac064e52:;
			++it;
			goto _iter_begin_1ac064e52;
		}
		_iter_end_1ac064e52:;
	};
	_1a8865b0d_write(_self_, jule::Str::lit("struct ", 7));
	jule::Str _7489_outIdent = static__1a87a3540_structureIns(_74041_s);;
	_1a8865b0d_write(_self_, _7489_outIdent);
	_1a8865b0d_write(_self_, jule::Str::lit(" {\n", 3));
	_1a8865d0b_addIndent(_self_);
	{
		auto expr = &((*((*(_74041_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac066b79:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5d829_FieldIns> _75421_f = *it;
			{
				_1a8866207_indent(_self_);
				_1a88695c3_fieldDecl(_self_, &(_75421_f));
				_1a8865b0d_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1ac066b79:;
			++it;
			goto _iter_begin_1ac066b79;
		}
		_iter_end_1ac066b79:;
	};
	_1a8866207_indent(_self_);
	_1a886987b_structureDestructor(_self_, _74041_s);
	_1a8865b0d_write(_self_, jule::Str::lit("\n\n", 2));
	_1a886a728_structureOperators(_self_, _74041_s);
	_1a8865b0d_write(_self_, jule::Str::lit("\n", 1));
	_1a8866009_doneIndent(_self_);
	_1a8866207_indent(_self_);
	_1a8865b0d_write(_self_, jule::Str::lit("};", 2));
}



inline void _1a886ac89_structureDecl(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c5b64b_Struct>* _77238_s) {
	{
		auto expr = &((*((*(_77238_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac06a8b4:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5e3c9_StructIns> _77321_ins = *it;
			{
				_1a886a9d1_structureInsDecl(_self_, &(_77321_ins));
			}
			_iter_next_1ac06a8b4:;
			++it;
			goto _iter_begin_1ac06a8b4;
		}
		_iter_end_1ac06a8b4:;
	};
}



inline void _1a886ae87_structureDecls(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac06b222:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5b64b_Struct> _77921_s = *it;
			{
				if (((*(_77921_s))._field_Token != nullptr)) {
					_1a886ac89_structureDecl(_self_, &(_77921_s));
					_1a8865b0d_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1ac06b222:;
			++it;
			goto _iter_begin_1ac06b222;
		}
		_iter_end_1ac06b222:;
	};
}



inline void _1a886b185_structureMethodDecls(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac06c1bd:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5b64b_Struct> _78821_s = *it;
			{
				if (((*(_78821_s))._field_Token != nullptr)) {
					{
						auto expr = &((*(_78821_s))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac06e214:;
						if (it != expr_end) {
							jule::Ptr<_1c0c5e3c9_StructIns> _79029_ins = *it;
							{
								{
									auto expr = &((*(_79029_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ac06eb60:;
									if (it != expr_end) {
										jule::Ptr<_1c0c715a6_Fn> _79133_m = *it;
										{
											if ((!(_1a8873720_isHeadDecl(&(_79133_m))))) {
												_1a8866dea_pushResult(_self_, &(_79133_m));
												_1a886be77_funcDecl(_self_, &(_79133_m), false);
											};
										}
										_iter_next_1ac06eb60:;
										++it;
										goto _iter_begin_1ac06eb60;
									}
									_iter_end_1ac06eb60:;
								};
							}
							_iter_next_1ac06e214:;
							++it;
							goto _iter_begin_1ac06e214;
						}
						_iter_end_1ac06e214:;
					};
				};
			}
			_iter_next_1ac06c1bd:;
			++it;
			goto _iter_begin_1ac06c1bd;
		}
		_iter_end_1ac06c1bd:;
	};
}



inline void _1a886b43d_paramsDecls(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>>* _80336_params) {
	if (((*(_80336_params)).len() == 0LL)) {
		_1a8865b0d_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1a8865b0d_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _80336_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac06e962:;
		if (it != expr_end) {
			jule::I64 _81014_i = it - expr->begin();
			jule::Ptr<_1c0c7350e_ParamIns> _81021_p = *it;
			{
				_1a8865b0d_write(_self_, _1a8879638_paramIns((*(_self_))._field_tc.ptr(), &(_81021_p)));
				if ((((*(_80336_params)).len() - _81014_i) > 1LL)) {
					_1a8865b0d_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ac06e962:;
			++it;
			_81014_i++;
			goto _iter_begin_1ac06e962;
		}
		_iter_end_1ac06e962:;
	};
	_1a8865b0d_write(_self_, jule::Str::lit(")", 1));
}



inline void _1a886b7a1_funcHead(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c744aa_FnIns>* _82033_f, jule::Bool _82044_ptr) {
	if ((((!(_82044_ptr)) && _1c18a5ccd_Inline) && (!(_1c0c72046_IsEntryPoint((*((*(_82033_f))))._field_Decl.ptr()))))) {
		_1a8865b0d_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a8879cdc_funcInsResult((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Obj), _82033_f);
	if (_82044_ptr) {
		_1a8865b0d_write(_self_, jule::Str::lit("(*", 2));
		_1a8865b0d_write(_self_, static__1a87a2929_funcIns(_82033_f));
		_1a8865b0d_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1a8865b0d_write(_self_, jule::Str::lit(" ", 1));
		_1a8865b0d_write(_self_, static__1a87a2929_funcIns(_82033_f));
	};
}



inline void _1a886bb14_funcDeclIns(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c744aa_FnIns>* _83536_f, jule::Bool _83547_ptr) {
	_1a8866207_indent(_self_);
	_1a886b7a1_funcHead(_self_, _83536_f, _83547_ptr);
	_1a886b43d_paramsDecls(_self_, &((*((*(_83536_f))))._field_Params));
	_1a8865b0d_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1a886be77_funcDecl(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c715a6_Fn>* _84233_f, jule::Bool _84241_ptr) {
	{
		auto expr = &((*((*(_84233_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac07910e:;
		if (it != expr_end) {
			jule::Ptr<_1c0c744aa_FnIns> _84321_c = *it;
			{
				_1a886bb14_funcDeclIns(_self_, &(_84321_c), _84241_ptr);
			}
			_iter_next_1ac07910e:;
			++it;
			goto _iter_begin_1ac07910e;
		}
		_iter_end_1ac07910e:;
	};
}



inline void _1a886c395_funcDeclTrait(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c84850_Trait>* _84838_t, jule::Ptr<_1c0c715a6_Fn>* _84854_f, jule::Bool _84862_ptr) {
	{
		auto expr = &((*((*(_84854_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac07a495:;
		if (it != expr_end) {
			jule::Ptr<_1c0c744aa_FnIns> _84921_c = *it;
			{
				jule::Ptr<_1c0db0519_TypeKind> _85017_k = (*((*(_84921_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_84921_c))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>((*(_84838_t)), 2)});
				_1a886bb14_funcDeclIns(_self_, &(_84921_c), _84862_ptr);
				(*((*(_84921_c))._field_Params[0LL]))._field_Kind=_85017_k;
			}
			_iter_next_1ac07a495:;
			++it;
			goto _iter_begin_1ac07a495;
		}
		_iter_end_1ac07a495:;
	};
}



inline void _1a886c593_funcDecls(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	_1a8868968_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c0cd6462_Package>*)>([=](jule::Ptr<_1c0cd6462_Package>* _85835_pkg) mutable -> void {
		_1a88723de_iterFiles(_85835_pkg, jule::Fn<void(jule::Ptr<_1c0d7a12c_SymbolTable>*)>([=](jule::Ptr<_1c0d7a12c_SymbolTable>* _85936_file) mutable -> void {
			{
				auto expr = &((*((*(_85936_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ac07e9d8:;
				if (it != expr_end) {
					jule::Ptr<_1c0c715a6_Fn> _86029_f = *it;
					{
						if (((!((*(_86029_f))._field_Binded)) && ((*(_86029_f))._field_Token != nullptr))) {
							_1a8866dea_pushResult(_self_, &(_86029_f));
							_1a886be77_funcDecl(_self_, &(_86029_f), false);
						};
					}
					_iter_next_1ac07e9d8:;
					++it;
					goto _iter_begin_1ac07e9d8;
				}
				_iter_end_1ac07e9d8:;
			};
		}));
	}));
}



inline void _1a886c906_traitDataTypeMethods(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c84850_Trait>* _87045_owner, jule::Ptr<_1c0c84850_Trait>* _87065_t) {
	{
		auto expr = &((*((*(_87065_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac07e686:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _87121_m = *it;
			{
				jule::Ptr<_1c0c744aa_FnIns> _87217_ins = (*(_87121_m))._field_Instances[0LL];;
				jule::Ptr<_1c0c7350e_ParamIns> _87317_p = (*(_87217_ins))._field_Params[0LL];;
				(*(_87317_p))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>((*(_87065_t)), 2)});
				{
					auto expr = (*(_87217_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1ac08317e:;
					if (it != expr_end) {
						jule::I64 _87718_i = it - expr.begin();
						jule::Ptr<_1c0c7350e_ParamIns> _87725_ip = *it;
						{
							if (_1c0c2812e_IsAnonIdent((*((*(_87725_ip))._field_Decl))._field_Ident)) {
								(*((*(_87725_ip))._field_Decl))._field_Ident=(jule::Str::lit("_", 1) + _203634387_Itoa(_87718_i));
							};
						}
						_iter_next_1ac08317e:;
						++it;
						_87718_i++;
						goto _iter_begin_1ac08317e;
					}
					_iter_end_1ac08317e:;
				};
				if ((!(_21a9586a5_Production))) {
					jule::Ptr<_1c0c7350e_ParamIns> _88321_lp = (*(_87217_ins))._field_Params[((*(_87217_ins))._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ (*((*(_88321_lp))._field_Kind))._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1ac08779e:;
							{
								goto _match_end_1ac085a77;
							}
						}
						else {
							_case_begin_1ac085acc:;
							{
								{ jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>> &__jule_push_dest = (*(_87217_ins))._field_Params; __jule_push_dest.push(jule::new_ptr<_1c0c7350e_ParamIns>(_1c0c7350e_ParamIns{._field_Decl=jule::new_ptr<_1c0c6ead2_Param>(_1c0c6ead2_Param{._field_Ident=jule::Str::lit("__file", 6)}), ._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1a8874611_customType>(_1a8874611_customType{._field_kind=jule::Str::lit("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_1ac085a77:;
					};
				};
				_1a8866dea_pushResult(_self_, &(_87121_m));
				_1a886c395_funcDeclTrait(_self_, _87045_owner, &(_87121_m), true);
			}
			_iter_next_1ac07e686:;
			++it;
			goto _iter_begin_1ac07e686;
		}
		_iter_end_1ac07e686:;
	};
}



inline void _1a886cb04_traitDataTypes(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	_1a8868968_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c0cd6462_Package>*)>([=](jule::Ptr<_1c0cd6462_Package>* _90635_pkg) mutable -> void {
		_1a88723de_iterFiles(_90635_pkg, jule::Fn<void(jule::Ptr<_1c0d7a12c_SymbolTable>*)>([=](jule::Ptr<_1c0d7a12c_SymbolTable>* _90736_file) mutable -> void {
			{
				auto expr = &((*((*(_90736_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ac089729:;
				if (it != expr_end) {
					jule::Ptr<_1c0c84850_Trait> _90829_t = *it;
					{
						if (((*(_90829_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_90829_t))._field_Methods.len() == 0LL)) {
							goto _iter_next_1ac089729;
						};
						_1a8865b0d_write(_self_, jule::Str::lit("struct ", 7));
						_1a8865b0d_write(_self_, static__1a87a2be3_traitDecl(_90829_t));
						_1a8865b0d_write(_self_, jule::Str::lit("MptrData", 8));
						_1a8865b0d_write(_self_, jule::Str::lit(" {\n", 3));
						_1a8865d0b_addIndent(_self_);
						_1a886c906_traitDataTypeMethods(_self_, &(_90829_t), &(_90829_t));
						_1a8866009_doneIndent(_self_);
						_1a8866207_indent(_self_);
						_1a8865b0d_write(_self_, jule::Str::lit("};\n\n", 4));
					}
					_iter_next_1ac089729:;
					++it;
					goto _iter_begin_1ac089729;
				}
				_iter_end_1ac089729:;
			};
		}));
	}));
}



inline void _1a886cdac_paramIns(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c7350e_ParamIns>* _92933_p) {
	_1a8865b0d_write(_self_, _1a8879638_paramIns((*(_self_))._field_tc.ptr(), _92933_p));
	_1a8865b0d_write(_self_, jule::Str::lit(" ", 1));
	_1a8865b0d_write(_self_, static__1a87a2eac_param(&((*((*(_92933_p))))._field_Decl)));
}



inline void _1a886d165_paramsIns(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>>* _93534_params) {
	if (((*(_93534_params)).len() == 0LL)) {
		_1a8865b0d_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_1a8865b0d_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _93534_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac08e894:;
		if (it != expr_end) {
			jule::I64 _94114_i = it - expr->begin();
			jule::Ptr<_1c0c7350e_ParamIns> _94121_p = *it;
			{
				_1a886cdac_paramIns(_self_, &(_94121_p));
				if ((((*(_93534_params)).len() - _94114_i) > 1LL)) {
					_1a8865b0d_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ac08e894:;
			++it;
			_94114_i++;
			goto _iter_begin_1ac08e894;
		}
		_iter_end_1ac08e894:;
	};
	_1a8865b0d_write(_self_, jule::Str::lit(")", 1));
}



inline void _1a886d4c8_varInitExpr(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0d2b94c_Var>* _95036_v, jule::Fn<void(void)> _95045_init) {
	if ((*((*(_95036_v))))._field_Statically) {
		_1a8865b0d_write(_self_, jule::Str::lit("static ", 7));
	};
	_1a8865b0d_write(_self_, _1a887a7b0_kind((*(_self_))._field_tc.ptr(), (*((*((*(_95036_v))))._field_Kind))._field_Kind));
	_1a8865b0d_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_95036_v))))._field_Reference) {
		_1a8865b0d_write(_self_, jule::Str::lit("*", 1));
	};
	_1a8865b0d_write(_self_, static__1a87a3ac3_var((*(_95036_v))));
	if ((_95045_init != nullptr)) {
		_1a8865b0d_write(_self_, jule::Str::lit(" = ", 3));
		_95045_init();
	};
	_1a8865b0d_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a886d781_var(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0d2b94c_Var> _96827_v) {
	if (_1c0c27d65_IsIgnoreIdent((*(_96827_v))._field_Ident)) {
		return;;
	};
	if ((((*(_96827_v))._field_Value != nullptr) && ((*((*(_96827_v))._field_Value))._field_Expr != nullptr))) {
		if (((*((*((*(_96827_v))._field_Value))._field_Data))._field_Model != nullptr)) {
			if ((*(_96827_v))._field_Reference) {
				_1a886d4c8_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1a8865b0d_write(_self_, jule::Str::lit("&(", 2));
					_1a879a5ae_model((*(_self_))._field_ec, (*((*((*(_96827_v))._field_Value))._field_Data))._field_Model);
					_1a8865b0d_write(_self_, jule::Str::lit(")", 1));
				}));
			} else {
				_1a886d4c8_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1a87912db_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_96827_v))._field_Value))._field_Data))._field_Model);
				}));
			};
			return;;
		};
		_1a886d4c8_varInitExpr(_self_, &(_96827_v), nullptr);
		return;;
	};
	if ((*(_96827_v))._field_Reference) {
		_1a886d4c8_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a8865b0d_write(_self_, jule::Str::lit("nullptr", 7));
		}));
		return;;
	};
	if (_1a8882971_shouldInitialized(&((*((*(_96827_v))._field_Kind))._field_Kind))) {
		_1a886d4c8_varInitExpr(_self_, &(_96827_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a879a867_initExpr((*(_self_))._field_ec, (*((*(_96827_v))._field_Kind))._field_Kind);
		}));
		return;;
	};
	_1a886d4c8_varInitExpr(_self_, &(_96827_v), nullptr);
}



inline void _1a886da39_funcIns(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c744aa_FnIns>* _99932_f) {
	_1a886b7a1_funcHead(_self_, _99932_f, false);
	_1a886d165_paramsIns(_self_, &((*((*(_99932_f))))._field_Params));
	_1a8865b0d_write(_self_, jule::Str::lit(" ", 1));
	_1a87851ae_funcScope((*(_self_))._field_sc, (*(_99932_f)));
	if (((*((*(_99932_f))))._field_Scope != nullptr)) {
		_1a8865b0d_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a886dce2_func(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c715a6_Fn>* _100929_f) {
	{
		auto expr = &((*((*(_100929_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0a1c2a:;
		if (it != expr_end) {
			jule::Ptr<_1c0c744aa_FnIns> _101021_ins = *it;
			{
				_1a886da39_funcIns(_self_, &(_101021_ins));
			}
			_iter_next_1ac0a1c2a:;
			++it;
			goto _iter_begin_1ac0a1c2a;
		}
		_iter_end_1ac0a1c2a:;
	};
}



inline void _1a886e155_funcTrait(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1a8864018_traitHash>* _101534_hash, jule::Ptr<_1c0c715a6_Fn>* _101557_f) {
	jule::Str _10169_ident = (*((*(_101557_f))))._field_Ident;;
	{
		auto expr = &((*((*(_101557_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0a2dc4:;
		if (it != expr_end) {
			jule::Ptr<_1c0c744aa_FnIns> _101721_ins = *it;
			{
				(*(_101721_ins))._field_Scope=nullptr;
				_21cd5e16e_StrBuilder _102017_s = static__21cd5e48d_New(static_cast<jule::I64>((((((*((*(_101557_f))))._field_Ident.len() + _10169_ident.len()) + (*((*(_101534_hash))))._field_ti.len()) + 2LL) + 4LLU)));;
				_21cd67d15_WriteStr(&_102017_s, _10169_ident);
				_21cd680bd_WriteByte(&_102017_s, '_');
				_21cd67d15_WriteStr(&_102017_s, (*((*(_101534_hash))))._field_ti);
				_21cd680bd_WriteByte(&_102017_s, '_');
				_21cd67d15_WriteStr(&_102017_s, _203634387_Itoa((*((*(_101534_hash))))._field_i));
				(*((*(_101557_f))))._field_Ident=_21cd6860c_Str(&_102017_s);
				jule::Ptr<_1c0db0519_TypeKind> _102917_k = (*((*(_101721_ins))._field_Params[0LL]))._field_Kind;;
				(*((*(_101721_ins))._field_Params[0LL]))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>((*((*(_101534_hash))))._field_t, 2)});
				_1a886da39_funcIns(_self_, &(_101721_ins));
				(*((*(_101721_ins))._field_Params[0LL]))._field_Kind=_102917_k;
			}
			_iter_next_1ac0a2dc4:;
			++it;
			goto _iter_begin_1ac0a2dc4;
		}
		_iter_end_1ac0a2dc4:;
	};
	(*((*(_101557_f))))._field_Ident=_10169_ident;
}



inline void _1a886e4b8_traitWrapper(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c715a6_Fn>* _103737_m, jule::Ptr<_1a8864018_traitHash>* _103750_hash) {
	_1a886e155_funcTrait(_self_, _103750_hash, _103737_m);
	if (((*((*(_103750_hash))))._field_s == nullptr)) {
		if (_21a9586a5_Production) {
			_1a8865b0d_write(_self_, jule::Str::lit(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1a8865b0d_write(_self_, jule::Str::lit(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _10499_ptr = (!(_1c0c70484_IsRef((*((*(_103737_m))))._field_Params[0LL].ptr())));;
	jule::Ptr<_1c0c715a6_Fn> _105113_sm = _1c0c60441_FindMethod((*((*(_103750_hash))))._field_s.ptr(), (*((*(_103737_m))))._field_Ident, false);;
	if (((_105113_sm == nullptr) || ((*(_105113_sm))._field_Instances.len() == 0LL))) {
		return;;
	};
	_1a8865d0b_addIndent(_self_);
	_1a8865b0d_write(_self_, jule::Str::lit("{\n", 2));
	_1a8866207_indent(_self_);
	if (((*(_105113_sm))._field_Exceptional || (!(_1c0c71a29_IsVoid(_105113_sm.ptr()))))) {
		_1a8865b0d_write(_self_, jule::Str::lit("return ", 7));
	};
	_1a8865b0d_write(_self_, static__1a87a2660_func(&(_105113_sm)));
	_1a8865b0d_write(_self_, jule::Str::lit("(", 1));
	if (_10499_ptr) {
		_1a8865b0d_write(_self_, jule::Str::lit("_self_.safe_ptr<", 16));
		_1a8865b0d_write(_self_, _1a8878b65_structureIns((*(_self_))._field_tc.ptr(), (*((*(_103750_hash))))._field_s));
		_1a8865b0d_write(_self_, jule::Str::lit(">(", 2));
		if ((!(_21a9586a5_Production))) {
			_1a8865b0d_write(_self_, jule::Str::lit("_00___file", 10));
		};
		_1a8865b0d_write(_self_, jule::Str::lit(")", 1));
	} else {
		_1a8865b0d_write(_self_, jule::Str::lit("_self_.data.as<", 15));
		_1a8865b0d_write(_self_, _1a8878824_structure((*(_self_))._field_tc.ptr(), (*(_105113_sm))._field_Owner));
		_1a8865b0d_write(_self_, jule::Str::lit(">()", 3));
	};
	{
		auto expr = (*((*(_103737_m))))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac0ae2dc:;
		if (it != expr_end) {
			jule::Ptr<_1c0c6ead2_Param> _107716_mp = *it;
			{
				_1a8865b0d_write(_self_, jule::Str::lit(", ", 2));
				_1a8865b0d_write(_self_, static__1a87a2eac_param(&(_107716_mp)));
			}
			_iter_next_1ac0ae2dc:;
			++it;
			goto _iter_begin_1ac0ae2dc;
		}
		_iter_end_1ac0ae2dc:;
	};
	_1a8865b0d_write(_self_, jule::Str::lit(");\n}\n", 5));
	_1a8866009_doneIndent(_self_);
}



inline void _1a886e6b6_traitWrappers(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0b4314:;
		if (it != expr_end) {
			jule::Ptr<_1a8864018_traitHash> _108621_hash = *it;
			{
				{
					auto expr = &((*((*(_108621_hash))._field_t))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac0b4c3d:;
					if (it != expr_end) {
						jule::Ptr<_1c0c715a6_Fn> _108725_m = *it;
						{
							_1a886e4b8_traitWrapper(_self_, &(_108725_m), &(_108621_hash));
						}
						_iter_next_1ac0b4c3d:;
						++it;
						goto _iter_begin_1ac0b4c3d;
					}
					_iter_end_1ac0b4c3d:;
				};
			}
			_iter_next_1ac0b4314:;
			++it;
			goto _iter_begin_1ac0b4314;
		}
		_iter_end_1ac0b4314:;
	};
}



inline void _1a886ea29_traitDataMethods(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c84850_Trait>* _109341_t, jule::Ptr<_1a8864018_traitHash>* _109353_hash) {
	{
		auto expr = &((*((*(_109341_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0b5832:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _109421_m = *it;
			{
				jule::Str _109513_mIdent = static__1a87a2660_func(&(_109421_m));;
				_1a8866207_indent(_self_);
				_1a8865b0d_write(_self_, jule::Str::lit(".", 1));
				_1a8865b0d_write(_self_, _109513_mIdent);
				_1a8865b0d_write(_self_, jule::Str::lit("=", 1));
				_1a8865b0d_write(_self_, _109513_mIdent);
				_1a8865b0d_write(_self_, jule::Str::lit("_", 1));
				_1a8865b0d_write(_self_, (*((*(_109353_hash))))._field_ti);
				_1a8865b0d_write(_self_, jule::Str::lit("_", 1));
				_1a8865b0d_write(_self_, _203634387_Itoa((*((*(_109353_hash))))._field_i));
				_1a8865b0d_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1ac0b5832:;
			++it;
			goto _iter_begin_1ac0b5832;
		}
		_iter_end_1ac0b5832:;
	};
}



inline void _1a886ed8c_traitData(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1a8864018_traitHash>* _110934_hash, jule::Ptr<_1c0c84850_Trait>* _110957_old) {
	if (((*((*((*(_110934_hash))))._field_t))._field_Methods.len() == 0LL)) {
		return;;
	};
	jule::Str _11139_ident = static__1a87a2be3_traitDecl((*((*(_110934_hash))))._field_t);;
	if (((*((*(_110934_hash))))._field_t != (*(_110957_old)))) {
		if (((*(_110957_old)) != nullptr)) {
			_1a8866009_doneIndent(_self_);
			_1a8866207_indent(_self_);
			_1a8865b0d_write(_self_, jule::Str::lit("};\n", 3));
		};
		_1a8865b0d_write(_self_, jule::Str::lit("static ", 7));
		_1a8865b0d_write(_self_, _11139_ident);
		_1a8865b0d_write(_self_, jule::Str::lit("MptrData ", 9));
		_1a8865b0d_write(_self_, _11139_ident);
		_1a8865b0d_write(_self_, jule::Str::lit("_mptr_data[] = {\n", 17));
		(*(_110957_old))=(*((*(_110934_hash))))._field_t;
		_1a8865d0b_addIndent(_self_);
	};
	_1a8866207_indent(_self_);
	_1a8865b0d_write(_self_, jule::Str::lit("{\n", 2));
	_1a8865d0b_addIndent(_self_);
	_1a886ea29_traitDataMethods(_self_, &((*((*(_110934_hash))))._field_t), _110934_hash);
	_1a8866009_doneIndent(_self_);
	_1a8866207_indent(_self_);
	_1a8865b0d_write(_self_, jule::Str::lit("},\n", 3));
}



inline void _1a887008a_traitDatas(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	jule::Ptr<_1c0c84850_Trait> _113817_old = nullptr;;
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0c0b6c:;
		if (it != expr_end) {
			jule::Ptr<_1a8864018_traitHash> _113921_hash = *it;
			{
				_1a886ed8c_traitData(_self_, &(_113921_hash), &(_113817_old));
			}
			_iter_next_1ac0c0b6c:;
			++it;
			goto _iter_begin_1ac0c0b6c;
		}
		_iter_end_1ac0c0b6c:;
	};
	if ((_113817_old != nullptr)) {
		_1a8866009_doneIndent(_self_);
		_1a8866207_indent(_self_);
		_1a8865b0d_write(_self_, jule::Str::lit("};\n", 3));
	};
}



inline void _1a8870288_globals(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0c29d7:;
		if (it != expr_end) {
			jule::Ptr<_1c0d2b94c_Var> _115021_v = *it;
			{
				_1a8865b0d_write(_self_, _1a887a7b0_kind((*(_self_))._field_tc.ptr(), (*((*(_115021_v))._field_Kind))._field_Kind));
				_1a8865b0d_write(_self_, jule::Str::lit(" ", 1));
				_1a8865b0d_write(_self_, static__1a87a3ac3_var(_115021_v));
				_1a8865b0d_write(_self_, jule::Str::lit(" = ", 3));
				_1a879a5ae_model((*(_self_))._field_ec, (*((*((*(_115021_v))._field_Value))._field_Data))._field_Model);
				_1a8865b0d_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ac0c29d7:;
			++it;
			goto _iter_begin_1ac0c29d7;
		}
		_iter_end_1ac0c29d7:;
	};
}



inline void _1a8870486_decls(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	_1a8868d64_traitDecls(_self_);
	_1a886931a_structurePlainDecls(_self_);
	_1a886ae87_structureDecls(_self_);
	(*(_self_))._field_headPos=static_cast<jule::I64>(_21cd68a91_Len(&(*(_self_))._field_Obj));
	_1a886b185_structureMethodDecls(_self_);
	_1a886c593_funcDecls(_self_);
	_1a8865b0d_write(_self_, jule::Str::lit("\n\n", 2));
	_1a886cb04_traitDataTypes(_self_);
	_1a8865b0d_write(_self_, jule::Str::lit("\n\n", 2));
	_1a886e6b6_traitWrappers(_self_);
	_1a8865b0d_write(_self_, jule::Str::lit("\n\n", 2));
	_1a887008a_traitDatas(_self_);
	_1a8865b0d_write(_self_, jule::Str::lit("\n\n", 2));
	(*(_self_))._field_declPos=static_cast<jule::I64>(_21cd68a91_Len(&(*(_self_))._field_Obj));
	_1a8870288_globals(_self_);
}



inline void _1a887073e_structureMethods(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _117841_s) {
	{
		auto expr = &((*((*(_117841_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0ca825:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _117921_f = *it;
			{
				_1a886dce2_func(_self_, &(_117921_f));
				_1a8865b0d_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1ac0ca825:;
			++it;
			goto _iter_begin_1ac0ca825;
		}
		_iter_end_1ac0ca825:;
	};
}



inline void _1a88709e7_structureOstream(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _118541_s) {
	_1a8866207_indent(_self_);
	_1a8865b0d_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1a8865b0d_write(_self_, static__1a87a3540_structureIns(_118541_s));
	_1a8865b0d_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1a8865d0b_addIndent(_self_);
	_1a8866207_indent(_self_);
	jule::Ptr<_1c0c715a6_Fn> _119313_fts = _1c0c60441_FindMethod((*(_118541_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1c0d2d168_Str(_119313_fts)) {
		_1a8865b0d_write(_self_, jule::Str::lit("_Stream << ", 11));
		_1a8865b0d_write(_self_, static__1a87a2660_func(&(_119313_fts)));
		_1a8865b0d_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1a8865b0d_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1a879b329_cstrBytes(&((*(_self_))._field_Obj), (*((*((*(_118541_s))))._field_Decl))._field_Ident);
		_1a8865b0d_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_118541_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac0d03eb:;
			if (it != expr_end) {
				jule::I64 _120318_i = it - expr->begin();
				jule::Ptr<_1c0c5d829_FieldIns> _120325_f = *it;
				{
					_1a8866207_indent(_self_);
					_1a8865b0d_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1a879b329_cstrBytes(&((*(_self_))._field_Obj), (*((*(_120325_f))._field_Decl))._field_Ident);
					_1a8865b0d_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1c0c5e3c9_StructIns> _121017_strct = _1c0db41dd_Struct((*(_120325_f))._field_Kind.ptr());;
					if ((((_121017_strct != nullptr) && ((*(_121017_strct))._field_Decl != nullptr)) && (*((*(_121017_strct))._field_Decl))._field_Binded)) {
						_1a8865b0d_write(_self_, jule::Str::lit(" cpp.", 5));
						_1a8865b0d_write(_self_, static__1a87a3809_field(&((*(_120325_f))._field_Decl)));
						_1a8865b0d_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1a8865b0d_write(_self_, jule::Str::lit("\" << _Src.", 10));
						_1a8865b0d_write(_self_, static__1a87a3809_field(&((*(_120325_f))._field_Decl)));
					};
					if (((_120318_i + 1LL) < (*((*(_118541_s))))._field_Fields.len())) {
						_1a8865b0d_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1a8865b0d_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1ac0d03eb:;
				++it;
				_120318_i++;
				goto _iter_begin_1ac0d03eb;
			}
			_iter_end_1ac0d03eb:;
		};
		_1a8866207_indent(_self_);
		_1a8865b0d_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1a8866207_indent(_self_);
	_1a8865b0d_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1a8866009_doneIndent(_self_);
	_1a8865b0d_write(_self_, jule::Str::lit("}", 1));
}



inline void _1a8870ca0_structureIns(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _123637_s) {
	_1a887073e_structureMethods(_self_, _123637_s);
	_1a8865b0d_write(_self_, jule::Str::lit("\n\n", 2));
	_1a88709e7_structureOstream(_self_, _123637_s);
}



inline void _1a8871058_structure(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0c5b64b_Struct>* _124234_s) {
	{
		auto expr = &((*((*(_124234_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0d9a76:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5e3c9_StructIns> _124321_ins = *it;
			{
				_1a8870ca0_structureIns(_self_, &(_124321_ins));
				_1a8865b0d_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1ac0d9a76:;
			++it;
			goto _iter_begin_1ac0d9a76;
		}
		_iter_end_1ac0d9a76:;
	};
}



inline void _1a8871256_structures(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac0da3c3:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5b64b_Struct> _125021_s = *it;
			{
				if (((*(_125021_s))._field_Token != nullptr)) {
					_1a8871058_structure(_self_, &(_125021_s));
					_1a8865b0d_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1ac0da3c3:;
			++it;
			goto _iter_begin_1ac0da3c3;
		}
		_iter_end_1ac0da3c3:;
	};
}



inline void _1a8871454_funcs(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	_1a8868968_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c0cd6462_Package>*)>([=](jule::Ptr<_1c0cd6462_Package>* _125935_pkg) mutable -> void {
		_1a88723de_iterFiles(_125935_pkg, jule::Fn<void(jule::Ptr<_1c0d7a12c_SymbolTable>*)>([=](jule::Ptr<_1c0d7a12c_SymbolTable>* _126036_file) mutable -> void {
			{
				auto expr = &((*((*(_126036_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ac0de63b:;
				if (it != expr_end) {
					jule::Ptr<_1c0c715a6_Fn> _126129_f = *it;
					{
						if (((!(_21a957c48_Test)) && _1a88826a7_hasDirective(&((*(_126129_f))._field_Directives), jule::Str::lit("test", 4)))) {
							goto _iter_next_1ac0de63b;
						};
						if (((!((*(_126129_f))._field_Binded)) && ((*(_126129_f))._field_Token != nullptr))) {
							_1a886dce2_func(_self_, &(_126129_f));
							_1a8865b0d_write(_self_, jule::Str::lit("\n\n", 2));
						};
					}
					_iter_next_1ac0de63b:;
					++it;
					goto _iter_begin_1ac0de63b;
				}
				_iter_end_1ac0de63b:;
			};
		}));
	}));
}



inline void _1a887170c_pushInit(jule::Ptr<_1a8865459_ObjectCoder> _self_, jule::Ptr<_1c0cd6462_Package>* _127433_pkg) {
	_1a88723de_iterFiles(_127433_pkg, jule::Fn<void(jule::Ptr<_1c0d7a12c_SymbolTable>*)>([=](jule::Ptr<_1c0d7a12c_SymbolTable>* _127532_file) mutable -> void {
		{
			auto expr = &((*((*(_127532_file))))._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac0e21cc:;
			if (it != expr_end) {
				jule::Ptr<_1c0c715a6_Fn> _127620_f = *it;
				{
					if ((*(_127620_f))._field_Ident.equal("init", 4)) {
						_1a8866207_indent(_self_);
						_1a8865b0d_write(_self_, static__1a87a2660_func(&(_127620_f)));
						_1a8865b0d_write(_self_, jule::Str::lit("();\n", 4));
					};
				}
				_iter_next_1ac0e21cc:;
				++it;
				goto _iter_begin_1ac0e21cc;
			}
			_iter_end_1ac0e21cc:;
		};
	}));
}



inline void _1a887190a_initCaller(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	_1a8865b0d_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1a8865d0b_addIndent(_self_);
	_1a8868968_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c0cd6462_Package>*)>([=](jule::Ptr<_1c0cd6462_Package>* _128935_pkg) mutable -> void {
		_1a887170c_pushInit(_self_, _128935_pkg);
	}));
	_1a8866009_doneIndent(_self_);
	_1a8865b0d_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1a8871b08_end(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	_1a8865b0d_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_21a957c48_Test) {
		_1a8865b0d_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1a8865b0d_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1a8865b0d_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1a8871d06_serializeHead(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	_1a88686b0_prepareStructures(_self_);
	_1a8868b66_buildTraitMap(_self_);
	_1a886800b_head(_self_);
	_1a8865b0d_write(_self_, jule::Str::lit("\n", 1));
	_1a8870486_decls(_self_);
	if ((_21cd68a91_Len(&(*(_self_))._field_resultDecls) > 0LL)) {
		jule::Slice<jule::U8> _132417_head = jule::append(jule::Slice<jule::U8>::alloc(0LL, 0LL, 0),_21cd690ad_Buf(&(*(_self_))._field_Obj).slice(0LL, (*(_self_))._field_headPos));;
		(_132417_head).append(_21cd690ad_Buf(&(*(_self_))._field_resultDecls));;
		(*(_self_))._field_declPos+=_21cd68a91_Len(&(*(_self_))._field_resultDecls);
		(_132417_head).append(_21cd690ad_Buf(&(*(_self_))._field_Obj).slice((*(_self_))._field_headPos));;
		{
			_21cd69366_SetBuf(&(*(_self_))._field_Obj, _132417_head);
		};
	};
	_1a8865b0d_write(_self_, jule::Str::lit("\n", 1));
	_1a8871256_structures(_self_);
	_1a8871454_funcs(_self_);
	_1a887190a_initCaller(_self_);
	_1a8865b0d_write(_self_, jule::Str::lit("\n\n", 2));
	if ((_21cd68a91_Len(&(*(_self_))._field_anyObj) > 0LL)) {
		jule::Slice<jule::U8> _133817_head = jule::append(jule::Slice<jule::U8>::alloc(0LL, 0LL, 0),_21cd690ad_Buf(&(*(_self_))._field_Obj).slice(0LL, (*(_self_))._field_declPos));;
		(_133817_head).append(_21cd690ad_Buf(&(*(_self_))._field_anyObj));;
		(_133817_head).append(_21cd690ad_Buf(&(*(_self_))._field_Obj).slice((*(_self_))._field_declPos));;
		{
			_21cd69366_SetBuf(&(*(_self_))._field_Obj, _133817_head);
		};
	};
}



inline void _1a8872004_Serialize(jule::Ptr<_1a8865459_ObjectCoder> _self_) {
	_1a8871d06_serializeHead(_self_);
	_1a8871b08_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a8865459_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c19d3081_ObjectDeadCode> static__1c19d3526_new(jule::Ptr<_1c189de2a_IR>* _3424_ir) {
	return jule::new_ptr<_1c19d3081_ObjectDeadCode>(_1c19d3081_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1ab90e313_isLive(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Ptr<_1c0c84850_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1c0c84850_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ab91107e:;
			{
				_4117_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1ab910d81:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9110e5:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1ab9110e5:;
			++it;
			_5213_i++;
			goto _iter_begin_1ab9110e5;
		}
		_iter_end_1ab9110e5:;
	};
	return false;;
}

inline jule::Bool _1ab914d63_isLive(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Ptr<_1c0c744aa_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1c0c744aa_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ab916914:;
			{
				_4117_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1ab916859:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab917629:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1ab917629:;
			++it;
			_5213_i++;
			goto _iter_begin_1ab917629;
		}
		_iter_end_1ab917629:;
	};
	return false;;
}

inline jule::Bool _1ab91b276_isLive(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Ptr<_1c0c5e3c9_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1c0c5e3c9_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ab920c09:;
			{
				_4117_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1ab920a72:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab920cd6:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1ab920cd6:;
			++it;
			_5213_i++;
			goto _iter_begin_1ab920cd6;
		}
		_iter_end_1ab920cd6:;
	};
	return false;;
}

inline jule::Bool _1ab923a97_isLive(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Ptr<_1c0d2b94c_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1c0d2b94c_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ab9256e2:;
			{
				_4117_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1ab9255c1:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab92567b:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1ab92567b:;
			++it;
			_5213_i++;
			goto _iter_begin_1ab92567b;
		}
		_iter_end_1ab92567b:;
	};
	return false;;
}



inline void _1ab90e6cb_pushLive(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Ptr<_1c0c84850_Trait> _6035_t) {
	{
		
{
			_case_begin_1ab913290:;
			{
				{ jule::Slice<jule::Ptr<_1c0c84850_Trait>> &__jule_push_dest = (*(_self_))._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1ab913092:;
	};
}

inline void _1ab9151e8_pushLive(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Ptr<_1c0c744aa_FnIns> _6035_t) {
	{
		
{
			_case_begin_1ab9192a7:;
			{
				{ jule::Slice<jule::Ptr<_1c0c744aa_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1ab919186:;
	};
}

inline void _1ab91b809_pushLive(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Ptr<_1c0c5e3c9_StructIns> _6035_t) {
	{
		
{
			_case_begin_1ab91d0ad:;
			{
				{ jule::Slice<jule::Ptr<_1c0c5e3c9_StructIns>> &__jule_push_dest = (*(_self_))._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1ab91ce26:;
	};
}

inline void _1ab923e60_pushLive(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Ptr<_1c0d2b94c_Var> _6035_t) {
	{
		
{
			_case_begin_1ab927c88:;
			{
				{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = (*(_self_))._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1ab927bcd:;
	};
}



inline void _1c1a13820_setReferencesAsLive(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Ptr<_1c0c77656_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7713_i = 0LL;;
	for (; (_7713_i < _1c0c77d4e_Len((*(_7344_rs)).ptr())); (_7713_i)++) {
		{
			jule::Any _7917_ref = _1c0c78190_At((*(_7344_rs)).ptr(), _7713_i);;
			{
				auto &_match_expr{ _7917_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1ab90d19c:;
					{
						jule::Ptr<_1c0c84850_Trait> _8221_t = _7917_ref.cast_ptr<_1c0c84850_Trait>(&__jule_any_type10);;
						if (_1ab90e313_isLive(_self_, &(_8221_t))) {
							goto _iter_next_1ab90c586;
						};
						_1ab90e6cb_pushLive(_self_, _8221_t);
						{
							auto expr = &((*(_8221_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ab9105cd:;
							if (it != expr_end) {
								jule::Ptr<_1c0c715a6_Fn> _8729_ins = *it;
								{
									{
										auto expr = &((*(_8729_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ab912d0b:;
										if (it != expr_end) {
											jule::Ptr<_1c0c744aa_FnIns> _8833_mins = *it;
											{
												if (_1ab914d63_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1ab912d0b;
												};
												_1ab9151e8_pushLive(_self_, _8833_mins);
												_1c1a13820_setReferencesAsLive(_self_, &((*(_8833_mins))._field_Refers));
											}
											_iter_next_1ab912d0b:;
											++it;
											goto _iter_begin_1ab912d0b;
										}
										_iter_end_1ab912d0b:;
									};
								}
								_iter_next_1ab9105cd:;
								++it;
								goto _iter_begin_1ab9105cd;
							}
							_iter_end_1ab9105cd:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1ab90d213:;
					{
						jule::Ptr<_1c0c744aa_FnIns> _9721_f = _7917_ref.cast_ptr<_1c0c744aa_FnIns>(&__jule_any_type7);;
						if (_1ab914d63_isLive(_self_, &(_9721_f))) {
							goto _match_end_1ab90c93d;
						};
						if ((((*(_9721_f))._field_Owner != nullptr) && (!((*((*(_9721_f))._field_Decl))._field_Statically)))) {
							if ((!(_1ab91b276_isLive(_self_, &((*(_9721_f))._field_Owner))))) {
								_1ab91b809_pushLive(_self_, (*(_9721_f))._field_Owner);
								_1c1a13820_setReferencesAsLive(_self_, &((*((*(_9721_f))._field_Owner))._field_Refers));
							};
						};
						_1ab9151e8_pushLive(_self_, _9721_f);
						_1c1a13820_setReferencesAsLive(_self_, &((*(_9721_f))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1ab90d279:;
					{
						jule::Ptr<_1c0d2b94c_Var> _11021_v = _7917_ref.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8);;
						if (_1ab923a97_isLive(_self_, &(_11021_v))) {
							goto _match_end_1ab90c93d;
						};
						_1ab923e60_pushLive(_self_, _11021_v);
						_1c1a13820_setReferencesAsLive(_self_, &((*(_11021_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1ab90d301:;
					{
						jule::Ptr<_1c0c5e3c9_StructIns> _11721_s = _7917_ref.cast_ptr<_1c0c5e3c9_StructIns>(&__jule_any_type9);;
						if (_1ab91b276_isLive(_self_, &(_11721_s))) {
							goto _match_end_1ab90c93d;
						};
						_1ab91b809_pushLive(_self_, _11721_s);
						_1c1a13820_setReferencesAsLive(_self_, &((*(_11721_s))._field_Refers));
						{
							auto expr = &((*(_11721_s))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ab928dcc:;
							if (it != expr_end) {
								jule::Ptr<_1c0c715a6_Fn> _12329_m = *it;
								{
									{
										auto expr = &((*(_12329_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ab92b95c:;
										if (it != expr_end) {
											jule::Ptr<_1c0c744aa_FnIns> _12433_ins = *it;
											{
												if (_1ab914d63_isLive(_self_, &(_12433_ins))) {
													goto _iter_next_1ab92b95c;
												};
												if (_1c1a164e3_isTraitMethod(&(_11721_s), &(_12433_ins))) {
													_1ab9151e8_pushLive(_self_, _12433_ins);
													_1c1a13820_setReferencesAsLive(_self_, &((*(_12433_ins))._field_Refers));
												};
											}
											_iter_next_1ab92b95c:;
											++it;
											goto _iter_begin_1ab92b95c;
										}
										_iter_end_1ab92b95c:;
									};
								}
								_iter_next_1ab928dcc:;
								++it;
								goto _iter_begin_1ab928dcc;
							}
							_iter_end_1ab928dcc:;
						};
					}
				}
				_match_end_1ab90c93d:;
			};
		}
	_iter_next_1ab90c586:;
	}
	_iter_end_1ab90c586:;;
}



inline void _1c1a13ac8_inits(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Ptr<_1c0cd6462_Package>* _14130_pkg) {
	{
		auto expr = &((*((*(_14130_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab923228:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _14221_file = *it;
			{
				{
					auto expr = &((*(_14221_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab92c2a9:;
					if (it != expr_end) {
						jule::Ptr<_1c0c715a6_Fn> _14325_f = *it;
						{
							if ((*(_14325_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1c0c744aa_FnIns> _14525_ins = (*(_14325_f))._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_1c0c744aa_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_14525_ins); };
								_1c1a13820_setReferencesAsLive(_self_, &((*(_14525_ins))._field_Refers));
							};
						}
						_iter_next_1ab92c2a9:;
						++it;
						goto _iter_begin_1ab92c2a9;
					}
					_iter_end_1ab92c2a9:;
				};
			}
			_iter_next_1ab923228:;
			++it;
			goto _iter_begin_1ab923228;
		}
		_iter_end_1ab923228:;
	};
}



inline void _1c1a13d81_collectLivePackage(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Ptr<_1c0cd6462_Package>* _15343_pkg) {
	_1c1a13ac8_inits(_self_, _15343_pkg);
	if (_21a957c48_Test) {
		{
			auto expr = &((*((*(_15343_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab931e6d:;
			if (it != expr_end) {
				jule::Ptr<_1c0d7a12c_SymbolTable> _15925_file = *it;
				{
					{
						auto expr = &((*(_15925_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab9328b9:;
						if (it != expr_end) {
							jule::Ptr<_1c0c715a6_Fn> _16029_f = *it;
							{
								if (_1c1a1612a_hasDirective(&((*(_16029_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1c0c744aa_FnIns> _16229_ins = (*(_16029_f))._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_1c0c744aa_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_16229_ins); };
									_1c1a13820_setReferencesAsLive(_self_, &((*(_16229_ins))._field_Refers));
								};
							}
							_iter_next_1ab9328b9:;
							++it;
							goto _iter_begin_1ab9328b9;
						}
						_iter_end_1ab9328b9:;
					};
				}
				_iter_next_1ab931e6d:;
				++it;
				goto _iter_begin_1ab931e6d;
			}
			_iter_end_1ab931e6d:;
		};
	};
}



inline void _1c1a1407e_collectLive(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab933579:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _17221_used = *it;
			{
				if ((!((*(_17221_used))._field_Binded))) {
					_1c1a13d81_collectLivePackage(_self_, &((*(_17221_used))._field_Package));
				};
			}
			_iter_next_1ab933579:;
			++it;
			goto _iter_begin_1ab933579;
		}
		_iter_end_1ab933579:;
	};
	_1c1a13d81_collectLivePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	jule::Ptr<_1c0c715a6_Fn> _18013_main = _1c0cd79e6_FindFn((*((*(_self_))._field_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1c0c744aa_FnIns> _18113_ins = (*(_18013_main))._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_1c0c744aa_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_18113_ins); };
	_1c1a13820_setReferencesAsLive(_self_, &((*(_18113_ins))._field_Refers));
}



inline void _1c1a14337_removeDeadGlobals(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c0d2b94c_Var>>* _18642_vars) {
	jule::I64 _18713_i = 0LL;;
	while ((_18713_i < (*(_18642_vars)).len())) {
		{
			jule::Ptr<_1c0d2b94c_Var> _18913_v = (*(_18642_vars))[_18713_i];;
			if (_1ab923a97_isLive(_self_, &(_18913_v))) {
				(_18713_i)++;
				goto _iter_next_1ab93866c;
			};
			(*(_18642_vars))=jule::append((*(_18642_vars)).slice(0LL, _18713_i),(*(_18642_vars)).slice((_18713_i + 1LL)));
		}
	_iter_next_1ab93866c:;
	}
	_iter_end_1ab93866c:;;
}



inline void _1c1a145e0_removeDeadFns(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c0c715a6_Fn>>* _19838_funcs) {
	jule::I64 _19913_i = 0LL;;
	while ((_19913_i < (*(_19838_funcs)).len())) {
		{
			jule::Ptr<_1c0c715a6_Fn> _20117_f = (*(_19838_funcs))[_19913_i];;
			jule::I64 _20217_j = 0LL;;
			while ((_20217_j < (*(_20117_f))._field_Instances.len())) {
				{
					jule::Ptr<_1c0c744aa_FnIns> _20417_ins = (*(_20117_f))._field_Instances[_20217_j];;
					if (_1ab914d63_isLive(_self_, &(_20417_ins))) {
						(_20217_j)++;
						goto _iter_next_1ab93b175;
					};
					(*(_20117_f))._field_Instances=jule::append((*(_20117_f))._field_Instances.slice(0LL, _20217_j),(*(_20117_f))._field_Instances.slice((_20217_j + 1LL)));
				}
			_iter_next_1ab93b175:;
			}
			_iter_end_1ab93b175:;;
			if (((*(_20117_f))._field_Instances.len() == 0LL)) {
				(*(_19838_funcs))=jule::append((*(_19838_funcs)).slice(0LL, _19913_i),(*(_19838_funcs)).slice((_19913_i + 1LL)));
				goto _iter_next_1ab9388d1;
			};
			(_19913_i)++;
		}
	_iter_next_1ab9388d1:;
	}
	_iter_end_1ab9388d1:;;
}



inline void _1c1a14898_removeDeadStructs(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c0c5b64b_Struct>>* _21942_structs) {
	jule::I64 _22013_i = 0LL;;
	while ((_22013_i < (*(_21942_structs)).len())) {
		{
			jule::Ptr<_1c0c5b64b_Struct> _22217_s = (*(_21942_structs))[_22013_i];;
			jule::I64 _22317_j = 0LL;;
			while ((_22317_j < (*(_22217_s))._field_Instances.len())) {
				{
					jule::Ptr<_1c0c5e3c9_StructIns> _22521_ins = (*(_22217_s))._field_Instances[_22317_j];;
					_1c1a145e0_removeDeadFns(_self_, &((*(_22521_ins))._field_Methods));
					if ((((*(_22521_ins))._field_Methods.len() != 0LL) || _1ab91b276_isLive(_self_, &(_22521_ins)))) {
						(_22317_j)++;
						goto _iter_next_1ab940036;
					};
					(*(_22217_s))._field_Instances=jule::append((*(_22217_s))._field_Instances.slice(0LL, _22317_j),(*(_22217_s))._field_Instances.slice((_22317_j + 1LL)));
				}
			_iter_next_1ab940036:;
			}
			_iter_end_1ab940036:;;
			if (((*(_22217_s))._field_Instances.len() == 0LL)) {
				(*(_21942_structs))=jule::append((*(_21942_structs)).slice(0LL, _22013_i),(*(_21942_structs)).slice((_22013_i + 1LL)));
				goto _iter_next_1ab93e530;
			};
			(_22013_i)++;
		}
	_iter_next_1ab93e530:;
	}
	_iter_end_1ab93e530:;;
}



inline void _1c1a14b51_removeDeadTraits(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c0c84850_Trait>>* _24141_traits) {
	jule::I64 _24213_i = 0LL;;
	while ((_24213_i < (*(_24141_traits)).len())) {
		{
			jule::Ptr<_1c0c84850_Trait> _24417_t = (*(_24141_traits))[_24213_i];;
			if ((!(_1ab90e313_isLive(_self_, &(_24417_t))))) {
				(*(_24141_traits))=jule::append((*(_24141_traits)).slice(0LL, _24213_i),(*(_24141_traits)).slice((_24213_i + 1LL)));
				goto _iter_next_1ab943e4c;
			};
			jule::I64 _24917_j = 0LL;;
			while ((_24917_j < (*(_24417_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1c0c5b64b_Struct> _25117_s = (*(_24417_t))._field_Implemented[_24917_j];;
					if (((*(_25117_s))._field_Instances.len() > 0LL)) {
						(_24917_j)++;
						goto _iter_next_1ab944645;
					};
					(*(_24417_t))._field_Implemented=jule::append((*(_24417_t))._field_Implemented.slice(0LL, _24917_j),(*(_24417_t))._field_Implemented.slice((_24917_j + 1LL)));
				}
			_iter_next_1ab944645:;
			}
			_iter_end_1ab944645:;;
			(_24213_i)++;
		}
	_iter_next_1ab943e4c:;
	}
	_iter_end_1ab943e4c:;;
}



inline void _1c1a14e09_removeDeadsFile(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Ptr<_1c0d7a12c_SymbolTable>* _26240_file) {
	_1c1a145e0_removeDeadFns(_self_, &((*((*(_26240_file))))._field_Funcs));
	_1c1a14898_removeDeadStructs(_self_, &((*((*(_26240_file))))._field_Structs));
	_1c1a14b51_removeDeadTraits(_self_, &((*((*(_26240_file))))._field_Traits));
	_1c1a14337_removeDeadGlobals(_self_, &((*((*(_26240_file))))._field_Vars));
}



inline void _1c1a151b2_removeDeadsPackage(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_, jule::Ptr<_1c0cd6462_Package>* _26943_pkg) {
	{
		auto expr = &((*((*(_26943_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab94979e:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _27021_file = *it;
			{
				_1c1a14e09_removeDeadsFile(_self_, &(_27021_file));
			}
			_iter_next_1ab94979e:;
			++it;
			goto _iter_begin_1ab94979e;
		}
		_iter_end_1ab94979e:;
	};
}



inline void _1c1a153b0_removeDeads(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab94a10c:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _27621_used = *it;
			{
				if ((!((*(_27621_used))._field_Binded))) {
					_1c1a151b2_removeDeadsPackage(_self_, &((*(_27621_used))._field_Package));
				};
			}
			_iter_next_1ab94a10c:;
			++it;
			goto _iter_begin_1ab94a10c;
		}
		_iter_end_1ab94a10c:;
	};
	_1c1a151b2_removeDeadsPackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
}



inline void _1c1a155ad_elimanate(jule::Ptr<_1c19d3081_ObjectDeadCode> _self_) {
	_1c1a1407e_collectLive(_self_);
	_1c1a153b0_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1c19d3081_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1c189de2a_IR__jule_tuple_s_21ce0c86b_Log static__1c189e38c_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1c189de2a_IR__jule_tuple_s_21ce0c86b_Log __jule_func_result;
	jule::Ptr<_1c189b5dc_JuleImporter> _2813_importer = static__1c189b9d8_New(_1c18a0d72_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1c0c38a46_Ast>> _2913_files;;
	jule::Slice<_21ce0c86b_Log> _2924_logs;;
	({
		__jule_tuple_sx_1c0c38a46_Ast__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c189cec3_ImportPackage(_2813_importer.ptr(), _2721_path, true);
		_2913_files = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Str _339_root = _2721_path;;
	if ((_2913_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0cd6462_Package> _3913_pkg;;
	({
		__jule_tuple_x_1c0cd6462_Package__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c0dd16e4_AnalyzePackage(_2913_files, jule::Trait<_1c0cd0626_Importer>(_2813_importer, 0), _2732_flags);
		_3913_pkg = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1c189de2a_IR> _4413_ir = jule::new_ptr<_1c189de2a_IR>(_1c189de2a_IR{._field_Root=_339_root, ._field_Main=_3913_pkg, ._field_Used=_1c189bc6e_AllPackages(_2813_importer.ptr()), });;
	(*(_4413_ir))._field_Passes=_1c18a0b63_getAllUniquePasses(&((*(_4413_ir))._field_Main), (*(_4413_ir))._field_Used);
	__jule_func_result.__jule_result_arg0 = _4413_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1c189e876_appendStructs(_1c189de2a_IR* _self_, jule::Ptr<_1c0cd6462_Package>* _5633_p, jule::Slice<jule::Ptr<_1c0c5b64b_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8c56d6:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab8c60ee:;
					if (it != expr_end) {
						jule::Ptr<_1c0c5b64b_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1c0c5b64b_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1ab8c60ee:;
						++it;
						goto _iter_begin_1ab8c60ee;
					}
					_iter_end_1ab8c60ee:;
				};
			}
			_iter_next_1ab8c56d6:;
			++it;
			goto _iter_begin_1ab8c56d6;
		}
		_iter_end_1ab8c56d6:;
	};
}



inline jule::Slice<jule::Ptr<_1c0c5b64b_Struct>> _1c189eb0c_GetAllStructures(_1c189de2a_IR* _self_) {
	jule::Slice<jule::Ptr<_1c0c5b64b_Struct>> _6917_buffer = nullptr;;
	_1c189e876_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8c7111:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_1c189e876_appendStructs(_self_, &((*(_7121_u))._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1ab8c7111:;
			++it;
			goto _iter_begin_1ab8c7111;
		}
		_iter_end_1ab8c7111:;
	};
	return _6917_buffer;;
}



inline void _1c189ee70_appendGlobals(_1c189de2a_IR* _self_, jule::Ptr<_1c0cd6462_Package>* _7933_p, jule::Slice<jule::Ptr<_1c0d2b94c_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8c89b4:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab8c93cc:;
					if (it != expr_end) {
						jule::Ptr<_1c0d2b94c_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*(_8125_v))._field_Binded))) && (!((*(_8125_v))._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1ab8c93cc:;
						++it;
						goto _iter_begin_1ab8c93cc;
					}
					_iter_end_1ab8c93cc:;
				};
			}
			_iter_next_1ab8c89b4:;
			++it;
			goto _iter_begin_1ab8c89b4;
		}
		_iter_end_1ab8c89b4:;
	};
}



inline jule::Slice<jule::Ptr<_1c0d2b94c_Var>> _1c18a0206_GetAllGlobals(_1c189de2a_IR* _self_) {
	jule::Slice<jule::Ptr<_1c0d2b94c_Var>> _9217_buffer = nullptr;;
	_1c189ee70_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8c9b4c:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_1c189ee70_appendGlobals(_self_, &((*(_9421_u))._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1ab8c9b4c:;
			++it;
			goto _iter_begin_1ab8c9b4c;
		}
		_iter_end_1ab8c9b4c:;
	};
	return _9217_buffer;;
}



inline void _1c18a0404_Order(_1c189de2a_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1c189eb0c_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1c18a0206_GetAllGlobals(_self_);
	static__1c18a223b_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1c18a246c_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1c189de2a_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0c5e74d_Str(_1c0c5e3c9_StructIns* _self_) {
	_21cd5e16e_StrBuilder _23913_kind = static__21cd5e48d_New(32LL);;
	_21cd67d15_WriteStr(&_23913_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_21cd680bd_WriteByte(&_23913_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa4db41e:;
			if (it != expr_end) {
				jule::I64 _24317_i = it - expr->begin();
				jule::Ptr<_1c0dadb33_InsGeneric> *_24320_g = it;
				{
					_21cd67d15_WriteStr(&_23913_kind, _1c0db08d2_Str((*((*(_24320_g))))._field_Kind.ptr()));
					if ((_24317_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_21cd680bd_WriteByte(&_23913_kind, ',');
					};
				}
				_iter_next_1aa4db41e:;
				++it;
				_24317_i++;
				goto _iter_begin_1aa4db41e;
			}
			_iter_end_1aa4db41e:;
		};
		_21cd680bd_WriteByte(&_23913_kind, ']');
	};
	return _21cd6860c_Str(&_23913_kind);;
}



inline jule::Bool _1c0c5ea8e_Equal(jule::Ptr<_1c0c5e3c9_StructIns> _self_, jule::Ptr<_1c0db0519_TypeKind> _25521_other) {
	jule::Ptr<_1c0c5e3c9_StructIns> _2569_s = _1c0db41dd_Struct(_25521_other.ptr());;
	if ((_2569_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2569_s))._field_Decl)) {
		return false;;
	};
	if (((*(_self_))._field_Generics.len() != (*(_2569_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _26913_i = 0LL;;
	for (; (_26913_i < (*(_self_))._field_Generics.len()); (_26913_i)++) {
		{
			if ((!(_1c0db0c23_Equal((*((*(_self_))._field_Generics[_26913_i]))._field_Kind, (*((*(_2569_s))._field_Generics[_26913_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1aa4e0566:;
	}
	_iter_end_1aa4e0566:;;
	return true;;
}



inline jule::Bool _1c0c60045_Same(_1c0c5e3c9_StructIns* _self_, jule::Ptr<_1c0c5e3c9_StructIns> _28319_s) {
	if ((((*(_self_))._field_Decl != (*(_28319_s))._field_Decl) || ((*(_28319_s))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4e23d1:;
		if (it != expr_end) {
			jule::I64 _28713_i = it - expr->begin();
			jule::Ptr<_1c0dadb33_InsGeneric> *_28716_g = it;
			{
				jule::Ptr<_1c0dadb33_InsGeneric> _28813_g2 = (*(_28319_s))._field_Generics[_28713_i];;
				if ((((*((*((*(_28716_g))))._field_Kind))._field_BindIdent != (*((*(_28813_g2))._field_Kind))._field_BindIdent) || (!(_1c0db0c23_Equal((*((*(_28716_g))))._field_Kind, (*(_28813_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1aa4e23d1:;
			++it;
			_28713_i++;
			goto _iter_begin_1aa4e23d1;
		}
		_iter_end_1aa4e23d1:;
	};
	return true;;
}



inline jule::Ptr<_1c0c715a6_Fn> _1c0c60441_FindMethod(_1c0c5e3c9_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4e578b:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _29921_f = *it;
			{
				if ((((*(_29921_f))._field_Statically == _29841_statically) && ((*(_29921_f))._field_Ident == _29829_ident))) {
					return _29921_f;;
				};
			}
			_iter_next_1aa4e578b:;
			++it;
			goto _iter_begin_1aa4e578b;
		}
		_iter_end_1aa4e578b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c5d829_FieldIns> _1c0c60782_FindField(_1c0c5e3c9_StructIns* _self_, jule::Str _30928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4e6aab:;
		if (it != expr_end) {
			jule::Ptr<_1c0c5d829_FieldIns> _31021_f = *it;
			{
				if (((*((*(_31021_f))._field_Decl))._field_Ident == _30928_ident)) {
					return _31021_f;;
				};
			}
			_iter_next_1aa4e6aab:;
			++it;
			goto _iter_begin_1aa4e6aab;
		}
		_iter_end_1aa4e6aab:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0d2b94c_Var> _1c0c60ac3_FindStatic(_1c0c5e3c9_StructIns* _self_, jule::Str _32029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4e7ccc:;
		if (it != expr_end) {
			jule::Ptr<_1c0d2b94c_Var> _32121_v = *it;
			{
				if (((*(_32121_v))._field_Ident == _32029_ident)) {
					return _32121_v;;
				};
			}
			_iter_next_1aa4e7ccc:;
			++it;
			goto _iter_begin_1aa4e7ccc;
		}
		_iter_end_1aa4e7ccc:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c0c5e3c9_StructIns _Src) {
	_Stream << _1c0c5e74d_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_21d2830a9_Cmd> static__21d2834c7_New(jule::Str _2619_path) {
	return jule::new_ptr<_21d2830a9_Cmd>(_21d2830a9_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _21d2836c5_Spawn(_21d2830a9_Cmd* _self_) {
	({
		auto except = _21d2d34a0_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _21d283b59_Wait(_21d2830a9_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _21d2d3934_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _21d2d34a0_spawn(_21d2830a9_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:78:13"));;
	};
	jule::Str _809_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8113_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8113_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	if ((_21b97b7b5_Fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), F_SETFD, static_cast<jule::I64>((fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), F_GETFD) | FD_CLOEXEC))) == -1LL)) {
		_21b9a9040_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
		_21b9a9040_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	(*(_self_))._field_attrs._field_pid=static_cast<jule::I64>(fork());
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1a9a238be:;
			{
				return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a9a22cdb:;
			{
				_21b9a9040_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
				jule::Slice<jule::Str> _9617_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_9617_args[0LL]=_809_path;
				(_9617_args).append((*(_self_))._field_Args);;
				({
					auto except = _21d2d324c_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
				_21d2d301b_execvp(&(_809_path), &(_9617_args));
				jule::Str _10113_code = _21d2ce336_Itoa(static_cast<jule::I64>(_21a958a5c_GetLastErrno()));;
				{
					_21b9a946e_Write(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), (&(_10113_code[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_10113_code.len())));
				};
				_21b9a9040_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
				_21d2d4c43_Exit(1LL);
			}
		}
		else {
			_case_begin_1a9a1d666:;
			{
				_21b9a9040_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
				jule::Array<jule::U8,16> _10721_buf = jule::Array<jule::U8,16>(0);;
				jule::I64 _10813_n = _21b9a8b99_Read(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])), (&(_10721_buf[0LL])), 16LLU);;
				_21b9a9040_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
				if ((_10813_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _11217_code = 0;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21d28495c_AtoiBp((&(_10721_buf[0LL])), _10813_n);
						_11217_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional(jule::Any(_21d2d41c6_processErrorFromCode(_11217_code), &__jule_any_type0));
				};
			}
		}
		_match_end_1a9a20c0c:;
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _21d2d3934_wait(_21d2830a9_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:130:13"));;
	};
	jule::I64 _13213_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13213_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>(jule::Any(_21d2d4429_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_13213_stat)));;
}





std::ostream &operator<<(std::ostream &_Stream, _21d2830a9_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline void _21b93b137_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _21b96bee2_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	jule::I64 _739_n = 0LL;;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
			}
		_iter_next_1a8be27a3:;
		}
		_iter_end_1a8be27a3:;;
	};
	if ((_739_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _809_buf = jule::Slice<jule::U8>::alloc(_739_n, _739_n, 0);;
	_739_n=0LL;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
				_809_buf[_739_n]=_6924_s[_739_n];
			}
		_iter_next_1a8be2c04:;
		}
		_iter_end_1a8be2c04:;;
	};
	return static_cast<jule::Str>(_809_buf);;
}



inline jule::I64 _21a958a5c_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _21b97b7b5_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg) {
	return static_cast<jule::I64>(fcntl(_5410_handle, _5423_cmd, _5433_arg));;
}



inline jule::I64 _21b97bb39_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return static_cast<jule::I64>(stat(((char*)(_5916_path)), _5933_stat));;
}



inline jule::I64 _21b97c068_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode) {
	return static_cast<jule::I64>(open(((char*)(_6416_path)), _6429_flag, _6440_mode));;
}



inline jule::U8* _21b97c3dc_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _21b97c8d7_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _21b97cba1_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I64 _21b97ce6a_Closedir(DIR* _8124_dir) {
	return static_cast<jule::I64>(closedir(_8124_dir));;
}



inline jule::I64 _21b97d872_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_9017_path)), _9030_mode));;
}



inline jule::I64 _21b97db3b_Rmdir(jule::U8* _9517_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_9517_path))));;
}



inline jule::I64 _21b97de05_Unlink(jule::U8* _9818_path) {
	return static_cast<jule::I64>(unlink(((char*)(_9818_path))));;
}



inline jule::I64 _21b9a8b99_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _21b9a9040_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _21b9a946e_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _21b9a96a0_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _21b9b7081_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline jule::I64 _21ba636b0_getLastOsError(void) {
	jule::I64 _305_err = _21a958a5c_GetLastErrno();;
	{
		auto &_match_expr{ _305_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a8c46829:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a8c461db:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1a8c46263:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1a8c462da:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a8c4654e:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a8c465b5:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a8c4662b:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1a8c46164:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1a8c4610e:;
	};
}



inline jule::Slice<jule::Str> _21ba921d3_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _21ba92678_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _21ba93602_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _21ba93602_getwd(void) {
	jule::U8* _119_buff = _21b97c3dc_Getcwd(nullptr, 0LLU);;
	if ((_119_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_21ba636b0_getLastOsError(), &__jule_any_type0));
	};
	jule::Str _155_pwd = _21b96bee2_BytePtrToStr(_119_buff);;
	{
		_21b93b137_Free(_119_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _155_pwd);;
}



inline jule::Bool _21cb9b077_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_21cc0b1b4__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _21cc147b6_isExcludingLatin(_21cba52d4_Letter, _7613_r);;
}



inline jule::Bool _21cc13b39_is16(jule::Slice<_21cc11d9b_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a98b4111:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_21cc11d9b_Range16* _19413_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19413_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19413_range))._field_Hi)) {
							return (((*(_19413_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19413_range))._field_Lo),(*(_19413_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1a98b4111:;
				++it;
				_19313_i++;
				goto _iter_begin_1a98b4111;
			}
			_iter_end_1a98b4111:;
		};
		return false;;
	};
	jule::I64 _2089_lo = 0LL;;
	jule::I64 _2099_hi = _1919_ranges.len();;
	while ((_2089_lo < _2099_hi)) {
		{
			jule::I64 _2119_m = (_2089_lo + ((_2099_hi - _2089_lo) >> 1LLU));;
			_21cc11d9b_Range16* _2129_range = (&(_1919_ranges[_2119_m]));;
			{
				if ((((*(_2129_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2129_range))._field_Hi))) {
					return (((*(_2129_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2129_range))._field_Lo),(*(_2129_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2129_range))._field_Lo)) {
					_2099_hi=_2119_m;
				} else {
					_2089_lo=static_cast<jule::I64>((_2119_m + 1LL));
				};
			};
		}
	_iter_next_1a98b2d9b:;
	}
	_iter_end_1a98b2d9b:;;
	return false;;
}



inline jule::Bool _21cc13ead_is32(jule::Slice<_21cc123c9_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a98ba106:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_21cc123c9_Range32* _23113_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23113_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23113_range))._field_Hi)) {
							return (((*(_23113_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23113_range))._field_Lo),(*(_23113_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1a98ba106:;
				++it;
				_23013_i++;
				goto _iter_begin_1a98ba106;
			}
			_iter_end_1a98ba106:;
		};
		return false;;
	};
	jule::I64 _2459_lo = 0LL;;
	jule::I64 _2469_hi = _2289_ranges.len();;
	while ((_2459_lo < _2469_hi)) {
		{
			jule::I64 _2489_m = (_2459_lo + ((_2469_hi - _2459_lo) >> 1LLU));;
			_21cc123c9_Range32* _2499_range = (&(_2289_ranges[_2489_m]));;
			{
				if ((((*(_2499_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2499_range))._field_Hi))) {
					return (((*(_2499_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2499_range))._field_Lo),(*(_2499_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2499_range))._field_Lo)) {
					_2469_hi=_2489_m;
				} else {
					_2459_lo=static_cast<jule::I64>((_2489_m + 1LL));
				};
			};
		}
	_iter_next_1a98b6c6d:;
	}
	_iter_end_1a98b6c6d:;;
	return false;;
}



inline jule::Bool _21cc147b6_isExcludingLatin(jule::Ptr<_21cc12880_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_21cc11d9b_Range16> *_28010_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2829_off = (*(_27821_rangeTab))._field_LatinOffset;;
		if ((((*(_28010_R16)).len() > _2829_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28010_R16))[((*(_28010_R16)).len() - 1LL)]._field_Hi)))) {
			return _21cc13b39_is16((*(_28010_R16)).slice(_2829_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_21cc123c9_Range32> *_2876_R32 = &((*(_27821_rangeTab))._field_R32);;
	if ((((*(_2876_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2876_R32))[0LL]._field_Lo)))) {
		return _21cc13ead_is32((*(_2876_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _21cc14a80_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_21cc0b1b4__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _21cc147b6_isExcludingLatin(_21cbab83a_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _21ce5a556_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1865_p0 = _18215_p[0LL];;
	jule::U8 _1875_x = _21ce593ac_first[static_cast<jule::I64>(_1865_p0)];;
	if ((_1875_x >= 240LLU)) {
		jule::I32 _1929_mask = static_cast<jule::I32>(((_1875_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1929_mask))) | (65533LL & _1929_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1955_sz = static_cast<jule::I64>((_1875_x & 7LLU));;
	_21ce59940_acceptRange _1965_accept = _21ce59c4d_acceptRanges[static_cast<jule::I64>((_1875_x >> 4LLU))];;
	if ((_18215_p.len() < _1955_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2005_b1 = _18215_p[1LL];;
	if (((_2005_b1 < _1965_accept._field_lo) || (_1965_accept._field_hi < _2005_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1865_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2005_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2075_b2 = _18215_p[2LL];;
	if (((_2075_b2 < 128LLU) || (191LL < _2075_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1865_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2075_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2145_b3 = _18215_p[3LL];;
	if (((_2145_b3 < 128LLU) || (191LL < _2145_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1865_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2075_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2145_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _21ce5ab61_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2805_end = _27619_p.len();;
	jule::I64 _2819_start = (_2805_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_2819_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2899_lim = (_2805_end - 4LL);;
	if ((_2899_lim < 0LL)) {
		_2899_lim=0LL;
	};
	(_2819_start)--;
	for (; (_2819_start >= _2899_lim); (_2819_start)--) {
		{
			if (_21ce5c68a_RuneStart(_27619_p[_2819_start])) {
				goto _iter_end_1a990a50e;
			};
		}
	_iter_next_1a990a50e:;
	}
	_iter_end_1a990a50e:;;
	if ((_2819_start < 0LL)) {
		_2819_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21ce5a556_DecodeRune(_27619_p.slice(_2819_start, _2805_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_2819_start + __jule_func_result.__jule_result_arg1) != _2805_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _21ce5b9b9_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _21ce5bd3d_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _21ce5bd3d_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4145_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4145_i <= 2047LLU)) {
			_case_begin_1a991de07:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4145_i > 1114111LLU) || ((55296LL <= _4145_i) && (_4145_i <= 57343LLU))) {
			_case_begin_1a991e226:;
			{
				_41242_r=128LL;
				goto _case_begin_1a991bd8e;
			}
		}
		else if ((_4145_i <= 65535LLU)) {
			_case_begin_1a991bd8e:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1a991bd28:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1a991bcb2:;
	};
}



inline jule::I64 _21ce5c3c1_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4749_i = 0LL;;
	for (; (_4749_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47613_c = _47317_s[_4749_i];;
			if ((_47613_c < 128LLU)) {
				(_4749_i)++;
				goto _iter_next_1a992b6ea;
			};
			jule::U8 _4829_x = _21ce593ac_first[static_cast<jule::I64>(_47613_c)];;
			if ((_4829_x == 241LLU)) {
				(_4749_i)++;
				goto _iter_next_1a992b6ea;
			};
			jule::I64 _48713_size = static_cast<jule::I64>((_4829_x & 7LLU));;
			if (((_4749_i + _48713_size) > _47317_s.len())) {
				(_4749_i)++;
				goto _iter_next_1a992b6ea;
			};
			_21ce59940_acceptRange _4929_accept = _21ce59c4d_acceptRanges[static_cast<jule::I64>((_4829_x >> 4LLU))];;
			_47613_c=_47317_s[(_4749_i + 1LL)];
			if (((_47613_c < _4929_accept._field_lo) || (_4929_accept._field_hi < _47613_c))) {
				_48713_size=1LL;
			} else if ((_48713_size == 2LL)) {
			} else {
				_47613_c=_47317_s[(_4749_i + 2LL)];
				if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
					_48713_size=1LL;
				} else if ((_48713_size == 3LL)) {
				} else {
					_47613_c=_47317_s[(_4749_i + 3LL)];
					if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
						_48713_size=1LL;
					};
				};
			};
			_4749_i+=_48713_size;
		}
	_iter_next_1a992b6ea:;
	}
	_iter_end_1a992b6ea:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _21ce5c68a_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _21cd47971_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a994a52c:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1a994a52c:;
			++it;
			_399_i++;
			goto _iter_begin_1a994a52c;
		}
		_iter_end_1a994a52c:;
	};
	return -1LL;;
}



inline jule::I64 _21cd47ca1_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _545_first = (&(_5017_s[0LL]));;
	jule::U8* _559_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_559_it >= _545_first); (_559_it)--) {
		{
			{
				if (((*(_559_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_559_it - _545_first))));;
				};
			};
		}
	_iter_next_1a994be9b:;
	}
	_iter_end_1a994be9b:;;
	return -1LL;;
}



inline jule::I64 _21cd48169_FindByteStr(jule::Str* _6717_s, jule::U8 _6725_b) {
	return static_cast<jule::I64>(_21cd47971_FindByte(_21b9b7081_Stobs(_6717_s), _6725_b));;
}



inline jule::I64 _21cd484dd_FindLastByteStr(jule::Str* _7221_s, jule::U8 _7229_b) {
	return static_cast<jule::I64>(_21cd47ca1_FindLastByte(_21b9b7081_Stobs(_7221_s), _7229_b));;
}



inline jule::Str _21cd489b6_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	_21cd5e16e_StrBuilder _209_ss = static__21cd5e48d_New(static_cast<jule::I64>((_1211_s.len() * _1223_n)));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_21cd67d15_WriteStr(&_209_ss, _1211_s);
		}
	_iter_next_1a996ab79:;
	}
	_iter_end_1a996ab79:;;
	return _21cd6860c_Str(&_209_ss);;
}



inline jule::Bool _21cd48e39_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I64 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I64 _329_i = 0LL;;
	for (; (_329_i < (*(_2724_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_329_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_329_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_329_i])) {
				return false;;
			};
		}
	_iter_next_1a996d72b:;
	}
	_iter_end_1a996d72b:;;
	return true;;
}



inline jule::Bool _21cd492ad_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _21cd48e39_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _21cd49764_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I64 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>(((*(_4615_s)).len() - _4638_start));
	jule::I64 _529_i = 0LL;;
	for (; (_529_i < (*(_4624_sub)).len()); (_529_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _529_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _529_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1a9970574:;
	}
	_iter_end_1a9970574:;;
	return true;;
}



inline jule::Bool _21cd49aa5_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _21cd49764_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I64 _21cd49ed4_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_21cd48e39_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1a99732d0:;
	}
	_iter_end_1a99732d0:;;
	return -1LL;;
}



inline jule::I64 _21cd4a897_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _949_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_949_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1a997647b:;
	for (; (_949_j >= 0LL); (_949_j)--) {
		{
			jule::I64 _10013_k = _949_j;;
			jule::I64 _10113_z = 0LL;;
			for (; (_10113_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10013_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10113_z + 1LL));
				_10013_k = ___jule_assign_arg;
				_10113_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10013_k] != _9323_sub[_10113_z])) {
						goto _iter_next_1a99760c4;
					};
				}
			_iter_next_1a9976e71:;
			}
			_iter_end_1a9976e71:;;
			return _949_j;;
		}
	_iter_next_1a99760c4:;
	}
	_iter_end_1a99760c4:;;
	return -1LL;;
}



inline jule::I64 _21cd4ac1b_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_21cd4a897_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _21cd4c0e6_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I64 _1729_i = 0LL;;
	while ((_1729_i < (*(_17114_s)).len())) {
		{
			jule::I32 _1749_br = 0;;
			jule::I64 _17413_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21ce5a556_DecodeRune((*(_17114_s)).slice(_1729_i));
				_1749_br = __jule_assign_result.__jule_result_arg0;
				_17413_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _1749_br)) {
				return _1729_i;;
			};
			_1729_i+=_17413_n;
		}
	_iter_next_1a997e121:;
	}
	_iter_end_1a997e121:;;
	return -1LL;;
}



inline jule::I64 _21cd4c998_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_21cd484dd_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I64 _21cd4d889_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2295_sb = _21b9b7081_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _2309_rb = _21b9b7081_Stobs(&(_22820_runes));;
	jule::I64 _2319_i = 0LL;;
	while ((_2319_i < _2295_sb.len())) {
		{
			jule::I32 _2339_r = 0;;
			jule::I64 _23312_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21ce5a556_DecodeRune(_2295_sb.slice(_2319_i));
				_2339_r = __jule_assign_result.__jule_result_arg0;
				_23312_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21cd4c0e6_findRune(&(_2309_rb), _2339_r) != -1LL)) {
				return _2319_i;;
			};
			_2319_i+=_23312_n;
		}
	_iter_next_1a9983b3c:;
	}
	_iter_end_1a9983b3c:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _21cd4e13c_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _2639_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_2639_cap=16LLU;
	};
	jule::Slice<jule::Str> _2679_parts = jule::Slice<jule::Str>::alloc(0LL, _2639_cap);;
	if ((_26232_n == 0LL)) {
		return _2679_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _2749_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _2769_j = _21cd49ed4_FindAt(_26210_s, _26218_sub, _2749_i);;
			if ((_2769_j == -1LL)) {
				goto _iter_end_1a9989439;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2679_parts; __jule_push_dest.push(_26210_s.slice(_2749_i, _2769_j)); };
			_2749_i=static_cast<jule::I64>((_2769_j + _26218_sub.len()));
		}
	_iter_next_1a9989439:;
	}
	_iter_end_1a9989439:;;
	if (((_26232_n > 0LL) && (_2749_i < _26210_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2679_parts; __jule_push_dest.push(_26210_s.slice(_2749_i)); };
	};
	return _2679_parts;;
}



inline jule::Bool _21cd4e4b1_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_21cd49ed4_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _21cd5002d_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_21cd4d889_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I64 _21cd503a2_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _3169_n = 0LL;;
	jule::I64 _3179_i = 0LL;;
	for (;;) {
		{
			jule::I64 _3199_j = _21cd49ed4_FindAt(_31210_s, _31218_sub, _3179_i);;
			if ((_3199_j == -1LL)) {
				goto _iter_end_1a998e032;
			};
			(_3169_n)++;
			_3179_i=static_cast<jule::I64>((_3199_j + _31218_sub.len()));
		}
	_iter_next_1a998e032:;
	}
	_iter_end_1a998e032:;;
	return _3169_n;;
}



inline jule::Str _21cd5088b_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3375_m = _21cd503a2_Count(_33212_s, _33220_sub);;
	if ((_3375_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3375_m < _33244_n))) {
		_33244_n=_3375_m;
	};
	_21cd5e16e_StrBuilder _3459_ss = static__21cd5e48d_New(static_cast<jule::I64>((_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len())))));;
	jule::I64 _3469_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _3489_j = _21cd49ed4_FindAt(_33212_s, _33220_sub, _3469_i);;
			if ((_3489_j == -1LL)) {
				goto _iter_end_1a99923a9;
			};
			_21cd67d15_WriteStr(&_3459_ss, _33212_s.slice(_3469_i, _3489_j));
			_21cd67d15_WriteStr(&_3459_ss, _33230_new);
			_3469_i=static_cast<jule::I64>((_3489_j + _33220_sub.len()));
		}
	_iter_next_1a99923a9:;
	}
	_iter_end_1a99923a9:;;
	_21cd67d15_WriteStr(&_3459_ss, _33212_s.slice(_3469_i));
	return _21cd6860c_Str(&_3459_ss);;
}



inline void _21cd4c635_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I64 _3899_i = 0LL;;
	while ((_3899_i < (*(_38818_s)).len())) {
		{
			jule::I32 _3919_r = 0;;
			jule::I64 _39112_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21ce5a556_DecodeRune((*(_38818_s)).slice(_3899_i));
				_3919_r = __jule_assign_result.__jule_result_arg0;
				_39112_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21cd4c0e6_findRune(_38830_cutset, _3919_r) == -1LL)) {
				((*(_38818_s))).mut_slice(_3899_i);;
				return;;
			};
			_3899_i+=_39112_n;
		}
	_iter_next_1a9996e2a:;
	}
	_iter_end_1a9996e2a:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _21cd51a35_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _4049_bytes = _21b9b7081_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4055_bcutset = _21b9b7081_Stobs(&(_40321_cutset));;
	_21cd4c635_trimLeft(&(_4049_bytes), &(_4055_bcutset));
	return static_cast<jule::Str>(_4049_bytes);;
}



inline void _21cd51d21_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I64 _4119_i = (*(_41019_s)).len();;
	while ((_4119_i > 0LL)) {
		{
			jule::I32 _4139_r = 0;;
			jule::I64 _41312_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21ce5ab61_DecodeLastRune((*(_41019_s)).slice(0LL, _4119_i));
				_4139_r = __jule_assign_result.__jule_result_arg0;
				_41312_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21cd4c0e6_findRune(_41031_cutset, _4139_r) == -1LL)) {
				((*(_41019_s))).mut_slice(0LL, _4119_i);;
				return;;
			};
			_4119_i-=_41312_n;
		}
	_iter_next_1a9999603:;
	}
	_iter_end_1a9999603:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _21cd52519_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _4359_bytes = _21b9b7081_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4365_bcutset = _21b9b7081_Stobs(&(_43417_cutset));;
	_21cd4c635_trimLeft(&(_4359_bytes), &(_4365_bcutset));
	_21cd51d21_trimRight(&(_4359_bytes), &(_4365_bcutset));
	return static_cast<jule::Str>(_4359_bytes);;
}



inline jule::Str _21cd5288d_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a999cc77:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a999ccee:;
			{
				return _4449_parts[0LL];;
			}
		}
		_match_end_1a999ca8a:;
	};
	jule::I64 _4519_n = 0LL;;
	{
		auto expr = &(_4449_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a999d085:;
		if (it != expr_end) {
			jule::Str *_45212_part = it;
			{
				_4519_n+=(*(_45212_part)).len();
				(_4519_n)++;
			}
			_iter_next_1a999d085:;
			++it;
			goto _iter_begin_1a999d085;
		}
		_iter_end_1a999d085:;
	};
	_21cd5e16e_StrBuilder _4569_s = static__21cd5e48d_New(_4519_n);;
	_21cd67d15_WriteStr(&_4569_s, _4449_parts[0LL]);
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a999dc56:;
		if (it != expr_end) {
			jule::Str *_45812_part = it;
			{
				_21cd67d15_WriteStr(&_4569_s, _44423_sep);
				_21cd67d15_WriteStr(&_4569_s, (*(_45812_part)));
			}
			_iter_next_1a999dc56:;
			++it;
			goto _iter_begin_1a999dc56;
		}
		_iter_end_1a999dc56:;
	};
	return _21cd6860c_Str(&_4569_s);;
}



inline jule::Str _21cd6aa4e_Clean(jule::Str _10914_path) {
	jule::Str _1105_originalPath = _10914_path;;
	jule::I64 _1115_volLen = _21cd6d843_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1115_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1115_volLen > 1LL) && _21cd6d26b_IsPathSep(_1105_originalPath[0LL])) && _21cd6d26b_IsPathSep(_1105_originalPath[1LL]))) {
			return _21cd6b126_FromSlash(_1105_originalPath);;
		};
		return (_1105_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1205_rooted = _21cd6d26b_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1275_n = _10914_path.len();;
	_21cd69be6_lazyBuff _1289_out = _21cd69be6_lazyBuff{._field_path=_21b9b7081_Stobs(&(_10914_path)), ._field_volAndPath=_1105_originalPath, ._field_volLen=_1115_volLen};;
	jule::I64 _1339_r = 0;;
	jule::I64 _13316_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1339_r = ___jule_assign_arg;
		_13316_dotdot = _1___jule_assign_arg;
	});
	if (_1205_rooted) {
		_21cd6a400_append(&_1289_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1339_r = ___jule_assign_arg;
			_13316_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1339_r < _1275_n)) {
		{
			{
				
				if (_21cd6d26b_IsPathSep(_10914_path[_1339_r])) {
					_case_begin_1a99b000e:;
					{
						(_1339_r)++;
					}
				}
				else if (((_10914_path[_1339_r] == '.') && (((_1339_r + 1LL) == _1275_n) || _21cd6d26b_IsPathSep(_10914_path[(_1339_r + 1LL)])))) {
					_case_begin_1a99abbba:;
					{
						(_1339_r)++;
					}
				}
				else if ((((_10914_path[_1339_r] == '.') && (_10914_path[(_1339_r + 1LL)] == '.')) && (((_1339_r + 2LL) == _1275_n) || _21cd6d26b_IsPathSep(_10914_path[(_1339_r + 2LL)])))) {
					_case_begin_1a99abc31:;
					{
						_1339_r+=2LL;
						{
							
							if ((_1289_out._field_w > _13316_dotdot)) {
								_case_begin_1a99b2c7b:;
								{
									(_1289_out._field_w)--;
									while (((_1289_out._field_w > _13316_dotdot) && (!(_21cd6d26b_IsPathSep(static_cast<jule::U8>(_21cd6a147_index(&_1289_out, _1289_out._field_w))))))) {
										{
											(_1289_out._field_w)--;
										}
									_iter_next_1a99b3809:;
									}
									_iter_end_1a99b3809:;;
								}
							}
							else if ((!(_1205_rooted))) {
								_case_begin_1a99b3122:;
								{
									if ((_1289_out._field_w > 0LL)) {
										_21cd6a400_append(&_1289_out, 47LLU);
									};
									_21cd6a400_append(&_1289_out, '.');
									_21cd6a400_append(&_1289_out, '.');
									_13316_dotdot=_1289_out._field_w;
								}
							}
							_match_end_1a99b30ab:;
						};
					}
				}
				else {
					_case_begin_1a99abb54:;
					{
						if (((_1205_rooted && (_1289_out._field_w != 1LL)) || ((!(_1205_rooted)) && (_1289_out._field_w != 0LL)))) {
							_21cd6a400_append(&_1289_out, 47LLU);
						};
						;
						for (; ((_1339_r < _1275_n) && (!(_21cd6d26b_IsPathSep(_10914_path[_1339_r])))); (_1339_r)++) {
							{
								_21cd6a400_append(&_1289_out, _10914_path[_1339_r]);
							}
						_iter_next_1a99aea03:;
						}
						_iter_end_1a99aea03:;;
					}
				}
				_match_end_1a99ab824:;
			};
		}
	_iter_next_1a99ab26e:;
	}
	_iter_end_1a99ab26e:;;
	if ((_1289_out._field_w == 0LL)) {
		_21cd6a400_append(&_1289_out, '.');
	};
	return _21cd6b126_FromSlash(_21cd6a686_string(&_1289_out));;
}



inline jule::Str _21cd6b126_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _21cd6b467_Join(jule::Slice<jule::Str> _2269_elem) {
	return _21cd6de4d_join(_2269_elem);;
}



inline jule::Str _21cd6b731_Ext(jule::Str _2318_path) {
	jule::I64 _2329_i = (_2318_path.len() - 1LL);;
	for (; ((_2329_i >= 0LL) && (!(_21cd6d26b_IsPathSep(_2318_path[_2329_i])))); (_2329_i)--) {
		{
			if ((_2318_path[_2329_i] == '.')) {
				return _2318_path.slice(_2329_i);;
			};
		}
	_iter_next_1a99b69c7:;
	}
	_iter_end_1a99b69c7:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _21cd6b9ea_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _2475_abs_path;;
	jule::Bool _24715_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21cd6db84_abs(_2468_path);
		_2475_abs_path = __jule_assign_result.__jule_result_arg0;
		_24715_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _2475_abs_path;
	__jule_func_result.__jule_result_arg1 = _24715_ok;
	return __jule_func_result;;
}



inline jule::Str _21cd6bcb4_Base(jule::Str _25513_path) {
	if ((_25513_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25513_path.len() > 0LL) && _21cd6d26b_IsPathSep(_25513_path[(_25513_path.len() - 1LL)]))) {
		{
			(_25513_path).mut_slice(0LL, (_25513_path.len() - 1LL));;
		}
	_iter_next_1a99b9139:;
	}
	_iter_end_1a99b9139:;;
	(_25513_path).mut_slice(_21cd6c424_VolumeName(_25513_path).len());;
	jule::I64 _2669_i = (_25513_path.len() - 1LL);;
	while (((_2669_i >= 0LL) && (!(_21cd6d26b_IsPathSep(_25513_path[_2669_i]))))) {
		{
			(_2669_i)--;
		}
	_iter_next_1a99ba657:;
	}
	_iter_end_1a99ba657:;;
	if ((_2669_i >= 0LL)) {
		(_25513_path).mut_slice((_2669_i + 1LL));;
	};
	if ((_25513_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25513_path;;
}



inline jule::Str _21cd6c15a_Dir(jule::Str _2868_path) {
	jule::Str _2875_vol = _21cd6c424_VolumeName(_2868_path);;
	jule::I64 _2889_i = (_2868_path.len() - 1LL);;
	while (((_2889_i >= _2875_vol.len()) && (!(_21cd6d26b_IsPathSep(_2868_path[_2889_i]))))) {
		{
			(_2889_i)--;
		}
	_iter_next_1a99bc428:;
	}
	_iter_end_1a99bc428:;;
	jule::Str _2925_dir = _21cd6aa4e_Clean(_2868_path.slice(_2875_vol.len(), (_2889_i + 1LL)));;
	if ((_2925_dir.equal(".", 1) && (_2875_vol.len() > 2LL))) {
		return _2875_vol;;
	};
	return (_2875_vol + _2925_dir);;
}



inline jule::Str _21cd6c424_VolumeName(jule::Str _30415_path) {
	return _21cd6b126_FromSlash(_30415_path.slice(0LL, _21cd6d843_volumeNameLen(_30415_path)));;
}



inline jule::Bool _21cd6d26b_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _21cd6d579_IsAbs(jule::Str _5310_path) {
	return _21cd492ad_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I64 _21cd6d843_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _21cd6db84_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_21cd6d579_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _21cd6aa4e_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _675_wd = ({
		auto except = _21ba92678_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _21cd6de4d_join(jule::Slice<jule::Str>::make({_675_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _21cd6de4d_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99c57a5:;
		if (it != expr_end) {
			jule::I64 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if (!((*(_7412_e))).empty()) {
					return _21cd6aa4e_Clean(_21cd5288d_Join(_739_elem.slice(_749_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1a99c57a5:;
			++it;
			_749_i++;
			goto _iter_begin_1a99c57a5;
		}
		_iter_end_1a99c57a5:;
	};
	return jule::Str();;
}



inline jule::I64 _21b9ae41e_getLastFsError(void) {
	jule::I64 _725_err = _21a958a5c_GetLastErrno();;
	{
		auto &_match_expr{ _725_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a99d3a7c:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a99d3230:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1a99d342d:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1a99d3494:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a99d350a:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a99d3571:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1a99d3bae:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a99d3c25:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a99d3c8b:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a99d3d02:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a99d3d79:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a99d3e01:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a99d3e78:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a99d4000:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a99d4077:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1a99d40ee:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a99d4176:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a99d41ed:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a99d4275:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a99d42ec:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1a99d4374:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a99d43eb:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a99d4473:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a99d44ea:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a99d4572:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1a99d45e9:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1a99d4671:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1a99d46e8:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1a99d33b7:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1a99d3362:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _21d28495c_AtoiBp(jule::U8* _922_b, jule::I64 _936_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _109_neg = ((*(_922_b)) == '-');;
	if (_109_neg) {
		if ((_936_n == 1LL)) {
			return __jule_func_result;;
		};
		(_936_n)--;
		(_922_b)++;
	};
	for (; (_936_n > 0LL); (_936_n)--) {
		{
			if ((('0' <= (*(_922_b))) && ((*(_922_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>(((*(_922_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_922_b)++;
		}
	_iter_next_1a9a0860c:;
	}
	_iter_end_1a9a0860c:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_109_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::I64>((-(__jule_func_result.__jule_result_arg0)));
	};
	return __jule_func_result;;
}



inline jule::Str _21d2ce336_Itoa(jule::I64 _69_x) {
	if ((_69_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _21d2ce644_Utoa(static_cast<jule::U64>(static_cast<jule::U64>((-(_69_x))))));;
	};
	return _21d2ce644_Utoa(static_cast<jule::U64>(static_cast<jule::U64>(_69_x)));;
}



inline jule::Str _21d2ce644_Utoa(jule::U64 _1413_x) {
	if ((_1413_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _189_buf = jule::Slice<jule::U8>::alloc(20LL, 20LL, 0);;
	jule::I64 _199_i = (_189_buf.len() - 1LL);;
	while ((_1413_x >= 10LLU)) {
		{
			jule::U64 _219_q = (_1413_x / 10LLU);;
			_189_buf[_199_i]=static_cast<jule::U8>(static_cast<jule::U8>((('0' + _1413_x) - (_219_q * 10LLU))));
			(_199_i)--;
			_1413_x=_219_q;
		}
	_iter_next_1a9a102c3:;
	}
	_iter_end_1a9a102c3:;;
	_189_buf[_199_i]=static_cast<jule::U8>(static_cast<jule::U8>(('0' + _1413_x)));
	(_189_buf).mut_slice(_199_i);;
	return static_cast<jule::Str>(_189_buf);;
}



inline jule::Slice<char*> _21d2d2b97_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s) {
	jule::Slice<char*> _369_cs = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL), nullptr);;
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a2c0d1:;
		if (it != expr_end) {
			jule::I64 _379_i = it - expr->begin();
			{
				_369_cs[_379_i]=((char*)((&((*(_3525_s))[_379_i][0LL]))));
			}
			_iter_next_1a9a2c0d1:;
			++it;
			_379_i++;
			goto _iter_begin_1a9a2c0d1;
		}
		_iter_end_1a9a2c0d1:;
	};
	_369_cs[(_369_cs.len() - 1LL)]=nullptr;
	return _369_cs;;
}



inline jule::I64 _21d2d301b_execvp(jule::Str* _4412_file, jule::Slice<jule::Str>* _4424_argv) {
	jule::Slice<char*> _455_cargv = _21d2d2b97_strSliceToCstrSlice(_4424_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&((*(_4412_file))[0LL])))), (char*const*)(&(_455_cargv[0LL]))));;
	};
}



inline jule::VoidExceptional _21d2d324c_setenv(jule::Slice<jule::Str>* _5112_envv) {
	;
	{
		auto expr = _5112_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a2ea1d:;
		if (it != expr_end) {
			jule::Str *_5312_env = it;
			{
				jule::I64 _549_i = _21cd48169_FindByteStr(_5312_env, '=');;
				if ((_549_i == -1LL)) {
					return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
				};
				{
					jule::Str _5913_key = (*(_5312_env)).slice(0LL, _549_i);;
					if ((((*(_5312_env)).len() - _549_i) == 1LL)) {
						jule::Str _6117_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_5913_key[0LL])))), ((char*)((&(_6117_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					} else {
						jule::Str _6617_val = (*(_5312_env)).slice((_549_i + 1LL));;
						if ((setenv(((char*)((&(_5913_key[0LL])))), ((char*)((&(_6617_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					};
				};
			}
			_iter_next_1a9a2ea1d:;
			++it;
			goto _iter_begin_1a9a2ea1d;
		}
		_iter_end_1a9a2ea1d:;
	};
	return jule::VoidExceptional();
}



inline jule::I64 _21d2d41c6_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1a9a33db8:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a9a2ed1a:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1a9a30d2c:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1a9a33aee:;
	};
}



inline jule::I64 _21d2d4429_getLastProcessError(void) {
	return _21d2d41c6_processErrorFromCode(static_cast<jule::I64>(_21a958a5c_GetLastErrno()));;
}



inline void _21d2d4c43_Exit(jule::I64 _129_code) {
	_21b9a96a0_Exit(_129_code);
}



inline jule::Str _21d2d4e52_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _21ce0070a_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _21ce009b3_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_21cdee341_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a5b110:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1a9a5b110:;
			++it;
			goto _iter_begin_1a9a5b110;
		}
		_iter_end_1a9a5b110:;
	};
	return false;;
}



inline jule::Bool _21ce00c7c_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_21cded96c_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a5c661:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1a9a5c661:;
			++it;
			goto _iter_begin_1a9a5c661;
		}
		_iter_end_1a9a5c661:;
	};
	{
		auto expr = &(_21ce0060b_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a5c595:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1a9a5c595:;
			++it;
			goto _iter_begin_1a9a5c595;
		}
		_iter_end_1a9a5c595:;
	};
	return false;;
}



inline jule::Str _21ce0cccd_Logf(jule::Str _3159_fmt, jule::Slice<jule::Any> _31522_args) {
	return _21ce0d76d_applyFmt(_3159_fmt, _31522_args);;
}



inline jule::Str _21ce0d0db_argToStr(jule::Any _31913_arg) {
	{
		auto &_match_expr{ _31913_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a9a5cd04:;
			{
				return _31913_arg.cast<jule::Str>(&__jule_any_type4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1a9a5e795:;
			{
				return jule::Str::from_byte(_31913_arg.cast<jule::U8>(&__jule_any_type130));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a9a5e80b:;
			{
				return jule::Str::from_rune(_31913_arg.cast<jule::I32>(&__jule_any_type6));;
			}
		}
		else {
			_case_begin_1a9a5e1bd:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1a9a5e168:;
	};
}



inline jule::I64 _21ce0d3a5_findNextFmt(jule::Str _33216_fmt) {
	{
		auto expr = &(_33216_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a60576:;
		if (it != expr_end) {
			jule::I64 _3339_i = it - expr->begin();
			jule::U8 *_33312_b = it;
			{
				if (((*(_33312_b)) == '@')) {
					return _3339_i;;
				};
			}
			_iter_next_1a9a60576:;
			++it;
			_3339_i++;
			goto _iter_begin_1a9a60576;
		}
		_iter_end_1a9a60576:;
	};
	return -1LL;;
}



inline jule::Str _21ce0d76d_applyFmt(jule::Str _34117_fmt, jule::Slice<jule::Any> _34127_args) {
	_21cd5e16e_StrBuilder _3429_s = static__21cd5e48d_New(32LL);;
	{
		auto expr = &(_34127_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9a60ec2:;
		if (it != expr_end) {
			jule::Any *_34312_arg = it;
			{
				jule::I64 _3449_i = _21ce0d3a5_findNextFmt(_34117_fmt);;
				if ((_3449_i == -1LL)) {
					goto _iter_end_1a9a60ec2;
				};
				_21cd67d15_WriteStr(&_3429_s, _34117_fmt.slice(0LL, _3449_i));
				_21cd67d15_WriteStr(&_3429_s, _21ce0d0db_argToStr((*(_34312_arg))));
				(_34117_fmt).mut_slice((_3449_i + 1LL));;
			}
			_iter_next_1a9a60ec2:;
			++it;
			goto _iter_begin_1a9a60ec2;
		}
		_iter_end_1a9a60ec2:;
	};
	_21cd67d15_WriteStr(&_3429_s, _34117_fmt);
	return _21cd6860c_Str(&_3429_s);;
}



inline jule::Bool _21ce0e5d7_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _21ce10a39_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _21ce10d14_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _21ce110cd_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _21ce1141e_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _21ce116d8_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _21ce119a2_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _21ce11c6b_IsUnix(jule::Str _5511_os) {
	return (_21ce10d14_IsDarwin(_5511_os) || _21ce110cd_IsLinux(_5511_os));;
}



inline jule::Bool _21ce12112_Is32Bit(jule::Str _5812_arch) {
	return _21ce1141e_IsI386(_5812_arch);;
}



inline jule::Bool _21ce123cb_Is64Bit(jule::Str _6112_arch) {
	return (_21ce116d8_IsAmd64(_6112_arch) || _21ce119a2_IsArm64(_6112_arch));;
}



inline void _21d2d622d_init(void) {
	jule::Str _259_path = _21d2d4e52_Executable();;
	if ((_259_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_21d2d575a_PathWd=({
			auto except = _21ba92678_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_21d2d54a2_PathExec=_21cd6c15a_Dir(_259_path);
		_21d2d524e_PathStdlib=_21cd6b467_Join(jule::Slice<jule::Str>::make({_21d2d54a2_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_21d2d5a68_PathApi=_21cd6b467_Join(jule::Slice<jule::Str>::make({_21d2d54a2_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I64 _2035c5548_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _2035cce46_Len64(_6119_x)));;
}



inline jule::I64 _2035c64a0_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_2035c71c6_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _2035c6e0c_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_2035c5b64__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _2035c71c6_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_2035c622a__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _2035ccb7c_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str::lit("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _2035cce46_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str::lit("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _2035cdbd3_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _2035d04dc_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5015_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5025_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5035_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5045_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5055_w0 = (_5015_x0 * _5035_y0);;
	jule::U64 _5065_t = ((_5025_x1 * _5035_y0) + (_5055_w0 >> 32LLU));;
	jule::U64 _5079_w1 = (_5065_t & 4294967295LLU);;
	jule::U64 _5085_w2 = (_5065_t >> 32LLU);;
	_5079_w1+=(_5015_x0 * _5045_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5025_x1 * _5045_y1) + _5085_w2) + (_5079_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _2034d06ea_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _2034d0a08_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _2034d0cc2_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _2034d1113_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _2034d36ba_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1a9b482da:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_2035d81e8_IsInf(_4714_f, 0LL) || _2035d7add_IsNaN(_4714_f)) {
			_case_begin_1a9b48362:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1a9b4820d:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2035d84b2_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _569_x = _2034d0cc2_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_569_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_569_x=static_cast<jule::U64>((_569_x & 9227875636482146303LLU));
	_569_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2034d1113_F64FromBits(_569_x));
	return __jule_func_result;;
}



inline jule::F64 _2035d77d0_NaN(void) {
	return static_cast<jule::F64>(_2034d1113_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _2035d7add_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _2035d7da7_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_2034d1113_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_2034d1113_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _2035d81e8_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _2035d84b2_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_2035da86b_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _2035d9e86_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_2035d7add_IsNaN(_1118_x) || _2035d81e8_IsInf(_1118_x, 1LL)) {
			_case_begin_1a9b849db:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1a9b84a63:;
			{
				return static_cast<jule::F64>(_2035d77d0_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1a9b84ada:;
			{
				return static_cast<jule::F64>(_2035d7da7_Inf(-1LL));;
			}
		}
		_match_end_1a9b84920:;
	};
	jule::F64 _1339_f1 = 0;;
	jule::I64 _13317_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2034d36ba_Frexp(_1118_x);
		_1339_f1 = __jule_assign_result.__jule_result_arg0;
		_13317_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1339_f1 < 0.7071067811865476)) {
		_1339_f1*=2LL;
		(_13317_ki)--;
	};
	jule::F64 _1385_f = (_1339_f1 - 1LL);;
	jule::F64 _1395_k = static_cast<jule::F64>(_13317_ki);;
	jule::F64 _1425_s = jule::div(_1385_f,(2LL + _1385_f));;
	jule::F64 _1435_s2 = (_1425_s * _1425_s);;
	jule::F64 _1445_s4 = (_1435_s2 * _1435_s2);;
	jule::F64 _1455_t1 = (_1435_s2 * (0.6666666666666735 + (_1445_s4 * (0.2857142874366239 + (_1445_s4 * (0.1818357216161805 + (_1445_s4 * 0.14798198605116586)))))));;
	jule::F64 _1465_t2 = (_1445_s4 * (0.3999999999940942 + (_1445_s4 * (0.22222198432149784 + (_1445_s4 * 0.15313837699209373)))));;
	jule::F64 _1475_R = (_1455_t1 + _1465_t2);;
	jule::F64 _1485_hfsq = ((0.5 * _1385_f) * _1385_f);;
	return static_cast<jule::F64>(((_1395_k * 0.6931471803691238) - ((_1485_hfsq - ((_1425_s * (_1485_hfsq + _1475_R)) + (_1395_k * 0.00000000019082149292705877))) - _1385_f)));;
}



inline jule::F64 _2035da86b_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_2034d1113_F64FromBits(static_cast<jule::U64>((_2034d0cc2_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _2035e2565_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _465_absF = _2035da86b_Abs(_449_f);;
	jule::F64 _479_i = 0LL;;
	if ((_465_absF > 4503599627370496LL)) {
		_479_i=_449_f;
	} else {
		_479_i=static_cast<jule::F64>((_465_absF + 4503599627370496LL));
		_479_i-=4503599627370496LL;
		while ((_479_i > _465_absF)) {
			{
				(_479_i)--;
			}
		_iter_next_1a9be90c2:;
		}
		_iter_end_1a9be90c2:;;
		if ((_449_f < 0LL)) {
			_479_i=static_cast<jule::F64>((-(_479_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _479_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _479_i));
	return __jule_func_result;;
}



inline jule::F64 _2035e2d6d_Log2(jule::F64 _449_x) {
	jule::F64 _455_frac = 0;;
	jule::I64 _4511_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2034d36ba_Frexp(_449_x);
		_455_frac = __jule_assign_result.__jule_result_arg0;
		_4511_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_455_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4511_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_2035d9e86_Log(_455_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4511_exp)));;
}



inline jule::Str _20361c55c_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_20361cb45_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _203621077_max(static_cast<jule::I64>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _20361cb45_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _839_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_20361b33b_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1a9dda15e:;
			{
				_839_bits=static_cast<jule::U64>(static_cast<jule::U64>(_2034d06ea_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_20361b33b_floatInfo>)((&(_20361b726_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a9dd9da6:;
			{
				_839_bits=static_cast<jule::U64>(_2034d0cc2_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_20361b33b_floatInfo>)((&(_20361ba34_f64info))));
			}
		}
		else {
			_case_begin_1a9dd99cc:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1a9dd9977:;
	};
	jule::Bool _965_neg = ((_839_bits >> ((*(_8413_flt))._field_expbits + (*(_8413_flt))._field_mantbits)) != 0LLU);;
	jule::I64 _979_exp = (static_cast<jule::I64>((_839_bits >> (*(_8413_flt))._field_mantbits)) & static_cast<jule::I64>(((1LL << (*(_8413_flt))._field_expbits) - 1LL)));;
	jule::U64 _989_mant = (_839_bits & ((static_cast<jule::U64>(1LLU) << (*(_8413_flt))._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _979_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << (*(_8413_flt))._field_expbits) - 1LL)))) {
			_case_begin_1a9ddda36:;
			{
				{
					
					if ((_989_mant != 0LLU)) {
						_case_begin_1a9de0a7c:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_965_neg) {
						_case_begin_1a9ddeb03:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1a9ddea8c:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1a9dde9c1:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a9dddb24:;
			{
				(_979_exp)++;
			}
		}
		else {
			_case_begin_1a9dd9e1c:;
			{
				_989_mant|=(static_cast<jule::U64>(1LLU) << (*(_8413_flt))._field_mantbits);
			}
		}
		_match_end_1a9ddd54c:;
	};
	_979_exp+=(*(_8413_flt))._field_bias;
	if ((_8243_fmt == 'b')) {
		return _203620175_fmtB(_8220_dst, _965_neg, _989_mant, _979_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _20362087e_fmtX(_8220_dst, _8258_prec, _8243_fmt, _965_neg, _989_mant, _979_exp, &((*(_8413_flt))));;
	};
	;
	_20361bec9_decimalSlice _1329_digs = _20361bec9_decimalSlice{};;
	jule::Bool _1339_ok = false;;
	jule::Bool _1355_shortest = (_8258_prec < 0LL);;
	if (_1355_shortest) {
		_1329_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_20362b03d_ryuFtoaShortest(&(_1329_digs), _989_mant, static_cast<jule::I64>((_979_exp - static_cast<jule::I64>((*(_8413_flt))._field_mantbits))), &((*(_8413_flt))));
		_1339_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a9de3c6c:;
				{
					_8258_prec=static_cast<jule::I64>(_203621077_max(static_cast<jule::I64>((_1329_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a9de3cd3:;
				{
					_8258_prec=static_cast<jule::I64>(_203621077_max(static_cast<jule::I64>((_1329_digs._field_nd - _1329_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a9de3d49:;
				{
					_8258_prec=_1329_digs._field_nd;
				}
			}
			_match_end_1a9de2d15:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15213_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a9de5d29:;
				{
					(_15213_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a9de5653:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15213_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1a9de5983:;
				{
					_15213_digits=1LL;
				}
			}
			_match_end_1a9de5752:;
		};
		if (((_8269_bit_size == 32LL) && (_15213_digits <= 9LL))) {
			_1329_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_203629c73_ryuFtoaFixed32(&(_1329_digs), static_cast<jule::U32>(static_cast<jule::U32>(_989_mant)), static_cast<jule::I64>((_979_exp - static_cast<jule::I64>((*(_8413_flt))._field_mantbits))), _15213_digits);
			_1339_ok=true;
		} else if ((_15213_digits <= 18LL)) {
			_1329_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_20362a218_ryuFtoaFixed64(&(_1329_digs), _989_mant, static_cast<jule::I64>((_979_exp - static_cast<jule::I64>((*(_8413_flt))._field_mantbits))), _15213_digits);
			_1339_ok=true;
		};
	};
	if ((!(_1339_ok))) {
		return _20361d34e_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _965_neg, _989_mant, _979_exp, &((*(_8413_flt))));;
	};
	return _20361da25_fmtDigits(_8220_dst, _1355_shortest, _965_neg, _1329_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _20361d34e_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _20361b33b_floatInfo* _18327_flt) {
	_20362ed55_decimal _1849_d = _20362ed55_decimal{};;
	_20363020c_assign(&_1849_d, _1835_mant);
	_2036304b5_shift(&_1849_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>((*(_18327_flt))._field_mantbits))));
	_20361bec9_decimalSlice _1879_digs = _20361bec9_decimalSlice{};;
	jule::Bool _1885_shortest = (_18233_prec < 0LL);;
	if (_1885_shortest) {
		_20361de76_roundShortest(&(_1849_d), _1835_mant, _18316_exp, _18327_flt);
		_1879_digs=_20361bec9_decimalSlice{._field_d=_1849_d._field_d.slice(0LL), ._field_nd=_1849_d._field_nd, ._field_dp=_1849_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a9deb846:;
				{
					_18233_prec=static_cast<jule::I64>((_1879_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a9dec627:;
				{
					_18233_prec=static_cast<jule::I64>(_203621077_max(static_cast<jule::I64>((_1879_digs._field_nd - _1879_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a9dec68d:;
				{
					_18233_prec=_1879_digs._field_nd;
				}
			}
			_match_end_1a9dec4c3:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a9dedc99:;
				{
					_203630cce_round(&_1849_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a9dedd21:;
				{
					_203630cce_round(&_1849_d, static_cast<jule::I64>((_1849_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a9dedd98:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_203630cce_round(&_1849_d, _18233_prec);
				}
			}
			_match_end_1a9dedc00:;
		};
		_1879_digs=_20361bec9_decimalSlice{._field_d=_1849_d._field_d.slice(0LL), ._field_nd=_1849_d._field_nd, ._field_dp=_1849_d._field_dp, };
	};
	return _20361da25_fmtDigits(_18216_dst, _1885_shortest, _18255_neg, _1879_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _20361da25_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _20361bec9_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1a9e02165:;
			{
				return _20361e51a_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a9e021cb:;
			{
				return _20361ea04_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1a9e02242:;
			{
				jule::I64 _22813_eprec = _22029_prec;;
				if (((_22813_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22813_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22813_eprec=6LL;
				};
				jule::I64 _2389_exp = (_2205_digs._field_dp - 1LL);;
				if (((_2389_exp < -4LL) || (_2389_exp >= _22813_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _20361e51a_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _20361ea04_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>(_203621077_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1a9e02077:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _20361de76_roundShortest(_20362ed55_decimal* _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _20361b33b_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2785_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2785_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_20362ed55_decimal _2879_upper = _20362ed55_decimal{};;
	_20363020c_assign(&_2879_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_2036304b5_shift(&_2879_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _2979_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _2989_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2785_minexp))) {
		_2979_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_2989_explo=_25746_exp;
	} else {
		_2979_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_2989_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_20362ed55_decimal _3069_lower = _20362ed55_decimal{};;
	_20363020c_assign(&_3069_lower, static_cast<jule::U64>(((_2979_mantlo << 1LLU) + 1LLU)));
	_2036304b5_shift(&_3069_lower, static_cast<jule::I64>(((_2989_explo - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3135_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _3269_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3309_ui = 0LL;;
	for (; ; (_3309_ui)++) {
		{
			jule::I64 _3359_mi = ((_3309_ui - _2879_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_3359_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_1a9e0cd85;
			};
			jule::I64 _3399_li = ((_3309_ui - _2879_upper._field_dp) + _3069_lower._field_dp);;
			jule::U8 _34013_l = static_cast<jule::U8>(48LLU);;
			if (((_3399_li >= 0LL) && (_3399_li < _3069_lower._field_nd))) {
				_34013_l=_3069_lower._field_d[_3399_li];
			};
			jule::U8 _34413_m = static_cast<jule::U8>(48LLU);;
			if ((_3359_mi >= 0LL)) {
				_34413_m=(*(_25723_d))._field_d[_3359_mi];
			};
			jule::U8 _34813_u = static_cast<jule::U8>(48LLU);;
			if ((_3309_ui < _2879_upper._field_nd)) {
				_34813_u=_2879_upper._field_d[_3309_ui];
			};
			jule::Bool _3569_okdown = ((_34013_l != _34413_m) || (_3135_inclusive && ((_3399_li + 1LL) == _3069_lower._field_nd)));;
			{
				
				if (((_3269_upperdelta == 0LLU) && ((_34413_m + 1LLU) < _34813_u))) {
					_case_begin_1a9e12010:;
					{
						_3269_upperdelta=2LLU;
					}
				}
				else if (((_3269_upperdelta == 0LLU) && (_34413_m != _34813_u))) {
					_case_begin_1a9e12087:;
					{
						_3269_upperdelta=1LLU;
					}
				}
				else if (((_3269_upperdelta == 1LLU) && ((_34413_m != '9') || (_34813_u != '0')))) {
					_case_begin_1a9e1210e:;
					{
						_3269_upperdelta=2LLU;
					}
				}
				_match_end_1a9e11e44:;
			};
			jule::Bool _3779_okup = ((_3269_upperdelta > 0LLU) && ((_3135_inclusive || (_3269_upperdelta > 1LLU)) || ((_3309_ui + 1LL) < _2879_upper._field_nd)));;
			{
				
				if ((_3569_okdown && _3779_okup)) {
					_case_begin_1a9e1496e:;
					{
						_203630cce_round(_25723_d, static_cast<jule::I64>((_3359_mi + 1LL)));
						return;;
					}
				}
				else if (_3569_okdown) {
					_case_begin_1a9e149e6:;
					{
						_20363076d_roundDown(_25723_d, static_cast<jule::I64>((_3359_mi + 1LL)));
						return;;
					}
				}
				else if (_3779_okup) {
					_case_begin_1a9e14a6d:;
					{
						_203630a26_roundUp(_25723_d, static_cast<jule::I64>((_3359_mi + 1LL)));
						return;;
					}
				}
				_match_end_1a9e14908:;
			};
		}
	_iter_next_1a9e0cd85:;
	}
	_iter_end_1a9e0cd85:;;
}



inline jule::Slice<jule::U8> _20361e51a_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _20361bec9_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4039_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_4039_ch=_39637_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_4039_ch); };
	if ((_39654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('.'); };
		jule::I64 _41213_i = 1LL;;
		jule::I64 _4139_m = _203620c03_min(_39637_d._field_nd, static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41213_i < _4139_m)) {
			(_39613_dst).append(_39637_d._field_d.slice(_41213_i, _4139_m));;
			_41213_i=_4139_m;
		};
		for (; (_41213_i <= _39654_prec); (_41213_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a9e17ce6:;
		}
		_iter_end_1a9e17ce6:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_39665_fmt); };
	jule::I64 _4259_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_4259_exp=0LL;
	};
	if ((_4259_exp < 0LL)) {
		_4039_ch='-';
		_4259_exp=static_cast<jule::I64>((-(_4259_exp)));
	} else {
		_4039_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_4039_ch); };
	{
		
		if ((_4259_exp < 10LL)) {
			_case_begin_1a9e1b49d:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_4259_exp) + '0'))); };
			}
		}
		else if ((_4259_exp < 100LL)) {
			_case_begin_1a9e1ae4d:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4259_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4259_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1a9e1a9ec:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4259_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_4259_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4259_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1a9e1a26b:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _20361ea04_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _20361bec9_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('-'); };
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45913_m = _203620c03_min(_45137_d._field_nd, _45137_d._field_dp);;
		(_45113_dst).append(_45137_d._field_d.slice(0LL, _45913_m));;
		for (; (_45913_m < _45137_d._field_dp); (_45913_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a9e1eb11:;
		}
		_iter_end_1a9e1eb11:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
	};
	if ((_45154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('.'); };
		jule::I64 _47013_i = 0LL;;
		for (; (_47013_i < _45154_prec); (_47013_i)++) {
			{
				jule::U8 _47217_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47313_j = (_45137_d._field_dp + _47013_i);;
				if (((0LL <= _47313_j) && (_47313_j < _45137_d._field_nd))) {
					_47217_ch=_45137_d._field_d[_47313_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push(_47217_ch); };
			}
		_iter_next_1a9e20eca:;
		}
		_iter_end_1a9e20eca:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _203620175_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _20361b33b_floatInfo* _48463_flt) {
	if (_48426_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _203635036_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('p'); };
	_48452_exp-=static_cast<jule::I64>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _203635036_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _20362087e_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _20361b33b_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1a9e247d6:;
	}
	_iter_end_1a9e247d6:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _5219_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _5229_extra = ((_5079_mant << _5219_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _5219_shift);
		if (((_5229_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _5219_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _5359_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_5359_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5359_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_50637_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU))))); };
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		while ((_5079_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_5359_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1a9e2b337:;
		}
		_iter_end_1a9e2b337:;;
	} else if ((_50626_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		jule::I64 _55813_i = 0LL;;
		for (; (_55813_i < _50626_prec); (_55813_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_5359_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1a9e2a04a:;
		}
		_iter_end_1a9e2a04a:;;
	};
	jule::U8 _5669_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _203621bb0_lower(_50637_fmt))) {
		_5669_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_5669_ch); };
	if ((_50724_exp < 0LL)) {
		_5669_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_5669_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_5669_ch); };
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1a9e29995:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1a9e29a0b:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1a9e2eacc:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1a9e2caec:;
	};
	return _50613_dst;;
}



inline jule::I64 _203620c03_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _203621077_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _203621bb0_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__202e5a2da_ConvError _203622133_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__202e5a2da_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1a9e35de1:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1a9e35ce2:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_203621bb0_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1a9e3783d:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_203621bb0_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1a9e37761:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_203621bb0_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1a9e37431:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1a9e373ba:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1a9e372ee:;
					};
				};
			}
		}
		else {
			_case_begin_1a9e35275:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1a9e355c7:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _909_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1a9e3b5cd:;
			{
				_909_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a9e3a621:;
			{
				_909_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1a9e3b204:;
			{
				_909_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU));
			}
		}
		_match_end_1a9e3b138:;
	};
	jule::U64 _1009_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1a9e3bd81:;
			{
				_1009_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a9e3b27b:;
			{
				_1009_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1a9e3bd2b:;
	};
	jule::U64 _1089_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e3ca96:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11013_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1a9e3e3a0:;
						{
							_11013_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _203621bb0_lower(_10912_c)) && (_203621bb0_lower(_10912_c) <= 'z'))) {
						_case_begin_1a9e3e290:;
						{
							_11013_d=static_cast<jule::U8>(((_203621bb0_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1a9e3ddb6:;
						{
							goto _iter_next_1a9e3ca96;
						}
					}
					else {
						_case_begin_1a9e3dd50:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1a9e3dcd9:;
				};
				if ((_11013_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1089_n >= _909_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1329_n1 = (_1089_n + static_cast<jule::U64>(_11013_d));;
				if (((_1329_n1 < _1089_n) || (_1329_n1 > _1009_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n=_1329_n1;
			}
			_iter_next_1a9e3ca96:;
			++it;
			goto _iter_begin_1a9e3ca96;
		}
		_iter_end_1a9e3ca96:;
	};
	__jule_func_result.__jule_result_arg0 = _1089_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _203622562_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _1475_un = 0;;
	jule::I64 _1479_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__202e5a2da_ConvError __jule_assign_result = _203622133_parseUint(&(_14618_s), _14630_base, _14645_bit_size);
		_1475_un = __jule_assign_result.__jule_result_arg0;
		_1479_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1479_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_1479_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _1475_un);;
}



inline jule::Exceptional<jule::I64> _203622a18_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	jule::Bool _1789_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1789_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1879_un = 0;;
	jule::I64 _18713_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__202e5a2da_ConvError __jule_assign_result = _203622133_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1879_un = __jule_assign_result.__jule_result_arg0;
		_18713_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18713_err != static_cast<jule::I64>(0LL)) && (_18713_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18713_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1965_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_1789_neg)) && (_1879_un >= _1965_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	if ((_1789_neg && (_1879_un > _1965_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	jule::I64 _2039_n = static_cast<jule::I64>(_1879_un);;
	if (_1789_neg) {
		_2039_n=static_cast<jule::I64>((-(_2039_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _2039_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _20362370b_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2034d1113_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _575_clz = _2035c5548_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_575_clz);
	;
	jule::U64 _609_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_575_clz));;
	jule::U64 _639_xHi = 0;;
	jule::U64 _6318_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2035d04dc_Mul64(_4122_man, _203624564_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_639_xHi = __jule_assign_result.__jule_result_arg0;
		_6318_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_639_xHi & 511LLU) == 511LLU) && ((_6318_xLo + _4122_man) < _4122_man))) {
		jule::U64 _679_yHi = 0;;
		jule::U64 _6714_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2035d04dc_Mul64(_4122_man, _203624564_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_679_yHi = __jule_assign_result.__jule_result_arg0;
			_6714_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6813_mergedHi = 0;;
		jule::U64 _6823_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _639_xHi;
			jule::U64 _1___jule_assign_arg = (_6318_xLo + _679_yHi);
			_6813_mergedHi = ___jule_assign_arg;
			_6823_mergedLo = _1___jule_assign_arg;
		});
		if ((_6823_mergedLo < _6318_xLo)) {
			(_6813_mergedHi)++;
		};
		if (((((_6813_mergedHi & 511LLU) == 511LLU) && ((_6823_mergedLo + 1LLU) == 0LLU)) && ((_6714_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6813_mergedHi;
			jule::U64 _1___jule_assign_arg = _6823_mergedLo;
			_639_xHi = ___jule_assign_arg;
			_6318_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _795_msb = (_639_xHi >> 63LLU);;
	jule::U64 _809_retMantissa = (_639_xHi >> (_795_msb + 9LLU));;
	_609_retExp2-=(1LLU ^ _795_msb);
	if ((((_6318_xLo == 0LLU) && ((_639_xHi & 511LLU) == 0LLU)) && ((_809_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_809_retMantissa+=(_809_retMantissa & 1LLU);
	_809_retMantissa>>=1LLU;
	if (((_809_retMantissa >> 53LLU) > 0LLU)) {
		_809_retMantissa>>=1LLU;
		_609_retExp2+=1LLU;
	};
	if (((_609_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1039_retBits = ((_609_retExp2 << 52LLU) | (_809_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1039_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2034d1113_F64FromBits(_1039_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _203623b4b_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_2034d0a08_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1325_clz = _2035c5548_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1325_clz);
	;
	jule::U64 _1359_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1325_clz));;
	jule::U64 _1389_x_hi = 0;;
	jule::U64 _13819_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2035d04dc_Mul64(_11022_man, _203624564_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1389_x_hi = __jule_assign_result.__jule_result_arg0;
		_13819_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1389_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13819_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1429_y_hi = 0;;
		jule::U64 _14215_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2035d04dc_Mul64(_11022_man, _203624564_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1429_y_hi = __jule_assign_result.__jule_result_arg0;
			_14215_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14313_merged_hi = 0;;
		jule::U64 _14324_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _1389_x_hi;
			jule::U64 _1___jule_assign_arg = (_13819_x_lo + _1429_y_hi);
			_14313_merged_hi = ___jule_assign_arg;
			_14324_merged_lo = _1___jule_assign_arg;
		});
		if ((_14324_merged_lo < _13819_x_lo)) {
			(_14313_merged_hi)++;
		};
		if (((((_14313_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14324_merged_lo + 1LLU) == 0LLU)) && ((_14215_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14313_merged_hi;
			jule::U64 _1___jule_assign_arg = _14324_merged_lo;
			_1389_x_hi = ___jule_assign_arg;
			_13819_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1545_msb = (_1389_x_hi >> 63LLU);;
	jule::U64 _1559_retMantissa = (_1389_x_hi >> (_1545_msb + 38LLU));;
	_1359_retExp2-=(1LLU ^ _1545_msb);
	if ((((_13819_x_lo == 0LLU) && ((_1389_x_hi & 274877906943LLU) == 0LLU)) && ((_1559_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1559_retMantissa+=(_1559_retMantissa & 1LLU);
	_1559_retMantissa>>=1LLU;
	if (((_1559_retMantissa >> 24LLU) > 0LLU)) {
		_1559_retMantissa>>=1LLU;
		_1359_retExp2+=1LLU;
	};
	if (((_1359_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1789_retBits = ((_1359_retExp2 << 23LLU) | (_1559_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1789_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_2034d0a08_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_1789_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _2036259a5_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>* _4631_s, jule::Str _4642_prefix) {
	jule::I64 _479_n = _4642_prefix.len();;
	if ((_479_n > (*(_4631_s)).len())) {
		_479_n=static_cast<jule::I64>((*(_4631_s)).len());
	};
	jule::I64 _519_i = 0LL;;
	for (; (_519_i < _479_n); (_519_i)++) {
		{
			jule::U8 _5313_c = (*(_4631_s))[_519_i];;
			if ((('A' <= _5313_c) && (_5313_c <= 'Z'))) {
				_5313_c+=32LL;
			};
			if ((_5313_c != _4642_prefix[_519_i])) {
				return _519_i;;
			};
		}
	_iter_next_1a9e61614:;
	}
	_iter_end_1a9e61614:;;
	return _479_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _203625cb3_special(jule::Slice<jule::U8> _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _739_sign = 1LL;;
	jule::I64 _749_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1a9e64947:;
			{
				if ((_6912_s[0LL] == '-')) {
					_739_sign=-1LL;
				};
				_749_nsign=1LL;
				{
					jule::Slice<jule::U8>* _8317_sp = (&(_6912_s));;
					(*(_8317_sp))=(*(_8317_sp)).slice(1LL);
				};
				goto _case_begin_1a9e649be;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1a9e649be:;
			{
				jule::I64 _8813_caseN = _2036259a5_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str::lit("infinity", 8));;
				if (((3LL < _8813_caseN) && (_8813_caseN < 8LL))) {
					_8813_caseN=3LL;
				};
				if (((_8813_caseN == 3LL) || (_8813_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2035d7da7_Inf(_739_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_749_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1a9e64a46:;
			{
				if ((_2036259a5_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2035d77d0_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a9e6487b:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _20362607c_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1a9e69c16:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1a9e69e8b:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1a9e69dc0:;
	};
	jule::U64 _1229_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1239_maxMantDigits = 19LL;;
	jule::U8 _1249_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_203621bb0_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1229_base=16LLU;
		_1239_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1249_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1329_sawdot = false;;
	jule::Bool _1339_sawdigits = false;;
	jule::I64 _1349_nd = 0LL;;
	jule::I64 _1359_ndMant = 0LL;;
	jule::I64 _1369_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1389_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1389_c == '_')) {
					_case_begin_1a9e6e138:;
					{
						goto _iter_next_1a9e696c7;
					}
				}
				else if ((_1389_c == '.')) {
					_case_begin_1a9e6e1b0:;
					{
						if (_1329_sawdot) {
							goto _julec_label_1a9e739de;
						};
						_1329_sawdot=true;
						_1369_dp=_1349_nd;
						goto _iter_next_1a9e696c7;
					}
				}
				else if ((('0' <= _1389_c) && (_1389_c <= '9'))) {
					_case_begin_1a9e6e237:;
					{
						_1339_sawdigits=true;
						if (((_1389_c == '0') && (_1349_nd == 0LL))) {
							(_1369_dp)--;
							goto _iter_next_1a9e696c7;
						};
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1229_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1389_c - '0'));
							(_1359_ndMant)++;
						} else if ((_1389_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a9e696c7;
					}
				}
				else if ((((_1229_base == 16LLU) && ('a' <= _203621bb0_lower(_1389_c))) && (_203621bb0_lower(_1389_c) <= 'f'))) {
					_case_begin_1a9e6e2ae:;
					{
						_1339_sawdigits=true;
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_203621bb0_lower(_1389_c) - 'a') + 10LLU));
							(_1359_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a9e696c7;
					}
				}
				_match_end_1a9e6e05b:;
			};
			goto _iter_end_1a9e696c7;
		}
	_iter_next_1a9e696c7:;
	}
	_iter_end_1a9e696c7:;;
	_julec_label_1a9e739de:;
	if ((!(_1339_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1329_sawdot))) {
		_1369_dp=_1349_nd;
	};
	if ((_1229_base == 16LLU)) {
		_1369_dp*=4LL;
		_1359_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_203621bb0_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1249_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _20113_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20113_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _21113_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1a9e76948;
				};
				if ((_21113_e < 10000LL)) {
					_21113_e=static_cast<jule::I64>((((_21113_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1a9e76948:;
		}
		_iter_end_1a9e76948:;;
		_1369_dp+=(_21113_e * _20113_esign);
	} else if ((_1229_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_1369_dp - _1359_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _203627b0b_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _20361ba34_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48616_mantissa));
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1a9e8027b:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1a9e80303:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_203626ea1_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _203626ea1_f64pow10[_48635_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1a9e8037a:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_203626ea1_f64pow10[(-(_48635_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a9e7ec2b:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _20362803a_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _20361b726_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_52016_mantissa));
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1a9e8466a:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1a9e846e2:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_2036272e2_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _2036272e2_f32pow10[_52035_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1a9e84769:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_2036272e2_f32pow10[(-(_52035_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a9e8411a:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__202e5a2da_ConvError _2036285ce_atofHex(_20361b33b_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__202e5a2da_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5575_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5585_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1a9e8940b:;
	}
	_iter_end_1a9e8940b:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1a9e8a550:;
	}
	_iter_end_1a9e8a550:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5585_minExp - 2LL)))) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1a9e8a352:;
	}
	_iter_end_1a9e8a352:;;
	jule::U64 _5889_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5889_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5889_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6039_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5575_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits)));
		_55652_exp=static_cast<jule::I64>((_5575_maxExp + 1LL));
		_6039_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6109_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6109_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6109_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _20361b726_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_2034d0a08_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6109_bits)))));
		__jule_func_result.__jule_result_arg1 = _6039_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2034d1113_F64FromBits(_6109_bits));
	__jule_func_result.__jule_result_arg1 = _6039_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__202e5a2da_ConvError _2036289a8_atof32(jule::Str* _62112_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__202e5a2da_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6239_val = 0;;
		jule::I64 _62314__n = 0;;
		jule::Bool _62318_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _203625cb3_special(_21b9b7081_Stobs(_62112_s));
			_6239_val = __jule_assign_result.__jule_result_arg0;
			_62314__n = __jule_assign_result.__jule_result_arg1;
			_62318_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62318_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_6239_val));
			__jule_func_result.__jule_result_arg1 = _62314__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6295_mantissa = 0;;
	jule::I64 _62915_exp = 0;;
	jule::Bool _62920_neg = false;;
	jule::Bool _62925_trunc = false;;
	jule::Bool _62932_hex = false;;
	jule::I64 _62937__n = 0;;
	jule::Bool _62945_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20362607c_readFloat(_62112_s);
		_6295_mantissa = __jule_assign_result.__jule_result_arg0;
		_62915_exp = __jule_assign_result.__jule_result_arg1;
		_62920_neg = __jule_assign_result.__jule_result_arg2;
		_62925_trunc = __jule_assign_result.__jule_result_arg3;
		_62932_hex = __jule_assign_result.__jule_result_arg4;
		_62937__n = __jule_assign_result.__jule_result_arg5;
		_62945_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62937__n;
	if ((!(_62945_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62932_hex) {
		jule::F64 _63613_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__202e5a2da_ConvError __jule_assign_result = _2036285ce_atofHex(&(_20361b726_f32info), _6295_mantissa, _62915_exp, _62920_neg, _62925_trunc);
			_63613_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63613_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62925_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _20362803a_atof32exact(_6295_mantissa, _62915_exp, _62920_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62945_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _203623b4b_eiselLemire32(_6295_mantissa, _62915_exp, _62920_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62945_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62945_ok) {
			if ((!(_62925_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65817_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _203623b4b_eiselLemire32(static_cast<jule::U64>((_6295_mantissa + 1LLU)), _62915_exp, _62920_neg);
				_65817_fUp = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62945_ok && (__jule_func_result.__jule_result_arg0 == _65817_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_20362ed55_decimal _6679_d = _20362ed55_decimal{};;
	if ((!(_203626720_set(&_6679_d, _21b9b7081_Stobs(_62112_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6715_b = 0;;
	jule::Bool _6718_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _203626a61_floatBits(&_6679_d, &(_20361b726_f32info));
		_6715_b = __jule_assign_result.__jule_result_arg0;
		_6718_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_2034d0a08_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6715_b))));
	if (_6718_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__202e5a2da_ConvError _203628c72_atof64(jule::Str* _67912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__202e5a2da_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6819_val = 0;;
		jule::I64 _68114__n = 0;;
		jule::Bool _68118_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _203625cb3_special(_21b9b7081_Stobs(_67912_s));
			_6819_val = __jule_assign_result.__jule_result_arg0;
			_68114__n = __jule_assign_result.__jule_result_arg1;
			_68118_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68118_ok) {
			__jule_func_result.__jule_result_arg0 = _6819_val;
			__jule_func_result.__jule_result_arg1 = _68114__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6875_mantissa = 0;;
	jule::I64 _68715_exp = 0;;
	jule::Bool _68720_neg = false;;
	jule::Bool _68725_trunc = false;;
	jule::Bool _68732_hex = false;;
	jule::I64 _68737__n = 0;;
	jule::Bool _68745_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20362607c_readFloat(_67912_s);
		_6875_mantissa = __jule_assign_result.__jule_result_arg0;
		_68715_exp = __jule_assign_result.__jule_result_arg1;
		_68720_neg = __jule_assign_result.__jule_result_arg2;
		_68725_trunc = __jule_assign_result.__jule_result_arg3;
		_68732_hex = __jule_assign_result.__jule_result_arg4;
		_68737__n = __jule_assign_result.__jule_result_arg5;
		_68745_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68737__n;
	if ((!(_68745_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68732_hex) {
		({
			__jule_tuple_f64__jule_tuple__202e5a2da_ConvError __jule_assign_result = _2036285ce_atofHex(&(_20361ba34_f64info), _6875_mantissa, _68715_exp, _68720_neg, _68725_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68725_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _203627b0b_atof64exact(_6875_mantissa, _68715_exp, _68720_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68745_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _20362370b_eiselLemire64(_6875_mantissa, _68715_exp, _68720_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68745_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68745_ok) {
			if ((!(_68725_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71517_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _20362370b_eiselLemire64(static_cast<jule::U64>((_6875_mantissa + 1LLU)), _68715_exp, _68720_neg);
				_71517_fUp = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68745_ok && (__jule_func_result.__jule_result_arg0 == _71517_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_20362ed55_decimal _7249_d = _20362ed55_decimal{};;
	if ((!(_203626720_set(&_7249_d, _21b9b7081_Stobs(_67912_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7285_b = 0;;
	jule::Bool _7288_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _203626a61_floatBits(&_7249_d, &(_20361ba34_f64info));
		_7285_b = __jule_assign_result.__jule_result_arg0;
		_7288_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2034d1113_F64FromBits(_7285_b));
	if (_7288_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__202e5a2da_ConvError _2036290e6_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__202e5a2da_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7389_f = 0;;
		jule::I64 _73812_n = 0;;
		jule::I64 _73815_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__202e5a2da_ConvError __jule_assign_result = _2036289a8_atof32(_73622_s);
			_7389_f = __jule_assign_result.__jule_result_arg0;
			_73812_n = __jule_assign_result.__jule_result_arg1;
			_73815_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_7389_f));
		__jule_func_result.__jule_result_arg1 = _73812_n;
		__jule_func_result.__jule_result_arg2 = _73815_err;
		return __jule_func_result;;
	};
	jule::F64 _7415_f = 0;;
	jule::I64 _7418_n = 0;;
	jule::I64 _74111_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__202e5a2da_ConvError __jule_assign_result = _203628c72_atof64(_73622_s);
		_7415_f = __jule_assign_result.__jule_result_arg0;
		_7418_n = __jule_assign_result.__jule_result_arg1;
		_74111_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _7415_f;
	__jule_func_result.__jule_result_arg1 = _7418_n;
	__jule_func_result.__jule_result_arg2 = _74111_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _20362946a_ParseFloat(jule::Str _76915_s, jule::I64 _76923_bitSize) {
	jule::F64 _7705_f = 0;;
	jule::I64 _7708_n = 0;;
	jule::I64 _77011_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__202e5a2da_ConvError __jule_assign_result = _2036290e6_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_7705_f = __jule_assign_result.__jule_result_arg0;
		_7708_n = __jule_assign_result.__jule_result_arg1;
		_77011_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7708_n != _76915_s.len()) && ((_77011_err == static_cast<jule::I64>(0LL)) || (_77011_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	if ((_77011_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_77011_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _7705_f);;
}



inline void _203629c73_ryuFtoaFixed32(_20361bec9_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _629_e2 = _4956_exp;;
	jule::I64 _635_b = _2035ccb7c_Len32(_4945_mant);;
	if ((_635_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _635_b));
		_629_e2+=(static_cast<jule::I64>(_635_b) - 25LL);
	};
	jule::I64 _745_q = (((-(_20362b307_mulByLog2Log10(static_cast<jule::I64>((_629_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _799_exact = ((_745_q <= 27LL) && (_745_q >= 0LL));;
	jule::U32 _819_di = 0;;
	jule::I64 _8113_dexp2 = 0;;
	jule::Bool _8124_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20362cbbb_mult64bitPow10(_4945_mant, _629_e2, _745_q);
		_819_di = __jule_assign_result.__jule_result_arg0;
		_8113_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8124_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8113_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_745_q < 0LL) && (_745_q >= -10LL)) && _20362d46e_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_745_q)))))) {
		_799_exact=true;
		_8124_d0=true;
	};
	jule::U64 _945_extra = static_cast<jule::U64>((-(_8113_dexp2)));;
	jule::U32 _955_extraMask = static_cast<jule::U32>(((1LL << _945_extra) - 1LL));;
	jule::U32 _979_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_819_di >> _945_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_819_di & _955_extraMask));
		_819_di = ___jule_assign_arg;
		_979_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _999_roundUp = false;;
	if (_799_exact) {
		_999_roundUp=(((_979_dfrac > (1LLU << (_945_extra - 1LLU))) || ((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && (!(_8124_d0)))) || (((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && _8124_d0) && ((_819_di & 1LLU) == 1LLU)));
	} else {
		_999_roundUp=((_979_dfrac >> (_945_extra - 1LLU)) == 1LLU);
	};
	if ((_979_dfrac != 0LLU)) {
		_8124_d0=false;
	};
	_20362aa65_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_819_di)), (!(_8124_d0)), _999_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_745_q;
}



inline void _20362a218_ryuFtoaFixed64(_20361bec9_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1319_e2 = _12156_exp;;
	jule::I64 _1325_b = _2035cce46_Len64(_12145_mant);;
	if ((_1325_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1325_b))));
		_1319_e2+=(static_cast<jule::I64>(_1325_b) - 55LL);
	};
	jule::I64 _1465_q = (((-(_20362b307_mulByLog2Log10(static_cast<jule::I64>((_1319_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _1519_exact = ((_1465_q <= 55LL) && (_1465_q >= 0LL));;
	jule::U64 _1539_di = 0;;
	jule::I64 _15313_dexp2 = 0;;
	jule::Bool _15324_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20362d0ea_mult128bitPow10(_12145_mant, _1319_e2, _1465_q);
		_1539_di = __jule_assign_result.__jule_result_arg0;
		_15313_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15324_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15313_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1465_q < 0LL) && (_1465_q >= -22LL)) && _20362d46e_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1465_q)))))) {
		_1519_exact=true;
		_15324_d0=true;
	};
	jule::U64 _1665_extra = static_cast<jule::U64>((-(_15313_dexp2)));;
	jule::U64 _1675_extraMask = static_cast<jule::U64>(((1LL << _1665_extra) - 1LL));;
	jule::U64 _1699_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_1539_di >> _1665_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_1539_di & _1675_extraMask));
		_1539_di = ___jule_assign_arg;
		_1699_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1719_roundUp = false;;
	if (_1519_exact) {
		_1719_roundUp=(((_1699_dfrac > (1LLU << (_1665_extra - 1LLU))) || ((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && (!(_15324_d0)))) || (((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && _15324_d0) && ((_1539_di & 1LLU) == 1LLU)));
	} else {
		_1719_roundUp=((_1699_dfrac >> (_1665_extra - 1LLU)) == 1LLU);
	};
	if ((_1699_dfrac != 0LLU)) {
		_15324_d0=false;
	};
	_20362aa65_formatDecimal(_12124_d, _1539_di, (!(_15324_d0)), _1719_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1465_q;
}



inline void _20362aa65_formatDecimal(_20361bec9_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2015_max = _20362a559_u64pow10[_20088_prec];;
	jule::I64 _2029_trimmed = 0LL;;
	while ((_20044_m >= _2015_max)) {
		{
			jule::U64 _2049_a = 0;;
			jule::U64 _20412_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2049_a = ___jule_assign_arg;
				_20412_b = _1___jule_assign_arg;
			});
			_20044_m=_2049_a;
			(_2029_trimmed)++;
			if ((_20412_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20412_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20412_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1a9ec2587:;
	}
	_iter_end_1a9ec2587:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2015_max)) {
		_20044_m/=10LLU;
		(_2029_trimmed)++;
	};
	jule::U64 _2299_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _2319_v = _20044_m;;
	while ((_2319_v >= 100LLU)) {
		{
			jule::U64 _23313_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _23413_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2319_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) % 100LL)));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2319_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2319_v % 100LL));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			};
			_2299_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2299_n + 1LLU))]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23413_v2) + 1LLU))];
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2299_n + 0LLU))]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23413_v2) + 0LLU))];
			_2319_v=_23313_v1;
		}
	_iter_next_1a9ec26ec:;
	}
	_iter_end_1a9ec26ec:;;
	if ((_2319_v > 0LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _2319_v) + 1LLU))];
	};
	if ((_2319_v >= 10LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _2319_v))];
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2029_trimmed)++;
		}
	_iter_next_1a9ecab56:;
	}
	_iter_end_1a9ecab56:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _2029_trimmed));
}



inline void _20362b03d_ryuFtoaShortest(_20361bec9_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _20361b33b_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_2035c71c6_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_20362c11b_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2735_ml = 0;;
	jule::U64 _2739_mc = 0;;
	jule::U64 _27313_mu = 0;;
	jule::I64 _27321_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _20362ba00_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2735_ml = __jule_assign_result.__jule_result_arg0;
		_2739_mc = __jule_assign_result.__jule_result_arg1;
		_27313_mu = __jule_assign_result.__jule_result_arg2;
		_27321_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27321_e2 == 0LL)) {
		_20362c11b_ryuDigits(_26125_d, _2735_ml, _2739_mc, _27313_mu, true, false);
		return;;
	};
	jule::I64 _2795_q = (_20362b307_mulByLog2Log10(static_cast<jule::I64>((-(_27321_e2)))) + 1LL);;
	jule::U64 _2839_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2849_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2859_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2869_dl0 = false;;
	jule::Bool _2879_dc0 = false;;
	jule::Bool _2889_du0 = false;;
	if (((*(_26168_flt)) == _20361b726_f32info)) {
		jule::U32 _29013_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29113_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29213_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20362cbbb_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2735_ml)), _27321_e2, _2795_q);
			_29013_dl32 = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20362cbbb_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2739_mc)), _27321_e2, _2795_q);
			_29113_dc32 = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20362cbbb_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27313_mu)), _27321_e2, _2795_q);
			_29213_du32 = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29013_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29113_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29213_du32));
			_2839_dl = ___jule_assign_arg;
			_2849_dc = _1___jule_assign_arg;
			_2859_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20362d0ea_mult128bitPow10(_2735_ml, _27321_e2, _2795_q);
			_2839_dl = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20362d0ea_mult128bitPow10(_2739_mc, _27321_e2, _2795_q);
			_2849_dc = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _20362d0ea_mult128bitPow10(_27313_mu, _27321_e2, _2795_q);
			_2859_du = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27321_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2795_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2869_dl0 = ___jule_assign_arg;
			_2879_dc0 = _1___jule_assign_arg;
			_2889_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2795_q < 0LL) && (_2795_q >= -24LL))) {
		if (_20362d46e_divisibleByPow5(_2735_ml, static_cast<jule::I64>((-(_2795_q))))) {
			_2869_dl0=true;
		};
		if (_20362d46e_divisibleByPow5(_2739_mc, static_cast<jule::I64>((-(_2795_q))))) {
			_2879_dc0=true;
		};
		if (_20362d46e_divisibleByPow5(_27313_mu, static_cast<jule::I64>((-(_2795_q))))) {
			_2889_du0=true;
		};
	};
	jule::U64 _3255_extra = static_cast<jule::U64>((-(_27321_e2)));;
	jule::U64 _3265_extraMask = static_cast<jule::U64>(((1LL << _3255_extra) - 1LL));;
	jule::U64 _3289_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2839_dl >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2839_dl & _3265_extraMask));
		_2839_dl = ___jule_assign_arg;
		_3289_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3309_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2849_dc >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2849_dc & _3265_extraMask));
		_2849_dc = ___jule_assign_arg;
		_3309_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3329_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2859_du >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2859_du & _3265_extraMask));
		_2859_du = ___jule_assign_arg;
		_3329_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3389_uok = ((!(_2889_du0)) || (_3329_fracu > 0LLU));;
	if ((_2889_du0 && (_3329_fracu == 0LLU))) {
		_3389_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3389_uok))) {
		(_2859_du)--;
	};
	jule::Bool _3479_cup = false;;
	if (_2879_dc0) {
		_3479_cup=((_3309_fracc > (1LLU << (_3255_extra - 1LLU))) || ((_3309_fracc == (1LLU << (_3255_extra - 1LLU))) && ((_2849_dc & 1LLU) == 1LLU)));
	} else {
		_3479_cup=((_3309_fracc >> (_3255_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3615_lok = ((_2869_dl0 && (_3289_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3615_lok))) {
		(_2839_dl)++;
	};
	jule::Bool _3665_c0 = (_2879_dc0 && (_3309_fracc == 0LLU));;
	_20362c11b_ryuDigits(_26125_d, _2839_dl, _2849_dc, _2859_du, _3665_c0, _3479_cup);
	(*(_26125_d))._field_dp-=_2795_q;
}



inline jule::I64 _20362b307_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _20362b5c1_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _20362ba00_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _20361b33b_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _20362c11b_ryuDigits(_20361bec9_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4109_lhi = 0;;
	jule::U32 _41014_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _20362d738_divmod1e9(_40936_lower);
		_4109_lhi = __jule_assign_result.__jule_result_arg0;
		_41014_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4115_chi = 0;;
	jule::U32 _41110_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _20362d738_divmod1e9(_40948_central);
		_4115_chi = __jule_assign_result.__jule_result_arg0;
		_41110_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4125_uhi = 0;;
	jule::U32 _41210_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _20362d738_divmod1e9(_40962_upper);
		_4125_uhi = __jule_assign_result.__jule_result_arg0;
		_41210_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4125_uhi == 0LLU)) {
		_20362c78c_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4109_lhi < _4125_uhi)) {
		if ((_41014_llo != 0LLU)) {
			(_4109_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41110_clo == 0LLU));
		_40992_cup=((_41110_clo > 500000000LL) || ((_41110_clo == 500000000LL) && _40992_cup));
		_20362c78c_ryuDigits32(_40919_d, _4109_lhi, _4115_chi, _4125_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42813_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42913_v = _4115_chi;;
		while ((_42913_v > 0LLU)) {
			{
				jule::U32 _43113_v1 = 0;;
				jule::U32 _43117_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42913_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42913_v % 10LL);
					_43113_v1 = ___jule_assign_arg;
					_43117_v2 = _1___jule_assign_arg;
				});
				_42913_v=_43113_v1;
				(_42813_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42813_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43117_v2 + '0')));
			}
		_iter_next_1a9ee6ee6:;
		}
		_iter_end_1a9ee6ee6:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42813_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42813_n)));
		_20362c78c_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1a9ee9757:;
	}
	_iter_end_1a9ee9757:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1a9eea26e:;
	}
	_iter_end_1a9eea26e:;;
}



inline void _20362c78c_ryuDigits32(_20361bec9_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _4609_trimmed = 0LL;;
	jule::I64 _4639_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _4709_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47113_c = 0;;
			jule::U32 _47120_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47113_c = ___jule_assign_arg;
				_47120_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4729_u = (_4559_upper / 10LLU);;
			if ((_4709_l > _4729_u)) {
				goto _iter_end_1a9eec084;
			};
			if (((_4709_l == (_47113_c + 1LLU)) && (_47113_c < _4729_u))) {
				(_47113_c)++;
				_47120_cdigit=0LLU;
				_45539_cup=false;
			};
			(_4609_trimmed)++;
			_45525_c0=(_45525_c0 && (_4639_cNextDigit == 0LL));
			_4639_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47120_cdigit));
			({
				jule::U32 ___jule_assign_arg = _4709_l;
				jule::U32 _1___jule_assign_arg = _47113_c;
				jule::U32 _2___jule_assign_arg = _4729_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1a9eec084:;
	}
	_iter_end_1a9eec084:;;
	if ((_4609_trimmed > 0LL)) {
		_45539_cup=(((_4639_cNextDigit > 5LL) || ((_4639_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_4639_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_4609_trimmed;
	jule::U32 _5099_v = _45458_central;;
	jule::I64 _5109_n = _45554_endindex;;
	while ((_5109_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5129_v1 = 0;;
			jule::U32 _51213_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_5099_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5099_v % 100LL);
				_5129_v1 = ___jule_assign_arg;
				_51213_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5109_n]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51213_v2) + 1LLU))];
			(*(_45421_d))._field_d[(_5109_n - 1LL)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51213_v2) + 0LLU))];
			_5109_n-=2LL;
			_5099_v=_5129_v1;
		}
	_iter_next_1a9eecd21:;
	}
	_iter_end_1a9eecd21:;;
	if ((_5109_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5109_n]=static_cast<jule::U8>(static_cast<jule::U8>((_5099_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _4609_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _20362cbbb_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _5439_pow = _203624564_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5439_pow+=1LLU;
	};
	jule::U64 _5485_hi = 0;;
	jule::U64 _5489_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2035d04dc_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _5439_pow);
		_5485_hi = __jule_assign_result.__jule_result_arg0;
		_5489_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_20362b5c1_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_5485_hi << 7LLU) | (_5489_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5489_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _20362d0ea_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _5719_pow = _203624564_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5719_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_20362b5c1_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5795_l1 = 0;;
	jule::U64 _5799_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2035d04dc_Mul64(_56220_m, _5719_pow[0LL]);
		_5795_l1 = __jule_assign_result.__jule_result_arg0;
		_5799_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5809_h1 = 0;;
	jule::U64 _58013_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2035d04dc_Mul64(_56220_m, _5719_pow[1LL]);
		_5809_h1 = __jule_assign_result.__jule_result_arg0;
		_58013_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5815_mid = 0;;
	jule::U64 _58110_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2035cdbd3_Add64(_5795_l1, _58013_h0, 0LLU);
		_5815_mid = __jule_assign_result.__jule_result_arg0;
		_58110_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5809_h1+=_58110_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_5809_h1 << 9LLU) | (_5815_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5815_mid << 9LLU) == 0LLU) && (_5799_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _20362d46e_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5909_i = 0LL;;
	for (; (_5909_i < _58632_k); (_5909_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1aa010a26:;
	}
	_iter_end_1aa010a26:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _20362d738_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _2036316a3_trim(_20362ed55_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1aa01408a:;
	}
	_iter_end_1aa01408a:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _20363198e_rightShift(_20362ed55_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2859_r = 0LL;;
	jule::I64 _2869_w = 0LL;;
	jule::U64 _2899_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2899_n >> _28432_k) == 0LLU); (_2859_r)++) {
		{
			if ((_2859_r >= (*(_28420_a))._field_nd)) {
				if ((_2899_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2899_n >> _28432_k) == 0LLU)) {
					{
						_2899_n=static_cast<jule::U64>((_2899_n * 10LLU));
						(_2859_r)++;
					}
				_iter_next_1aa01738a:;
				}
				_iter_end_1aa01738a:;;
				goto _iter_end_1aa015ad6;
			};
			jule::U64 _3039_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			_2899_n=static_cast<jule::U64>((((_2899_n * 10LLU) + _3039_c) - '0'));
		}
	_iter_next_1aa015ad6:;
	}
	_iter_end_1aa015ad6:;;
	(*(_28420_a))._field_dp-=(_2859_r - 1LL);
	jule::U64 _3085_mask = (static_cast<jule::U64>((1LL << _28432_k)) - 1LLU);;
	for (; (_2859_r < (*(_28420_a))._field_nd); (_2859_r)++) {
		{
			jule::U64 _3129_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			jule::U64 _3139_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3139_dig + '0')));
			(_2869_w)++;
			_2899_n=static_cast<jule::U64>((((_2899_n * 10LLU) + _3129_c) - '0'));
		}
	_iter_next_1aa018d70:;
	}
	_iter_end_1aa018d70:;;
	while ((_2899_n > 0LLU)) {
		{
			jule::U64 _3229_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			if ((_2869_w < 800LL)) {
				(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3229_dig + '0')));
				(_2869_w)++;
			} else if ((_3229_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2899_n=static_cast<jule::U64>((_2899_n * 10LLU));
		}
	_iter_next_1aa019106:;
	}
	_iter_end_1aa019106:;;
	(*(_28420_a))._field_nd=_2869_w;
	_2036316a3_trim(_28420_a);
}



inline jule::Bool _203631e45_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3399_i = 0LL;;
	for (; (_3399_i < (*(_33846_s)).len()); (_3399_i)++) {
		{
			if ((_3399_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3399_i] != (*(_33846_s))[_3399_i])) {
				return (_33821_b[_3399_i] < (*(_33846_s))[_3399_i]);;
			};
		}
	_iter_next_1aa01c879:;
	}
	_iter_end_1aa01c879:;;
	return false;;
}



inline void _2036321ed_leftShift(_20362ed55_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3539_delta = _20362e75b_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_203631e45_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_20362e75b_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_3539_delta)--;
	};
	jule::I64 _3589_r = (*(_35219_a))._field_nd;;
	jule::I64 _3599_w = ((*(_35219_a))._field_nd + _3539_delta);;
	jule::U64 _3629_n = static_cast<jule::U64>(0LLU);;
	(_3589_r)--;
	for (; (_3589_r >= 0LL); (_3589_r)--) {
		{
			_3629_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_3589_r]) - '0') << _35231_k);
			jule::U64 _3669_quo = (_3629_n / 10LLU);;
			jule::U64 _3679_rem = (_3629_n - (10LLU * _3669_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3679_rem + '0')));
			} else if ((_3679_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3669_quo;
		}
	_iter_next_1aa01e88c:;
	}
	_iter_end_1aa01e88c:;;
	while ((_3629_n > 0LLU)) {
		{
			jule::U64 _3799_quo = (_3629_n / 10LLU);;
			jule::U64 _3809_rem = (_3629_n - (10LLU * _3799_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3809_rem + '0')));
			} else if ((_3809_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3799_quo;
		}
	_iter_next_1aa020cab:;
	}
	_iter_end_1aa020cab:;;
	(*(_35219_a))._field_nd+=_3539_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3539_delta;
	_2036316a3_trim(_35219_a);
}



inline jule::Bool _203632572_shouldRoundUp(_20362ed55_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _203633c05_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _2036346c8_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _648_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _203635036_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_648_s = __jule_assign_result.__jule_result_arg1;
	});
	return _648_s;;
}



inline jule::Str _2036340bd_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _2036346c8_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _758_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _203635036_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_758_s = __jule_assign_result.__jule_result_arg1;
	});
	return _758_s;;
}



inline jule::Str _203634387_Itoa(jule::I64 _809_i) {
	return _2036340bd_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _2036346c8_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _203634992_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _203635036_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _1079_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _1089_i = _1079_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14913_us = static_cast<jule::U64>(_10133_u);;
		while ((_14913_us >= 100LLU)) {
			{
				jule::U64 _15113_is = ((_14913_us % 100LL) << 1LLU);;
				_14913_us/=100LLU;
				_1089_i-=2LL;
				_1079_a[(_1089_i + 1LL)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15113_is + 1LLU))];
				_1079_a[(_1089_i + 0LL)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15113_is + 0LLU))];
			}
		_iter_next_1aa057ad4:;
		}
		_iter_end_1aa057ad4:;;
		jule::U64 _1599_is = (_14913_us << 1LLU);;
		(_1089_i)--;
		_1079_a[_1089_i]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_1599_is + 1LLU))];
		if ((_14913_us >= 10LLU)) {
			(_1089_i)--;
			_1079_a[_1089_i]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_1599_is)];
		};
	} else if (_203634992_isPowerOfTwo(_10141_base)) {
		jule::U64 _1749_shift = (static_cast<jule::U64>(_2035c64a0_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _1759_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _1769_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _1759_b)) {
			{
				(_1089_i)--;
				_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _1769_m))];
				_10133_u>>=_1749_shift;
			}
		_iter_next_1aa05eb63:;
		}
		_iter_end_1aa05eb63:;;
		(_1089_i)--;
		_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))];
	} else {
		jule::U64 _1879_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _1879_b)) {
			{
				(_1089_i)--;
				jule::U64 _19313_q = jule::div(_10133_u,_1879_b);;
				_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19313_q * _1879_b))))];
				_10133_u=_19313_q;
			}
		_iter_next_1aa061879:;
		}
		_iter_end_1aa061879:;;
		(_1089_i)--;
		_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))];
	};
	if (_10152_neg) {
		(_1089_i)--;
		_1079_a[_1089_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_1079_a.slice(_1089_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_1079_a.slice(_1089_i));
	return __jule_func_result;;
}



inline jule::Str _203636433_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1aa0789a1:;
			{
				return _20363592c_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1aa078a17:;
			{
				return _203635be6_SysUint;;
			}
		}
		else {
			_case_begin_1aa078462:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1aa075b8a:;
	};
}



inline jule::I64 _2036366ec_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1aa079b17:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1aa079c49:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aa079cb0:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aa079d26:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1aa079d8c:;
			{
				return _203635641_BitSize;;
			}
		}
		else {
			_case_begin_1aa07972c:;
			{
				return -1LL;;
			}
		}
		_match_end_1aa0796b6:;
	};
}



inline jule::Str _203636a3d_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1aa07b7c8:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1aa07c1d0:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1aa07c246:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aa07c2ac:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1aa07bc6d:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa07bc07:;
	};
}



inline jule::Str _203636d07_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1aa07c565:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1aa07d456:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1aa07d4bc:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aa07d533:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1aa07ce06:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa07cd90:;
	};
}



inline jule::Str _2036370c1_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1aa07d7ec:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aa07e6dd:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1aa07e18d:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa07e127:;
	};
}



inline jule::Bool _203637c1a_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _20362946a_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _203637ed4_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1aa0845a0:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aa083eb7:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aa082aa9:;
	};
}



inline jule::I64 _20363829d_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1aa08533c:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1aa0853e7:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1aa08545d:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aa08487a:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aa084dec:;
	};
}



inline jule::I64 _203638567_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1aa086d99:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1aa086e54:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1aa086eba:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aa08685a:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aa08644d:;
	};
}



inline void _2036386dd_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _21d2d60eb_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1aa087d12:;
				{
					_203635641_BitSize=64LLU;
					_20363592c_SysInt=jule::Str::lit("i64", 3);
					_203635be6_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1aa087d9a:;
				{
					_203635641_BitSize=32LLU;
					_20363592c_SysInt=jule::Str::lit("i32", 3);
					_203635be6_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1aa087c8a:;
		};
	};
}



inline void _203638864_init(void) {
	_2036386dd_UpdateTarget();
}



inline jule::I64 _20363c626_MinI(jule::Str _6113_k) {
	_6113_k=_203636433_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1aa087141:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1aa08a001:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1aa08a067:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1aa08a0cd:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1aa087273:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa08721d:;
	};
}



inline jule::I64 _20363c934_MaxI(jule::Str _7913_k) {
	_7913_k=_203636433_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1aa08a375:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1aa08b60c:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1aa08b673:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1aa08b6d9:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1aa08ac8d:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa08b497:;
	};
}



inline jule::U64 _20363cbed_MaxU(jule::Str _9713_k) {
	_9713_k=_203636433_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1aa08b981:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1aa08cc18:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1aa08cc7e:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1aa08cce5:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1aa08c399:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aa08caa3:;
	};
}



inline jule::F64 _20363ce2e_Min(jule::Str _11512_k) {
	_11512_k=_203636433_RealKindOf(_11512_k);
	jule::I64 _1175_i = _20363c626_MinI(_11512_k);;
	if ((_1175_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1175_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aa090248:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aa08eb82:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1aa08e621:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa08e8da:;
	};
}



inline jule::F64 _20363d1e8_Max(jule::Str _13312_k) {
	_13312_k=_203636433_RealKindOf(_13312_k);
	jule::I64 _1355_i = _20363c934_MaxI(_13312_k);;
	if ((_1355_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1355_i));;
	};
	jule::U64 _1395_u = _20363cbed_MaxU(_13312_k);;
	if ((_1395_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1395_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aa0922b1:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aa091bea:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1aa0915e0:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa091931:;
	};
}



inline jule::Bool _20363d66b_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _20363d979_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _20363dc43_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _20363e084_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _20363e34d_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _20363e617_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _20363e8d1_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _20363ec77_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _203640041_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _20364030a_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _20364067e_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1aa0977d3:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1aa097ae1:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1aa097d66:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1aa097dcc:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1aa097e43:;
			{
				return _20363d66b_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1aa097ea9:;
			{
				return _20363d979_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1aa0980b9:;
			{
				return _20363dc43_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1aa098130:;
			{
				return _20363e084_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1aa098196:;
			{
				return _20363e34d_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1aa09820c:;
			{
				return _20363e617_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1aa098284:;
			{
				return _20363e8d1_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1aa09830b:;
			{
				return _20363ec77_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aa098383:;
			{
				return _203640041_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aa09840a:;
			{
				return _20364030a_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1aa098482:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1aa098509:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1aa097948:;
			{
				return false;;
			}
		}
		_match_end_1aa092679:;
	};
}



inline jule::Bool _203640948_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _203640c12_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _203640ecb_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _203641295_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _203641718_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _2036419d2_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _203641c9b_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _203642065_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _2036423d9_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1aa0a05bb:;
			{
				return _203643440_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1aa0a092e:;
			{
				return _20364374d_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1aa0a09a6:;
			{
				return _20364374d_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1aa0a0c09:;
			{
				return _203640948_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1aa0a0c81:;
			{
				return _203640c12_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1aa0a0d08:;
			{
				return _203640ecb_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1aa0a0d80:;
			{
				return _203641295_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1aa0a0e5c:;
			{
				return _203641718_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1aa0a0ed4:;
			{
				return _2036419d2_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aa0a105b:;
			{
				return _203641c9b_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aa0a10d3:;
			{
				return _203642065_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1aa0a115a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa0a07b9:;
			{
				return false;;
			}
		}
		_match_end_1aa0a0742:;
	};
}



inline jule::Bool _203643440_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _20364374d_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _203643a17_IsInt(jule::Str _4610_k) {
	return (_203643440_IsSigInt(_4610_k) || _20364374d_IsUnsigInt(_4610_k));;
}



inline jule::Bool _203643d58_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _203644122_IsNum(jule::Str _5610_k) {
	return (_203643a17_IsInt(_5610_k) || _203643d58_IsFloat(_5610_k));;
}



inline jule::Bool _2036443db_IsSigNum(jule::Str _6113_k) {
	return (_203643440_IsSigInt(_6113_k) || _203643d58_IsFloat(_6113_k));;
}



inline void _20364d615_lshiftUnsig(_2036445ea_Const* _59021_c, _2036445ea_Const* _59032_x) {
	jule::U64 _5915_l = _203647026_AsU64(_59021_c);;
	jule::U64 _5925_r = _203647026_AsU64(_59032_x);;
	_20364781d_SetU64(_59021_c, static_cast<jule::U64>((_5915_l << _5925_r)));
}



inline void _20364d945_rshiftUnsig(_2036445ea_Const* _59621_c, _2036445ea_Const* _59632_x) {
	jule::U64 _5975_l = _203647026_AsU64(_59621_c);;
	jule::U64 _5985_r = _203647026_AsU64(_59632_x);;
	_20364781d_SetU64(_59621_c, static_cast<jule::U64>((_5975_l >> _5985_r)));
}



inline jule::Bool _1c0c25b43_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1d9a7776c_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa15b941:;
		if (it != expr_end) {
			jule::U64 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1aa15b941:;
			++it;
			goto _iter_begin_1aa15b941;
		}
		_iter_end_1aa15b941:;
	};
	return false;;
}



inline jule::Bool _1c0c25e51_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1c0c1e2bd_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa15bca4:;
		if (it != expr_end) {
			jule::U64 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1aa15bca4:;
			++it;
			goto _iter_begin_1aa15bca4;
		}
		_iter_end_1aa15bca4:;
	};
	return false;;
}



inline jule::Bool _1c0c2655b_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1c0c26825_IsRawStr(_36410_k)));;
}



inline jule::Bool _1c0c26825_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1c0c26ade_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1c0c27518_IsFloat(jule::Str _38012_k) {
	if (_21cd492ad_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _21cd5002d_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _21cd5002d_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1c0c277d2_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3935_b = _38810_k[0LL];;
	return ((_3935_b == '.') || (('0' <= _3935_b) && (_3935_b <= '9')));;
}



inline jule::Bool _1c0c27d65_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1c0c2812e_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1c0c286b2_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1d9a77470_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa16420c:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1aa16420c:;
			++it;
			goto _iter_begin_1aa16420c;
		}
		_iter_end_1aa16420c:;
	};
	return false;;
}



inline jule::Bool _1c0c28b35_IsLetter(jule::I32 _42913_r) {
	return _21cb9b077_IsLetter(_42913_r);;
}



inline jule::Bool _1c0c291b8_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1c0c29482_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1c0c2974b_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1c0c29a15_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1aa167e36:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1aa167ead:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1aa168035:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa167d6a:;
			{
				return false;;
			}
		}
		_match_end_1aa166cc0:;
	};
}



inline jule::Bool _1c0c29cce_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1c0c2a098_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1c0c1e8b7_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa16983e:;
		if (it != expr_end) {
			jule::U64 *_48612_op = it;
			{
				if ((_48516_id == (*(_48612_op)))) {
					return true;;
				};
			}
			_iter_next_1aa16983e:;
			++it;
			goto _iter_begin_1aa16983e;
		}
		_iter_end_1aa16983e:;
	};
	return false;;
}



inline jule::Bool _1c0c2a362_IsAssignOp(jule::U64 _49515_id) {
	if (_1c0c2a098_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1c0c1ebb4_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa16bb2c:;
		if (it != expr_end) {
			jule::U64 *_49912_op = it;
			{
				if ((_49515_id == (*(_49912_op)))) {
					return true;;
				};
			}
			_iter_next_1aa16bb2c:;
			++it;
			goto _iter_begin_1aa16bb2c;
		}
		_iter_end_1aa16bb2c:;
	};
	return false;;
}



inline jule::Ptr<_1c0c2abc0_File> _1c0c2c067_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1c0c2abc0_File>(_1c0c2abc0_File{._field_Path=_5715_path, });;
}



inline _21ce0c86b_Log _1c0c2dab3_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1c0c2abc0_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _21ce0c86b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_21ce0cccd_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1c0c2de7b_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1765e8:;
		if (it != expr_end) {
			jule::I64 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1aa1765e8:;
			++it;
			_1149_i++;
			goto _iter_begin_1aa1765e8;
		}
		_iter_end_1aa1765e8:;
	};
	return true;;
}



inline jule::Str _1c0c2e300_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1289_b = (*(_12215_txt))[_12232_i];;
	if ((_1289_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1289_b == '+') || (_1289_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1425_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1289_b=(*(_12215_txt))[_12232_i];
			if (((_1289_b != '_') && (!(_1c0c291b8_IsDecimal(_1289_b))))) {
				goto _iter_end_1aa178056;
			};
		}
	_iter_next_1aa178056:;
	}
	_iter_end_1aa178056:;;
	if ((_12232_i == _1425_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1c0c2e6b8_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1c0c2e300_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1c0c2ea3c_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1aa17b125:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1689_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1689_b == '_') || _1c0c291b8_IsDecimal(_1689_b)) {
					_case_begin_1aa17ba60:;
					{
						goto _iter_next_1aa17b06a;
					}
				}
				else if (_1c0c31445_isFloatFmtP(_1689_b, _16036_i)) {
					_case_begin_1aa17bad7:;
					{
						return _1c0c2e6b8_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1aa17b994:;
					{
						goto _iter_end_1aa17b06a;
					}
				}
				_match_end_1aa17b92d:;
			};
		}
	_iter_next_1aa17b06a:;
	}
	_iter_end_1aa17b06a:;;
	return jule::Str();;
}



inline jule::Str _1c0c2edb1_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1c0c2e300_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1c0c30235_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1c0c2e300_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1c0c306b9_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2019_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2019_b == 'e') || (_2019_b == 'E')))) {
				__jule_func_result = _1c0c2e300_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2019_b != '_') && (!(_1c0c291b8_IsDecimal(_2019_b))))) {
				goto _iter_end_1aa17e9a8;
			};
		}
	_iter_next_1aa17e9a8:;
	}
	_iter_end_1aa17e9a8:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1c0c30983_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2179_i = 0LL;;
	_julec_label_1aa18138e:;
	for (; (_2179_i < (*(_21615_txt)).len()); (_2179_i)++) {
		{
			jule::U8 _2209_b = (*(_21615_txt))[_2179_i];;
			{
				
				if ((_2209_b == '.')) {
					_case_begin_1aa182439:;
					{
						__jule_func_result = _1c0c306b9_floatNum(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((_2209_b == '_')) {
					_case_begin_1aa1824b1:;
					{
						goto _iter_next_1aa181537;
					}
				}
				else if (_1c0c310c1_isFloatFmtE(_2209_b, _2179_i)) {
					_case_begin_1aa182538:;
					{
						__jule_func_result = _1c0c2e300_floatFmtE(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1c0c291b8_IsDecimal(_2209_b)))) {
					_case_begin_1aa1825b0:;
					{
						goto _iter_end_1aa181537;
					}
				}
				_match_end_1aa18235c:;
			};
		}
	_iter_next_1aa181537:;
	}
	_iter_end_1aa181537:;;
	if ((_2179_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2179_i));
	return __jule_func_result;;
}



inline jule::Str _1c0c30c4c_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1c0c2de7b_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2489_i = 2LL;;
	for (; (_2489_i < (*(_23915_txt)).len()); (_2489_i)++) {
		{
			if ((((*(_23915_txt))[_2489_i] != '_') && (!(_1c0c29482_IsBinary((*(_23915_txt))[_2489_i]))))) {
				goto _iter_end_1aa1852c7;
			};
		}
	_iter_next_1aa1852c7:;
	}
	_iter_end_1aa1852c7:;;
	if ((_2489_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2489_i));
	return __jule_func_result;;
}



inline jule::Bool _1c0c310c1_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1c0c31445_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1c0c317b9_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1aa187e34:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2769_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2769_b == '_') || _1c0c291b8_IsDecimal(_2769_b)) {
					_case_begin_1aa188b6b:;
					{
						goto _iter_next_1aa188066;
					}
				}
				else if (_1c0c31445_isFloatFmtP(_2769_b, _26938_i)) {
					_case_begin_1aa188be3:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1aa188aa0:;
					{
						goto _iter_end_1aa188066;
					}
				}
				_match_end_1aa188a39:;
			};
		}
	_iter_next_1aa188066:;
	}
	_iter_end_1aa188066:;;
	return false;;
}



inline jule::Bool _1c0c31b3d_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1aa189e9c:;
			{
				goto _case_begin_1aa18a024;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1aa18a024:;
			{
				goto _case_begin_1aa18a09b;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1aa18a09b:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1aa189dc0:;
			{
				return true;;
			}
		}
		_match_end_1aa189d04:;
	};
}



inline jule::Bool _1c0c31eb2_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1aa18bc18:;
			{
				goto _case_begin_1aa18bc90;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1aa18bc90:;
			{
				goto _case_begin_1aa18bd17;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1aa18bd17:;
			{
				goto _case_begin_1aa18c06a;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1aa18c06a:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1aa18b80b:;
			{
				return true;;
			}
		}
		_match_end_1aa18b740:;
	};
}



inline jule::Str _1c0c32435_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3269_octalStart = 1LL;;
	jule::Bool _3289_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3269_octalStart)++;
		_3289_o=true;
	};
	jule::I64 _3379_i = _3269_octalStart;;
	for (; (_3379_i < (*(_31814_txt)).len()); (_3379_i)++) {
		{
			jule::U8 _3399_b = (*(_31814_txt))[_3379_i];;
			if ((_3399_b == '.')) {
				if (_3289_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1c0c306b9_floatNum(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (_1c0c310c1_isFloatFmtE(_3399_b, _3379_i)) {
				__jule_func_result = _1c0c2e300_floatFmtE(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (((_3399_b != '_') && (!(_1c0c2974b_IsOctal(_3399_b))))) {
				goto _iter_end_1aa19049c;
			};
		}
	_iter_next_1aa19049c:;
	}
	_iter_end_1aa19049c:;;
	if ((_3379_i == _3269_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3379_i));
	return __jule_func_result;;
}



inline jule::Str _1c0c326ee_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3699_i = 2LL;;
	_julec_label_1aa19454a:;
	for (; (_3699_i < (*(_36012_txt)).len()); (_3699_i)++) {
		{
			jule::U8 _3729_b = (*(_36012_txt))[_3699_i];;
			{
				
				if (_1c0c31b3d_isFloatFmtDotp(_36012_txt, _3699_i)) {
					_case_begin_1aa1951a5:;
					{
						__jule_func_result = _1c0c30235_floatFmtDotp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1c0c31eb2_isFloatFmtDotfp(_36012_txt, _3699_i)) {
					_case_begin_1aa19522c:;
					{
						__jule_func_result = _1c0c2edb1_floatFmtDotfp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1c0c31445_isFloatFmtP(_3729_b, _3699_i)) {
					_case_begin_1aa1952a4:;
					{
						__jule_func_result = _1c0c2e6b8_floatFmtP(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1c0c317b9_isFloatFmtDotnp(_36012_txt, _3699_i)) {
					_case_begin_1aa19532b:;
					{
						__jule_func_result = _1c0c2ea3c_floatFmtDotnp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (((_3729_b != '_') && (!(_1c0c29a15_IsHex(_3729_b))))) {
					_case_begin_1aa1953a3:;
					{
						goto _iter_end_1aa19478c;
					}
				}
				_match_end_1aa1950b7:;
			};
		}
	_iter_next_1aa19478c:;
	}
	_iter_end_1aa19478c:;;
	if ((_3699_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3699_i));
	return __jule_func_result;;
}



inline jule::Str _1c0c32a73_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3999_i = 2LL;;
	for (; (_3999_i < _39328_n); (_3999_i)++) {
		{
			if ((!(_1c0c29a15_IsHex((*(_39315_txt))[_3999_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1aa197927:;
	}
	_iter_end_1aa197927:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1c0c32d3c_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1c0c32a73_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1c0c33106_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1c0c32a73_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1c0c333c0_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1c0c32a73_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1c0c33689_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1c0c2974b_IsOctal((*(_42616_txt))[1LL]))) || (!(_1c0c2974b_IsOctal((*(_42616_txt))[2LL])))) || (!(_1c0c2974b_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_21ce0c86b_Log> _1c0c3867d_Lex(jule::Ptr<_1c0c2abc0_File> _80912_f, jule::I64 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1c0c33e09_lex _8149_lex = _1c0c33e09_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1c0c36c20_newLine(&_8149_lex);
	_1c0c349ed_lex(&_8149_lex);
	if ((_8149_lex._field_errors.len() > 0LL)) {
		return _8149_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_8149_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1c0d00723_FindModuleFile(jule::Slice<jule::Ptr<_21b9b0d8d_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2275de:;
		if (it != expr_end) {
			jule::Ptr<_21b9b0d8d_DirEntry> *_1312_d = it;
			{
				if (((!(_21b9be990_IsDir((*((*(_1312_d))))._field_Stat.ptr()))) && (*((*(_1312_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1aa2275de:;
			++it;
			goto _iter_begin_1aa2275de;
		}
		_iter_end_1aa2275de:;
	};
	return false;;
}



inline jule::Str _1c0d009ed_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_21b9b0d8d_DirEntry>> _2613_dirents = ({
				auto except = static__21cd6e49d_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1aa2286bc;
				} jule::Slice<jule::Ptr<_21b9b0d8d_DirEntry>>(nullptr);});
			});;
			jule::Bool _309_exist = _1c0d00723_FindModuleFile(&(_2613_dirents));;
			if (_309_exist) {
				return _2427_path;;
			};
			jule::I64 _359_n = _2427_path.len();;
			_2427_path=_21cd6c15a_Dir(_2427_path);
			if ((_2427_path.len() == _359_n)) {
				goto _iter_end_1aa2286bc;
			};
		}
	_iter_next_1aa2286bc:;
	}
	_iter_end_1aa2286bc:;;
	return jule::Str();;
}



inline jule::Slice<_21ce0c86b_Log> _1c0d00cb7_CheckModuleFile(jule::Str* _4621_path) {
	jule::Slice<jule::U8> _475_bytes = ({
		auto except = static__21b9bc77e_Read(_21cd6b467_Join(jule::Slice<jule::Str>::make({(*(_4621_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_21ce0c86b_Log>::make({_21ce0c86b_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _535_s = _21cd52519_Trim(static_cast<jule::Str>(_475_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_535_s.len() != 0LL)) {
		return jule::Slice<_21ce0c86b_Log>::make({_21ce0c86b_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1c0d01801_IsPub(jule::Str* _1011_ident) {
	if (((*(_1011_ident))[0LL] < 128LLU)) {
		jule::U8 _129_b = (*(_1011_ident))[0LL];;
		return (('A' <= _129_b) && (_129_b <= 'Z'));;
	};
	jule::I32 _155_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21ce5a556_DecodeRune(_21b9b7081_Stobs(_1011_ident));
		_155_r = __jule_assign_result.__jule_result_arg0;
	});
	return _21cc14a80_IsUpper(_155_r);;
}



inline jule::Bool _1c0d4ae22_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1c0d64523_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _239_r = static_cast<jule::I32>(0LL);;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2513_i = 0LL;;
		_239_r=static_cast<jule::I32>(_1c0d65128_runeFromEsqSeq(_1811_bytes, &(_2513_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21ce5a556_DecodeRune(_1811_bytes);
			_239_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _239_r;;
}



inline jule::Str _1c0d646cc_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1c0d64a1d_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _479_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _489_i = 0LL;;
	while ((_489_i < _4210_bytes.len())) {
		{
			jule::U8 _509_b = _4210_bytes[_489_i];;
			if ((_509_b == '\\')) {
				(_479_s).append(_1c0d6549c_strEsqSeq(_4210_bytes, &(_489_i)));;
			} else {
				jule::I32 _5413_r = 0;;
				jule::I64 _5416_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21ce5a556_DecodeRune(_4210_bytes.slice(_489_i));
					_5413_r = __jule_assign_result.__jule_result_arg0;
					_5416_size = __jule_assign_result.__jule_result_arg1;
				});
				_489_i+=_5416_size;
				_479_s=_21ce5b9b9_AppendRune(_479_s, _5413_r);
			};
		}
	_iter_next_1aa2334b8:;
	}
	_iter_end_1aa2334b8:;;
	return static_cast<jule::Str>(_479_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1c0d64cd7_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1aa236b5e:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1aa236bd6:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1aa236c5d:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1aa236cd5:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1aa236d5c:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aa236dd4:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1aa236e5b:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1aa236ed3:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1aa23705a:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1aa2370d2:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1aa236a1b:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1c0d65128_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64* _9239_i) {
	jule::U8 _935_b = 0;;
	jule::Bool _938_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1c0d64cd7_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_935_b = __jule_assign_result.__jule_result_arg0;
		_938_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_938_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_935_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1aa23ad1c:;
			{
				;
				jule::I32 _1039_r = static_cast<jule::I32>(({
					auto except = _203622562_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:19"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _1039_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aa23b669:;
			{
				;
				jule::I32 _1089_r = static_cast<jule::I32>(({
					auto except = _203622562_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:19"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _1089_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aa23b6d0:;
			{
				;
				jule::Slice<jule::U8> _1139_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _203622562_ParseUint(static_cast<jule::Str>(_1139_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1aa23a1d4:;
			{
				;
				jule::Slice<jule::U8> _1189_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _203622562_ParseUint(static_cast<jule::Str>(_1189_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1aa23a17e:;
	};
}



inline jule::Slice<jule::U8> _1c0d6549c_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64* _12434_i) {
	jule::I32 _1255_r = _1c0d65128_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1255_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1255_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(jule::Str::from_rune(_1255_r));;
}



inline jule::I64 _1c0e96eb3_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64* _1138_start) {
	jule::I64 _129_i = (*(_1138_start));;
	while ((_129_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _149_r = 0;;
			jule::I64 _1412_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21ce5a556_DecodeRune((*(_1122_bytes)).slice(_129_i));
				_149_r = __jule_assign_result.__jule_result_arg0;
				_1412_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_149_r == '{')) {
				return _129_i;;
			};
			_129_i+=_1412_size;
		}
	_iter_next_1aa2708bd:;
	}
	_iter_end_1aa2708bd:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1c0e97348_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I64 _295_start = (*(_2824_i));;
	jule::I64 _309_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _329_r = 0;;
			jule::I64 _3212_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21ce5a556_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_329_r = __jule_assign_result.__jule_result_arg0;
				_3212_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_3212_size;
			{
				auto &_match_expr{ _329_r };
				
				if (_match_expr == '{') {
					_case_begin_1aa272d76:;
					{
						(_309_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1aa272e53:;
					{
						(_309_braces)--;
						if ((_309_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_295_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1aa27279e:;
			};
		}
	_iter_next_1aa2720d9:;
	}
	_iter_end_1aa2720d9:;;
	return nullptr;;
}



inline void _1c0e97634_FmtByDefault(_21cd5e16e_StrBuilder* _4822_buf, jule::Any* _4840_arg) {
	if (((*(_4840_arg)) == nullptr)) {
		_21cd67d15_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4840_arg)) };
		
		if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1aa2743a5:;
			{
				_21cd67d15_WriteStr(_4822_buf, _20361c55c_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4840_arg)).cast<jule::F32>(&__jule_any_type131))), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aa274a8c:;
			{
				_21cd67d15_WriteStr(_4822_buf, _20361c55c_FmtFloat(static_cast<jule::F64>((*(_4840_arg)).cast<jule::F64>(&__jule_any_type5)), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1aa27454d:;
			{
				_21cd67d15_WriteStr(_4822_buf, _2036340bd_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I8>(&__jule_any_type132)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1aa2745b4:;
			{
				_21cd67d15_WriteStr(_4822_buf, _2036340bd_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I16>(&__jule_any_type133)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1aa274bbe:;
			{
				_21cd67d15_WriteStr(_4822_buf, _2036340bd_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aa274c35:;
			{
				_21cd67d15_WriteStr(_4822_buf, _2036340bd_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I64>(&__jule_any_type1)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1aa274c9b:;
			{
				_21cd67d15_WriteStr(_4822_buf, _203633c05_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U8>(&__jule_any_type130)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1aa274d12:;
			{
				_21cd67d15_WriteStr(_4822_buf, _203633c05_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U16>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1aa274d78:;
			{
				_21cd67d15_WriteStr(_4822_buf, _203633c05_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U32>(&__jule_any_type135)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aa274dde:;
			{
				_21cd67d15_WriteStr(_4822_buf, _203633c05_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U64>(&__jule_any_type2)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aa274e55:;
			{
				_21cd67d15_WriteStr(_4822_buf, (*(_4840_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1aa274ebb:;
			{
				if ((*(_4840_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_21cd67d15_WriteStr(_4822_buf, jule::Str::lit("true", 4));
				} else {
					_21cd67d15_WriteStr(_4822_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1aa273d99:;
			{
				_21cd67d15_WriteStr(_4822_buf, jule::to_str((*(_4840_arg))));
			}
		}
		_match_end_1aa273272:;
	};
}



inline void _1c0e97a52_applyFmtByDefault(_21cd5e16e_StrBuilder* _8727_buf, jule::I64* _8749_j, jule::Slice<jule::Any> _8757_args) {
	jule::Any _885_arg = _8757_args[(*(_8749_j))];;
	((*(_8749_j)))++;
	_1c0e97634_FmtByDefault(_8727_buf, &(_885_arg));
}



inline void _1c0e97ea3_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _21cd5e16e_StrBuilder* _9536_buf, jule::I64* _9558_j, jule::Slice<jule::Any> _9566_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1c0e97a52_applyFmtByDefault(_9536_buf, _9558_j, _9566_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		_21cd67d15_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_21cd67a5c_Write(_9536_buf, (*(_9518_fmt)));
}



inline jule::Str _1c0e982e4_Format(jule::Str* _11412_fmt, jule::Slice<jule::Any> _11422_args) {
	if ((_11422_args.len() == 0LL)) {
		return (*(_11412_fmt));;
	};
	jule::Slice<jule::U8> _1189_fmtBytes = _21b9b7081_Stobs(_11412_fmt);;
	_21cd5e16e_StrBuilder _1199_buf = static__21cd5e48d_New(static_cast<jule::I64>((*(_11412_fmt)).len()));;
	jule::I64 _1209_j = 0LL;;
	jule::I64 _1219_last = 0LL;;
	jule::I64 _1229_i = _1c0e96eb3_findFormatPrefix(&(_1189_fmtBytes), &(_1219_last));;
	for (; (_1229_i != -1LL); _1229_i=static_cast<jule::I64>(_1c0e96eb3_findFormatPrefix(&(_1189_fmtBytes), &(_1229_i)))) {
		{
			_21cd67a5c_Write(&_1199_buf, _1189_fmtBytes.slice(_1219_last, _1229_i));
			jule::Slice<jule::U8> _12513_format = _1c0e97348_getFormatRange(&(_1229_i), &(_1189_fmtBytes));;
			if ((_12513_format == nullptr)) {
				goto _iter_next_1aa280bb9;
			};
			_1c0e97ea3_applyFmt(&(_12513_format), &(_1199_buf), &(_1209_j), _11422_args);
			if ((_1209_j >= _11422_args.len())) {
				_21cd67a5c_Write(&_1199_buf, _1189_fmtBytes.slice(_1229_i));
				_1219_last=static_cast<jule::I64>(_1189_fmtBytes.len());
				goto _iter_end_1aa280bb9;
			};
			_1219_last=_1229_i;
		}
	_iter_next_1aa280bb9:;
	}
	_iter_end_1aa280bb9:;;
	if ((_1219_last < _1189_fmtBytes.len())) {
		_21cd67a5c_Write(&_1199_buf, _1189_fmtBytes.slice(_1219_last));
	};
	return _21cd6860c_Str(&_1199_buf);;
}



inline jule::Str _1c0e9a36d_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1c0e982e4_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _1c0c76787_parameterUsesGenerics(jule::Ptr<_1c0c7350e_ParamIns>* _38431_p, jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>>* _38446_generics) {
	if (_1c0c701ed_IsSelf((*((*(_38431_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1c0dcac71_kindUsesGenerics(&((*((*(_38431_p))))._field_Kind), _38446_generics);;
}



inline jule::Ptr<_1c0db76db_TypeSymbol> _1c0c78ed7_buildType(jule::Ptr<_1c0c3a9e3_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1c0d81496_Value> _1c0c792e5_buildExpr(jule::Ptr<_1c0c3ed27_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1c0dae727_TypeAlias> _1c0c795ae_buildTypeAlias(jule::Ptr<_1c0c52356_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1c0dae727_TypeAlias>(_1c0dae727_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*(_11223_decl))._field_Public, ._field_Binded=(*(_11223_decl))._field_Binded, ._field_Token=(*(_11223_decl))._field_Token, ._field_Ident=(*(_11223_decl))._field_Ident, ._field_Kind=_1c0c78ed7_buildType((*(_11223_decl))._field_Kind), });;
}



inline jule::Ptr<_1c0c58758_Field> _1c0c79900_buildField(jule::Ptr<_1c0c55b2e_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1c0c58758_Field>(_1c0c58758_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*(_12319_decl))._field_Public, ._field_Mutable=(*(_12319_decl))._field_Mutable, ._field_Ident=(*(_12319_decl))._field_Ident, ._field_Kind=_1c0c78ed7_buildType((*(_12319_decl))._field_Kind), ._field_Default=(*(_12319_decl))._field_Default});;
}



inline jule::Slice<jule::Ptr<_1c0c58758_Field>> _1c0c79bb9_buildFields(jule::Slice<jule::Ptr<_1c0c55b2e_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1c0c58758_Field>> _1359_fields = jule::Slice<jule::Ptr<_1c0c58758_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa52bb8a:;
		if (it != expr_end) {
			jule::Ptr<_1c0c55b2e_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c58758_Field>> &__jule_push_dest = _1359_fields; __jule_push_dest.push(_1c0c79900_buildField(_13617_decl)); };
			}
			_iter_next_1aa52bb8a:;
			++it;
			goto _iter_begin_1aa52bb8a;
		}
		_iter_end_1aa52bb8a:;
	};
	return _1359_fields;;
}



inline jule::Ptr<_1c0c5b64b_Struct> _1c0c79e83_buildStruct(jule::Ptr<_1c0c56525_StructDecl> _14220_decl) {
	return jule::new_ptr<_1c0c5b64b_Struct>(_1c0c5b64b_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*(_14220_decl))._field_Ident, ._field_Fields=_1c0c79bb9_buildFields(&((*(_14220_decl))._field_Fields)), ._field_Public=(*(_14220_decl))._field_Public, ._field_Binded=(*(_14220_decl))._field_Binded, ._field_Directives=(*(_14220_decl))._field_Directives, ._field_Generics=(*(_14220_decl))._field_Generics, });;
}



inline jule::Ptr<_1c0c6ead2_Param> _1c0c7a24c_buildParam(jule::Ptr<_1c0c4b251_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1c0c6ead2_Param>(_1c0c6ead2_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*(_15419_decl))._field_Mutable, ._field_Variadic=(*(_15419_decl))._field_Variadic, ._field_Reference=(*(_15419_decl))._field_Reference, ._field_Kind=_1c0c78ed7_buildType((*(_15419_decl))._field_Kind), ._field_Ident=(*(_15419_decl))._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1c0c6ead2_Param>> _1c0c7a5e3_buildParams(jule::Slice<jule::Ptr<_1c0c4b251_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1c0c6ead2_Param>> _1669_params = jule::Slice<jule::Ptr<_1c0c6ead2_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5358ec:;
		if (it != expr_end) {
			jule::Ptr<_1c0c4b251_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c6ead2_Param>> &__jule_push_dest = _1669_params; __jule_push_dest.push(_1c0c7a24c_buildParam(_16717_decl)); };
			}
			_iter_next_1aa5358ec:;
			++it;
			goto _iter_begin_1aa5358ec;
		}
		_iter_end_1aa5358ec:;
	};
	return _1669_params;;
}



inline jule::Ptr<_1c0c6e351_RetType> _1c0c7a8ac_buildRetType(jule::Ptr<_1c0c3d8d6_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*(_17321_decl))._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c0c6e351_RetType>(_1c0c6e351_RetType{._field_Kind=_1c0c78ed7_buildType((*(_17321_decl))._field_Kind), ._field_Idents=(*(_17321_decl))._field_Idents});;
}



inline jule::Ptr<_1c0c715a6_Fn> _1c0c7ab76_buildFunc(jule::Ptr<_1c0c4c6a3_FnDecl> _18318_decl) {
	return jule::new_ptr<_1c0c715a6_Fn>(_1c0c715a6_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*(_18318_decl))._field_Global, ._field_Unsafety=(*(_18318_decl))._field_Unsafety, ._field_Public=(*(_18318_decl))._field_Public, ._field_Binded=(*(_18318_decl))._field_Binded, ._field_Statically=(*(_18318_decl))._field_Statically, ._field_Exceptional=(*(_18318_decl))._field_Exceptional, ._field_Ident=(*(_18318_decl))._field_Ident, ._field_Directives=(*(_18318_decl))._field_Directives, ._field_Scope=(*(_18318_decl))._field_Scope, ._field_Generics=(*(_18318_decl))._field_Generics, ._field_Result=_1c0c7a8ac_buildRetType((*(_18318_decl))._field_Result), ._field_Params=_1c0c7a5e3_buildParams(&((*(_18318_decl))._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1c0c715a6_Fn>> _1c0c7ae40_buildMethods(jule::Slice<jule::Ptr<_1c0c4c6a3_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1c0c715a6_Fn>> _2029_methods = jule::Slice<jule::Ptr<_1c0c715a6_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa53a847:;
		if (it != expr_end) {
			jule::Ptr<_1c0c4c6a3_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c715a6_Fn>> &__jule_push_dest = _2029_methods; __jule_push_dest.push(_1c0c7ab76_buildFunc(_20317_decl)); };
			}
			_iter_next_1aa53a847:;
			++it;
			goto _iter_begin_1aa53a847;
		}
		_iter_end_1aa53a847:;
	};
	return _2029_methods;;
}



inline jule::Slice<jule::Ptr<_1c0db76db_TypeSymbol>> _1c0c7b209_buildTraitInherits(jule::Slice<jule::Ptr<_1c0c3a9e3_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1c0db76db_TypeSymbol>> _2109_symbols = jule::Slice<jule::Ptr<_1c0db76db_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa53b529:;
		if (it != expr_end) {
			jule::Ptr<_1c0c3a9e3_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0db76db_TypeSymbol>> &__jule_push_dest = _2109_symbols; __jule_push_dest.push(_1c0c78ed7_buildType(_21117_it)); };
			}
			_iter_next_1aa53b529:;
			++it;
			goto _iter_begin_1aa53b529;
		}
		_iter_end_1aa53b529:;
	};
	return _2109_symbols;;
}



inline jule::Ptr<_1c0c84850_Trait> _1c0c7b4c3_buildTrait(jule::Ptr<_1c0c56c62_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1c0c84850_Trait>(_1c0c84850_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*(_21719_decl))._field_Ident, ._field_Public=(*(_21719_decl))._field_Public, ._field_Inherits=_1c0c7b209_buildTraitInherits(&((*(_21719_decl))._field_Inherits)), ._field_Methods=_1c0c7ae40_buildMethods(&((*(_21719_decl))._field_Methods)), });;
}



inline jule::Ptr<_1c0c864cd_EnumItem> _1c0c7b78c_buildEnumItem(jule::Ptr<_1c0c53d19_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1c0c864cd_EnumItem>(_1c0c864cd_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*(_22722_decl))._field_Ident, ._field_Value=_1c0c792e5_buildExpr((*(_22722_decl))._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1c0c864cd_EnumItem>> _1c0c7ba56_buildEnumItems(jule::Slice<jule::Ptr<_1c0c53d19_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1c0c864cd_EnumItem>> _2369_items = jule::Slice<jule::Ptr<_1c0c864cd_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa53e98e:;
		if (it != expr_end) {
			jule::Ptr<_1c0c53d19_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c864cd_EnumItem>> &__jule_push_dest = _2369_items; __jule_push_dest.push(_1c0c7b78c_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1aa53e98e:;
			++it;
			goto _iter_begin_1aa53e98e;
		}
		_iter_end_1aa53e98e:;
	};
	return _2369_items;;
}



inline jule::Ptr<_1c0c8704a_Enum> _1c0c7bec9_buildEnum(jule::Ptr<_1c0c548ca_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1c0c8704a_Enum>(_1c0c8704a_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*(_24318_decl))._field_Public, ._field_Ident=(*(_24318_decl))._field_Ident, ._field_Kind=_1c0c78ed7_buildType((*(_24318_decl))._field_Kind), ._field_Items=_1c0c7ba56_buildEnumItems(&((*(_24318_decl))._field_Items))});;
}



inline jule::Ptr<_1c0c8817d_TypeEnumItem> _1c0c7c293_buildTypeEnumItem(jule::Ptr<_1c0c55205_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1c0c8817d_TypeEnumItem>(_1c0c8817d_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*(_25326_decl))._field_Ident, ._field_Kind=_1c0c78ed7_buildType((*(_25326_decl))._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1c0c8817d_TypeEnumItem>> _1c0c7c55c_buildTypeEnumItems(jule::Slice<jule::Ptr<_1c0c55205_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1c0c8817d_TypeEnumItem>> _2629_items = jule::Slice<jule::Ptr<_1c0c8817d_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa542ad5:;
		if (it != expr_end) {
			jule::Ptr<_1c0c55205_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0c8817d_TypeEnumItem>> &__jule_push_dest = _2629_items; __jule_push_dest.push(_1c0c7c293_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1aa542ad5:;
			++it;
			goto _iter_begin_1aa542ad5;
		}
		_iter_end_1aa542ad5:;
	};
	return _2629_items;;
}



inline jule::Ptr<_1c0c88755_TypeEnum> _1c0c7c826_buildTypeEnum(jule::Ptr<_1c0c55865_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1c0c88755_TypeEnum>(_1c0c88755_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*(_26922_decl))._field_Public, ._field_Ident=(*(_26922_decl))._field_Ident, ._field_Items=_1c0c7c55c_buildTypeEnumItems(&((*(_26922_decl))._field_Items))});;
}



inline jule::Ptr<_1c0d2b94c_Var> _1c0c7cae0_buildVar(jule::Ptr<_1c0c4d781_VarDecl> _27817_decl) {
	return jule::new_ptr<_1c0d2b94c_Var>(_1c0d2b94c_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*(_27817_decl))._field_Ident, ._field_Binded=(*(_27817_decl))._field_Binded, ._field_Constant=(*(_27817_decl))._field_Constant, ._field_Mutable=(*(_27817_decl))._field_Mutable, ._field_Public=(*(_27817_decl))._field_Public, ._field_Statically=(*(_27817_decl))._field_Statically, ._field_Reference=(*(_27817_decl))._field_Reference, ._field_Kind=_1c0c78ed7_buildType((*(_27817_decl))._field_Kind), ._field_Value=_1c0c792e5_buildExpr((*(_27817_decl))._field_Expr), ._field_Refers=static__1c0c77953_new(), ._field_Directives=(*(_27817_decl))._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1c0d2b94c_Var>> _1c0c7cda9_buildVars(jule::Slice<jule::Ptr<_1c0c4d781_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1c0d2b94c_Var>> _2969_vars = jule::Slice<jule::Ptr<_1c0d2b94c_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5472d2:;
		if (it != expr_end) {
			jule::Ptr<_1c0c4d781_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = _2969_vars; __jule_push_dest.push(_1c0c7cae0_buildVar(_29717_decl)); };
			}
			_iter_next_1aa5472d2:;
			++it;
			goto _iter_begin_1aa5472d2;
		}
		_iter_end_1aa5472d2:;
	};
	return _2969_vars;;
}



inline jule::Ptr<_1c0cabbc9_Impl> _1c0c7d173_buildImpl(jule::Ptr<_1c0c573c2_Impl> _30318_decl) {
	return jule::new_ptr<_1c0cabbc9_Impl>(_1c0cabbc9_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*(_30318_decl))._field_Dest, ._field_Methods=_1c0c7ae40_buildMethods(&((*(_30318_decl))._field_Methods)), ._field_Statics=_1c0c7cda9_buildVars((*(_30318_decl))._field_Statics)});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca76b9_buildAsComptimeMethodData(jule::Ptr<_1c0c744aa_FnIns>* _141635_f) {
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>((*(_141635_f)), 1)}), });;
}



inline jule::Ptr<_1c0cd353b_ImportInfo> _1c0ca79c7_findComptimePackage(jule::Ptr<_1c0d04705_Sema>* _142429_s) {
	return _1c0d04b9a_SelectPackage((*(_142429_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1c0cd353b_ImportInfo>)>([=](jule::Ptr<_1c0cd353b_ImportInfo> _142528_pkg) mutable -> jule::Bool {
		return (*(_142528_pkg))._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca7d4b_buildComptimeTypeInfoData(jule::Ptr<_1c0d04705_Sema>* _143035_s, jule::Ptr<_1c0db0519_TypeKind>* _143050_t) {
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_1c0d04040_pushComptimeTypeInfo((*((*(_143035_s))))._field_meta.ptr(), _143050_t), 15)}), });;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ca807c_buildComptimeValue(jule::Ptr<_1c0d80352_Data>* _143828_d) {
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0ca1ad1_comptimeValue>(_1c0ca1ad1_comptimeValue{._field_data=(*(_143828_d))}), 16)}), });;
}



inline jule::Bool _1c0cab04c_matchConstraint(jule::Str* _14221_c, jule::Ptr<_1c0db0519_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1aa6ea3db:;
			{
				jule::Ptr<_1c0db80e3_Prim> _1459_prim = _1c0db2b6a_Prim((*(_14234_g)).ptr());;
				if ((_1459_prim == nullptr)) {
					return false;;
				};
				return _2036443db_IsSigNum((*(_1459_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1aa701117:;
			{
				jule::Ptr<_1c0db80e3_Prim> _1519_prim = _1c0db2b6a_Prim((*(_14234_g)).ptr());;
				if ((_1519_prim == nullptr)) {
					return false;;
				};
				return _20364374d_IsUnsigInt((*(_1519_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1aa70117d:;
			{
				jule::Ptr<_1c0db80e3_Prim> _1579_prim = _1c0db2b6a_Prim((*(_14234_g)).ptr());;
				if ((_1579_prim == nullptr)) {
					return false;;
				};
				return _203643d58_IsFloat((*(_1579_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1aa7012e3:;
			{
				jule::Ptr<_1c0db80e3_Prim> _1639_prim = _1c0db2b6a_Prim((*(_14234_g)).ptr());;
				if ((_1639_prim == nullptr)) {
					return false;;
				};
				return _203644122_IsNum((*(_1639_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1aa701359:;
			{
				return _1c0db1d9a_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1aa7013c0:;
			{
				return (!(_1c0db1d9a_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1aa701436:;
			{
				return _1c0db1b14_Comparable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1aa701546:;
			{
				return _1c0db2131_Ordered((*(_14234_g)).ptr());;
			}
		}
		else {
			_case_begin_1aa6eeed4:;
			{
				return false;;
			}
		}
		_match_end_1aa6eee7e:;
	};
}



inline jule::Bool _1c0cab35a_isBuiltinConstraint(jule::Str* _18125_ident) {
	{
		auto expr = &(_1c0ca9347_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa70676b:;
		if (it != expr_end) {
			jule::Str *_18212_bc = it;
			{
				if (((*(_18125_ident)) == (*(_18212_bc)))) {
					return true;;
				};
			}
			_iter_next_1aa70676b:;
			++it;
			goto _iter_begin_1aa70676b;
		}
		_iter_end_1aa70676b:;
	};
	return false;;
}



inline jule::Ptr<_1c0cb9412_scopeChecker> _1c0caddda_newScopeCheckerBase(jule::Ptr<_1c0d04705_Sema>* _5829_s, jule::Ptr<_1c0c744aa_FnIns> _5843_owner) {
	return jule::new_ptr<_1c0cb9412_scopeChecker>(_1c0cb9412_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1c0d7a12c_SymbolTable>(), });;
}



inline jule::Ptr<_1c0cb9412_scopeChecker> _1c0cae2a3_newScopeChecker(jule::Ptr<_1c0d04705_Sema>* _6625_s, jule::Ptr<_1c0c744aa_FnIns> _6639_owner) {
	jule::Ptr<_1c0cb9412_scopeChecker> _679_base = _1c0caddda_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_679_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c0cb7e6b_scopeLabel>>>(nullptr);
	(*(_679_base))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c0cb84ee_scopeGoto>>>(nullptr);
	return _679_base;;
}



inline jule::Ptr<_1c0cb7e6b_scopeLabel> _1c0cae627_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1c0cb9412_scopeChecker> _7637_scope) {
	jule::Ptr<_1c0cb7e6b_scopeLabel> _779_label = _1c0cbce1b_findLabelScope(_7637_scope, _7621_ident);;
	while ((_779_label == nullptr)) {
		{
			if ((((*(_7637_scope))._field_parent == nullptr) || ((*(_7637_scope))._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*(_7637_scope))._field_parent;
			_779_label=_1c0cbce1b_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1aa71ec6d:;
	}
	_iter_end_1aa71ec6d:;;
	return _779_label;;
}



inline jule::Bool _1c0cae9e0_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1c0cb210d_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1aa72170e:;
			{
				jule::Ptr<_1c0c65842_FnCallExprModel> _939_fcem = _9021_Model.cast_ptr<_1c0c65842_FnCallExprModel>(&__jule_any_type34);;
				if (((*(_939_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1aa721775:;
			{
				jule::Ptr<_1c0d80352_Data> _989_d = _9021_Model.cast_ptr<_1c0d80352_Data>(&__jule_any_type24);;
				return _1c0cae9e0_modelIsGotoScope((*(_989_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1aa7216a9:;
	};
	return false;;
}



inline jule::Bool _1c0caed64_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1c0cb210d_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1aa723447:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1c0cb210d_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1aa7234ad:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1c0cb3043_InfIter>(&__jule_any_type36)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1aa723535:;
			{
				jule::Ptr<_1c0cb3e45_RangeIter> _1119_it = (*(_10421_stmt)).cast_ptr<_1c0cb3e45_RangeIter>(&__jule_any_type40);;
				return (((*(_1119_it))._field_Scope == (*(_10434_sc))) || _1c0cae9e0_modelIsGotoScope((*((*(_1119_it))._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1aa7235ac:;
			{
				jule::Ptr<_1c0cb34e9_WhileIter> _1149_it = (*(_10421_stmt)).cast_ptr<_1c0cb34e9_WhileIter>(&__jule_any_type38);;
				return ((((*(_1149_it))._field_Scope == (*(_10434_sc))) || _1c0cae9e0_modelIsGotoScope((*(_1149_it))._field_Expr, _10434_sc)) || _1c0cae9e0_modelIsGotoScope((*(_1149_it))._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1aa7237cc:;
			{
				jule::Ptr<_1c0cb6244_Match> _1199_m = (*(_10421_stmt)).cast_ptr<_1c0cb6244_Match>(&__jule_any_type47);;
				{
					auto expr = &((*(_1199_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa72614d:;
					if (it != expr_end) {
						jule::Ptr<_1c0cb6d7c_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*((*(_12016_c))))._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aa7282c6:;
								if (it != expr_end) {
									jule::Ptr<_1c0d80352_Data> *_12420_expr = it;
									{
										if (_1c0cae9e0_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1aa7282c6:;
									++it;
									goto _iter_begin_1aa7282c6;
								}
								_iter_end_1aa7282c6:;
							};
						}
						_iter_next_1aa72614d:;
						++it;
						goto _iter_begin_1aa72614d;
					}
					_iter_end_1aa72614d:;
				};
				return (((*(_1199_m))._field_Default != nullptr) && ((*((*(_1199_m))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1aa723854:;
			{
				jule::Ptr<_1c0cb2c46_Conditional> _1329_c = (*(_10421_stmt)).cast_ptr<_1c0cb2c46_Conditional>(&__jule_any_type35);;
				{
					auto expr = &((*(_1329_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa72788b:;
					if (it != expr_end) {
						jule::Ptr<_1c0cb252b_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _1c0cae9e0_modelIsGotoScope((*((*(_13316_elif))))._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1aa72788b:;
						++it;
						goto _iter_begin_1aa72788b;
					}
					_iter_end_1aa72788b:;
				};
				return (((*(_1329_c))._field_Default != nullptr) && ((*((*(_1329_c))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1aa7238cb:;
			{
				jule::Ptr<_1c0d80352_Data> _1409_d = (*(_10421_stmt)).cast_ptr<_1c0d80352_Data>(&__jule_any_type24);;
				return _1c0cae9e0_modelIsGotoScope((*(_1409_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1aa717c44:;
			{
				return false;;
			}
		}
		_match_end_1aa7230d4:;
	};
}



inline jule::I64 _1c0cb01d8_countMatchType(jule::Ptr<_1c0cb6244_Match>* _14720_m, jule::Ptr<_1c0db0519_TypeKind>* _14732_t) {
	jule::I64 _1489_n = 0LL;;
	jule::Str _1495_kind = _1c0db08d2_Str((*(_14732_t)).ptr());;
	_julec_label_1aa72c60a:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa72c2db:;
		if (it != expr_end) {
			jule::Ptr<_1c0cb6d7c_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1aa72c2db;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa72d441:;
					if (it != expr_end) {
						jule::Ptr<_1c0d80352_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1aa72c2db;
							};
							if ((_1495_kind == _1c0db08d2_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_1c0db0519_TypeKind>(&__jule_any_type83).ptr()))) {
								(_1489_n)++;
							};
						}
						_iter_next_1aa72d441:;
						++it;
						goto _iter_begin_1aa72d441;
					}
					_iter_end_1aa72d441:;
				};
			}
			_iter_next_1aa72c2db:;
			++it;
			goto _iter_begin_1aa72c2db;
		}
		_iter_end_1aa72c2db:;
	};
	return _1489_n;;
}



inline jule::Slice<jule::Ptr<_1c0d80352_Data>> _1c0cb04a2_getDatasFromTupleData(jule::Ptr<_1c0d80352_Data>* _17131_d) {
	if ((_1c0db4991_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1aa73290c:;
				{
					return (*((*((*(_17131_d))))._field_Model.cast_ptr<_1c0c69060_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
				}
			}
			else {
				_case_begin_1aa7303bb:;
				{
					jule::Ptr<_1c0dbd1d6_Tuple> _17717_t = _1c0db4991_Tup((*((*(_17131_d))))._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1c0d80352_Data>> _17817_r = jule::Slice<jule::Ptr<_1c0d80352_Data>>::alloc(0LL, (*(_17717_t))._field_Types.len());;
					{
						auto expr = &((*(_17717_t))._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa7312bd:;
						if (it != expr_end) {
							jule::Ptr<_1c0db0519_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1c0d80352_Data>> &__jule_push_dest = _17817_r; __jule_push_dest.push(jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1aa7312bd:;
							++it;
							goto _iter_begin_1aa7312bd;
						}
						_iter_end_1aa7312bd:;
					};
					return _17817_r;;
				}
			}
			_match_end_1aa730366:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1c0d80352_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1c0cb0d65_checkMut(jule::Ptr<_1c0d04705_Sema>* _20618_s, jule::Ptr<_1c0d80352_Data>* _20629_left, jule::Ptr<_1c0d80352_Data> _20646_right, jule::Ptr<_1c0c25406_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1aa7358bb:;
			{
				_1c0d07340_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*(_20646_right))._field_Mutable))) && _1c0db1d9a_Mutable((*(_20646_right))._field_Kind.ptr()))) {
			_case_begin_1aa735943:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1c0db41dd_Struct((*(_20646_right))._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1c0d07340_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_20646_right))._field_Kind.ptr()), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aa735800:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aa735745:;
	};
}



inline jule::Bool _1c0cb134e_checkAssign(jule::Ptr<_1c0d04705_Sema>* _22521_s, jule::Ptr<_1c0d80352_Data>* _22536_left, jule::Ptr<_1c0d80352_Data> _22553_right, jule::Ptr<_1c0c25406_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c0c744aa_FnIns> _2265_f = _1c0db3e57_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2265_f != nullptr) && ((*(_2265_f))._field_Decl != nullptr)) && (*((*(_2265_f))._field_Decl))._field_Global)) {
		_1c0d07340_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1c0d80c26_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1aa73adaa:;
			{
				_1c0d07340_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1c0d076a3_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1aa73ae32:;
			{
				_1c0d07340_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1c0cb0d65_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1aa73aea9:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aa73acde:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aa73a45e:;
	};
}



inline jule::Bool _1c0cb1618_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1aa73b1eb:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1c0c49491_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1aa73d3c9:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa73b64c:;
			{
				return false;;
			}
		}
		_match_end_1aa73d022:;
	};
}



inline jule::Bool _1c0cb18d2_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1aa73d8e6:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1aa73e221:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1c0d80352_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1aa74040e:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1aa740398:;
						{
							return false;;
						}
					}
					_match_end_1aa740343:;
				};
			}
		}
		else {
			_case_begin_1aa73debd:;
			{
				return false;;
			}
		}
		_match_end_1aa73de68:;
	};
}



inline jule::Bool _1c0cb1b9b_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa73ec6b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa740563:;
			{
				return false;;
			}
		}
		_match_end_1aa73e92a:;
	};
}



inline jule::U64 _1c0ccb4ce_removeEqFromOp(jule::U64 _213819_op) {
	{
		auto &_match_expr{ _213819_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1aa740a5d:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1aa7415db:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1aa741652:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1aa741773:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1aa7417d9:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1aa741850:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1aa7418c7:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1aa74194e:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1aa741a1a:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1aa741a81:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1aa7412cd:;
			{
				return _213819_op;;
			}
		}
		_match_end_1aa741267:;
	};
}



inline jule::Ptr<_1c0d2b94c_Var> _1c0cd0a22_findVarInPackage(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8ecde6:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1c0d2b94c_Var> _4813_v = _1c0d7aa12_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4813_v != nullptr)) {
					return _4813_v;;
				};
			}
			_iter_next_1aa8ecde6:;
			++it;
			goto _iter_begin_1aa8ecde6;
		}
		_iter_end_1aa8ecde6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0dae727_TypeAlias> _1c0cd0e95_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8ee2d2:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1c0dae727_TypeAlias> _6013_ta = _1c0d7ae0d_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6013_ta != nullptr)) {
					return _6013_ta;;
				};
			}
			_iter_next_1aa8ee2d2:;
			++it;
			goto _iter_begin_1aa8ee2d2;
		}
		_iter_end_1aa8ee2d2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c5b64b_Struct> _1c0cd13c4_findStructInPackage(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9006bd:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1c0c5b64b_Struct> _7213_s = _1c0d7b309_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7213_s != nullptr)) {
					return _7213_s;;
				};
			}
			_iter_next_1aa9006bd:;
			++it;
			goto _iter_begin_1aa9006bd;
		}
		_iter_end_1aa9006bd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c715a6_Fn> _1c0cd187a_findFnInPackage(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa901aa9:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1c0c715a6_Fn> _8413_f = _1c0d7b705_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8413_f != nullptr)) {
					return _8413_f;;
				};
			}
			_iter_next_1aa901aa9:;
			++it;
			goto _iter_begin_1aa901aa9;
		}
		_iter_end_1aa901aa9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c84850_Trait> _1c0cd1bbb_findTraitInPackage(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9021a3:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1c0c84850_Trait> _9613_t = _1c0d7ba46_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9613_t != nullptr)) {
					return _9613_t;;
				};
			}
			_iter_next_1aa9021a3:;
			++it;
			goto _iter_begin_1aa9021a3;
		}
		_iter_end_1aa9021a3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c8704a_Enum> _1c0cd2040_findEnumInPackage(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa903e63:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1c0c8704a_Enum> _10813_e = _1c0d7bd87_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10813_e != nullptr)) {
					return _10813_e;;
				};
			}
			_iter_next_1aa903e63:;
			++it;
			goto _iter_begin_1aa903e63;
		}
		_iter_end_1aa903e63:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c0c88755_TypeEnum> _1c0cd23b4_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa905162:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1c0c88755_TypeEnum> _12013_e = _1c0d7c1c8_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12013_e != nullptr)) {
					return _12013_e;;
				};
			}
			_iter_next_1aa905162:;
			++it;
			goto _iter_begin_1aa905162;
		}
		_iter_end_1aa905162:;
	};
	return nullptr;;
}



inline jule::Any _1c0cd2903_defByIdentPackage(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9065a3:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _13017_file = *it;
			{
				jule::Any _13113_def = _1c0d7d196_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13113_def != nullptr)) {
					return _13113_def;;
				};
			}
			_iter_next_1aa9065a3:;
			++it;
			goto _iter_begin_1aa9065a3;
		}
		_iter_end_1aa9065a3:;
	};
	return nullptr;;
}



inline jule::Bool _1c0cd893c_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _21cd492ad_HasPrefix((*(_35518_f)), _21cd6b467_Join(jule::Slice<jule::Str>::make({_21d2d524e_PathStdlib,_35526_p})));;
}



inline jule::Bool _1c0d01d95_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa917097:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1aa91710d:;
			{
				jule::Ptr<_1c0c683d3_StructSubIdentExprModel> _1813_model = (*(_1328_m)).cast_ptr<_1c0c683d3_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1c0d01d95_isValidModelForRef(&((*((*(_1813_model))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1aa917174:;
			{
				jule::Ptr<_1c0c67a42_TraitSubIdentExprModel> _2113_model = (*(_1328_m)).cast_ptr<_1c0c67a42_TraitSubIdentExprModel>(&__jule_any_type96);;
				return _1c0d01d95_isValidModelForRef(&((*(_2113_model))._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aa9171eb:;
			{
				jule::Ptr<_1c0c63c3b_UnaryExprModel> _2413_unary = (*(_1328_m)).cast_ptr<_1c0c63c3b_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_2413_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1c0db3187_Ptr((*((*(_2413_unary))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1c0db2e01_Sptr((*((*(_2413_unary))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1c0d01d95_isValidModelForRef(&((*((*(_2413_unary))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1aa9173d8:;
			{
				jule::Ptr<_1c0c661c2_IndexingExprModel> _3813_indexing = (*(_1328_m)).cast_ptr<_1c0c661c2_IndexingExprModel>(&__jule_any_type45);;
				return _1c0d01d95_isValidModelForRef(&((*((*(_3813_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1aa917031:;
			{
				return false;;
			}
		}
		_match_end_1aa916abe:;
	};
}



inline _21ce0c86b_Log _1c0d023c3_compilerErr(jule::Ptr<_1c0c25406_Token>* _4517_token, jule::Bool _4532_line, jule::Str _4544_fmt, jule::Slice<jule::Any> _4557_args) {
	_21ce0c86b_Log _469_log = _21ce0c86b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4517_token))))._field_Row, ._field_Column=(*((*(_4517_token))))._field_Column, ._field_Path=(*((*((*(_4517_token))))._field_File))._field_Path, ._field_Text=_21ce0cccd_Logf(_4544_fmt, _4557_args), };;
	if (_4532_line) {
		_469_log._field_Line=_1c0c2bb9e_GetRow((*((*(_4517_token))))._field_File.ptr(), (*((*(_4517_token))))._field_Row);
	};
	return _469_log;;
}



inline jule::Bool _1c0d02747_impIsLookupable(jule::Ptr<_1c0cd353b_ImportInfo>* _5921_i, jule::Str* _5938_ident) {
	if ((*((*(_5921_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5921_i))))._field_ImportAll))) {
		if (((*((*(_5921_i))))._field_Selected.len() > 0LL)) {
			return _1c0cd5dbd_existIdent((*(_5921_i)).ptr(), (*(_5938_ident)));;
		};
	};
	return (*((*(_5921_i))))._field_ImportAll;;
}



inline void _1c0d02a00_appendRetVars(jule::Slice<jule::Ptr<_1c0d2b94c_Var>>* _7123_dest, jule::Ptr<_1c0c744aa_FnIns>* _7142_f) {
	if ((_1c0c71a29_IsVoid((*((*(_7142_f))))._field_Decl.ptr()) || ((*((*(_7142_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c0db0519_TypeKind>> _769_types = _1c0c756a9_Types((*(_7142_f)).ptr());;
	{
		auto expr = &((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa922701:;
		if (it != expr_end) {
			jule::I64 _7710_i = it - expr->begin();
			jule::Ptr<_1c0c25406_Token> _7717_ident = *it;
			{
				if ((_1c0c27d65_IsIgnoreIdent((*(_7717_ident))._field_Kind) || _1c0c2812e_IsAnonIdent((*(_7717_ident))._field_Kind))) {
					goto _iter_next_1aa922701;
				};
				{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = (*(_7123_dest)); __jule_push_dest.push(jule::new_ptr<_1c0d2b94c_Var>(_1c0d2b94c_Var{._field_Scope=(*((*(_7142_f))))._field_Scope, ._field_Token=_7717_ident, ._field_Ident=(*(_7717_ident))._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=_769_types[_7710_i]}), ._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()}), ._field_RetOrder=_7710_i, })); };
			}
			_iter_next_1aa922701:;
			++it;
			_7710_i++;
			goto _iter_begin_1aa922701;
		}
		_iter_end_1aa922701:;
	};
	if ((((*((*((*((*(_7142_f))))._field_Decl))._field_Result))._field_Idents.len() == 1LL) && ((*(_7123_dest)).len() == 1LL))) {
		(*((*(_7123_dest))[((*(_7123_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1c0d02cdb_appendParamVars(jule::Slice<jule::Ptr<_1c0d2b94c_Var>>* _10125_dest, jule::Ptr<_1c0c744aa_FnIns>* _10144_f) {
	if (((*((*(_10144_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_10144_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa926dba:;
		if (it != expr_end) {
			jule::Ptr<_1c0c7350e_ParamIns> _10617_p = *it;
			{
				if ((_1c0c27d65_IsIgnoreIdent((*((*(_10617_p))._field_Decl))._field_Ident) || _1c0c2812e_IsAnonIdent((*((*(_10617_p))._field_Decl))._field_Ident))) {
					goto _iter_next_1aa926dba;
				};
				jule::Ptr<_1c0d2b94c_Var> _11113_v = jule::new_ptr<_1c0d2b94c_Var>(_1c0d2b94c_Var{._field_Scope=(*((*(_10144_f))))._field_Scope, ._field_Token=(*((*(_10617_p))._field_Decl))._field_Token, ._field_Ident=(*((*(_10617_p))._field_Decl))._field_Ident, ._field_Mutable=(*((*(_10617_p))._field_Decl))._field_Mutable, ._field_Used=true, ._field_Reference=(*((*(_10617_p))._field_Decl))._field_Reference, ._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(), ._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()}), });;
				{
					
					if (_1c0c701ed_IsSelf((*(_10617_p))._field_Decl.ptr())) {
						_case_begin_1aa92b93b:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1c0db0063_Kind>((*((*(_10144_f))))._field_Owner, 0)});
							(*(_11113_v))._field_Reference=(!(_1c0c70484_IsRef((*(_10617_p))._field_Decl.ptr())));
							if (_1c0c70484_IsRef((*(_10617_p))._field_Decl.ptr())) {
								(*(_11113_v))._field_Ident=(*(_11113_v))._field_Ident.slice(1LL);
								(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0dbbb1e_Sptr>(_1c0dbbb1e_Sptr{._field_Elem=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_BindIdent=(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_BindIdent, ._field_Kind=(*((*((*(_11113_v))._field_Kind))._field_Kind))._field_Kind})}), 21);
							};
						}
					}
					else if ((*((*(_10617_p))._field_Decl))._field_Variadic) {
						_case_begin_1aa92b40d:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0dbc5e2_Slc>(_1c0dbc5e2_Slc{._field_Elem=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_BindIdent=(*((*(_10617_p))._field_Kind))._field_BindIdent, ._field_Kind=(*((*(_10617_p))._field_Kind))._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1aa92b0ab:;
						{
							(*((*(_11113_v))._field_Kind))._field_Kind=(*(_10617_p))._field_Kind;
						}
					}
					_match_end_1aa92ae8a:;
				};
				{ jule::Slice<jule::Ptr<_1c0d2b94c_Var>> &__jule_push_dest = (*(_10125_dest)); __jule_push_dest.push(_11113_v); };
			}
			_iter_next_1aa926dba:;
			++it;
			goto _iter_begin_1aa926dba;
		}
		_iter_end_1aa926dba:;
	};
}



inline void _1c0d030c7_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>>* _16134_dest, jule::Ptr<_1c0c744aa_FnIns>* _16159_f) {
	jule::I64 _1629_size = (*((*(_16159_f))))._field_Generics.len();;
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		_1629_size+=(*((*((*((*(_16159_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	if ((_1629_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_16159_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9341a2:;
		if (it != expr_end) {
			jule::I64 _17110_i = it - expr->begin();
			jule::Ptr<_1c0dadb33_InsGeneric> _17117_g = *it;
			{
				jule::Ptr<_1c0c47bed_GenericDecl> _17213_decl = (*((*((*(_16159_f))))._field_Decl))._field_Generics[_17110_i];;
				{ jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1c0dae727_TypeAlias>(_1c0dae727_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_17213_decl))._field_Token, ._field_Ident=(*(_17213_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=(*(_17117_g))._field_Kind}), })); };
			}
			_iter_next_1aa9341a2:;
			++it;
			_17110_i++;
			goto _iter_begin_1aa9341a2;
		}
		_iter_end_1aa9341a2:;
	};
	if (((*((*((*(_16159_f))))._field_Decl))._field_Owner != nullptr)) {
		jule::Ptr<_1c0c5e3c9_StructIns> _18413_owner = (*((*(_16159_f))))._field_Owner;;
		{
			auto expr = &((*(_18413_owner))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa935cb9:;
			if (it != expr_end) {
				jule::I64 _18514_i = it - expr->begin();
				jule::Ptr<_1c0dadb33_InsGeneric> _18521_g = *it;
				{
					jule::Ptr<_1c0c47bed_GenericDecl> _18617_decl = (*((*(_18413_owner))._field_Decl))._field_Generics[_18514_i];;
					{ jule::Slice<jule::Ptr<_1c0dae727_TypeAlias>> &__jule_push_dest = (*(_16134_dest)); __jule_push_dest.push(jule::new_ptr<_1c0dae727_TypeAlias>(_1c0dae727_TypeAlias{._field_Scope=(*((*((*(_16159_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_18617_decl))._field_Token, ._field_Ident=(*(_18617_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=(*(_18521_g))._field_Kind}), })); };
				}
				_iter_next_1aa935cb9:;
				++it;
				_18514_i++;
				goto _iter_begin_1aa935cb9;
			}
			_iter_end_1aa935cb9:;
		};
	};
}



inline jule::Ptr<_1c0d7a12c_SymbolTable> _1c0d0344b_findFile(jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>* _19918_files, jule::Ptr<_1c0c2abc0_File>* _19942_handler) {
	{
		auto expr = _19918_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa938915:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _20017_fl = *it;
			{
				if (((*(_20017_fl))._field_File == (*(_19942_handler)))) {
					return _20017_fl;;
				};
			}
			_iter_next_1aa938915:;
			++it;
			goto _iter_begin_1aa938915;
		}
		_iter_end_1aa938915:;
	};
	return nullptr;;
}



inline void _1c0d03902_pushSuggestion(_21ce0c86b_Log* _20830_log, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	(*(_20830_log))._field_Suggestion=_21ce0cccd_Logf(_20841_fmt, _20854_args);
}



inline void _1c0d29c36_pushImplemented(jule::Ptr<_1c0c84850_Trait> _285624_t, jule::Ptr<_1c0c5b64b_Struct>* _285640_d) {
	_julec_label_1aa93b7c5:;
	{
		
		if (((*(_285624_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1aa93bee0:;
			{
				{
					auto expr = &((*(_285624_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa93cc9e:;
					if (it != expr_end) {
						jule::Ptr<_1c0c5b64b_Struct> _286016_s = *it;
						{
							if ((_286016_s == (*(_285640_d)))) {
								goto _match_end_1aa93b9e5;
							};
						}
						_iter_next_1aa93cc9e:;
						++it;
						goto _iter_begin_1aa93cc9e;
					}
					_iter_end_1aa93cc9e:;
				};
				goto _case_begin_1aa93ba5b;
			}
		}
		else {
			_case_begin_1aa93ba5b:;
			{
				{ jule::Slice<jule::Ptr<_1c0c5b64b_Struct>> &__jule_push_dest = (*(_285624_t))._field_Implemented; __jule_push_dest.push((*(_285640_d))); };
			}
		}
		_match_end_1aa93b9e5:;
	};
	{
		auto expr = &((*(_285624_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa93d6ea:;
		if (it != expr_end) {
			jule::Ptr<_1c0db76db_TypeSymbol> _286917_i = *it;
			{
				_1c0d29c36_pushImplemented(_1c0db4474_Trait((*(_286917_i))._field_Kind.ptr()), _285640_d);
			}
			_iter_next_1aa93d6ea:;
			++it;
			goto _iter_begin_1aa93d6ea;
		}
		_iter_end_1aa93d6ea:;
	};
}



inline void _1c0d2a022_pushImplements(jule::Ptr<_1c0c5b64b_Struct>* _287424_s, jule::Ptr<_1c0c84850_Trait> _287440_t) {
	_julec_label_1aa93e784:;
	{
		
		if (((*((*(_287424_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1aa93ee9e:;
			{
				{
					auto expr = &((*((*(_287424_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa940c5d:;
					if (it != expr_end) {
						jule::Ptr<_1c0c84850_Trait> _287816_b = *it;
						{
							if ((_287816_b == _287440_t)) {
								goto _match_end_1aa93e9a4;
							};
						}
						_iter_next_1aa940c5d:;
						++it;
						goto _iter_begin_1aa940c5d;
					}
					_iter_end_1aa940c5d:;
				};
				goto _case_begin_1aa93ea1a;
			}
		}
		else {
			_case_begin_1aa93ea1a:;
			{
				{ jule::Slice<jule::Ptr<_1c0c84850_Trait>> &__jule_push_dest = (*((*(_287424_s))))._field_Implements; __jule_push_dest.push(_287440_t); };
			}
		}
		_match_end_1aa93e9a4:;
	};
	{
		auto expr = &((*(_287440_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9416a9:;
		if (it != expr_end) {
			jule::Ptr<_1c0db76db_TypeSymbol> _288717_i = *it;
			{
				_1c0d2a022_pushImplements(_287424_s, _1c0db4474_Trait((*(_288717_i))._field_Kind.ptr()));
			}
			_iter_next_1aa9416a9:;
			++it;
			goto _iter_begin_1aa9416a9;
		}
		_iter_end_1aa9416a9:;
	};
}



inline jule::Bool _1c0d65c3e_traitHasReferenceReceiver(jule::Ptr<_1c0c84850_Trait>* _2731_t) {
	{
		auto expr = &((*((*(_2731_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabc3a07:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> *_2812_f = it;
			{
				if ((*((*(_2812_f))))._field_Statically) {
					goto _iter_next_1aabc3a07;
				};
				jule::Ptr<_1c0c6ead2_Param> _349_p = (*((*(_2812_f))))._field_Params[0LL];;
				if ((_1c0c70484_IsRef(_349_p.ptr()) && _1c0c701ed_IsSelf(_349_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1aabc3a07:;
			++it;
			goto _iter_begin_1aabc3a07;
		}
		_iter_end_1aabc3a07:;
	};
	return false;;
}



inline jule::Bool _1c0d660c4_floatAssignable(jule::Str* _4221_kind, jule::Ptr<_1c0d80352_Data>* _4233_d) {
	jule::Str _435_value = _20361c55c_FmtFloat(static_cast<jule::F64>(_2036472ac_AsF64((*((*(_4233_d))))._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _203637c1a_CheckBitFloat(_435_value, static_cast<jule::I64>(_2036366ec_BitsizeOf((*(_4221_kind)))));;
}



inline jule::Bool _1c0d66448_sigAssignable(jule::Str _4718_kind, jule::Ptr<_1c0d80352_Data>* _4730_d) {
	jule::F64 _485_min = _20363ce2e_Min(_4718_kind);;
	jule::F64 _495_max = _20363d1e8_Max(_4718_kind);;
	{
		
		if (_203649105_IsF64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1aabc7610:;
			{
				jule::F64 _529_x = _203646a09_ReadF64((*((*(_4730_d))))._field_Constant.ptr());;
				jule::F64 _539_i = 0;;
				jule::F64 _5312_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _2035e2565_Modf(_529_x);
					_539_i = __jule_assign_result.__jule_result_arg0;
					_5312_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5312_frac != 0LL)) {
					return false;;
				};
				return ((_539_i >= _485_min) && (_539_i <= _495_max));;
			}
		}
		else if (_203648852_IsU64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1aabc7687:;
			{
				jule::F64 _599_x = _2036472ac_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				if ((_599_x <= _495_max)) {
					return true;;
				};
			}
		}
		else if (_2036485bb_IsI64((*((*(_4730_d))))._field_Constant.ptr())) {
			_case_begin_1aabc770e:;
			{
				jule::F64 _649_x = _2036472ac_AsF64((*((*(_4730_d))))._field_Constant.ptr());;
				return ((_485_min <= _649_x) && (_649_x <= _495_max));;
			}
		}
		_match_end_1aabc74cd:;
	};
	return false;;
}



inline jule::Bool _1c0d66811_unsigAssignable(jule::Str _7020_kind, jule::Ptr<_1c0d80352_Data>* _7032_d) {
	jule::F64 _715_max = _20363d1e8_Max(_7020_kind);;
	if (((*((*(_7032_d))))._field_IsRune && _7020_kind.equal("u8", 2))) {
		return _1c0d4ae22_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_203645ec0_ReadI64((*((*(_7032_d))))._field_Constant.ptr()))));;
	};
	{
		
		if (_203649105_IsF64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1aabcca77:;
			{
				jule::F64 _789_x = _203646a09_ReadF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_789_x < 0LL)) {
					return false;;
				};
				jule::F64 _829_i = 0;;
				jule::F64 _8212_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _2035e2565_Modf(_789_x);
					_829_i = __jule_assign_result.__jule_result_arg0;
					_8212_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8212_frac != 0LL)) {
					return false;;
				};
				return (_829_i <= _715_max);;
			}
		}
		else if (_203648852_IsU64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1aabccadd:;
			{
				jule::F64 _889_x = _2036472ac_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				if ((_889_x <= _715_max)) {
					return true;;
				};
			}
		}
		else if (_2036485bb_IsI64((*((*(_7032_d))))._field_Constant.ptr())) {
			_case_begin_1aabccb54:;
			{
				jule::F64 _939_x = _2036472ac_AsF64((*((*(_7032_d))))._field_Constant.ptr());;
				return ((0LL <= _939_x) && (_939_x <= _715_max));;
			}
		}
		_match_end_1aabcc23b:;
	};
	return false;;
}



inline jule::Bool _1c0d66b85_intAssignable(jule::Str _9918_kind, jule::Ptr<_1c0d80352_Data>* _9930_d) {
	{
		
		if (_203643440_IsSigInt(_9918_kind)) {
			_case_begin_1aabd22b8:;
			{
				return _1c0d66448_sigAssignable(_9918_kind, _9930_d);;
			}
		}
		else if (_20364374d_IsUnsigInt(_9918_kind)) {
			_case_begin_1aabd2340:;
			{
				return _1c0d66811_unsigAssignable(_9918_kind, _9930_d);;
			}
		}
		else {
			_case_begin_1aabd1c24:;
			{
				return false;;
			}
		}
		_match_end_1aabd13b6:;
	};
}



inline void _1c0d73345_checkMutRiskOfStructLit(jule::Ptr<_1c0d04705_Sema>* _94433_s, jule::Ptr<_1c0c64610_StructLitExprModel>* _94444_m) {
	{
		auto expr = &((*((*(_94444_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabd2b26:;
		if (it != expr_end) {
			jule::Ptr<_1c0c64269_StructArgExprModel> *_94512_arg = it;
			{
				if ((*((*((*((*(_94512_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1aabd2b26;
				};
				if (((!((*((*((*(_94512_arg))))._field_Expr))._field_Mutable)) && _1c0db1d9a_Mutable((*((*((*(_94512_arg))))._field_Expr))._field_Kind.ptr()))) {
					_1c0d07340_pushErr((*(_94433_s)).ptr(), (*((*(_94512_arg))))._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*((*(_94512_arg))))._field_Expr))._field_Kind.ptr()), &__jule_any_type4)}));
				};
			}
			_iter_next_1aabd2b26:;
			++it;
			goto _iter_begin_1aabd2b26;
		}
		_iter_end_1aabd2b26:;
	};
}



inline jule::Ptr<_1c0db0519_TypeKind> _1c0d78dd9_lenKind(void) {
	return _1c0e9ca24_primInt;;
}



inline jule::Bool _1c0d7923b_isGoodValueToInfer(jule::Ptr<_1c0d80352_Data>* _140824_d) {
	return (!(_1c0d80709_IsNil((*(_140824_d)).ptr())));;
}



inline jule::Ptr<_1c0c39e10_Directive> _1c0da8930_findDirective(jule::Slice<jule::Ptr<_1c0c39e10_Directive>>* _419523_directives, jule::Str _419554_d) {
	{
		auto expr = _419523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad1146e:;
		if (it != expr_end) {
			jule::Ptr<_1c0c39e10_Directive> _419617_dr = *it;
			{
				if (((*((*(_419617_dr))._field_Tag))._field_Kind == _419554_d)) {
					return _419617_dr;;
				};
			}
			_iter_next_1aad1146e:;
			++it;
			goto _iter_begin_1aad1146e;
		}
		_iter_end_1aad1146e:;
	};
	return nullptr;;
}



inline jule::Any _1c0da8ce8_findBuiltinsImport(jule::Str* _420424_ident, jule::Ptr<_1c0cd353b_ImportInfo> _420436_imp) {
	return _1c0ea1275_findPackageBuiltinDef(&((*(_420436_imp))._field_LinkPath), _420424_ident);;
}



inline void _1c0da9029_fitBitsize(jule::Ptr<_1c0d80352_Data>* _421120_d) {
	jule::Ptr<_1c0db80e3_Prim> _42129_prim = _1c0db2b6a_Prim((*((*(_421120_d))))._field_Kind.ptr());;
	jule::I64 _42135_z = _2036366ec_BitsizeOf(_1c0db8434_Str(_42129_prim.ptr()));;
	if ((_42135_z == 64LLU)) {
		return;;
	};
	jule::I64 _42189_k = 0LL;;
	{
		
		if (_2036485bb_IsI64((*((*(_421120_d))))._field_Constant.ptr())) {
			_case_begin_1aad14a27:;
			{
				_42189_k=static_cast<jule::I64>(_20363829d_BitsizeOfInt(static_cast<jule::I64>(_203645ec0_ReadI64((*((*(_421120_d))))._field_Constant.ptr()))));
				if ((_42189_k > _42135_z)) {
					(*((*((*(_421120_d))))._field_Constant))._field_Kind=_203636a3d_IntFromBits(_42189_k);
					(*((*(_421120_d))))._field_Kind=(*((*(_1c0e9ee44_findBuiltinTypeAlias((*((*((*(_421120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_203648852_IsU64((*((*(_421120_d))))._field_Constant.ptr())) {
			_case_begin_1aad14a9e:;
			{
				_42189_k=static_cast<jule::I64>(_203638567_BitsizeOfUint(static_cast<jule::U64>(_203646256_ReadU64((*((*(_421120_d))))._field_Constant.ptr()))));
				if ((_42189_k > _42135_z)) {
					(*((*((*(_421120_d))))._field_Constant))._field_Kind=_203636d07_UintFromBits(_42189_k);
					(*((*(_421120_d))))._field_Kind=(*((*(_1c0e9ee44_findBuiltinTypeAlias((*((*((*(_421120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_203649105_IsF64((*((*(_421120_d))))._field_Constant.ptr())) {
			_case_begin_1aad14b26:;
			{
				_42189_k=static_cast<jule::I64>(_203637ed4_BitsizeOfFloat(static_cast<jule::F64>(_203646a09_ReadF64((*((*(_421120_d))))._field_Constant.ptr()))));
				if ((_42189_k > _42135_z)) {
					(*((*((*(_421120_d))))._field_Constant))._field_Kind=_2036370c1_FloatFromBits(_42189_k);
					(*((*(_421120_d))))._field_Kind=(*((*(_1c0e9ee44_findBuiltinTypeAlias((*((*((*(_421120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1aad1495b:;
	};
}



inline void _1c0da9359_makeStructLitAlloc(jule::Ptr<_1c0d80352_Data>* _424128_d, jule::Ptr<_1c0c64610_StructLitExprModel>* _424143_lit) {
	(*((*(_424128_d))))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0dbbb1e_Sptr>(_1c0dbbb1e_Sptr{._field_Elem=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>((*((*(_424143_lit))))._field_Strct, 0)})}), 21)});
	(*((*(_424128_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c6490c_AllocStructLitExprModel>(_1c0c6490c_AllocStructLitExprModel{._field_Lit=(*(_424143_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1c0d2b94c_Var> _1c0da96cd_buildErrorVar(jule::Ptr<_1c0cb210d_Scope>* _425223_s, jule::Ptr<_1c0c43a51_FnCallExpr>* _425239_fc) {
	return jule::new_ptr<_1c0d2b94c_Var>(_1c0d2b94c_Var{._field_Scope=(*(_425223_s)), ._field_Token=(*((*(_425239_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1c0e9ee44_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>()}), });;
}



inline jule::Any _1c0da9a52_findBuiltinsSema(jule::Str* _426722_ident, jule::Ptr<_1c0d04705_Sema> _426738_s) {
	{
		auto expr = &((*((*(_426738_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad1ea65:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _426817_imp = *it;
			{
				if (((*(_426817_imp))._field_ImportAll || _1c0cd5dbd_existIdent(_426817_imp.ptr(), (*(_426722_ident))))) {
					jule::Any _427017_def = _1c0da8ce8_findBuiltinsImport(_426722_ident, _426817_imp);;
					if ((_427017_def != nullptr)) {
						return _427017_def;;
					};
				};
			}
			_iter_next_1aad1ea65:;
			++it;
			goto _iter_begin_1aad1ea65;
		}
		_iter_end_1aad1ea65:;
	};
	jule::Str _42789_ppath = _1c0c2b341_Dir((*((*(_426738_s))._field_file))._field_File.ptr());;
	if (_21cd492ad_HasPrefix(_42789_ppath, _21d2d524e_PathStdlib)) {
		(_42789_ppath).mut_slice(_21d2d524e_PathStdlib.len());;
		_42789_ppath=(jule::Str::lit("std", 3) + _21cd5088b_Replace(_42789_ppath, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));
		return _1c0ea1275_findPackageBuiltinDef(&(_42789_ppath), _426722_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1c0da9d1b_isOkForShifting(jule::Ptr<_1c0d80352_Data>* _429225_d) {
	if (_1c0d80c26_IsConst((*(_429225_d)).ptr())) {
		{
			
			if (_2036485bb_IsI64((*((*(_429225_d))))._field_Constant.ptr())) {
				_case_begin_1aad23140:;
				{
					return (_203645ec0_ReadI64((*((*(_429225_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_203648852_IsU64((*((*(_429225_d))))._field_Constant.ptr())) {
				_case_begin_1aad231b7:;
				{
					return true;;
				}
			}
			else if (_203649105_IsF64((*((*(_429225_d))))._field_Constant.ptr())) {
				_case_begin_1aad2323e:;
				{
					return (_203646a09_ReadF64((*((*(_429225_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1aad23063:;
				{
					return false;;
				}
			}
			_match_end_1aad22ea8:;
		};
	};
	jule::Ptr<_1c0db80e3_Prim> _43055_prim = _1c0db2b6a_Prim((*((*(_429225_d))))._field_Kind.ptr());;
	return ((_43055_prim != nullptr) && _203643a17_IsInt(_1c0db8434_Str(_43055_prim.ptr())));;
}



inline jule::Bool _1c0daa1e5_isInstancedStruct(jule::Ptr<_1c0c5e3c9_StructIns> _430922_s) {
	return ((*((*(_430922_s))._field_Decl))._field_Generics.len() == (*(_430922_s))._field_Generics.len());;
}



inline jule::Bool _1c0daa569_isPtrArithmeticCompatible(jule::Ptr<_1c0d80352_Data>* _431335_l, jule::Ptr<_1c0d80352_Data>* _431350_r) {
	jule::Ptr<_1c0dc03d6_Ptr> _43145_ptr = _1c0db3187_Ptr((*((*(_431350_r))))._field_Kind.ptr());;
	if ((_43145_ptr != nullptr)) {
		return _1c0db0c23_Equal((*(_1c0db3187_Ptr((*((*(_431335_l))))._field_Kind.ptr())))._field_Elem, (*(_43145_ptr))._field_Elem);;
	};
	if (_1c0d80c26_IsConst((*(_431350_r)).ptr())) {
		return _1c0d66b85_intAssignable(jule::Str::lit("int", 3), _431350_r);;
	};
	_1c0d6716e_typeCompatibilityChecker _43219_tcc = _1c0d6716e_typeCompatibilityChecker{._field_dest=_1c0e9ca24_primInt, ._field_src=(*((*(_431350_r))))._field_Kind, };;
	return _1c0d68835_check(&_43219_tcc);;
}



inline void _1c0daa855_applyCastKindModel(jule::Ptr<_1c0d80352_Data>* _432828_d, jule::Ptr<_1c0db0519_TypeKind>* _432843_t) {
	(*((*(_432828_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c64e90_CastingExprModel>(_1c0c64e90_CastingExprModel{._field_Expr=(*((*(_432828_d))))._field_Model, ._field_Kind=(*(_432843_t)), ._field_ExprKind=(*((*(_432828_d))))._field_Kind}), &__jule_any_type92);
}



inline void _1c0daab41_applyCastKind(jule::Ptr<_1c0d80352_Data>* _433623_d, jule::Ptr<_1c0db0519_TypeKind>* _433638_t) {
	_1c0daa855_applyCastKindModel(_433623_d, _433638_t);
	(*((*(_433623_d))))._field_Kind=(*(_433638_t));
}



inline jule::Ptr<_1c0d80352_Data> _1c0daad50_buildVoidData(void) {
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9b726_primVoid, });;
}



inline jule::Str _1c0dab119_checkDataForIntegerIndexing(jule::Ptr<_1c0d80352_Data>* _434737_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_434737_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1c0db2b6a_Prim((*((*(_434737_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1aad2bca3:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_203643a17_IsInt(_1c0db8434_Str(_1c0db2b6a_Prim((*((*(_434737_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1aad2bd19:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1c0d80c26_IsConst((*(_434737_d)).ptr())) {
			_case_begin_1aad2bd80:;
			{
				if ((_2036472ac_AsF64((*((*(_434737_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1c0db2b6a_Prim((*((*(_434737_d))))._field_Kind.ptr()) == nullptr) || _1c0d80c26_IsConst((*(_434737_d)).ptr()) || (_203636433_RealKindOf(_1c0db8434_Str(_1c0db2b6a_Prim((*((*(_434737_d))))._field_Kind.ptr()).ptr())) != _203636433_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1aad2be07:;
			{
				_1c0daab41_applyCastKind(_434737_d, &(_1c0e9ca24_primInt));
			}
		}
		_match_end_1aad2b951:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1c0dab405_applyCastModelByEnum(jule::Ptr<_1c0d80352_Data>* _437230_d, jule::Ptr<_1c0c8704a_Enum> _437244_e) {
	if ((_437244_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0db80e3_Prim> _43765_p = _1c0db2b6a_Prim((*((*(_437244_e))._field_Kind))._field_Kind.ptr());;
	if (_1c0dbb57a_IsStr(_43765_p.ptr())) {
		return;;
	};
	_1c0daa855_applyCastKindModel(_437230_d, &((*((*(_437244_e))._field_Kind))._field_Kind));
}



inline void _1c0dab6e1_castConstByType(jule::Str* _438321_t, jule::Ptr<_1c0d80352_Data>* _438334_d) {
	{
		
		if (_203643440_IsSigInt((*(_438321_t)))) {
			_case_begin_1aad3288b:;
			{
				{
					auto _match_expr{ _2036366ec_BitsizeOf(_203636433_RealKindOf((*(_438321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1aad334e6:;
						{
							_203647565_SetI64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::I64>(_203646c90_AsI64((*((*(_438334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1aad3355c:;
						{
							_203647565_SetI64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_203646c90_AsI64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1aad335c3:;
						{
							_203647565_SetI64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_203646c90_AsI64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1aad33639:;
						{
							_203647565_SetI64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_203646c90_AsI64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1aad331a5:;
				};
			}
		}
		else if (_20364374d_IsUnsigInt((*(_438321_t)))) {
			_case_begin_1aad32913:;
			{
				{
					auto _match_expr{ _2036366ec_BitsizeOf(_203636433_RealKindOf((*(_438321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1aad375b6:;
						{
							_20364781d_SetU64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::U64>(_203647026_AsU64((*((*(_438334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1aad3762c:;
						{
							_20364781d_SetU64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_203647026_AsU64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1aad37693:;
						{
							_20364781d_SetU64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_203647026_AsU64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1aad37709:;
						{
							_20364781d_SetU64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_203647026_AsU64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1aad32e41:;
				};
			}
		}
		else if (_203643d58_IsFloat((*(_438321_t)))) {
			_case_begin_1aad3298a:;
			{
				{
					auto _match_expr{ _2036366ec_BitsizeOf(_203636433_RealKindOf((*(_438321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1aad3b631:;
						{
							_203648137_SetF64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::F64>(_2036472ac_AsF64((*((*(_438334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1aad3b6a8:;
						{
							_203648137_SetF64((*((*(_438334_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_2036472ac_AsF64((*((*(_438334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_1aad37ab1:;
				};
			}
		}
		_match_end_1aad3276a:;
	};
}



inline void _1c0dabb86_updateModelToGenericIns(jule::Any* _441733_m, jule::Ptr<_1c0c744aa_FnIns>* _441752_f) {
	{
		auto &_match_expr{ (*(_441733_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1aad3a663:;
			{
				(*(_441733_m))=jule::Any((*(_441752_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1aad3b9c7:;
			{
				(*((*(_441733_m)).cast_ptr<_1c0c683d3_StructSubIdentExprModel>(&__jule_any_type97)))._field_Method=(*(_441752_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1aad3ba3d:;
			{
				(*((*(_441733_m)).cast_ptr<_1c0c68889_StructStaticIdentExprModel>(&__jule_any_type95)))._field_Method=(*(_441752_f));
			}
		}
		_match_end_1aad3a60d:;
	};
}



inline jule::Bool _1c0dac00a_pushSubIdentFromExpr(jule::Any _442829_expr, jule::Ptr<_1c0c3b3ea_SubIdentTypeDecl>* _442850_t) {
	{
		auto &_match_expr{ _442829_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1aad3eeb4:;
			{
				jule::Ptr<_1c0c41752_IdentExpr> _443113_e = _442829_expr.cast_ptr<_1c0c41752_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_1c0c3b0ed_IdentTypeDecl>> &__jule_push_dest = (*((*(_442850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1c0c3b0ed_IdentTypeDecl>(_1c0c3b0ed_IdentTypeDecl{._field_Token=(*(_443113_e))._field_Token, ._field_Ident=(*(_443113_e))._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1aad4002a:;
			{
				jule::Ptr<_1c0c42e3a_SubIdentExpr> _443713_e = _442829_expr.cast_ptr<_1c0c42e3a_SubIdentExpr>(&__jule_any_type85);;
				if ((!(_1c0dac00a_pushSubIdentFromExpr((*((*(_443713_e))._field_Expr))._field_Kind, _442850_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1c0c3b0ed_IdentTypeDecl>> &__jule_push_dest = (*((*(_442850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1c0c3b0ed_IdentTypeDecl>(_1c0c3b0ed_IdentTypeDecl{._field_Token=(*(_443713_e))._field_Ident, ._field_Ident=(*((*(_443713_e))._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1aad3ee4d:;
			{
				return false;;
			}
		}
		_match_end_1aad3e106:;
	};
	return true;;
}



inline jule::Str _1c0dac2c4_constoa(jule::Ptr<_2036445ea_Const>* _445113_c) {
	{
		
		if (_2036485bb_IsI64((*(_445113_c)).ptr())) {
			_case_begin_1aad43d42:;
			{
				return _2036340bd_FmtInt(static_cast<jule::I64>(_203645ec0_ReadI64((*(_445113_c)).ptr())), 10LL);;
			}
		}
		else if (_203648852_IsU64((*(_445113_c)).ptr())) {
			_case_begin_1aad4059c:;
			{
				return _203633c05_FmtUint(static_cast<jule::U64>(_203646256_ReadU64((*(_445113_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1aad401c3:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aad43cba:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0dac648_evalEnumStatic(jule::Ptr<_1c0c8704a_Enum>* _446224_enm, jule::Ptr<_1c0c864cd_EnumItem>* _446241_item) {
	jule::Ptr<_1c0d80352_Data> _44639_d = jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>((*(_446224_enm)), 3)}), });;
	if (((*(_446241_item)) != nullptr)) {
		(*(_44639_d))._field_Constant=jule::new_ptr<_2036445ea_Const>((*((*((*((*((*(_446241_item))))._field_Value))._field_Data))._field_Constant)));
		(*(_44639_d))._field_Model=jule::Any((*(_44639_d))._field_Constant, &__jule_any_type19);
		_1c0dab405_applyCastModelByEnum(&(_44639_d), (*(_446224_enm)));
	};
	return _44639_d;;
}



inline jule::Ptr<_1c0c64610_StructLitExprModel> _1c0dac912_isLitBased(jule::Any* _447920_m) {
	{
		auto &_match_expr{ (*(_447920_m)) };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1aad47395:;
			{
				return (*(_447920_m)).cast_ptr<_1c0c64610_StructLitExprModel>(&__jule_any_type94);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1aad4740b:;
			{
				return (*((*(_447920_m)).cast_ptr<_1c0c6490c_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1aad47472:;
			{
				jule::Ptr<_1c0c683d3_StructSubIdentExprModel> _448613_ssi = (*(_447920_m)).cast_ptr<_1c0c683d3_StructSubIdentExprModel>(&__jule_any_type97);;
				return _1c0dac912_isLitBased(&((*((*(_448613_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1aad474d8:;
			{
				jule::Ptr<_1c0c64e90_CastingExprModel> _448913_c = (*(_447920_m)).cast_ptr<_1c0c64e90_CastingExprModel>(&__jule_any_type92);;
				return _1c0dac912_isLitBased(&((*(_448913_c))._field_Expr));;
			}
		}
		else {
			_case_begin_1aad471ca:;
			{
				return nullptr;;
			}
		}
		_match_end_1aad45bac:;
	};
}



inline void _1c0dacbed_makeImplicitDeref(jule::Ptr<_1c0d80352_Data>* _449627_d, jule::Ptr<_1c0c25406_Token> _449641_baseToken) {
	jule::Ptr<_1c0c63c3b_UnaryExprModel> _44979_unary = jule::new_ptr<_1c0c63c3b_UnaryExprModel>(_1c0c63c3b_UnaryExprModel{._field_Expr=jule::new_ptr<_1c0d80352_Data>((*((*(_449627_d))))), ._field_Op=jule::new_ptr<_1c0c25406_Token>((*(_449641_baseToken)))});;
	(*((*(_44979_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*((*(_44979_unary))._field_Op))._field_Kind=jule::Str::lit("*", 1);
	(*((*(_449627_d))))._field_Model=jule::Any(_44979_unary, &__jule_any_type110);
}



inline jule::Bool _1c0dcac71_kindUsesGenerics(jule::Ptr<_1c0db0519_TypeKind>* _171026_k, jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>>* _171041_generics) {
	{
		auto expr = _171041_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2b6d86:;
		if (it != expr_end) {
			jule::Ptr<_1c0c47bed_GenericDecl> *_171112_g = it;
			{
				if (static__1c0dca842_exist(&((*((*(_171112_g))))._field_Ident), _171026_k)) {
					return true;;
				};
			}
			_iter_next_1ab2b6d86:;
			++it;
			goto _iter_begin_1ab2b6d86;
		}
		_iter_end_1ab2b6d86:;
	};
	return false;;
}



inline jule::Bool _1c0dcb139_hasDirective(jule::Slice<jule::Ptr<_1c0c39e10_Directive>>* _172022_directives, jule::Str _172053_tag) {
	{
		auto expr = _172022_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2b7260:;
		if (it != expr_end) {
			jule::Ptr<_1c0c39e10_Directive> _172117_dr = *it;
			{
				if (((*((*(_172117_dr))._field_Tag))._field_Kind == _172053_tag)) {
					return true;;
				};
			}
			_iter_next_1ab2b7260:;
			++it;
			goto _iter_begin_1ab2b7260;
		}
		_iter_end_1ab2b7260:;
	};
	return false;;
}



inline jule::Bool _1c0dcb403_canGetPtr(jule::Ptr<_1c0d80352_Data>* _172919_d) {
	{
		
		if ((!((*((*(_172919_d))))._field_Lvalue)) || _1c0d80c26_IsConst((*(_172919_d)).ptr())) {
			_case_begin_1ab2b8e21:;
			{
				return false;;
			}
		}
		else if ((_1c0db3e57_Fn((*((*(_172919_d))))._field_Kind.ptr()) != nullptr) || (_1c0db341d_Enum((*((*(_172919_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab2b8e98:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ab2b821c:;
			{
				return true;;
			}
		}
		_match_end_1ab2b844d:;
	};
}



inline jule::Bool _1c0dcb744_isValidForSptrType(jule::Ptr<_1c0db0519_TypeKind>* _174128_t) {
	jule::Ptr<_1c0c5e3c9_StructIns> _17429_s = _1c0db41dd_Struct((*(_174128_t)).ptr());;
	if ((((_17429_s != nullptr) && ((*(_17429_s))._field_Decl != nullptr)) && (*((*(_17429_s))._field_Decl))._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1c0dcba0d_isValidForRef(jule::Ptr<_1c0db0519_TypeKind>* _175023_t) {
	return (_1c0db3e57_Fn((*(_175023_t)).ptr()) == nullptr);;
}



inline jule::Bool _1c0dcbcc7_isBuiltinStrConvertable(jule::Ptr<_1c0db0519_TypeKind>* _175333_t) {
	return ((((!(_1c0db187d_Void((*(_175333_t)).ptr()))) && (_1c0db3e57_Fn((*(_175333_t)).ptr()) == nullptr)) && (_1c0db4991_Tup((*(_175333_t)).ptr()) == nullptr)) && (!(_1c0db4c27_comptime((*(_175333_t)).ptr()))));;
}



inline jule::Str _1c0dcc091_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1c0c25406_Token>>* _175727_tokens) {
	jule::I64 _17589_n = 0LL;;
	{
		auto expr = _175727_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2bc1bb:;
		if (it != expr_end) {
			jule::Ptr<_1c0c25406_Token> *_175912_token = it;
			{
				_17589_n+=(*((*(_175912_token))))._field_Kind.len();
				_17589_n+=2LL;
			}
			_iter_next_1ab2bc1bb:;
			++it;
			goto _iter_begin_1ab2bc1bb;
		}
		_iter_end_1ab2bc1bb:;
	};
	_21cd5e16e_StrBuilder _17639_s = static__21cd5e48d_New(_17589_n);;
	{
		auto expr = _175727_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2be5db:;
		if (it != expr_end) {
			jule::I64 _17649_i = it - expr->begin();
			jule::Ptr<_1c0c25406_Token> *_176412_token = it;
			{
				_21cd67d15_WriteStr(&_17639_s, (*((*(_176412_token))))._field_Kind);
				if ((((*(_175727_tokens)).len() - _17649_i) > 1LL)) {
					_21cd67d15_WriteStr(&_17639_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1ab2be5db:;
			++it;
			_17649_i++;
			goto _iter_begin_1ab2be5db;
		}
		_iter_end_1ab2be5db:;
	};
	return _21cd6860c_Str(&_17639_s);;
}



inline jule::Ptr<_1c0db80e3_Prim> _1c0dcc437_buildPrimType(jule::Str _177318_kind) {
	return jule::new_ptr<_1c0db80e3_Prim>(_1c0db80e3_Prim{._field_Kind=_177318_kind});;
}



inline void _1c0dcc9dc_applyImplicitCast(jule::Ptr<_1c0db0519_TypeKind>* _180127_dest, jule::Ptr<_1c0d80352_Data>* _180149_d) {
	if (_1c0db15e7_IsNil((*((*(_180149_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1c0db80e3_Prim> _18055_destPrim = _1c0db2b6a_Prim((*(_180127_dest)).ptr());;
	jule::Ptr<_1c0db80e3_Prim> _18065_prim = _1c0db2b6a_Prim((*((*(_180149_d))))._field_Kind.ptr());;
	if ((_18055_destPrim != nullptr)) {
		if (_1c0dbb811_IsAny(_18055_destPrim.ptr())) {
			if (((_18065_prim == nullptr) || (!(_1c0dbb811_IsAny(_18065_prim.ptr()))))) {
				_1c0daab41_applyCastKind(_180149_d, _180127_dest);
			};
			return;;
		};
		if (((((((!(_1c0db1361_Binded((*((*(_180149_d))))._field_Kind.ptr()))) && (!((*((*((*(_180149_d))))._field_Kind))._field_Variadic))) && (!((*((*(_180149_d))))._field_Lvalue))) && (!(_1c0d80c26_IsConst((*(_180149_d)).ptr())))) && (_18065_prim != nullptr)) && _203644122_IsNum((*(_18065_prim))._field_Kind))) {
			_1c0daab41_applyCastKind(_180149_d, _180127_dest);
		};
		return;;
	};
	jule::Ptr<_1c0c84850_Trait> _18255_dt = _1c0db4474_Trait((*(_180127_dest)).ptr());;
	if ((_18255_dt != nullptr)) {
		jule::Ptr<_1c0c84850_Trait> _18279_bt = _1c0db4474_Trait((*((*(_180149_d))))._field_Kind.ptr());;
		if (((_18279_bt == nullptr) || (_18279_bt != _18255_dt))) {
			_1c0daa855_applyCastKindModel(_180149_d, _180127_dest);
			return;;
		};
	};
	if (((_1c0db36a4_TypeEnum((*(_180127_dest)).ptr()) != nullptr) && (_1c0db36a4_TypeEnum((*((*(_180149_d))))._field_Kind.ptr()) == nullptr))) {
		_1c0daa855_applyCastKindModel(_180149_d, _180127_dest);
		return;;
	};
}



inline jule::Bool _1c0dccca6_validTypeForXof(jule::Ptr<_1c0db0519_TypeKind>* _184025_t) {
	return ((!(_1c0db187d_Void((*(_184025_t)).ptr()))) && (_1c0db3e57_Fn((*(_184025_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1c0d7a12c_SymbolTable__jule_tuple_s_21ce0c86b_Log _1c0dd0d42_buildSymbols(jule::Ptr<_1c0c38a46_Ast>* _1622_ast, jule::Trait<_1c0cd0626_Importer>* _1638_importer, jule::Ptr<_1c0c7d739_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1c0d7a12c_SymbolTable__jule_tuple_s_21ce0c86b_Log __jule_func_result;
	jule::Ptr<_1c0c7d739_symbolBuilder> _179_sb = jule::new_ptr<_1c0c7d739_symbolBuilder>(_1c0c7d739_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1c0c83c28_build(_179_sb);
	if (((*(_179_sb))._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_179_sb))._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*(_179_sb))._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c0cd6462_Package__jule_tuple_s_21ce0c86b_Log _1c0dd12b5_analyzePackage(jule::Slice<jule::Ptr<_1c0c38a46_Ast>>* _3024_files, jule::Trait<_1c0cd0626_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1c0cd6462_Package__jule_tuple_s_21ce0c86b_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>> _329_tables = jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3d4305:;
		if (it != expr_end) {
			jule::Ptr<_1c0c38a46_Ast> _3317_f = *it;
			{
				jule::Ptr<_1c0d7a12c_SymbolTable> _3413_table;;
				jule::Slice<_21ce0c86b_Log> _3424_errors;;
				({
					__jule_tuple_x_1c0d7a12c_SymbolTable__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c0dd0d42_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3413_table = __jule_assign_result.__jule_result_arg0;
					_3424_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3424_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3424_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1c0d7a12c_SymbolTable>> &__jule_push_dest = _329_tables; __jule_push_dest.push(_3413_table); };
			}
			_iter_next_1ab3d4305:;
			++it;
			goto _iter_begin_1ab3d4305;
		}
		_iter_end_1ab3d4305:;
	};
	jule::Ptr<_1c0d04705_Sema> _419_sema = jule::new_ptr<_1c0d04705_Sema>(_1c0d04705_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1c0d03acd_commonSemaMeta>()});;
	_1c0d27e76_check(_419_sema, &(_329_tables));
	if (((*(_419_sema))._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*(_419_sema))._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0cd6462_Package> _509_pkg = jule::new_ptr<_1c0cd6462_Package>(_1c0cd6462_Package{._field_Files=(*(_419_sema))._field_files});;
	__jule_func_result.__jule_result_arg0 = _509_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c0cd6462_Package__jule_tuple_s_21ce0c86b_Log _1c0dd16e4_AnalyzePackage(jule::Slice<jule::Ptr<_1c0c38a46_Ast>> _7423_files, jule::Trait<_1c0cd0626_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1c0cd6462_Package__jule_tuple_s_21ce0c86b_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1c0cd6462_Package> _789_package;;
	jule::Slice<_21ce0c86b_Log> _7822_logs;;
	({
		__jule_tuple_x_1c0cd6462_Package__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c0dd12b5_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_789_package = __jule_assign_result.__jule_result_arg0;
		_7822_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _789_package;
	__jule_func_result.__jule_result_arg1 = _7822_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1c0c744aa_FnIns> _1c0e9acec_findBuiltinFunc(jule::Str* _2521_ident) {
	{
		auto &_match_expr{ (*(_2521_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1ab3dd067:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _2820_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea1e57_builtinCallerOut), });;
				return _2820_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1ab3dd221:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _3120_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea2386_builtinCallerOutln), });;
				return _3120_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1ab3dd298:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _3420_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea27b5_builtinCallerNew), });;
				return _3420_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1ab3dd320:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _3720_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea2d9d_builtinCallerPanic), });;
				return _3720_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1ab3dd397:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _4020_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea32cc_builtinCallerMake), });;
				return _4020_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1ab3dd5ea:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _4320_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea370b_builtinCallerAppend), });;
				return _4320_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1ab3dd672:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _4620_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea4124_builtinCallerCopy), });;
				return _4620_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1ab3dd6e9:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _4920_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea57b8_builtinCallerLen), });;
				return _4920_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1ab3dd771:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _5220_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea606b_builtinCallerCap), });;
				return _5220_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1ab3dd84d:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _5520_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea6984_builtinCallerDelete), });;
				return _5520_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1ab3dd8c5:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _5820_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea6db3_builtinCallerAssert), });;
				return _5820_f;;
			}
		}
		else {
			_case_begin_1ab3dd199:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab3da718:;
	};
}



inline jule::Ptr<_1c0dae727_TypeAlias> _1c0e9b10a_primTypeAlias(jule::Ptr<_1c0db0519_TypeKind>* _6523_k) {
	return jule::new_ptr<_1c0dae727_TypeAlias>(_1c0dae727_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=(*(_6523_k))}), });;
}



inline jule::Ptr<_1c0d2b94c_Var> _1c0e9ec13_findBuiltinVar(jule::Str* _9320_ident) {
	{
		auto &_match_expr{ (*(_9320_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1ab3e5e71:;
			{
				static jule::Ptr<_1c0d2b94c_Var> _9620_v = jule::new_ptr<_1c0d2b94c_Var>(_1c0d2b94c_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(_1c0db76db_TypeSymbol{._field_Kind=_1c0e9b418_primNil}), ._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Constant=static__203645860_NewNil()})}), });;
				return _9620_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1ab3e5ed7:;
			{
				static jule::Ptr<_1c0d2b94c_Var> _11120_v = jule::new_ptr<_1c0d2b94c_Var>(_1c0d2b94c_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1c0e9ee44_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Constant=static__2036450bd_NewBool(true)})}), });;
				return _11120_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1ab3e604d:;
			{
				static jule::Ptr<_1c0d2b94c_Var> _12420_v = jule::new_ptr<_1c0d2b94c_Var>(_1c0d2b94c_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1c0e9ee44_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1c0d81496_Value>(_1c0d81496_Value{._field_Data=jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Constant=static__2036450bd_NewBool(false)})}), });;
				return _12420_v;;
			}
		}
		else {
			_case_begin_1ab3e5e0a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab3e4e3c:;
	};
}



inline jule::Ptr<_1c0dae727_TypeAlias> _1c0e9ee44_findBuiltinTypeAlias(jule::Str _14125_ident) {
	{
		auto &_match_expr{ _14125_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1ab3e957e:;
			{
				static jule::Ptr<_1c0dae727_TypeAlias> _14420_t = _1c0e9b10a_primTypeAlias(&(_1c0e9b9e0_primAny));;
				return _14420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1ab3eaddd:;
			{
				static jule::Ptr<_1c0dae727_TypeAlias> _14720_t = _1c0e9b10a_primTypeAlias(&(_1c0e9bced_primStr));;
				return _14720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1ab3eb185:;
			{
				static jule::Ptr<_1c0dae727_TypeAlias> _15020_t = _1c0e9b10a_primTypeAlias(&(_1c0e9c0b7_primBool));;
				return _15020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1ab3eb1eb:;
			{
				static jule::Ptr<_1c0dae727_TypeAlias> _15320_t = _1c0e9b10a_primTypeAlias(&(_1c0e9c381_primUintptr));;
				return _15320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1ab3eb262:;
			{
				static jule::Ptr<_1c0dae727_TypeAlias> _15620_t = _1c0e9b10a_primTypeAlias(&(_1c0e9c64a_primUint));;
				return _15620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1ab3eb2c8:;
			{
				static jule::Ptr<_1c0dae727_TypeAlias> _15920_t = _1c0e9b10a_primTypeAlias(&(_1c0e9ca24_primInt));;
				return _15920_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1ab3eb3c7:;
			{
				static jule::Ptr<_1c0dae727_TypeAlias> _16220_t = _1c0e9b10a_primTypeAlias(&(_1c0e9ccdd_primI8));;
				return _16220_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1ab3eb43d:;
			{
				static jule::Ptr<_1c0dae727_TypeAlias> _16520_t = _1c0e9b10a_primTypeAlias(&(_1c0e9d0a7_primI16));;
				return _16520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1ab3eb4a4:;
			{
				static jule::Ptr<_1c0dae727_TypeAlias> _16820_t = _1c0e9b10a_primTypeAlias(&(_1c0e9d63a_primI64));;
				return _16820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1ab3eb51a:;
			{
				static jule::Ptr<_1c0dae727_TypeAlias> _17120_t = _1c0e9b10a_primTypeAlias(&(_1c0e9dbbd_primU16));;
				return _17120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1ab3eb592:;
			{
				static jule::Ptr<_1c0dae727_TypeAlias> _17420_t = _1c0e9b10a_primTypeAlias(&(_1c0e9de87_primU32));;
				return _17420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1ab3eb619:;
			{
				static jule::Ptr<_1c0dae727_TypeAlias> _17720_t = _1c0e9b10a_primTypeAlias(&(_1c0e9e40a_primU64));;
				return _17720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1ab3eb691:;
			{
				static jule::Ptr<_1c0dae727_TypeAlias> _18020_t = _1c0e9b10a_primTypeAlias(&(_1c0e9e6c4_primF32));;
				return _18020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1ab3eb718:;
			{
				static jule::Ptr<_1c0dae727_TypeAlias> _18320_t = _1c0e9b10a_primTypeAlias(&(_1c0e9e98d_primF64));;
				return _18320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1ab3eb790:;
			{
				static jule::Ptr<_1c0dae727_TypeAlias> _18620_t = _1c0e9b10a_primTypeAlias(&(_1c0e9d904_primU8));;
				return _18620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1ab3eb817:;
			{
				static jule::Ptr<_1c0dae727_TypeAlias> _18920_t = _1c0e9b10a_primTypeAlias(&(_1c0e9d371_primI32));;
				return _18920_t;;
			}
		}
		else {
			_case_begin_1ab3eac45:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab3e96b1:;
	};
}



inline jule::Any _1c0ea020d_findBuiltinDef(jule::Str* _19620_ident) {
	jule::Ptr<_1c0d2b94c_Var> _1979_v = _1c0e9ec13_findBuiltinVar(_19620_ident);;
	if ((_1979_v != nullptr)) {
		return jule::Any(_1979_v, &__jule_any_type8);;
	};
	jule::Ptr<_1c0c744aa_FnIns> _2019_f = _1c0e9acec_findBuiltinFunc(_19620_ident);;
	if ((_2019_f != nullptr)) {
		return jule::Any(_2019_f, &__jule_any_type7);;
	};
	jule::Ptr<_1c0dae727_TypeAlias> _2059_ta = _1c0e9ee44_findBuiltinTypeAlias((*(_19620_ident)));;
	if ((_2059_ta != nullptr)) {
		return jule::Any(_2059_ta, &__jule_any_type66);;
	};
	return nullptr;;
}



inline jule::Any _1c0ea04c7_findBuiltinDefStdDebug(jule::Str* _21228_ident) {
	{
		auto &_match_expr{ (*(_21228_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1ab40abab:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _21520_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0eaac41_builtinCallerStdDebugOut), });;
				return jule::Any(_21520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1ab40ac22:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _21820_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0eab170_builtinCallerStdDebugOutln), });;
				return jule::Any(_21820_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ab40a590:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab409649:;
	};
}



inline jule::Any _1c0ea0791_findBuiltinDefStdMem(jule::Str* _22526_ident) {
	{
		auto &_match_expr{ (*(_22526_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1ab40c5b4:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _22820_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea9646_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1ab40c62a:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _23120_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea9a75_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1ab40c691:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _23420_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea9ea4_builtinCallerStdMemFree), });;
				return jule::Any(_23420_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ab40c54d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab40b1d9:;
	};
}



inline jule::Any _1c0ea0b37_findBuiltinDefStdComptime(jule::Str* _24131_ident) {
	{
		auto &_match_expr{ (*(_24131_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1ab40e9d4:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _24420_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea748a_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1ab40ea5b:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _24720_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea7853_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Range", 5)) {
			_case_begin_1ab40ead3:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _25020_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea804b_builtinCallerStdComptimeRange), });;
				return jule::Any(_25020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1ab40ee13:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _25320_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea847a_builtinCallerStdComptimeLine), });;
				return jule::Any(_25320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1ab40ee79:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _25620_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea88a9_builtinCallerStdComptimeFile), });;
				return jule::Any(_25620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1ab40eee0:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _25920_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea8cd8_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1ab410056:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _26220_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea9217_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_26220_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ab40e96d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab40e0aa:;
	};
}



inline jule::Any _1c0ea0e01_findBuiltinDefStdJuleIntegrated(jule::Str* _26937_ident) {
	{
		auto &_match_expr{ (*(_26937_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1ab4147a8:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _27220_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0eaa3d3_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1ab41481e:;
			{
				static jule::Ptr<_1c0c744aa_FnIns> _27520_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_Decl=jule::new_ptr<_1c0c715a6_Fn>(_1c0c715a6_Fn{._field_Generics=jule::Slice<jule::Ptr<_1c0c47bed_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0eaa812_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27520_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ab414742:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab410463:;
	};
}



inline jule::Any _1c0ea1275_findPackageBuiltinDef(jule::Str* _28727_linkPath, jule::Str* _28743_ident) {
	{
		auto &_match_expr{ (*(_28727_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1ab416b1d:;
			{
				return _1c0ea0b37_findBuiltinDefStdComptime(_28743_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1ab416b84:;
			{
				return _1c0ea04c7_findBuiltinDefStdDebug(_28743_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1ab416bea:;
			{
				return _1c0ea0791_findBuiltinDefStdMem(_28743_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1ab416c61:;
			{
				return _1c0ea0e01_findBuiltinDefStdJuleIntegrated(_28743_ident);;
			}
		}
		else {
			_case_begin_1ab416942:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab415820:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea16a4_builtinCallerCommonPlain(jule::Ptr<_1c0d82046_Eval>* _30234_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _30249_fc, jule::Ptr<_1c0d80352_Data>* _30271_d) {
	jule::Ptr<_1c0c744aa_FnIns> _3039_f = _1c0db3e57_Fn((*((*(_30271_d))))._field_Kind.ptr());;
	_1c0d708e7_fnCallArgChecker _3059_fcac = _1c0d708e7_fnCallArgChecker{._field_e=(*(_30234_e)), ._field_args=(*((*(_30249_fc))))._field_Args, ._field_errorToken=(*((*(_30249_fc))))._field_Token, ._field_f=_3039_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1c0d72e9e_check(&_3059_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1c0c65842_FnCallExprModel> _3169_model = jule::new_ptr<_1c0c65842_FnCallExprModel>(_1c0c65842_FnCallExprModel{._field_Token=(*((*(_30249_fc))))._field_Token, ._field_Func=_3039_f, ._field_Expr=(*((*(_30271_d))))._field_Model, ._field_Args=_3059_fcac._field_argModels, });;
	if (((*(_3039_f))._field_Result == nullptr)) {
		(*(_30271_d))=_1c0daad50_buildVoidData();
	} else {
		(*(_30271_d))=jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=(*(_3039_f))._field_Result, });
	};
	(*((*(_30271_d))))._field_Model=jule::Any(_3169_model, &__jule_any_type34);
	return (*(_30271_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea1a28_builtinCallerError(jule::Ptr<_1c0d82046_Eval>* _33528_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _33543_fc) {
	if (((*((*(_33543_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr((*(_33528_e)).ptr(), (*((*(_33543_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_33543_fc))))._field_Args.len() > 1LL)) {
		_1c0d82596_pushErr((*(_33528_e)).ptr(), (*((*((*(_33543_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0d80352_Data> _3439_expr = _1c0da0020_evalExpr((*(_33528_e)), (*((*(_33543_fc))))._field_Args[0LL]);;
	if ((_3439_expr == nullptr)) {
		return nullptr;;
	};
	if (_1c0d80709_IsNil(_3439_expr.ptr())) {
		_1c0d82596_pushErr((*(_33528_e)).ptr(), (*((*((*(_33543_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0d80352_Data> _3529_d = _1c0daad50_buildVoidData();;
	(*(_3529_d))._field_Model=jule::Any(jule::new_ptr<_1c0c6c173_BuiltinErrorCallExprModel>(_1c0c6c173_BuiltinErrorCallExprModel{._field_Err=_3439_expr}), &__jule_any_type23);
	return _3529_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea1e57_builtinCallerOut(jule::Ptr<_1c0d82046_Eval>* _35726_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _35741_fc, jule::Ptr<_1c0d80352_Data>* ) {
	if (((*((*(_35741_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr((*(_35726_e)).ptr(), (*((*(_35741_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35741_fc))))._field_Args.len() > 1LL)) {
		_1c0d82596_pushErr((*(_35726_e)).ptr(), (*((*((*(_35741_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0d80352_Data> _3669_expr = _1c0da0020_evalExpr((*(_35726_e)), (*((*(_35741_fc))))._field_Args[0LL]);;
	if ((_3669_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c0dcbcc7_isBuiltinStrConvertable(&((*(_3669_expr))._field_Kind))))) {
		_1c0d82596_pushErr((*(_35726_e)).ptr(), (*((*((*(_35741_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0d80352_Data> _3769_d = _1c0daad50_buildVoidData();;
	(*(_3769_d))._field_Model=jule::Any(jule::new_ptr<_1c0c69439_BuiltinOutCallExprModel>(_1c0c69439_BuiltinOutCallExprModel{._field_Expr=(*(_3669_expr))._field_Model, }), &__jule_any_type27);
	return _3769_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea2386_builtinCallerOutln(jule::Ptr<_1c0d82046_Eval>* _38128_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _38143_fc, jule::Ptr<_1c0d80352_Data>* _38165_d) {
	(*(_38165_d))=_1c0ea1e57_builtinCallerOut(_38128_e, _38143_fc, _38165_d);
	if (((*(_38165_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_38165_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c69813_BuiltinOutlnCallExprModel>(_1c0c69813_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_38165_d))))._field_Model.cast_ptr<_1c0c69439_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Expr, }), &__jule_any_type28);
	return (*(_38165_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea27b5_builtinCallerNew(jule::Ptr<_1c0d82046_Eval>* _39326_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _39341_fc, jule::Ptr<_1c0d80352_Data>* _39363_d) {
	if (((*((*(_39341_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr((*(_39326_e)).ptr(), (*((*(_39341_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_39341_fc))))._field_Args.len() > 2LL)) {
		_1c0d82596_pushErr((*(_39326_e)).ptr(), (*((*((*(_39341_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0d80352_Data> _4029_t = _1c0d9e20b_evalExprKind((*(_39326_e)), (*((*((*(_39341_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4029_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4029_t))._field_Decl))) {
		_1c0d82596_pushErr((*(_39326_e)).ptr(), (*((*((*(_39341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1c0dcb744_isValidForSptrType(&((*(_4029_t))._field_Kind))))) {
		jule::Ptr<_1c0c5e3c9_StructIns> _41313_s = _1c0db41dd_Struct((*(_4029_t))._field_Kind.ptr());;
		if ((((_41313_s != nullptr) && ((*(_41313_s))._field_Decl != nullptr)) && (*((*(_41313_s))._field_Decl))._field_Binded)) {
			_1c0d82596_pushErr((*(_39326_e)).ptr(), (*((*((*(_39341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_39363_d))))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0dbbb1e_Sptr>(_1c0dbbb1e_Sptr{._field_Elem=(*(_4029_t))._field_Kind}), 21)});
	if (((*((*(_39341_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1c0db0519_TypeKind> _42713_old = (*((*(_39326_e))))._field_prefix;;
		(*((*(_39326_e))))._field_prefix=(*(_4029_t))._field_Kind;
		jule::Ptr<_1c0d80352_Data> _43013_init = _1c0da0020_evalExpr((*(_39326_e)), (*((*(_39341_fc))))._field_Args[1LL]);;
		(*((*(_39326_e))))._field_prefix=_42713_old;
		if ((_43013_init != nullptr)) {
			jule::Ptr<_1c0c25406_Token> _43517_token = (*((*((*(_39341_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1c0d1335c_checkValidityForInitExpr((*((*(_39326_e))))._field_s, (!((*((*(_39326_e))))._field_immutable)), false, &((*(_4029_t))._field_Kind), &(_43013_init), &(_43517_token));
			_1c0d0ed4d_checkAssignType((*((*(_39326_e))))._field_s, false, &((*(_4029_t))._field_Kind), &(_43013_init), _43517_token);
			(*((*(_39363_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c69bdc_BuiltinNewCallExprModel>(_1c0c69bdc_BuiltinNewCallExprModel{._field_Kind=(*(_4029_t))._field_Kind, ._field_Init=(*(_43013_init))._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_39363_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c69bdc_BuiltinNewCallExprModel>(_1c0c69bdc_BuiltinNewCallExprModel{._field_Kind=(*(_4029_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_39363_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea2d9d_builtinCallerPanic(jule::Ptr<_1c0d82046_Eval>* _45528_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _45543_fc, jule::Ptr<_1c0d80352_Data>* ) {
	if (((*((*(_45543_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr((*(_45528_e)).ptr(), (*((*(_45543_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_45543_fc))))._field_Args.len() > 1LL)) {
		_1c0d82596_pushErr((*(_45528_e)).ptr(), (*((*((*(_45543_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0d80352_Data> _4649_expr = _1c0da0020_evalExpr((*(_45528_e)), (*((*(_45543_fc))))._field_Args[0LL]);;
	if ((_4649_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1c0db2b6a_Prim((*(_4649_expr))._field_Kind.ptr()) == nullptr) || (!(_1c0dbb57a_IsStr(_1c0db2b6a_Prim((*(_4649_expr))._field_Kind.ptr()).ptr()))))) {
		_1c0d82596_pushErr((*(_45528_e)).ptr(), (*((*(_45543_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0d80352_Data> _4739_d = _1c0daad50_buildVoidData();;
	(*(_4739_d))._field_Model=jule::Any(jule::new_ptr<_1c0c6a0b6_BuiltinPanicCallExprModel>(_1c0c6a0b6_BuiltinPanicCallExprModel{._field_Token=(*((*(_45543_fc))))._field_Token, ._field_Expr=(*(_4649_expr))._field_Model}), &__jule_any_type29);
	return _4739_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea32cc_builtinCallerMake(jule::Ptr<_1c0d82046_Eval>* _48127_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _48142_fc, jule::Ptr<_1c0d80352_Data>* _48164_d) {
	if (((*((*(_48142_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_48142_fc))))._field_Args.len() == 1LL)) {
			_1c0d82596_pushErr((*(_48127_e)).ptr(), (*((*(_48142_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1c0d82596_pushErr((*(_48127_e)).ptr(), (*((*(_48142_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_48142_fc))))._field_Args.len() > 3LL)) {
		_1c0d82596_pushErr((*(_48127_e)).ptr(), (*((*((*(_48142_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0d80352_Data> _4949_t = _1c0d9e20b_evalExprKind((*(_48127_e)), (*((*((*(_48142_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4949_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4949_t))._field_Decl))) {
		_1c0d82596_pushErr((*(_48127_e)).ptr(), (*((*((*(_48142_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1c0db3bc1_Slc((*(_4949_t))._field_Kind.ptr()) == nullptr)) {
		_1c0d82596_pushErr((*(_48127_e)).ptr(), (*((*((*(_48142_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_4949_t))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_48164_d))))._field_Kind=(*(_4949_t))._field_Kind;
	jule::Ptr<_1c0d80352_Data> _5099_lenExpr = _1c0da0020_evalExpr(_1c0d0e49b_evalp((*((*(_48127_e))))._field_s, (*((*(_48127_e))))._field_lookup, (*(_4949_t))._field_Kind), (*((*(_48142_fc))))._field_Args[1LL]);;
	if ((_5099_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1c0d8aeea_checkIntegerIndexingByData((*(_48127_e)).ptr(), &(_5099_lenExpr), (*((*((*(_48142_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1c0c6aa23_BuiltinMakeCallExprModel> _5169_model = jule::new_ptr<_1c0c6aa23_BuiltinMakeCallExprModel>(_1c0c6aa23_BuiltinMakeCallExprModel{._field_Kind=(*(_4949_t))._field_Kind, ._field_Len=(*(_5099_lenExpr))._field_Model, });;
	(*((*(_48164_d))))._field_Model=jule::Any(_5169_model, &__jule_any_type114);
	if (((*((*(_48142_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1c0d80352_Data> _52213_capExpr = _1c0da0020_evalExpr(_1c0d0e49b_evalp((*((*(_48127_e))))._field_s, (*((*(_48127_e))))._field_lookup, (*(_4949_t))._field_Kind), (*((*(_48142_fc))))._field_Args[2LL]);;
		if ((_52213_capExpr == nullptr)) {
			return (*(_48164_d));;
		};
		_1c0d8aeea_checkIntegerIndexingByData((*(_48127_e)).ptr(), &(_52213_capExpr), (*((*((*(_48142_fc))))._field_Args[2LL]))._field_Token);
		(*(_5169_model))._field_Cap=(*(_52213_capExpr))._field_Model;
	};
	return (*(_48164_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea370b_builtinCallerAppend(jule::Ptr<_1c0d82046_Eval>* _53229_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _53244_fc, jule::Ptr<_1c0d80352_Data>* _53266_d) {
	if (((*((*(_53244_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_53244_fc))))._field_Args.len() == 1LL)) {
			_1c0d82596_pushErr((*(_53229_e)).ptr(), (*((*(_53244_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1c0d82596_pushErr((*(_53229_e)).ptr(), (*((*(_53244_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0d80352_Data> _5429_t = _1c0da0020_evalExpr((*(_53229_e)), (*((*(_53244_fc))))._field_Args[0LL]);;
	if ((_5429_t == nullptr)) {
		return nullptr;;
	};
	if ((_1c0db3bc1_Slc((*(_5429_t))._field_Kind.ptr()) == nullptr)) {
		_1c0d82596_pushErr((*(_53229_e)).ptr(), (*((*((*(_53244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0c744aa_FnIns> _5529_f = jule::new_ptr<_1c0c744aa_FnIns>(_1c0c744aa_FnIns{._field_Params=jule::Slice<jule::Ptr<_1c0c7350e_ParamIns>>::make({jule::new_ptr<_1c0c7350e_ParamIns>(_1c0c7350e_ParamIns{._field_Decl=jule::new_ptr<_1c0c6ead2_Param>(_1c0c6ead2_Param{._field_Mutable=true, }), ._field_Kind=(*(_5429_t))._field_Kind}),jule::new_ptr<_1c0c7350e_ParamIns>(_1c0c7350e_ParamIns{._field_Decl=jule::new_ptr<_1c0c6ead2_Param>(_1c0c6ead2_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=(*(_1c0db3bc1_Slc((*(_5429_t))._field_Kind.ptr())))._field_Elem})}), ._field_Result=(*(_5429_t))._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1c0d80352_Data>(jule::Ptr<_1c0d82046_Eval>*,jule::Ptr<_1c0c43a51_FnCallExpr>*,jule::Ptr<_1c0d80352_Data>*)>(_1c0ea16a4_builtinCallerCommonPlain), });;
	(*((*(_53266_d))))._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(_5529_f, 1)});
	(*(_53266_d))=_1c0ea16a4_builtinCallerCommonPlain(_53229_e, _53244_fc, _53266_d);
	if (((*(_53266_d)) != nullptr)) {
		jule::Ptr<_1c0c65842_FnCallExprModel> _57613_model = (*((*(_53266_d))))._field_Model.cast_ptr<_1c0c65842_FnCallExprModel>(&__jule_any_type34);;
		(*((*(_53266_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c6adec_BuiltinAppendCallExprModel>(_1c0c6adec_BuiltinAppendCallExprModel{._field_Dest=(*(_57613_model))._field_Args[0LL], ._field_Elements=(*(_57613_model))._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_53266_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea3be5_callerCopySlice(jule::Ptr<_1c0d80352_Data>* _58525_dest, jule::Ptr<_1c0d82046_Eval>* _58543_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _58558_fc, jule::Ptr<_1c0d80352_Data>* _58580_d) {
	if ((!((*((*(_58525_dest))))._field_Mutable))) {
		_1c0d82596_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0d80352_Data> _5909_src = _1c0da0020_evalExpr((*(_58543_e)), (*((*(_58558_fc))))._field_Args[1LL]);;
	if ((_5909_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0dbc5e2_Slc> _5949_slc = _1c0db3bc1_Slc((*(_5909_src))._field_Kind.ptr());;
	if ((_5949_slc != nullptr)) {
		if (((!((*(_5909_src))._field_Mutable)) && _1c0db1d9a_Mutable((*(_5949_slc))._field_Elem.ptr()))) {
			_1c0d82596_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1c0db0c23_Equal((*((*(_58525_dest))))._field_Kind, (*(_5909_src))._field_Kind)))) {
			_1c0d82596_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_58525_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*(_5909_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1c0db80e3_Prim> _6049_destPrim = _1c0db2b6a_Prim((*(_1c0db3bc1_Slc((*((*(_58525_dest))))._field_Kind.ptr())))._field_Elem.ptr());;
		jule::Ptr<_1c0db80e3_Prim> _6059_prim = _1c0db2b6a_Prim((*(_5909_src))._field_Kind.ptr());;
		if (((((_6049_destPrim == nullptr) || (_6059_prim == nullptr)) || (!(_1c0dbb57a_IsStr(_6059_prim.ptr())))) || (!(_1c0db99da_IsU8(_6049_destPrim.ptr()))))) {
			_1c0d82596_pushErr((*(_58543_e)).ptr(), (*((*((*(_58558_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*((*(_58525_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*(_5909_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	};
	(*((*(_58580_d))))._field_Kind=_1c0d78dd9_lenKind();
	(*((*(_58580_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c6bc99_BuiltinCopyCallExprModel>(_1c0c6bc99_BuiltinCopyCallExprModel{._field_Dest=(*(_58525_dest)), ._field_Src=_5909_src}), &__jule_any_type31);
	return (*(_58580_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea4124_builtinCallerCopy(jule::Ptr<_1c0d82046_Eval>* _61927_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _61942_fc, jule::Ptr<_1c0d80352_Data>* _61964_d) {
	if (((*((*(_61942_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_61942_fc))))._field_Args.len() == 1LL)) {
			_1c0d82596_pushErr((*(_61927_e)).ptr(), (*((*(_61942_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1c0d82596_pushErr((*(_61927_e)).ptr(), (*((*(_61942_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_61942_fc))))._field_Args.len() > 2LL)) {
		_1c0d82596_pushErr((*(_61927_e)).ptr(), (*((*((*(_61942_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0d80352_Data> _6329_dest = _1c0da0020_evalExpr((*(_61927_e)), (*((*(_61942_fc))))._field_Args[0LL]);;
	{
		
		if ((_6329_dest == nullptr)) {
			_case_begin_1ab462c8a:;
			{
				return nullptr;;
			}
		}
		else if ((_1c0db3bc1_Slc((*(_6329_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab46395b:;
			{
				return _1c0ea3be5_callerCopySlice(&(_6329_dest), _61927_e, _61942_fc, _61964_d);;
			}
		}
		else {
			_case_begin_1ab462905:;
			{
				_1c0d82596_pushErr((*(_61927_e)).ptr(), (*((*((*(_61942_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab4628a0:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea4498_callerLenSlice(jule::Ptr<_1c0d80352_Data>* _64424_expr, jule::Ptr<_1c0d80352_Data>* _64442_d) {
	(*((*(_64442_d))))._field_Kind=_1c0d78dd9_lenKind();
	(*((*(_64442_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c6b1e9_BuiltinLenCallExprModel>(_1c0c6b1e9_BuiltinLenCallExprModel{._field_Expr=(*(_64424_expr))}), &__jule_any_type115);
	return (*(_64442_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea481c_callerLenMap(jule::Ptr<_1c0d80352_Data>* _65222_expr, jule::Ptr<_1c0d80352_Data>* _65240_d) {
	(*((*(_65240_d))))._field_Kind=_1c0d78dd9_lenKind();
	(*((*(_65240_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c6b1e9_BuiltinLenCallExprModel>(_1c0c6b1e9_BuiltinLenCallExprModel{._field_Expr=(*(_65222_expr))}), &__jule_any_type115);
	return (*(_65240_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea4b91_callerLenArr(jule::Ptr<_1c0d80352_Data>* _66022_expr, jule::Ptr<_1c0d80352_Data>* _66040_d) {
	(*((*(_66040_d))))._field_Kind=_1c0d78dd9_lenKind();
	(*((*(_66040_d))))._field_Constant=static__203644a3a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_1c0db393a_Arr((*((*(_66022_expr))))._field_Kind.ptr())))._field_N)));
	(*((*(_66040_d))))._field_Model=jule::Any((*((*(_66040_d))))._field_Constant, &__jule_any_type19);
	return (*(_66040_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea5015_callerLenStr(jule::Ptr<_1c0d80352_Data>* _66722_expr, jule::Ptr<_1c0d80352_Data>* _66740_d) {
	(*((*(_66740_d))))._field_Kind=_1c0d78dd9_lenKind();
	if (_1c0d80c26_IsConst((*(_66722_expr)).ptr())) {
		(*((*(_66740_d))))._field_Constant=static__203644a3a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_203646773_ReadStr((*((*(_66722_expr))))._field_Constant.ptr()).len())));
		(*((*(_66740_d))))._field_Model=jule::Any((*((*(_66740_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_66740_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c6b1e9_BuiltinLenCallExprModel>(_1c0c6b1e9_BuiltinLenCallExprModel{._field_Expr=(*(_66722_expr))}), &__jule_any_type115);
	};
	return (*(_66740_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea5389_callerLenComptime(jule::Ptr<_1c0d80352_Data>* _68027_d, jule::I64 _68037_n) {
	(*((*(_68027_d))))._field_Kind=_1c0d78dd9_lenKind();
	(*((*(_68027_d))))._field_Constant=static__203644a3a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_68037_n)));
	(*((*(_68027_d))))._field_Model=jule::Any((*((*(_68027_d))))._field_Constant, &__jule_any_type19);
	return (*(_68027_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea57b8_builtinCallerLen(jule::Ptr<_1c0d82046_Eval>* _68726_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _68741_fc, jule::Ptr<_1c0d80352_Data>* _68763_d) {
	if (((*((*(_68741_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr((*(_68726_e)).ptr(), (*((*(_68741_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_68741_fc))))._field_Args.len() > 1LL)) {
		_1c0d82596_pushErr((*(_68726_e)).ptr(), (*((*((*(_68741_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0d80352_Data> _6959_dest = _1c0d9ebce_evalExpr1((*(_68726_e)), (*((*(_68741_fc))))._field_Args[0LL]);;
	{
		
		if ((_6959_dest == nullptr)) {
			_case_begin_1ab46ec53:;
			{
				return nullptr;;
			}
		}
		else if ((_1c0db3bc1_Slc((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab470924:;
			{
				return _1c0ea4498_callerLenSlice(&(_6959_dest), _68763_d);;
			}
		}
		else if ((_1c0db393a_Arr((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab47098a:;
			{
				return _1c0ea4b91_callerLenArr(&(_6959_dest), _68763_d);;
			}
		}
		else if ((_1c0db470a_Map((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab470a01:;
			{
				return _1c0ea481c_callerLenMap(&(_6959_dest), _68763_d);;
			}
		}
		else if (((_1c0db2b6a_Prim((*(_6959_dest))._field_Kind.ptr()) != nullptr) && _1c0dbb57a_IsStr(_1c0db2b6a_Prim((*(_6959_dest))._field_Kind.ptr()).ptr()))) {
			_case_begin_1ab46e934:;
			{
				return _1c0ea5015_callerLenStr(&(_6959_dest), _68763_d);;
			}
		}
		else if ((_1c0db4ead_comptimeStructFields((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab46e99a:;
			{
				return _1c0ea5389_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1c0db4ead_comptimeStructFields((*(_6959_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1c0db54ca_comptimeEnumFields((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab46ea11:;
			{
				return _1c0ea5389_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1c0db54ca_comptimeEnumFields((*(_6959_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1c0db629a_comptimeTypeInfos((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab46ea77:;
			{
				return _1c0ea5389_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1c0db629a_comptimeTypeInfos((*(_6959_dest))._field_Kind.ptr())))._field_types.len()));;
			}
		}
		else if ((_1c0db59e7_comptimeParams((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab470abc:;
			{
				return _1c0ea5389_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1c0db59e7_comptimeParams((*(_6959_dest))._field_Kind.ptr())))._field_params.len()));;
			}
		}
		else if ((_1c0db67b7_comptimeStatics((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab470b33:;
			{
				return _1c0ea5389_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1c0db67b7_comptimeStatics((*(_6959_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_1c0db7301_comptimeFiles((*(_6959_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab470b99:;
			{
				return _1c0ea5389_callerLenComptime(_68763_d, static_cast<jule::I64>((*(_1c0db7301_comptimeFiles((*(_6959_dest))._field_Kind.ptr())))._field_files.len()));;
			}
		}
		else {
			_case_begin_1ab46e8bd:;
			{
				_1c0d82596_pushErr((*(_68726_e)).ptr(), (*((*((*(_68741_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab46e868:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea5b3c_callerCapSlice(jule::Ptr<_1c0d80352_Data>* _72524_expr, jule::Ptr<_1c0d80352_Data>* _72542_d) {
	(*((*(_72542_d))))._field_Kind=_1c0d78dd9_lenKind();
	(*((*(_72542_d))))._field_Model=jule::Any(jule::new_ptr<_1c0c6b4e6_BuiltinCapCallExprModel>(_1c0c6b4e6_BuiltinCapCallExprModel{._field_Expr=(*(_72524_expr))}), &__jule_any_type116);
	return (*(_72542_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea606b_builtinCallerCap(jule::Ptr<_1c0d82046_Eval>* _73326_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _73341_fc, jule::Ptr<_1c0d80352_Data>* _73363_d) {
	if (((*((*(_73341_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr((*(_73326_e)).ptr(), (*((*(_73341_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_73341_fc))))._field_Args.len() > 1LL)) {
		_1c0d82596_pushErr((*(_73326_e)).ptr(), (*((*((*(_73341_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0d80352_Data> _7419_dest = _1c0da0020_evalExpr((*(_73326_e)), (*((*(_73341_fc))))._field_Args[0LL]);;
	{
		
		if ((_7419_dest == nullptr)) {
			_case_begin_1ab47e8bc:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7419_dest))._field_Decl) {
			_case_begin_1ab48058d:;
			{
				_1c0d82596_pushErr((*(_73326_e)).ptr(), (*((*((*(_73341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c0db3bc1_Slc((*(_7419_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab480604:;
			{
				return _1c0ea5b3c_callerCapSlice(&(_7419_dest), _73363_d);;
			}
		}
		else {
			_case_begin_1ab47e537:;
			{
				_1c0d82596_pushErr((*(_73326_e)).ptr(), (*((*((*(_73341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab47e4d2:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea6555_callerDeleteMap(jule::Ptr<_1c0d82046_Eval>* _75625_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _75640_fc, jule::Ptr<_1c0d80352_Data>* _75662_expr, jule::Ptr<_1c0d80352_Data>* _75680_d) {
	if ((!((*((*(_75662_expr))))._field_Mutable))) {
		_1c0d82596_pushErr((*(_75625_e)).ptr(), (*((*((*(_75640_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_75680_d))=_1c0daad50_buildVoidData();
	jule::Ptr<_1c0c6b8c0_BuiltinDeleteCallExprModel> _7619_model = jule::new_ptr<_1c0c6b8c0_BuiltinDeleteCallExprModel>(_1c0c6b8c0_BuiltinDeleteCallExprModel{._field_Dest=(*(_75662_expr)), });;
	if (((*((*(_75640_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1c0d80352_Data> _76513_key = _1c0da0020_evalExpr((*(_75625_e)), (*((*(_75640_fc))))._field_Args[1LL]);;
		{
			
			if ((_76513_key == nullptr)) {
				_case_begin_1ab485ecd:;
				{
					return nullptr;;
				}
			}
			else if ((*(_76513_key))._field_Decl) {
				_case_begin_1ab484c46:;
				{
					_1c0d82596_pushErr((*(_75625_e)).ptr(), (*((*((*(_75640_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1ab484bd0:;
				{
					;
					jule::Ptr<_1c0db0519_TypeKind> _77417_keyType = (*(_1c0db470a_Map((*((*(_75662_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1c0d0ed4d_checkAssignType((*((*(_75625_e))))._field_s, false, &(_77417_keyType), &(_76513_key), (*((*((*(_75640_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1ab484b69:;
		};
		(*(_7619_model))._field_Key=_76513_key;
	};
	(*((*(_75680_d))))._field_Model=jule::Any(_7619_model, &__jule_any_type32);
	return (*(_75680_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea6984_builtinCallerDelete(jule::Ptr<_1c0d82046_Eval>* _78529_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _78544_fc, jule::Ptr<_1c0d80352_Data>* _78566_d) {
	if (((*((*(_78544_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr((*(_78529_e)).ptr(), (*((*(_78544_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_78544_fc))))._field_Args.len() > 2LL)) {
		_1c0d82596_pushErr((*(_78529_e)).ptr(), (*((*((*(_78544_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0d80352_Data> _7939_dest = _1c0da0020_evalExpr((*(_78529_e)), (*((*(_78544_fc))))._field_Args[0LL]);;
	{
		
		if ((_7939_dest == nullptr)) {
			_case_begin_1ab48bc92:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7939_dest))._field_Decl) {
			_case_begin_1ab48c963:;
			{
				_1c0d82596_pushErr((*(_78529_e)).ptr(), (*((*((*(_78544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c0db470a_Map((*(_7939_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab48c9c9:;
			{
				return _1c0ea6555_callerDeleteMap(_78529_e, _78544_fc, &(_7939_dest), _78566_d);;
			}
		}
		else {
			_case_begin_1ab48b90c:;
			{
				_1c0d82596_pushErr((*(_78529_e)).ptr(), (*((*((*(_78544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab48b8a7:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea6db3_builtinCallerAssert(jule::Ptr<_1c0d82046_Eval>* _80829_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _80844_fc, jule::Ptr<_1c0d80352_Data>* ) {
	if (((*((*(_80844_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr((*(_80829_e)).ptr(), (*((*(_80844_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80844_fc))))._field_Args.len() > 2LL)) {
		_1c0d82596_pushErr((*(_80829_e)).ptr(), (*((*((*(_80844_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0d80352_Data> _8179_expr = _1c0da0020_evalExpr((*(_80829_e)), (*((*(_80844_fc))))._field_Args[0LL]);;
	if ((_8179_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1c0db2b6a_Prim((*(_8179_expr))._field_Kind.ptr()) == nullptr) || (!(_1c0dbb2e4_IsBool(_1c0db2b6a_Prim((*(_8179_expr))._field_Kind.ptr()).ptr()))))) {
		_1c0d82596_pushErr((*(_80829_e)).ptr(), (*((*(_80844_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0c6a56c_BuiltinAssertCallExprModel> _8269_model = jule::new_ptr<_1c0c6a56c_BuiltinAssertCallExprModel>(_1c0c6a56c_BuiltinAssertCallExprModel{._field_Token=(*((*(_80844_fc))))._field_Token, ._field_Expr=(*(_8179_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_80844_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1c0d80352_Data> _83413_log = _1c0da0020_evalExpr((*(_80829_e)), (*((*(_80844_fc))))._field_Args[1LL]);;
		if ((_83413_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1c0d80c26_IsConst(_83413_log.ptr()))) || (_1c0db2b6a_Prim((*(_83413_log))._field_Kind.ptr()) == nullptr)) || (!(_1c0dbb57a_IsStr(_1c0db2b6a_Prim((*(_83413_log))._field_Kind.ptr()).ptr()))))) {
			_1c0d82596_pushErr((*(_80829_e)).ptr(), (*((*((*(_80844_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*(_83413_log))._field_Kind.ptr()), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8269_model))._field_Log=_203646773_ReadStr((*(_83413_log))._field_Constant.ptr());
	};
	jule::Ptr<_1c0d80352_Data> _8479_d = _1c0daad50_buildVoidData();;
	(*(_8479_d))._field_Model=jule::Any(_8269_model, &__jule_any_type30);
	return _8479_d;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea748a_builtinCallerStdComptimeTypeOf(jule::Ptr<_1c0d82046_Eval>* _85240_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _85255_fc, jule::Ptr<_1c0d80352_Data>* ) {
	if (((*((*(_85255_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr((*(_85240_e)).ptr(), (*((*(_85255_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_85255_fc))))._field_Args.len() > 1LL)) {
		_1c0d82596_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0d80352_Data> _8619_d = _1c0d9e20b_evalExprKind((*(_85240_e)), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8619_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c0c744aa_FnIns> _8655_f = _1c0db3e57_Fn((*(_8619_d))._field_Kind.ptr());;
	if ((_8655_f != nullptr)) {
		if (_1c0c75940_IsBuiltin(_8655_f.ptr())) {
			_1c0d82596_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*(_8655_f))._field_Generics.len() != (*((*(_8655_f))._field_Decl))._field_Generics.len())) {
			_1c0d82596_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1c0c5e3c9_StructIns> _8765_s = _1c0db41dd_Struct((*(_8619_d))._field_Kind.ptr());;
	if (((_8765_s != nullptr) && ((*(_8765_s))._field_Generics.len() != (*((*(_8765_s))._field_Decl))._field_Generics.len()))) {
		_1c0d82596_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1c0db4c27_comptime((*(_8619_d))._field_Kind.ptr())) {
		_1c0d82596_pushErr((*(_85240_e)).ptr(), (*((*((*(_85255_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_8619_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c0ca7d4b_buildComptimeTypeInfoData(&((*((*(_85240_e))))._field_s), &((*(_8619_d))._field_Kind));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea7853_builtinCallerStdComptimeValueOf(jule::Ptr<_1c0d82046_Eval>* _88841_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _88856_fc, jule::Ptr<_1c0d80352_Data>* ) {
	if (((*((*(_88856_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr((*(_88841_e)).ptr(), (*((*(_88856_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_88856_fc))))._field_Args.len() > 1LL)) {
		_1c0d82596_pushErr((*(_88841_e)).ptr(), (*((*((*(_88856_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0d80352_Data> _8969_d = _1c0da0020_evalExpr((*(_88841_e)), (*((*(_88856_fc))))._field_Args[0LL]);;
	if ((_8969_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c0d7923b_isGoodValueToInfer(&(_8969_d))))) {
		_1c0d82596_pushErr((*(_88841_e)).ptr(), (*((*((*(_88856_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_8969_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1c0ca807c_buildComptimeValue(&(_8969_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea7b1c_rangeData(jule::Trait<_1c0c8a911_comptimeRangeKind> _90818_kind) {
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0c8aaed_comptimeRange>(_1c0c8aaed_comptimeRange{._field_kind=_90818_kind}), 5)}), });;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea804b_builtinCallerStdComptimeRange(jule::Ptr<_1c0d82046_Eval>* _91839_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _91854_fc, jule::Ptr<_1c0d80352_Data>* ) {
	if (((*((*(_91854_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr((*(_91839_e)).ptr(), (*((*(_91854_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_91854_fc))))._field_Args.len() > 1LL)) {
		_1c0d82596_pushErr((*(_91839_e)).ptr(), (*((*((*(_91854_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Range", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0d80352_Data> _9279_d = _1c0d9e20b_evalExprKind((*(_91839_e)), (*((*((*(_91854_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_9279_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1c0db4ead_comptimeStructFields((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab4ae963:;
			{
				return _1c0ea7b1c_rangeData(jule::Trait<_1c0c8a911_comptimeRangeKind>(_1c0db4ead_comptimeStructFields((*(_9279_d))._field_Kind.ptr()), 0));;
			}
		}
		else if ((_1c0db54ca_comptimeEnumFields((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab4ad91d:;
			{
				return _1c0ea7b1c_rangeData(jule::Trait<_1c0c8a911_comptimeRangeKind>(_1c0db54ca_comptimeEnumFields((*(_9279_d))._field_Kind.ptr()), 2));;
			}
		}
		else if ((_1c0db629a_comptimeTypeInfos((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab4ad984:;
			{
				return _1c0ea7b1c_rangeData(jule::Trait<_1c0c8a911_comptimeRangeKind>(_1c0db629a_comptimeTypeInfos((*(_9279_d))._field_Kind.ptr()), 4));;
			}
		}
		else if ((_1c0db59e7_comptimeParams((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab4ad9ea:;
			{
				return _1c0ea7b1c_rangeData(jule::Trait<_1c0c8a911_comptimeRangeKind>(_1c0db59e7_comptimeParams((*(_9279_d))._field_Kind.ptr()), 3));;
			}
		}
		else if ((_1c0db67b7_comptimeStatics((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab4ad5aa:;
			{
				return _1c0ea7b1c_rangeData(jule::Trait<_1c0c8a911_comptimeRangeKind>(_1c0db67b7_comptimeStatics((*(_9279_d))._field_Kind.ptr()), 1));;
			}
		}
		else if ((_1c0db7301_comptimeFiles((*(_9279_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab4ad621:;
			{
				return _1c0ea7b1c_rangeData(jule::Trait<_1c0c8a911_comptimeRangeKind>(_1c0db7301_comptimeFiles((*(_9279_d))._field_Kind.ptr()), 5));;
			}
		}
		else {
			_case_begin_1ab4ad544:;
			{
				_1c0d82596_pushErr((*(_91839_e)).ptr(), (*((*(_91854_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_9279_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Range", 5), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab4ad28b:;
	};
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea847a_builtinCallerStdComptimeLine(jule::Ptr<_1c0d82046_Eval>* _95038_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _95053_fc, jule::Ptr<_1c0d80352_Data>* ) {
	if (((*((*(_95053_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_95038_e)).ptr(), (*((*((*(_95053_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_2036445ea_Const> _9549_constant = static__203644a3a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*((*((*(_95053_fc))))._field_Token))._field_Row)));;
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9ca24_primInt, ._field_Model=jule::Any(_9549_constant, &__jule_any_type19), ._field_Constant=_9549_constant});;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea88a9_builtinCallerStdComptimeFile(jule::Ptr<_1c0d82046_Eval>* _96238_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _96253_fc, jule::Ptr<_1c0d80352_Data>* ) {
	if (((*((*(_96253_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_96238_e)).ptr(), (*((*((*(_96253_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0ca5a2a_comptimeFile>(_1c0ca5a2a_comptimeFile{._field_file=(*((*((*(_96238_e))))._field_s))._field_file}), 18)}), });;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea8cd8_builtinCallerStdComptimeFiles(jule::Ptr<_1c0d82046_Eval>* _97539_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _97554_fc, jule::Ptr<_1c0d80352_Data>* ) {
	if (((*((*(_97554_fc))))._field_Args.len() > 0LL)) {
		_1c0d82596_pushErr((*(_97539_e)).ptr(), (*((*((*(_97554_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=jule::new_ptr<_1c0db0519_TypeKind>(_1c0db0519_TypeKind{._field_Kind=jule::Trait<_1c0db0063_Kind>(jule::new_ptr<_1c0ca4430_comptimeFiles>(_1c0ca4430_comptimeFiles{._field_files=(*((*((*(_97539_e))))._field_s))._field_files}), 17)}), });;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea9217_builtinCallerStdComptimeTypeAlias(jule::Ptr<_1c0d82046_Eval>* _98843_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _98858_fc, jule::Ptr<_1c0d80352_Data>* ) {
	if (((*((*(_98858_fc))))._field_Args.len() > 2LL)) {
		_1c0d82596_pushErr((*(_98843_e)).ptr(), (*((*((*(_98858_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_98858_fc))))._field_Args.len() == 0LL)) {
		_1c0d82596_pushErr((*(_98843_e)).ptr(), (*((*(_98858_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_98858_fc))))._field_Args.len() == 1LL)) {
		_1c0d82596_pushErr((*(_98843_e)).ptr(), (*((*(_98858_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_98858_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ab4c1c1c:;
			{
				goto _match_end_1ab4c0721;
			}
		}
		else {
			_case_begin_1ab4c0787:;
			{
				_1c0d82596_pushErr((*(_98843_e)).ptr(), (*((*((*(_98858_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1c0d82909_pushSuggestion((*(_98843_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab4c0721:;
	};
	jule::Ptr<_1c0c25406_Token> _10099_ident = (*((*((*((*(_98858_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1c0c41752_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_98843_e))))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ab4c2ec6:;
			{
				goto _match_end_1ab4c2aec;
			}
		}
		else {
			_case_begin_1ab4c2b52:;
			{
				_1c0d82596_pushErr((*(_98843_e)).ptr(), (*((*(_98858_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ab4c2aec:;
	};
	jule::Ptr<_1c0cb9412_scopeChecker> _10189_sc = (*((*(_98843_e))))._field_lookup.cast_ptr<_1c0cb9412_scopeChecker>(0);;
	jule::Ptr<_1c0dae727_TypeAlias> _10199_alias = jule::new_ptr<_1c0dae727_TypeAlias>(_1c0dae727_TypeAlias{._field_Scope=(*(_10189_sc))._field_tree, ._field_Public=_1c0d01801_IsPub(&((*(_10099_ident))._field_Kind)), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_10099_ident, ._field_Ident=(*(_10099_ident))._field_Kind, ._field_Kind=jule::new_ptr<_1c0db76db_TypeSymbol>(), });;
	jule::Ptr<_1c0d80352_Data> _10299_t = _1c0d9e54c_eval1((*(_98843_e)), (*((*(_98858_fc))))._field_Args[1LL]);;
	if ((_10299_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10299_t))._field_Decl) {
		(*((*(_10199_alias))._field_Kind))._field_Kind=(*(_10299_t))._field_Kind;
	} else {
		jule::Ptr<_1c0c9a5be_comptimeTypeInfo> _103613_cti = _1c0db6531_comptimeTypeInfo((*(_10299_t))._field_Kind.ptr());;
		if ((_103613_cti == nullptr)) {
			_1c0d82596_pushErr((*(_98843_e)).ptr(), (*((*((*(_98858_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1c0d82909_pushSuggestion((*(_98843_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_10199_alias))._field_Kind))._field_Kind=(*(_103613_cti))._field_base;
	};
	_1c0cbdbb9_checkTypeAlias(_10189_sc, &(_10199_alias));
	return _1c0daad50_buildVoidData();;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea9646_builtinCallerStdMemSizeOf(jule::Ptr<_1c0d82046_Eval>* _104835_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _104850_fc, jule::Ptr<_1c0d80352_Data>* ) {
	jule::Ptr<_1c0d80352_Data> _10499_result = jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c64a_primUint, });;
	if (((*((*(_104850_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr((*(_104835_e)).ptr(), (*((*(_104850_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10499_result;;
	};
	if (((*((*(_104850_fc))))._field_Args.len() > 1LL)) {
		_1c0d82596_pushErr((*(_104835_e)).ptr(), (*((*((*(_104850_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0d80352_Data> _10619_d = _1c0d9e20b_evalExprKind((*(_104835_e)), (*((*((*(_104850_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10619_d == nullptr)) {
		return _10499_result;;
	};
	if ((!(_1c0dccca6_validTypeForXof(&((*(_10619_d))._field_Kind))))) {
		_1c0d82596_pushErr((*(_104835_e)).ptr(), (*((*((*(_104850_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_10619_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10499_result))._field_Model=jule::Any(jule::new_ptr<_1c0c67c2e_SizeofExprModel>(_1c0c67c2e_SizeofExprModel{._field_Expr=(*(_10619_d))._field_Model}), &__jule_any_type117);
	return _10499_result;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea9a75_builtinCallerStdMemAlignOf(jule::Ptr<_1c0d82046_Eval>* _107336_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _107351_fc, jule::Ptr<_1c0d80352_Data>* ) {
	jule::Ptr<_1c0d80352_Data> _10749_result = jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9c64a_primUint, });;
	if (((*((*(_107351_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr((*(_107336_e)).ptr(), (*((*(_107351_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10749_result;;
	};
	if (((*((*(_107351_fc))))._field_Args.len() > 1LL)) {
		_1c0d82596_pushErr((*(_107336_e)).ptr(), (*((*((*(_107351_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0d80352_Data> _10869_d = _1c0d9e20b_evalExprKind((*(_107336_e)), (*((*((*(_107351_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10869_d == nullptr)) {
		return _10749_result;;
	};
	if ((!(_1c0dccca6_validTypeForXof(&((*(_10869_d))._field_Kind))))) {
		_1c0d82596_pushErr((*(_107336_e)).ptr(), (*((*((*(_107351_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1c0db08d2_Str((*(_10869_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10749_result))._field_Model=jule::Any(jule::new_ptr<_1c0c6c89e_AlignofExprModel>(_1c0c6c89e_AlignofExprModel{._field_Expr=(*(_10869_d))._field_Model}), &__jule_any_type118);
	return _10749_result;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0ea9ea4_builtinCallerStdMemFree(jule::Ptr<_1c0d82046_Eval>* _109833_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _109848_fc, jule::Ptr<_1c0d80352_Data>* ) {
	if (((*((*(_109848_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr((*(_109833_e)).ptr(), (*((*(_109848_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_109848_fc))))._field_Args.len() > 1LL)) {
		_1c0d82596_pushErr((*(_109833_e)).ptr(), (*((*((*(_109848_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0d80352_Data> _11079_d = _1c0da0020_evalExpr((*(_109833_e)), (*((*(_109848_fc))))._field_Args[0LL]);;
	if ((_11079_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c0db264d_PerformsRC((*(_11079_d))._field_Kind.ptr())))) {
		_1c0d82596_pushErr((*(_109833_e)).ptr(), (*((*((*(_109848_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c0d80352_Data> _11169_result = _1c0daad50_buildVoidData();;
	(*(_11169_result))._field_Model=jule::Any(jule::new_ptr<_1c0c6d66e_FreeExprModel>(_1c0c6d66e_FreeExprModel{._field_Expr=(*(_11079_d))._field_Model}), &__jule_any_type33);
	return _11169_result;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0eaa3d3_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1c0d82046_Eval>* _112145_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _112160_fc, jule::Ptr<_1c0d80352_Data>* ) {
	if (((*((*(_112160_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr((*(_112145_e)).ptr(), (*((*(_112160_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_112160_fc))))._field_Args.len() > 1LL)) {
		_1c0d82596_pushErr((*(_112145_e)).ptr(), (*((*((*(_112160_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1c0d80352_Data> _11309_d = _1c0da0020_evalExpr((*(_112145_e)), (*((*(_112160_fc))))._field_Args[0LL]);;
	if ((_11309_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c0dcbcc7_isBuiltinStrConvertable(&((*(_11309_d))._field_Kind))))) {
		_1c0d82596_pushErr((*(_112145_e)).ptr(), (*((*((*(_112160_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c0d80352_Data>(_1c0d80352_Data{._field_Kind=_1c0e9bced_primStr, ._field_Model=jule::Any(jule::new_ptr<_1c0c6ce98_IntegratedToStrExprModel>(_1c0c6ce98_IntegratedToStrExprModel{._field_Expr=(*(_11309_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1c0d80352_Data> _1c0eaa812_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1c0d82046_Eval>* _114844_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _114859_fc, jule::Ptr<_1c0d80352_Data>* _114881_d) {
	if ((!(_1c0d8308b_isUnsafe((*(_114844_e)).ptr())))) {
		_1c0d82596_pushErr((*(_114844_e)).ptr(), (*((*(_114859_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_114859_fc))))._field_Args.len() < 1LL)) {
		_1c0d82596_pushErr((*(_114844_e)).ptr(), (*((*(_114859_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1c0d80352_Data> _11589_argd = _1c0da0020_evalExpr((*(_114844_e)), (*((*(_114859_fc))))._field_Args[0LL]);;
	if ((_11589_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1c0db2b6a_Prim((*(_11589_argd))._field_Kind.ptr()) == nullptr) || (!(_1c0dbb57a_IsStr(_1c0db2b6a_Prim((*(_11589_argd))._field_Kind.ptr()).ptr()))))) {
		_1c0d82596_pushErr((*(_114844_e)).ptr(), (*((*((*(_114859_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1c0db08d2_Str((*(_11589_argd))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1c0d80c26_IsConst(_11589_argd.ptr()))) || (!(_203648d6e_IsStr((*(_11589_argd))._field_Constant.ptr()))))) {
		_1c0d82596_pushErr((*(_114844_e)).ptr(), (*((*((*(_114859_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c0d80352_Data> _11739_r = _1c0daad50_buildVoidData();;
	jule::Ptr<_1c0c744aa_FnIns> _11759_f = _1c0db3e57_Fn((*((*(_114881_d))))._field_Kind.ptr());;
	if (((*(_11759_f))._field_Generics.len() > 0LL)) {
		(*(_11739_r))._field_Kind=(*((*(_11759_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1c0c6d372_BackendEmitExprModel> _11809_model = jule::new_ptr<_1c0c6d372_BackendEmitExprModel>(_1c0c6d372_BackendEmitExprModel{._field_Code=_203646773_ReadStr((*(_11589_argd))._field_Constant.ptr()), });;
	if (((*((*(_114859_fc))))._field_Args.len() > 1LL)) {
		(*(_11809_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_114859_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_114859_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1ab4ea54d:;
			if (it != expr_end) {
				jule::Ptr<_1c0c3ed27_Expr> _118621_arg = *it;
				{
					_11589_argd=_1c0d9e54c_eval1((*(_114844_e)), _118621_arg);
					if ((_11589_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = (*(_11809_model))._field_Exprs; __jule_push_dest.push((*(_11589_argd))._field_Model); };
				}
				_iter_next_1ab4ea54d:;
				++it;
				goto _iter_begin_1ab4ea54d;
			}
			_iter_end_1ab4ea54d:;
		};
	};
	(*(_11739_r))._field_Model=jule::Any(_11809_model, &__jule_any_type25);
	return _11739_r;;
}



inline jule::Ptr<_1c0d80352_Data> _1c0eaac41_builtinCallerStdDebugOut(jule::Ptr<_1c0d82046_Eval>* _119934_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _119949_fc, jule::Ptr<_1c0d80352_Data>* _119971_d) {
	(*(_119971_d))=_1c0ea1e57_builtinCallerOut(_119934_e, _119949_fc, _119971_d);
	if (((*(_119971_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_119971_d))))._field_Model.cast_ptr<_1c0c69439_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_119971_d));;
}



inline jule::Ptr<_1c0d80352_Data> _1c0eab170_builtinCallerStdDebugOutln(jule::Ptr<_1c0d82046_Eval>* _120836_e, jule::Ptr<_1c0c43a51_FnCallExpr>* _120851_fc, jule::Ptr<_1c0d80352_Data>* _120873_d) {
	(*(_120873_d))=_1c0ea2386_builtinCallerOutln(_120836_e, _120851_fc, _120873_d);
	if (((*(_120873_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_120873_d))))._field_Model.cast_ptr<_1c0c69813_BuiltinOutlnCallExprModel>(&__jule_any_type28)))._field_Debug=true;
	return (*(_120873_d));;
}



inline jule::Ptr<_1c181ad86_FileInfo> _1c181db25_ParseFile(jule::Ptr<_1c0c2abc0_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c181ad86_FileInfo> _279_finf = jule::new_ptr<_1c181ad86_FileInfo>();;
	({
		__jule_tuple_x_1c0c38a46_Ast__jule_tuple_s_21ce0c86b_Log __jule_assign_result = _1c1865023_parseFileset(_2318_f);
		(*(_279_finf))._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*(_279_finf))._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*(_279_finf))._field_Errors.len() > 0LL)) {
		(*(_279_finf))._field_Ast=nullptr;
	};
	return _279_finf;;
}



inline __jule_tuple_x_1c0c38a46_Ast__jule_tuple_s_21ce0c86b_Log _1c1865023_parseFileset(jule::Ptr<_1c0c2abc0_File> _5521_f) {
	__jule_tuple_x_1c0c38a46_Ast__jule_tuple_s_21ce0c86b_Log __jule_func_result;
	jule::Ptr<_1c1885780_parser> _569_p = jule::new_ptr<_1c1885780_parser>();;
	_1c1896351_parse(_569_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*(_569_p))._field_ast;
	__jule_func_result.__jule_result_arg1 = (*(_569_p))._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1c0c4aa14_ScopeTree> _1c18659a2_newScope(void) {
	return jule::new_ptr<_1c0c4aa14_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1c1865d26_isSt(jule::Ptr<_1c0c25406_Token> _499_current, jule::Ptr<_1c0c25406_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*(_499_current))._field_Row));
	__jule_func_result.__jule_result_arg1=((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1c186619a_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1c0c25406_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1c0c25406_Token> _619_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_619_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1c0c25e51_IsBinOp((*(_619_prev))._field_Id) && ((*(_619_prev))._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1c1866563_nextStPos(jule::Slice<jule::Ptr<_1c0c25406_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _699_braceN = 0LL;;
	jule::I64 _709_i = _6833_start;;
	for (; (_709_i < (*(_6815_tokens)).len()); (_709_i)++) {
		{
			jule::Bool _7213_ok = false;;
			jule::Bool _7313_terminated = false;;
			jule::Ptr<_1c0c25406_Token> _749_tok = (*(_6815_tokens))[_709_i];;
			{
				auto &_match_expr{ (*(_749_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ab57c5e1:;
					{
						if (((_699_braceN == 0LL) && (_709_i > _6833_start))) {
							if ((!(_1c186619a_prevIsIncompleteExpr(_6815_tokens, &(_709_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c1865d26_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
									_7213_ok = __jule_assign_result.__jule_result_arg0;
									_7313_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7213_ok) {
									goto _julec_label_1ab57c26c;
								};
							};
						};
						(_699_braceN)++;
						goto _iter_next_1ab57b3e2;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ab57c668:;
					{
						(_699_braceN)--;
						if (((_699_braceN == 0LL) && ((_709_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c1865d26_isSt((*(_6815_tokens))[(_709_i + 1LL)], _749_tok);
								_7213_ok = __jule_assign_result.__jule_result_arg0;
								_7313_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7213_ok) {
								(_709_i)++;
								goto _julec_label_1ab57c26c;
							};
						};
						goto _iter_next_1ab57b3e2;
					}
				}
				_match_end_1ab57c57a:;
			};
			if ((_699_braceN != 0LL)) {
				goto _iter_next_1ab57b3e2;
			};
			if ((_709_i > _6833_start)) {
				if (_1c186619a_prevIsIncompleteExpr(_6815_tokens, &(_709_i))) {
					goto _iter_next_1ab57b3e2;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c1865d26_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c1865d26_isSt(_749_tok, _749_tok);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7213_ok))) {
				goto _iter_next_1ab57b3e2;
			};
			_julec_label_1ab57c26c:;
			if (_7313_terminated) {
				(_709_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _709_i;
			__jule_func_result.__jule_result_arg1 = _7313_terminated;
			return __jule_func_result;;
		}
	_iter_next_1ab57b3e2:;
	}
	_iter_end_1ab57b3e2:;;
	__jule_func_result.__jule_result_arg0 = _709_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1c0c25406_Token__jule_tuple_bool _1c18668d7_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1c0c25406_Token>> _13028_tokens) {
	__jule_tuple_sx_1c0c25406_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1315_start = (*(_13016_i));;
	jule::Bool _1329_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c1866563_nextStPos(&(_13028_tokens), _1315_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1329_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1c0c25406_Token>> _1349_stTokens = _13028_tokens.slice(_1315_start, (*(_13016_i)));;
	if (_1329_terminated) {
		if ((_1349_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1c0c25406_Token__jule_tuple_bool __jule_assign_result = _1c18668d7_skipSt(_13016_i, _13028_tokens);
				_1349_stTokens = __jule_assign_result.__jule_result_arg0;
				_1329_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _1349_stTokens;
			__jule_func_result.__jule_result_arg1 = _1329_terminated;
			return __jule_func_result;;
		};
		(_1349_stTokens).mut_slice(0LL, (_1349_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1349_stTokens;
	__jule_func_result.__jule_result_arg1 = _1329_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1c1866c17_stmt>> _1c18670be_splitStmts(jule::Slice<jule::Ptr<_1c0c25406_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_1c1866c17_stmt>> _1539_stmts = jule::Slice<jule::Ptr<_1c1866c17_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _1549_pos = 0LL;;
	while ((_1549_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1c0c25406_Token>> _15613_stmt;;
			jule::Bool _15619_terminated = false;;
			({
				__jule_tuple_sx_1c0c25406_Token__jule_tuple_bool __jule_assign_result = _1c18668d7_skipSt(&(_1549_pos), (*(_15220_tokens)));
				_15613_stmt = __jule_assign_result.__jule_result_arg0;
				_15619_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1c1866c17_stmt>> &__jule_push_dest = _1539_stmts; __jule_push_dest.push(jule::new_ptr<_1c1866c17_stmt>(_1c1866c17_stmt{._field_tokens=_15613_stmt, ._field_terminated=_15619_terminated})); };
		}
	_iter_next_1ab586870:;
	}
	_iter_end_1ab586870:;;
	return _1539_stmts;;
}



inline jule::Bool _1c18803a1_isTypeOp(jule::U64* _88214_id) {
	return ((((*(_88214_id)) == static_cast<jule::U64>(65LLU)) || ((*(_88214_id)) == static_cast<jule::U64>(54LLU))) || ((*(_88214_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1c18806ae_isTypeRange(jule::Slice<jule::Ptr<_1c0c25406_Token>>* _88921_tokens) {
	jule::Bool _8909_op = false;;
	{
		auto expr = _88921_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae30c31:;
		if (it != expr_end) {
			jule::I64 _8919_i = it - expr->begin();
			jule::Ptr<_1c0c25406_Token> _89112_token = *it;
			{
				if (((*(_89112_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_8909_op) {
						return true;;
					};
					jule::I64 _89617_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1c0c25406_Token>> _89717_lTokens = (*(_88921_tokens)).slice(_8919_i);;
					{
						auto expr = &(_89717_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aae33926:;
						if (it != expr_end) {
							jule::Ptr<_1c0c25406_Token> _89820_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_89820_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1aae346e6:;
										{
											(_89617_rangeN)++;
											goto _iter_next_1aae33926;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1aae3476d:;
										{
											(_89617_rangeN)--;
											goto _iter_next_1aae33926;
										}
									}
									_match_end_1aae3462a:;
								};
								if ((_89617_rangeN == 0LL)) {
									return _1c18803a1_isTypeOp(&((*(_89820_lToken))._field_Id));;
								};
							}
							_iter_next_1aae33926:;
							++it;
							goto _iter_begin_1aae33926;
						}
						_iter_end_1aae33926:;
					};
					return true;;
				};
				if ((!(_1c18803a1_isTypeOp(&((*(_89112_token))._field_Id))))) {
					return false;;
				};
				_8909_op=true;
			}
			_iter_next_1aae30c31:;
			++it;
			_8919_i++;
			goto _iter_begin_1aae30c31;
		}
		_iter_end_1aae30c31:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1c0c25406_Token>> _1c1880978_getBlockExpr(jule::Slice<jule::Ptr<_1c0c25406_Token>>* _92222_tokens) {
	jule::I64 _9239_braceN = 0LL;;
	jule::I64 _9249_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92222_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae36198:;
		if (it != expr_end) {
			jule::I64 _9259_i = it - expr->begin();
			jule::Ptr<_1c0c25406_Token> _92512_tok = *it;
			{
				{
					auto &_match_expr{ (*(_92512_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(13LLU) || _match_expr == static_cast<jule::U64>(14LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1aae370ab:;
						{
							(_9249_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1aae37133:;
						{
							if (((_9239_braceN > 0LL) || (_9249_skipToNextBraceClose > 0LL))) {
								if ((_9249_skipToNextBraceClose > 0LL)) {
									(_9249_skipToNextBraceClose)--;
								};
								(_9239_braceN)++;
								goto _match_end_1aae36ebd;
							};
							return (*(_92222_tokens)).slice(0LL, _9259_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aae371aa:;
						{
							(_9239_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aae37232:;
						{
							(_9239_braceN)--;
						}
					}
					_match_end_1aae36ebd:;
				};
			}
			_iter_next_1aae36198:;
			++it;
			_9259_i++;
			goto _iter_begin_1aae36198;
		}
		_iter_end_1aae36198:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1c0c25406_Token__jule_tuple_sx_1c0c25406_Token _1c1880d41_splitDelim(jule::Slice<jule::Ptr<_1c0c25406_Token>>* _95220_tokens, jule::U64 _95238_delim) {
	__jule_tuple_sx_1c0c25406_Token__jule_tuple_sx_1c0c25406_Token __jule_func_result;
	jule::I64 _9539_rangeN = 0LL;;
	{
		auto expr = _95220_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae398c7:;
		if (it != expr_end) {
			jule::I64 _9549_i = it - expr->begin();
			jule::Ptr<_1c0c25406_Token> _95412_token = *it;
			{
				{
					auto &_match_expr{ (*(_95412_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aae3a6b9:;
						{
							(_9539_rangeN)++;
							goto _iter_next_1aae398c7;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aae3a741:;
						{
							(_9539_rangeN)--;
						}
					}
					else if (_match_expr == _95238_delim) {
						_case_begin_1aae3a7b8:;
						{
							if ((_9539_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1c0c25406_Token>> _96721_l = (*(_95220_tokens)).slice(0LL, _9549_i);;
								jule::Slice<jule::Ptr<_1c0c25406_Token>> _96821_r = (*(_95220_tokens)).slice((_9549_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _96721_l;
								__jule_func_result.__jule_result_arg1 = _96821_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1aae3a5dc:;
				};
			}
			_iter_next_1aae398c7:;
			++it;
			_9549_i++;
			goto _iter_begin_1aae398c7;
		}
		_iter_end_1aae398c7:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1c188110a_findLowestPrecOp(jule::Slice<jule::Ptr<_1c0c25406_Token>>* _97822_tokens) {
	jule::U8 _9839_prec = 255LLU;;
	jule::I64 _9849_precPos = -1LL;;
	jule::I64 _9869_braceN = 0LL;;
	jule::Bool _9879_skipToNextBraceOpen = false;;
	{
		auto expr = _97822_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae3d1e4:;
		if (it != expr_end) {
			jule::I64 _9889_i = it - expr->begin();
			jule::Ptr<_1c0c25406_Token> *_98812_token = it;
			{
				{
					auto &_match_expr{ (*((*(_98812_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1aae3e03b:;
						{
							_9879_skipToNextBraceOpen=false;
							goto _case_begin_1aae3e0b3;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1aae3e0b3:;
						{
							(_9869_braceN)++;
							goto _iter_next_1aae3d1e4;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1aae3e13a:;
						{
							(_9869_braceN)--;
							goto _iter_next_1aae3d1e4;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1aae3e1b2:;
						{
							_9879_skipToNextBraceOpen=true;
							goto _iter_next_1aae3d1e4;
						}
					}
					_match_end_1aae3de4d:;
				};
				{
					
					if (_9879_skipToNextBraceOpen) {
						_case_begin_1aae40625:;
						{
							goto _iter_next_1aae3d1e4;
						}
					}
					else if ((_9889_i == 0LL)) {
						_case_begin_1aae4069c:;
						{
							goto _iter_next_1aae3d1e4;
						}
					}
					else if ((_9869_braceN > 0LL)) {
						_case_begin_1aae40724:;
						{
							goto _iter_next_1aae3d1e4;
						}
					}
					else if ((!(_1c0c25e51_IsBinOp((*((*(_98812_token))))._field_Id)))) {
						_case_begin_1aae4079b:;
						{
							goto _iter_next_1aae3d1e4;
						}
					}
					_match_end_1aae403c2:;
				};
				jule::Ptr<_1c0c25406_Token> _10179_left = (*(_97822_tokens))[(_9889_i - 1LL)];;
				if ((_1c0c25b43_IsUnaryOp((*(_10179_left))._field_Id) || ((*(_10179_left))._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1aae3d1e4;
				};
				if (((_9889_i > 1LL) && ((*(_10179_left))._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1c0c25406_Token> _102513_lleft = (*(_97822_tokens))[(_9889_i - 2LL)];;
					if (((*(_102513_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_98812_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*((*(_98812_token))))._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1aae3d1e4;
						};
					};
				};
				jule::U8 _10349_p = _1c0c2577a_Prec((*(_98812_token)).ptr());;
				if (((_10349_p != 0LLU) && (_10349_p <= _9839_prec))) {
					_9839_prec=_10349_p;
					_9849_precPos=_9889_i;
				};
			}
			_iter_next_1aae3d1e4:;
			++it;
			_9889_i++;
			goto _iter_begin_1aae3d1e4;
		}
		_iter_end_1aae3d1e4:;
	};
	return _9849_precPos;;
}



inline jule::Ptr<_1c0c41752_IdentExpr> _1c18813c4_buildIdentExpr(jule::Ptr<_1c0c25406_Token>* _104324_token) {
	return jule::new_ptr<_1c0c41752_IdentExpr>(_1c0c41752_IdentExpr{._field_Token=(*(_104324_token)), ._field_Ident=(*((*(_104324_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1c0c25406_Token__jule_tuple_int _1c188168d_getRangeExprTokens(jule::Slice<jule::Ptr<_1c0c25406_Token>>* _105128_tokens) {
	__jule_tuple_sx_1c0c25406_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10529_rangeN = 0LL;;
	jule::I64 _10539_i = ((*(_105128_tokens)).len() - 1LL);;
	for (; (_10539_i >= 0LL); (_10539_i)--) {
		{
			jule::Ptr<_1c0c25406_Token> _10559_tok = (*(_105128_tokens))[_10539_i];;
			{
				auto &_match_expr{ (*(_10559_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aae46e12:;
					{
						(_10529_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aae46e89:;
					{
						(_10529_rangeN)--;
					}
				}
				_match_end_1aae46d9b:;
			};
			if ((_10529_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105128_tokens)).slice(0LL, _10539_i);
				__jule_func_result.__jule_result_arg1 = _10529_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1aae462eb:;
	}
	_iter_end_1aae462eb:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10529_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1c1882491_checkAssignTokens(jule::Slice<jule::Ptr<_1c0c25406_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1c0c29cce_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _209_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaecc3e8:;
		if (it != expr_end) {
			jule::Ptr<_1c0c25406_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aaeccecb:;
						{
							(_209_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aaecd053:;
						{
							(_209_braceN)--;
						}
					}
					_match_end_1aaecce10:;
				};
				{
					
					if ((_209_braceN < 0LL)) {
						_case_begin_1aaecddde:;
						{
							return false;;
						}
					}
					else if ((_209_braceN > 0LL)) {
						_case_begin_1aaecde55:;
						{
							goto _iter_next_1aaecc3e8;
						}
					}
					else if (_1c0c2a362_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*((*(_2112_t))))._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1aaecdecc:;
						{
							return true;;
						}
					}
					_match_end_1aaecdd45:;
				};
			}
			_iter_next_1aaecc3e8:;
			++it;
			goto _iter_begin_1aaecc3e8;
		}
		_iter_end_1aaecc3e8:;
	};
	return false;;
}



inline _21ce0c86b_Log _1c188366d_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1c0c2abc0_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _21ce0c86b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_21ce0cccd_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1c0c25406_Token>> _1c1883b68_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1c0c25406_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1c0c25406_Token> _735_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_735_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _789_rangeN = 1LL;;
	jule::I64 _795_start = (*(_6915_i));;
	for (; ((_789_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1c0c25406_Token> _819_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_819_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1ab6c2280:;
					{
						(_789_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1ab6c2307:;
					{
						(_789_rangeN)--;
					}
				}
				_match_end_1ab6c2219:;
			};
		}
	_iter_next_1ab6c15e2:;
	}
	_iter_end_1ab6c15e2:;;
	return (*(_6959_tokens)).slice(_795_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1c0c25406_Token__jule_tuple_sx_1c0c25406_Token _1c1883e32_rangeLast(jule::Slice<jule::Ptr<_1c0c25406_Token>>* _9919_tokens) {
	__jule_tuple_sx_1c0c25406_Token__jule_tuple_sx_1c0c25406_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1035_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1035_first != static_cast<jule::U64>(73LLU)) && (_1035_first != static_cast<jule::U64>(76LLU))) && (_1035_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1099_braceN = 0LL;;
	jule::I64 _1109_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1109_i >= 0LL); (_1109_i)--) {
		{
			jule::Ptr<_1c0c25406_Token> _1129_token = (*(_9919_tokens))[_1109_i];;
			{
				auto &_match_expr{ (*(_1129_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ab6c5d88:;
					{
						(_1099_braceN)++;
						goto _iter_next_1ab6c533d;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ab6c5e10:;
					{
						(_1099_braceN)--;
					}
				}
				_match_end_1ab6c5d22:;
			};
			if ((_1099_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1109_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1109_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1ab6c533d:;
	}
	_iter_end_1ab6c533d:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1c0c25406_Token__jule_tuple_s_21ce0c86b_Log _1c18843d8_parts(jule::Slice<jule::Ptr<_1c0c25406_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1c0c25406_Token__jule_tuple_s_21ce0c86b_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> _14213_parts = nullptr;;
	jule::Slice<_21ce0c86b_Log> _14313_errors = nullptr;;
	jule::I64 _1459_rangeN = 0LL;;
	jule::I64 _1469_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6c3eda:;
		if (it != expr_end) {
			jule::I64 _1479_i = it - expr->begin();
			jule::Ptr<_1c0c25406_Token> _14712_token = *it;
			{
				{
					auto &_match_expr{ (*(_14712_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ab6c9e7a:;
						{
							(_1459_rangeN)++;
							goto _iter_next_1ab6c3eda;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ab6ca002:;
						{
							(_1459_rangeN)--;
						}
					}
					_match_end_1ab6c9dae:;
				};
				if ((_1459_rangeN > 0LL)) {
					goto _iter_next_1ab6c3eda;
				};
				if (((*(_14712_token))._field_Id == _13733_id)) {
					if ((_13746_exprMust && ((_1479_i - _1469_last) <= 0LL))) {
						_21ce0c86b_Log _16617_err = _1c188366d_makeErr((*(_14712_token))._field_Row, (*(_14712_token))._field_Column, &((*(_14712_token))._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_21ce0c86b_Log> &__jule_push_dest = _14313_errors; __jule_push_dest.push(_16617_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last, _1479_i)); };
					_1469_last=static_cast<jule::I64>((_1479_i + 1LL));
				};
			}
			_iter_next_1ab6c3eda:;
			++it;
			_1479_i++;
			goto _iter_begin_1ab6c3eda;
		}
		_iter_end_1ab6c3eda:;
	};
	if ((_1469_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last)); };
	} else if ((!(_13746_exprMust))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c0c25406_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_1c0c25406_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _14213_parts;
	__jule_func_result.__jule_result_arg1 = _14313_errors;
	return __jule_func_result;;
}



inline jule::U64 _1c18846a2_getCloseOfBrace(jule::U64 _18320_left) {
	{
		auto &_match_expr{ _18320_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1ab6cd148:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ab6cd1ae:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1ab6cd225:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1ab6cd0d2:;
			{
				return _18320_left;;
			}
		}
		_match_end_1ab6c9188:;
	};
}



inline _21ce0c86b_Log _1c1884ad1_compilerErr(jule::Ptr<_1c0c25406_Token>* _19617_token, jule::Str* _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	return _21ce0c86b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_19617_token))))._field_Row, ._field_Column=(*((*(_19617_token))))._field_Column, ._field_Path=(*((*((*(_19617_token))))._field_File))._field_Path, ._field_Text=_21ce0cccd_Logf((*(_19633_fmt)), _19646_args), ._field_Line=_1c0c2bb9e_GetRow((*((*(_19617_token))))._field_File.ptr(), (*((*(_19617_token))))._field_Row), };;
}



inline void _1c1884e77_pushSuggestion(_21ce0c86b_Log* _20730_log, jule::Str _20741_fmt, jule::Slice<jule::Any> _20754_args) {
	(*(_20730_log))._field_Suggestion=_21ce0cccd_Logf(_20741_fmt, _20754_args);
}



inline jule::Str _1c188531d_tokstoa(jule::Slice<jule::Ptr<_1c0c25406_Token>>* _21113_tokens) {
	jule::I64 _2129_n = 0LL;;
	{
		auto expr = _21113_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6d248d:;
		if (it != expr_end) {
			jule::Ptr<_1c0c25406_Token> *_21312_token = it;
			{
				_2129_n+=(*((*(_21312_token))))._field_Kind.len();
			}
			_iter_next_1ab6d248d:;
			++it;
			goto _iter_begin_1ab6d248d;
		}
		_iter_end_1ab6d248d:;
	};
	_21cd5e16e_StrBuilder _2169_s = static__21cd5e48d_New(_2129_n);;
	{
		auto expr = _21113_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6d3329:;
		if (it != expr_end) {
			jule::Ptr<_1c0c25406_Token> *_21712_token = it;
			{
				_21cd67d15_WriteStr(&_2169_s, (*((*(_21712_token))))._field_Kind);
			}
			_iter_next_1ab6d3329:;
			++it;
			goto _iter_begin_1ab6d3329;
		}
		_iter_end_1ab6d3329:;
	};
	return _21cd6860c_Str(&_2169_s);;
}



inline jule::Ptr<_1c0c3a9e3_TypeDecl> _1c1896d46_buildVoidType(void) {
	return jule::new_ptr<_1c0c3a9e3_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1c10995c1_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1ab87d98b:;
			{
				__jule_func_result.__jule_result_arg0=_21ce10a39_IsWindows(_21d2d5d32_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1ab87da02:;
			{
				__jule_func_result.__jule_result_arg0=_21ce10d14_IsDarwin(_21d2d5d32_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1ab87d6d3:;
			{
				__jule_func_result.__jule_result_arg0=_21ce110cd_IsLinux(_21d2d5d32_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1ab87d749:;
			{
				__jule_func_result.__jule_result_arg0=_21ce11c6b_IsUnix(_21d2d5d32_Os);
			}
		}
		else {
			_case_begin_1ab87d183:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ab87d5c3:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1c1099714_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1ab880c13:;
			{
				__jule_func_result.__jule_result_arg0=_21ce1141e_IsI386(_21d2d60eb_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1ab8808e4:;
			{
				__jule_func_result.__jule_result_arg0=_21ce116d8_IsAmd64(_21d2d60eb_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1ab88095a:;
			{
				__jule_func_result.__jule_result_arg0=_21ce119a2_IsArm64(_21d2d60eb_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1ab8809c1:;
			{
				__jule_func_result.__jule_result_arg0=_21ce123cb_Is64Bit(_21d2d60eb_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1ab880a37:;
			{
				__jule_func_result.__jule_result_arg0=_21ce12112_Is32Bit(_21d2d60eb_Arch);
			}
		}
		else {
			_case_begin_1ab880394:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ab8807d4:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c10b4bb3_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_21cd6bcb4_Base(_5029_p);
	jule::I64 _525_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_525_n - _21cd6b731_Ext(_5029_p).len()));;
	jule::Str _589_a1 = jule::Str();;
	jule::Str _619_a2 = jule::Str();;
	jule::I64 _649_i = _21cd4c998_FindLastByte(_5029_p, '_');;
	if ((_649_i == -1LL)) {
		jule::Bool _6713_ok = false;;
		jule::Bool _6721_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c10995c1_checkOs(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6721_exist) {
			return _6713_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c1099714_checkArch(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6721_exist)) || _6713_ok);;
	};
	if (((_649_i + 1LL) >= _525_n)) {
		return true;;
	};
	_589_a1=_5029_p.slice((_649_i + 1LL));
	(_5029_p).mut_slice(0LL, _649_i);;
	_649_i=static_cast<jule::I64>(_21cd4c998_FindLastByte(_5029_p, '_'));
	if ((_649_i != -1LL)) {
		_619_a2=_5029_p.slice((_649_i + 1LL));
	};
	if ((_619_a2).empty()) {
		jule::Bool _8813_ok = false;;
		jule::Bool _8821_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c10995c1_checkOs(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8821_exist) {
			return _8813_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c1099714_checkArch(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8821_exist)) || _8813_ok);;
	};
	jule::Bool _969_ok = false;;
	jule::Bool _9617_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c1099714_checkArch(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9617_exist) {
		if ((!(_969_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c10995c1_checkOs(_619_a2);
			_969_ok = __jule_assign_result.__jule_result_arg0;
			_9617_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9617_exist)) || _969_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c10995c1_checkOs(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9617_exist)) || _969_ok);;
}



inline void _1c10b5d3a_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_21d2d5d32_Os); };
	if (_21ce11c6b_IsUnix(_21d2d5d32_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1c10b60b0_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_21d2d60eb_Arch); };
	if (_21ce123cb_Is64Bit(_21d2d60eb_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_21ce12112_Is32Bit(_21d2d60eb_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1c10b639b_initVars(jule::Slice<jule::Str>* _5518_vars, _1c10b5a1b_CompileInfo* _5532_info) {
	_1c10b5d3a_setOsVars(_5518_vars);
	_1c10b60b0_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1ab88a745:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1ab88a7ab:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1ab88a6e0:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1ab88b922:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1ab88b988:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ab88b9ee:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1ab88bb42:;
	};
}



inline jule::Slice<jule::U8> _1c189ad28_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__21b9bc77e_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_21d2d4c43_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _21ce0c86b_Log _1c189b103_flatCompilerErr(jule::Str _4120_text) {
	return _21ce0c86b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1c18a079a_pushPasses(jule::Ptr<_1c0cd6462_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8b9dd4:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _11217_f = *it;
			{
				_julec_label_1ab8ba797:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab8ba962:;
					if (it != expr_end) {
						_1c0c78b74_Pass _11416_pass = *it;
						{
							if ((_11416_pass._field_Text).empty()) {
								goto _iter_next_1ab8ba962;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab8bb479:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1ab8ba962;
										};
									}
									_iter_next_1ab8bb479:;
									++it;
									goto _iter_begin_1ab8bb479;
								}
								_iter_end_1ab8bb479:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1ab8ba962:;
						++it;
						goto _iter_begin_1ab8ba962;
					}
					_iter_end_1ab8ba962:;
				};
			}
			_iter_next_1ab8b9dd4:;
			++it;
			goto _iter_begin_1ab8b9dd4;
		}
		_iter_end_1ab8b9dd4:;
	};
}



inline jule::Slice<jule::Str> _1c18a0b63_getAllUniquePasses(jule::Ptr<_1c0cd6462_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1c0cd353b_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1c18a079a_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8bcee7:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_1c18a079a_pushPasses(&((*(_13217_u))._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1ab8bcee7:;
			++it;
			goto _iter_begin_1ab8bcee7;
		}
		_iter_end_1ab8bcee7:;
	};
	return _12913_passes;;
}



inline _1c10b5a1b_CompileInfo _1c18a0d72_buildCompileInfo(void) {
	_1c10b5a1b_CompileInfo _1429_info = _1c10b5a1b_CompileInfo{._field_Prod=_21a9586a5_Production, ._field_Test=_21a957c48_Test, };;
	{
		auto &_match_expr{ _21a9570aa_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1ab8be2c3:;
			{
				_1429_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1ab8be37d:;
			{
				_1429_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1ab8bcb62:;
	};
	{
		auto &_match_expr{ _21a9574ea_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1ab8bee3e:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1ab8bd657:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ab8be713:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1ab8c0181:;
	};
	return _1429_info;;
}



inline void _1c1a158dd_EliminateDefines(jule::Ptr<_1c189de2a_IR>* _29026_ir) {
	jule::Ptr<_1c19d3081_ObjectDeadCode> _2919_ocd = static__1c19d3526_new(_29026_ir);;
	_1c1a155ad_elimanate(_2919_ocd);
}



inline jule::Ptr<_1c0c39e10_Directive> _1c1a15ca6_findDirective(jule::Slice<jule::Ptr<_1c0c39e10_Directive>>* _29623_directives, jule::Str _29654_tag) {
	{
		auto expr = _29623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab90874c:;
		if (it != expr_end) {
			jule::Ptr<_1c0c39e10_Directive> _29717_dr = *it;
			{
				if (((*((*(_29717_dr))._field_Tag))._field_Kind == _29654_tag)) {
					return _29717_dr;;
				};
			}
			_iter_next_1ab90874c:;
			++it;
			goto _iter_begin_1ab90874c;
		}
		_iter_end_1ab90874c:;
	};
	return nullptr;;
}



inline jule::Bool _1c1a1612a_hasDirective(jule::Slice<jule::Ptr<_1c0c39e10_Directive>>* _30618_directives, jule::Str _30649_tag) {
	return (_1c1a15ca6_findDirective(&((*(_30618_directives))), _30649_tag) != nullptr);;
}



inline jule::Bool _1c1a164e3_isTraitMethod(jule::Ptr<_1c0c5e3c9_StructIns>* _31123_owner, jule::Ptr<_1c0c744aa_FnIns>* _31143_f) {
	{
		auto expr = &((*((*((*(_31123_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab909990:;
		if (it != expr_end) {
			jule::Ptr<_1c0c84850_Trait> _31217_t = *it;
			{
				if ((_1c0c854ee_FindMethod(_31217_t.ptr(), (*((*((*(_31143_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1ab909990:;
			++it;
			goto _iter_begin_1ab909990;
		}
		_iter_end_1ab909990:;
	};
	return false;;
}



inline void _1c1a1a4e7_eliminateDeadCodeOfScope(jule::Ptr<_1c0cb210d_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1c0cb49a1_Label>> _2425_labels = jule::Slice<jule::Ptr<_1c0cb49a1_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1c0cb4d7a_GotoSt>> _2435_gotos = jule::Slice<jule::Ptr<_1c0cb4d7a_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1c1a172e6_scopeDeadCode> _2449_sdc = jule::new_ptr<_1c1a172e6_scopeDeadCode>(_1c1a172e6_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1c0cb49a1_Label>>>)((&(_2425_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1c0cb4d7a_GotoSt>>>)((&(_2435_gotos)))), });;
	{
		_1c1a1a1b7_optimizeStmts(_2449_sdc);
	};
}



inline void _1c1a1a76c_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1c0c715a6_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab94cb48:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab950794:;
					if (it != expr_end) {
						jule::Ptr<_1c0c744aa_FnIns> _25621_ins = *it;
						{
							_1c1a1a4e7_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_1ab950794:;
						++it;
						goto _iter_begin_1ab950794;
					}
					_iter_end_1ab950794:;
				};
			}
			_iter_next_1ab94cb48:;
			++it;
			goto _iter_begin_1ab94cb48;
		}
		_iter_end_1ab94cb48:;
	};
}



inline void _1c1a1a99d_eliminateFunctionsScopePackage(jule::Ptr<_1c0cd6462_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9505b8:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _26317_f = *it;
			{
				_1c1a1a76c_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_1ab9505b8:;
			++it;
			goto _iter_begin_1ab9505b8;
		}
		_iter_end_1ab9505b8:;
	};
}



inline void _1c1a1ac56_eliminateScopePackage(jule::Ptr<_1c0cd6462_Package>* _26831_pkg) {
	_1c1a1a99d_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1c1a1ae87_EliminateScopes(jule::Ptr<_1c189de2a_IR>* _27325_ir) {
	jule::I64 _2749_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_2749_i >= 0LL); (_2749_i)--) {
		{
			jule::Ptr<_1c0cd353b_ImportInfo> _27613_u = (*((*(_27325_ir))))._field_Used[_2749_i];;
			if ((!((*(_27613_u))._field_Binded))) {
				_1c1a1ac56_eliminateScopePackage(&((*(_27613_u))._field_Package));
			};
		}
	_iter_next_1ab95219c:;
	}
	_iter_end_1ab95219c:;;
	_1c1a1ac56_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _1c0eab2b3_typeData(jule::Any* _1714_m) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(((*(_1714_m))).type)));;
}



inline jule::Bool _1c0eab5c1_equalConst(jule::Ptr<_2036445ea_Const> _2115_l, jule::Ptr<_2036445ea_Const> _2126_r) {
	{
		
		if (_2036485bb_IsI64(_2115_l.ptr())) {
			_case_begin_1ab9da323:;
			{
				return (_2036485bb_IsI64(_2126_r.ptr()) && (_203645ec0_ReadI64(_2115_l.ptr()) == _203645ec0_ReadI64(_2126_r.ptr())));;
			}
		}
		else if (_203648852_IsU64(_2115_l.ptr())) {
			_case_begin_1ab9da39a:;
			{
				return (_203648852_IsU64(_2126_r.ptr()) && (_203646256_ReadU64(_2115_l.ptr()) == _203646256_ReadU64(_2126_r.ptr())));;
			}
		}
		else if (_203649105_IsF64(_2115_l.ptr())) {
			_case_begin_1ab9da653:;
			{
				return (_203649105_IsF64(_2126_r.ptr()) && (_203646a09_ReadF64(_2115_l.ptr()) == _203646a09_ReadF64(_2126_r.ptr())));;
			}
		}
		else if (_203648d6e_IsStr(_2115_l.ptr())) {
			_case_begin_1ab9da6b9:;
			{
				return (_203648d6e_IsStr(_2126_r.ptr()) && (_203646773_ReadStr(_2115_l.ptr()) == _203646773_ReadStr(_2126_r.ptr())));;
			}
		}
		else if (_203648ad8_IsBool(_2115_l.ptr())) {
			_case_begin_1ab9da730:;
			{
				return (_203648ad8_IsBool(_2126_r.ptr()) && (_2036464dc_ReadBool(_2115_l.ptr()) == _2036464dc_ReadBool(_2126_r.ptr())));;
			}
		}
		else if (_20364938b_IsNil(_2115_l.ptr())) {
			_case_begin_1ab9da796:;
			{
				return _20364938b_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1ab9da224:;
			{
				return false;;
			}
		}
		_match_end_1ab9da17a:;
	};
}



inline jule::Bool _1c0eab945_equalCasting(jule::Ptr<_1c0c64e90_CastingExprModel> _4017_l, jule::Ptr<_1c0c64e90_CastingExprModel> _4039_r) {
	if ((!(_1c0db0c23_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1c0eac87a_equalModels((*(_4017_l))._field_Expr, (*(_4039_r))._field_Expr);;
}



inline jule::Bool _1c0eabd0d_equalUnary(jule::Ptr<_1c0c63c3b_UnaryExprModel> _4715_l, jule::Ptr<_1c0c63c3b_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*((*(_4735_r))._field_Op))._field_Id) || ((*((*(_4715_l))._field_Op))._field_Kind != (*((*(_4735_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return _1c0eac87a_equalModels((*((*(_4715_l))._field_Expr))._field_Model, (*((*(_4735_r))._field_Expr))._field_Model);;
}



inline jule::Bool _1c0eac182_equalIndexing(jule::Ptr<_1c0c661c2_IndexingExprModel> _5418_l, jule::Ptr<_1c0c661c2_IndexingExprModel> _5441_r) {
	return (_1c0eac87a_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*((*(_5441_r))._field_Expr))._field_Model) && _1c0eac87a_equalModels((*((*(_5418_l))._field_Index))._field_Model, (*((*(_5441_r))._field_Index))._field_Model));;
}



inline jule::Bool _1c0eac506_equalBinary(jule::Ptr<_1c0c63862_BinopExprModel> _5916_l, jule::Ptr<_1c0c63862_BinopExprModel> _5936_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*((*(_5936_r))._field_Op))._field_Id) || ((*((*(_5916_l))._field_Op))._field_Kind != (*((*(_5936_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return (_1c0eac87a_equalModels((*((*(_5916_l))._field_Left))._field_Model, (*((*(_5936_r))._field_Left))._field_Model) && _1c0eac87a_equalModels((*((*(_5916_l))._field_Right))._field_Model, (*((*(_5936_r))._field_Right))._field_Model));;
}



inline jule::Bool _1c0eac87a_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1c0eab2b3_typeData(&(_7016_l)) != _1c0eab2b3_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab9e92ee:;
			{
				return (_7016_l.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8) == _7030_r.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ab9e9376:;
			{
				jule::Ptr<_1c0c683d3_StructSubIdentExprModel> _789_li = _7016_l.cast_ptr<_1c0c683d3_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1c0c683d3_StructSubIdentExprModel> _799_ri = _7030_r.cast_ptr<_1c0c683d3_StructSubIdentExprModel>(&__jule_any_type97);;
				return (((*(_789_li))._field_Field == (*(_799_ri))._field_Field) && _1c0eac87a_equalModels((*((*(_789_li))._field_Expr))._field_Model, (*((*(_799_ri))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ab9e93ed:;
			{
				return _1c0eab5c1_equalConst(_7016_l.cast_ptr<_2036445ea_Const>(&__jule_any_type19), _7030_r.cast_ptr<_2036445ea_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ab9e960c:;
			{
				return _1c0eab945_equalCasting(_7016_l.cast_ptr<_1c0c64e90_CastingExprModel>(&__jule_any_type92), _7030_r.cast_ptr<_1c0c64e90_CastingExprModel>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ab9e9673:;
			{
				return _1c0eabd0d_equalUnary(_7016_l.cast_ptr<_1c0c63c3b_UnaryExprModel>(&__jule_any_type110), _7030_r.cast_ptr<_1c0c63c3b_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ab9e96d9:;
			{
				return _1c0eac182_equalIndexing(_7016_l.cast_ptr<_1c0c661c2_IndexingExprModel>(&__jule_any_type45), _7030_r.cast_ptr<_1c0c661c2_IndexingExprModel>(&__jule_any_type45));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ab9e9750:;
			{
				return _1c0eac506_equalBinary(_7016_l.cast_ptr<_1c0c63862_BinopExprModel>(&__jule_any_type111), _7030_r.cast_ptr<_1c0c63862_BinopExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1ab9e9288:;
			{
				return false;;
			}
		}
		_match_end_1ab9e9189:;
	};
}



inline jule::Bool _1c0eb5e16_isStdPackage(jule::Str* _45118_f, jule::Str _45126_p) {
	return _21cd492ad_HasPrefix((*(_45118_f)), _21cd6b467_Join(jule::Slice<jule::Str>::make({_21d2d524e_PathStdlib,_45126_p})));;
}



inline jule::Bool _1c0eb6224_isConstantValidConditionalCase(jule::Ptr<_1c0cb252b_If>* _45536_i) {
	{
		auto &_match_expr{ (*((*(_45536_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ab9ee8dc:;
			{
				jule::Ptr<_2036445ea_Const> _4589_c = (*((*(_45536_i))))._field_Expr.cast_ptr<_2036445ea_Const>(&__jule_any_type19);;
				return (_203648ad8_IsBool(_4589_c.ptr()) && _2036464dc_ReadBool(_4589_c.ptr()));;
			}
		}
		_match_end_1ab9ee887:;
	};
	return false;;
}



inline jule::Bool _1c0eb64dd_isUnreachableExpr(jule::Any* _46423_expr) {
	{
		auto &_match_expr{ (*(_46423_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ab9eeca5:;
			{
				jule::Ptr<_2036445ea_Const> _4679_c = (*(_46423_expr)).cast_ptr<_2036445ea_Const>(&__jule_any_type19);;
				return (_203648ad8_IsBool(_4679_c.ptr()) && (!(_2036464dc_ReadBool(_4679_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ab9eed1b:;
			{
				jule::Ptr<_1c0c63862_BinopExprModel> _4709_m = (*(_46423_expr)).cast_ptr<_1c0c63862_BinopExprModel>(&__jule_any_type111);;
				if (((*((*(_4709_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1c0eb64dd_isUnreachableExpr(&((*((*(_4709_m))._field_Left))._field_Model)) || _1c0eb64dd_isUnreachableExpr(&((*((*(_4709_m))._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1ab9eec50:;
	};
	return false;;
}



inline jule::Bool _1c0eb682e_isConstantValidMatchCase(jule::Ptr<_1c0cb6d7c_Case>* _47930_case) {
	{
		auto expr = &((*((*(_47930_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba01229:;
		if (it != expr_end) {
			jule::Ptr<_1c0d80352_Data> *_48012_expr = it;
			{
				if (((_1c0d80c26_IsConst((*(_48012_expr)).ptr()) && _203648ad8_IsBool((*((*(_48012_expr))))._field_Constant.ptr())) && _2036464dc_ReadBool((*((*(_48012_expr))))._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1aba01229:;
			++it;
			goto _iter_begin_1aba01229;
		}
		_iter_end_1aba01229:;
	};
	return false;;
}



inline jule::Bool _1c0eb6ae8_isUnreachableConditionalCase(jule::Ptr<_1c0cb252b_If>* _48834_i) {
	return _1c0eb64dd_isUnreachableExpr(&((*((*(_48834_i))))._field_Expr));;
}



inline jule::Bool _1c0eb6db2_isUnreachableMatchCase(jule::Ptr<_1c0cb6d7c_Case>* _49228_case) {
	{
		auto expr = &((*((*(_49228_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba0555d:;
		if (it != expr_end) {
			jule::Ptr<_1c0d80352_Data> *_49312_expr = it;
			{
				if ((!(_1c0eb64dd_isUnreachableExpr(&((*((*(_49312_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1aba0555d:;
			++it;
			goto _iter_begin_1aba0555d;
		}
		_iter_end_1aba0555d:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1c0ec001e_checkForBitShiftOpt(jule::Ptr<_1c0c63367_OperandExprModel>* _47325_l, jule::Ptr<_1c0c63367_OperandExprModel>* _47348_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_203643a17_IsInt(_1c0db08d2_Str((*((*(_47325_l))))._field_Kind.ptr())))) || (!(_203643a17_IsInt(_1c0db08d2_Str((*((*(_47348_r))))._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_47348_r))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aba4de25:;
			{
				goto _match_end_1aba4ee8c;
			}
		}
		else {
			_case_begin_1aba4eee2:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1aba4ee8c:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_203647026_AsU64((*((*(_47348_r))))._field_Model.cast_ptr<_2036445ea_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4875_j = _2035e2d6d_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4885_z = static_cast<jule::U64>(_4875_j);;
	if ((static_cast<jule::F64>(_4885_z) != _4875_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4885_z;
	return __jule_func_result;;
}



inline jule::Bool _1c0ec03d7_areSameLvalueExprModel(jule::Any* _49628_l, jule::Any* _49643_r) {
	{
		auto &_match_expr{ (*(_49628_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aba52e90:;
			{
				return ((*(_49643_r)) == (*(_49628_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1aba53006:;
			{
				{
					auto &_match_expr{ (*(_49643_r)) };
					
					if (_match_expr.type == &__jule_any_type97) {
						_case_begin_1aba53897:;
						{
							goto _match_end_1aba53b3e;
						}
					}
					else {
						_case_begin_1aba53b94:;
						{
							return false;;
						}
					}
					_match_end_1aba53b3e:;
				};
				jule::Ptr<_1c0c683d3_StructSubIdentExprModel> _5099_lsi = (*(_49628_l)).cast_ptr<_1c0c683d3_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_1c0c683d3_StructSubIdentExprModel> _5109_rsi = (*(_49643_r)).cast_ptr<_1c0c683d3_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_5099_lsi))._field_Field != (*(_5109_rsi))._field_Field)) {
					return false;;
				};
				return _1c0ec03d7_areSameLvalueExprModel(&((*((*(_5099_lsi))._field_Expr))._field_Model), &((*((*(_5109_rsi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aba5306c:;
			{
				{
					auto &_match_expr{ (*(_49643_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1aba55c84:;
						{
							jule::Ptr<_1c0c63c3b_UnaryExprModel> _52213_ul = (*(_49628_l)).cast_ptr<_1c0c63c3b_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1c0c63c3b_UnaryExprModel> _52313_ur = (*(_49643_r)).cast_ptr<_1c0c63c3b_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_52213_ul))._field_Op))._field_Id != (*((*(_52313_ur))._field_Op))._field_Id) || ((*((*(_52213_ul))._field_Op))._field_Kind != (*((*(_52313_ur))._field_Op))._field_Kind))) {
								return false;;
							};
							return _1c0ec03d7_areSameLvalueExprModel(&((*((*(_52213_ul))._field_Expr))._field_Model), &((*((*(_52313_ur))._field_Expr))._field_Model));;
						}
					}
					_match_end_1aba55c2e:;
				};
			}
		}
		_match_end_1aba52841:;
	};
	return false;;
}



inline void _1c0ec0b24_doInternalNosafeStobs(_1c0eb7c92_exprOptimizer* _727_op, _1c18a3160_stdCacheData* _747_data, jule::Ptr<_1c0c65842_FnCallExprModel>* _772_m) {
	jule::Any _89_model = jule::Any(jule::new_ptr<_1c0eb0916_InlineStdInternalNosafeStobs>(_1c0eb0916_InlineStdInternalNosafeStobs{._field_Str=(*((*(_772_m))))._field_Args[0LL]}), &__jule_any_type129);;
	{
		(*((*(_727_op))._field_model))=(*(((jule::Any*)((&(_89_model))))));
	};
}



inline void _1c18a3803_buildCache(jule::Ptr<_1c189de2a_IR>* _2720_ir) {
	_1c18a3a45_buildStdInternalNosafeCache(_2720_ir);
}



inline void _1c18a3a45_buildStdInternalNosafeCache(jule::Ptr<_1c189de2a_IR>* _3137_ir) {
	jule::Ptr<_1c0cd6462_Package> _329_p = _1c18a4628_getPackage(_3137_ir, &(_1c18a2c20_stdPackageInternalNosafe));;
	if ((_329_p == nullptr)) {
		return;;
	};
	_1c18a3ddb_pushCache(&(_329_p), jule::Str::lit("Stobs", 5), jule::Fn<void(_1c0eb7c92_exprOptimizer*,_1c18a3160_stdCacheData*,jule::Ptr<_1c0c65842_FnCallExprModel>*)>(_1c0ec0b24_doInternalNosafeStobs));
}



inline void _1c18a3ddb_pushCache(jule::Ptr<_1c0cd6462_Package>* _4119_p, jule::Str _4132_ident, jule::Fn<void(_1c0eb7c92_exprOptimizer*,_1c18a3160_stdCacheData*,jule::Ptr<_1c0c65842_FnCallExprModel>*)> _4144_do) {
	jule::Ptr<_1c0c744aa_FnIns> _429_f = _1c18a42a4_getFunc(_4119_p, &(_4132_ident));;
	_1c18a358e_stdCache[static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_429_f))]=_1c18a3160_stdCacheData{._field_f=_429_f, ._field_do=_4144_do};
}



inline jule::Ptr<_1c0c744aa_FnIns> _1c18a42a4_getFunc(jule::Ptr<_1c0cd6462_Package>* _5017_p, jule::Str* _5031_ident) {
	;
	jule::Ptr<_1c0c715a6_Fn> _529_f = _1c0cd79e6_FindFn((*(_5017_p)).ptr(), (*(_5031_ident)), false);;
	if ((_529_f == nullptr)) {
		return nullptr;;
	};
	return (*(_529_f))._field_Instances[0LL];;
}



inline jule::Ptr<_1c0cd6462_Package> _1c18a4628_getPackage(jule::Ptr<_1c189de2a_IR>* _5920_ir, jule::Str* _5930_path) {
	{
		auto expr = &((*((*(_5920_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abaad902:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> _6017_u = *it;
			{
				if (((*(_6017_u))._field_Std && ((*(_6017_u))._field_LinkPath == (*(_5930_path))))) {
					return (*(_6017_u))._field_Package;;
				};
			}
			_iter_next_1abaad902:;
			++it;
			goto _iter_begin_1abaad902;
		}
		_iter_end_1abaad902:;
	};
	return nullptr;;
}



inline void _1c18a7274_PushOptLevel(jule::I64 _3417_level) {
	jule::Bool _355_l1 = (_3417_level >= static_cast<jule::I64>(1LL));;
	jule::Bool _365_l2 = (_3417_level >= static_cast<jule::I64>(2LL));;
	_1c18a4d65_Copy=_355_l1;
	_1c18a5173_Deadcode=_355_l1;
	_1c18a543c_Append=_355_l1;
	_1c18a574a_Math=_355_l1;
	_1c18a5a14_Access=_355_l1;
	_1c18a5ccd_Inline=_355_l1;
	_1c18a6097_Ptr=_355_l1;
	_1c18a6471_Cond=_355_l1;
	_1c18a673a_Str=_355_l1;
	_1c18a6a04_Slice=_355_l1;
	_1c18a6cbd_Assign=_355_l1;
	_1c18a7087_StdInternalNosafe=_365_l2;
}



inline void _1c1a256ab_detectEnabled(void) {
	_1c1a23137_exprEnabled=((((_1c18a6097_Ptr || _1c18a574a_Math) || _1c18a5a14_Access) || _1c18a6471_Cond) || _1c18a7087_StdInternalNosafe);
	_1c1a233ac_scopeEnabled=(((((_1c18a6471_Cond || _1c18a543c_Append) || _1c18a4d65_Copy) || _1c18a673a_Str) || _1c18a6a04_Slice) || _1c18a6cbd_Assign);
	_1c1a23676_stdEnabled=_1c18a7087_StdInternalNosafe;
}



inline void _1c1a4e3c7_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_21d2d4c43_Exit(1LL);
}



inline jule::U64 _1a885d09a_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::Bool _1a8785577_isCopyOptimizable(jule::Ptr<_1c0d80352_Data>* _82323_expr) {
	if ((!((*((*(_82323_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_82323_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1abb9b0c7:;
			{
				return false;;
			}
		}
		_match_end_1abb9b072:;
	};
	return true;;
}



inline jule::Bool _1a8785940_isIterCopyOptimizable(jule::Ptr<_1c0d80352_Data>* _83427_expr, jule::Ptr<_1c0d2b94c_Var>* _83441_v) {
	if (((!((*((*(_83427_expr))))._field_Lvalue)) && (!(_1c0db1d9a_Mutable((*((*(_83427_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_83441_v))))._field_Mutable)) && (!((*((*(_83427_expr))))._field_Mutable)));;
}



inline jule::Str _1a879ac30_decomposeCommonEsq(jule::U8 _148523_b) {
	{
		auto &_match_expr{ _148523_b };
		
		if (_match_expr == '\\') {
			_case_begin_1abc969ec:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1abc9715c:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1abc96bb7:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1abc96c2d:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1abc96c94:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1abc96d0a:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1abc97327:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1abc9738d:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1abc97404:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1abc9746a:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1abc96b51:;
			{
				return jule::Str();;
			}
		}
		_match_end_1abc8c44e:;
	};
}



inline jule::Str _1a879b03d_sbtoa(jule::U8 _151210_b) {
	if ((_151210_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_151210_b < 128LLU)) {
		jule::Str _15179_seq = _1a879ac30_decomposeCommonEsq(_151210_b);;
		if (!(_15179_seq).empty()) {
			return _15179_seq;;
		};
		if (((32LL <= _151210_b) && (_151210_b <= 126LLU))) {
			return jule::Str::from_byte(_151210_b);;
		};
	};
	jule::Str _15255_seq = _203633c05_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_151210_b)), 8LL);;
	if ((_15255_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _15255_seq);;
	};
	return (jule::Str::lit("\\", 1) + _15255_seq);;
}



inline void _1a879b329_cstrBytes(_21cd5e16e_StrBuilder* _153219_s, jule::Str _153234_ctx) {
	{
		auto expr = &(_153234_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc9b370:;
		if (it != expr_end) {
			jule::U8 *_153312_b = it;
			{
				_21cd67d15_WriteStr(_153219_s, _1a879b03d_sbtoa((*(_153312_b))));
			}
			_iter_next_1abc9b370:;
			++it;
			goto _iter_begin_1abc9b370;
		}
		_iter_end_1abc9b370:;
	};
}



inline void _1a879b659_cstrLit(_21cd5e16e_StrBuilder* _153817_s, jule::Str _153832_ctx) {
	_21cd680bd_WriteByte(_153817_s, '\"');
	_1a879b329_cstrBytes(_153817_s, _153832_ctx);
	_21cd680bd_WriteByte(_153817_s, '\"');
}



inline void _1a879ba00_ftoa(_21cd5e16e_StrBuilder* _154414_s, jule::F64 _154429_f, jule::I64 _154437_bitsize) {
	if ((_154437_bitsize != 32LL)) {
		if ((_154429_f == static_cast<jule::F64>(static_cast<jule::I64>(_154429_f)))) {
			_1a879bcdb_itoa(_154414_s, static_cast<jule::I64>(static_cast<jule::I64>(_154429_f)));
			return;;
		};
		if ((_154429_f == static_cast<jule::F64>(static_cast<jule::U64>(_154429_f)))) {
			_1a879c0c7_utoa(_154414_s, static_cast<jule::U64>(static_cast<jule::U64>(_154429_f)));
			return;;
		};
	};
	jule::Str _15555_m = _20361c55c_FmtFloat(_154429_f, 'f', -1LL, _154437_bitsize);;
	_21cd67d15_WriteStr(_154414_s, _15555_m);
	if ((!(_21cd4e4b1_Contains(_15555_m, jule::Str::lit(".", 1))))) {
		_21cd67d15_WriteStr(_154414_s, jule::Str::lit(".0", 2));
	};
}



inline void _1a879bcdb_itoa(_21cd5e16e_StrBuilder* _156214_s, jule::I64 _156229_x) {
	{
		
		if ((_156229_x == jule::MAX_I64)) {
			_case_begin_1abca1001:;
			{
				_21cd67d15_WriteStr(_156214_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_156229_x == jule::MIN_I64)) {
			_case_begin_1abca1078:;
			{
				_21cd67d15_WriteStr(_156214_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1abca0de1:;
	};
	_21cd67d15_WriteStr(_156214_s, _2036340bd_FmtInt(_156229_x, 10LL));
	if (_21ce123cb_Is64Bit(jule::Str::lit("amd64", 5))) {
		_21cd680bd_WriteByte(_156214_s, 'L');
	};
	_21cd680bd_WriteByte(_156214_s, 'L');
}



inline void _1a879c0c7_utoa(_21cd5e16e_StrBuilder* _157914_s, jule::U64 _157929_x) {
	{
		
		if ((_157929_x == jule::MAX_U64)) {
			_case_begin_1abca3179:;
			{
				_21cd67d15_WriteStr(_157914_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1abca307a:;
	};
	_21cd67d15_WriteStr(_157914_s, _203633c05_FmtUint(_157929_x, 10LL));
	if (_21ce123cb_Is64Bit(jule::Str::lit("amd64", 5))) {
		_21cd680bd_WriteByte(_157914_s, 'L');
	};
	_21cd67d15_WriteStr(_157914_s, jule::Str::lit("LU", 2));
}



inline jule::Bool _1a879c4a1_isForwarded(jule::Ptr<_1c0cb210d_Scope>* _159317_s) {
	jule::Any _15945_last = (*((*(_159317_s))))._field_Stmts[((*((*(_159317_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _15945_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1abca5313:;
			{
				{
					auto &_match_expr{ (*(_15945_last.cast_ptr<_1c0d80352_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1abca617c:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1abca6116:;
						{
							return false;;
						}
					}
					_match_end_1abca60b1:;
				};
			}
		}
		else {
			_case_begin_1abca5412:;
			{
				return true;;
			}
		}
		_match_end_1abca4840:;
	};
}



inline jule::Bool _1a879c76a_isExprComesFromBind(jule::Ptr<_1c0d80352_Data>* _160825_d) {
	{
		auto &_match_expr{ (*((*(_160825_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1abca6875:;
			{
				return (*((*((*(_160825_d))))._field_Model.cast_ptr<_1c0d2b94c_Var>(&__jule_any_type8)))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1abca68db:;
			{
				return (*((*((*((*((*(_160825_d))))._field_Model.cast_ptr<_1c0c683d3_StructSubIdentExprModel>(&__jule_any_type97)))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1abca680e:;
			{
				return false;;
			}
		}
		_match_end_1abca67a9:;
	};
}



inline jule::Bool _1a879ca34_isAny(jule::Ptr<_1c0db0519_TypeKind>* _162015_t) {
	if ((_1c0db36a4_TypeEnum((*(_162015_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1c0db80e3_Prim> _16245_prim = _1c0db2b6a_Prim((*(_162015_t)).ptr());;
	return ((_16245_prim != nullptr) && _1c0dbb811_IsAny(_16245_prim.ptr()));;
}



inline void _1a88723de_iterFiles(jule::Ptr<_1c0cd6462_Package>* _135119_pkg, jule::Fn<void(jule::Ptr<_1c0d7a12c_SymbolTable>*)> _135134_f) {
	{
		auto expr = &((*((*(_135119_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abea8901:;
		if (it != expr_end) {
			jule::Ptr<_1c0d7a12c_SymbolTable> _135217_file = *it;
			{
				_135134_f(&(_135217_file));
			}
			_iter_next_1abea8901:;
			++it;
			goto _iter_begin_1abea8901;
		}
		_iter_end_1abea8901:;
	};
}



inline jule::Str _1a88726ec_concatAllParts(jule::Slice<jule::Ptr<_1c0c25406_Token>> _135819_parts) {
	jule::I64 _13599_n = 0LL;;
	{
		auto expr = &(_135819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abea9605:;
		if (it != expr_end) {
			jule::Ptr<_1c0c25406_Token> *_136012_part = it;
			{
				_13599_n+=(*((*(_136012_part))))._field_Kind.len();
			}
			_iter_next_1abea9605:;
			++it;
			goto _iter_begin_1abea9605;
		}
		_iter_end_1abea9605:;
	};
	if ((_13599_n == 0LL)) {
		return jule::Str();;
	};
	_21cd5e16e_StrBuilder _13669_s = static__21cd5e48d_New(_13599_n);;
	{
		auto expr = &(_135819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abea95a0:;
		if (it != expr_end) {
			jule::Ptr<_1c0c25406_Token> *_136712_p = it;
			{
				_21cd67d15_WriteStr(&_13669_s, (*((*(_136712_p))))._field_Kind);
			}
			_iter_next_1abea95a0:;
			++it;
			goto _iter_begin_1abea95a0;
		}
		_iter_end_1abea95a0:;
	};
	return _21cd6860c_Str(&_13669_s);;
}



inline jule::Bool _1a8872a71_containsTraitMethod(jule::Ptr<_1c0c84850_Trait>* _137429_t, jule::Str* _137441_ident) {
	{
		auto expr = &((*((*(_137429_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abeabb79:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _137512_m = *it;
			{
				if (((*(_137512_m))._field_Ident == (*(_137441_ident)))) {
					return true;;
				};
			}
			_iter_next_1abeabb79:;
			++it;
			goto _iter_begin_1abeabb79;
		}
		_iter_end_1abeabb79:;
	};
	return false;;
}



inline void _1a8872da1_pushMethodsFromInherit(jule::Ptr<_1c0c84850_Trait>* _138632_dest, jule::Ptr<_1c0c84850_Trait>* _138651_src) {
	_1a887318c_pushMethodsFromInherits(_138632_dest, _138651_src);
	{
		auto expr = &((*((*(_138651_src))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abeac64c:;
		if (it != expr_end) {
			jule::Ptr<_1c0c715a6_Fn> _138817_m = *it;
			{
				if ((!(_1a8872a71_containsTraitMethod(_138632_dest, &((*(_138817_m))._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1c0c715a6_Fn>> &__jule_push_dest = (*((*(_138632_dest))))._field_Methods; __jule_push_dest.push(_138817_m); };
				};
			}
			_iter_next_1abeac64c:;
			++it;
			goto _iter_begin_1abeac64c;
		}
		_iter_end_1abeac64c:;
	};
}



inline void _1a887318c_pushMethodsFromInherits(jule::Ptr<_1c0c84850_Trait>* _139733_dest, jule::Ptr<_1c0c84850_Trait>* _139752_src) {
	{
		auto expr = &((*((*(_139752_src))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abead73b:;
		if (it != expr_end) {
			jule::Ptr<_1c0db76db_TypeSymbol> _139817_inh = *it;
			{
				jule::Ptr<_1c0c84850_Trait> _139913_t2 = _1c0db4474_Trait((*(_139817_inh))._field_Kind.ptr());;
				_1a8872da1_pushMethodsFromInherit(_139733_dest, &(_139913_t2));
			}
			_iter_next_1abead73b:;
			++it;
			goto _iter_begin_1abead73b;
		}
		_iter_end_1abead73b:;
	};
}



inline jule::Bool _1a8873456_isOpMethod(jule::Ptr<_1c0c715a6_Fn>* _140516_m) {
	if ((((*((*(_140516_m))))._field_Generics.len() > 0LL) || ((*((*(_140516_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1c0c744aa_FnIns> _14095_mi = (*((*(_140516_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14095_mi == (*((*(_14095_mi))._field_Owner))._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1a8873720_isHeadDecl(jule::Ptr<_1c0c715a6_Fn>* _142120_m) {
	if ((((*((*(_142120_m))))._field_Generics.len() > 0LL) || ((*((*(_142120_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1a8873456_isOpMethod(_142120_m)) {
		return true;;
	};
	jule::Ptr<_1c0c744aa_FnIns> _14289_mi = (*((*(_142120_m))))._field_Instances[0LL];;
	;
	return static__1c0d2cd9e_Dispose(_1c0c60441_FindMethod((*(_14289_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Ptr<_1c0c39e10_Directive> _1a88822de_findDirective(jule::Slice<jule::Ptr<_1c0c39e10_Directive>>* _48023_directives, jule::Str _48054_tag) {
	{
		auto expr = _48023_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac100b7a:;
		if (it != expr_end) {
			jule::Ptr<_1c0c39e10_Directive> _48117_dr = *it;
			{
				if (((*((*(_48117_dr))._field_Tag))._field_Kind == _48054_tag)) {
					return _48117_dr;;
				};
			}
			_iter_next_1ac100b7a:;
			++it;
			goto _iter_begin_1ac100b7a;
		}
		_iter_end_1ac100b7a:;
	};
	return nullptr;;
}



inline jule::Bool _1a88826a7_hasDirective(jule::Slice<jule::Ptr<_1c0c39e10_Directive>>* _49018_directives, jule::Str _49049_tag) {
	return (_1a88822de_findDirective(&((*(_49018_directives))), _49049_tag) != nullptr);;
}



inline jule::Bool _1a8882971_shouldInitialized(jule::Ptr<_1c0db0519_TypeKind>* _49727_t) {
	jule::Ptr<_1c0db80e3_Prim> _4985_prim = _1c0db2b6a_Prim((*(_49727_t)).ptr());;
	if ((_4985_prim != nullptr)) {
		return ((!(_1c0dbb811_IsAny(_4985_prim.ptr()))) && (!(_1c0dbb57a_IsStr(_4985_prim.ptr()))));;
	};
	{
		
		if ((_1c0db2e01_Sptr((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1ac10382b:;
			{
				return false;;
			}
		}
		else if ((_1c0db470a_Map((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1ac103892:;
			{
				return false;;
			}
		}
		else if ((_1c0db3bc1_Slc((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1ac103919:;
			{
				return false;;
			}
		}
		else if ((_1c0db4474_Trait((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1ac103991:;
			{
				return false;;
			}
		}
		else if ((_1c0db3e57_Fn((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1ac103a18:;
			{
				return false;;
			}
		}
		else if ((_1c0db393a_Arr((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1ac103a90:;
			{
				jule::Ptr<_1c0dbe913_Arr> _51413_arr = _1c0db393a_Arr((*(_49727_t)).ptr());;
				return _1a8882971_shouldInitialized(&((*(_51413_arr))._field_Elem));;
			}
		}
		else if ((_1c0db41dd_Struct((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1ac103b17:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ac102ac2:;
			{
				return true;;
			}
		}
		_match_end_1ac1028a2:;
	};
}



inline void _21d2d9242_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _21d2d94b7_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_21d2d9242_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _419_max = _21d2d9055_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_21d2d9055_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee71b09:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _439_n = (*(_4212_k))[0LL].len();;
				if ((_439_n > _419_max)) {
					_419_max=_439_n;
				};
			}
			_iter_next_1bee71b09:;
			++it;
			goto _iter_begin_1bee71b09;
		}
		_iter_end_1bee71b09:;
	};
	_21cd5e16e_StrBuilder _499_s = static__21cd5e48d_New(32LL);;
	;
	{
		auto expr = &(_21d2d9055_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee73116:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_21cd67d15_WriteStr(&_499_s, (*(_5112_part))[0LL]);
				_21cd67d15_WriteStr(&_499_s, _21cd489b6_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(((_419_max - (*(_5112_part))[0LL].len()) + 5LL))));
				_21cd67d15_WriteStr(&_499_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_21cd680bd_WriteByte(&_499_s, '\n');
				};
			}
			_iter_next_1bee73116:;
			++it;
			_519_i++;
			goto _iter_begin_1bee73116;
		}
		_iter_end_1bee73116:;
	};
	jule::outln(_499_s);
}



inline void _21d2d96e8_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_21d2d9242_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.15 @master", 18));
}



inline void _21d2d98e6_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _21d2d9a6c_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _21d2d9c9d_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_21d2d9242_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1055_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1055_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1bee79150:;
			{
				_21d2d98e6_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1bee79073:;
			{
				_21d2d9a6c_toolDistarch();
			}
		}
		else {
			_case_begin_1bee78858:;
			{
				_21d2d9242_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1055_cmd));
			}
		}
		_match_end_1bee78b33:;
	};
}



inline void _21d2d9ece_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_21d2d9242_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str::lit("architecture: amd64", 19));
	jule::outln(jule::Str::lit("operating system: linux", 23));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _21a9570aa_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _21a9574ea_CppStd));
}



inline void _21d2da2dc_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_21d2d9242_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1bee7c85c:;
			{
				({
					auto except = static__21b9bcb25_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_21d2d9242_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1bee7c252:;
			{
				_21d2d9242_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1bee7c3a6:;
	};
}



inline jule::Bool _21d2da5a6_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1bee7dde1:;
			{
				_21d2d94b7_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1bee7de57:;
			{
				_21d2d96e8_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1bee7debd:;
			{
				_21d2d9c9d_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1bee7e034:;
			{
				_21d2d9ece_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1bee7d72b:;
			{
				_21d2da2dc_mod(_15320_args);
			}
		}
		else {
			_case_begin_1bee7d6b5:;
			{
				return false;;
			}
		}
		_match_end_1bee7d0aa:;
	};
	return true;;
}



inline void _21d2da72c_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1899_args = _21ba921d3_Args();;
	if ((_1899_args.len() < 2LL)) {
		_21d2da72c_showInfo();
		return;;
	};
	if (_21d2da5a6_processCommand(&(_1899_args))) {
		return;;
	};
	_1a8bbebd1_compileCommand(&(_1899_args));
}



inline void _1a8bbb9d0_init(void) {
	_21a9570aa_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_21b9bbcbc_File> _1a8bbbcaa_openOutput(jule::Str* _4316_path) {
	jule::Str _445_dir = _21cd6c15a_Dir((*(_4316_path)));;
	({
		auto except = static__21b9b1872_Of(_445_dir);
		if (!except.ok()) {
			({
				auto except = static__21cd6e6ce_Create(_445_dir);
				if (!except.ok()) {
					_1c1a4e3c7_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__21b9bc4b5_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1c1a4e3c7_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1a8bbbe31_clearObjects(void) {
	({
		auto except = static__21b9aeee1_Remove(_1a8bbd130_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__21cd6e910_Remove(_1a8bbb282_OutDir);
}



inline void _1a8bbc261_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_21d2830a9_Cmd> _739_cmd = static__21d2834c7_New(_7214_compiler);;
	(*(_739_cmd))._field_Args=_21cd4e13c_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _21d2836c5_Spawn(_739_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1bee84e4c:;
					{
						static__1c1a4a758_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1bee84578:;
					{
						static__1c1a4a758_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1bee84787:;
					{
						static__1c1a4a758_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1bee846dd:;
			};
			_1c1a4e3c7_Throw(jule::Str());
		}
	});
	jule::I64 _865_status = ({
		auto except = _21d283b59_Wait(_739_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:15"));
		(except.result);
	});;
	if ((_865_status != 0LL)) {
		jule::Str _889_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _21a9570aa_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1c1a4a758_Print(jule::Str::lit("\033[31m", 5), _889_errorMessage);
		_1c1a4e3c7_Throw(jule::Str());
	};
	_1a8bbbe31_clearObjects();
}



inline jule::Bool _1a8bbc52a_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1005_offset = _21cd4c998_FindLastByte(_9920_path, '.');;
	if ((_1005_offset == -1LL)) {
		return false;;
	};
	return _21ce00c7c_IsValidCppExt(_9920_path.slice(_1005_offset));;
}



inline void _1a8bbc75b_pushCompCmdClang(_21cd5e16e_StrBuilder* _10726_cmd) {
	_21cd67d15_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_21cd67d15_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _21a9574ea_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bee873b1:;
			{
				_21cd67d15_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bee88439:;
			{
				_21cd67d15_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bee884a0:;
			{
				_21cd67d15_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1bee87988:;
	};
	_21cd680bd_WriteByte(_10726_cmd, ' ');
	if (_21a9586a5_Production) {
		_21cd67d15_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_21cd67d15_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_21cd67d15_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_21cd67d15_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_21cd67d15_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1a8bbc98c_pushCompCmdGcc(_21cd5e16e_StrBuilder* _13324_cmd) {
	_21cd67d15_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_21cd67d15_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _21a9574ea_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bee8b580:;
			{
				_21cd67d15_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bee89abc:;
			{
				_21cd67d15_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bee89b33:;
			{
				_21cd67d15_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1bee8b52a:;
	};
	_21cd680bd_WriteByte(_13324_cmd, ' ');
	if (_21a9586a5_Production) {
		_21cd67d15_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_21cd67d15_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_21cd67d15_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_21cd67d15_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1a8bbce21_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1c189de2a_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1606_compiler = &(_21a9572ca_CompilerPath);;
	_21cd5e16e_StrBuilder _1619_cmd = static__21cd5e48d_New(64LL);;
	{
		auto &_match_expr{ _21a9570aa_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bee8e143:;
			{
				_1a8bbc98c_pushCompCmdGcc(&(_1619_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bee8e770:;
			{
				_1a8bbc75b_pushCompCmdClang(&(_1619_cmd));
			}
		}
		_match_end_1bee8e30d:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee8e990:;
		if (it != expr_end) {
			jule::Ptr<_1c0cd353b_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _1a8bbc52a_isCppSourceFile((*((*(_17112_u))))._field_Path))) {
					_21cd67d15_WriteStr(&_1619_cmd, (*((*(_17112_u))))._field_Path);
					_21cd680bd_WriteByte(&_1619_cmd, ' ');
				};
			}
			_iter_next_1bee8e990:;
			++it;
			goto _iter_begin_1bee8e990;
		}
		_iter_end_1bee8e990:;
	};
	if (!(_1a8bbb826_Out).empty()) {
		_21cd67d15_WriteStr(&_1619_cmd, jule::Str::lit("-o ", 3));
		_21cd67d15_WriteStr(&_1619_cmd, _1a8bbb826_Out);
		_21cd680bd_WriteByte(&_1619_cmd, ' ');
	};
	_21cd67d15_WriteStr(&_1619_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee92564:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_21cd680bd_WriteByte(&_1619_cmd, ' ');
				_21cd67d15_WriteStr(&_1619_cmd, (*(_18612_pass)));
			}
			_iter_next_1bee92564:;
			++it;
			goto _iter_begin_1bee92564;
		}
		_iter_end_1bee92564:;
	};
	if (_21d2d5d32_Os.equal("windows", 7)) {
		_21cd67d15_WriteStr(&_1619_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1606_compiler));
	__jule_func_result.__jule_result_arg1 = _21cd6860c_Str(&_1619_cmd);
	return __jule_func_result;;
}



inline jule::Str _1a8bbd130_getCompilePath(void) {
	return _21cd6b467_Join(jule::Slice<jule::Str>::make({_1a8bbb282_OutDir,_1a8bbb55c_OutName}));;
}



inline void _1a8bbd361_applyTargetIndependentOptimizations(jule::Ptr<_1c189de2a_IR>* _20545_ir) {
	jule::Ptr<_1c1a2390c_Optimizer> _2069_opt = static__1c1a23d4c_New(_20545_ir);;
	_1c1a25436_Optimize(_2069_opt.ptr());
}



inline void _1a8bbd4d7_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _21a9570aa_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1bee93851:;
			{
				_1c1a4e3c7_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bee94aa5:;
			{
				if ((_21a9572ca_CompilerPath).empty()) {
					_21a9572ca_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bee94786:;
			{
				if ((_21a9572ca_CompilerPath).empty()) {
					_21a9572ca_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1bee94720:;
			{
				_1c1a4e3c7_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _21a9570aa_Compiler));
			}
		}
		_match_end_1bee94335:;
	};
}



inline void _1a8bbd718_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1c1a4e3c7_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1a8bbd949_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1c1a4e3c7_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1a8bbdb7a_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1c1a4e3c7_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2485_parts = _21cd4e13c_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2485_parts.len() != 2LL)) {
		_1c1a4e3c7_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2535_os;;
	jule::Str _2539_arch;;
	({
		jule::Str ___jule_assign_arg = _2485_parts[0LL];
		jule::Str _1___jule_assign_arg = _2485_parts[1LL];
		_2535_os = ___jule_assign_arg;
		_2539_arch = _1___jule_assign_arg;
	});
	if ((!_2535_os.equal("native", 6))) {
		_1a8bbd949_checkTargetOs(_2535_os);
		_21d2d5d32_Os=_2535_os;
	};
	if ((!_2539_arch.equal("native", 6))) {
		_1a8bbd718_checkTargetArch(_2539_arch);
		_21d2d60eb_Arch=_2539_arch;
	};
	_2036386dd_UpdateTarget();
}



inline void _1a8bbddab_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1c1a4e3c7_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1bee9adca:;
			{
				goto _match_end_1bee9ae63;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1bee9b34d:;
			{
				_1c18a7274_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else if (_match_expr == jule::Str::lit("L2", 2)) {
			_case_begin_1bee9b3b4:;
			{
				_1c18a7274_PushOptLevel(static_cast<jule::I64>(2LL));
			}
		}
		else {
			_case_begin_1bee9b2d7:;
			{
				_1c1a4e3c7_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1bee9ae63:;
	};
}



inline void _1a8bbe241_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _21a9574ea_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bee9b42a:;
			{
				goto _match_end_1bee9c508;
			}
		}
		else {
			_case_begin_1bee9c1d9:;
			{
				_1c1a4e3c7_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _21a9574ea_CppStd));
			}
		}
		_match_end_1bee9c508:;
	};
}



inline jule::Slice<jule::Str> _1a8bbe4a5_checkFlags(jule::Slice<jule::Str>* _29416_args) {
	jule::Str _2959_opt = jule::Str::lit("L0", 2);;
	jule::Str _2969_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1a8bb627c_FlagSet> _2989_fs = static__1a8bb6568_New();;
	_1bee9e065_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2959_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1bee9e065_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2969_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1bee9e065_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1a8bbb826_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21a95771a_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21a95797e_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1bee9e065_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_21a9570aa_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1bee9e065_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_21a9572ca_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21a9586a5_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21a958012_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_21a9583db_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1bee9e065_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_21a9574ea_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c18a4d65_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c18a5173_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c18a543c_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c18a574a_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c18a5a14_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c18a5ccd_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c18a6097_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c18a6471_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c18a673a_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c18a6a04_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c18a6cbd_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1beea73c0_AddVar(_2989_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c18a7087_StdInternalNosafe)))), jule::Str::lit("opt-internal-nosafe", 19), 0LL, jule::Str::lit("Special optimizations for std::internal::nosafe", 47));
	jule::Slice<jule::Str> _3249_content = ({
		auto except = _1a8bb7404_Parse(_2989_fs.ptr(), (*(_29416_args)));
		(except.ok()) ? (except.result) : ({
			_1c1a4e3c7_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1a8bbd4d7_checkCompilerFlag();
	_1a8bbe241_checkCppStdFlag();
	_1a8bbdb7a_checkTargetFlag(&(_2969_target));
	_1a8bbddab_checkOptFlag(&(_2959_opt));
	return _3249_content;;
}



inline void _1a8bbe6d6_setupSemaFlags(jule::I64* _33724_flags) {
	if (_21a95771a_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1c189de2a_IR> _1a8bbe9a0_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3445_content = _1a8bbe4a5_checkFlags(_34313_args);;
	jule::I64 _3469_semaFlags = static_cast<jule::I64>(0LL);;
	_1a8bbe6d6_setupSemaFlags(&(_3469_semaFlags));
	if ((_3445_content.len() == 0LL)) {
		_1c1a4e3c7_Throw(_21ce0cccd_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3445_content.len() > 1LL)) {
		_1c1a4e3c7_Throw((jule::Str::lit("undefined content: ", 19) + _3445_content[1LL]));
	};
	jule::Str _3549_path;;
	jule::Bool _35415_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21cd6b9ea_Abs(_3445_content[0LL]);
		_3549_path = __jule_assign_result.__jule_result_arg0;
		_35415_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35415_ok))) {
		_1c1a4e3c7_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_21b9be5b6_Status> _3605_inf = ({
		auto except = static__21b9b1872_Of(_21d2d524e_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1c1a4e3c7_Throw(_21ce0cccd_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_21b9be5b6_Status>(nullptr);});
	});;
	if ((!(_21b9be990_IsDir(_3605_inf.ptr())))) {
		_1c1a4e3c7_Throw(_21ce0cccd_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1c189de2a_IR> _3689_ir;;
	jule::Slice<_21ce0c86b_Log> _36813_logs;;
	({
		__jule_tuple_x_1c189de2a_IR__jule_tuple_s_21ce0c86b_Log __jule_assign_result = static__1c189e38c_Build(_3549_path, _3469_semaFlags);
		_3689_ir = __jule_assign_result.__jule_result_arg0;
		_36813_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3689_ir == nullptr) && (_36813_logs == nullptr))) {
		_1c1a4e3c7_Throw(_21ce0cccd_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3549_path, &__jule_any_type4)})));
	};
	if ((_36813_logs != nullptr)) {
		static__1c1a4d904_PrintLogs(&(_36813_logs));
		_1c1a4e3c7_Throw(jule::Str());
	};
	return _3689_ir;;
}



inline void _1a8bbebd1_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	((*(_38324_args))).mut_slice(1LL);;
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_21a957c48_Test=true;
		((*(_38324_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1c189de2a_IR> _3899_ir = _1a8bbe9a0_buildIr(_38324_args);;
	;
	if ((!(_21a957c48_Test))) {
		jule::Ptr<_1c0c715a6_Fn> _39413_main = _1c0cd79e6_FindFn((*(_3899_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_39413_main == nullptr)) {
			_1c1a4e3c7_Throw(_21ce0cccd_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1a8bbd361_applyTargetIndependentOptimizations(&(_3899_ir));
	_1c18a0404_Order(_3899_ir.ptr());
	jule::Str _4055_compPath = _1a8bbd130_getCompilePath();;
	jule::Str _4065_compiler;;
	jule::Str _40615_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1a8bbce21_genCompileCmd(_4055_compPath, &(_3899_ir));
		_4065_compiler = __jule_assign_result.__jule_result_arg0;
		_40615_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1a8865459_ObjectCoder> _4089_oc = static__1a8865855_New(&(_3899_ir), _1a8863941_SerializationInfo{._field_Compiler=_4065_compiler, ._field_CompilerCommand=_40615_compilerCmd});;
	if (_21a957c48_Test) {
		jule::Ptr<_1a879d8d1_TestCoder> _41313_tc = static__1a879dd21_New(&(_4089_oc));;
		_1a87a0196_Serialize(_41313_tc);
	} else {
		_1a8872004_Serialize(_4089_oc);
	};
	jule::Ptr<_21b9bbcbc_File> _4199_file = _1a8bbbcaa_openOutput(&(_4055_compPath));;
	({
		auto except = _21b9b0475_Write(_4199_file.ptr(), _21cd690ad_Buf(&(*(_4089_oc))._field_Obj));
		if (!except.ok()) {
			_1c1a4e3c7_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _21b9bda5a_Close(_4199_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:5"));
	});
	if ((!(_21a95797e_Transpilation))) {
		_1a8bbc261_compileIr(_4065_compiler, _40615_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_21d2d622d_init();
	_203638864_init();
	_1a8bbb9d0_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}